<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Hacker News: Front Page</title>
        <link>https://news.ycombinator.com/</link>
        <description>Hacker News RSS</description>
        <lastBuildDate>Mon, 08 Sep 2025 13:42:18 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>github.com/Prabesh01/hnrss-content-extract</generator>
        <language>en</language>
        <atom:link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/frontpage.rss" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[No more data centers: Ohio township pushes back against influx of Amazon, others]]></title>
            <link>https://www.usatoday.com</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45167729</guid>
            <description><![CDATA[USA TODAY delivers current national and local news, sports, entertainment, finance, technology, and more through award-winning journalism, photos, and videos.]]></description>
            <content:encoded><![CDATA[Brutally honest reviews of every VMAs performanceThis NFL team's stunning, impossible win is an instant classicAmerica's moms love their jobs. Why are so many leaving them? Amy Coney Barrett says 'I'm nobody's justice.' That includes Trump.Palestinian gunmen kill six at Jerusalem bus stop'Empathy isn't the stuff of legal decisions'. Amy Coney Barrett takeawaysSee photos: Total lunar eclipse turns September's full moon redFeatured VideosFor YouWhich topics matter most to you? Add your favorites and you’ll see more of these stories in the For You section.View For YouMore Top Stories Why this may be America’s most inclusive city for… Is Howard Stern leaving his SiriusXM show? NFL winners, losers of Week 1: How does one contender… Hawaii braces for 'life-threatening surf' as Hurricane… Fall 2025: See when and where fall colors will peak Democrats are falling for Trump's 'invasion' trap. It's… Penn State still leads Ohio State amid big changes in… When is the 2025 Apple Event? Date, start time and how… Ariana Grande takes home video of the year following… Jeep and BMW among recalled vehicles: See recent car… Shows similar to 'The Summer I Turned Pretty' to watch… We found a $20 promo code at Champs Sports: Save on New…Discover Highlights from the 2025 US Open        In Untested, detective tracks a serial sex offender        See Jason Momoa, more stars at Venice Film Festival        Pope canonizes first millennial Catholic saint This NFL team's stunning, impossible win is an… NFL winners, losers of Week 1: How does one… Penn State still leads Ohio State amid big… Biggest overreactions from Week 1 of 2025 NFL…More in SportsShave, brush, trim and more with the Panasonic… Get $20 pillow slippers with over 6,000 five-star… Target's exclusive Stanley Halloween tumblers are… Does your dog have allergies? This at-home…More in ShoppingJoni Ernst is out of Iowa's Senate race. Here's… John Roberts' 20 years: A big rightward turn for… Man accused of plotting to assassinate Donald…Trump defends Chicago military threatMore in PoliticsSee the week’s best celebrity photos 📸 See snakes, turtles and more at the New York…Howard Stern's career, from shock jock to 'king…VMAs most outrageous looks: From a labubu to…More in News in PicturesWhy you should upgrade your vacuum What are the kids saying? Learn the trendy… 5-month-old feline rescued from dark storm drain Video shows moment police find 5-year-old alone…More in Trending VideoAmerica's moms love their jobs. Why are so many… Who won the Powerball? What we know about the… Does the auto start-stop feature really save fuel? Why are electricity bills so high now? What to…More in MoneyShe had a stroke at 27. It’s a growing problem… 8 reasons volleyball is better for you than you… What is broccolini – and should you be eating it? Is your bathroom routine 'normal'? Here’s what…More in Wellness8 reasons volleyball is better for you than you… What is broccolini – and should you be eating it? Is your bathroom routine 'normal'? Here’s what… 3 big cream cheese health concernsMore in Just CuriousAfter Sandy Hook, it's clear politicians won't… Zuckerberg says he'll defend free speech. He may… Schools should listen to parents, not activists… Democrats are falling for Trump's 'invasion' trap…More in OpinionSee the week’s best celebrity photos 📸 Debby Ryan is pregnant: Disney alum expecting… Prince Harry returns to the UK, stirring rumors… Rick Davies dies: Supertramp singer and musician…More in EntertainmentWhat to know before you take an electric… Thinking of moving abroad? Here’s where expats… Travelers won't get extra compensation for flight… Spirit Airlines cancels 11 routes amid bankruptcy…More in TravelA $2B NHL team seized control of youth hockey… Top Trump officials' stock sales clustered before… Guitars and booze: How Canadians are reluctant… Farmers face a fork on Trump's immigration…More in InvestigationsCracking down on ultrapotent nitazenes Ultrapotent nitazenes present a new front in the…Man accused of plotting to assassinate Donald… Hawaii braces for 'life-threatening surf' as…More in U.S. NewsInteractive fall foliage maps predict 2025 fall… 8 lip-smacking tailgate recipes for your next… Our 10 favorite adults-only, all-inclusive… 10 reasons why fall in British Columbia is magicalMore in USA TODAY 10BESTWhen is the 2025 Apple Event? Date, start time… When does the iPhone 17 release? What we know… What's being unveiled at the 2025 Apple event… Automakers turn windshields into screens with…More in Tech]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Meta suppressed research on child safety, employees say]]></title>
            <link>https://www.washingtonpost.com/investigations/2025/09/08/meta-research-child-safety-virtual-reality/</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45167705</guid>
            <description><![CDATA[The company’s lawyers intervened to shape research that might have shed light on risks in virtual reality, four current and former staffers have told Congress. Meta denies the allegations.]]></description>
            <content:encoded><![CDATA[At her home in western Germany, a woman told a team of visiting researchers from Meta that she did not allow her sons to interact with strangers on the social media giant’s virtual reality headsets. Then her teenage son interjected, according to two of the researchers: He frequently encountered strangers, and adults had sexually propositioned his little brother, who was younger than 10, numerous times.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[ICEBlock handled my vulnerability report in the worst possible way]]></title>
            <link>https://micahflee.com/iceblock-handled-my-vulnerability-report-in-the-worst-possible-way/</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45167534</guid>
            <description><![CDATA[Last week, I wrote about how Joshua Aaron's ICEBlock app, which allows people to anonymously report ICE sightings within a 5-mile radius, is – unfortunately, and despite apparent good intentions – activism theater. This was based on Joshua's talk at HOPE where he made it clear that he isn't taking the advice of local community groups, that ICE sightings aren't verified in any way, and that he doesn't know what he's doing when it comes to security and privacy.

In that post, in the section about]]></description>
            <content:encoded><![CDATA[
            
                    
                        
                            
        
    
                    

                
                    Last week, I wrote about how Joshua Aaron's ICEBlock app, which allows people to anonymously report ICE sightings within a 5-mile radius, is – unfortunately, and despite apparent good intentions – activism theater. This was based on Joshua's talk at HOPE where he made it clear that he isn't taking the advice of local community groups, that ICE sightings aren't verified in any way, and that he doesn't know what he's doing when it comes to security and privacy.In that post, in the section about his "HIGHLY secure" server that he kept mentioning, I wrote:Without providing more details, I also discovered that his server is running outdated software with known vulnerabilities.I was intentionally vague because I knew that his server was vulnerable at the time of writing, and I didn't want anyone to exploit one of these vulnerabilities before he had a chance to fix it.ICEBlock has been downloaded over one million times from the App Store. I don't know whether Joshua's server stores data related to these users or the reports they submit, but it might, and he certainly bragged about the security of it in his HOPE talk.I'm publishing this because it's important for people who are trusting ICEBlock to know that the developer is careless about computer security, even when people specifically point out security issues and give him time to fix them. Hopefully his server doesn't have any user data. Hopefully no one will hack his server despite the fact that he's making it easy for them to. And hopefully this blog post will compel him to finally fix the issue.Joshua runs two Bluesky accounts: @iceblock.app, the account of the ICEBlock app, and @joshua.stealingheather.com‬, Joshua's personal account. His personal account had DMs closed, but the ICEBlock account had DMs open, so I sent him DMs there.On September 1, I wrote:Hey Joshua, I'm one of the people who saw your HOPE talk and asked some of the questions. I'm giving you a heads up that I'm preparing to publish a blog post about the app and your talk that isn't very flattering. But also, I wanted to give you notice that you're running a vulnerable version of Apache on your linode server. I'm not mentioning this specifically, but you should install updatesYou seem to be running Apache httpd 2.4.57. See https://httpd.apache.org/security/vulnerabilities_24.html for more details, but this version of Apache has multiple critical CVEs which could take over your server. Like for example, this one https://nvd.nist.gov/vuln/detail/CVE-2024-38476Then, an hour and a half later, I published my blog and sent him my Bluesky post about it:I wrote about @iceblock.app, the developer's infuriating HOPE talk, and how it's unfortunately basically activism theater micahflee.com/unfortunatel...— Micah Lee (@micahflee.com) 2025-09-01T22:56:27.196ZHe didn't respond from the @iceblock.app account other than blocking me. (Which, honestly, isn't very fair, since I'm not ICE.)Screenshot from Bluesky of @iceblock.app blocking me after my responsible disclosureHe did, however, send me a DM from his @joshua.stealingheather.com account, saying:It would be so great if you could stop lying about me and ICEBlock. You are doing nothing to help. You don’t know me, my history, my knowledge, or anything more than hearing me at Hope.Don’t bother responding because this will be my last and only communication with you. Do better.To which I replied:If I got anything wrong in my blog post, please let me know and I’d be happy to post a correctionHere's a screenshot of the exchange.Screenshot from Bluesky DMs with @joshua.stealingheather.com telling me I'm lying about him and his appA few days later, on September 3, I decided to check again. His server was still running Apache 2.4.57, which has multiple vulnerabilities. He ignored my report and didn't fix it.And just so you know, fixing this problem is extremely easy. He just needs to SSH in and run something like sudo apt update && sudo apt upgrade, wait for the Apache updated package to install, and his server would no longer be vulnerable.Seeing that he wasn't taking this seriously, I decided to give him a deadline to patch his server before I publicly disclosed the vulnerability. I sent his @joshua.stealingheather.com account these messages:Hey Joshua, I noticed that you still haven't updated Apache on your server. I disclosed that you're running Apache 2.4.57, which has known critical vulnerabilities, on September 1. I don't know what data (if any) related to [ICEBlock] and its users that you store on your server. But until you update Apache, it might be trivial for anyone to hack your server and steal all of it. So, please install updates.I'm giving you a week from when I first disclosed this before I write about it (so, September 8), which should give you more than enough time to update a package.Just so you're aware, I determined the version of Apache using nmap's version detection feature. You can run nmap -p443 -sV iceblock.app to test the version yourself, and it should show you this:PORT STATE SERVICE VERSION443/tcp open ssl/http Apache httpd 2.4.57 ((Unix) OpenSSL/3.0.9)As a reminder, you can find the known vulnerabilities for this version of Apache here: https://httpd.apache.org/security/vulnerabilities_24.htmlAnd, as I showed you before, just one of the vulns is CVE-2024-38476, which you can read about here: https://nvd.nist.gov/vuln/detail/CVE-2024-38476. This is a "critical" vulnerability that could potentially be used to execute scripts on your server. Please get back to me.He didn't get back to me. And an hour and a half later, he blocked me from this account too.Screenshot from Bluesky DMs with @joshua.stealingheather.com, where I disclose his vulnerability again, and he blocks meIt's now been a week, and I checked again: Joshua's "HIGHLY secure" server is still running a version of Apache with multiple known critical vulnerabilities. And even with plenty of time to fix the issue, he still hasn't.I hope he isn't storing any ICEBlock-related data on there.
                    
                

                    

                
            
    ]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Package Managers Are Evil]]></title>
            <link>https://www.gingerbill.org/article/2025/09/08/package-managers-are-evil/</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45167394</guid>
            <description><![CDATA[n.b. This is a written version of a dialogue from a YouTube video: 2 Language Creators vs 2 Idiots | The Standup
Package managers (for programming languages) are evil1.
To start, I need to make a few distinctions between concepts a lot of programmers mix up:
A package Package Repositories Build Systems Package Managers These are all separate and can have no relation to one another. I have nothing wrong with packages, in fact Odin has packages built into the language. I have nothing wrong with repositories, as that’s how a lot of people discover new packages—a search engine, something I think everyone uses on a daily basis2. Build systems are usually language dependent/specific, and for Odin I have tried minimize the need for a build system entirely (at least as a separate thing) where most projects will build with odin build ., which works due to the linking information being defined in the source code itself with the foreign system. This leaves package managers; what do they do?]]></description>
            <content:encoded><![CDATA[


	
	
	
		2025-09-08
		

n.b. This is a written version of a dialogue from a YouTube video: 2 Language Creators vs 2 Idiots | The Standup
Package managers (for programming languages) are evil1.
To start, I need to make a few distinctions between concepts a lot of programmers mix up:

A package
Package Repositories
Build Systems
Package Managers

These are all separate and can have no relation to one another. I have nothing wrong with packages, in fact Odin has packages built into the language. I have nothing wrong with repositories, as that’s how a lot of people discover new packages—a search engine, something I think everyone uses on a daily basis2. Build systems are usually language dependent/specific, and for Odin I have tried minimize the need for a build system entirely (at least as a separate thing) where most projects will build with odin build ., which works due to the linking information being defined in the source code itself with the foreign system. This leaves package managers; what do they do?
What do package managers do?
Package managers download packages from a repositories, handles the dependencies and tries to fix them, and then it downloads its dependencies, and its dependencies, and its dependencies… and you can probably see where my criticism is going.
This is the automation of dependency hell. The problem is that not everything needs to be automated, especially hell. Dependency hell is a real thing which anyone who has worked on a large project has experienced. Projects having thousands, if not tens of thousands, of dependencies where you don’t know if they work properly, where are the bugs, you don’t how anything is being handled—it’s awful.
This the wrong thing to automate. You can do this manually, however it doesn’t stop you getting into hell, rather just slow you down, as you can put yourself into hell (in fact everyone puts themselves into hell voluntarily). The point is it makes you think how you get there, so if you have to download manually, you will start thinking “maybe I don’t want this” or “maybe I can do this instead”. And when you need to update packages, being manual forces you to be very careful.
That’s my general criticism: the unnecessary automation.
What package managers sadly do
Most packages managers usually have to define what a package is, because the language itself does not have a well defined concept of a package in the language. JavaScript is great example of this as there are multiple different package managers for the language (npm being one of the most popular), but because each package manager defines the concept of a package differently, it results in the need for a package manager manager. Yes… this is a real thing.
This is why I am saying it is evil, as it will send you to hell quicker.
Mitigations in some languages
When using some languages, such as Go, most people don’t seem to need many third-party packages even though Go has a built-in package manager. The entrance to hell seems to far and hard to get to3. The reason such languages don’t fall into this trap as quickly is that those languages have a really good core/standard library—batteries included. When using Go for example, you don’t need any third-party libraries to make a web server, Go has it all there and you are done. Go even has Go compiler built into the standard library; in fact it has two, a high level one for tooling and one which is the actual compiler itself4.
The meaning of dependency
In real life, when you have a dependency, you are responsible for it5. If the thing that is dependent on you does something wrong, like a child or business, you might end up in jail, as you are responsible for that. Package dependencies are not that far different but people trust them with little-to-no verification. And when something goes wrong, you are on the hook to maintain it. It is a thing you should worry about and take care of.
A common thing that people bring up about package managers are security risks. There are indeed serious problems, especially when you blindly trust things you have just randomly started depending from off the internet. However for my needs, those are not even the biggest worries for what I work on, but they might be for you! For me at work, we use currently use SDL2 for our windowing stuff at work, and we have found a huge amount of bugs and we hate it to the point that I/we will probably write our own window and input handling system from scratch for each Operating System we target. At least it is our code and we can depend on it and correct it when things go wrong; we are not having an extra dependency. I know SDL2 is used by millions of people, but we keep hitting all of the bugs. “But it’s great though!”. SDL3 might fix it all but the time to integrate SDL3 would be the same time I could write it from scratch.
I am not advocating to write things from scratch. I wish there were libraries I could say that they “Just Work™”, but I still have to depend on them, and they are a liability; not just security liabilities but just bug liabilities.
Each dependency is a potential liability.
Unbacked high trust
People rarely, if ever, vet their code, especially third-party code. Most people assume random code off the internet works. This is a societal issue where programmers are very high trusting in a place where you should have the least amount of trust possible. To put it bluntly, a lot of programmers come from a highly developed countries which are in general high trust societies, and then they apply that to the rest of their online world. This means you only need one person to do something malicious to something millions depend on to screw everything up. It doesn’t even have to be malicious but a funny bug, where if you clicked one pixel on the screen, it is Rick Rolling you.
Gell-Mann amnesia effect
n.b. This argument was made by ThePrimeagen; not myself
We’ve had an explosion of engineers over the past ten years, which have come just into the advent of all of these package managers coming out, for all of these languages, all at the same time. So programming felt very daunting; when you don’t know how something works, it feels very daunting, especially when you first start out. The thing that is confusing, especially the high-trust argument that was being made, there is this weird Gell-Mann amnesia effect going on. You read one page and it’s all about horses and you feel “man I know a lot about horses”. Then flip to the next page and it’s about Javascript and you go “man they got everything wrong about Javascript”. Then you flip the next page and “man I know a lot about beetles”. You’ve just forgot that they are super wrong on the thing you understood, but you think everything else is correct.
You’ll find engineers who will go “some of my coworkers are so horrible, hey, let me download this library off the internet, this is going to be awesome”. It’s crazy as if they look and go “wow, one third of our staff cannot program anything, also I am going to trust every open source package I’ve downloaded”. So there is this Gell-Man amnesia in programming code, where people who do open source or open things are viewed as the best of the engineers when that isn’t true.
Evolutionary selection pressure
Most people assume programming is like every other industry, like actual engineering which has been around for thousands of years, or modern science which has been around for about half a millenium. People trust who they perceive to be the “experts”, as you see all of these articles, books, conference videos, etc, and they all tell you stuff but for the most part which does not necessarily seem true.
I remember trusting those who were perceived to be “experts” which were esposing “wisdom”. However, as I have programmed more over the years, I realized there is very very little wisdom in this industry. This industry is 70–75 years old at best, and that is not old enough to have any good evolutionary selection pressure. It is not old enough to get rid of the bad things—it hasn’t evolved quick enough. We will find out in a few HUNDRED years, and I mean hundreds, what is actual good wisdom is in programming.
There are some laws we know like Conway’s Law, where “organizations which design systems (in the broad sense used here) are constrained to produce designs which are copies of the communication structures of these organizations”. Or to rephrase it in programming terms, the structure of the code will reflect the company that programs it. But that is one of the only laws that we know to exist.
Conclusion
My general view is that package managers (and not the things I made distinctions about) are probably in general a net-negative for the entire programming landscape, and should be avoided if possible.

How do I manage my code without a “package manager”?
Excerpt from the Odin FAQ: https://odin-lang.org/docs/faq/#how-do-i-manage-my-code-without-a-package-manager
Through manual dependency management. Regardless of the language, it is a very good idea that you know what you are depending on in your project. Copying and vendoring each package manually, and fixing the specific versions down is the most practical approach to keeping a code-base stable, reliable, and maintainable. Automated systems such as generic package managers hide the complexity and complications in a project which are much better not hidden away.
Not everything that can be automated ought to be automated. The automation of dependency hell is a case which should not encouraged. People love to put themselves in hell, dragging others down with them, and a package manager enables that.
Another issue is that for other languages, the concept of a package is ill-defined in the language itself. And as such, the package manager itself is usually trying to define the concept of what a package is, which leads to many issues. Sometimes, if there are multiple competing package managers with different definitions of what a package is, the monstrosity of a package-manager-manager arises and the hell that brings with it.




The term “evil” is being used partially hyperbolic to make a point. ↩︎


I primarily use DuckDuckGo, but I also use Google and many others because they are pretty much all bad. ↩︎


This sentence is a quote from ThePrimeagen from that video. ↩︎


ThePrimeagen mentioned the “Klingon Approach” as a joke. This refers to Klingons (a species of humanoids in Star Trek) which have redundant organs. A very nerdy joke. ↩︎


This comment was from José Valim (the creator of the Elixir programming language) and this was a very good point which I wanted to add to this article. ↩︎





]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Indiana Jones and the Last Crusade Adventure Prototype Recovered for the C64]]></title>
            <link>https://www.gamesthatwerent.com/2025/09/indiana-jones-and-the-last-crusade-adventure-prototype-recovered-for-the-commodore-64/</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45167245</guid>
            <description><![CDATA[A huge Commodore 64 surprise to kick off the week with Games That Weren't adding the sadly cancelled playable prototype of the Indiana Jones 3 adventure. An unofficial conversion of the great Lucasfilm Games title with bags of promise, but wasn't to be.]]></description>
            <content:encoded><![CDATA[HomeAboutTeam25 years of Games That Weren’tA talk at Retro CollectiveUnreleased & Cancelled gamesUncategorized reviewsVIC-20Recent updatesC64Browse GTW64Still in productionWantedAbout GTW64Prototypes & UnusedPreservationFeaturesBonus book contentContactSubmit an entryLinksArchive A-Z links | Search archive0ABCDEFGHIJKLMNOPQRSTUVWXYZA huge Commodore 64 surprise to kick off the week with Games That Weren’t adding the sadly cancelled playable prototype of the Indiana Jones 3 adventure. An unofficial conversion of the great Lucasfilm Games title with bags of promise, but wasn’t to be. Check it out here:https://www.gamesthatwerent.com/gtw64/indiana-jones-and-the-last-crusade-adventure/Share this page:DISCLAIMER: We are a non-profit digitisation project, aiming to digitally preserve software and history which would otherwise be lost for good. If for any reason there is anything that you do not wish to be on the website, please contact us for removal.Games That Weren't® is the registered trademark of Frank Gasking.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[VMware's in court again. Customer relationships rarely go this wrong]]></title>
            <link>https://www.theregister.com/2025/09/08/vmware_in_court_opinion/</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45167239</guid>
            <description><![CDATA[Opinion: Have you ever seen the 'Are we the baddies' sketch, Broadcom?]]></description>
            <content:encoded><![CDATA[
Opinion If you're a tech company marketing manager writing white papers, you'll love a juicy pull quote. That's where a client says something so lovely about you, you can pull it out of the main text and reprint it in a big font in the middle of the page.
"VMware is essential for the operations of Tesco's business and its ability to supply groceries" is a great candidate from 2019.
Broadcom's answer to VMware pricing outrage: You're using it wrong
READ MORE
Or it would be, if it wasn't followed by accusations of massive contractual misbehavior threatening the client, and requests for many millions of dollars in damages – and rising. What looks great as marketing blurb isn't so hot on a court filing.
What a filing it is, too. Tesco is the UK's biggest supermarket chain by revenue, with around 40,000 server workloads keeping the ship afloat. Before Broadcom swallowed VMware, Tesco bought perpetual licenses and support that could run to 2030. Broadcom, Tesco claims, is refusing to honor the support contracts until Tesco switches to new licenses. This, it is further claimed, puts the retail giant at risk of being unable to operate.
Thus, Tesco is looking for damages of £100 million and rising from Broadcom, VMware, and the somewhat unfortunate reseller Computacenter. It's hard to feel sorry for a reseller. That's how bad this is.

    

Assuming Tesco's claims are true, this is extortion. Running an enterprise on unsupported software, while not exactly unknown, is corporate malpractice. Running unsupported software on which your entire business depends is nigh on suicidal. But who's holding the gun here?

        


        

Pulling patches, support, and upgrades that you are contractually obliged to provide, while demanding more money for a worse deal, doesn't look like being a good partner. It looks like running a protection racket. It looks like extortion. Nice multibillion business you've got there, man. Shame if anything, y'know, happened to it.
Can we assume Tesco is entirely accurate in its claims? Not until the case is heard, but the circumstantial evidence is there. The affair is in danger of turning into a class action lawsuit. The UK company is joining Siemens and AT&T.

        

Perhaps Broadcom has never lost similar cases? Um, no. Perhaps Broadcom is putting up a spirited public defense, rather than blaming its clients for doing it wrong? Um, no. Surely, it couldn't be so crass as to say its new licensing policy is not only blameless but very popular because it's bringing in so much more money, man, rather than 1,000-percent-plus price hikes? It is. All these stories are from just three months this year.
As The Register's European editor wearily remarked: "Search the site for Simon and VMware. We've got pages of this stuff. Go. Look."


How Windows 11 is breaking from its bedrock and moving away

Two wrongs don't make a copyright

When hyperscalers can't safeguard one nation's data from another, dark clouds are ahead

Fear of the unknown keeps Broadcom's VMware herd captive. Don't be cowed

It's not hard to guess Broadcom's motivation. Perpetual licenses can be a very bad idea for a vendor unless carefully constructed to be not really perpetual at all – the thing being licensed can cease to be under agreed conditions, for example. You can unilaterally revoke them if your client base is too poor to sue, or you have an off-ramp that doesn't hurt too much. Neither seems to be the case here, in which case you negotiate with the licensees. If you try to strong-arm your clients by removing support, especially contracted support, you are not only acting unethically, to say the least, you are putting both you and your client at tremendous risk. Plus, you look like a gangster betting that a company will cave from fear of the consequences rather than stick it out.
Broadcom's policy seems to accept that. And the bigger the client, the better. Bigger equals more pressure, right? To which the right answer is do you feel lucky, punk? Do you think you'll win in court?
Does Broadcom think there's no real chance of a big client getting crippled because it didn't honor a contract and bad things happened? Better pray that doesn't happen.

        

Even if you win, somehow voiding the contracts that were signed in good faith and that so many of your best clients are confident taking to court, then what? Migrations will flock faster than swallows, African or European. If you're reading this, Broadcom, click on that search link above.
Broadcom admits it's sold a lot of shelfware to VMware customers
READ MORE
Ask yourself: would you want to trust your company to someone like that? How does someone like that look to the industry? If you didn't answer arrogant, greedy, unethical, untrustworthy, and full of it, why not?
While your respectable, blue-chip, long-established clients are taking you to court because they can find no other responsible way to continue to use your product, consider how many enemies you want to make before it becomes too many. Sure, court cases can be part of hardball negotiation, yet that's not what this looks like.
At some point, this has to stop. Virtualization, even as a deeply embedded framework, is a layer in the stack that can be replaced. The equation of migration is always complicated. It balances risk versus reward, ROI, inertia, future roadmaps, and more. Overarching it all is trust.
When you look in the mirror, Broadcom, what do you see? ®                                
                    ]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[14 Killed in protests in Nepal over social media ban]]></title>
            <link>https://www.tribuneindia.com/news/world/massive-protests-in-nepal-over-social-media-ban/</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45166972</guid>
            <description><![CDATA[Nepali police fire tear gas and rubber bullets at protesters outside parliament.]]></description>
            <content:encoded><![CDATA[Unrest killed at least 19 people in Nepal on Monday, authorities said, as police in the capital fired tear gas and rubber bullets at protesters trying to storm parliament in anger at a social media shutdown and corruption.Some of the mainly youth protesters forced their way into the parliament complex in Kathmandu by breaking through a barricade, a local official said, setting fire to an ambulance and hurling objects at lines of riot police guarding the legislature."The police have been firing indiscriminately," one protester told the ANI news agency. "(They) fired bullets which missed me but hit a friend who was standing behind me. He was hit in the hand."More than 100 people, including 28 police personnel, were receiving medical treatment for their injuries, police officer Shekhar Khanal told Reuters. Protesters were ferrying the injured to hospital on motorcycles.Two more people were killed when protests in the eastern city of Itahari turned violent, police said.Prime Minister KP Sharma Oli called an emergency cabinet meeting to discuss the unrest, which erupted after thousands of young people, including many wearing their school or college uniforms, took to the streets earlier on Monday.Many carried flags and placards with slogans such as ‘Shut down corruption and not social media’, ‘Unban social media’, and ‘Youths against corruption’, as they marched through Kathmandu.Organisers of the protests, which spread to other cities in the Himalayan country, have called them "demonstrations by Gen Z". They say the protests reflect young people's widespread frustration with government action to tackle corruption and boost economic opportunities."This is the protest by the new generation in Nepal," another protester told ANI.A government decision to block access to several social media platforms, including Facebook, last week has fuelled anger among the young. About 90% of Nepal's 30 million people use the internet.Officials said they imposed the ban because platforms had failed to register with authorities in a crackdown on misuse, including false social media accounts used to spread hate speech and fake news, and commit fraud.Batons and rubber bulletsPolice had orders to use water cannons, batons and rubber bullets to control the crowd and the army was deployed in the parliament area to bolster law-enforcement officers, Muktiram Rijal, a spokesperson for the Kathmandu district office, told Reuters.He said the curfew, which will remain in force until 10 pm local time, had been extended to Kathmandu's Singha Durbar area, which includes the prime minister's office and other government buildings.Violence abated later in the evening although protesters remained in the area outside parliament.Police said similar protests were also held in Biratnagar and Bharatpur in the southern plains and in Pokhara in western Nepal.Many people in Nepal think corruption is rampant, and the Oli government has been criticised by opponents for failing to deliver on its promises to tackle graft or make progress to address longstanding economic issues.Thousands of young Nepalis go abroad every year for work and education.Rameshwore Khanal, a former finance secretary, said although job creation is not up to expectations, popular anger appears to stem more from unhappiness with government appointments and its inability to stamp out corruption.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[RSS Beat Microsoft]]></title>
            <link>https://buttondown.com/blog/rss-vs-ice</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45166750</guid>
            <description><![CDATA[Massive tech companies tried to own syndication. They failed.]]></description>
            <content:encoded><![CDATA[People like to tell the story of how VHS beat Betamax because adult film studios backed VHS. It’s a clutch-your-pearls story that says nothing about why these multi-million-dollar businesses picked one format over the other. The real story is that while Betamax tapes had better resolution and fidelity, VHS was cheaper, offered longer recordings, and, most importantly, was the more open format. Not many people talk about how or why RSS won the content syndication war because few people are aware that a war ever took place. Everyone was so fixated on the drama over RSS’s competing standards (Atom vs RSS 2.0) that they barely registered the rise and fall of the Information and Content Exchange (ICE) specification, which had been created, funded, and eventually abandoned by Microsoft, Adobe, CNET, and other household names. ICE was the Betamax to RSS’s VHS. The Information and Content Exchange standard was more advanced, more expensive, less open, and unable to counter the overwhelming number of bloggers who flooded the market with DIY-friendly RSS feeds.The dawn of war over syndicationWhen Pew Research informally asked readers about online activities that had lost their charm, most of the responses mentioned surfing the web, something people used to do for the hell of it, just to see what was out there. That was in 2007, the same year the iPhone launched, long before most of us were addicted to social feeds. One user complained that “the net is no longer a toy but more like a Velveteen Rabbit — while some loved parts have worn away or disappeared, other parts are still in place.” People hadn’t lost interest in surfing so much as the waves of content had grown to crushing heights.Big-name publishers got a whiff of monetization and became obsessed with content syndication. They figured that if they could make it easier for websites to repackage and republish their articles and eCommerce catalogs, corporate content creators wouldn’t need to worry about declining traffic to their sites. They could simply make a deal with whichever site was currently in vogue.“Syndication will evolve into the core model for the Internet economy, allowing businesses and individuals to retain control over their online personae while enjoying the benefits of massive scale and scope,” Kevin Werbach wrote in the July ‘99 issue of Release 1.0. “The foundations for pervasive Web-based syndication are now being laid.”The first attempt came in the form of the Information and Content Exchange (ICE) standard, which, like Betamax, predated its archrival by almost exactly a year. ICE’s stated goal in a March 1998 proposal was to standardize how data posted to one website could be automatically published on other websites. It was unapologetically commercial from day one, promising to “expand publishers’ electronic sales by making it easier to license the same material to multiple sources.”The My Netscape Network port via Scripting NewsRSS entered the game as a humble widget on the experimental My Netscape Network portal. Any website owner who used Netscape’s nascent XML-adjacent tags to create a feed of their website’s updates could have said feed added to Netscape’s list of 600+ “channels”. When a user picked a channel from the list, it added a widget to their personalized My Netscape Network page, aggregating their favorite blogs and news sites on a single page.ICE and RSS had a lot in common. Both used XML to create a common language between syndicators and subscribers. Both used self-describing tags to differentiate content elements. And both let subscribers “pull” the latest feed at any time. Philosophically, though, they couldn’t have been further apart.Revenue vs readershipOne of the creators of ICE was Vignette, famous for its StoryBuilder content management software. They ceded technical development to a consortium that included Microsoft, Adobe, Reuters, and others, while focusing on commercial development. In 1999, Vignette invested $14 million in the iSyndicate platform in exchange for iSyndicate moving exclusively to ICE, while shopping around their proprietary ICE server–priced at $50,000–to other publishers.The first desktop RSS aggregator via Internet ArchiveMeanwhile, RSS was sprinting in the opposite direction. Headline Viewer was released in April 1999 as a free desktop feed aggregator that promised to let users “Watch mailing lists! Watch weblogs! Be cool!” It was soon followed by the first web-based aggregator at my.userland.com. There wasn’t a whiff of server racks or five-figure investments. In fact, there wasn’t even anyone at the helm, as Netscape had abandoned development.“Now, let the flames begin…repeated attempts to find anyone who cares about RSS at Netscape have turned up nothing,” Dave Winer ranted on his blog in the summer of 2000. “The people we worked with at Netscape left shortly after [version] 0.91 was finalized.” That would have immediately killed the consortium-driven ICE standard. Not so for RSS’s grassroots efforts. Winer simply wrote his own version.“Up until this morning I wasn't sure if this document should be called 0.91 or 0.92. I was concerned that practice had deviated from the Netscape spec, esp in respecting the limits it imposes, which most developers (myself included) think are ridiculous and unweblike…so I changed the title from 0.92 to 0.91. So all this is a cleanup. All the Netscapeisms are removed.” What started as a passion project by a disgruntled individual grew into a movement. And those in the ICE camp knew it. Laird Popkin went as far as writing a post about how to map RSS into ICE syntax, pointing out that “The widespread adoption of RSS by low-end syndicators to distribute promotional links should serve as a clear indicator of the importance of this scenario in the world of syndication.” Complicated vs UncomplicatedBut there was simply no getting around how bloated ICE’s requirements were. Its North Star was automating complex, corporate publishing partnerships. It contained fields for catalog pricing and negotiation, content expiration tags, copyright enforcement functions, and the ability to apply the display website’s visual branding to feed content. While most of them could be ignored, that didn’t make its 58,000-word Getting-Started guide any more digestible.A web-based aggregator in 1999 via Release 1.0Werbach predicted in The Web Goes Into Syndication that, because ICE was overkill for most uses, “Should this become a head-to-head competition, though, the moral of the Internet’s story is that simple, open-source protocols that scale up tend to win over complex top-down approaches.”Almost anyone could set up an RSS feed or an RSS aggregator. When Winer released RSS version 2.0 in 2002, a feed could be considered compliant with only three elements: feed title, feed description, and a link to the items you wanted to share. “I definitely want ICE-like stuff in RSS2, publish and subscribe is at the top of my list, but I am going to fight tooth and nail for simplicity.” Winer argued in one of the many combative and public RSS mailing lists.Never mind that the RSS group couldn’t even agree on what the acronym stood for, they were trouncing ICE. The New York Times, a publisher that should have been firmly in ICE’s wheelhouse, adopted RSS in November 2002. ICE limped on, however, with the authoring group releasing version 2.0 in 2004. But less than a year later, Microsoft, arguably ICE’s biggest cheerleader, had a dedicated RSS blog. Its first post proposed icon designs for Internet Explorer’s built-in RSS features. It wasn’t an explicit capitulation. ICE and RSS could have theoretically co-existed. Just like Betamax could have let other companies manufacture and sell Betamax players. But they didn’t. So they lost.When small wins are better than big ones In their timeline of The Rise and Demise of RSS, Sinclair Target sees the glass half empty, believing that in another timeline the standard could have been more widely adopted if not for the fights between developers. “RSS, an open format, didn’t give technology companies the control over data and eyeballs that they needed to sell ads, so they did not support it. But the more mundane reason is that centralized silos are just easier to design than common standards.” And yet, no one has heard of ICE. I couldn’t even find proof of any publishers who used it to ink syndication deals. RSS, meanwhile, lives on. RSS-to-email is one of Buttondown’s most popular features!"I can't really explain it, I would have thought given all the abuse it's taken over the years that it would be stumbling a lot worse," Winer told Wired in 2015, as opinions on algorithmic social media began to sour.All RSS had to do to weather ICE, Twitter, AI, and whatever comes next, was keep things simple and let users build their own feeds, filters, lists, and aggregators. Like email, it probably won’t make anyone a billion dollars or reshape entire industries. But it will always be wholly yours. And if that isn’t nice I don’t know what is.Header image via Bloglines.softonic.com]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[How inaccurate are Nintendo's official emulators? [video]]]></title>
            <link>https://www.youtube.com/watch?v=oYjYmSniQyM</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45166711</guid>
        </item>
        <item>
            <title><![CDATA[Immich – High performance self-hosted photo and video management solution]]></title>
            <link>https://github.com/immich-app/immich</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45165684</guid>
            <description><![CDATA[High performance self-hosted photo and video management solution. - immich-app/immich]]></description>
            <content:encoded><![CDATA[ 
  
  
  
    
  



High performance self-hosted photo and video management solution






  Català
  Español
  Français
  Italiano
  日本語
  한국어
  Deutsch
  Nederlands
  Türkçe
  中文
  Українська
  Русский
  Português Brasileiro
  Svenska
  العربية
  Tiếng Việt
  ภาษาไทย

Disclaimer

⚠️ The project is under very active development.
⚠️ Expect bugs and breaking changes.
⚠️ Do not use the app as the only way to store your photos and videos.
⚠️ Always follow 3-2-1 backup plan for your precious photos and videos!

NoteYou can find the main documentation, including installation guides, at https://immich.app/.

Links

Documentation
About
Installation
Roadmap
Demo
Features
Translations
Contributing

Demo
Access the demo here. For the mobile app, you can use https://demo.immich.app for the Server Endpoint URL.
Login credentials



Email
Password




demo@immich.app
demo



Features



Features
Mobile
Web




Upload and view videos and photos
Yes
Yes


Auto backup when the app is opened
Yes
N/A


Prevent duplication of assets
Yes
Yes


Selective album(s) for backup
Yes
N/A


Download photos and videos to local device
Yes
Yes


Multi-user support
Yes
Yes


Album and Shared albums
Yes
Yes


Scrubbable/draggable scrollbar
Yes
Yes


Support raw formats
Yes
Yes


Metadata view (EXIF, map)
Yes
Yes


Search by metadata, objects, faces, and CLIP
Yes
Yes


Administrative functions (user management)
No
Yes


Background backup
Yes
N/A


Virtual scroll
Yes
Yes


OAuth support
Yes
Yes


API Keys
N/A
Yes


LivePhoto/MotionPhoto backup and playback
Yes
Yes


Support 360 degree image display
No
Yes


User-defined storage structure
Yes
Yes


Public Sharing
Yes
Yes


Archive and Favorites
Yes
Yes


Global Map
Yes
Yes


Partner Sharing
Yes
Yes


Facial recognition and clustering
Yes
Yes


Memories (x years ago)
Yes
Yes


Offline support
Yes
No


Read-only gallery
Yes
Yes


Stacked Photos
Yes
Yes


Tags
No
Yes


Folder View
Yes
Yes



Translations
Read more about translations here.



Repository activity

Star history

 
   
   
   
 

Contributors

  

]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Show HN: Veena Chromatic Tuner]]></title>
            <link>https://play.google.com/store/apps/details?id=in.magima.digitaltuner&amp;hl=en_US</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45165245</guid>
            <description><![CDATA[Tune in Equal/Just Intonation with oscilloscope-like waveform display.]]></description>
            <content:encoded><![CDATA[Veena Chromatic Tuner lets you to tune in Equal Temperament/Just Intonation with oscilloscope-like stable waveform display. This powerful, versatile tuning application is designed for musicians who need precise control over their instrument tuning across multiple musical traditions (Equal Temperament, Just Intonation). It displays the pitch (frequency) and deviation in cents via a needle interface. A unique visual feature is its linear and circular waveform display of input audio: the waveform appears stabilised when in tune with reference note selected, rotates right when sharp, and rotates left when flat, providing immediate visual feedback for precise adjustments. This dynamic visual feedback, akin to a digital oscilloscope's trigger synchronisation, offers immediate and precise adjustment cues.A Veena instrument mode has been added, allowing users to play and tune notes across 24 fret positions. This feature is particularly useful for instrument makers. When choosing Just Intonation or Carnatic tuning profiles, fret positions are based on specific ratios. Consequently, this mode allows you to observe how note positions on the first and other strings vary relative to each other when pure intonation is applied. Key Features:Multiple Tuning Systems - Choose between Equal Temperament, Just Intonation, or create your own Custom temperament with personalised ratio settings.Multicultural Note Naming - Display notes in various systems including Western notation, Indian classical (Carnatic/Hindustani), and Solfege, with support for multiple Indian language scripts (Tamil, Devanagari, Telugu, Kannada, Malayalam). The base note selected is treated as "Sa".Adjustable Reference Pitch - Customize your A4 frequency from standard 440Hz to alternative tuning like 432Hz.Transposition Support - Easily transpose notes up or down for instruments that play in different keysCustom Tuning Profiles - Create, save, and manage multiple tuning profiles for different instruments or musical traditions.Just Intonation Support - Perfect for Indian classical music and other traditions that rely on pure harmonic relationships between notes.Perfect for:- String instrument players (veena, violin, guitar, sitar, banjo, piano, lute etc.)- Veena melam(fretboard) making / repair - Wind instrument musicians- Vocalists- Music teachers and students- Ethnomusicologists- Instrument makers and tuners - Fret setting- Anyone exploring microtonal musicDownload Veena Chromatic Tuner today. Please note: this application is ad-supported. We are continuously developing the app, rapidly adding new features and improvements. However, pitch detection is a resource-intensive application, and as a result, compatibility may vary depending on the hardware and software limitations of your device. We appreciate your interest in our app and apologise if it doesn't function as expected on your specific device.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Using Claude Code to modernize a 25-year-old kernel driver]]></title>
            <link>https://dmitrybrant.com/2025/09/07/using-claude-code-to-modernize-a-25-year-old-kernel-driver</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45163362</guid>
            <description><![CDATA[As a bit of background, one of my hobbies is helping people recover data from old tape cartridges, such as QIC-80 tapes, which were a rather popular backup medium in the 1990s among individuals, small businesses, BBS operators, and the like. I have a soft spot for tape media; there’s something about the tactile sensation of holding these tapes in my hands that makes the whole process very joyful, even though QIC tapes are notorious for their many design flaws. With some careful inspection and reconditioning, the data on these tapes is still totally recoverable, even after all these years.]]></description>
            <content:encoded><![CDATA[
	
	

	
		As a bit of background, one of my hobbies is helping people recover data from old tape cartridges, such as QIC-80 tapes, which were a rather popular backup medium in the 1990s among individuals, small businesses, BBS operators, and the like. I have a soft spot for tape media; there’s something about the tactile sensation of holding these tapes in my hands that makes the whole process very joyful, even though QIC tapes are notorious for their many design flaws. With some careful inspection and reconditioning, the data on these tapes is still totally recoverable, even after all these years.



Whenever I receive a QIC-80 tape for recovery, I power up one of my older PC workstations which has the appropriate tape drive attached to it, and boot into a very old version of Linux (namely CentOS 3.5), because this is the only way to use the ftape driver, which is the kernel driver necessary for communicating with this tape drive, allowing the user to dump the binary contents of the tape.
You see, the drive that reads these tapes connects to the floppy controller on the motherboard. This clever hack was done as a cost-saving measure: instead of having to purchase a separate SCSI adapter (the standard interface for higher-tier tape media), you can just connect this tape drive to your floppy controller, which was already available on most PCs. It can even work alongside your existing floppy drive, on the same ribbon cable! The tradeoff, of course, is that the data rate is limited by the speed of the floppy controller, which was something like 500 Kbps (that’s kilobits, not bytes).
The other downside is that the protocol for communicating with these tape drives through the floppy controller was very messy, nonstandard, and not very well-supported. It was a “hack” in every sense: your motherboard’s BIOS had no knowledge of the tape drive being connected, and it was entirely up to the end-user software to know exactly how to manipulate the hardware I/O ports, timings, interrupts, etc. to trick the floppy controller into sending the appropriate commands to the tape drive.

There were a small number of proprietary tools for MS-DOS and Windows 3.x/9x for dealing with these drives, and only one open-source implementation for Linux, namely ftape. Of course it is possible to use those original DOS/Windows tools to read the tapes, but it’s actually only ftape that allows us to read the “raw” binary contents of the tape, regardless of which proprietary software originally wrote it, which is why I prefer it for dumping the contents and worrying afterwards about decoding the proprietary logical formatting, and then extracting the files from it.
The trouble is, the ftape driver hasn’t been supported since roughly the year 2000, and was soon removed from the Linux kernel for this reason. This is why I’ve needed to run a painfully old version of Linux anytime I have to work with one of these drives. It would be great if ftape worked on a modern distro, with all the benefits and affordances that would provide.
***
So a couple of weeks ago, it occurred to me to make a simple request to Claude Code:
> This repository is a Linux kernel driver that communicates with legacy tape drives connected to the floppy
  controller (FDC) on the motherboard. Unfortunately, this driver hasn't been maintained for a long time, and
  can only compile under kernel version 2.4. I'd like to modernize this driver, allowing it to be built with
  the latest versions of the kernel.

● I'll help you modernize this Linux kernel driver for legacy tape drives. This is a significant task that
  will require updating the code to work with modern kernel APIs and conventions.

And after several iterations of “combobulating” and whatever else Claude claims to do, I suddenly had a kernel driver that was compiling without errors. This is because Claude is able to take the compiler output and feed it back into itself, until the compilation works correctly. There was a laundry list of kernel functions and structures that were understandably deprecated or replaced, in the eternity that elapsed between kernel version 2.4 and version 6.8. Amazingly, Claude found all the outdated bits and replaced them with the correct modern equivalents, requiring just a few manual touch-ups of the code (a bit more on this later).
At this point, however, the kernel driver was still expected to be compiled as part of a full kernel tree, whereas I just wanted it to become a standalone loadable kernel module. OK, no problem:
> Is there a way to compile just this module in-place, instead of copying it into a kernel source tree?

● Yes! You can compile kernel modules out-of-tree without copying them into the kernel source. Let me create
  a proper standalone build system for the ftape driver.

…And it did. Without any further prompting. At the end of this stage, I had a loadable kernel module (.ko) that I could start trying to use with actual live hardware. Unsurprisingly, the module did not yet “work” — it was loading, but something was preventing it from communicating with the tape drive correctly. But I pressed on.
From this point forward, since loading/unloading kernel modules requires sudo, I could no longer let Claude “iterate” on such sensitive operations by itself. Luckily, the ftape driver was already generously sprinkled with logging messages (printk() calls that are printed to dmesg), so I loaded the module myself, and iteratively pasted the output of dmesg into Claude manually, and let Claude compare it to a “known-good” dmesg log that I’d previously saved from a successful tape read. After a few iterations of this, Claude identified the remaining issues preventing the module from communicating with the hardware.
● Perfect! The module has parameters that can be set. The issue is that without configuration, all the base
  addresses default to -1, which gets converted to 0xffff in the config function, causing the detection to fail.
● The "No such device or address" (ENXIO) error occurs because the ftape-internal module is not configured
  with the correct I/O port base address for your floppy controller.
  The issue is in fdc-internal.c:735-737: if fdc->sra == 0xffff, it returns -ENXIO. Since no configuration was
  provided, all values default to -1, which becomes 0xffff....

And at last, I had a kernel module that was able to a) load, b) detect the tape drive, and c) dump the contents of a test tape!

***
Using the ftape driver on a modern kernel, a feat that I thought was hopelessly out of reach, was suddenly completed over the course of two evenings.
As a giant caveat, I should note that I have a small bit of prior experience working with kernel modules, and a good amount of experience with C in general, so I don’t want to overstate Claude’s success in this scenario. As in, it wasn’t literally three prompts to get Claude to poop out a working kernel module, but rather several back-and-forth conversations and, yes, several manual fixups of the code. It would absolutely not be possible to perform this modernization without a baseline knowledge of the internals of a kernel module.
This led me to crystallize some thoughts on working with such coding agents in our current moment:
Open yourself up to a genuine collaboration with these tools.
Interacting with Claude Code felt like an actual collaboration with a fellow engineer. People like to compare it to working with a “junior” engineer, and I think that’s broadly accurate: it will do whatever you tell it to do, it’s eager to please, it’s overconfident, it’s quick to apologize and praise you for being “absolutely right” when you point out a mistake it made, and so on. Because of this, you (the human) are still the one who must provide the guardrails, make product decisions, enforce architectural guidelines, and spot potential problems as early as possible.
Be as specific as possible, making sure to use the domain-specific keywords for the task.
I’m not claiming to suddenly be an expert in prompt engineering, but the prompts that I’ve found to be most successful are ones that clearly lay out the verbal scaffolding for a feature, and then describe the gaps in the scaffolding that the LLM should fill in. (For some reason the image that comes to mind is one of those biological stem-cell scaffolds where an artificial human ear will grow.)
Develop an intuition for the kinds of tasks that are “well-suited” for an agent to complete.
These agents are not magical, and can’t do literally everything you ask. If you ask it to do something for which it’s not well-suited, you will become frustrated and prematurely reject these tools before you allow them to shine. On this point, it’s useful to learn how LLMs actually work, so that you develop a sense of their strengths and weaknesses.
Use these tools as a massive force multiplier of your own skills.
I’m sure that if I really wanted to, I could have done this modernization effort on my own. But that would have required me to learn kernel development as it was done 25 years ago. This would have probably taken me several weeks of nonstop poring over documentation that would be completely useless knowledge today. Instead of all that, I spent a couple of days chatting with an agent and having it explain to me all the things it did.
Naturally, I verified and tested the changes it made, and in the process I did end up learning a huge amount of things that will be actually useful to me in the future, such as modern kernel conventions, some interesting details of x86 architecture, as well as several command line incantations that I’ll be keeping in my arsenal.
Use these tools for rapid onboarding onto new frameworks.
I am not a kernel developer by any stretch, but this particular experience ignited a spark that might lead to more kernel-level work, and it turns out that kernel development isn’t nearly as difficult as it might sound. In another unrelated “vibe-coding” session, I built a Flutter app without having used Flutter before. If you’re like me, and your learning style is to learn by doing, these tools can radically accelerate your pace of learning new frameworks, freeing you up to do more high-level architectural thinking.
***
In any case, circling all the way back, I am now happy to say that ftape lives on! Twenty-five years after its last official release, it is once again buildable and usable on modern Linux. I’m still in the process of making some further tweaks and new feature additions, but I have already verified that it works with the floppy-based tape drives in my collection, as well as parallel-port-based drives which it also supports.

The physical setup looks very similar, but the OS is now Xubuntu 24.04, instead of CentOS 3.5! 🎉
Until next time!
	

	
	

]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Formatting code should be unnecessary]]></title>
            <link>https://maxleiter.com/blog/formatting</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45163043</guid>
            <description><![CDATA[and we knew this back in the 80s]]></description>
            <content:encoded><![CDATA[Sep 6, 2025Formatting code should be unnecessaryand we knew this back in the 80sI had a (maybe slightly overqualified) computer science teacher back in highschool, Mr. Paige.
He worked on the Ada compiler and
has been programming since the early 80s.
One day I complained about linter tooling that
was driving me nuts. I said something to the effect of, "it's 2016, how are we still dealing with this sort of thing?"
Turns out, that problem was solved four decades ago (well, three at that point). Back when he was working on Ada,
they didn't store text sources at all — they used an IR called DIANA.
Everyone had their own pretty-printing settings for viewing it however they wanted.
We've been debating some linter settings at work recently and I keep thinking back to
Mr. Paige. It's 2025, how are we still dealing with this sort of thing?

Well, to answer that it would help to know what we're missing.
I believe he was working with the Rational R1000, of which there isn't a ton of info
(like all things Ada, it was used by the DoD):

The R1000 had a lot of bleeding-edge features: incremental compilation, semantic analysis, version control, and first-class debugging all built-in. It was a workstation similar to the Xerox Alto but using Ada instead of Smalltalk.

DIANA (Descriptive Intermediate Attributed Notation for Ada) was a key component of Ada that enabled a lot of the more advanced features.

Taken from Experiences with Code Generation
(1984)
Instead of storing plain-text source code, the R1000 wrote DIANA.
The compiler and the IDE built into the machine both understood DIANA too, so you could view the source however you wanted.
Spaces vs. tabs didn't matter because neither affects the semantics and the editor on the system let you modify the program tree directly (known today as projectional editing).
Grady Booch summarizes it well:

R1000 was effectively a DIANA machine. We didn't store source code: source code was simply a pretty-printing of the DIANA tree.

Imagine that.
No wasted time due to formatting discussions or fighting linters,
without forcing everyone into the same editor setup (looking at you, eslint-config-airbnb).
And there were other benefits:

Using DIANA with hardware acceleration made it possible to do incremental compilation (unheard of at the time, for strongly typed languages), easy refactoring (though that word had not yet been invented), and incredibly fast integration (essential for the large systems that we being built with Ada).

Today, we don't need to worry about hardware-accelerated compilation (hopefully),
and we have better tools for refactoring (thanks, Claude). But with formatting, we regressed.
I'm not advocating for everyone to use projectional editing and a live environment (although I think they're awesome and we should be exploring them more),
but surely we can figure out something that fits into todays programming paradigms.
Further reading
This post was meant to be me saying "it'd be easier if we just pushed minified code", but I had too much fun
researching the R1000 during it. Here are some of the documents I looked at:

Experiences with Code Generation (1985): https://www2.eecs.berkeley.edu/Pubs/TechRpts/1985/CSD-85-249.pdf
Ada Compiler Validation Summary Report: Rational Environment (1985): https://apps.dtic.mil/sti/tr/pdf/ADA157830.pdf
Grady Booch's blog post about the 5th anniversary on Rational's acquisition (2008): https://web.archive.org/web/20160304051102/https://www.ibm.com/developerworks/community/blogs/gradybooch/entry/rational_anniversary?lang=en#pagePlaceBar
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Intel Arc Pro B50 GPU Launched at $349 for Compact Workstations]]></title>
            <link>https://www.guru3d.com/story/intel-arc-pro-b50-gpu-launched-at-for-compact-workstations/</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45162626</guid>
            <description><![CDATA[Intel has officially expanded its professional GPU portfolio with the launch of the Arc Pro B50, designed specifically for small-form-factor workstations. The card is based on the Battlemage BMG-G21 GPU, configured with 16 Xe2 cores.]]></description>
            <content:encoded><![CDATA[
                                
                                    
                        
                        Intel has officially expanded its professional GPU portfolio with the launch of the Arc Pro B50, designed specifically for small-form-factor workstations. The card is based on the Battlemage BMG-G21 GPU, configured with 16 Xe2 cores. It comes paired with 16 GB of GDDR6 VRAM clocked at 14 Gbps on a 128-bit memory bus, producing 224 GB/s of effective bandwidth. This configuration ensures that the GPU cores are properly fed while maintaining a low overall power draw. Intel has kept the total board power at 70 W, enabling the card to run entirely from the PCIe slot without external connectors. With a PCIe Gen 5 x8 interface, the Pro B50 balances efficiency and bandwidth for professional workloads.

One of the key features of the Arc Pro B50 is its suitability for AI workloads and specialized professional applications. Intel claims performance of up to 170 TOPS in INT8 compute, which is significant for local AI inference tasks, machine learning workloads, and data preprocessing. Beyond AI, the GPU is optimized for CAD, engineering, architectural visualization, and design software, where stability is just as important as raw throughput. To meet these needs, Intel supplies a certified workstation driver stack, ensuring predictable performance across industry-standard applications. The physical design reflects its target environment: the card uses a low-profile dual-slot form factor, making it ideal for dense workstation cases that prioritize both space savings and airflow efficiency.
                                    Display connectivity is handled via four mini DisplayPort outputs, which support multi-monitor setups critical for professional users who often work with complex datasets or design layouts. By providing flexibility in display configuration while maintaining a small footprint, Intel positions the Arc Pro B50 as a versatile tool for both AI and visual workflows. The emphasis is not on competing with high-end workstation GPUs in sheer raw power, but on striking a balance between price, efficiency, and reliability in scenarios where compact workstations are used.

With an MSRP of $349, Intel has aimed for the Arc Pro B50 to be an accessible entry into the workstation GPU segment. The card will be distributed both as a standalone retail product and through OEM workstation systems. At launch, early reviews from outlets such as HardwareLuxx, Phoronix, and Igor’s LAB indicate that the card delivers consistent results within its targeted workloads, rather than focusing on gaming performance. As Intel continues to invest in both consumer and professional graphics solutions, the Arc Pro B50 demonstrates a focus on specialized, compact, and power-efficient GPU offerings that broaden its reach in the professional computing market.




Source: Techpowerup
                                
                            ]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Taking Buildkite from a side project to a global company]]></title>
            <link>https://www.valleyofdoubt.com/p/taking-buildkite-from-a-side-project</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45162593</guid>
            <description><![CDATA[How an Australian developer turned his frustration with CI tools into a 13-year journey that redefined developer tooling.]]></description>
            <content:encoded><![CDATA[👋 Welcome to Valley of Doubt, a free weekly newsletter that goes deep into founder stories from the early days of startups. 🚀Keith Pitt is the co-founder and former CEO of Buildkite, a devtools company that started in Melbourne and grew to have some of Silicon Valley’s biggest companies as clients. In this interview we dig into:Starting Buildkite as a side projectRunning out of money and having to go back to investorsThe challenges of growing into a venture capital valuationFinding your product voiceScott Handsaker (SH): Tell me who Keith Pitt is in 30 seconds or less.Keith Pitt (KP): I'm a dad with three kids. I'm someone who loves to explore with his hands and code, and I love exploring ideas. It's no surprise that I ended up in developer tools. Before I was a programmer, I was a magician doing magic shows. That's all about pleasing people, bringing joy and excitement to someone's day, subverting expectations and having them walk away with a memorable experience of something you spent a lot of time working on.Developer tools is the closest I can get to being a magician in programming, because I get to please my peers, help them be better, and bring a little magic to their day.I don't consider myself an entrepreneur. I never have, even though I do entrepreneurial things. I consider myself more of an inventor. The way that I like to figure out if my inventions are any good is by selling them, because I feel like the only true way to determine if something is of value is if someone's bought it.SH: Is the “inventor” identity something that you carry with you throughout your life?KP: Yeah, I think so. I like making stuff, whether it’s Lego with the kids or software for developers. I have a mad Lego collection, but I make something and then just pull it apart and put it in a box because I don't like displaying Lego. I like making it.SH: Tell me how you got started with Buildkite.KP: It was a side project of a side project. I started building an email transaction API like Mailgun. I needed some CI for it, and at work we were transitioning off Travis CI. My personal requirements collided with my work requirements and I thought, I'll quickly just bust something out. Years earlier I’d written a CI tool just for fun, so I dusted that off.At the same time, PIN Payments launched in Australia. It was sort of the first time in Australian development history where you could charge for something on the internet without messing around with PayPal or getting a merchant account and SOAP APIs. It was a REST API to charge credit cards.Because I'm a commercially minded inventor, I packaged up Buildkite. I spent my evenings working on it, and I wasn’t really building it to make money. I was just building it for me and what I thought was good.I'd go to work and show my peers, "Hey, what do you think of this?" Little did I know that I was testing product-market fit. I thought I was just working on something that I liked.SH: When did you know you had something people wanted?KP: I eventually strapped a credit card system on there and put it on the internet. People I knew bought it to start with, but then one company bought it that I didn't know from Europe. I think they were called Moneybird. I was like, "Who the hell are these people?" That's when I knew I had something that people wanted.SH: How did pricing evolve?KP: I started at $5, $30, and $100 a month. Just classic SaaS tiers.I remember I was walking back from lunch and I got a ping on my phone that someone had upgraded to $500 a month. That was a moment of pure joy for me because this particular customer knew who I was, but they had believed in me. There's a lot of people telling you no throughout the whole journey, and so part of that whole experience was just ignoring people that didn't believe in you.When that enterprise customer came through, it was the first moment that I felt like someone else believed in me. That's when I knew I would be okay.SH: Were you still working at Envato at that point?KP: I was doing Buildkite after hours because my wife was studying to be a social worker at the time. I would do my day job and come home and work on Buildkite in the evenings. The work at Envato was super easy. I was on a green fields project, but my creative itches weren't being scratched at work.I needed someone that could support my Buildkite work. I wanted to do one day a week on Buildkite, but Envato weren't too keen on a part-time position. So I ended up leaving Envato and going to work at PIN Payments. They were cool with me working four days a week.SH: At what point did the co-founders come into it?KP: I was two years in and still solo. I remember the moment it started. I was on Twitter and one of my competitors had announced they'd raised some money and I was really pissed off because I thought, "Why can't I raise money? Why is no one giving me money?"I tweeted something salty and Matt Allen from the Ruby community replied. He said, "You can raise money. I'll show you." So I started applying for accelerator programs. All of them knocked me back because they didn't want to support first-time founders. This was 13-14 years ago when the Australian startup ecosystem was pretty small and risk tolerance was basically non-existent.They were like, "You have to find a co-founder." I went co-founder hunting but couldn't really find one. I had this weird romantic relationship with bootstrapping and going at it alone. At that same moment, I asked Tim Lucas, who I was working with at PIN, "Hey man, can you make me a new logo for Buildkite?" Instead of making me a logo he said, "How about I be your co-founder instead?" I said, "Okay." That was basically what it was.A custom illustration of Keith and Tim, presented to Tim on his last day at Buildkite.KP: Matt Allen helped us raise 200 grand from people we didn't know. Just a bunch of rich people, some of whom I still have not met to this day. We quit our jobs, paid ourselves 80 grand a year, and just worked on becoming profitable.We built things and sold them, tried marketing, and made enough money to hire someone. We did this until we were 15 people, just rinse and repeat. Grow the bank balance, increase revenue, hire people.SH: You mentioned it was a hard slog during those years. Do any particular moments stand out?KP: I ran out of money. I stuffed up big time. In Australia you have to pay employees superannuation, and no one told me that superannuation payments were quarterly. I thought I was doing the right thing by using our cash to pre-buy EC2 instances, and then a couple weeks later our external accounting firm told me, "Super's due". I thought, "Oh, we don't have enough money."But I wasn't that scared because I had a plan. I thought, "Why not be open about it?" because it would probably help. I was completely open about it and said to the team, "All right, so here's the situation, but here's what we're going to do."I converted a bunch of customers to annual payments, went back to investors for loans, and did some invoice advances. It was about 100 grand to see us through until we got R&D tax credits and bigger invoices.SH: What did you learn from that experience?KP: Cash flow is an art form in and of itself. It's not just the bank balance. It's the bank balance at any one moment in time. At that point the game changed for me to making sure that I don't run out of money. That's the number one thing.Don't run out of money and do whatever it takes to not run out of money. Buildkite took a long time to bloom and blossom, but if we had run out of money earlier on, I might have just given up.Brought to you by MurmarSH: How did Lachlan join as the third co-founder?KP: Lachlan joined a couple years in as a late-stage co-founder. I wasn't precious about the titles. When he joined, I thought if he does what we think he's going to do, the company that exists will be just as much of his creation as mine.The reason he joined was that Tim and I didn't really know what we were doing. We had a good sense of how to navigate, but we didn't know big company enterprise stuff and were still thinking small fry. Lachlan really helped us charge lots of money.I didn't have the confidence to walk into a customer and say, "This is $30,000," but Lachlan did. That's probably the biggest gift he gave the company. He gave us the confidence to ask for more.I didn't realise at the time that by having such a low price point, people weren't taking us seriously. For us to charge more, we had to really believe in ourselves. To walk into a company and say, "This is $100,000" with a straight face and truly believe it in your soul.SH: How did you handle the dynamics between three founders?KP: It's always hard when each of you want to be the CEO. I think all of us wanted a little bit of it, and that was super hard to navigate.I gave the role away twice. I started as CEO, but I was the CEO of one person and I never really liked the title. I gave it to Tim because I was struggling with it. I always thought I wasn't doing what I thought that role was supposed to be. I was too invested in the product, too invested in customers, and wasn't interested in budgets or back office stuff.Later on Lachlan took it over. I struggled with that because I always thought I could do a good job of it, but I wasn't ready to take the title and really own it.It wasn't until a couple years later that I personally gained the confidence to say, "I'm the CEO." When I eventually could do it, I think I did a pretty good job because I learned I needed to be the sort of CEO that I was. I couldn't be trying to replicate something I thought in my head.I decided I was a product-centric CEO, and when I owned that, that's when I started to flourish in the role. If we were selling brake pads, you'd want the person in charge to be an expert on brake pads. If we're selling developer tools, the person in charge should be an expert on developer tools.SH: Tell me about the first major funding round.KP: In 2019 we raised a Series A of $28 million. The reason we did that was because I wanted to buy a house. I had previously been to the bank for a home loan and every bank rejected me. I was too risky because Buildkite's finances were largely US revenue, and my finances were Buildkite's finances.A lot of that Series A round was taken out as secondaries. Everyone who had invested the original 200 grand in the seed round got their money back plus some. I had enough money to buy a house, and only a few million went into the company as rainy day money.Keith in the early days of BuildkiteSH: What did you learn about taking VC money?KP: We effectively chose the one that gave us the highest valuation and a clean term sheet. At the time it was awesome because it meant we could sell less of our company for more money, but no one really tells you what happens if you go in at a high valuation early on.If you're given a high valuation, you're not worth that at the moment. They're pricing you based on what they think you're going to be worth. You effectively need to grow into the valuation, and if you don't then in your next round, you end up with a down round.It made the next round much harder. We hadn’t grown fast enough to justify the valuation, so the next round was effectively flat. No one warns you about that.I think we were naive going into that transaction. We always painted the picture of being a long-term sustainable business, and our position on that never changed. We weren't building something to sell. We were building something that would last forever. The VCs gave us money even though we said those words, but I think in their mind they were hoping we would change.Once you take big VC money, expectations change. They want big results, and we were still behaving like 37signals.Eventually I realised that if we’re going to play the enterprise game, we have to play it properly. That meant raising again, and building the team to go after bigger customers.SH: What changed when you took over as CEO the second time?KP: When I took over CEO, I really embraced having a sales team. Up to that point, Buildkite didn't have a sales team. I used to have this romantic relationship with the Atlassian approach, who famously had never had a salesperson. In reality they did have salespeople, they just called them something different.The biggest learning from hiring a salesperson was that there is a certain dance you need to have with customers during a sale, and you want someone whose job it is to do that tango.We hired a salesperson and built a sales team, and tripled revenue in a couple of years through doing that.SH: Buildkite is well known for being a much-loved product in the developer community. Tell me about your product development process.KP: It took me nine years to figure out my product voice. I read a book by Rory Sutherland called Alchemy. It was a book on marketing, but weirdly enough, this marketing book helped me find my product voice.I had a lot of stuff that was just instinct and gut, but I never figured out how to turn that gut into something actionable or a set of product principles. Reading this book helped me find that voice.I remember the day I showcased to the company, "Hey, I finally figured out what I've struggled with all this time." I did a three-hour presentation to the company, and I think everyone hated it. Everyone hated it because so many people disagreed with the principles.SH: What were some of those principles?KP: Here's a great example: don't listen to customers. Listen to them, but don't listen to them. What I learned is that when a customer comes to you with a problem, they come to you with a cry for help disguised as a feature request. You have to ignore the feature request and get at their problem.Ninety-nine percent of the time, they've had some configuration issue somewhere else, 10 steps earlier, that's led them to this point where they've fucked it up so badly that they need something to solve that.A feature request is not a feature request. It's a cry for help. That was difficult for a lot of people to unwind in their head, but that principle helped a lot.Another principle: I always wanted developers to be treated as humans, not robots. Just look at any error message in any developer tool. It's probably obscure and shit. One of the magical parts of Buildkite was that I spent a lot of time taking what the developer would give me, and interpreting it to be what they actually meant.You have to have pure empathy for the user. You're almost like a parent because you can't always give them what they want. You can easily just add all these checkboxes and make everyone happy, but you pay for it later with a million checkboxes.SH: Why do you think the team reacted negatively?KP: I think I should have packaged up my principles differently or had a different approach. They were pretty black and white, quite dogmatic. It was like, "This is how it is." Anyone receiving that would probably not like being told "this is the way it is from now on."At that moment, I realised the company I had was somewhat incompatible with that. I should have spent more time thinking about that stuff before going on mass hiring.KP: There's something not a lot of founders talk about because maybe they're scared about it, but in industry there's this thing called culture fit that people get wrong all the time.If you hire too many different people with different work styles, different wants, different needs, different approaches, different ideas, different values, different ethics, then everything becomes hard mode.I wish I had gone back and been more involved in hiring. I would have opted more for culture fit. I would have been more bullish and precise: here is the type of person we want, let's go find that type of person.At some point in hiring you get exhausted and you just hire the person who's at the top of the pile, even if they might not match who you wanted. You think, "We need somebody, so we just get them." That's a trap I see a lot of founders fall into, and it has major repercussions over time.When I'm starting my new company, Unreasonable Magic, I'm being very strict about who I let in, way more exclusionary this time around. Teams that build products aren't a party. It's a set of inventors and makers, and you need everyone on the same wavelength.SH: How did having a board change the way you operated?KP: I personally struggled with board stuff. The board was heavily American, and they were all operators who were used to working at a particular pace. I wasn't at that pace, and I couldn't help but feel that I was always letting them down. Not going fast enough.Board work at some point becomes theater, and I struggle with that. I struggle with having to put on a show for a board. I was always struggling to find the balance between how do I get the most out of these smart people versus how is this not just a press conference? I never figured it out.The thing about boards is they have a lot of control, but these people think about your company for only a couple of hours a month. That was super tough because you care a thousand percent, and they care, but they only care for a couple of hours.SH: You have since moved on from Buildkite. Can you talk about your exit?KP: I worked on Buildkite for 13 years, and the hardest part about leaving was that I didn't get to see what happened next. It was almost like I left halfway through a season of a TV show, and there were all these characters and stories and threads I never got to see the ending to.Whenever any founder exits a company, so much of that company is them, so you're leaving a part of yourself. The biggest struggle I've had since leaving is that no one's ever going to care as much about the thing as you did.It's like when you have an electrician come to your house. Sometimes they don't vacuum up as much as you would. You're always going to find that extra wire or bit of gyprock because it's not their house. Your company is your house.No exit is good enough for any founder after a 13-year thing. It's almost an impossible task to try to figure out how to exit someone from a company after 13 years gracefully.SH: What's next for you with Unreasonable Magic?KP: I've got 13 years of ideas to explore. Where I'm focusing my energy is on programming. A lot of programmers like programming, as they like to code. The rise of coding tools fundamentally changes the relationship you have with the work, more than anything in the history of programming.A lot of programmers who would program and get fulfilment out of it have become managers of a coding machine. Whenever I have a day of using Claude or similar tools, I walk away feeling dumb and empty. It's like popcorn. It's not a real meal, it's not feeding your soul.Unreasonable Magic is about how can we take these tools and make you feel fulfilled? How can we let you be as productive as using a coding assistant but also feel that you are the boss, that you walk away smarter at the end of a coding session?It's that doing-the-opposite thing again where everyone's trying to be more productive, but for me it's not about productivity. It's about relationships to the code.Programming is thinking. When I'm writing code, I'm thinking about how each line will be executed, what happens if this line goes wrong. You just don't get that same level of intimacy with the program when you use coding assistants because they can whip out so much code so quickly.The products I built with Claude are worse than without them because I use programming as a way to think and interact with the problem. When you're coding, you're deeply invested in the problem you're solving, getting intimate with the problem. With AI tools, it's surface level. It's a one-night stand with a problem versus a deep and meaningful relationship.Claude certainly makes me more productive, but at what cost? You're paying with the knowledge you would have learned from interacting with the problem.SH: What’s a book we should all read?KP: Alchemy by Rory Sutherland. It’s the book that helped me find who I am. That book changed more about Buildkite than I can list out. SH: What is a band or artist that we should all listen to?KP: Uhmm, I like beatboxing.SH: Do you beatbox yourself?KP: Oh gawd no. But there is this band I like, and the song is called Candy Thief. It’s K-pop. I probably listen to that song on repeat every day.SH: What is a podcast we should all listen to?KP: I listen to Conan O’Brien Needs A Friend. If I’m working all day, I feel like it's important for me to make sure my brain goes somewhere else at the end of the day. And Conan O'Brien is just a very silly human. SH: Amazing. Thanks for your time Keith, and good luck with Unreasonable Magic!]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Creative Technology: The Sound Blaster]]></title>
            <link>https://www.abortretry.fail/p/the-story-of-creative-technology</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45162501</guid>
            <description><![CDATA[The Sound Blaster]]></description>
            <content:encoded><![CDATA[Sim Wong Hoo was born on the 28th of April in 1955, the tenth child in a family of twelve children (five brothers, seven sisters). His family were Singaporean Hoklo with ancestry in the southernmost area of Fujian, China, and they spoke Hokkien. He grew up in a kampung called End of Coconut Hill in Bukit Panjang, and his father, Sim Chye Thiam, was a factory worker while his mother, Tan Siok Kee, raised chickens, ducks, pigs, and rabbits, and grew fruits and herbs. The young Sim had chores around the house and around the farm as soon as he was physically able, and he often sold eggs at the local market before school classes started each day. This afforded him the ability to buy things for himself such as his harmonica when he was about 11. The harmonica was a hobby he greatly enjoyed throughout his life. He also enjoyed making his own games.Sim graduated from Bukit Panjang Government High School and then went on to attend Ngee Ann Technical College for engineering. At the college, Sim was a member of both the harmonica troupe, consisting of thirty people, and the Practice Theatre School. In the theatre, Sim provided musical accompaniment for the school’s performances with the harmonica and the accordion, often performing his own arrangements. His two interests collided at this time in his life. When writing or arranging music, he’d only be able to hear his composition during weekly practice. Having seen a computer, he realized that a computer could allow him to hear the music precisely as written while still working on it. Sim envisioned a computer that could play music, talk, or even sing, and his earlier entrepreneurial spirit drove him to an ambitious goal: selling 100 million units of a single piece of equipment. Sim graduated in 1975 and then entered the uniformed services for his obligatory two years.For three to four years following his service, Sim worked a brief stint on an offshore oil rig, designing computerized seismic data logging equipment. After that, he opened a computer education center at Coronation Plaza. As he was more interested in teaching and researching, he left the business work to his business partner. This wasn’t a great decision. His partner took off with all the money.Sim Wong Hoo with a variety of Creative productsOn the 1st of July in 1981, Sim founded Creative Technology with Ng Kai Wa, who had been his childhood friend and classmate in a 440 sqft shop at Pearls Center using his own savings of around $6000. The company initially did computer repair and sold parts and accessories for microcomputers. Business wasn’t great, so Sim also did some teaching. In whatever time he had left to him, he was busy developing his own products.Creative CUBIC 99 advertisementThe first Creative product (at least, for which I can find any evidence at all) was a memory board for the Apple II. Having an understanding of the Apple II, Creative followed their memory board by producing the CUBIC 99 in 1984. This was an Apple II compatible machine with a 6502, but it also featured a Zilog Z80 for compatibility with CP/M. I am not certain how this was arranged, but I imagine that it wasn’t entirely dissimilar to the Microsoft Z80 SoftCard. Of course, this is Creative Technology, so the machine also featured a voice synthesizer allowing users to record and playback words in English or Chinese. The computer also had an optional Cubic Phone Sitter which could make and answer calls. This was the first computer to be designed and manufactured in Singapore.The market was moving quickly, and the IBM PC had created a standard. The CUBIC CT was released in 1986 as a PC compatible, and it featured graphics and sound capabilities. This was, essentially, a multimedia PC (with a weaker CPU than that standard would later dictate) localized in the Chinese language. Unfortunately, it was too early. With nearly zero software support for anything approaching the capabilities of the CT and an even smaller local market, the product was a failure.Creative Music System advertisementRealizing that the sound features of the CUBIC CT were likely more salable and supportable than the computer itself, Sim and his company chose to sell the sound card by itself as the Creative Music System (also C/MS or CT-1300). This board was built around two Philips SAA1099 chips providing 12 channels of square-wave stereo sound on a half-length 8bit ISA card, and it shipped with five 360K 5.25 inch floppy disks (Master Disk, Intelligent Organ, Sound Disk 1, Sound Disk 2, Utilities). To promote this card, Sim moved to California in 1988 and established Creative Labs. His goal was to sell at least 20,000 cards generating $1 million in revenue. The USA was the largest PC market, and he knew that sound cards were seeing good sales.Creative Game Blaster, image from pixelatedarcade.comBeing in the USA, Sim quickly realized that games were the software titles driving sound card sales, and this meant that he’d need new branding and software partners. The C/MS became the Game Blaster, and the included software was now just the Intelligent Organ, a test utility, a TSR, and drivers for Sierra Online games. The inclusion of those drivers was key to what would follow. Creative’s partnership with Sierra meant that some of the most popular games of the era would support the Game Blaster; ultimately, over 100 games would support the C/MS and Game Blaster. Naturally, selling a card required a store front, and Creative found a partner in Radio Shack. While the Game Blaster sold better than any Creative product before it, it didn’t overtake the Adlib.Creative SoundBlaster with the CUBIC CT, image from Creative Labs PTETo better compete, Creative needing something that was better than the Adlib but still compatible with it. This came in 1989 with the CT1310, better known as the Sound Blaster. The Sound Blaster offered 12-voice C/MS stereo sound, 11-voice FM synthesis with Adlib compatibility (via the Yamaha YM3812), a MIDI interface, a joystick port, microphone jack with a built-in amplifier, a stereo amplifier with volume dial, the ability to play back mono-sampled sound at up to 22kHz, and record at 12kHz. While a sample rate of 22k doesn’t seem great (because it isn’t) this did allow simultaneous output of sound effects and music in a game. Likewise, while a game port doesn’t seem like all too big a deal, it saved the buyer an extra $50 to buy one separately, and it saved an ISA slot too. The Sound Blaster was the first sound card to feature digital sample playback, and it took over the market, quickly becoming the top-selling expansion card of any kind in under a year, and Creative’s revenues hit $5.5 million. With the C/MS never having been too popular, Creative followed the CT1310 with the CT1320 which removed the C/MS chips but kept sockets for them on the card.1989 also saw Creative release the PJS operating system and the PJ Views word processor and desktop publishing system which included support for 70,000 Chinese characters. As far as I know, these products were only released in Southeast Asia.Tandy Multimedia Audio Adapter, image from vcfed.org member CloudschatzeAnnounced in May of 1991, the Sound Blaster Pro, CT1330, was a major redesign of Creative’s sound card. This card used two Yamaha YM3812 chips to provide stereo sound while maintaining full backward compatibility with the original Sound Blaster and Adlib. Sample rates were increased to 22kHz for stereo, 44.1kHz for mono. A simple mixer, low-pass filter, high-pass filter, and CD-ROM interface were added. This CD-ROM interface could take multiple forms, but it was useful in pushing CD-ROMs into the mainstream. Many early CD-ROM drives were SCSI-only and that was expensive. Creative worked with MKE in Japan to produce low-cost IDE CD-ROM drives, and then included support on their cards. As for the card itself, while the card did have the AT connector, it wasn’t 16bit. The Pro was still an 8bit card. The presence of the 16bit AT connector was for additional interrupts and DMAs on the 16bit bus that supported the Multimedia PC standard from Microsoft. The Sound Blaster Pro 2 was released shortly after the original, and it replaced the YM3812s with a single YMF262. The Pro series was often sold in Multimedia Upgrade Kits where it was bundled with a CD-ROM drive and software titles. Given that CD-ROMs were quite new, these kits often represented a significant value to consumers.This card can also be found in Tandy Multimedia PCs as the Tandy Multimedia Audio Adapter. Immediately noticeable changes were from the regular joystick port to two mini-DIN connectors compatible with the Tandy 1000 joysticks, and the addition of a mini-DIN MIDI port. For both the joystick connectors and MIDI connector, adapters were required. A less noticeable change, the Tandy card used a different bus interface chip, the CT1346, and the output amplifier could be disabled via a jumper. Finally, the card featured a high-DMA channel allocated for audio which allowed 16bit 44.1kHz mono output in Windows.Creative Sound Blaster, CT1350b, image from theretroweb.comThe Sound Blaster 2, or Sound Blaster Deluxe, model CT1350 was released in October of 1991. This model improved the board layout allowing for a more compact card, and it completely eliminated the C/MS chips. This model improved on its predecessor by adding auto-init to DMA allowing the card to play continuously without the crackling or pausing that was experienced on the original. The sample rate for digital audio on this card was increased to 44kHz for playback and to 15kHz for recording. With this card, a DSP upgrade was made available to owners of the original Sound Blaster, which was required for full compatibility with the Windows 3 multimedia extensions.Creative was growing quickly, achieving an estimated 72% market share of the sound card market globally in 1992, but it was also facing significant competition. Media Vision’s Pro Audio Spectrum Plus, released in 1991, was capable of 8bit digital sampling and 16bit digital audio playback. It featured a CD-ROM interface, and it was Sound Blaster compatible. The Pro Audio Spectrum 16 of 1992 moved the company to 16bit ISA, added 16bit stereo digital audio, and featured stereo FM synthesis while maintaining full Sound Blaster compatibility. Then, there was Aztech in the more low-end market making some serious OEM deals with likes of Dell and Compaq. They entered the market in 1992 at a much lower price point and offered broad compatibility with sound cards like the Adlib, Sound Blaster 2, Sound Blaster Pro, Cover Speech Thing, Disney Sound Source, and Windows Sound System.To answer the competition and maintain their lead, the company released the Sound Blaster 16, CT1740, in June of 1992. This was a fully 16bit sound card and featured support for 16bit 44.1kHz digital audio. Creative had partnered with E-mu Systems to offer the Wave Blaster daughter board that brought wavetable synthesis to card through the header on the top of the card. The empty socket seen on the SB16 was for the Creative Signal Processor, CT1748, which brought hardware-assisted speech synthesis, QSound audio spatialization for digital wave playback, and PCM audio compression/decompression. The SB16 was more popular than any card before it, and the wavetable daughter board was popular enough to push Creative to acquire E-mu in March of 1993 for $54 million.Creative went public in August of 1992 and became the first Singaporean company to be listed on the NASDAQ. In September of 1992, Creative expanded into China establishing a joint venture in Beijing called Chuang Tong Multimedia Computer Ltd. Creative held 70%, NewStone 20%, and Da Heng 10%. In addition to selling the company’s multimedia hardware, the Chinese subsidiary developed and distributed CD-ROM software in the Chinese language, and sold PJS and PJ Views. The following year, Ed Esber, formerly of Ashton-Tate, joined Creative Labs as CEO, and he assembled a team that included Rich Buchanan, Gail Pomerantz, and Rich Sorkin. Of the new team in the USA, Sorkin had the most lasting impact. He began licensing programs, shortened product development cycles, and began legal endeavors to protect Creative’s intellectual property. Throughout 1993, Creative established itself Australia, Japan, the UK, and Ireland. Finally, that same year, Creative acquired ShareVision Technology who made videoconferencing technologies. Creative’s later attempts in that market didn’t make it far.Creative AWE32 advertisementBy 1994, the Sound Blaster 16 was the audio card. The company needed both a low-end product and high-end product, and so the ViBRA 16, CT2501, took the low, and the AWE32 took the high. The ViBRA was a cost-reduced, single-chip implementation of the SB16 and was frequently supplied to OEMs. Some ViBRA models included an on-board modem. The AWE32 featured the CT1748 CSP, CT1747A with OPL3 FM synth, CT1971 (EMU8000) and CT1972 (EM8011, 1MB sample ROM) wavetable synth, CT1745A mixer, CT1741 DSP, a CD-ROM interface, wavetable header, SPDIF header, and 512K of sample RAM upgradeable to 28MB via two 30-pin SIMM slots. The AWE32, CT3900, was a full-length, 16bit, ISA card. With the SB16, ViBRA, and AWE32 on the market, the company’s revenues exceeded $650 million, and the company was listed on the Singapore stock exchange.On the 26th of October in 1994, in time for the Christmas shopping season, Creative released the 3DO Blaster. This brought 3DO games to the PC via a full-length, 16bit, ISA card. On the card was a 32bit RISC CPU, a DSP for CD audio, two graphics processors, 2MB of RAM, 1MB of ROM, 1MB of VRAM, and 32K SRAM with battery backup. The box contained two games (Shockwave, Gridders), some demos, drivers, Aldus Photostyler and Gallery Effects, a controller, manuals, the card itself, and a registration card. Of course, the 3DO blaster was not, itself, a standard VGA card. To use the 3DO Blaster, one’s PC would need to be at least a 25MHz Intel 386, have at least 4MB of RAM, a VGA card, Windows 3.1, a CD-ROM drive (either Matsushita or Creative CR-564), a Sound Blaster, and some speakers. The press release from 3DO read, in part:With the introduction of 3DO Blaster, Creative is targeting their extensive installed base of CD-ROM users. 3DO Blaster provides PC owners with the ultimate game platform — exciting 3DO games recognized for unprecedented interactive realism, full-motion video, CD-quality audio and three-dimensional sound effects.“Today’s announcement reflects the efforts of two of the most advanced technology suppliers, Creative Technology and 3DO. The 3DO Blaster provides the advantage of Creative’s and 3DO’s innovation to the installed base of PC’s already using Creative multimedia products,” said Sim Wong Hoo, CEO and chairman of Creative Technology Ltd.“Creative’s and 3DO’s technologies create an advanced entertainment platform which will enhance the capabilities of PCs, and expand the imagination of users by providing them access to exciting, interactive products that fully exploit the potential of multimedia entertainment.”Trip Hawkins, president and CEO of The 3DO Company, said today’s announcement enables his company to expand quickly and aggressively into the vast PC market. “Creative is the leading supplier of multimedia products for PCs, providing us with the opportunity to deliver 3DO’s advanced interactive technology to an even broader audience,” said Hawkins.Given that the 3DO Blaster cost $399.95 and the 3DO console didn’t do too well, this product was moribund from the start. Also in October of 1994, Creative released HansVision. This was a Chinese-language office suite for Windows, and while Windows replaced PJS, HansVision replaced PJ Views. Also in 1994, Creative acquired Digicom Systems, a modem company. This resulted in the Creative Phone Blaster in 1995. The Phone Blaster, CT3110, was largely just a ViBRA 16 with an integrated modem and a wavetable header, but it was a full-length, 16bit, ISA card. It faired better than the company’s attempts at video conferencing, but it wasn’t much of a success.A cost reduced version of the AWE32 was released in 1995 as the Sound Blaster 32. It was roughly equivalent to the AWE32 but lacked the on-board RAM, Wave Blaster Support, and CSP. Additionally, it utilized the CQM chip from the ViBRA instead of the OPL3. The CQM (Creative Quadratic Modulation) commonly suffered audio clipping, hiss, and ringing when playing digital audio.Esber, Buchanan, and Pomerantz left the company in 1995. They’d never really got on with the folks in Singapore, and the two groups had disagreements over the company’s strategy. Sorkin, however, was promoted to General Manager of the audio division, and then to executive VP of business development and corporate investments.With the earlier success of the company’s CD-ROM and sound card bundles packing Matsushita, Mitsumi, and other vendors’ drives, Creative had gone into the CD-ROM drive business. In 1995, the industry had a large oversupply and Creative dumped its inventory incurring a loss of $30 million, and causing the company’s share price to drop nearly 75%.Creative 3D Blaster, image from wiki.peterhuman.netCreative 3D Blaster VLBIn 1995, Creative released the 3D Blaster, CT6200. This was a 3D accelerator card built around the 3DLabs GLINT 300SX processor. The GLINT 300SX was built of about a million transistors on IBM’s 3.3V, 0.5 micron process, and it was capable of about 2.5 billion operations per second. As with many cards that would follow, GLINT was designed to process Gouraud-shaded, Z-buffered, dithered triangles that were generated by an application or game and passed to GLINT via the OpenGL API (in this case CGL, and later DirectX). The chip was accompanied by 2MB (or 4MB with the 2MB daughter board) of DRAM, and this VESA Local Bus card achieved a pixel filtrate of 25MP/s. The card cost $349.95 at launch and it only handled 3D, requiring the user to have a 2D card installed and use VGA passthrough. This was roughly a year before the first Voodoo card, but shortly after the Diamond Edge 3D with an NV1 at $299 for 2MB. Given that this was a VLB card, the 3D Blaster was largely a card for 486 machines, and given the price, it didn’t sell well. As far as I am aware, there were roughly 13 game titles to support CGL. Of those, there was Rebel Moon which was exclusive to the CT6200, and even having been designed exclusively for this card, it wasn’t great. Frame rates would get quite sluggish at times, likely having been hampered by the 486 at the heart of VLB machines.Creative Sound Blaster AWE64 ValueCreative Sound Blaster AWE64 GoldThe Sound Blaster AWE64 was released in November of 1996, and it improved on the AWE32 in a few ways. First, it increased the signal to noise ratio (especially in the Gold version), and increased component integration resulting in traces that likewise avoided noise. Given increases in integration, the board also became smaller than its predecessor and decreased cost. It’s also notable that with general technological advancements made in the industry, the ICs were of a consistently higher quality than those used in earlier cards despite being less expensive. The card came in two versions; one was the standard version which later was re-branded as the Value version (CT4500) with 512K RAM, and the other was the Gold version (CT4390) with 4MB of RAM, a 20bit DAC, and separate SPDIF output. Functionally, there were two major differences between the AWE64 and AWE32. The AWE64 added WaveGuide which synthesizes instrument sounds. While the Wave Blaster is no longer supported, the AWE64 Gold does have line inputs on the rear for an external Sound Canvas or similar product. Effectively, the WaveGuide feature allowed for greater polyphony through the use of 32 extra software-emulated channels, but in practice this used more CPU time and wasn’t very popular. The other change was the removal of 30-pin SIMM slots in favor of proprietary memory daughter boards. In all other respects, the AWE64 was simply a better AWE32. For purists, the AWE64 lacks Sound Blaster Pro compatibility and genuine OPL3 FM Synthesis, but for those who want SB16 compatibility, mostly noise-free output, hassle-free plug-n-play, and General MIDI capabilities, the AWE64 is wonderful. For collectors today, however, owning a genuine AWE64 Gold will set a buyer back between $200 and $400. That price will increase for those desiring a SIMMConn (replacing the proprietary memory daughter board with a 30-pin SIMM adapter).Creative closed 1996 with $1.6 billion in revenues, and Sorkin left the company for Elon Musk’s Zip2.Media Vision will get its own article at some point, but the company collapsed in a scandal, and Aureal Semiconductor was formed on the 9th of November in 1995 out of the prior company’s remnants. On the 14th of July in 1997, Aureal announced the Vortex AU8820 with high quality positional audio via the company’s A3D technology. This allowed a human listener to perceive audio as coming from a rather precise location, and it had originally been developed by Crystal River Engineering for NASA’s Virtual Environment Workstation Project. Crystal River had been acquired by Aureal in May of 1996, and Aureal productized the technology. The Vortex proved to be extremely popular and its features were supported by many of the most popular gaming titles of the time: Half-Life, Unreal, Quake II, and so on.For Creative, the arrival of the Vortex card was existential. Most of the company’s revenues came from sound cards, and the Vortex had gained the respect of gamers and audiophiles almost immediately following its release. What was worse was that its feature set was being incorporated into games where once the Sound Blaster had been the de facto standard. The fastest way to gain expertise is to buy it, and Creative bought Ensoniq in January of 1998 for $77 million. Within Creative, Ensoniq was merged with E-mu Systems. The acquisition brought the Ensoniq AudioPCI into Creative, and this was a card intended to be cheap, functional, and feature rich. It supported digital effects such as reverb, chorus, and spatial enhancement, as well as DirectSound3D, and sample-based synthesis. For the new owner, the card couldn’t have been better as it support Sound Blaster compatibility through the use of a TSR despite being a PCI card. This card was rebranded several times as the Sound Blaster PCI 64, PCI 128, Vibra PCI and so on. The Ensoniq ES1370 that powered the card became the Creative 5507, and then revised into further AC97 variants. A major downside of the card was that it ran with a 44kHz sample rate only, and thus, audio recorded at any other rate was resampled which lowered fidelity and increased CPU time. The later AC97 variants supported only 48kHz natively, and therefore likewise resampled audio. While the AudioPCI wouldn’t win over audiophiles, its low cost moved units and won the company some OEM deals.3DBlaster Voodoo2, image from thunder.netOn the 20th of January in 1998, Creative chose to remedy the mistake it had made with their first 3D accelerator, and they released the CT6670, or 3D Blaster Voodoo2. It used the PCI bus, had 8MB of 25ns EDO RAM, and like all Voodoos, supported Glide. In September the same year, the company released the 3D Blaster Voodoo Banshee AGP card (CT6750) as well as the CT6760 PCI card. Depending upon the SKU, these could come with 8MB, 12MB or 16MB of SDRAM. While using the same name, the AGP card was designed entirely by Creative, and it was the only Creative board using a 3dfx chip to be so.In July of 1998, Creative proved to be a leader in a different market segment with the introduction of HansVision Future 2000 in schools around Singapore. HVF2K featured the HansWord word processor, the HansBrowser bidirectional English-Chinese dictionary, and the HanSight online translator of webpages. Creative had successfully implemented productivity tools on the web, and they’d done machine translation of the web. Truly outstanding for the time.Beginning in 1997, Creative Labs optical drive bundles began featuring DVD drives and speaker sets (thanks to the acquisition of Cambridge SoundWorks), and on the 10th of March in 1998 these products dropped in price rather dramatically and were expanded in their contents. One example, the Creative Components 700 (the most expensive on offer) included Creative’s PC-DVDx2 drive, Sound Blaster AWE64, the new Graphics Blaster Exxtreme (PCI, 3DLabs Permedia 2 chip, 4MB SGRAM, 64bit data path, OpenGL, up to 1600 by 1200, 60Hz to 150Hz refresh), Creative MPEG-2/Dolby Digital decoder board, and Cambridge SoundWorks’ PCWorks speaker system. This was priced at $479.99. The DVD-ROM drive was $149.99 stand-alone, and the decoder board was $169.99 stand-alone.Sound Blaster Live!In August of 1998, Creative released the Sound Blaster Live! (CT4670) as a successor to the ViBRA range of sound cards. These were built around the EMU10K1 chip and supported DirectSound3D, EAX (Environmental Audio Extensions) versions 1 and 2, and featured an onboard, 64-voice, wavetable synthesizer though it did use main memory for sample storage. This was a PCI bus card, and it utilized Ensoniq’s TSR for the emulation of Adlib, Sound Blaster, and General MIDI (the adaptation of that TSR was a condition of the acquisition of Ensoniq).EMU10K1 Digital Audio Processor652KB ∙ PDF fileDownloadEMU10K1 Digital Audio Processor, from IEEEDownload1998 was a year of intense litigation for Creative. The first suit was filed by Creative against Aureal over MIDI caching patent infringements. This was followed by a counter claim of defamation and unfair competition by Aureal against Creative. Creative’s advertising of the Sound Blaster Live! then sparked more lawsuits by Aureal against Creative over claimed falsehoods. By the end of 1999, Aureal had won but had gone bankrupt as a result of legal costs. I am sure it cut quite deeply, but Creative acquired Aureal in September of 2000 for $32 million.After 3dfx acquired STB, they began making their own cards. As a result, Creative began making, mostly, Nvidia-based cards for video and graphics. There were some exceptions. The Creative 3D Blaster Savage 4 obviously used the S3 Savage 4 chipset, and the Graphics Blaster Exxtreme used chips from 3DLabs. Possibly to prevent the sort of problem they’d had with 3dfx, Creative then acquired 3DLabs in June of 2002. From 1999 onward, Creative would release a handful of graphics cards, some did well and others didn’t, but they were no longer a substantial source of revenue for the company.Creative Nomad in box, image from peterhuman.netCreative Nomad, box, back, image from peterhuman.netCreative had some great timing with one particular product. WinAmp brought MP3 support to the desktop in 1997, and Windows Media Player 5.2 gained MP3 support in 1998. Creative released the NOMAD MP3 player in April of 1999 for $429. In June of 1999, Napster was born, and MP3s exploded in popularity. The NOMAD connected to a user’s PC via a cradle, and that cradle attached to the PC via parallel port. The device had either 32MB or 64MB of battery backed RAM depending upon the model purchased, with more storage provided by flash media. The NOMAD also provided an FM tuner for those who wished to listen to radio, and a microphone for voice recordings. On the PC side of things, Creative provided both a CD ripper and the NOMAD Manager. The latter of which was for handling the transfer of content to the device. The box proudly claims that 64MB would provide an hour of CD-quality audio, and that’s… well… not true at all. MP3 encoding is quite lossy, and to compress 700MB of lossless CD audio into 64MB infers an incredibly low sample rate. An hour of audio in 64MB would absolutely not be “CD-quality.” Marketing aside, the NOMAD was a cool product.nomadworld.com as of the 9th of October in 1999The NOMAD II launched the following year, and it was well received by the press. This time, Creative used USB 1.1 instead of parallel, 32MB of internal memory, bundled 64MB Smart Media flash, and added EAX support, WMA support, a backlight for the LCD, a wired remote for controls, and slightly better microphone for voice recording. This was followed by the IIc which removed the FM tuner and offered either 64MB or 128MB of internal memory.Creative released two further units in 2000, the NOMAD Jukebox and the NOMAD II MG. These also used USB. The II MG returned to the format of the original NOMAD, but it added equalizer presets, ID3-tag support, the wired remote, and the FM tuner returned and now featured. a sleep timer and recording. The NOMAD Jukebox was different. It was roughly the size and shape of a Discman, though slightly thicker, and had a 2.5 inch, 6GB, IDE hard disk in it. The Jukebox also had WAV support, line-in for recording, and two line-out jacks for four speaker systems like Creative’s own Cambridge SoundWorks four point surround. If NiMH batteries were being used, the Jukebox featured a DC jack, and it could charge those batteries. Given the use of spinning rust, battery life was just four hours. For adventurous folks today, the hard disk in this is upgradeable, but the disk didn’t have any identifiable partitions or formatting, and as a result the first 32MB need to be copied with something like dd and then the drive inserted into the Jukebox and the format function used by holding the Play and Stop buttons (or EAX and Down on newer units) during the “loading” sequence.Following the 2001 crash, Creative became an increasingly audio-only company. Some Chinese/English, electronic, pocketable dictionaries would continue in Asia, but most of Creative’s other endeavors ceased. The company was focused on speakers, headphones, sound cards, and portable music players.US patent 6928433 was awarded to Creative on the 9th of August in 2005 for the user interface of the Zen and NOMAD Jukebox MP3 Players. This patent had been applied for on the 5th of January in 2001. Creative filed suit against Apple in May of 2006, and the two companies reached a settlement in August with Apple agreeing to pay $100 million.Time wasn’t kind to Creative. Motherboard audio had become good enough for most people, and fewer than a quarter of desktop users bought dedicated sound cards. Worse, the shift to laptops during the first decade of the new millennium meant that a majority of PC users couldn’t make use of a sound card. Creative voluntarily delisted from the NASDAQ with the last day of trading having been the 31st of August in 2007. The company continued to be listed on SGX-ST. Layoffs of some staff in Stillwater, Oklahoma followed in 2008.In 2009, 3DLabs and Creative’s Personal Digital Entertainment divisions were combined and reformed as ZiiLABS. This division designed a series of semi-custom ARM chips with 24 to 96 processing units called StemCells. These StemCells were sort of DSPs, and video, audio, and 3D graphics tasks were handled by these coprocessors. ZiiLABS produced at least five SKUs: ZMS-05, ZMS-08, ZMS-20, ZMS-40, and ZMS-50. On the 19th of November in 2012, Creative announced that they’d licensed ZiiLABS technology and patents to Intel for $20 million, and they sold engineering resources and assets to Intel for $30 million. Creative stated in the announcement that they’d retained the patents themselves. The ZiiLABS website was online through 2023, but it later went dormant with a default tomcat page in 2024, and the domain is no longer active. From 2012 forward, the website hadn’t been updated.Today, Creative is led by Freddy Sim (Sim Wong Hoo’s brother), Tan Jok Jin is the executive chairman, and Ng Kai Wa is vice chairman. The company’s 2024 net sales stood at $62.8 million (12% increase over 2023) with $59.4 million of that being due to audio, speakers, and headphones. The company reported a net loss of $11 million for 2024, down from $17 million in 2023. The company continues to sell Sound Blaster products including both internal and external sound cards, DACs, and amplifiers. Their speakers, headphones, and headsets sell well and have won the company some awards.Creative rose to dominate the sound card market at a time when there weren’t many options. They made an excellent product, marketed well, and made solid relationships with software makers. The primary issue for the company was that their entire business was built around a single product category, and their attempts to break out of that category weren’t successful. With video cards, they were right on time with a decent product, but the Voodoo was superior. They pivoted and survived that transition only to have 3dfx abandon board partners. They then moved to MP3 players, saw some success, but were beaten by Apple. Today, the company continues in the same niche they once dominated, and they continue to make excellent sound cards. They are simply a much smaller company. Among retro-tech enthusiasts, however, the Sound Blaster 16, Pro, and AWE64 continue to have loyal fans.My dear readers, many of you worked at, ran, or even founded the companies I cover here on ARF, and some of you were present at those companies for the time periods I cover. A few of you have been mentioned by name. All corrections to the record are sincerely welcome, and I would love any additional insights, corrections, or feedback. Please feel free to leave a comment.No posts]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[No Silver Bullet: Essence and Accidents of Software Engineering (1986) [pdf]]]></title>
            <link>https://www.cs.unc.edu/techreports/86-020.pdf</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45161556</guid>
        </item>
        <item>
            <title><![CDATA[How to make metals from Martian dirt]]></title>
            <link>https://www.csiro.au/en/news/All/Articles/2025/August/Metals-out-of-martian-dirt</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45161229</guid>
            <description><![CDATA[Swinburne and CSIRO researchers have successfully made iron under Mars-like conditions, opening the door to off-world metal production.]]></description>
            <content:encoded><![CDATA[
        



      27 August 2025
  3 min read






    Key points
    
        Swinburne and CSIRO researchers are investigating ways to produce native metals using materials found on Mars.
              Martian settlements will require large amounts of metal that are difficult to ship from Earth.
              The team have successfully produced iron using regolith simulant that mimics what is available on the Red Planet.
    
  


The idea of building settlements on Mars is a popular goal of billionaires, space agencies and interplanetary enthusiasts.
But construction demands materials, and we can't ship it all from Earth: it cost US$243 million just to send NASA's one tonne Perseverance Rover to the Red Planet.
Unless we're building a settlement for ants, we'll need much, much more stuff. So how do we get it there?
CSIRO Postdoctoral Fellow and Swinburne alum Dr Deddy Nababan has been pondering this question for years. His answer lies in the Martian dirt, known as regolith.
"Sending metals to Mars from Earth might be feasible, but it's not economical. Can you imagine bringing tonnes of metals to Mars? It's just not practical," Dr Nababan says.
"Instead, we can use what's available on Mars. It's called in-situ resource utilisation, or ISRU."

More specifically, Dr Nababan is looking at astrometallurgy — making metals in space.
Building an off-world foundry
As it turns out, Mars has all the ingredients needed to make native metals. This includes iron-rich oxides in regolith and carbon from its thin atmosphere, which acts as a reducing agent.
Swinburne University of Technology astrometallurgist, Professor Akbar Rhamdhani, is working with Dr Nababan to test this process with regolith simulant - an artificial recreation of the stuff found of Mars.
"We picked a simulant with very similar properties to that found at Gale Crater on Mars and processed them on Earth with simulated Mars conditions. This gives us a good idea of how the process would perform off-world," he says.


      


      
        The researchers used a regolith simulant that mimics the materials found at Gale Crater on Mars.
          
            © 
Swinburne University          
      
  
The simulant is placed inside a chamber at Mars surface pressure and heated at increasing temperatures. The experiments showed pure iron metal formation around 1000°C, with liquid silicon-iron alloys produced around 1400°C.
"At high enough temperatures, all of the metals coalesced into one large droplet. This could then be separated from liquid slag the same way it is on Earth," Professor Rhamdhani says.
Along with Dr Nababan, Prof Rhamdhani is collaborating with CSIRO's Dr Mark Pownceby to further advance the process. They're particularly focused on making metals with zero waste, where the byproducts of the process are used to make useful items.
If you can't ship it, make it
ISRU is a growing area of space science because in rocket launches, every kilogram counts. While the cost of launches is going down, the demands of human exploration are immense.
But huge developments are already happening, including the first demonstration of ISRU off-world. The MOXIE experiment on board the Mars Perseverance rover produced breathable oxygen using only the carbon dioxide in the planet's atmosphere.
Metal production is the next giant leap. Prof Rhamdhani hopes Mars-made alloys could be used as shells for housing or research facilities, and in machinery for excavation.


      


      
        The regolith simulant is placed in a furnace that recreates Martian conditions and heated, producing iron. 
          
            © 
Swinburne University          
      
  
"There are certainly challenges. We need to better understand how these alloys would perform over time, and of course whether this process can be recreated on the real Martian surface," Prof Rhamdhani says.
But in the meantime, Swinburne and its partners are doubling down. Prof Rhamdhani together with Dr Nababan and Dr Matt Shaw, another CSIRO researcher and Swinburne alum, recently delivered a 4-day bespoke workshop on astrometallurgy in South Korea. The feedback was promising.
"We're starting to see increased interest in this field globally as the world gets serious about Mars exploration," he says.
"To make it happen, we're going to need experts from many fields — mining, engineering, geology, and much more."
For Dr Nababan, the benefits go beyond exploration. He hopes their research will also drive more efficient metallurgy here on Earth.
"By doing this, I wish that I can help the development of space exploration, and at the end it will bring good to human life here on Earth."
This was article is published from Swinburne University. Read the original article.




  





      ]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[The MacBook has a sensor that knows the exact angle of the screen hinge]]></title>
            <link>https://twitter.com/samhenrigold/status/1964428927159382261</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45158968</guid>
            <description><![CDATA[Something went wrong, but don’t fret — let’s give it another shot.]]></description>
            <content:encoded><![CDATA[Something went wrong, but don’t fret — let’s give it another shot. Some privacy related extensions may cause issues on x.com. Please disable them and try again.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[What is the origin of the private network address 192.168.*.*? (2009)]]></title>
            <link>https://lists.ding.net/othersite/isoc-internet-history/2009/oct/msg00000.html</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45156826</guid>
        </item>
    </channel>
</rss>