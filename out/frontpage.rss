<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Hacker News: Front Page</title>
        <link>https://news.ycombinator.com/</link>
        <description>Hacker News RSS</description>
        <lastBuildDate>Fri, 29 Aug 2025 14:09:39 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>github.com/Prabesh01/hnrss-content-extract</generator>
        <language>en</language>
        <atom:link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/frontpage.rss" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[Draft SMS and iMessage from any computer keyboard]]></title>
            <link>https://sethmlarson.dev/draft-sms-and-imessage-from-any-computer-keyboard</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45063919</guid>
            <description><![CDATA[If you're like me, you don't love the ergonomics of writing long text
messages on your mobile phone keyboard. We own an “Arteck HB066”
Bluetooth keyboard for this use-case which works great and cos...]]></description>
            <content:encoded><![CDATA[
    
        
        
            Seth Larson @ 2025-08-29
        
        
    

If you're like me, you don't love the ergonomics of writing long text
messages on your mobile phone keyboard. We own an “Arteck HB066”
Bluetooth keyboard for this use-case which works great and costs $45.
But I'm not interested in spending money today.

What if
I could write text messages, both SMS or iMessage, using any computer keyboard?



This little tool does just that: write text messages in
this browser window, and it'll generate a QR code which you can scan with your phone camera to send the message.
If you are sending to multiple recipients, use a comma (,) to delimit the different recipient
phone numbers. I recommend using international codes (+1 for the USA), but it appears to work at least on iOS without them.

Don't know or don't want to type in your recipient phone number directly? Add a 1 as the recipient, scan the QR code,
and then fill in the recipients on your phone to use auto-complete from your contacts list.

All data stays within the browser: your data is not processed, saved, or sent to
any other server. If this tool is useful: bookmark the page for later use and let me know what you think.







QR codes generated using qrcode-svg, licensed MIT and Copyright (c) 2020 datalog.




    
        Wow, you made it to the end! ...and you're thinking, what now?
        
        
    Share your thoughts on Mastodon, email, or Bluesky.
    Follow this blog on RSS or the email newsletter.
    Browse this blog’s archive of 134 entries.
    Check out this list of cool stuff I found on the internet.
    Go outside (best option)

    



]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Show HN: Sosumi.ai – Convert Apple Developer docs to AI-readable Markdown]]></title>
            <link>https://sosumi.ai/</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45063874</guid>
            <description><![CDATA[sosumi.ai provides Apple Developer documentation in an AI-readable format by converting JavaScript-rendered pages into Markdown.]]></description>
            <content:encoded><![CDATA[
            
                Disclaimer: This is an unofficial, independent project and is not affiliated with or
                endorsed by Apple Inc. “Apple”, “Xcode”, and related marks are trademarks of Apple Inc.
            
            
                This service is an accessibility-first, on‑demand renderer. It converts a single Apple Developer page to
                Markdown only when requested by a user. It does not crawl, spider, or bulk download; it does not attempt
                to bypass authentication or security; and it implements rate limiting to avoid imposing unreasonable
                load.
            
            
                Content is fetched transiently and may be cached briefly to improve performance (approximately 30
                minutes). No permanent archives are maintained. All copyrights and other rights in the underlying
                content remain with Apple Inc. Each page links back to the original source.
            
            
                Your use of this service must comply with Apple’s Terms of Use and applicable law. You are solely
                responsible for how you access and use Apple’s content through this tool. Do not use this service to
                circumvent technical measures or for redistribution.
            
        ]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Grok Code Fast 1]]></title>
            <link>https://x.ai/news/grok-code-fast-1</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45063559</guid>
        </item>
        <item>
            <title><![CDATA[Show HN: A minimal TS library that generates prompt injection attacks]]></title>
            <link>https://prompt-injector.blueprintlab.io/</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45063547</guid>
            <description><![CDATA[Enterprise-grade prompt injection testing for AI security professionals]]></description>
            <content:encoded><![CDATA[🛡️  TypeScript Library for AI Security Testing   Lightweight AI Security Testing Library A minimal TypeScript library with 25+ curated prompt injection patterns from leading security research. 
						Easy to integrate, comprehensive coverage, production-ready. npm install prompt-injector import { PromptInjector } from 'prompt-injector'  🎯 0 Attack Patterns 🔬 4 Attack Categories 📚 SOTA Research Based 📝 0 Generated Prompts Attack Categories 🎭 Jailbreaking (5 patterns) Role-play and persona-based attacks that attempt to bypass AI safety guidelines through character roleplay and fictional scenarios. 🔀 Instruction Hijacking (6 patterns) Direct attempts to override system prompts and inject new instructions that change AI behavior and responses. 🔐 Encoding Attacks (7 patterns) Obfuscation techniques using Base64, ROT13, Unicode, and other encodings to bypass content filters and detection systems. 🧠 Logic Traps (6 patterns) Sophisticated reasoning exploits using hypothetical scenarios, false urgency, and academic authority to manipulate responses. Quick Start Example import { PromptInjector } from 'prompt-injector';

// Initialize with your preferred configuration
const injector = new PromptInjector({
  severity: 'intermediate',
  categories: ['jailbreak', 'instruction-hijack'],
  maxAttempts: 50
});

// Generate test cases
const testCases = injector.generateTests('customer-service-bot');

// Test your AI system
const results = await injector.runTests(yourAISystem);
const report = injector.generateReport(results);

console.log(`Risk Score: ${report.summary.riskScore}`);]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[A Dark Money Group Is Funding High-Profile Democratic Influencers]]></title>
            <link>https://www.wired.com/story/dark-money-group-secret-funding-democrat-influencers/</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45063526</guid>
            <description><![CDATA[An initiative aimed at boosting Democrats online offers influencers up to $8,000 a month to push the party line. All they have to do is keep it secret—and agree to restrictions on their content.]]></description>
            <content:encoded><![CDATA[Aug 27, 2025 6:00 AMAn initiative aimed at boosting Democrats online offers influencers up to $8,000 a month to push the party line. All they have to do is keep it secret—and agree to restrictions on their content.PHOTO-ILLUSTRATION: WIRED STAFF; GETTY IMAGESIn a private group chat in June, dozens of Democratic political influencers discussed whether to take advantage of an enticing opportunity. They were being offered $8,000 per month to take part in a secretive program aimed at bolstering Democratic messaging on the internet.But the contract sent to them from Chorus, the nonprofit arm of a liberal influencer marketing platform, came with some strings. Among other issues, it mandated extensive secrecy about disclosing their payments and had restrictions on what sort of political content the creators could produce.In their group chat, influencers debated the details.“Should we send a joint email (with all of our email addresses) … or, are we just going to send things separately and hope they change everything for everyone?” Laurenzo, a nonbinary creator in Columbus, Ohio, with over 884,000 TikTok followers, asked the group. Some joked about collective bargaining. “Any Newsies fans here?” Eliza Orlins, a public defender and reality TV star known for her appearances on Survivor, posted in the group. “‘We’re a union just by sayin’ so!’”The influencers in the chat collectively had at least 13 million followers across social platforms. They represented some of the most well-known voices online posting in support of Democrats, and they’re key to wherever the party moves next. But ultimately, the group didn’t make much progress.“Reading through this revised Chorus contract like: you win some, you lose some,” a reproductive justice influencer named Pari, who posts under the handle @womeninamerica, responded later in the thread. “I also think there’s at least 4 other things that should change 🤣but the vibe I got from their email was that there would be minimal, if any, changes.” (Laurenzo, Orlins, and Pari did not reply to requests for comment.)“I don’t feel strongly about pushing tbh,” Aaron Parnas, a Gen Z news influencer who has been called the Gen Z Walter Cronkite and has been lauded in legacy media outlets, posted to the chat. “They aren’t going to modify it anymore. Seems like a take it or leave it.” (Parnas declined to comment.)“I believe we are in Stage 5: Acceptance,” Pari responded. Creators began signing on to the deal.For years, Democrats have struggled to work with influencers. In 2024, President Joe Biden’s White House snubbed several prominent content creators after they lightly criticized the administration over its policies on climate change, Covid, Gaza, and the TikTok ban. Content creators who challenged Kamala Harris—including Hasan Piker, a well-known influencer on the left—were similarly unwelcome at campaign events.After the Democrats lost in November, they faced a reckoning. It was clear that the party had failed to successfully navigate the new media landscape. While Republicans spent decades building a powerful and robust independent media infrastructure, maximizing controversy to drive attention and maintaining tight relationships with creators despite their small disagreements with Trump, the Democrats have largely relied on outdated strategies and traditional media to get their message out.Most PopularNow, Democrats hope that the secretive Chorus Creator Incubator Program, funded by a powerful liberal dark money group called The Sixteen Thirty Fund, might tip the scales. The program kicked off last month, and creators involved were told by Chorus that over 90 influencers were set to take part. Creators told WIRED that the contract stipulated they’d be kicked out and essentially cut off financially if they even so much as acknowledged that they were part of the program. Some creators also raised concerns about a slew of restrictive clauses in the contract.Influencers included in communication about the program, and in some cases an onboarding session for those receiving payments from The Sixteen Thirty Fund, include Olivia Julianna, the centrist Gen Z influencer who spoke at the 2024 Democratic National Convention; Loren Piretra, a former Playboy executive turned political influencer who hosts a podcast for Occupy Democrats; Barrett Adair, a content creator who runs an American Girl Doll–themed pro-DNC meme account; Suzanne Lambert, who has called herself a “Regina George liberal;” Arielle Fodor, an education creator with 1.4 million followers on TikTok; Sander Jennings, a former TLC reality star and older brother of trans influencer Jazz Jennings; David Pakman, who hosts an independent progressive show on YouTube covering news and politics; Leigh McGowan, who goes by the online moniker “Politics Girl”; and dozens of others. (The first two declined to comment; the rest did not respond to requests for comment.)According to copies of the contract viewed by WIRED that creators signed, the influencers are not allowed to disclose their relationship with Chorus or The Sixteen Thirty Fund—or functionally, that they’re being paid at all.Dozens of liberal influencers are believed to have been approached by Chorus about The Sixteen Thirty Fund financing opportunity this spring. They were told that Chorus appreciated the work they were doing online and were asked if they’d be interested in being part of the first cohort of a new program that Chorus was running to help “expand their reach and impact,” creators tell WIRED.But following the initial outreach, many creators expressed concern about some stipulations. According to copies of the contract viewed by WIRED, creators in the program must funnel all bookings with lawmakers and political leaders through Chorus. Creators also have to loop Chorus in on any independently organized engagements with government officials or political leaders.“If I want to work with another politician, I have to fully collaborate with them,” said one creator who was offered the contract but ultimately declined to take it and asked not to be named. “If I get Zohran and he wants to [do an] interview with me, I don’t want to give that to them.”Creators in the program are not allowed to use any funds or resources that they receive as part of the program to make content that supports or opposes any political candidate or campaign without express authorization from Chorus in advance and in writing, per the contract.The contracts reviewed by WIRED prohibit standard partnership disclosures, declaring that creators will “not publicize” their relationship with Chorus or tell others that they’re members of the program “without Chorus’s prior express consent.” (A screenshot from a slideshow was shared with WIRED following this article's publication by Graham Wilson, a lawyer working with Chorus, that offers several talking points if a member of the cohort wanted to discuss Chorus publicly.) They also forbid creators from “disclos[ing] the identity of any Funder” and give Chorus the ability to force creators to remove or correct content based solely on the organization’s discretion if that content was made at a Chorus-organized event.Most Popular“There are some real great advantages to … housing this program in a nonprofit,” Wilson said to creators on a Zoom call reviewed by WIRED. “It gives us the ability to raise money from donors. It also, with this structure, it avoids a lot of the public disclosure or public disclaimers—you know, ‘Paid for by blah blah blah blah’—that you see on political ads. We don’t need to deal with any of that. Your names aren’t showing up on, like, reports filed with the FEC.” (Wilson did not reply to a request for comment before the article was published.)The Federal Election Commission declined to comment.The goal of Chorus, according to a fundraising deck obtained by WIRED, is to “build new infrastructure to fund independent progressive voices online at scale.” The creators who joined the incubator are expected to attend regular advocacy trainings and daily messaging check-ins. Those messaging check-ins are led by Cohen on “rapid response days.” The creators also have to attend at least two Chorus “newsroom” events per month, which are events Chorus plans, often with lawmakers.Elizabeth Dubois, an assistant professor and university research chair in politics, communication, and technology at the University of Ottawa who has researched the ways influencers are reshaping the US political system, says that “we are seeing influencers being pulled into these dark campaigns or shadow campaigns, where the legal aspect is murky at best.”“Sometimes it is actually clear that influencers are being used to, for example, evade spending limits,” she says. “I think that we need to remember that for democracy to thrive, we do need transparency around who is paying for political messages.”Don Heider, the chief executive of the Markkula Center for Applied Ethics at Santa Clara University, says that the outlined restrictions violate ethical norms. “If the contract for getting money from a particular interest group says you can’t disclose it, then it’s pretty simple, you can’t take the money,” he says. “We’re living in an era where a lot of powerful people have basically taken the rule book and thrown it out the window.” (Wilson maintained in a post-publication email that “creators are free to work with other groups or take on other partnerships outside the Chorus program and say whatever they want as part of that work or on their own.”)Keith Edwards, a Democratic content creator who has skyrocketed to fame on YouTube since starting his channel last year, was not invited to be part of the program but believes that the way it was structured seemed “predatory.” He says that he would never agree to take part in a program that was run in secret or wouldn’t allow him to disclose funding.“What I don’t understand is, why wouldn’t you just donate to creators directly who have already built something and just need to put gasoline on the fire?” says Edwards. “Democrats at least understand that the internet exists now, so that’s good. But they still think influencers are just there to do a terrible direct-to-camera interview that no one watches rather than just treating us like another form of media.”Most PopularThe influencers offered the funding were given just days to sign the contract, which was essentially presented on a take-it-or-leave-it basis. At least one cohort was specifically told they could not have their lawyers redline it. In the group chat formed to discuss contract negotiations, some creators discussed a clause prohibiting the disparagement of other creators. Not being able to criticize anyone else affiliated with Chorus felt restrictive to some, according to text messages posted to the chat.Eventually, the creators in the group chat agreed to drop the issues they had. “I don’t think [Chorus is] out to screw us,” Orlins, a creator who was offered $8,000 per month, said in the group chat. (Some influencers for Chorus Creator Incubator Program were offered as little as $250 per month, according to one creator who declined to accept the deal, while others were offered membership into the “amplifier” cohort, which provides up to $8,000 per month.)The Sixteen Thirty Fund has emerged as a powerful funder in Democratic spaces in recent years. Its website notes that issues supported by the organization include economic equity, affordable health care, climate solutions, racial justice, voter access, and other “essential social-change goals.” The organization was founded in 2009 as a liberal response to conservative dark money groups and organizations like the Koch network, and under Trump it has soared.In 2018, The Sixteen Thirty Fund provided $141 million to more than 100 left-leaning causes in order to bolster Democratic support during the midterms, according to a tax filing obtained by Politico. In 2020, the fund distributed more than $400 million, according to the organization’s public tax filing, which Politico said was used in “efforts to unseat then-president Donald Trump and Republicans’ Senate majority.” In 2022, The Sixteen Thirty Fund spent $196 million backing state ballot measures on abortion rights heading into the midterms, according to NBC. Just four donors accounted for close to two-thirds of the fund’s revenue in 2023, according to its tax filing. The largest donor gave the group $50.5 million, with others donating $31.4 million, $21.8 million, and $13.6 million.“The Sixteen Thirty Fund, which is not required to disclose its contributors, has for years been a major funding source for liberal and progressive causes and groups, including those that spend in elections,” says Walker Davis, a research director for the open-government group Citizens for Responsibility and Ethics in Washington. “Though their recent tax returns indicate that they have pulled back from the eye-popping sums they raised and spent in 2020, the organization is still one of the top-spending politically oriented nonprofits in the country.”Chorus, which is described in contracts reviewed by WIRED as a “project of” The Sixteen Thirty Fund that handles operations for the creator program, launched in November 2024 with ties to Good Influence, a for-profit influencer marketing agency aimed at helping content creators connect with social-good campaigns. Good Influence was founded in October 2020 by Stuart Perelmuter, the former communications director for representative John Yarmuth of Kentucky. Seeing an opportunity after Kamala Harris’ loss last November, Perelmuter cofounded Chorus with Democratic influencer Brian Tyler Cohen, who has over 4.6 million subscribers on YouTube and leads messaging check-ins for the creator cohort on “rapid response days.” According to records reviewed by WIRED, Chorus claims that its initial creator cohort has a collective audience of more than 40 million followers with more than 100 million weekly viewers and that the organization has “hundreds of creators signed up” and “ready to amplify” messaging.Most Popular“I’ve spent most of my career researching right-wing media and sounding the alarms about the collapse of our old information environment,” Ellie Langford, the director of programming at Chorus, said on a Zoom call with dozens of creators in June. “Our political systems haven’t been able to figure out a real solution, and I’ve been really excited to see you all treading the path forward. I deeply, deeply believe that the work you all are doing is what’s going to make the difference in supporting and frankly resuscitating our democracy.”Already, creators in the program are creating content together. In a new weekly series titled “Good News in Politics,” six creators in the program shared a collaborative video running through political wins. “Follow these creators bringing you hope instead of doomscrolling: @sander_jennings, @eorlins, @jesscraven101, @tono.latino, @gemma_talks, @thezactivist,” they posted.While some creators have been eager to work with Chorus, others distrust the organization. This spring, Chorus faced a wave of backlash from prominent content creators whose images were included in the firm’s fundraising decks without permission. “I was included on some [of Chorus’] decks like, ‘We have access to V,’ when you do not,” said V Spehar, a liberal content creator with over 3.5 million followers on TikTok. (Following the publication of this article, Wilson said that "there is no record of V being included in any Chorus materials, nor being named as part of the effort.")The faces of several well-known influencers were featured prominently on the Chorus website beneath a giant DONATE button. However, users who clicked the button were taken to a fundraising page for Chorus instead of anywhere their dollars would go directly to the creators featured.Progressive YouTuber and former Media Matters staffer Kat Abughazaleh, who’s running for Congress in Illinois, was pictured on Chorus’ website and included in fundraising decks without her consent. She asked that her image and name be removed and no longer used for fundraising purposes.Spehar and other content creators have accused Chorus of attempting to establish themselves as a gatekeeper to Democratic political leaders. “What we need is for people to invest in independent media, and that doesn’t necessarily mean investing in a consulting group that is going to become a middleman for independent media,” says Spehar.Several influencers who doggedly defended Chorus throughout that controversy, including Elizabeth Booker Houston, a Democratic comedian and content creator on Instagram, and Allie O’Brien, a progressive creator with more than 600,000 followers on TikTok, were involved in membership talks for the highest-paid tier in Chorus’ new creator incubator program. (Houston did not respond to requests for comment; O’Brien declined to comment.)Still, some creators heard about The Sixteen Thirty Fund and Chorus funding initiative and applied to join.One creator named Chesko, who goes by @thespeechprof online, applied to join the program because he viewed it as an “opportunity to get access to people that have funding or backing and actual research that I could use,” he says.Most PopularUltimately, he wasn’t accepted and received an email on June 26 rejecting his application. “We are planning to bring more creators into the Incubator program in the near future,” Chorus wrote.The structure of the program highlights the vast differences between how Democrats and Republicans attempt to amass online influence. Republicans have spent decades building up a powerful independent media ecosystem, though the right-wing influencer world is far from transparent. In September 2024, a federal indictment alleged that the Russian state-sponsored network RT was covertly providing millions in funding to Tenet Media, a company working with major right-wing influencers including Benny Johnson, Tim Pool, Dave Rubin, and Lauren Southern. In 2024, the National Republican Congressional Committee spent nearly $500,000 on work with Creator Grid, an influencer marketing company whose website says it “connects Republican candidates with the internet’s most powerful conservative influencers,” according to analysis of campaign finance filings from The Washington Post.Steven Buckley, a digital media sociologist at City St. George’s, University of London, says that these sorts of programs have been “happening in the right wing for ages.” But Heider said that the structure of The Sixteen Thirty Fund deal raises the question, “Is it ethical to match the tactics of your opponents?”The Democrats appear to have no real counter to this system. “Democrats missed the next generation of media,” says Brendan Gahan, cofounder of influencer marketing agency Creator Authority. “Historically they owned Hollywood, but this next generation of influence is digital, and they’ve miscalculated that. I don’t think they feel comfortable in arenas where they lack control.”Update: 8/28/2025, 7:00 PM EDT: Following the publication of this article, Graham Wilson of the Elias Law Group, whose participation in a Zoom call was reported upon, and who did not respond to WIRED's pre-publication email requesting comment, reached out to WIRED on several points. These include whether members of the cohort can publicly talk about working with Chorus, and Chorus's connection to Good Influence, both of which WIRED has clarified. We have also included comment from Wilson regarding Chorus placing "restrictions" on content, and whether V Spehar was included in any Chorus materials.Big Interview: Lisa Su is at the center of the US-China tech warRead More]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Gun Maker Sig Sauer Citing National Security to Keep Documents from Public]]></title>
            <link>https://practicalshootinginsights.com/eighth-circuit-fmeca-update/</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45063431</guid>
            <description><![CDATA[The secrecy battle over the Army’s Failure Modes, Effects, and Criticality Analysis (FMECA) for Sig Sauer’s P320 has followed Glasscock v. Sig Sauer to the Eighth Circuit. A media intervenor is now asking the appellate court to keep key records open—and their brief places Practical Shooting Insights (this site) squarely in the middle of the story.]]></description>
            <content:encoded><![CDATA[
      
        
          
          

  
    
      
      
        
        
        August 28, 2025
      
    

    

    
      
      

      
        
        
          4 minute read
        
      
    
  


        
      

      
        
        The secrecy battle over the Army’s Failure Modes, Effects, and Criticality Analysis (FMECA) for Sig Sauer’s P320 has followed Glasscock v. Sig Sauer to the Eighth Circuit. A media intervenor is now asking the appellate court to keep key records open—and their brief places Practical Shooting Insights (this site) squarely in the middle of the story.

What’s new


  The Trace intervenes in the appeal. The newsroom moved to intervene for the limited purpose of opposing sealed filings tied to class certification and the FMECA, arguing the public’s right of access and noting the district court cited the FMECA nine times when it certified the class.





  Sig Sauer says “national security” and asks for deference to the Army. In opposing intervention, Sig Sauer urges the court to leave FMECA-related material sealed and to give the Army time to weigh in, framing the dispute in terms of protecting “military secrets.”







  A second FMECA document emerges. Sig Sauer’s opposition confirms there are two FMECA records in the class-certification exhibits: a FMECA Spreadsheet and a FMECA Memorandum—the latter not previously described in public filings—raising fresh questions about what the memo contains and who authored it.





  PSI’s reporting is part of the record. The Trace’s filing tells the court the unredacted FMECA was found on CourtListener, de‑obscured, and published on Practical Shooting Insights, where it “remains available”—and it recounts Sig Sauer’s own executive discussing it on a podcast while pointing viewers to this website.






The FMECA document was previously published here.



The Trace’s pitch: This isn’t secret anymore

The Trace walks the appellate court through how the FMECA left the bottle: it was posted on this website and then widely republished; a YouTube explainer discussing it surpassed 100,000 views. The filing quotes Sig Sauer’s VP of Consumer Affairs Phil Strader being asked on the Behind the Lens podcast why the FMECA shouldn’t be public and responding, “No, there’s not” (nothing to hide), while directing viewers to this website to see the document and describing its contents.





The reporting regarding Phil Strader’s interview was previously published here

How many times has the unredacted FMECA been “shared”? The filings don’t give a precise share count. What they do document is widespread republication and discussion, including the 100k‑plus video and multiple re‑posts mirroring the PSI copy. In other words, the genie is out of the bottle.

The Trace also points to DoD Instruction 5230.24, the policy Sig Sauer invokes, noting it does not authorize withholding unclassified information about evaluations of performance and reliability of military equipment—and that the PSI‑hosted FMECA bears no DoD distribution markings.





Sig Sauer’s response: Let the Army decide—and keep the lid on

Sig Sauer tells the Eighth Circuit The Trace lacks standing and that parallel briefing is already underway in the district court. Substantively, Sig Sauer leans on military‑secrets concerns, requests time for the Army to opine on release, and characterizes the FMECA as controlled technical information created under the MHS contract. (The company also recounts how the spreadsheet briefly became public in another case before being pulled down.)



Two details in Sig Sauer’s papers matter going forward:

1) The “FMECA Memorandum.” Sig Sauer identifies the memo alongside the previously published spreadsheet. If the memo is Sig Sauer‑authored, it could reveal how the company framed the Army analysis internally—an issue directly relevant to notice, risk mitigation, and marketing claims.

2) Ongoing Army communications. Sig Sauer’s litigation counsel filed a declaration stating he asked the Army about the FMECA’s distribution status and that key Army decision‑makers were unavailable the week of the deadline; Sig Sauer says the Army may submit information and seeks additional time.





The transparency question, distilled


  
    Is the FMECA “national‑security” material? The Trace says no—and points to DoDI 5230.24’s carve‑out: it does not provide authority to withhold unclassified evaluations of performance and reliability—exactly what a FMECA is. It also underscores the lack of any DoD marking on the PSI copy.
  
  
    Is secrecy even possible at this point? The record shows the unredacted spreadsheet is online on this website, has been reposted broadly, and has been discussed by Sig Sauer’s own executive on air—who told listeners where to find it. One video discussing it has 100,000+ views.
  




Why this matters to the class action—and to owners

The district court relied on the FMECA repeatedly when certifying the Missouri class, including on notice and risk‑mitigation questions—the very issues consumers care about. Keeping the heart of that analysis under seal on appeal would blunt the public’s ability to scrutinize a product‑safety fight with real‑world consequences.



My role, plainly

Practical Shooting Insights is an independent site covering the shooting‑sports and firearms industry. The Trace’s filing names PSI as the first publisher of the unredacted spreadsheet and quotes Strader pointing viewers here. I will continue to publish filings and analysis so readers can compare the arguments to the documents themselves.



What to watch next

1) Whether the Eighth Circuit permits intervention and applies the strong presumption of public access to class‑certification records.
2) If the Army weighs in—and on what basis—regarding the FMECA’s distribution status.
3) Disclosure of the FMECA Memorandum. If it’s Sig Sauer-authored, it could illuminate internal framing of hazards and fixes—material at the core of consumer‑protection claims.

        
      

      

      


      
  


    ]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Deepnote (YC S19) is hiring engineers to build a better Jupyter notebook]]></title>
            <link>https://deepnote.com/join-us</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45062914</guid>
            <description><![CDATA[We need powerful data science tools that help us explore, reason, and collaborate. These tools do not exist yet. Help us invent them.]]></description>
            <content:encoded><![CDATA[We build tools for explorersWe are here to revolutionize how data teams work together.We started Deepnote to help data teams solve the hardest problems. We don’t just need better algorithms, bigger data sets, and more computing power. We need tools that help us explore, collaborate, and share. These tools don’t exist yet. We need to invent them first.Data work is as much a scientific and creative process as it is an engineering one. It involves working together, failing, learning, and going back to the drawing board. Data professionals are explorers. To make projects successful, we need tools that are both powerful and easy to use. Tools that help us collaborate and share our work in an engaging way. Tools that make working with data fun again.That’s why we’re building the new standard in data tooling: a notebook that brings teams together to code, query, visualize, organize, and share — all in one place.We are building tools for explorers. Join us.Build the future with usWe’re building a collaborative notebook that beautifully integrates analytics and data science into every workflow and decision. But it’s not just about designing, shipping, and selling. It’s about the people who power it — and that means you.Get ready to do your best workTransforming how people work with data isn't easy. But we built a culture that allows us to do precisely that.We move with urgencyWe are a small, passionate team revolutionizing how data teams work. We give everyone the tools they need and enable them to take action.We keep learningWe are knowledge-seekers. We invest in continuous learning across every role and encourage a culture of proactive feedback.We take ownershipWe are makers. We expect everyone to be a decision-maker — no politics or walls to get in the way.We collaborateWe are partners. We work in a fully transparent environment and put open, effective communication above all else.Backed by the best in the businessWe’re backed by industry leaders — and they’re as excited about reimagining the future as we are.Y CombinatorIndex VenturesAccelGreg BrockmanCTO at OpenAIElad GilAngel InvestorNaval RavikantAngel InvestorElena VernaAngel InvestorExplore open positionsThousands of data professionals already use Deepnote — but we’re only scratching the surface of what’s possible. We’re building out our core team, and we want kind, curious explorers to join and grow with us.Senior Business Development Executive (B2B SaaS)Remote→Go to jobHead of Data / Solutions EngineerPrague→Go to job]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Meta might be secretly scanning your phone's camera roll]]></title>
            <link>https://www.zdnet.com/article/meta-might-be-secretly-scanning-your-phones-camera-roll-how-to-check-and-turn-it-off/</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45062910</guid>
            <description><![CDATA[Some Facebook users have noticed new settings that let Meta analyze and retain your phone's photos. Yes, you read that right.]]></description>
            <content:encoded><![CDATA[   Why is Facebook cloud-processing my device's camera roll?   Meta is uploading and analyzing your camera roll photos and videos, even ones you haven't posted, in its cloud in order to generate AI-powered suggestions like collages, monthly recaps, themed albums, or AI-restyled versions of your images.      Where is this feature being tested?   Meta has confirmed the feature is a test, saying, "We're exploring ways to make content sharing easier for people on Facebook by testing suggestions of ready-to-share and curated content from a person's camera roll."   The test is currently available in the US and Canada, but it's not available in Illinois or Texas due to those states' privacy laws.      Did Facebook ask for my consent before turning this on?   Meta is showing a pop-up asking users if they want to enable cloud processing, but some users claim they haven't seen it. Instead, they found the toggles in their settings already switched on by default, raising questions about whether clear consent was given.      Elyse Betters Picaro / ZDNET Can I remove my photos once they've been uploaded? ZDNET's sister site, CNET, reports that Meta pulls from your newer pictures (roughly the last 30 days) and if you disable the feature, your uploaded photos will be deleted after 30 days. The only way to confirm is by downloading your Facebook account data.   Why is this a potential privacy issue?   It expands Meta's reach beyond the content you've chosen to upload and share online -- into your private, unposted photos and videos. For many, that's a major red flag and a line they're not comfortable crossing, understandably so.   Also: What Zuckerberg's 'personal superintelligence' sales pitch leaves outEven if Meta is asking for consent to access your camera roll in order to analyze your phone's photos and provide AI-powered suggestions, the company could have done a better job of being clear and explicit about what it's trying to do.   How many users, like me, simply dismissed the consent pop-up without fully realizing what they'd just agreed to?   Editor's note: This article was updated on Aug. 24, 2025 to clarify that Meta's camera roll sharing suggestions are not turned on by default and are entirely opt-in. Still, some users say they never knowingly agreed and are finding the features enabled in their settings.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[If you have a Claude account, they're going to train on your data moving forward]]></title>
            <link>https://old.reddit.com/r/LocalLLaMA/comments/1n2ubjx/if_you_have_a_claude_personal_account_they_are/</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45062738</guid>
        </item>
        <item>
            <title><![CDATA[Anthropic reverses privacy stance, will train on Claude chats]]></title>
            <link>https://www.perplexity.ai/page/anthropic-reverses-privacy-sta-xH4KWU9nS3KH4Aj9F12dvQ</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45062683</guid>
        </item>
        <item>
            <title><![CDATA[Tesla said it didn't have key data in a fatal crash. Then a hacker found it]]></title>
            <link>https://www.washingtonpost.com/technology/2025/08/29/tesla-autopilot-crashes-evidence-testimony-wrongful-death/</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45062614</guid>
            <description><![CDATA[The key evidence was presented last month to a jury, which found the company partially liable for the 2019 crash in Key Largo, Florida.]]></description>
            <content:encoded><![CDATA[Years after a Tesla driver using Autopilot plowed into a young Florida couple in 2019, crucial electronic data detailing how the fatal wreck unfolded was missing. The information was key for a wrongful death case the survivor and the victim’s family were building against Tesla, but the company said it didn’t have the data.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Probability of typing a wrong Bitcoin address]]></title>
            <link>https://www.johndcook.com/blog/2025/08/28/wrong-address/</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45061980</guid>
            <description><![CDATA[How likely is it that a mistyped Bitcoin address is a valid address? How likely is it that some address is a plausible typo of another?]]></description>
            <content:encoded><![CDATA[
		I heard someone say that Bitcoin is dangerous because you could easily make a typo when entering an address, sending money to the wrong person, and have no recourse. There are dangers associated with Bitcoin, such as losing a private key, but address typos are not a major concern.
Checksums
There are several kinds of Bitcoin addresses. Each is at least 20 bytes (160 bits) long, with at least 4 bytes (32 bits) of checksum. The chances of a typo resulting in a valid checksum are about 1 in 232.
Used addresses
Let’s ignore the checksum for this section.
Because addresses are formed by cryptographic hash functions, we can assume the values are essentially randomly distributed in the space of possible addresses. The addresses are deterministic, but for modeling purposes, random is as random does.
This means a typo of an actual address is no more or less likely to be another actual address than an address typed at random. This is unlike, say, English words: a mistyped English word is more likely to be another English word than random keystrokes would be.
There have been on the order of a billion Bitcoin addresses used, in a space of 2160 possibilities. (Actually more since some addresses have more than 160 bits.) There’s about a 1 in 1039 chance that a random 160-bit sequence corresponds to an address somewhere on the Bitcoin blockchain.
Addresses close in edit distance
Someone with the Caesarean handle Veni Vidi Vici on X asked
What about the odds that out of those 1B addresses, two of them are one character swap away from each other?
That’s an interesting question. Let’s assume the addresses are Base58-encoded strings of length 26. Addresses could be longer, but assuming the minimum length increases the probability of addresses being close.
How many addresses are within one or two character swaps of another? I addressed a similar question here a couple weeks ago. If all the characters were unique, the number of strings within k swaps of each other would be
|S1(26, 26 − k)|
where S1 denotes Stirling numbers of the first kind. For k = 1 this would be 325 and for k = 2 this would be 50,050. This assumes all the characters are unique; I haven’t thought through the case where characters are repeated.
For round numbers, let’s say there are a billion addresses, and for each address there are a million other addresses that are close in some sense, plausible typos of the address. That would be 1012 addresses and typos, spread out in a space of ≈1045 (i.e. 5826) possible addresses.
Now there’s an implicit Birthday Problem here. No particular address is likely to collide with another, even when you allow typos, but what about the likelihood that some address collides?
Say we partition our space of 1045 addresses into N = 1029 addresses with a million possible typos for each address. Then as a rule of thumb, you’d need around √N random draws before you have a 50-50 chance of seeing a collision. Since 109 is a lot less than 1014.5, it’s unlikely that any two addresses collide, even when you consider each address along with a million associated typos.
			]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Contrastive Representations for Temporal Reasoning]]></title>
            <link>https://princeton-rl.github.io/CRTR/</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45061689</guid>
            <description><![CDATA[Official website of Contrastive Representations for Temporal Reasoning (CRTR)]]></description>
            <content:encoded><![CDATA[

  
            Contrastive Representations for Temporal Reasoning
            
  
            
  
            *Equal Advising Contribution
            
  
            
            
              
                
                Your browser does not support the video tag.
              
            
  
            
  
          
  
  
       Key Question: Can we improve temporal reasoning by learning better representations?
       Method: A novel negative sampling scheme provably enables learning temporal representations.
       Result: CRTR learns representations that enable solving Rubik's Cube without hand-crafted heuristics and improves the success rates overall.
    
  
  
        
            
                CRTR makes representations reflect the structure of combinatorial tasks. t-SNE visualization of representations learned by CRTR (right) and CRL (left) for Sokoban.
                Colors correspond to trajectories; three frames from two trajectories are shown in the center and linked to their representations.
                CRL embeddings cluster tightly within trajectories, failing to capture global structure and limiting their usefulness for planning.
                In contrast, CRTR organizes representations meaningfully across trajectories and time (vertical axis).
              
          
        
  
  
  
            Abstract
            
              In classical AI, perception relies on learning spatial representations,
              while planning—temporal reasoning over action sequences—is typically achieved through search.
              We study whether such reasoning can instead emerge from representations that capture both spatial and temporal structure.
              We show that standard temporal contrastive learning, despite its popularity, often fails to capture temporal structure,
              due to reliance on spurious features. To address this, we introduce Contrastive Representations for Temporal Reasoning (CRTR),
              a method that uses a negative sampling scheme to provably remove these spurious features and facilitate temporal reasoning.
              CRTR achieves strong results on domains with complex temporal structure, such as Sokoban and Rubik’s Cube.
              In particular, for the Rubik’s Cube, CRTR learns representations that generalize across all initial states and allow
              solving the puzzle much faster than BestFS—though with longer solutions. To our knowledge, this is the first
              demonstration of efficiently solving arbitrary Cube states using only learned representations, without hand-crafted search heuristics.
            
        
 

  
          
            Experiments
          
        
    
  




        Correlation Analysis
        
            Distances given by CRTR representations reflect the temporal structure well. Correlation (Spearman's ρ) between the distance induced by learned embeddings and actual distance across the training, CRTR compared with CRL.
          
        
        
      




        Block Building Behavior
        
            CRTR without search exhibits a block-building-like behavior. Intermediate states from solving a randomly scrambled cube, illustrating how the algorithm gradually builds partial structure. The average solve is about 400 moves, and we see similar block building behavior across solves.
          
        
        
      



 ]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Strange CW Keys]]></title>
            <link>https://sites.google.com/site/oh6dccw/strangecwkeys</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45060161</guid>
            <description><![CDATA[Made by OH6DC
You can also use the Text-only index page (divided into useful categories).]]></description>
            <content:encoded><![CDATA[HomeStrange CW KeysMade by OH6DCYou can also use the Text-only index page (divided into useful categories).Lever arch file CW key Lambic pedals Valentine's day lollipop CW paddle Rubber stamp CW key Letter scale CW key Clamp cootie Code book Pepper mill CW key Lightsaber CW key Nutcracker CW key Straight(ener) key Smoke alarm CW key Teletubbygraph key Soap dispenser CW key Vinyl record player CW key Moomin triangle CW key Antiperspirant roll-on CW key Dual banana CW paddle Power twister CW key Power twister CW key Handsaw CW key Hole punch CW key Watering can CW key Toilet brush CW key CW glove Remote control CW key Tea bag CW key Eyebrow-raising CW key with optical transmitter Back scratcher CW key Whisk CW key Pliers CW key Liver casserole CW key Licorice pipe CW key Chocolate CW key Ski-W key Power drill CW keyer Six megapixel CW key Suspenders CW key Spirit bottle cap CW key Speed skate CW key Flower CW key Knee pad sideswiper CW key for portable operation QRP transmitter powered by a CW key Alarm clock CW key Hammer CW key CW gun Nail clipper CW key Ballpoint pen CW key Rotary dial CW key Hammock CW key Joystick CW key Rowing boat CW key Guitar CW key Wallet CW key Radio controlled CW key Amaryllis telegraphiensis Multi-function knife with CW key Toilet paper roll CW key Table ice hockey CW key Big toe CW key Waffle iron CW key Lego straight key Lego bug Pogo stick CW key Crutch CW key Smoke signal CW key CCW key Necktie CW key Toothbrush CW key Bench press CW key Handshake CW key Chopsticks CW key Trailer hitch CW key Typewriter CW keyboard Refrigerator CW key Mobile phone CW key Paper cup iambic paddles Morsetrap CW key Fingertips CW key Vacuum cleaner semi-automatic CW key Banana CW key Rolling pin CW key Toaster CW key Cheese slicer CW key Rocking chair CW key QLF pedal for left foot CW Cross-country ski shoe CW key CW insoles QRQ paddles Onion chopper CW key Beer can CW key Egg slicer CW key Stapler CW key Bicycle pump CW key Iron bar CW key Homebrew semi-automatic bug Hacksaw blade sideswiper CW key Plywood CW key Home  |  Homebrew QRP  Page updated Google SitesReport abuse]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[PSA: Libxslt is unmaintained and has 5 unpatched security bugs]]></title>
            <link>https://vuxml.freebsd.org/freebsd/b0a3466f-5efc-11f0-ae84-99047d0a6bcc.html</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45060004</guid>
            <description><![CDATA[Alan Coopersmith reports:]]></description>
            <content:encoded><![CDATA[
Alan Coopersmith reports:

	  On 6/16/25 15:12, Alan Coopersmith wrote:
	  
	    BTW, users of libxml2 may also be using its sibling project, libxslt,
	    which currently has no active maintainer, but has three unfixed security issues
	    reported against it according to
	    
		https://gitlab.gnome.org/Teams/Releng/security/-/wikis/2025#libxml2-and-libxslt
	  
	  2 of the 3 have now been disclosed:
	  (CVE-2025-7424) libxslt: Type confusion in xmlNode.psvi between stylesheet and source nodes
	    https://gitlab.gnome.org/GNOME/libxslt/-/issues/139
	    https://project-zero.issues.chromium.org/issues/409761909
	  (CVE-2025-7425) libxslt: heap-use-after-free in xmlFreeID caused by `atype` corruption
	    https://gitlab.gnome.org/GNOME/libxslt/-/issues/140https://project-zero.issues.chromium.org/issues/410569369
	  Engineers from Apple & Google have proposed patches in the GNOME gitlab issues,
	  but neither has had a fix applied to the git repo since there is currently no
	    maintainer for libxslt.
	

Note that a fourth vulnerability was reported on June 18, 2025, which remains undisclosed to date (GNOME libxslt issue 148, link below), see
	  
	    https://gitlab.gnome.org/Teams/Releng/security/-/wikis/2025#libxml2-and-libxslt
	
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Lucky 13: a look at Debian trixie]]></title>
            <link>https://lwn.net/Articles/1033474/</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45059160</guid>
            <description><![CDATA[After more than two years of development, the Debian Project has released its new stable versio [...]]]></description>
            <content:encoded><![CDATA[

Please consider subscribing to LWN

Subscriptions are the lifeblood of LWN.net.  If you appreciate this
content and would like to see more of it, your subscription will
help to ensure that LWN continues to thrive.  Please visit
this page to join up and keep LWN on
the net.


After more than two years of development, the Debian Project has released its new stable version, Debian 13 ("trixie"). The release comes with the usual bounty of
upgraded packages and more than 14,000 new packages; it also debuts Advanced Package Tool
(APT) 3.0 as the default package manager and makes 64-bit
RISC-V a supported architecture. There are few surprises with trixie,
which is exactly what many Linux users are hoping for—a free
operating system that just works as expected.

Debian's stable
releases are aptly named; the project prioritizes stability over
shipping the latest software. The freeze
schedule for trixie called for a soft freeze in April, which meant
that (for example) the KDE Plasma 6.4
release in June was too late to make the cut—even though trixie
was not released until August. Users who prefer to live on the edge
will want to run another distribution or follow Debian development by
running the testing release
that previews the next stable version—Debian 14 ("forky"). Truly
adventurous users may take their chances with the unstable ("sid")
release.

That said, trixie is up-to-date enough for many folks; it includes
GNOME 48, KDE Plasma 6.3, Xfce 4.20, GNU
Emacs 30.1, GnuPG 2.4.7, LibreOffice 25.2, and
more. Under the hood, it includes the most recent Linux LTS kernel
(6.12.41), GNU Compiler Collection (GCC) 14.2, GNU C Library (glibc)
2.41, LLVM/Clang 19, Python 3.13, Rust 1.85, and
systemd 257. The release notes have a section
for well-known software that compares the version in Debian 12
against Debian 13. While some of the versions lag a bit behind the
upstream, they are not woefully outdated.

The project now supports
six major hardware architectures: x86-64/amd64, 32-bit Arm with a
hardware FPU (armhf), 64-bit Arm (arm64), IBM POWER8 or newer
(ppc64el), IBM S/390 (s390x), and 64-bit RISC-V. The i386 architecture
is not supported for trixie, though the project continues to
build some i386 packages to run on 64-bit systems; users with i386 systems cannot upgrade to
trixie. The MIPS
architectures (mipsel and mis64el) have also been removed in trixie.

The Arm EABI
(armel) port that targets older 32-bit Arm devices prior to Arm v7 is
still supported with trixie, but this release is the end of the
line. There is no installation media for armel systems, but users who
have bookworm installed can upgrade to trixie if they have supported
hardware: the Raspberry Pi 1, Zero, and Zero W are the
only devices mentioned in
the release notes.

Upgrades from bookworm are supported, of course. The release
notes suggest that users convert APT source files to the DEB822 format
before the upgrade. APT 3.0
includes an "apt modernize-sources" command to convert APT data
source files to DEB822, but that is not available in bookworm. Users are
also expected to remove
all third-party packages prior to running the upgrade. I tested
the upgrade on one of my servers, after taking a snapshot to roll back
to if needed, and all went smoothly. Users who are considering an
upgrade should read the release notes carefully before forging ahead;
in particular, users should be aware that it's possible (but not
certain) for network interface names to change on upgrade.

Installation

For users who want to start fresh, Debian offers a
variety of installer images and download methods; users can choose
a 64MB minimal ISO image with the netboot
installer, all the way up to a set of Blu-ray images. The project
recommends using BitTorrent or Jigsaw
Download (jigdo) for the largest images. BitTorrent probably needs
no introduction, but jigdo is not as well-known. Jigdo is a method of
downloading all of the individual packages for an image from multiple
mirrors and then assembling them into an ISO image on the user's
machine. It was a bit fiddly to use jigdo to download an image, but
not overly so—and the speed of the whole process was comparable
to simply downloading an ISO of the same size.

Debian's network
install ("netinst") image is probably the best option for server
installations and for experienced Linux users; it includes the
packages required for a base install and then fetches the remaining
software from Debian mirrors. Unlike the tiny netboot image, it
includes the option of using either the graphical installer or the
text-based installer.

The installer is a bit of a throwback to an earlier era when users
were expected to know a lot more about the workings of a Linux system. 
Users who have only worked with distributions like Fedora and Ubuntu
will notice that installing Debian requires many more steps than other
popular distributions. For example, many desktop distributions have
eliminated the step of setting a password for the root
user—instead, it is generally assumed that the primary user will
also be the system administrator, so the default is to give the
primary user sudo privileges instead. Debian does not take that
approach; in fact, there is no way to give a user sudo privileges
during installation. Setting up sudo has to be done manually after
the installation is completed Update: Users can skip creation of a root account and the installer will then set up the regular user as an administrator with sudo permissions. Apologies for the error.

For some folks, installing Debian will be a bit of a chore and may
even be confusing for users who are new to Linux. For example, the
text-mode installer requires users to specify the device for GRUB boot
loader installation, without providing a default. If one chooses an
invalid partition, the installer tells the user that the operation has
failed and drops back to a menu listing all the installation
steps. Presumably if one picks the wrong partition it will
happily install GRUB to that and render the system unbootable. This is
not insurmountable for experienced Linux users, but it would no doubt
be a hurdle for many users.

More experienced Linux users are likely to appreciate the
amount of control offered by the installer. For example, Fedora's
recent web-based installer makes it difficult to even find the option to
perform custom partitioning. Debian has a guided partitioning option
for those who do not want to fuss with it, but the option to create
custom partitions is not hidden from the user.

Debian has a better installation option for newer Linux users,
though it is easy to miss: the live install images, which
use the Calamares installer. Its
workflow is more akin to the installation process one finds with
Fedora and Ubuntu; it also sets up the primary user with sudo
privileges rather than creating a root password. Unfortunately,
the live images are not listed on the main page for installer
images—though they are mentioned, briefly, in the release
notes.







The Debian installer also has the option of using a Braille display
and/or speech synthesizer voice for the installation. I have not tried
these options, but they are available for users who need them.

X.org

Many distributions are in the process of phasing out X.org support
for GNOME and KDE as the upstream projects have started doing so.
For example, Fedora will remove X.org session support
for GNOME in Fedora 43, and the plan is for Ubuntu to do the same
in its upcoming 25.10 release. GNOME will be completely removing X.org
support in GNOME 49, which is planned for September.

Much has already been said about this, of course, and there is
likely little new left to be said or that needs to be
said. However, for users who still need or want X.org support,
Debian 13 includes X.org sessions for GNOME and KDE. In testing
trixie, I've spent some time in the GNOME and KDE X.org sessions as
well as the Wayland sessions; if there are any gotchas or horrible
bugs, I haven't encountered them (yet). This might be a compelling
reason for some folks to switch to (or stick with) Debian.

Trying trixie

I use Debian for my personal web site and blogs, but it has been
quite some time since I used it as my primary desktop operating
system. Debian (and Ubuntu) derivatives, such as Linux Mint and Pop!_OS, yes—but it's been
several years since I've used vanilla Debian on the desktop for
more than casual tinkering.

The Debian release announcement boasts about the number of packages
included in trixie: 64,419 packages total, with 14,100 added and more
than 6,000 removed as obsolete
since bookworm. That is quite a few packages, but falls short of some
other distributions. For example, "dnf repoquery --repo=fedora
--available" shows more than 76,000 packages available for
Fedora 42.

After installing Debian, I went to install some of my preferred
software, such as aerc,
Ghostty, niri, and Speech Note. The aerc
packages in trixie are current, but Ghostty and niri are not packaged
for Debian at all. Ghostty is written in Zig, which is also not
available, so users who want to build it from source will need to
install Zig separately and then build Ghostty. Speech Note is packaged
as a Flatpak, but Debian does not enable Flatpaks or Flathub in the
GNOME Software Store by default. Users who want Flatpaks on Debian via
Flathub will need to install the flatpak package and manually
add the Flathub repo:

    flatpak remote-add --if-not-exists flathub \
      https://dl.flathub.org/repo/flathub.flatpakrepo


Users will need to add the gnome-software-plugin-flatpak
package for Flatpak support in GNOME Software, and
plasma-discover-backend-flatpak to add it to
KDE Discover.

Trixie ships with the Firefox extended-support release (ESR) by
default: Firefox
128, which was released in July 2024. Happily,
Mozilla offers a Debian
repository for those who want to run more current versions. Even
better, there is a little-advertised utility called extrepo that
has a curated list of external repositories users might want to enable
for Debian. To enable the Mozilla repository, for example, a user only
needs to install extrepo, run
"extrepo enable mozilla" as root (or with
sudo), update the package cache, and look for the regular
Firefox package. In all, extrepo includes more than 160 external
repositories for applications like Docker CE, Signal, and Syncthing. Unfortunately, the
extrepo utility does not have a separate "list" command to show the
available repositories, though running "extrepo search"
with no search parameter will return all of its DEB822-formatted
repository entries. Some of the software is
in an external repository due to a non-free license, other software (like
Firefox) just has a development cycle that outpaces Debian's.

As one might expect, the Debian desktop experience is not
dramatically different from other distributions; GNOME 48 on
Debian is little different than GNOME 48 on Fedora, and the same
is true for KDE, Xfce, etc. The primary difference is that users can
expect more or less the same desktop experience running Debian stable
in two years that they have today, which is not necessarily true for
other distributions.

Miscellaneous

One of the features in Debian 13 is something that most users
won't notice or appreciate at all: a transition to
64-bit time_t on 32-bit architectures, to avoid the Year 2038 problem. The
short version is that 32-bit integers cannot hold a Unix epoch
timestamp for dates after January 19, 2038. That may seem
like a distant concern, even irrelevant for Debian trixie; after all,
Debian 13 is only supported by the project until 2030. However,
the project expects that some 32-bit embedded systems will still be running
trixie in 2038, so Debian developers did the heavy lifting to complete
the transition to 64-bit time_t now. LWN covered the early planning
for this in 2023.

By now, most users have retired their DSA
SSH keys; if not, now is the time to do so. DSA keys were disabled by
default with OpenSSH in 2015, and they are entirely disabled now with
the openssh-client and openssh-server packages in
trixie. If there is a device that can, for some reason, only be
connected to with DSA, users can install the
openssh-client-ssh1 package and use ssh1 to make the
connection.

As we covered in
June 2024, Debian 13 has switched to using a tmpfs
filesystem for the /tmp directory. By default, Debian
allocates up to 50% of memory to /tmp, but this can be
changed by following the instructions
in the release notes. Note that this also applies to systems that
are upgraded to trixie from bookworm.

Forward to forky

Debian Project Leader (DPL) Andreas Tille recently
announced "Debian's 100000th birthday", so clearly the project has a
bit of experience with putting out solid releases. Granted, he was
reporting the number in binary, but even when converted to decimal 
numbers (32 years), it's an impressive track record.

While testing, I installed trixie on a couple of systems, including
a new Framework 12-inch laptop. My original intent was to just see
whether Debian had any problems with the new hardware (it didn't), but
now I'm leaning toward sticking with Debian on this system for a while
to see if stability suits me.

With trixie out the door, the Debian Project has already turned its
attention to working on forky, which has no release date set. Debian has
stuck to a loose schedule of a new stable release roughly every two
years. Most likely we will see Debian 14 sometime in 2027. After
the forky release, trixie will still receive updates from Debian's
security team through 2028, and then from its LTS team through 2030.

As of yet, there are no major new features or changes announced for
forky; it seems likely that those will be coming to light in the
coming months now that the project has trixie out the door. LWN will,
of course, be reporting on those developments as they happen.


            ]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Claude Sonnet will ship in Xcode]]></title>
            <link>https://developer.apple.com/documentation/xcode-release-notes/xcode-26-release-notes</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45058688</guid>
        </item>
        <item>
            <title><![CDATA[The Space Shuttle Columbia disaster and the over-reliance on PowerPoint (2019)]]></title>
            <link>https://mcdreeamiemusings.com/blog/2019/4/13/gsux1h6bnt8lqjd7w2t2mtvfg81uhx</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45057404</guid>
            <description><![CDATA[We’ve all sat in those presentations.  A speaker with a stream of slides full of text, monotonously reading them off as we read along.  We’re so used to it we expect it.  We accept it.  We even consider it ‘learning’. As an educator I push against ‘death by PowerPoint’ and I'm fascinated with how we]]></description>
            <content:encoded><![CDATA[

      

      

      
        
          
            
              
            
          
        
      


      
      
      

      
        
        

  
  

    

    

      

      
        
          
        
        

        
          
            
          
        

        
          
          
            The space shuttle Columbia disintegrating in the atmosphere (Creative Commons)
          
        
      
        
      

    
  We’ve all sat in those presentations.  A speaker with a stream of slides full of text, monotonously reading them off as we read along.  We’re so used to it we expect it.  We accept it.  We even consider it ‘learning’. As an educator I push against ‘death by PowerPoint’ and I'm fascinated with how we can improve the way we present and teach.  The fact is we know that PowerPoint kills.  Most often the only victims are our audience’s inspiration and interest.  This, however, is the story of a PowerPoint slide that actually helped kill seven people.January 16th 2003.  NASA Mission STS-107 is underway. The Space Shuttle Columbia launches carrying its crew of seven to low orbit.  Their objective was to study the effects of microgravity on the human body and on ants and spiders they had with them.  Columbia had been the first Space Shuttle, first launched in 1981 and had been on 27 missions prior to this one.  Whereas other shuttle crews had focused on work to the Hubble Space Telescope or to the International Space Station this mission was one of pure scientific research.  The launch proceeded as normal.  The crew settled into their mission.  They would spend 16 days in orbit, completing 80 experiments.  One day into their mission it was clear to those back on Earth that something had gone wrong.  As a matter of protocol NASA staff reviewed footage from an external camera mounted to the fuel tank.  At eighty-two seconds into the launch a piece of spray on foam insulation (SOFI) fell from one of the ramps that attached the shuttle to its external fuel tank.  As the crew rose at 28,968 kilometres per hour the piece of foam collided with one of the tiles on the outer edge of the shuttle’s left wing.  


      

      
        
          
        
        

        
          
            
          
        

        
          
          
            Frame of NASA launch footage showing the moment the foam struck the shuttle’s left wing (Creative Commons)
          
        
      
        
      

    
  It was impossible to tell from Earth how much damage this foam, falling nine times faster than a fired bullet, would have caused when it collided with the wing.   Foam falling during launch was nothing new.  It had happened on four previous missions and was one of the reasons why the camera was there in the first place.  But the tile the foam had struck was on the edge of the wing designed to protect the shuttle from the heat of Earth’s atmosphere during launch and re-entry.  In space the shuttle was safe but NASA didn’t know how it would respond to re-entry.  There were a number of options.  The astronauts could perform a spacewalk and visually inspect the hull.  NASA could launch another Space Shuttle to pick the crew up.  Or they could risk re-entry.  NASA officials sat down with Boeing Corporation engineers who took them through three reports; a total of 28 slides.    The salient point was whilst there was data showing that the tiles on the shuttle wing could tolerate being hit by the foam this was based on test conditions using foam more than 600 times smaller than that that had struck Columbia.  This is the slide the engineers chose to illustrate this point:

  NASA managers listened to the engineers and their PowerPoint.  The engineers felt they had communicated the potential risks.  NASA felt the engineers didn’t know what would happen but that all data pointed to there not being enough damage to put the lives of the crew in danger.  They rejected the other options and pushed ahead with Columbia re-entering Earth’s atmosphere as normal.  Columbia was scheduled to land at 0916 (EST) on February 1st 2003.  Just before 0900, 61,170 metres above Dallas at 18 times the speed of sound, temperature readings on the shuttle’s left wing were abnormally high and then were lost.  Tyre pressures on the left side were soon lost as was communication with the crew.  At 0912, as Columbia should have been approaching the runway, ground control heard reports from residents near Dallas that the shuttle had been seen disintegrating.  Columbia was lost and with it her crew of seven.  The oldest crew member was 48.  The shuttle programme was on lock down, grounded for two years as the investigation began.  The cause of the accident became clear: a hole in a tile on the left wing caused by the foam let the wing dangerously overheat until the shuttle disintegrated.  The questions to answer included a very simple one: Why, given that the foam strike had occurred at a force massively out of test conditions had NASA proceeded with re-entry?  Edward Tufte, a Professor at Yale University and expert in communication reviewed the slideshow the Boeing engineers had given NASA, in particular the above slide.  His findings were tragically profound.


 Firstly, the slide had a misleadingly reassuring title claiming that test data pointed to the tile being able to withstand the foam strike.  This was not the case but the presence of the title, centred in the largest font makes this seem the salient, summary point of this slide.  This helped Boeing’s message be lost almost immediately.























  Secondly, the slide contains four different bullet points with no explanation of what they mean.  This means that interpretation is left up to the reader.  Is number 1 the main bullet point?  Do the bullet points become less important or more?  It’s not helped that there’s a change in font sizes as well.  In all with bullet points and indents six levels of hierarchy were created.  This allowed NASA managers to imply a hierarchy of importance in their head: the writing lower down and in smaller font was ignored.  Actually, this had been where the contradictory (and most important) information was placed.  


Thirdly, there is a huge amount of text, more than 100 words or figures on one screen.   Two words, ‘SOFI’ and ‘ramp’ both mean the same thing: the foam.  Vague terms are used.  Sufficient is used once, significant or significantly, five times with little or no quantifiable data.  As a result this left a lot open to audience interpretation.  How much is significant?  Is it statistical significance you mean or something else?  
























Finally the single most important fact, that the foam strike had occurred at forces massively out of test conditions, is hidden at the very bottom.  Twelve little words which the audience would have had to wade through more than 100 to get to.  If they even managed to keep reading to that point.  In the middle it does say that it is possible for the foam to damage the tile.  This is in the smallest font, lost. 























  NASA’s subsequent report criticised technical aspects along with human factors.  Their report mentioned an over-reliance on PowerPoint: “The Board views the endemic use of PowerPoint briefing slides instead of technical papers as an illustration of the problematic methods of technical communication at NASA.”  Edward Tufte’s full report makes for fascinating reading. Since being released in 1987 PowerPoint has grown exponentially to the point where it is now estimated than thirty million PowerPoint presentations are made every day.  Yet, PowerPoint is blamed by academics for killing critical thought.  Amazon’s CEO Jeff Bezos has banned it from meetings.   Typing text on a screen and reading it out loud does not count as teaching.  An audience reading text off the screen does not count as learning.  Imagine if the engineers had put up a slide with just: “foam strike more than 600 times bigger than test data.”  Maybe NASA would have listened.  Maybe they wouldn’t have attempted re-entry.  Next time you’re asked to give a talk remember Columbia. Don’t just jump to your laptop and write out slides of text.  Think about your message.  Don’t let that message be lost amongst text.  Death by PowerPoint is a real thing.  Sometimes literally.Thanks for reading - Jamie 


      

      
        
          
        
        

        
          
            
          
        

        
          
          
            Columbia’s final crew (from https://www.space.com/19436-columbia-disaster.html)
          
        
      
        
      

    

    

    

  

  

  

  
  
  


        
        
      

      

      

    ]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Expert: LSP for Elixir]]></title>
            <link>https://github.com/elixir-lang/expert</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45057322</guid>
            <description><![CDATA[Official Elixir Language Server Protocol implementation - elixir-lang/expert]]></description>
            <content:encoded><![CDATA[Expert
Expert is the official language server implementation for the Elixir programming language.
Installation
You can download Expert from the releases page for your
operating system and architecture. Put the executable somewhere on your $PATH, like ~/.local/bin/expert
For editor specific installation instructions, please refer to the Installation Instructions
Nightly Builds
If you want to try out the latest features, you can download a nightly build.
Using the GH CLI, you can run the following command to download the latest nightly build:
gh release download nightly --pattern 'expert_linux_amd64' --repo elixir-lang/expert
Then point your editor to the downloaded binary.
Building from source
To build Expert from source, you need Zig 0.14.1 installed on your system.
Then you can run the following command or follow the instructions in the Installation Instructions:
just release-local
This will build the Expert binary and place it in the apps/expert/burrito_out directory. You can then point your
editor to this binary.
Sponsorship
Thank you to our corporate sponsors! If you'd like to start sponsoring the project, please read more below.






Corporate
For companies wanting to directly sponsor full time work on Expert, please reach out to Dan Janowski: EEF Chair of Sponsorship WG at danj@erlef.org.
Individual
Individuals can donate using GitHub sponsors. Team members are listed in the sidebar.
Other resources

Architecture
Development Guide
Glossary
Installation Instructions

LICENSE
Expert source code is released under Apache License 2.0.
Check LICENSE file for more information.
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Fuck up my site – Turn any website into beautiful chaos]]></title>
            <link>https://www.fuckupmysite.com/?url=https%3A%2F%2Fnews.ycombinator.com&amp;torchCursor=true&amp;comicSans=true&amp;fakeCursors=true&amp;peskyFly=true</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45057020</guid>
            <description><![CDATA[PARODY/ENTERTAINMENT ONLY: Transform any website into pure chaos. Add burning cursors, Comic Sans everything, fake cursors, and more chaos features to any site. A humorous parody tool - not for real use. Some people just want to watch the web burn.]]></description>
            <content:encoded><![CDATA[This tool is for parody and entertainment purposes only. It temporarily applies visual chaos effects to websites for comedic effect. We do not store, collect, or transmit any personal information.NEVER enter passwords, credit card details, or any sensitive information while using this tool. The proxied sites are not secure and should not be used for any real transactions or logins.By using this tool, you acknowledge that it's purely for entertainment and you will not enter any sensitive data. Banking, financial, healthcare, and government sites are blocked for safety.]]></content:encoded>
        </item>
    </channel>
</rss>