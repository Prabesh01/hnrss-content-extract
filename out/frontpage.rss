<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Hacker News: Front Page</title>
        <link>https://news.ycombinator.com/</link>
        <description>Hacker News RSS</description>
        <lastBuildDate>Mon, 01 Sep 2025 16:40:21 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>github.com/Prabesh01/hnrss-content-extract</generator>
        <language>en</language>
        <atom:link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/frontpage.rss" rel="self" type="application/rss+xml"/>
        <item>
            <title><![CDATA[The time picker on the iPhone's alarm app isn't circular, it's just a long list]]></title>
            <link>https://old.reddit.com/r/interestingasfuck/comments/1n5lztw/the_time_picker_on_the_iphones_alarm_app_isnt/</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45093765</guid>
        </item>
        <item>
            <title><![CDATA[Cloudflare Search Engine Market Share 2025Q2]]></title>
            <link>https://radar.cloudflare.com/reports/search-engine-market-share-2025-q2</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45093693</guid>
        </item>
        <item>
            <title><![CDATA[Isolated(any)]]></title>
            <link>https://nshipster.com/isolated-any/</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45093590</guid>
            <description><![CDATA[There are cases where just a little more visibility and control over how to schedule asynchronous work can make all the difference.]]></description>
            <content:encoded><![CDATA[
              Ahh, @isolated(any).
                It‚Äôs an attribute of contradictions.
                You might see it a lot, but it‚Äôs ok to ignore it.
                You don‚Äôt need to use it, but I think it should be used more.
                It must always take an argument, but that argument cannot vary.
              Confusing? Definitely.
                But we‚Äôll get to it all.
              To understand why @isolated(any) was introduced,
                we need to take a look at async functions.
              let respondToEmergency: () async -> Void

              This is about as simple a function type as we can get.
                But, things start to get a little more interesting
                when we look at how a function like this is used.
                A variable with this type must always be invoked with await.
              await respondToEmergency()

              This, of course, makes sense.
                All async functions must be called with await.
                But! Consider this:
              let sendAmbulance: @MainActor () -> Void = {
    print("üöë WEE-OOO WEE-OOO!")
}

let respondToEmergency: () async -> Void = sendAmbulance

await respondToEmergency()

              The explicit types are there to help make what‚Äôs going on clear.
                We first define a synchronous function that must run on the MainActor.
              And then we assign that to a plain old,
              non-MainActor async function.
            We‚Äôve changed so much that you might find it surprising this even compiles.
          Remember what await actually does. It allows the current task to suspend. That doesn‚Äôt just let the task wait for future work to complete. It also is an opportunity to change isolation. This makes async functions very flexible!
          Just like a dispatcher doesn‚Äôt sit there doing nothing while waiting for the ambulance to arrive, a suspended task doesn‚Äôt block its thread. When the dispatcher puts you on hold to coordinate with the ambulance team, that‚Äôs the isolation switch - they‚Äôre transferring your request to a different department that specializes in that type of work.
          
            But change to where, exactly?
          Ok, so we know that async functions, because they must always be awaited, gain a lot of flexibility. We are close, but have to go just a little further to find the motivation for this attribute.
          func dispatchResponder(_ responder: () async -> Void) async {
    await responder()
}

await dispatchResponder {
    // no explicit isolation => nonisolated
    print("üöí HONK HOOOOONK!")
    await airSupport()
    print("üöÅ SOI SOI SOI SOI SOI!")
}

await dispatchResponder { @MainActor in
    print("üöë WEE-OOO WEE-OOO!")
}

          We now have a function that accepts other functions as arguments. It‚Äôs possible to pass in lots of different kinds of functions to dispatchResponder. They could be async functions themselves, or even be synchronous. And they can be isolated to any actor. All thanks to the power of await.
        Except there‚Äôs a little problem now.
          Have a look at dispatchResponder on its own:
      func dispatchResponder(_ responder: () async -> Void) async {
    await responder()
}

      The type of responder fully describes everything about this function,
        except for one thing.
        We have no way to know its isolation.
        That information is only available at callsites.
        The isolation is still present,
        so the right thing happens at runtime.
        It‚Äôs just not possible to inspect it statically or even programmatically.
        If you‚Äôve encountered type erasure before,
        this should seem familiar.
        The flexibility of async has come with a price -
        a loss of information.
      This is where @isolated(any) comes in.
      
        Using @isolated(any)
      
      We can change the definition of dispatchResponder to fix this.
    func dispatchResponder(_ responder: @isolated(any) () async -> Void) async {
    print("responder isolation:", responder.isolation)

    await responder()
}

    When you apply @isolated(any) to a function type, it does two things. Most importantly, it gives you access to a special isolation property. You can use this property to inspect the isolation of the function. The isolation could be an actor. Or it could be non-isolated. This is expressible in the type system with (any Actor)?.
    Functions with properties felt really strange to me at first.
      But, after thinking for a minute,
      it became quite natural.
      Why not?
      It‚Äôs just a type like any other.
      In fact, we can simulate how this all works with another feature:
      callAsFunction.
struct IsolatedAnyFunction<T> {
    let isolation: (any Actor)?
    let body: () async -> T

    func callAsFunction() async -> T {
        await body()
    }
}

let value = IsolatedAnyFunction(isolation: MainActor.shared, body: {
    // isolated work goes here
})

await value()

This analogy is certainly not perfect,
  but it‚Äôs close enough that it might help.
There is one other subtle change that @isolated(any) makes to a function
  that you should be aware of.
  Its whole purpose is to capture the isolation of a function.
  Since that could be anything,
  callsites need an opportunity to switch.
  And that means an @isolated(any) function must be called with an await ‚Äî
  even if it isn‚Äôt itself explicitly async.
func dispatchResponder(_ responder: @isolated(any) () -> Void) async {
    await responder() // note the function is synchronous
}

This makes synchronous functions marked with @isolated(any) a little strange.
  They still must be called with await,
  yet they aren‚Äôt allowed to suspend internally?
As it turns out, there are some valid (if rare) situations
  where such an arrangement can make sense.
  But adding this kind of constraint to your API
  should at least merit some extra documentation.

  How @isolated(any) Affects Callers
All of the task creation APIs ‚Äî
  Task initializers and TaskGroup ‚Äî
make use of @isolated(any).
These are used a lot
and are usually encountered very early on when learning about concurrency.
So, it‚Äôs completely natural to run into this attribute and think:
‚ÄúUgh another thing to understand!‚Äù
It‚Äôs reasonable because
  the components of a function type dictate how it can be used.
  They are all essential qualities for API consumers.
  They are the interface.

  Parameters
  Return value
  Does it throw?
  Is it async?

This is not an exhaustive list,
  but what‚Äôs important is all of these are things callers must care about.
  Except for @isolated(any), which is the opposite.
  It doesn‚Äôt affect callers at all.
This, I think, is the root of a lot of confusion around @isolated(any).
  Unlike other qualities of a function,
  this attribute is used to capture information for the API producer.
I‚Äôm so close to saying ‚Äúyou can and should just ignore @isolated(any)‚Äú.
  But I just cannot quite go that far,
  because there is one situation you should be aware of.

  Scheduling
To help understand when you should be thinking about using @isolated(any),
  I‚Äôm going to quote
  the proposal:

  This allows the API to make more intelligent scheduling decisions about the function.

I‚Äôve highlighted ‚Äúintelligent scheduling‚Äù,
  because this is the key component of @isolated(any).
  The attribute gives you access to the isolation of a function argument.
  But what would you use that for?
Did you know that, before Swift 6.0, the ordering of the following code was undefined?
@MainActor
func threeAlarmFire() {
    Task { print("üöí Truck A reporting!") }
    Task { print("üöí Truck B checking in!") }
    Task { print("üöí Truck C on the case!") }
}

Ordering turns out to be a very tricky topic when working with unstructured tasks.
  And while it will always require care, Swift 6.0 did improve the situation.
  We now have some stronger guarantees about scheduling work on the MainActor,
and @isolated(any) was needed to make that possible.

Take a look at this:
@MainActor
func sendAmbulance() {
    print("üöë WEE-OOO WEE-OOO!")
}

nonisolated func dispatchResponders() {
    // synchronously enqueued
    Task { @MainActor in
        sendAmbulance()
    }

    // synchronously enqueued
    Task(operation: sendAmbulance)

    // not synchronously enqueued!
    Task {
        await sendAmbulance()
    }
}

These are three ways to achieve the same goal.
  But, there is a subtle difference in how the last form is scheduled.
  Task takes an @isolated(any) function
  so it can look at its isolation
  and synchronously submit it to an actor.
  This is how ordering can be preserved!
  But, it cannot do that in the last case.
  That closure passed into Task isn‚Äôt actually itself MainActor ‚Äî
it has inherited nonisolated from the enclosing function.
I think it might help to translate this into
  GCD.
func dispatchResponders() {
    // synchronously enqueued
    DispatchQueue.main.async {
        sendAmbulance()
    }

    // synchronously enqueued
    DispatchQueue.main.async(execute: sendAmbulance)

    // not synchronously enqueued!
    DispatchQueue.global().async {
        DispatchQueue.main.async {
            sendAmbulance()
        }
    }
}

Look really closely at that last one!
  What we are doing there is introducing a new async closure
  that then calls our MainActor function.
There are two steps.
This doesn‚Äôt always matter,
but it certainly could.
And if you need to precisely schedule asynchronous work,
@isolated(any) can help.

  isolated(all)
All this talk about @isolated(any) got me thinking‚Ä¶
It‚Äôs kinda strange that only some functions get to have this isolation property.
  It would certainly feel more consistent to me if all functions had it.
  In fact, I think we can go further.
  I can imagine a future where an explicit @isolated(any)
  isn‚Äôt even necessary for async functions.
  As far as I can tell, there is no downside.
And a little less syntactic noise would be nice.
  Perhaps one day!

  isolated(some)
We do have to talk about that any.
  It‚Äôs surprising that this attribute requires an argument,
  yet permits only one possible value.
  The reason here comes down to future considerations.
The concrete actor type that this isolation property returns
  is always (any Actor)?.
  This is the most generic type for isolation and matches the #isolation macro.
  Today, there is no way to constrain a function to only specific actor types,
  such as @isolated(MyActor).
The any keyword here was chosen to mirror how protocols handle this.
But accepting an argument leaves the door open
to more sophisticated features in the future.
And that really fits the spirit of @isolated(any).
  Doing a little work now in exchange for flexibility down the road.
Because you‚Äôll see it in many foundational concurrency APIs,
  it‚Äôs very natural to feel like you must understand @isolated(any).
  I‚Äôm 100% behind technical curiosity!
  In this case, however, it is not required.
  For the most part, you can just ignore this attribute.
  You will rarely, if ever, need to use it yourself.
But if you ever find yourself capturing isolated functions
  and passing them along to other APIs that use @isolated(any),
  you should consider adopting it.
  It could prove useful.
  It‚Äôs even a source-compatible change
  to add or remove this attribute from an async function.

So there you have it.
As with many parts of the concurrency system,
  there‚Äôs a surprising depth to @isolated(any).
  Thankfully, from a practical perspective,
  we can enjoy the ordering guarantees of task creation
  that it enables without needing to master it.
  And one less thing on this journey is most welcome.
Isolated maybe, but never alone.
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Anti-establishment versus authoritarian populists and support for the strongman]]></title>
            <link>https://www.frontiersin.org/articles/10.3389/fpos.2025.1605460</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45093408</guid>
            <description><![CDATA[This paper contributes to the growing demand-side literature on populism by investigating how different types of populist attitudes shape support for strongm...]]></description>
            <content:encoded><![CDATA[ 1 Introduction
The rise of populist leaders, often labeled as strongmen, has drawn significant scholarly and media attention over the past two decades (Ben-Ghiat, 2020; Rachman, 2022). Studies emphasize their charisma (Pappas, 2016; McDonnell, 2016) and rhetorical style (Ostiguy, 2009), which foster a direct bond with the masses (Germani, 1978; M√©ny and Surel, 2002), often through ‚Äúlow,‚Äù coarse, and folksy language to project authenticity (Ostiguy and Roberts, 2016). Research on the economic and political consequences of populist governance has predominantly produced negative findings. Funke et al. (2023) show that prolonged populism results in economic decline, lower GDP, and diminished macroeconomic stability. Ruth-Lovell and Grahn (2023) argue that populist governance erodes electoral, liberal, and deliberative dimensions of democracy, while Erhardt and Filsinger (2024) contend that the primary danger to contemporary democratic survival stems from executive aggrandizement carried out by elected populist leaders. Despite these harmful consequences, populist leaders continue to enjoy substantial public backing, raising a crucial question: why do citizens back populist strongmen, even when such support threatens democratic institutions and economic stability?
The literature presents an ambivalent relationship between populism and democracy. On one hand, some scholars argue that populism is inherently illiberal, as it rejects electoral competition and institutional checks and balances‚Äîcore tenets of representative democracy (M√ºller, 2014; Urbinati, 2019; Pappas and Kriesi, 2015). Populist movements embrace majoritarian politics and seek to suppress opposition, often through a charismatic strongman who pledges to dismantle institutional constraints in the name of executing the people‚Äôs will. Under this interpretation, populism becomes synonymous with authoritarianism (Bugaric, 2019). On the other hand, an alternative perspective suggests that populism can serve as a corrective to democratic deficiencies (Canovan, 1999; Laclau, 2005). Populists claim to represent the true will of the people and argue that existing institutions are insufficiently democratic (Ivaldi et al., 2017; Jacobs et al., 2018). From this perspective, some scholars see populism as a ‚Äúpolitics of hope‚Äù (Spruyt et al., 2016) that reinvigorates democracy (Stavrakakis and Katsambekis, 2014). According to this view, populist leaders are essential for uniting diverse groups in opposition to entrenched elites and driving political change (Laclau, 2005). These competing interpretations highlight the complexity of populist politics and the need for a more nuanced understanding of what drives its appeal among supporters.
Although both scenarios are plausible, our understanding of the underlying motivations driving individual-level support for populist leaders remains limited. Drawing on the growing body of demand-side literature on populism, this paper explores the extent to which populist attitudes influence support for strongman leaders. Empirical research on populist attitudes has produced mixed and occasionally contradictory results. While some studies suggest that populist attitudes increase the likelihood of voting for a populist party (Akkerman et al., 2014; Van Hauwaert and Kessel, 2018), others argue that ideological alignment plays a more decisive role (Kittel, 2024; Dai and Kustov, 2024; Castanho Silva et al., 2022). More surprisingly, some studies find that populist citizens simultaneously favor direct democracy while also supporting authoritarian decision-making (Wegscheider et al., 2023) or rule by a small group of elites (Spruyt et al., 2023).
These inconsistencies indicate that populism, along with populist attitudes, is not a monolithic phenomenon but instead comprises distinct strands, each with varying implications for support for democratic institutions and democracy more broadly.
We argue that a significant challenge in understanding populist support stems from the overlooked variety of populist attitudes. Thus far, the conceptualization of populist attitudes has largely been shaped by the ideational approach, focusing primarily on anti-elitism and people-centrism (Mudde, 2004; Akkerman et al., 2014; Castanho Silva et al., 2020). While this approach has significantly advanced our understanding of populism, it neglects a crucial dimension: the appeal of strongman leadership to a specific subset of populist supporters. For these individuals, a strong leader embodies security and prosperity for the dominant majority, motivating their support through the belief that such leadership can safeguard traditional values and protect their perceived interests. Building upon this argument, we propose that distinguishing between distinct types of populist supporters‚Äîthose endorsing a democratic, people-centered variant and those inclined toward authoritarian forms of leadership‚Äîis not only analytically feasible but also theoretically imperative. Our key assertion is that populist attitudes manifest in two distinct forms. The first, anti-establishment populism, repudiates the ruling elites, champions the will of the people, and supports more direct democratic representation‚Äîan approach well captured by the ideational framework. The second, authoritarian populism, rejects liberal democratic norms in favor of strongman leadership. This populist variant privileges leaders willing to subvert democratic institutions to safeguard the interest of the dominant majority responsible for their rise in power.
To test our theory, we analyze original survey data from nine countries across four regions: Western Europe (France, Italy, Spain), Central Europe (Hungary, Poland), North America (Canada, U. S.), and South America (Brazil, Argentina). The supply-side literature on populism often emphasizes that populist movements can be categorized along an inclusionary-exclusionary dimension, itself shaped by an underlying left‚Äìright ideology (Mudde and Rovira Kaltwasser, 2013). Left-wing populism, which centers on economic grievances related to inequality, is generally understood as inclusionary. As Vasilopoulos and Jost (2020) note, it embodies a pluralistic conception of society in which ethnic, religious, and sexual minorities are viewed as part of ‚Äúthe people‚Äù whose interests deserve protection, particularly against those of the upper class. Accordingly, left-wing populism seeks to extend rights and resources to minority groups (Golder, 2016). By contrast, right-wing populism advances a monolithic notion of ‚Äúthe people‚Äù that aligns with the ethnic majority (Vasilopoulos and Jost, 2020). It is, therefore, an exclusionary form of populism that portrays ethnic, religious, and sexual minorities as threats to the perceived homogeneity of the ‚Äúnative‚Äù population (Mudde and Rovira Kaltwasser, 2013). Despite the prominence of several left-wing populist leaders in recent years, this article focuses on right-wing populism. This is because right-wing populist movements have seen a broader and more sustained rise in the past decade and have been more directly associated with challenges to liberal democratic norms, the rule of law, and minority rights. Their exclusionary appeals and framing of ‚Äúthe people‚Äù as ethnically or culturally homogenous have made them especially consequential for debates around democratic backsliding and social cohesion. Although each of the leaders examined can be characterized as a right-wing populist strongman or strongwoman, they display notable variation in whether they currently hold office, how extreme or provocative their discourse is, and how much institutional oversight limits their ability to exercise authority without constraint. This enables us to uncover important variation within the broader landscape of right-wing populist leadership, particularly in relation to whether their appeals are rooted more in authoritarian or anti-establishment populist attitudes.
We first employ factor analysis to identify the presence of both anti-establishment and authoritarian populist attitudes in each country. We then run Ordinary Least Squares (OLS) regressions to evaluate the impact of these attitudes on electoral support for populist strong(wo)men. Our findings reveal that in six of the nine cases (Italy, Spain, Brazil, Argentina, Hungary, and Poland), electoral support for populist leaders is primarily driven by authoritarian populist attitudes. In only two cases (France and Canada) does anti-establishment populism serve as the main driver, while neither variant significantly influences populist support in the U.S. Overall, our findings point to a troubling trend for democratic stability. Populist voters appear to support right-wing populist leaders not because they view them as champions of democracy, but because they appreciate their willingness to bypass institutional constraints and suppress democratic discourse. This underscores that the appeal of populist strongmen is rooted not in democratic ideals, but rather in the allure of authoritarian governance. 2 Theoretical background
2.1 The populist paradox and the role of the strongman
The tension between the populist strongman‚Äôs initial appeal as a champion of the people and the subsequent erosion of democratic norms once that strongman secures power constitutes one of the central paradoxes of populism. Time and again, participants in populist movements lend their support to leaders and parties that profess a commitment to enhancing democratic representation while simultaneously undermining democratic norms and curtailing individual rights and freedoms. Urbinati (2019) aptly characterizes this phenomenon as the ‚Äúdisfigurement of representative democracy.‚Äù By capitalizing on popular discontent with the political establishment, populist leaders often ascend to power through democratic means, only to consolidate authority and weaken the very institutions that facilitated their rise.
Nevertheless, considerable debate persists regarding the centrality of the populist leader‚Äîor strongman‚Äîin defining populism. Weyland (2001, p. 14), a pioneer of the political-strategic approach, conceptualizes populism as a ‚Äúpolitical strategy through which a personalistic leader seeks or exercises government power based on direct, unmediated, uninstitutionalized support from large numbers of mostly unorganized followers.‚Äù Albertazzi and McDonnell (2008, p. 7) similarly contend that ‚Äúthe charismatic bond between leader and follower is absolutely central to populist parties.‚Äù This perspective is echoed in Urbinati‚Äôs (2019, p. 9) work, where she asserts that populism eschews traditional party structures and deliberative democracy. Instead, populism operates by severing the link between traditional party elites and the electorate, advancing the claim that, because the people and the leader have effectively merged, intermediary elites (i.e., parties) become redundant, as does the process of deliberation. This direct, unmediated relationship between the populist leader and the people fosters a form of plebiscitary democracy in which the leader‚Äôs authority is rooted in a perceived mandate from the ‚Äúauthentic‚Äù majority, thereby circumventing the checks and balances inherent in liberal democratic regimes.
The political-strategic approach is not without its detractors, who contend that it overemphasizes the centrality of the populist leader in defining populism. Skeptics argue that this framework imputes to the populist strongman a utility-maximizing rationality and power-seeking intent that is not empirically distinguishable from the behavior of other political leaders (Rueda, 2021). Pappas (2016) likewise challenges the presumed link between populism and charismatic leadership, asserting that the presence of charisma should no longer be considered a defining characteristic of populism. Similarly, Mudde and Rovira Kaltwasser (2014, p. 382), key proponents of the ideational approach, argue that populism is not solely confined to the agency of personalistic leaders, noting that ‚Äúan elective affinity between populism and a strong leader seems to exist. However, the former can exist without the latter.‚Äù
Our objective is not to engage in a semantic debate over the proper definition of populism. Instead, we seek to underscore that the chosen definition of populism has direct and consequential implications for how populist attitudes are conceptualized and operationalized at the individual level. To date, the ideational approach‚Äîwhich downplays the centrality of the populist leader‚Äîhas become the dominant framework in the study of populist attitudes (Castanho Silva et al., 2020). While we acknowledge the significant insights this approach has provided, we contend that it fails to capture the full complexity of populist attitudes and their effects on support for populist strongmen. By focusing predominantly on anti-elitism and people-centeredness, the ideational approach overlooks the authoritarian dimension of populist attitudes‚Äîa critical factor in understanding the appeal of strongman figures. Addressing these gaps allows for a more comprehensive analysis of how varieties of populist attitudes interact and influence voter behavior.
The ideational approach, which has largely shaped the conceptualization of populist attitudes at the individual level, defines populism as a thin-centered ideology that constructs society as a dichotomy between two homogeneous and antagonistic groups: the ‚Äúpure people‚Äù and the ‚Äúcorrupt elites‚Äù (Mudde, 2004, 2007). Building on this definition, populist attitudes are typically conceptualized as comprising three distinct dimensions: anti-elitism, people-centrism, and a Manichaean worldview that frames society as a struggle between good and evil (Akkerman et al., 2014; Erhardt and Filsinger, 2024). However, this conceptualization overlooks a crucial dimension‚Äîthe allure of the populist strongman. While the ideational approach emphasizes the moral dichotomy between the ‚Äúpure people‚Äù and the ‚Äúcorrupt elites,‚Äù it fails to account for the psychological and emotional appeal of a strong, decisive leader who promises to restore order, defend traditional values, and embody the will of the people. This omission is crucial for accurately capturing populist attitudes, as support for populist strongmen often arises not solely from ideological alignment but also from the belief that these leaders possess the strength and determination required to confront entrenched elites and bring about meaningful change.
Wegscheider et al. (2023) reveal that populist citizens simultaneously exhibit stronger support for direct democratic mechanisms and a greater preference for authoritarian procedures compared to their non-populist counterparts. Donovan (2021) shows that supporters of radical right populist (RRP) parties disproportionately endorse strong, unchecked leaders and express openness to military rule. Moreover, these illiberal attitudes did not predict support for mainstream center-right parties, suggesting that authoritarian attitudes is specific to the RRP base, not just the broader right. Similarly, in their examination of the relationship between populism, elitism, and pluralism, Spruyt et al. (2023) find that a notable segment of populists‚Äîparticularly those with lower levels of political sophistication‚Äîendorse a form of elitism that paradoxically undermines the centrality of ‚Äúthe people‚Äù in democratic governance. The propensity for citizens to hold a contradictory and ideologically incoherent set of political beliefs is hardly a novel phenomenon (Converse, 1964). However, we argue that the contradictions inherent in populist attitudes, as outlined above, may be partially attributable to the limitations of the prevailing approach to conceptualizing and measuring these attitudes. Specifically, we argue that populist attitudes manifest in two distinct forms: anti-establishment and authoritarian populism. The ideational approach, with its emphasis on anti-elitism and people-centrism, captures anti-establishment populism but fails to distinguish authoritarian populist attitudes. This oversight is particularly important given that, while Rovira Kaltwasser and Van Hauwaert (2020) find that populist citizens tend to express stronger support for democracy, they caution that this support may be rooted in a conception of democracy that is at odds with liberal democratic principles, potentially favoring the emergence of illiberal democratic regimes. We concur with their assessment but extend their argument by suggesting that the populist citizenry is not monolithic‚Äîsome gravitate toward an illiberal democratic framework, while others remain committed to representative democracy. Recognizing these two distinct types of populist citizens helps to clarify the seemingly paradoxical finding by Wegscheider et al. (2023) that populists simultaneously endorse both direct democratic mechanisms and authoritarian governance. This duality reflects the inherent tensions within populist attitudes, which oscillate between a desire for unmediated popular sovereignty and an inclination toward strong, centralized authority.
While numerous studies acknowledge that authoritarian populists have come to dominate political systems in various countries across the globe, they often treat authoritarian populism as a mere subset of populism‚Äîone that has been distorted by an excessive concentration of power in the hands of a democratically elected strongman. Surprisingly, formal definitions of authoritarian populism‚Äîand even more so, of authoritarian populist attitudes‚Äîare remarkably limited in the existing literature. Mudde and Rovira Kaltwasser (2017) observe that, beginning in the 1990s, populist radical right parties in Europe advanced their political agendas by crafting platforms that fused populism with two complementary ideologies: authoritarianism and nativism. This ‚Äúmarriage of convenience‚Äù between populism, authoritarianism, and nativism (Mudde and Rovira Kaltwasser, 2017, p. 34) has since been treated as a given in subsequent definitions of authoritarian populism. However, precisely because populist radical right parties have become adept at seamlessly blending these ideologies in their rhetoric, it becomes increasingly difficult to disentangle populism from authoritarianism and right-wing ideology or to delineate the boundaries of authoritarian populism with clarity (Wagner et al., 2024). Moreover, far too often, the presence of authoritarian populist attitudes is inferred from individuals‚Äô support for populist radical right parties or their alignment with these parties‚Äô anti-immigrant, nativist ideological positions (see, for example, Bartle et al., 2019). This conflation not only obscures the distinction between authoritarian populist attitudes and radical right ideology but also limits the ability to accurately measure and conceptualize authoritarian populism as a distinct phenomenon. A notable example is Norris and Inglehart‚Äôs (2019) influential work on cultural backlash and the rise of authoritarian populism in the West. Drawing on earlier arguments (Inglehart and Norris, 2017), they contend that support for authoritarian populist parties stems from a preference for social conformity, traditional moral hierarchies, and strong law-and-order orientation, values that stand in sharp contrast to liberal democratic norms such as pluralism, tolerance, and individual autonomy. They define authoritarian values as comprising conformity, security, and loyalty (Norris and Inglehart, 2019, p. 71) and conceptualize populism as a rhetorical style emphasizing people-centeredness and anti-elitism (Norris and Inglehart, 2019, p. 66). However, due to acknowledged data limitations, they operationalize populist attitudes using a scale measuring mistrust in politicians, parties, and parliaments.
2.2 Defining features of authoritarian populist attitudes
Fortunately, the recent works of Z√ºrn (2022) and his colleagues (Wajner et al., 2024) help clarify the conceptual contours of authoritarian populism, providing valuable guidance for our operationalization of authoritarian populist attitudes below. Z√ºrn (2022) builds on Lipset and Rokkan‚Äôs (1967) cleavage structure theory, arguing that the dual forces of globalization and Europeanization have generated a new societal cleavage that fuels the rise of authoritarian populist parties. While this argument echoes earlier contributions (see Hooghe and Marks, 2009; Kriesi et al., 2006), Z√ºrn diverges from conventional scholarship by asserting that neither economic insecurity (Hobolt, 2016; Przeworski, 2019) nor cultural backlash (Norris and Inglehart, 2019) alone sufficiently explain the growing appeal of authoritarian populism. Z√ºrn (2022, p. 798) conceptualizes authoritarian populism as a thick-centered ideology that is majoritarian, positioning the homogeneous will of the majority in opposition to liberal rights and pluralism. It is also inherently nationalist, emphasizing the protection of borders and the national will against the perceived threats posed by cosmopolitanism and non-majoritarian institutions (NMIs), such as central banks, international organizations, or constitutional courts. Consequently, authoritarian populism constructs a stark antagonism between the corrupt, distant cosmopolitan elite and the virtuous, local people. This perspective aligns with Norris and Inglehart‚Äôs (2019, p. 444) observation that authoritarian populists place minimal value on the international rules-based order and are skeptical of multinational cooperations.
Z√ºrn‚Äôs (2022) definition of authoritarian populism provides a valuable framework for distinguishing between anti-establishment populism and authoritarian populism, as outlined by Bugaric (2019). In his analysis of the rise of populist movements over the past century, Bugaric (2019) contends that populism is Janus-faced, encompassing a variety of distinct forms, each with profoundly different political consequences. He classifies these forms into two broad categories: democratic and anti-establishment populism on one hand, and authoritarian populism on the other. The former blends elements of liberalism and democratic principles, advocating for greater inclusion and representation, while the latter is characterized by hostility toward the liberal international order, rooted in nationalism, protectionism, and the personalization of power.
For our purposes, the former aligns with the traditional ideational components of anti-elitism and people-centrism, coupled with a desire for greater direct democracy and enhanced accountability from established elites. The latter, however, is distinguished by a majoritarian conception of the popular will that seeks to marginalize opposition voices (Brubaker, 2017), prioritizes the protection of national interests, and places trust in a populist strongman as the embodiment of the people‚Äôs will. The tension between authoritarianism and anti-establishment politics has been a recurring theme in analyses of Latin American political development, from movements that emerged in the first half of the twentieth century such as Peronism, Varguism, and Cardenismo to more recent cases like Chavismo (Medina Echavarr√≠a, 1980; Freyre, 2003; Ebel and Taras, 2013). Z√ºrn‚Äôs (2022) definition offers a crucial analytical advantage by allowing us to disentangle authoritarian populism from radical right-wing ideology, clarifying the conceptual boundaries between these overlapping but distinct phenomena.
In sum, we posit that there are two distinct types of populist citizens that come to support a populist strongman. The first type are the anti-establishment populists who are genuinely invested in enhancing democratic representation and restoring a voice to the ‚Äúsilent majority.‚Äù While disillusioned with the current state of democracy in their respective countries, this group remains committed to the principles of liberal democratic processes, viewing them as the most appropriate‚Äîif not ideal‚Äîmeans of addressing their grievances. Their support for populist parties often functions as a protest vote against the entrenched political establishment, aimed at dislodging established elites from power and replacing them with populist leaders who pledge to champion the interests of ordinary, hard-working citizens. The ultimate objective is to recalibrate the distribution of economic and political power away from supranational institutions and privileged elites and toward the ‚Äúcommon people.‚Äù Importantly, this orientation does not inherently seek to permanently silence or exclude minority voices from the political process. Rather, it advocates for an enhanced role for the ‚Äúsilent majority‚Äù in decision-making, often through mechanisms such as referendums, which are perceived as a more direct and unmediated expression of the people‚Äôs will.
By contrast, the second type are the authoritarian populists, whose motivations are fundamentally different from those of their anti-establishment counterparts. Rather than seeking to enhance or safeguard democratic processes, authoritarian populists gravitate toward populist leaders precisely because these leaders advocate an exclusionary form of majoritarianism that aims to marginalize and punish out-groups for their perceived lack of conformity. As Norris and Inglehart (2019) argue, the rapid societal transformations of recent decades have triggered an ‚Äúauthoritarian reflex‚Äù in certain individuals‚Äîa response characterized by heightened anxiety and a desire to restore order in the face of perceived chaos. Convinced that the world is a dangerous and unpredictable place, and driven by fear of both further societal change and the ‚Äúout-groups‚Äù they perceive as catalysts of this transformation, authoritarian populists seek out leaders who validate their anxieties and reinforce their belief that these out-groups are the root cause of societal decline. These leaders, in turn, offer simple, decisive solutions to complex problems and pledge to swiftly dispense justice against perceived enemies of the people. From our perspective, this unwavering attraction to the populist strongman‚Äîwho embodies strength, decisiveness, and the promise of retribution‚Äîis the defining characteristic of authoritarian populist attitudes. 3 Data and methods
3.1 Data, cases, and items measuring populist attitudes
For the empirical analysis, we draw on data from the Varieties of Populist Attitudes (VoPA) public opinion survey. A random sample of one thousand respondents per country were invited to complete the survey from a set of partner panels based on the Lucid exchange platform, a high-quality source of public opinion data. The results were weighted by age and gender using Census information. The sample is geographically stratified to be representative of all nine countries. The data were collected in three waves spanning September 2022 to May 2024, beginning with Canada, the United States, France, and Italy (September‚ÄìNovember 2022), followed by Hungary and Spain (November 2023‚ÄìJanuary 2024), and concluding with Poland, Brazil, and Argentina (March‚ÄìMay 2024).
We categorize our countries into three clusters. The first‚ÄîFrance, Italy, the US, and Canada‚Äîhas seen populism recently enter the mainstream from the right, driven by charismatic leaders (Wagner et al., 2024). US populism traces back to the 1890s Agrarian Populist Party, a left-wing movement uniting agrarians, miners, and industrial workers. While right-wing populism dominates today, figures like Bernie Sanders and Alexandria Ocasio-Cortez maintain a notable left-wing presence (Armaly and Enders, 2024). Canadian populism, though sharing an agrarian left-wing past with the US, is more centrist and less polarizing. Despite media comparisons between Trump and Poilievre, Canadian populism has not adopted the nativism and xenophobia of Trump‚Äôs Republican faction. French populism has been largely shaped by Marine Le Pen, whose emphasis on immigration has made her and her party emblematic of populism‚Äôs xenophobic and nativist tendencies. In Italy, while often likened to Trump, Meloni distinguishes herself from other populist strong(wo)men by moderating her Eurosceptic rhetoric, distancing herself from Vladimir Putin, and steering her party closer to the political mainstream.
Our second cluster‚ÄîSpain, Brazil, and Argentina‚Äîhas traditionally been associated with left-wing populism, often regarded as more inclusionary than its right-wing counterpart, fostering greater democratic engagement and pluralism (Stavrakakis and Katsambekis, 2014). It positions itself as a voice for marginalized groups, including the poor and ethnic minorities (Rooduijn and Akkerman, 2017), while advancing an economic populism that frames politics as a struggle between the working class and entrenched financial elites, corporate power, and neoliberal institutions (Mudde and Rovira Kaltwasser, 2017). However, the recent ascendance of Vox in Spain, Jair Bolsonaro in Brazil, and Javier Milei in Argentina challenges this narrative. Vox‚Äôs nativist rhetoric, Bolsonaro‚Äôs authoritarian populism, and Milei‚Äôs radical libertarianism signal a significant shift, blurring the historical association of these countries with left-wing populism.
The third cluster consists of post-communist Central European countries, specifically Hungary and Poland, where populism is defined by right-wing nationalism and illiberalism. Both have become synonymous with democratic backsliding, driven by authoritarian-leaning strongman leaders (Bernhard, 2021). The legacy of communist rule and state socialism has rendered left-wing governance largely unpopular in the region, entrenching populism as a predominantly right-wing phenomenon. Burgaric (2019) argues that populists in Hungary and Poland have institutionalized a new form of semi-authoritarianism through sustained attacks on the rule of law, civil liberties, media, and electoral rules. Kende and Krek√≥ (2020) attribute the success of right-wing populism in the region to a fragile national identity rooted in experiences of weak sovereignty and socially accepted hostility toward ethnic minorities. They also suggest that populist citizens in these countries exhibit core conservative attitudes, driven by a desire for strong authority reminiscent of the socialist era.
This cross-national variation in the type of right-wing populism offers a crucial analytical advantage: it allows us to examine how support for populist strongmen is shaped by different populist attitudes across countries. While all selected leaders fit the mold of right-wing populist strong(wo)men, they vary significantly in terms of incumbency status, the radicalism of their rhetoric, and the extent to which political institutions constrain executive authority. For example, Pierre Poilievre in Canada and Marine Le Pen in France are opposition figures who channel widespread anti-elite sentiment but operate within institutional environments characterized by strong checks and balances on executive authority, and have not yet held office as Prime Minister or President. In contrast, leaders like Viktor Orb√°n in Hungary and Jair Bolsonaro in Brazil have governed with a high degree of institutional control, using their positions to weaken checks and balances, undermine the judiciary, and centralize authority. Giorgia Meloni, while now Prime Minister of Italy, has moderated aspects of her rhetoric since taking office, especially on the European Union, suggesting a strategic adaptation to institutional constraints and coalition governance. Meanwhile, Javier Milei in Argentina, though newly elected, has built his public persona around dramatic anti-establishment gestures and a promise to dismantle state institutions, raising questions about how institutional limits will shape his presidency. These contrasts allow us to examine whether authoritarian or anti-establishment populist attitudes are more salient in contexts where populist leaders are challengers versus incumbents, or where institutions are more or less vulnerable to executive control.
This variation enables us to ask whether the same type of populist attitudes, anti-establishment or authoritarian, drives support across these different contexts, or whether the appeal of strongman leadership depends on specific national conditions. Are authoritarian populist attitudes more salient in contexts where leaders already wield executive power and face few institutional checks? Do anti-establishment populist attitudes dominate where populist leaders remain in opposition and position themselves as challengers to a corrupt elite? By holding constant the ideological orientation and the personalized leadership style of the figures under study, we isolate variation that is especially relevant to our theoretical question. We exclude left-wing populists not only for conceptual coherence but also because they typically promote pluralism, inclusion, and participatory governance, and rarely cultivate the authoritarian leadership persona that is central to our analysis.
Populist attitudes comprise a ‚Äúset of political ideas‚Äù (Hawkins et al., 2012, p. 5) about the structure of power in society (Albertazzi and McDonnell, 2008). The majority of studies measuring populist attitudes differentiate between three distinct dimensions: anti-elitism, people-centeredness, and a Manichaean distinction between good and evil (see Castanho Silva et al., 2020). Scholars agree that the core element of populism is ‚Äúthe people‚Äù (Mudde, 2004; Brubaker, 2017) and their demands for greater (democratic) representation. Accordingly, for populists, politics should be an expression of the volont√© g√©n√©rale (general will) of the people (Mudde, 2007). The calls for greater sovereignty of the people is not unique to populism, but also constitutes a core feature of liberal democracy. What moves these demands for greater sovereignty into the populist realm is when they are coupled with antagonism toward the established elites, who are frequently portrayed as corrupt and unresponsive to popular will. Taken together, anti-elitism and people-centeredness form the crux of anti-establishment populism (Schumacher et al., 2022). To account for these two dimensions, our measurement model includes two questions asking the extent to which respondents agree that (1) Politics is dominated by selfish politicians who protect the interests of the rich and powerful in society (anti-elitism) and (2) Citizens should have the final say on the most important political issues by voting on them directly in referendums (people-centrism).
The third dimension of populist attitudes‚Äîthe Manichaean distinction‚Äîis open to contestation. In constructing a populist attitude scale, numerous studies contain a survey question that asks respondents to assess whether politics is ultimately a struggle between good and evil (Hawkins et al., 2012; Akkerman et al., 2014; Oliver and Rahn, 2016; Castanho Silva et al., 2018; Armaly and Enders, 2024). Akkerman et al. (2014, p. 1327) argue that populists have a very specific understanding of the people as not only sovereign but also as homogenous, pure, and virtuous. The elites, by contrast threaten the purity and unity of the sovereign people, hence the juxtaposition of the ‚Äúpure‚Äù and ‚Äúgood‚Äù people with the ‚Äúcorrupt‚Äù and ‚Äúevil‚Äù elites (Mudde and Rovira Kaltwasser, 2014). Yet, in the work of Hawkins et al. (2012) and Akkerman et al. (2014), the two studies where the Manichaean distinction enters the populist attitudes lexicon, Manichaeanism loads poorly on the populist attitudes scale. For these reasons, we omit the Manichaean distinction from our operationalization of anti-establishment populism.
Regarding authoritarian populist attitudes, we conceptualize authoritarian populism‚Äîdrawing on Z√ºrn (2022) and Wajner et al. (2024)‚Äîas comprising three fundamental elements: majoritarianism, decisionism, and nationalism. We employ four survey items to capture these various dimensions of authoritarianism populism. First, to tap into majoritarianism, we use the question about the respondent‚Äôs agreement with the statement that‚Äî‚ÄúThe will of the majority should always prevail, even over the rights of minorities.‚Äù This survey item captures the populists‚Äô opposition to institutional structures intrinsic to pluralism (Schulz et al., 2018), and reflects the notion that executing the ‚Äúwill of the people,‚Äù who by default form the majority, is the most important political objective (Taggart, 2000). Populist movements argue that the ‚Äúsilent majority,‚Äù long ignored by the political establishment, is the only legitimate decision-maker. This silent majority is a homogenous group that shares the same values and interests, and forms a coherent entity ready to withstand external threats (Albertazzi and McDonnell, 2008). We view majoritarianism as conceptually distinct from people-centrism. The beliefs that the people should have the final say in political decisions or that politicians should follow the will of the people‚Äîthe linchpins of people-centrism‚Äîare more democratic in nature, and therefore more aligned with anti-establishment populism. Majoritarianism, on the other hand, reflects a more authoritarian impulse to impose the will of the majority on all dissenting voices that pose a threat to the homogenous nature of the populist‚Äôs group.
To operationalize decisionism, we use two survey items. The first examines the respondent‚Äôs support for strong and decisive leadership. Authoritarian populism supports transgressive strongman leaders and perceives legal rules and constitutional norms as obstacles to the swift exercise of authority that is demanded by the will of the people (Norris and Inglehart, 2019). For the populist leader to execute the will of the people, the formal structures of liberal democracy must be cast aside, lest traditional elites interfere and dilute the general will of the people (Bugaric, 2019; Erhardt and Filsinger, 2024). Accordingly, populism‚Äîand authoritarian populism particularly‚Äî‚Äúexhibits an elective affinity with plebiscitary politics and the personalization of power‚Äù which are perceived as the ‚Äúbest means for the direct and unmediated representation of the people‚Äù (Akkerman et al., 2014). Given our central argument that a defining characteristic of authoritarian populism is the strongman‚Äôs claim to embody the will of the majority against perceived outsiders, we include the following survey item: ‚ÄúHaving a strong leader in government is good for the country, even if they have to make questionable decisions to achieve their goals.‚Äù This question serves to capture support for decisionist leadership‚Äîa core component of authoritarian populism.
Our second ‚Äúdecisionism‚Äù item pertains to elitism. The relationship between elitism and populism is, by some degrees, contradictory. On the one hand, the raison d‚Äô√™tre of populism is to criticize and oppose elites. Conversely, elitism is rooted in the belief that the common people are incapable of making important political decisions and that the country would be better served if technocrats or experts were allowed to craft policy. On the other hand, Akkerman et al. (2014) point out that both populism and elitism share a disdain for politics as usual. Both populist and technocratic attitudes represent a rejection of the current workings of representative democracy as nonresponsive and irresponsible (Bertsou and Caramani, 2022). Furthermore, even though populists ostensibly call for more democracy, populist movements are often led by charismatic leaders and organized in highly centralized and personalized parties, suggesting that they, themselves, are elitist institutions at the upper echelons of power. Bertsou and Caramani (2022) corroborate this confounding relationship between populism and elitism, demonstrating that a large chunk of citizens who score high on populism invariably showcase strong preferences for technocratic expertise (see also Spruyt et al., 2023). This being the case, we anticipate a countervailing relationship between elitism and our two varieties of populist attitudes. We predict that anti-establishment populism, with its emphasis on enhanced democratic representation and reverence for the people, will be negatively correlated with elitism. Conversely, authoritarian populism should exhibit a strong, positive correlation with elitism, rooted in their mutual emphasis on expedient decision-making. Furthermore, much like elitists, authoritarian populists are skeptical that the citizenry, writ large, should have a say in important decisions, given that the citizenry also includes ‚Äúoutgroups‚Äù that are perceived as threatening to the populists‚Äô agenda. Unlike anti-establishment populists, who are committed to upholding democratic norms, authoritarian populists are more willing to surrender decision-making to an authoritarian-style strongman and their cadre of elites. We measure this type of ‚Äútechnocratic elitism‚Äù (Spruyt et al., 2023) with a question about the sentiment that ‚ÄúPoliticians possess the necessary technical knowledge to solve the country‚Äôs problems.‚Äù
Finally, we measure nationalism with a survey item that asks respondents the degree to which they self-identify as a nationalist. Rather than using a neutral question that queries about the respondent‚Äôs pride in her country or her attachment to her nation, we employ more aggressive langue, and define nationalism as identification with one‚Äôs nation and support for its interests, especially at the expense of other nations. We adopt this approach aiming to capture a more exclusionary form of nationalism, one aligned with the anti-globalist sentiments identified by Z√ºrn (2022, p. 788), who notes that, ‚ÄúAuthoritarian populists are also ‚Äòanti-internationalists,‚Äô since they unconditionally support national sovereignty and reject any political authority beyond the nation-state.‚Äù
Table 1 summarizes our survey measure of populist attitudes and designates each one as related to either anti-establishment or authoritarian populism. All but the nationalism survey items are on a 5-point Likert scale, with higher values indicating stronger agreement with the statement. The nationalism question uses an 11-point scale ranging from 0 (‚Äúnot nationalist at all‚Äù) to 10 (‚Äúvery nationalist‚Äù).
  
  
     
  

Table 1. Items measuring populist attitudes.
  
To test the merits of our conceptual framework, we begin with a principal component factor analysis (PCFA) of the six survey items listed in Table 1.1 We conduct separate analyses for each of the nine countries to examine how well our framework holds in different contexts. We employ varimax rotation to extract the components. Since a varimax rotation yields orthogonal components, we used it on an assumption of poor correlation between the two populist motivations we seek to identify. The PCFA produces two factors across our cases with an Eigenvalue larger than 1.
The results of the factor analysis, as presented in Table 2, confirm that there are, indeed, two types of populist attitudes. Despite the geographic, historical, and political differences reflected in our nine cases, we clearly see that anti-elitism and people-centrism load almost exclusively on the first factor. We consider this factor the anti-establishment variety of populist attitudes that is predicated on the primacy of the will of the people and a defiance of the establishment. Apart from Argentina and Poland, the variables measuring majoritarianism, strongman leadership, elitism, and nationalism consistently hang together on the second factor, which we label the authoritarian dimension of populist attitudes. In Argentina and Poland, majoritarianism loads more heavily on the first factor than the second, although there is sufficient cross-loading on both factors for us to retain our original measurement scheme. Additionally, the nationalism variable loads rather weakly on either factor in Argentina and Poland.
  
  
     
  

Table 2. Factor analysis of survey items.
  
3.2 Dependent and independent variables
Our dependent variable captures the extent of political support for populist, radical-right leadership across the surveyed countries. This is measured through a survey item that asks respondents to indicate their level of agreement with the statement: ‚ÄúI prefer [NAME OF LEADER] to be the president/prime minister of [COUNTRY NAME].‚Äù Responses to this item are recorded on a five-point Likert scale, where higher values denote stronger support for the leader. The populist leaders, along with their party affiliations and the positions they held at the time of the survey, are detailed in Table 3.
  
  
     
  

Table 3. Populist leader by country.
  
This survey question offers several advantages over traditional vote intention measures, capturing nuanced support levels rather than reducing preferences to a binary choice. As Jacobs et al. (2018) note, many populist citizens vote strategically for non-populist parties. Our approach captures these attitudes while distinguishing support for individual leaders from party preference, which is especially relevant in parliamentary systems.
We assess two competing explanations for support for populist leadership: populist attitudes and ideological alignment with issues central to radical-right parties and their platforms. A persistent challenge in disentangling the influence of populist attitudes lies in their latent conflation with host ideologies and overlapping concepts such as nativism and protectionism (Hunger and Paxton, 2022). This conflation complicates efforts to determine whether populist attitudes independently drive support for populist leaders and parties or whether voters are primarily drawn by radical-right ideological commitments.
Thus, our main independent variables of interest are anti-establishment and authoritarian populist attitudes, operationalized through factor scores derived from our factor analysis presented in Table 2. Recognizing populism as a multidimensional phenomenon, Schulz et al. (2018, p. 318) caution that relying on unidimensional scales (e.g., Hawkins et al., 2012; Akkerman et al., 2014; Elchardus and Spruyt, 2016) obscures critical distinctions between varieties of populist attitudes. We consider factor scores to provide the most precise measure of respondents‚Äô affinity for specific types of populism. This approach allows the six populism-related items to load with varying degrees while maintaining the interpretability of the composite scores. The resulting factor scores for anti-establishment and authoritarian populist attitudes are standardized with a mean of zero and a standard deviation of one. Given that we employ orthogonal rotation (i.e., varimax rotation) to derive the factor scores, the anti-establishment and authoritarian populist attitudes variables are explicitly uncorrelated with one another across our nine cases, (Pearson‚Äôs r‚ÄØ=‚ÄØ0.00).
To capture the respondent‚Äôs ideological affinity to radical-right policies, we rely on three additional survey questions. The first assesses opposition to immigration‚Äîthe cornerstone of the radical right‚Äôs platform (Rydgren, 2007; Mudde, 2007)‚Äîby asking whether respondents believe immigrants increase crime rates. The second captures cultural backlash, as theorized by Norris and Inglehart (2019), who argue that the rise of radical-right parties is fueled by mass immigration and multiculturalism, which some perceive as threats to societal cohesion. Cultural backlash is measured through a survey item asking respondents whether they agree that ‚ÄúCultural diversity limits my opportunities in [country X].‚Äù The third question gages egocentric victimhood (Armaly and Enders, 2024), or what Mudde and Rovira Kaltwasser (2018) call ‚Äúsocial envy.‚Äù Studies show that radical right populist parties attract voters who score high on measures of relative depravation (Burgoon et al., 2019). These individuals may not face absolute economic hardship but perceive themselves as falling behind while others, particularly minorities, reap the benefits of government programs and job opportunities. Radical right parties exploit these grievances, appealing to those marginalized by globalization‚Äîthe so-called ‚Äúlosers of modernization‚Äù (Betz, 1994)‚Äîby highlighting the failure of mainstream parties to address economic inequality and often advocating for protectionism and economic nationalism. Social envy is measured through a survey item asking whether ‚ÄúOther [nationality] citizens have more opportunities for economic success than I do.‚Äù All three items are assessed using a five-point Likert scale, with higher values indicating greater levels of xenophobia, cultural backlash, and social envy.
Another key driver of public support for populist radical-right parties in Europe is euroscepticism (Hobolt, 2016; Burgoon et al., 2019; Brigevich, 2020), with opposition to European integration being a hallmark of the radical right‚Äôs political agenda (Fagerholm, 2018). Radical parties and their supporters oppose European integration on both economic and cultural grounds, viewing the EU‚Äôs open-border policy as a catalyst for immigration that erodes national culture and undermines employment opportunities for citizens. In the five EU member states surveyed‚ÄîFrance, Italy, Spain, Hungary, and Poland‚Äîwe assess hard Euroscepticism (Taggart and Szczerbiak, 2004) through a survey item measuring respondents‚Äô support for their country‚Äôs withdrawal from the EU, using a five-point scale. We anticipate that opposition to the EU and its policies extends beyond Europe, finding fertile ground in other regions. In North America, the EU is often depicted as a globalist, overly bureaucratic entity that undermines national sovereignty and imposes undemocratic progressive agendas. In Latin America, critics frame the EU as an imperial, hegemonic bloc and a vehicle for neoliberal capitalism. These anti-EU sentiments align with Z√ºrn‚Äôs (2022) argument that international organizations, due to their non-majoritarian nature, are increasingly viewed as instruments of liberal cosmopolitan elites and adversaries of the ‚Äúpure people.‚Äù Accordingly, we probe our North and South American respondents for their perspectives on the EU. In the US and Canada, respondents rated their preference for less versus more European Union on a five-point scale, while in Brazil and Argentina, they expressed their favorability toward the EU on a four-point scale, with higher values in both cases indicating greater opposition.
We further investigate the extent to which racial resentment and cultural grievances shape support for populist radical-right leaders. Armaly and Enders (2024) demonstrate that individuals with the most pronounced populist orientations perceive their salient in-groups‚Äîboth religious and racial‚Äîas experiencing relative marginalization. This aligns with the radical right‚Äôs declaration of a ‚ÄúWar against Woke,‚Äù a crusade against government policies aimed at addressing systemic discrimination against ethnic, racial, and sexual minorities (Dorey, 2024). Wokeism is characterized by a liberal emphasis on minority rights and marginalized groups, coupled with a commitment to critical theories aimed at dismantling the status quo and reinforcing the oppressor/oppressed binary (Valentin, 2023). Consequently, wokeism imposes a moral imperative on majority groups to acknowledge and atone for their positions of privilege. While the culture war against wokeism is particularly pronounced in the US, UK, and Canada (McCurdy et al., 2025), radical-right parties in Europe have also entered the discourse by embracing, rather than repudiating, their countries‚Äô colonial histories, while concurrently attributing national decline to immigration and multiculturalism (Griffini, 2023). We use a survey item asking respondents whether they agree that their country is racist (5-point scale) and expect supporters of populist radical-right leaders to reject this claim and its implicit ‚Äúwoke‚Äù premise of majority privilege.
Lastly, we include several typical voting behavior control variables. To capture general mistrust in mainstream institutions, we use a question on whether the media increasingly broadcasts fake news (5-point scale), a recurring theme in radical-right rhetoric (Knops and De Cleen, 2019). We further control for ideology (11-point, general left‚Äìright scale), income, education, age, and gender. We anticipate that supporters of the populist leaders analyzed will lean strongly to the right and that males will show higher levels of support, consistent with evidence of a gender gap in populist voting (Spierings and Zaslove, 2017).
3.3 Results
Following Erhardt and Filsinger (2024), who argue that populist attitudes are context-dependent‚Äîgiven the historical and ideological diversity of populism across nations‚Äîwe conduct separate regressions for each of the nine cases, presented in Table 4. A test of multicollinearity shows that the variance inflation factor (VIF) scores across all nine models are below 2, indicating negligible levels of multicollinearity. As such, our regression estimates are likely to be stable and interpretable. In all but one country‚Äîthe US‚Äîpopulist attitudes exert a significant impact on support for a populist strongman, independent of radical-right ideological preferences. The results provide clear evidence supporting our argument that there are two distinct types of populist attitudes that lead individuals to support for a populist strong(wo)man.
  
  
     
  

Table 4. Regression analysis.
  
In France and Canada, this support is primarily driven by anti-establishment populism, whereas authoritarian populism emerges as the dominant force in Italy, Spain, Brazil, Argentina, Hungary, and Poland. While Armaly and Enders (2024) rightly assert that there are no universal pathways to populism, our findings suggest that authoritarian populist attitudes, overall, are the primary drivers of support for populist radical-right leaders. Notably, the two varieties of populism exert mutually exclusive effects on strongman support. In none of our cases do anti-establishment and authoritarian populism simultaneously increase (or decrease) such support. Instead, these forms of populism occupy opposing ends of a continuum, underscoring that populist attitudes are structured along a democratic-authoritarian cleavage (Gagnon et al., 2018). This divide is most pronounced in Italy and Hungary, where a positive and statistically significant coefficient for the authoritarian populism variable is accompanied by a negative and significant coefficient for anti-establishment populism.
In France and Canada, support for Le Pen and Poilievre is driven by a pronounced demand for enhanced democratic representation in response to perceived political corruption. The anti-establishment populism variable exhibits a statistically significant and positive effect in both contexts, with democratic sentiment particularly robust in Canada, where the authoritarian populism variable is both significant and negative. This outcome is not entirely unexpected in the case of Le Pen, despite her frequent inclusion in media lists of populist strong(wo)men (Ellyatt, 2025; Kurlantzick, 2017). Le Pen and her party, the RN, have historically advocated for referendums and ballot initiatives, arguing that these instruments empower the people by allowing them to exercise direct, unmediated authority (Ivaldi et al., 2017). Simultaneously, Le Pen has made significant strides in normalizing her party and softening her image (Startin, 2022; Mayer, 2022), thereby avoiding the strongwoman persona that typically appeals to authoritarian populists.
Similarly, Poilievre‚Äôs appeal is anchored more firmly in anti-establishmentarianism than in cultivating the persona of a populist strongman (Beauchamp, 2024). A dominant figure within the Conservative Party, Poilievre swiftly ascended to its leadership by aligning himself with the Freedom Convoy protest against COVID-19 mandates. Since then, his distinct brand of Canadian prairie populism has been characterized by sharp critiques of Trudeau‚Äôs government for perceived overreach and of financial institutions for allegedly betraying the working class (The Canadian Press, 2023). Poilievre‚Äôs rhetoric resonates with voters disillusioned by traditional elites, offering a vision of restoring power to ordinary Canadians. Unlike archetypal strongman figures who rely on overt authoritarianism and centralized control, Poilievre channels his populist energy toward dismantling perceived institutional corruption and advocating for decentralized governance, further distancing himself from the authoritarian strain of populism.
In contrast, support for Meloni in Italy is firmly anchored in authoritarian populism and a rejection of anti-establishmentarianism‚Äîboth of which are unsurprising. Unlike Le Pen and Poilievre, Meloni holds the position of Prime Minister, and her party, Fratelli d‚ÄôItalia (FdI), is a dominant force within a coalition government alongside other populist right-wing parties. Consequently, the negative coefficient for anti-establishment populism is expected, as Meloni and her cohort of populist politicians have transitioned from insurgents to the establishment. Their consolidation of power has tempered the perception that politicians are inherently corrupt, reflecting a shift in public sentiment. This result aligns with Jungkunz et al.‚Äôs (2021) findings that populism operates as a ‚Äúthermostatic‚Äù attitude, expressing a demand for change that diminishes once that change is realized. While populist citizens may initially accuse elites of acting against the people‚Äôs interests, this grievance tends to subside once their populist leader ascends to power. Second, Meloni has carefully cultivated a strong(wo)man persona, presenting herself as a decisive leader (Melito and Zulianello, 2025) focused on safeguarding national security, particularly in response to the ongoing migrant crisis (Sondel-Cedarmas, 2022). Her leadership of Fratelli d‚ÄôItalia (FdI) reinforces the perception of a strong(wo)man at the helm of a law-and-order party, whose political agenda is anchored in the triad of ‚ÄúGod, homeland, and family‚Äù (Don√†, 2022). This emphasis on traditional values, combined with a focus on stricter laws and societal order, resonates with the authoritarian worldview, solidifying Meloni‚Äôs support as a manifestation of authoritarian populism.
Abascal, leader of Spain‚Äôs Vox, has meticulously crafted a strongman persona, positioning himself as the defender of traditional Spanish values and against perceived threats to national identity. His rhetoric emphasizes the need to restore order, protect national sovereignty, and combat what he portrays as the destabilizing forces of multiculturalism and progressive ideology. Under Abascal‚Äôs leadership, Vox has pledged to ‚Äúmake Spain great again‚Äù (Turnbull-Dugarte, 2019), echoing the populist rhetoric of Donald Trump. He relentlessly targets his political adversaries‚Äîparticularly the Spanish left and separatist movements‚Äîoften branding them as criminals and terrorists intent on dismantling the Spanish state (Cervi et al., 2023). Empirical evidence suggests that populist attitudes play a significant role in driving support for Vox (Marcos-Marne, 2021; Ramos-Gonz√°lez et al., 2024), further cementing Abascal‚Äôs position as a strongman figure in Spanish politics. His tough stance on immigration, his calls for harsher penalties for criminals, and his opposition to regional autonomy, particularly Catalan separatism, further reinforce his image as a decisive and uncompromising leader. By invoking themes of patriotism, security, and cultural preservation, Abascal channels authoritarian populism, in line with our expectations.
Bolsonaro and Milei have firmly established themselves in the media as populist strongmen, though their distinct brands of right-wing populism diverge considerably. Bolsonaro is often depicted as a quintessential authoritarian populist, bearing striking similarities to Donald Trump and Viktor Orb√°n (Farias et al., 2022). Indeed, numerous parallels have been drawn between the erosion of democratic norms during Bolsonaro‚Äôs presidency in Brazil and Trump‚Äôs tenure in the United States. Both leaders have waged relentless attacks on the political establishment, vilified their opponents, undermined trust in electoral processes, and incited political violence among their supporters (Pion-Berlin et al., 2023; Molas, 2023). Bolsonaro epitomizes the archetype of a right-wing authoritarian, as evidenced by his relentless advocacy for draconian law-and-order policies, his inflammatory denigration of racial and sexual minorities, and his zealous promotion of religious nationalism‚Äîbest encapsulated by his campaign slogan, ‚ÄúBrazil above everything, God above everyone‚Äù (do Nascimento Cunha, 2023). Our findings indicate that Bolsonaro supporters are clearly authoritarian populists and not anti-establishment ones.
Argentina‚Äôs Milei offers a compelling case study in the evolving nature of right-wing populism, which adapts to the unique socio-political contexts of individual countries. Milei deliberately cultivates a public persona as El Loco (the Madman), wielding a chainsaw as a theatrical symbol of his radical economic agenda aimed at slashing government spending, dismantling bureaucracy, and eliminating the entrenched ‚Äúpolitical caste‚Äù (Rojas, 2024). Milei‚Äôs specific brand of populism defies easy classification, as he refrains from criticizing immigration, adopts a libertarian stance on social issues, and advocates for globalist, pro-market policies. Consequently, scholars have characterized his ideological position, paradoxically, as either ‚Äúlibertarian populism‚Äù (Heinisch et al., 2024) or ‚Äúmanagerial populism‚Äù (Del Pino Diaz, 2024). It is somewhat surprising, then, that anti-establishment populism proves to be a weak predictor of support for Milei, whereas authoritarian populism‚Äîwith its strong emphasis on exclusionary nationalism‚Äîexerts a significant influence. Milei‚Äôs flamboyant public persona has enabled him to convincingly craft the image of a strongman uniquely capable of dismantling the deeply entrenched corruption in Argentina, which he attributes to the failures of both leftist governance and previous neoliberal policies.
In Central Europe, support for both Orb√°n and Duda is predominantly driven by authoritarian populist attitudes. Orb√°n has gained (in)fame for promoting his vision of illiberal democracy, which repudiates Western liberalism and multiculturalism in favor of nationalism and conservative Christian values. He has distinguished himself through his sustained assaults on perceived ‚Äúelites‚Äù outside his government‚Äîjournalists, academics, and the media‚Äîwhom he accuses of orchestrating conspiracies against him. Moreover, his populist rhetoric has increasingly targeted Brussels, depicting the EU as a bureaucratic empire determined to subvert national sovereignty and erode traditional cultural values (Csehi and Zgut, 2020). Central to Orb√°n‚Äôs narrative is the idea that Hungary must defend itself from external forces seeking to impose progressive ideologies that threaten the nation‚Äôs Christian heritage and societal cohesion. His government has implemented sweeping reforms to consolidate power, weaken judicial independence, and curtail press freedoms, all under the guise of protecting Hungary from foreign interference.
Compared to Orb√°n, Duda has attracted less academic and media scrutiny, as the populist spotlight in Poland has largely centered on Jaros≈Çaw Kaczy≈Ñski, the long-standing leader and co-founder of PiS. Nevertheless, Duda has firmly established himself as a populist strongman in his own right, skillfully navigating the political landscape to consolidate his authority while aligning closely with Kaczy≈Ñski‚Äôs nationalist and conservative agenda. Since ascending to the presidency in 2015, Duda has played a central role in advancing judicial reforms that have provoked intense criticism from the European Union for eroding the foundations of Polish democracy (Korinteli, 2022). He further inflamed these tensions during his 2020 presidential campaign by resorting to strident anti-LGBTQ rhetoric, portraying sexual minorities as proponents of a ‚Äúdestructive‚Äù ideology (Jungkunz et al., 2021) and tacitly endorsing the creation of ‚ÄúLGBT-free zones‚Äù across various municipalities. His populist appeal is firmly anchored in PiS‚Äôs core electorate‚Äîa constituency that is deeply conservative, predominantly rural, and economically marginalized‚Äîmaking them especially susceptible to the authoritarian strain of populism.
Only in the United States do neither type of populist attitudes predict support for a populist leader‚Äîan outcome that is perhaps our most unexpected, given that Trump epitomizes the archetype of a populist strongman. However, Trump‚Äôs support in the 2016 election has been attributed to a complex interplay of factors, including racial resentment (Tolbert et al., 2018), economic grievances (Ferguson et al., 2020), and anti-immigration sentiment (Donovan and Redlawsk, 2018). These findings align with Inglehart and Norris‚Äôs (2017) cultural backlash thesis, which suggests that support for Trump reflects a defensive reaction against rapid social change and perceived erosion of traditional values. In such contexts, strongman appeals resonate not because of populist attitudes, but because they promise to restore a familiar moral and cultural order. Recent findings by Dai and Kustov (2024) similarly demonstrate that during the 2016 American elections, Trump‚Äôs populist rhetoric did not resonate as strongly with voters exhibiting populist attitudes. Instead, his electoral appeal was more closely tied to his perceived moderation on economic issues and his hardline stance on immigration.
Beyond differentiating between anti-establishment and authoritarian populist attitudes, we are particularly interested in examining Jungkunz et al.‚Äôs (2021) claim that the anti-elitism dimension of populist attitudes most accurately predicts support for populist leaders and parties when they remain in opposition. This analysis presents a valuable opportunity to explore whether anti-elitism continues to exert significant influence once populist actors move from the periphery to positions of power. Once populist leaders ascend to positions of power, they cease to be perceived as political outsiders. Consequently, their supporters become ‚Äúunlikely to agree with statements about the corruption of political leaders; having installed their preferred leaders, they no longer consider political leaders to be the major problem of the country or to be conspiring against the good and honest people‚Äù (Jungkunz et al., 2021, p. 13). This shift reflects a broader tendency wherein populist supporters, having succeeded in elevating their chosen leaders, experience a decline in anti-elitist sentiment as their leaders become synonymous with the establishment they once denounced. In such cases, populist attitude scales fail to accurately capture populist sentiments and, consequently, lose their predictive power in forecasting populist vote choice. Our findings partially validate this argument. Populist leaders who held executive office at the time our surveys were conducted‚ÄîMeloni, Orb√°n, Duda, and Milei‚Äîdid not attract anti-establishment populists and, in fact, actively repelled them in the cases of Meloni and Orb√°n. This suggests that once populist leaders transition from insurgent challengers to incumbents, they lose their appeal to anti-establishment voters who perceive them as part of the very establishment they once opposed. Conversely, two of the three populist leaders who were in opposition and had never held the office of prime minister‚ÄîLe Pen and Poilievre‚Äîderived their support primarily from anti-establishment populist sentiment.
Turning our attention to the variables capturing the core principles of radical right ideology, we find that anti-immigrant sentiment is a significant predictor of support for populist leadership in all cases except Poland. This anomaly is likely due to the timing of the Polish survey, which was conducted in the aftermath of Russia‚Äôs invasion of Ukraine‚Äîa period when Poland extended refuge to millions of Ukrainians. Given the historical affinity between Poles and Ukrainians, this humanitarian response may have temporarily muted anti-immigrant sentiment. Furthermore, this outcome is consistent with the findings of Olejnik and Wro≈Ñski (2025), who demonstrate that anti-immigrant sentiment does not significantly predict voting for populist parties in the Polish context. Empirical support for Norris and Inglehart‚Äôs (2019) cultural backlash thesis emerges only in France, Spain, and Poland. This is expected in France, where Le Pen routinely leverages Islamophobic rhetoric to mobilize her supporters. However, it is puzzling that the cultural backlash variables do not reach statistical significance in cases such as the United States and Canada, where growing skepticism about the benefits of multiculturalism has recently gained prominence. Paradoxically, despite Orb√°n‚Äôs relentless campaign against cultural diversity and progressive values in Hungary, respondents who score high on cultural backlash are less likely to support him. Conversely, in Poland, where PiS and Duda have pursued a similarly aggressive, and at times even more draconian, campaign‚Äîparticularly concerning LGBTQ rights‚Äîhigh levels of cultural backlash strongly predict support for Duda. Social envy emerges as the weakest predictor of support for populist leadership across our nine countries, achieving statistical significance only in the United States and Canada‚Äîand, surprisingly, with a negative effect. One plausible explanation is that social envy, as an expression of economic grievance, may be more effectively addressed through support for left-wing populist parties and candidates, whose platforms are traditionally more attuned to addressing socioeconomic inequality.
One of the most robust findings across our nine countries is that Euroscepticism serves as a significant predictor of support for populist leadership, even in non-EU countries. The only exceptions are Italy and Argentina, where the Euroscepticism variable fails to achieve statistical significance. In Italy, this is likely due to Meloni‚Äôs recent moderation of her anti-EU rhetoric, adopting a more pragmatic and cooperative stance following Russia‚Äôs invasion of Ukraine and recognizing Italy‚Äôs reliance on substantial EU funding through its post-COVID national recovery and resilience plan. Milei, of course, is a self-proclaimed anarcho-capitalist, making it unsurprising that his supporters would favor the globalist, neoliberal orientation of the EU. In contrast, our proxy for wokeism‚Äîthe ‚Äúour country is racist‚Äù variable‚Äîyields more nuanced results. It demonstrates the strongest predictive power in Western Europe and Poland, where respondents who agree that their country is racist are significantly less likely to support populist radical-right leaders. This outcome is expected, particularly in countries like Poland, where radical-right parties have promoted revisionist historical narratives, leading their supporters to reject such statements. However, we anticipated a stronger negative correlation between racial guilt and support for Trump and Poilievre, given the heightened polarization surrounding wokeism and cancel culture in North America.
Lastly, we examine our control variables. Mistrust of the media emerges as a significant and positive predictor of support for populist leadership in the United States, Canada, Brazil, and Poland. This is unsurprising, as both Trump, Poilievre and Bolsonaro have relentlessly attacked the media, while PiS has similarly cultivated distrust, particularly toward foreign-owned news outlets. Across all nine countries, supporters of populist radical-right leaders consistently identify as ideologically right-wing. However, no clear patterns emerge concerning the effects of income, education, or age. Notably, the gender gap in support for populist leadership appears to have closed, as the male dummy variable fails to achieve statistical significance in any of the nine cases.
In sum, our findings reveal that authoritarian populism is a more significant and consistent explanatory factor in predicting support for populist radical-right leaders across our cases than anti-establishment populism. The influence of authoritarian populist attitudes remains robust even after accounting for radical-right ideological predispositions, underscoring the salience of authoritarian populism as a core driver of populist strong(wo)man support. Beyond populist attitudes, anti-immigrant sentiment and Euroscepticism emerge as the most reliable predictors of populist radical-right support, demonstrating their importance in shaping voter preferences. Moreover, the relative weakness of anti-establishment populism in driving support for populist leaders in power highlights a crucial dynamic: once populist actors become part of the political establishment, appeal to anti-elitist sentiments diminishes. 4 Discussion and conclusion
In this analysis, we aimed to explore the relationship between individual-level populist attitudes and electoral support for populist leaders characterized by strongman tactics. Rather than being a panacea or a corrective to the deficiencies of undemocratic liberalism, populist governance all too frequently precipitates the corrosion of democratic systems (Ruth-Lovell and Grahn, 2023). Weyland (2021) argues that populist leaders engage in a ‚Äúfiction of representation via identity,‚Äù claiming to embody the people directly rather than representing them through democratic institutions, thereby blurring the distinction between leader and masses. This confers them a great deal of latitude, ‚Äúwhich in their opportunistic power hunger they commonly use to DIS-empower the people by suffocating democracy, populism‚Äôs inherent danger‚Äù (Weyland, 2021, p. 186). This rendition of populism raises questions about the underlying motivations of the average populist citizen. Are they simply pawns in the leader‚Äôs power grab, seduced by the assurance of direct representation that never comes to fruition? Or are they active participants in a mutually reinforcing relationship with the strongman leader, enamored by his promise to defend their group‚Äôs interests at all costs, even if that cost is democracy?
We contend that the current conceptualization of populist attitudes does not allow us to sufficiently capture the range of motivations that draw populist citizens to populist strongmen. The dominant ideational approach to measuring populist attitudes is focused on operationalizing the three definitional components of populism derived by Mudde (2004): anti-elitism, people-centrism, and the Manichaean distinction between good and evil. Putting aside the Manichaeanism component, which has been frequently found to load on a separate dimension in various factor analyses of populist attitudes (Akkerman et al., 2014; Hawkins et al., 2012), we argue that anti-elitism and people centrism are best-suited to measure only one specific type of populist attitude‚Äîanti-establishment populism. This type of populist attitude does not reject liberal democratic processes but pushes for direct democracy as a means to return the voice back to the people in the face of unresponsive elites. For anti-establishment populists, a vote for a populist strongman is not intended as a carte blanche to exclude minority voices from the political process (i.e., anti-pluralism) or to pursue their group‚Äôs agenda at all costs. Rather, it is a protest-vote that aims to shake up the political status quo.
The contribution of this article is to advance a conceptualization of populist attitudes that moves beyond the definitional elements of the ideational approach and to demonstrate that populist attitudes come in two varieties. In stark contrast to anti-establishment populism stands the authoritarian variety, which does aim to subvert the liberal democratic order. Authoritarian populism, although not a new concept, has suffered from a lack of precise conceptual definitions.
Although numerous studies recognize populism‚Äôs potential to devolve into authoritarian forms, few clearly delineate what distinguishes authoritarian populism from its less pernicious variants. Fortunately, recent scholarship by Z√ºrn (2022) and Wajner et al. (2024) provides a compelling framework, defining authoritarian populism as rooted in majoritarianism, nationalism, and the call to delegate substantial authority to the populist leader. Building upon this definition, we can attain a more comprehensive understanding of the motivations driving authoritarian populist voters. Authoritarian populists are not concerned with preserving the liberal democratic process, but turn to populist leaders precisely because they advocate an exclusionary form of majoritarianism that privileges their in-group in the face of non-conforming out-groups.
A further contribution of this work is to demonstrate that our conceptual framework stands up to scrutiny across a wide array of country cases across North America, South America, Western Europe, and Central Europe. Employing novel data gathered across nine countries, we conducted a factor analysis that clearly illustrates the presence of both the anti-establishment and the authoritarian dimensions of populist attitudes in each of our cases. The pattern is nearly identical in each country: anti-elitism and people-centrism hang together on the first dimension, while majoritarianism, preference for strongman rule, elitism, and exclusive nationalism hang on the second. Next, we carried out an OLS regression analysis of support for a populist radical-right leader in each of our countries, employing the derived factor scores for anti-establishment and authoritarian populism as our key independent variables. We find that in a majority of our cases (Italy, Spain, Brazil, Argentina, Hungary, and Poland), authoritarian populism is a significant predictor of political support for a populist leader, while anti-establishment populism is not. These findings echo Donovan‚Äôs (2021) results, which show that illiberal, politically authoritarian attitudes are a defining feature of RRP supporters. In certain cases (notably Italy and Hungary), anti-establishment populists are diametrically opposed to strongman leadership, particularly when such leadership originates from the right-wing fringes of the political spectrum. This further solidifies our claim that populist attitudes come in two varieties, and points to the fact that populism, itself, is demarcated by a cleavage that pits democratic governance against authoritarianism (Gagnon et al., 2018). Our findings align with the research of Wegscheider et al. (2023), who demonstrate that populist parties‚Äô critical stance toward liberal democracy is mirrored in corresponding attitudes among the citizenry.
Nonetheless, it is not a foregone conclusion that radical-right populists solely attract individuals with authoritarian populist attitudes. As evidenced by our results in France and Canada, support for populist leaders like Marine Le Pen and Pierre Poilievre is conditioned more by anti-establishment than authoritarian populist attitudes, in large part because both leaders are outsiders to executive power. Their outsider status‚ÄîLe Pen as a perennial challenger who has never held national executive office, and Poilievre as leader of the opposition‚Äîallows them to credibly channel public frustration with perceived elite corruption and institutional unresponsiveness. Rather than presenting themselves as centralizing figures intent on bypassing democratic norms, both leaders cultivate an image of democratic revivalists: Le Pen through her longstanding advocacy for referendums and direct democracy (Trippenbach and Johann√®s, 2022), and Poilievre through his calls to ‚Äúgive Canadians back control‚Äù from bureaucrats and entrenched elites in Ottawa (Wherry, 2022).
In the Canadian context, several structural and cultural factors limit the appeal of authoritarian populism. Multiculturalism is a foundational element of national identity, with a significant majority of Canadians embracing ethnic and cultural diversity as a core value (Brosseau and Dewing, 2009). Overtly anti-immigrant rhetoric remains largely unpopular in Canada. Political figures who adopt such stances often face backlash, as these views are perceived to conflict with Canadian values of tolerance and inclusivity. Poilievre‚Äôs support base is rooted in disaffected middle-class voters, Western alienation, and anti-government sentiment who are motivated less by a desire for strongman leadership than by demands for transparency, individual liberty, and decentralization. His rhetoric, emphasizing personal freedoms, fiscal restraint, and institutional accountability, contrasts sharply with the authoritarian rhetoric seen in Hungary, Spain, Argentina or Brazil. Importantly, the relatively small segment of Canadians who do exhibit strong authoritarian populist attitudes tend to find a more ideologically consistent home in the People‚Äôs Party of Canada (PPC), which espouses a nativist, xenophobic, anti-globalist, and conspiratorial platform (Preston, 2021). Poilievre‚Äôs refusal to align with the PPC or adopt its exclusionary anti-immigrant language reinforces his position as a strong anti-establishment candidate.
In France, Le Pen‚Äôs populist base also remains rooted in democratic discontent more than authoritarian yearning. While often portrayed as a strongwoman figure, Le Pen has deliberately softened her image in recent years, focusing on institutional reform and democratic responsiveness through mechanisms like referendums. Her outsider status allows her to maintain the anti-elitist posture central to anti-establishment populism, particularly against technocratic figures like Macron. Additionally, the presence of √âric Zemmour, a more explicitly authoritarian nationalist, offers a clear alternative for voters driven by exclusionary and illiberal preferences (Alduy, 2022). In both cases, populist support is shaped less by a desire for authoritarian leadership than by a democratic impulse to reclaim control from unaccountable elites. These leaders‚Äô outsider status, political strategy, institutional context, and the availability of more authoritarian alternatives together help explain why anti-establishment and not authoritarian-populism is the dominant attitudinal driver in Canada and France.
Our most unexpected result, namely the absence of a significant relationship between either form of populism and support for Donald Trump, warrants further reflection. This finding reveals that a leader‚Äôs populist rhetoric does not always correspond to populist attitudes among the electorate. Several factors help account for this discrepancy. First, Trump‚Äôs support base is heavily shaped by entrenched partisan identities. The extreme polarization of U. S. politics often overrides coherent ideological positioning, meaning that voters may support Trump primarily because he is the Republican candidate, not because of alignment with any specific populist worldview. Second, Trump‚Äôs messaging has relied more on cultural grievance, racial resentment, and symbolic appeals to status loss among white, rural, and evangelical voters. These group-based identity concerns are better captured by our racial resentment, anti-immigration sentiment, and perceived cultural resentment variables than by anti-elitism or majoritarianism. This aligns with broader findings showing that high levels of populist attitudes do not necessarily translate into support for populist leaders or parties (Akkerman et al., 2014) and, conversely, that individuals may back populist leaders even in the absence of strong populist attitudes (Jungkunz et al., 2021). This finding is consistent with Inglehart and Norris‚Äôs (2017) argument that support for Trump reflects a ‚Äúsilent revolution in reverse,‚Äù a cultural backlash against progressive norms and liberal elites. Future research should explore whether populist rhetoric in the U. S. serves primarily as a symbolic frame for affective polarization, rather than reflecting deeply held populist attitudes. Additionally, scholars should examine how Trump‚Äôs unique leadership style, combining celebrity status, anti-intellectualism, and an unconventional communication style may attract support even among voters who do not score highly on populism.
We encourage future scholars to replicate our measurement framework, thereby assessing its robustness across alternative data sources and additional countries. One of the advantages of Z√ºrn‚Äôs (2022) definition of authoritarian populism is that it avoids the pitfall of equating populism with elements of radical-right ideology. This is evident in our analysis, as our populist attitudes variables exert a significant impact on support for populist leadership apart from the variables associated with radical-right ideological positioning, such as anti-immigrant attitudes, euroscepticism, and cultural backlash. A particularly promising avenue for future inquiry involves examining left-leaning populist leaders, whose appeal often centers on anti-elitist narratives but may differ in their relationship to authoritarian attitudes.
Moreover, Roberts (2006) highlights that populist mobilization is not always based on unmediated, vertical ties between leaders and supporters, but can involve varied organizational forms shaped by historical patterns of political conflict and class formation. While some populist movements rely on grassroots networks to articulate anti-establishment demands, others mobilize support through centralized, personalistic, or clientelist channels. This organizational variation resonates with our distinction between anti-establishment and authoritarian populism. Future research should explore whether anti-establishment populists are more likely to engage or even build participatory grassroots networks, while authoritarian populists tend to concentrate mobilization and power around the leader alone.
Our findings carry substantial implications, not only for scholarship on populist attitudes but also for the ongoing debate regarding populism‚Äôs corrective versus corrosive impact on democratic governance. The evidence that a substantial proportion of populist citizens actively endorses authoritarian variants of populism underscores deeper challenges confronting contemporary democracies. Many populist citizens exhibit profound dissatisfaction with democracy in its current form (Kitschelt, 2002). One interpretation of this phenomenon is that populist voters are ‚Äúdissatisfied democrats‚Äù (Rovira Kaltwasser and Van Hauwaert, 2020), driven by economic grievances, perceptions of victimization (Armaly and Enders, 2024), or resentment toward the cartelization of party politics (Z√ºrn, 2022). An alternative interpretation, which we advance in this analysis, is that populism enables the expression (and execution) of authoritarian impulses within a democratic system. If this interpretation holds, then merely addressing economic inequalities or enhancing political representation through mechanisms such as referendums will be insufficient to mitigate underlying authoritarian impulses. Governments will need to proactively reinforce existing democratic safeguards before populist actors assume power. Even more challenging will be identifying effective strategies to counteract the ideological allure of authoritarianism, which privileges expediency over deliberation and conformity over pluralism. Data availability statement
The raw data supporting the conclusions of this article will be made available by the authors, without undue reservation. Author contributions
AB: Writing ‚Äì review & editing, Investigation, Writing ‚Äì original draft, Methodology, Conceptualization. AW: Writing ‚Äì original draft, Data curation, Conceptualization, Writing ‚Äì review & editing. Funding
The author(s) declare that financial support was received for the research and/or publication of this article. This work received funding from Erasmus + (Jean Monnet Chair No. 2018-3245/036-001) and MacEwan University. Acknowledgments
The content of this manuscript has been presented in part at the European Union Studies Association conference in Philadelphia, PA, United States on May 8‚Äì10, 2025. Conflict of interest
The authors declare that the research was conducted in the absence of any commercial or financial relationships that could be construed as a potential conflict of interest. Generative AI statement
The author(s) declare that no Gen AI was used in the creation of this manuscript. Publisher‚Äôs note
All claims expressed in this article are solely those of the authors and do not necessarily represent those of their affiliated organizations, or those of the publisher, the editors and the reviewers. Any product that may be evaluated in this article, or claim that may be made by its manufacturer, is not guaranteed or endorsed by the publisher. Footnotes 1. ^Many prior studies of populist attitudes, including the seminal Akkerman et al. (2014) paper, use principal component analysis (PCA). However, van Hauwaert et al. (2020: 6) point out that PCA extracts linear composites of observed variables to reduce complex correlated data into smaller sets of independent composite variables. PCA models conceptualize constructs as causally determined by the items, rather than the other way around. Therefore, PCA is useful in data reduction, but not an appropriate technique for analyzing latent variables. Exploratory factor analysis (EFA), which includes PCFA as a subtype, is the more ideal modeling strategy if one assumes, as we do, that the observed variables are influenced by underlying latent factors. Given that our goal is to uncover the presence of latent constructs, such as varieties of populist attitudes, EFA is the sounder choice. References

Akkerman, A., Mudde, C., and Zaslove, A. (2014). How populist are the people? Comp. Pol. Stud. 47, 1324‚Äì1353. doi: 10.1177/0010414013512600
Crossref Full Text | Google Scholar

Albertazzi, D., and McDonnell, D. (2008). Twenty-first century populism: The spectre of Western European democracy. London: Palgrave Macmillan UK.
Google Scholar


Armaly, M. T., and Enders, A. M. (2024). The disparate correlates of populist support in the United States. Polit. Res. Q. 78, 120‚Äì134. doi: 10.1177/10659129241289135
Crossref Full Text | Google Scholar

Bartle, J., Sanders, D., and Twyman, J. (2019). ‚ÄúAuthoritarian populist opinion in Europe‚Äù in Authoritarian populism and liberal democracy (pp. 49‚Äì71). eds. I. Crewe and D. Sanders (Cham: Springer International Publishing), 49‚Äì71.
Google Scholar


Ben-Ghiat, R. (2020). Strongmen: Mussolini to the present. New‚ÄØYork,‚ÄØNY: WW Norton & Company.
Google Scholar


Bertsou, E., and Caramani, D. (2022). People haven't had enough of experts: technocratic attitudes among citizens in nine European democracies. Am. J. Polit. Sci. 66, 5‚Äì23. doi: 10.1111/ajps.12554
Crossref Full Text | Google Scholar

Betz, H. G. (1994). Radical right-wing populism in Western Europe. New‚ÄØYork, NY Springer.
Google Scholar

Brigevich, A. (2020). Cueing the radical voter: the impact of economic, immigration and integration cues on public fear of the EU. Party Polit. 26, 744‚Äì759. doi: 10.1177/1354068818808324
Crossref Full Text | Google Scholar



Bugaric, B. (2019). The two faces of populism: between authoritarian and democratic populism. Germ. Law J. 20, 390‚Äì400. doi: 10.1017/glj.2019.20
Crossref Full Text | Google Scholar

Burgoon, B., Van Noort, S., Rooduijn, M., and Underhill, G. (2019). Positional deprivation and support for radical right and radical left parties. Econ. Policy 34, 49‚Äì93. doi: 10.1093/epolic/eiy017
Crossref Full Text | Google Scholar

Canovan, M. (1999). Trust the people! Populism and the two faces of democracy. Polit. Stud. 47, 2‚Äì16. doi: 10.1111/1467-9248.00184
Crossref Full Text | Google Scholar

Castanho Silva, B., Andreadis, I., Anduiza, E., Blanu≈°a, N., Corti, Y. M., Delfino, G., et al. (2018). ‚ÄúPublic opinion surveys: a new scale‚Äù in The ideational approach to populism. eds. K. Hawkins, R. Carlin, L. Littvay, and C. R. Kaltwasser (New‚ÄØYork,‚ÄØNY: Routledge), 150‚Äì177.
Google Scholar

Castanho Silva, B., Fuks, M., and Tamaki, E. R. (2022). So thin it‚Äôs almost invisible: populist attitudes and voting behavior in Brazil. Electoral Stud. 75:102434. doi: 10.1016/j.electstud.2021.102434
Crossref Full Text | Google Scholar

Castanho Silva, B., Jungkunz, S., Helbling, M., and Littvay, L. (2020). An empirical comparison of seven populist attitudes scales. Polit. Res. Q. 73, 409‚Äì424. doi: 10.1177/1065912919833176
Crossref Full Text | Google Scholar

Cervi, L., Tejedor, S., and Villar, M. G. (2023). Twitting against the enemy: populist radical right parties discourse against the (political) ‚Äúother‚Äù. Polit. Gov. 11, 235‚Äì248. doi: 10.17645/pag.v11i2.6391
Crossref Full Text | Google Scholar

Converse, P. (1964). ‚ÄúThe nature of belief systems‚Äù in Ideology and discontent. ed. D. E. Apter (New York: The Free Press), 206‚Äì261.
Google Scholar

Csehi, R., and Zgut, E. (2020). ‚ÄòWe won‚Äôt let Brussels dictate us‚Äô: Eurosceptic populism in Hungary and Poland. Eur. Polit. Soc. 22, 53‚Äì68. doi: 10.1080/23745118.2020.1717064
Crossref Full Text | Google Scholar

Dai, Y., and Kustov, A. (2024). The (in) effectiveness of populist rhetoric: a conjoint experiment of campaign messaging. Polit. Sci. Res. Methods 12, 849‚Äì856. doi: 10.1017/psrm.2023.55
Crossref Full Text | Google Scholar

Del Pino Diaz, D. (2024). Javier Milei and managerial populism in Argentina: ‚Äúthe successful entrepreneur as a social benefactor.‚Äù. Revista de Comunicaci√≥n de la SEECI 57, 1‚Äì21. doi: 10.15198/seeci.2024.57.e882
Crossref Full Text | Google Scholar

do Nascimento Cunha, M. (2023). ‚ÄúBrazil above everything. God above everyone‚Äù: political-religious fundamentalist expressions in digital Media in Times of ultra-right populism in Brazil. Int. J. Commun. 17:23.
Google Scholar

Don√†, A. (2022). The rise of the radical right in Italy: the case of Fratelli d‚ÄôItalia. J. Mod. Ital. Stud. 27, 775‚Äì794. doi: 10.1080/1354571X.2022.2113216
Crossref Full Text | Google Scholar

Donovan, T. (2021). Right populist parties and support for strong leaders. Party Polit. 27, 858‚Äì869. doi: 10.1177/1354068820920853
Crossref Full Text | Google Scholar

Donovan, T., and Redlawsk, D. (2018). Donald Trump and right-wing populists in comparative perspective. J. Elect. Public Opin. Parties 28, 190‚Äì207. doi: 10.1080/17457289.2018.1441844
Crossref Full Text | Google Scholar

Dorey, P. (2024). ‚ÄúThe conservative right's ‚Äúwar against woke,‚Äù‚Äù in Towards a very British version of the ‚Äúculture wars‚Äù: Populism, social fractures and political communication. eds. A.-P. Bonnet and R. Kilty (London: Routledge), pp. 98‚Äì117.
Google Scholar

Ebel, R., and Taras, R. (2013). The Latin American tradition. In H. Wiarda and M. MacLeish Mott (Eds.), Politics and social change in Latin America: Still a distinct tradition? (4th ed). Westport, CT: Praeger. 55‚Äì68.
Google Scholar

Elchardus, M., and Spruyt, B. (2016). Populism, persistent republicanism and declinism: an empirical analysis of populism as a thin ideology. Gov. Oppos. 51, 111‚Äì133. doi: 10.1017/gov.2014.27
Crossref Full Text | Google Scholar


Erhardt, J., and Filsinger, M. (2024). A spectre of democracy: are populist citizens less supportive of democracy? West Eur. Polit., 1‚Äì30. doi: 10.1080/01402382.2024.2398892
Crossref Full Text | Google Scholar

Fagerholm, A. (2018). The radical right and the radical left in contemporary Europe: two min‚Äìmax definitions. J. Contemp. Eur. Stud. 26, 411‚Äì424. doi: 10.1080/14782804.2018.1515728
Crossref Full Text | Google Scholar

Farias, D. B. L., Casar√µes, G., and Magalh√£es, D. (2022). Radical right populism and the politics of cruelty: the case of COVID-19 in Brazil under president Bolsonaro. Glob. Stud. Q. 2:ksab048. doi: 10.1093/isagsq/ksab048
Crossref Full Text | Google Scholar

Ferguson, T., Page, B. I., Rothschild, J., Chang, A., and Chen, J. (2020). The roots of right-wing populism: Donald Trump in 2016. Int. J. Polit. Econ. 49, 102‚Äì123. doi: 10.1080/08911916.2020.1778861
Crossref Full Text | Google Scholar

Freyre, G. (2003). Casa-grande and senzala: Forma√ß√£o da fam√≠lia brasileira sob o regime da economia patriarcal (48th ed.). S√£o Paulo, Brazil: Global.
Google Scholar

Funke, M., Schularick, M., and Trebesch, C. (2023). Populist leaders and the economy. Am. Econ. Rev. 113, 3249‚Äì3288. doi: 10.1257/aer.20202045
Crossref Full Text | Google Scholar

Gagnon, J.-P., Beausoleil, E., Son, K.-M., Arguelles, C., Chalaye, P., and Johnston, C. N. (2018). What is populism? Who is the populist? Democr. Theory 5, vi‚Äìxxvi. doi: 10.3167/dt.2018.050201
Crossref Full Text | Google Scholar

Germani, G. (1978). Authoritarianism, fascism, and National Populism. New Brunswick, NJ: Transaction Books.
Google Scholar

Golder, M. (2016). Far right parties in Europe. Annu. Rev. Polit. Sci. 19, 477‚Äì497. doi: 10.1146/annurev-polisci-042814-012441
Crossref Full Text | Google Scholar

Griffini, M. (2023). ‚ÄòHow can you feel guilty for colonialism? It is a folly‚Äô: colonial memory in the Italian populist radical right. Eur. Polit. Soc. 24, 477‚Äì493. doi: 10.1080/23745118.2022.2058753
Crossref Full Text | Google Scholar

Hawkins, K., Riding, S., and Mudde, C. (2012). Measuring Populist Attitudes. The Committee on Concepts and Methods Working Paper Series, 55.
Google Scholar

Heinisch, R., Gracia, O., Laguna-Tapia, A., and Muriel, C. (2024). Libertarian populism? Making sense of Javier Milei‚Äôs political discourse. Soc. Sci. 13:599. doi: 10.3390/socsci13110599
Crossref Full Text | Google Scholar

Hobolt, S. B. (2016). The Brexit vote: a divided nation, a divided continent. J. Eur. Public Policy 23, 1259‚Äì1277. doi: 10.1080/13501763.2016.1225785
Crossref Full Text | Google Scholar

Hooghe, L., and Marks, G. (2009). A postfunctionalist theory of European integration: from permissive consensus to constraining dissensus. Br. J. Polit. Sci. 39, 1‚Äì23. doi: 10.1017/S0007123408000409
Crossref Full Text | Google Scholar

Hunger, S., and Paxton, F. (2022). What's in a buzzword? A systematic review of the state of populism research in political science. Polit. Sci. Res. Methods 10, 617‚Äì633. doi: 10.1017/psrm.2021.44
Crossref Full Text | Google Scholar

Inglehart, R., and Norris, P. (2017). Trump and the populist authoritarian parties: the silent revolution in reverse. Perspect. Polit. 15, 443‚Äì454. doi: 10.1017/S1537592717000111
Crossref Full Text | Google Scholar

Ivaldi, G., Lanzone, M. E., and Woods, D. (2017). Varieties of populism across a left-right spectrum: the case of the front national, the northern league, Podemos and five star movement. Swiss Polit. Sci. Rev. 23, 354‚Äì376. doi: 10.1111/spsr.12278
Crossref Full Text | Google Scholar

Jacobs, K., Akkerman, A., and Zaslove, A. (2018). The voice of populist people? Referendum preferences, practices and populist attitudes. Acta Polit. 53, 517‚Äì541. doi: 10.1057/s41269-018-0105-1
Crossref Full Text | Google Scholar

Jungkunz, S., Fahey, R. A., and Hino, A. (2021). How populist attitudes scales fail to capture support for populists in power. PLoS One 16:e0261658. doi: 10.1371/journal.pone.0261658 
PubMed Abstract | Crossref Full Text | Google Scholar

Kende, A., and Krek√≥, P. (2020). Xenophobia, prejudice, and right-wing populism in east-Central Europe. Curr. Opin. Behav. Sci. 34, 29‚Äì33. doi: 10.1016/j.cobeha.2019.11.011
Crossref Full Text | Google Scholar

Kitschelt, H. (2002). ‚ÄúPopular dissatisfaction with democracy: populism and party systems‚Äù in Democracies and the populist challenge. eds. Y. M√©ny and Y. Surel (London: Palgrave Macmillan).
Google Scholar


Knops, L., and De Cleen, B. (2019). The radical right versus the media: from media critique to claims of (mis) representation. Polit. Gov. 7, 165‚Äì178. doi: 10.17645/pag.v7i3.2131
Crossref Full Text | Google Scholar

Korinteli, D. (2022). ‚ÄúPopulism and internationalization in Poland and Hungary‚Äù in 30 years of the Visegrad group. Volume 1: Political, legal, and social issues and challenges. ed. E. Kancik-Koltun (Lublin, Poland: Marie Curie-Sklodowska University Press), 105‚Äì116.
Google Scholar

Kriesi, H., Grande, E., Lachat, R., Dolezal, M., Bornschier, S., and Frey, T. (2006). Globalization and the transformation of the national political space: six European countries compared. Eur J Polit Res 45, 921‚Äì956. doi: 10.1111/j.1475-6765.2006.00644.x
Crossref Full Text | Google Scholar


Laclau, E. (2005). On populist reason. London & New York: Verso.
Google Scholar

Lipset, S. M., and Rokkan, S. (1967). Cleavage structures, party systems, and voter alignments: An introduction, vol. 2. New York: Free Press.
Google Scholar

Marcos-Marne, H. (2021). A tale of populism? The determinants of voting for left-wing populist parties in Spain. Polit. Stud. 69, 1053‚Äì1071. doi: 10.1177/0032321720950215
Crossref Full Text | Google Scholar

Mayer, N. (2022). The impact of gender on votes for the populist radical rights: marine Le pen vs. Eric Zemmour. Mod. Contemp. France 30, 445‚Äì460. doi: 10.1080/09639489.2022.2134328
Crossref Full Text | Google Scholar

McCurdy, P., Clarke, K., and Cammaerts, B. (2025). From social awareness to authoritarian other: the conservative weaponization of woke in Canadian parliamentary discourse. J. Lang. Polit. doi: 10.1075/jlp.24126.mcc
Crossref Full Text | Google Scholar


Medina Echavarr√≠a, J. (1980). Consideraciones sociol√≥gicas sobre el desarrollo econ√≥mico de Am√©rica Latina. San Jose de Costa Rica, Costa Rica: EDUCA.
Google Scholar

Melito, F., and Zulianello, M. (2025). The organization of brothers of Italy: an activist and centralized party led by a ‚Äúmother in the family‚Äù. South Eur. Soc. Polit. 29, 1‚Äì26. doi: 10.1080/13608746.2025.2463909
Crossref Full Text | Google Scholar

M√©ny, Y., and Surel, Y. (2002). ‚ÄúThe constitutive ambiguity of populism‚Äù in Democracies and the populist challenge. eds. Y. M√©ny and Y. Surel (London: Palgrave Macmillan UK), 1‚Äì21.
Google Scholar

Molas, B. (2023). The Insurrection Wave: A Comparative Assessment of Anti-Government Attacks in Germany, the US, and Brazil. International Center for Counter-Terrorism Policy Brief.
Google Scholar


Mudde, C. (2007). Populist radical right parties in Europe. Cambridge: Cambridge University Press.
Google Scholar

Mudde, C., and Rovira Kaltwasser, C. (2013). Exclusionary vs. inclusionary populism: comparing contemporary Europe and Latin America. Gov. Oppos. 48, 147‚Äì174. doi: 10.1017/gov.2012.11
Crossref Full Text | Google Scholar

Mudde, C., and Rovira Kaltwasser, C. (2014). ‚ÄúPopulism and political leadership‚Äù in The Oxford handbook of political leadership. eds. R. A. W. Rhodes and P. T. Hart (Oxford: Oxford University Press), 376‚Äì388.
Google Scholar

Mudde, C., and Rovira Kaltwasser, C. (2017). Populism. A very short introduction. New York. Cambridge Oxford University Press.
Google Scholar

Mudde, C., and Rovira Kaltwasser, C. (2018). Studying populism in comparative perspective: reflections on the contemporary and future research agenda. Comp. Polit. Stud. 51, 1667‚Äì1693. doi: 10.1177/0010414018789490
Crossref Full Text | Google Scholar

M√ºller, J. W. (2014). ‚ÄúThe people must be extracted from within the people‚Äù: reflections on populism. Constellations 21, 483‚Äì493. doi: 10.1111/1467-8675.12126
Crossref Full Text | Google Scholar

Norris, P., and Inglehart, R. (2019). Cultural backlash: Trump, Brexit, and authoritarian populism. Cambridge: Cambridge University Press.
Google Scholar

Olejnik, ≈Å. W., and Wro≈Ñski, M. (2025). The roots of populism in Poland do uneven economic development, social transfers, inequality and migration explain the success of populist parties? Econ. Polit. 37, 685‚Äì698. doi: 10.1111/ecpo.12335
Crossref Full Text | Google Scholar

Oliver, J. E., and Rahn, W. M. (2016). Rise of the Trumpenvolk: populism in the 2016 election. Ann. Am. Acad. Polit. Soc. Sci. 667, 189‚Äì206. doi: 10.1177/0002716216662639
Crossref Full Text | Google Scholar

Ostiguy, P. (2009). The high and the low in politics: a two-dimensional political space for comparative analysis and electoral studies. Kellog Institute Working Paper #360.
Google Scholar

Ostiguy, P., and Roberts, K. M. (2016). Putting trump in comparative perspective: populism and the politicization of the sociocultural law. Brown J. World Aff. 23:25.
Google Scholar

Pappas, T. S. (2016). Are populist leaders" charismatic"? The evidence from Europe. Constellations 23, 378‚Äì390. doi: 10.1111/1467-8675.12233
Crossref Full Text | Google Scholar

Pappas, T. S., and Kriesi, H. (2015). ‚ÄúPopulism and crisis: a fuzzy relationship‚Äù in European populism in the shadow of the great recession. eds. H. Kriesi and T. Pappas (Colchester: European Consortium for Political Research Press), 303‚Äì325.
Google Scholar

Pion-Berlin, D., Bruneau, T., and Goetze, R. B. (2023). The trump self-coup attempt: comparisons and civil‚Äìmilitary relations. Gov. Oppos. 58, 789‚Äì806. doi: 10.1017/gov.2022.13
Crossref Full Text | Google Scholar


Przeworski, A. (2019). Crises of democracy. Cambridge, UK: Cambridge University Press.
Google Scholar

Rachman, G. (2022). The age of the strongman: How the cult of the leader threatens democracy around the world. New York, NY: Other Press, LLC.
Google Scholar

Ramos-Gonz√°lez, J., Ortiz, P., and Llamazares, I. (2024). Populist attitudes and vote for the radical right. A comparative analysis of five west European countries. Eur. Polit. Soc. 26:1. doi: 10.1080/23745118.2024.2387764
Crossref Full Text | Google Scholar

Rojas, R. (2024). Backing extremism in Argentina: the working-class vote for Javier Milei. New Labor Forum 33, 66‚Äì76. doi: 10.1177/10957960241245694
Crossref Full Text | Google Scholar

Rooduijn, M., and Akkerman, T. (2017). Flank attacks: populism and left-right radicalism in Western Europe. Party Polit. 23, 193‚Äì204. doi: 10.1177/1354068815596514
Crossref Full Text | Google Scholar

Rovira Kaltwasser, C., and Van Hauwaert, S. M. (2020). The populist citizen: empirical evidence from Europe and Latin America. Eur. Polit. Sci. Rev. 12, 1‚Äì18. doi: 10.1017/S1755773919000262
Crossref Full Text | Google Scholar

Rueda, D. (2021). Is populism a political strategy? A critique of an enduring approach. Polit. Stud. 69, 167‚Äì184. doi: 10.1177/0032321720962355
Crossref Full Text | Google Scholar

Ruth-Lovell, S. P., and Grahn, S. (2023). Threat or corrective to democracy? The relationship between populism and different models of democracy. Eur. J. Polit. Res. 62, 677‚Äì698. doi: 10.1111/1475-6765.12564
Crossref Full Text | Google Scholar

Roberts, K. (2006). Populism, political conflict, and grassroots organization in Latin America. Comparative Politics, 38, 127‚Äì148.
Google Scholar

Rydgren, J. (2007). The sociology of the radical right. Annu. Rev. Sociol. 33, 241‚Äì262. doi: 10.1146/annurev.soc.33.040406.131752
Crossref Full Text | Google Scholar

Schulz, A., M√ºller, P., Schemer, C., Wirz, D. S., Wettstein, M., and Wirth, W. (2018). Measuring populist attitudes on three dimensions. Int. J. Public Opin. Res. 30, 316‚Äì326. doi: 10.1093/ijpor/edw037
Crossref Full Text | Google Scholar

Schumacher, G., Rooduijn, M., and Bakker, B. N. (2022). Hot populism? Affective responses to antiestablishment rhetoric. Polit. Psychol. 43, 851‚Äì871. doi: 10.1111/pops.12832
Crossref Full Text | Google Scholar

Sondel-Cedarmas, J. (2022). ‚ÄúGiorgia Meloni's new Europe: Europe of sovereign nations in the brothers of Italy party manifestos‚Äù in The right-wing critique of Europe. eds. J. Sondel-Cedarmas and F. Berti (Abingdon, Oxfordshire, United Kingdom: Routledge), 60‚Äì75.
Google Scholar

Spierings, N., and Zaslove, A. (2017). Gender, populist attitudes, and voting: explaining the gender gap in voting for populist radical right and populist radical left parties. West Eur. Polit. 40, 821‚Äì847. doi: 10.1080/01402382.2017.1287448
Crossref Full Text | Google Scholar

Spruyt, B., Keppens, G., and Van Droogenbroeck, F. (2016). Who supports populism and what attracts people to it? Polit. Res. Q. 69, 335‚Äì346. doi: 10.1177/1065912916639138
Crossref Full Text | Google Scholar

Spruyt, B., Rooduijn, M., and Zaslove, A. (2023). Ideologically consistent, but for whom? An empirical assessment of the populism-elitism-pluralism set of attitudes and the moderating role of political sophistication. Politics 43, 536‚Äì552. doi: 10.1177/02633957211017763
Crossref Full Text | Google Scholar

Startin, N. (2022). Marine Le pen, the Rassemblement national and breaking the ‚Äòglass ceiling‚Äô? The 2022 French presidential and parliamentary elections. Mod. Contemp. France 30, 427‚Äì443. doi: 10.1080/09639489.2022.2138841
Crossref Full Text | Google Scholar

Stavrakakis, Y., and Katsambekis, G. (2014). Left-wing populism in the European periphery: the case of SYRIZA. J. Polit. Ideol. 19, 119‚Äì142. doi: 10.1080/13569317.2014.909266
Crossref Full Text | Google Scholar

Taggart, P. (2000). Populism. Buckingham: Open University Press.
Google Scholar

Taggart, P., and Szczerbiak, A. (2004). Contemporary euroscepticism in the party systems of the European Union candidate states of central and Eastern Europe. Eur J Polit Res 43, 1‚Äì27. doi: 10.1111/j.1475-6765.2004.00143.x
Crossref Full Text | Google Scholar


Tolbert, C. J., Redlawsk, D. P., and Gracey, K. J. (2018). Racial attitudes and emotional responses to the 2016 republican candidates. J. Elect. Public Opin. Parties 28, 245‚Äì262. doi: 10.1080/17457289.2018.1441846
Crossref Full Text | Google Scholar


Turnbull-Dugarte, S. J. (2019). Explaining the end of Spanish exceptionalism and electoral support for Vox. Res. Polit. 6:205316801985168. doi: 10.1177/2053168019851680
Crossref Full Text | Google Scholar

Urbinati, N. (2019). Me the people: How populism transforms democracy. Cambridge, MA: Harvard University Press.
Google Scholar

Valentin, P. (2023). ‚ÄúThe woke phenomenon: its impact and different responses‚Äù in The Palgrave handbook of left-wing extremism, volume 2. ed. Springer Nature Switzerland (Cham: Springer Nature Switzerland), 313‚Äì326.
Google Scholar

Van Hauwaert, S. M., and Van Kessel, S. (2018). Beyond protest and discontent: a cross-national analysis of the effect of populist attitudes and issue positions on populist party support. Eur J Polit Res 57, 68‚Äì92. doi: 10.1111/1475-6765.12216
Crossref Full Text | Google Scholar

Van Hauwaert, S. M., Schimpf, C. H., and Azevedo, F. (2020). The measurement of populist attitudes: testing cross-national scales using item response theory. Politics 40, 3‚Äì21. doi: 10.1177/0263395719859306
Crossref Full Text | Google Scholar

Vasilopoulos, P., and Jost, J. T. (2020). Psychological similarities and dissimilarities between left-wing and right-wing populists: evidence from a nationally representative survey in France. J. Res. Pers. 88:104004. doi: 10.1016/j.jrp.2020.104004
Crossref Full Text | Google Scholar

Wagner, A., Brigevich, A., and Kroqi, D. (2024). (MIS) perceptions of populism: do populists and anti-populists know what populism is? Acta Polit., 1‚Äì24. doi: 10.1057/s41269-024-00360-8 
PubMed Abstract | Crossref Full Text | Google Scholar

Wajner, D. F., Destradi, S., and Z√ºrn, M. (2024). The effects of global populism: assessing the populist impact on international affairs. Int. Aff. 100, 1819‚Äì1833. doi: 10.1093/ia/iiae217
Crossref Full Text | Google Scholar

Wegscheider, C., Rovira Kaltwasser, C., and Van Hauwaert, S. M. (2023). How citizens‚Äô conceptions of democracy relate to positive and negative partisanship towards populist parties. West Eur. Polit. 46, 1235‚Äì1263. doi: 10.1080/01402382.2023.2199376
Crossref Full Text | Google Scholar

Weyland, K. (2001). Clarifying a contested concept: populism in the study of Latin American politics. Comp. Polit. 34, 1‚Äì22. doi: 10.2307/422412
Crossref Full Text | Google Scholar

Weyland, K. (2021). Populism as a political strategy: an approach‚Äôs enduring‚Äîand increasing‚Äîadvantages. Polit. Stud. 69, 185‚Äì189. doi: 10.1177/00323217211002669
Crossref Full Text | Google Scholar


Z√ºrn, M. (2022). How non-majoritarian institutions make silent majorities vocal: a political explanation of authoritarian populism. Perspect. Polit. 20, 788‚Äì807. doi: 10.1017/S1537592721001043
Crossref Full Text | Google Scholar
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Cloudflare Radar: AI Insights]]></title>
            <link>https://radar.cloudflare.com/ai-insights</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45093090</guid>
        </item>
        <item>
            <title><![CDATA[Effective learning: Twenty rules of formulating knowledge (1999)]]></title>
            <link>https://www.supermemo.com/en/blog/twenty-rules-of-formulating-knowledge</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45093022</guid>
            <description><![CDATA[This article will help you overcome one of the greatest difficulties you will face when trying to accelerate learning: formulating knowledge.]]></description>
            <content:encoded><![CDATA[Dr Piotr Wozniak, February, 1999 (updated)This article will help you overcome one of the greatest difficulties you will face when trying to accelerate learning: formulating knowledgeThe speed of learning will depend on the way you formulate the material. The same material can be learned many times faster if well formulated! The difference in speed can be stunning!¬†¬†The rules are listed in the order of importance. Those listed first are most often violated or bring most benefit if complied with!There is an underlying assumption that you will proceed with learning using spaced repetition, i.e. you will not just learn once but you will repeat the material optimally (as in¬†SuperMemo).The 20 rules of formulating knowledge in learning1) Do not learn if you do not understandTrying to learn things you do not understand may seem like an utmost nonsense. Still, an amazing proportion of students commit the offence of learning without comprehension. Very often they have no other choice! The quality of many textbooks or lecture scripts is deplorable while examination deadlines are unmovable.If you are not a speaker of German, it is still possible to learn a history textbook in German. The book can be crammed word for word. However, the time needed for such ‚Äúblind learning‚Äù is astronomical. Even more important: The value of such knowledge is negligible. If you cram a German book on history, you will still know nothing of history.The German history book example is an extreme. However, the materials you learn may often seem well structured and you may tend to blame yourself for lack of comprehension. Soon you may pollute your learning process with a great deal of useless material that treacherously makes you believe ‚Äúit will be useful some day‚Äù. ¬†2) Learn before you memorizeBefore you proceed with memorizing individual facts and rules, you need to¬†build an overall picture of the learned knowledge. Only when individual pieces fit to build a single coherent structure, will you be able to dramatically reduce the learning time. This is closely related to the problem comprehension mentioned in¬†Rule 1: Do not learn if you do not understand. A single separated piece of your picture is like a single German word in the textbook of history.Do not start from memorizing loosely related facts! First read a chapter in your book that puts them together (e.g.¬†the principles of the internal combustion engine). Only then proceed with learning using individual questions and answers (e.g.¬†What moves the pistons in the internal combustion engine?), etc.3) Build upon the basicsThe picture of the learned whole (as discussed in¬†Rule 2: Learn before you memorize) does not have to be complete to the last detail. Just the opposite, the simpler the picture the better. The shorter the initial chapter of your book the better. Simple models are easier to comprehend and encompass. You can always build upon them later on.Do not neglect the basics. Memorizing seemingly obvious things is not a waste of time! Basics may also appear volatile and the cost of memorizing easy things is little. Better err on the safe side. Remember that usually you spend 50% of your time repeating just 3-5% of the learned material! Basics are usually easy to retain and take a microscopic proportion of your time. However, each memory lapse on basics can cost you dearly!4) Stick to the¬†minimum information principleThe material you learn must be formulated in as simple way as it isSimple is easyBy definition, simple material is easy to remember. This comes from the fact that its simplicity makes is easy for the brain to process it always in the same way. Imagine a labyrinth. When making a repetition of a piece of material, your brain is running through a labyrinth (you can view a neural network as a tangle of paths). While running through the labyrinth, the brain leaves a track on the walls. If it can run in only one unique way, the path is continuous and easy to follow. If there are many combinations, each run may leave a different trace that will interfere with other traces making it difficult to find the exit. The same happens on the cellular level with different synaptic connections being activated at each repetition of complex materialRepetitions of simple items are easier to scheduleI assume you will make repetitions of the learned material using optimum inter-repetition intervals (as in¬†SuperMemo). If you consider an item that is composed of two sub-items, you will need to make repetitions that are frequent enough to keep the more difficult item in memory. If you split the complex item into sub-items, each can be repeated at its own pace saving your time. Very often, inexperienced students create items that could easily be split into¬†ten or more¬†simpler sub-items! Although the number of items increases, the number of repetitions of each item will usually be small enough to greatly outweigh the cost of (1) forgetting the complex item again and again, (2) repeating it in excessively short intervals or (3) actually remembering it only in part!Here is a striking example:Ill-formulated knowledge ‚Äì Complex and wordyQ: What are the characteristics of the Dead Sea?A: Salt lake located on the border between Israel and Jordan. Its shoreline is the lowest point on the Earth‚Äôs surface, averaging 396 m below sea level. It is 74 km long. It is seven times as salty (30% by volume) as the ocean. Its density keeps swimmers afloat. Only simple organisms can live in its saline watersWell-formulated knowledge ‚Äì Simple and specificQ: Where is the Dead Sea located?A:¬†on the border between Israel and JordanQ: What is the lowest point on the Earth‚Äôs surface?A:¬†The Dead Sea shorelineQ: What is the average level on which the Dead Sea is located?A:¬†400 meters¬†(below sea level)Q: How long is the Dead Sea?A:¬†70 kmQ: How much saltier is the Dead Sea than the oceans?A:¬†7 timesQ: What is the volume content of salt in the Dead Sea?A:¬†30%Q: Why can the Dead Sea keep swimmers afloat?A:¬†due to high salt contentQ: Why is the Dead Sea called Dead?A:¬†because only simple organisms can live in itQ: Why only simple organisms can live in the Dead Sea?A:¬†because of high salt contentYou might want to experiment and try to learn two subjects using the two above approaches and see for yourself what advantage is brought by minimum information principle. This is particularly visible in the long perspective, i.e.¬†the longer the time you need to remember knowledge, the more you benefit from simplifying your items!Note in the example above how short the questions are. Note also that the answers are even shorter! We want a minimum amount of information to be retrieved from memory in a single repetition!¬†We want answer to be as short as imaginably possible!You will notice that the knowledge learned in the ill-structured example is not entirely equivalent to the well-structured formulation. For example, although you will remember why the Dead Sea can keep swimmers afloat, you may forget that it at all has such a characteristic in the first place! Additionally, rounding 396 to 400 and 74 to 70 produces some loss of information. These can be remedied by adding more questions or making the present ones more precise.You will also lose the ability to fluently recite the description of the Dead Sea when called up to the blackboard by your teachers. I bet, however, that shining in front of the class is not your ultimate goal in learning. To see how to cope with recitations and poems, read further (section devoted to¬†enumerations)5) Cloze deletion¬†is easy and effectiveCloze deletion¬†is a sentence with its parts missing and replaced by three dots.¬†Cloze deletion exercise¬†is an exercise that uses cloze deletion to ask the student to fill in the gaps marked with the three dots. For example,¬†Bill ‚Ä¶[name] was the second US president to go through impeachment.If you are a beginner and if you find it difficult to stick to the minimum information principle, use cloze deletion! If you are an advanced user, you will also like cloze deletion. It is a quick and effective method of converting textbook knowledge into knowledge that can be subject to learning based on spaced repetition. Cloze deletion makes the core of the fast reading and learning technique called¬†incremental reading.Ill-formulated knowledge ‚Äì Complex and wordyQ: What was the history of the Kaleida company?A: Kaleida, funded to the tune of $40 million by Apple Computer and IBM in 1991. Hyped as a red-hot startup, Kaleida‚Äôs mission was to create a multimedia programming language It finally produced one, called Script X. But it took three years. Meanwhile, companies such as Macromedia and Asymetrix had snapped up all the business. Kaleida closed in 1995.Well-formulated knowledge ‚Äì Simple cloze deletionQ: Kaleida was funded to the tune of ‚Ä¶(amount) by Apple Computer and IBM in 1991A: $40 millionQ: Kaleida was funded to the tune of $40 million by ‚Ä¶(companies) in 1991A: Apple and IBMQ: Kaleida was funded to the tune of $40 million by Apple Computer and IBM in ‚Ä¶ (year)A: 1991Q: ‚Ä¶(company) mission was to create a multimedia programming language. It finally produced one, called Script X. But it took three yearsA: Kaleida‚ÄôsQ: Kaleida‚Äôs mission was to create a ‚Ä¶ It finally produced one, called Script X. But it took three yearsA: multimedia programming languageQ: Kaleida‚Äôs mission was to create a multimedia programming language. It finally produced one, called ‚Ä¶ But it took three yearsA: Script XQ: Kaleida‚Äôs mission was to create a multimedia programming language. It finally produced one, called Script X. But it took ‚Ä¶(time)A: three yearsQ: Kaleida‚Äôs mission was to create a multimedia programming language: Script X. But it took three years. Meanwhile, companies such as ‚Ä¶ had snapped up all the businessA: Macromedia/AsymetrixQ: Kaleida‚Äôs mission was to create Script X. But it took three years. Meanwhile, companies such as Macromedia and Asymetrix had snapped up all the business. Kaleida closed in ‚Ä¶(year)A: 1995Optional: SuperMemo Recipe:SuperMemo 2002SuperMemo 2000SuperMemo 98/99Creating¬†cloze deletions¬†in new SuperMemos:select the keyword that is to be replaced with tree dots and press¬†Alt+ZGenerating a cloze deletions from texts placed in the clipboard in SuperMemo 2000:1. Press¬†Ctrl+Alt+N¬†to paste the text to SuperMemo¬†2. Select the part that is to be replaced with three dots 3. Right-click to open the¬†component menu¬†and select¬†Reading : Remember cloze¬†(or click one of cloze icons on the reading toolbar)¬†Cloze deletions in SuperMemo 98/99:1. Press¬†Ctrl+A¬†to add a standard question-and-answer item2. Paste the text into the question field. This will create the outline of your items3. Press¬†Ctrl+Alt+U¬†to¬†Duplicate¬†the element4. Select the part that is to be replaced with three dots5. Cut the selection to the clipboard (e.g. with¬†Shift+Del)6. Type in three dots (optionally, add the explanation in parentheses as in above examples)7. Press¬†Ctrl+T¬†to save the question field and move to the answer field8. Paste the text cut in Step 5 (e.g. with¬†Shift+Ins¬†or¬†Ctrl+V). Your first item is ready9. Press¬†PgUp¬†to go back to the outline item created in Step 210. Goto Step 3 and continue adding new items6) Use imageryVisual cortex is that part of the brain in which visual stimuli are interpreted. It has been very well developed in the course of evolution and that is why we say¬†one picture is worth a thousand words. Indeed if you look at the number of details kept in a picture and the easiness with which your memory can retain them, you will notice that our verbal processing power is greatly inferior as compared with the visual processing power. The same refers to memory. A graphic representation of information is usually far less volatile.Usually it takes much less time to formulate a simple question-and-answer pair than to find or produce a neat graphic image. This is why you will probably always have to weigh up cost and profits in using graphics in your learning material. Well-employed images will greatly reduce your learning time in areas such as anatomy, geography, geometry, chemistry, history, and many more.The power of imagery explains why the concept of Tony Buzan‚Äôs mind maps is so popular. A mind map is an abstract picture in which connections between its components reflect the logical connections between individual concepts.Less beneficial formulationQ: What African country is located between Kenya, Zambia and Mozambique?A: TanzaniaWell-formulated knowledge ‚Äì Simple cloze deletionQ: What African country is marked white on the map?A: Tanzania7) Use¬†mnemonic techniquesMnemonic techniques are various techniques that make remembering easier. They are often amazingly effective. For most students, a picture of a 10-year-old memorizing a sequence of 50 playing cards verges on discovering a young genius. It is very surprising then to find out how easy it is to learn the techniques that make it possible with a dose of training. These techniques are available to everyone and do not require any special skills!Before you start believing that mastering such techniques will provide you with an eternal solution to the problem of forgetting, be warned that the true bottleneck towards long-lasting and useful memories is not in quickly memorizing knowledge! This is indeed the easier part. The bottleneck lies in retaining memories for months, years or for lifetime! To accomplish the latter you will need¬†SuperMemo¬†and the compliance with the 20 rules presented herein.There have been dozens of books written about mnemonic techniques. Probably those written by Tony Buzan are most popular and respected. You can search the web for keywords such as:¬†mind maps, peg lists,¬†mnemonic techniques, etc.Experience shows that with a dose of training you will need to consciously apply mnemonic techniques in only 1-5% of your items. With time, using mnemonic techniques will become automatic!Exemplary mind map:(Six Steps¬†mind map generated in¬†Mind Manager 3.5, imported to SuperMemo 2004, courtesy of John England,¬†TeamLink Australia)8) Graphic deletion¬†is as good as cloze deletionGraphic deletion works like¬†cloze deletion¬†but instead of a missing phrase it uses a missing image component. For example, when learning anatomy, you might present a complex illustration. Only a small part of it would be missing. The student‚Äôs job is to name the missing area. The same illustration can be used to formulate 10-20 items! Each item can ask about a specific subcomponent of the image. Graphic deletion works great in learning geography!Exemplary graphic deletion:SuperMemo 2000/2002SuperMemo 99This is how you can quickly generate graphic deletion using a picture from the clipboard:1. Press¬†Shift+Ins¬†to paste the picture to SuperMemo2. Press¬†Ctrl+Shift+M¬†and choose¬†Occlusion¬†template to apply graphic deletion template3. SuperMemo 2000 only: Choose¬†Ctrl+Shift+F2¬†to impose and detach the¬†Occlusion¬†template4. Fill out the fields and place the occlusion rectangle to cover the appropriate part of the picture (use¬†Alt+click¬†twice to set the rectangle in the dragging mode)In SuperMemo 99 you will need a few more steps:1.Create an item containing the following components:‚Äì question text: What is the name of the area covered with the red rectangle?‚Äì empty answer text (click Answer on the component menu)‚Äì your illustration (use Import file on the image component menu)‚Äì red rectangle component (choose red color with Color on the rectangle component menu)2. Choose Duplicate on the element menu (e.g. by pressing Ctrl+Alt+U)3. Ctrl+click the rectangle component twice to place it in the dragging mode4. Drag and size the red rectangle to cover the area in question5. Type in the answer in the answer field6. Press PgUp to go back to the original element created in Step 17. Go to Step 2 to add generate more graphic deletionsNote that you could also paint covering rectangles or circles on the original image but this would greatly increase the size of your collection. The above method makes sure that you reuse the same image many times in all items of the same template. For example, the collection Brain Anatomy available from >SuperMemo Library and on SuperMemo MegaMix CD-ROM uses the above techniqueA more detailed recipe for creating occlusion tests is presented in:¬†Flow of knowledge9) Avoid setsA¬†set¬†is a collection of objects. For example, a set of fruits might be an apple, a pear and a peach. A classic example of an item that is difficult to learn is an item that asks for the list of the members of a set. For example:¬†What countries belong to the European Union?¬†You should avoid such items whenever possible due to the high cost of retaining memories based on sets. If sets are absolutely necessary, you should always try to convert them into¬†enumerations. Enumerations are ordered lists of members (for example, the alphabetical list of the members of the EU). Enumerations are also hard to remember and should be avoided. However, the great advantage of enumerations over sets is that they are ordered and they force the brain to list them always in the same order. An ordered list of countries contains more information than the set of countries that can be listed in any order. Paradoxically, despite containing more information, enumerations are easier to remember. The reason for this has been discussed earlier in the context of the¬†minimum information principle:¬†you should always try to make sure your brain works in the exactly same way at each repetition. In the case of sets, listing members in varying order at each repetition has a disastrous effect on memory. It is nearly impossible to memorize sets containing more than five members without the use of mnemonic techniques, enumeration, grouping, etc. Despite this claim, you will often succeed due to subconsciously mastered techniques that help you go around this problem. Those techniques, however, will fail you all too often. For that reason:¬†Avoid sets!¬†If you need them badly, convert them into enumerations and use¬†techniques for dealing with enumerationsIll-formulated knowledge ‚Äì Sets are unacceptable!Q:¬†What countries belong to the European Union¬†(2002)?A: Austria, Belgium, Denmark, Finland, France, Germany, Greece, Ireland, Italy, Luxembourg, the Netherlands, Portugal, Spain, Sweden, and the United Kingdom.Well-formulated knowledge ‚Äì Converting a set into a meaningful listingQ: Which country hosted a meeting to consider the creation of a European Community of Defence in 1951?A: FranceQ: Which countries apart from France joined the European Coal and Steel Community in 1952?A: Germany, Italy and the BeneluxQ: What countries make up the Benelux?A: Belgium, Luxembourg, and the NetherlandsQ: Whose membership did Charles de Gaulle oppose in the 1960s?A: that of UKQ: Which countries joined the EEC along the UK in 1973?A: Ireland and DenmarkQ: Which country joined the EEC in 1981?A: GreeceQ: Which countries joined the EEC in 1986?A: Spain and PortugalQ: Which countries joined the EU in 1995?A: Austria, Sweden and FinlandQ: What was the historic course of expansion of the European Union membership?A: (1) France and (2) Germany, Italy and the Benelux, (3) UK and (4) Ireland and Denmark, (5) Greece, (6) Spain and Portugal and (7) Austria, Sweden and FinlandNote that in the example above, we converted a 15-member set into 9 items, five of which are 2-3 member sets, and one is a six member enumeration. Put it to your SuperMemo, and see how easy it is to generate the list of the European Union members using the historic timeline! Note the tricks used with France and the UK. They joined the union in the company of others but have been listed as separate items to simplify the learning process. Note also that the sum of information included in this well-formulated approach is far greater than that of the original set. Thus along simplicity, we gained some useful knowledge. All individual items effectively comply with the¬†minimum information principle! You could go further by trying to split the Germany-Italy-Benelux set or using mnemonic techniques to memorize the final seven-member enumeration (i.e. the last of the questions above). However, you should take those steps only if you have any problems with retaining the proposed set in memory.10) Avoid enumerationsEnumerations are also an example of classic items that are hard to learn. They are still far more acceptable than sets. Avoid enumerations wherever you can. If you cannot avoid them, deal with them using¬†cloze deletions¬†(overlapping cloze deletions if possible). Learning the alphabet can be a good example of an overlapping cloze deletion:Hard to learn itemQ: What is the sequence of letters in the alphabet?A: abcdefghijklmnopqrstuvwxyzEasy to learn itemsQ: What three letters does the alphabet begin with?A: ABCQ: Fill out the missing letters of the alphabet A ‚Ä¶ ‚Ä¶ ‚Ä¶ EA: B, C, DQ: Fill out the missing letters of the alphabet B ‚Ä¶ ‚Ä¶ ‚Ä¶ FA: C, D, EQ: Fill out the missing letters of the alphabet C ‚Ä¶ ‚Ä¶ ‚Ä¶ GA: D, E, FThe above items will make learning the alphabet much faster. The greatest advantage of the above approach is that is it easier for psychological reasons: the student does not have to stop repetitions to recite the whole sequence and can only focus on a small part of the learned material. Still it is recommended that he recite the whole alphabet¬†after¬†making the repetition. However, once all individual pieces are well remembered, reciting the whole should be a pleasant and speedy action that produces little frustration.The cloze deletion used above is an overlapping cloze deletion, i.e. the same parts of the enumeration are strengthened in memory using different items (for example, the sequence C-D will be needed to recall the second and the third item). This redundancy does not contradict the¬†minimum information principle¬†because¬†the extra information is added in extra items.You can also deal with enumerations by using grouping like in the case of sets (see the¬†European Union example) but cloze deletions should be simpler and should suffice in most cases.Learning poems is an example of learning enumerations (all words and sentences have to be uttered in a predefined sequence); however, due to strong semantic connections, the rhyme and the rhythm, it may often be possible to effectively remember poems without using cloze deletion and without the frustration of forgetting small subcomponents again and again. However, once you notice you stumble with your poem, you should dismember it using cloze deletion and thus make sure that the learning is fast, easy, effective and pleasurableA poem that is hard to rememberQ: The credit belongs ‚Ä¶ (Teddy Roosevelt)A: The credit belongs to the man who‚Äôs actually in the arena, whose face is marred by dust and sweat; a man who knows the great enthusiasm and the great devotions, who spends himself in a worthy cause, who in the end knows the triumph of high achievement, so that his place shall never be with those cold and timid souls who know neither victory nor defeat¬†A poem split into easy itemsQ: The credit belongs ‚Ä¶ (Teddy Roosevelt)A: to the man who‚Äôs actually in the arenaQ: The credit belongs to the man who‚Äôs actually in the arena ‚Ä¶A: whose face is marred by dust and sweat (a man who knows the great enthusiasm)Q: whose face is marred by dust and sweat ‚Ä¶ (The credit belongs)A: a man who knows the great enthusiasm and the great devotions (who spends himself in a worthy cause)Q: a man who knows the great enthusiasm and the great devotions ‚Ä¶ (The credit belongs)A: who spends himself in a worthy cause (who in the end knows the triumph of high achievement)Q: who spends himself in a worthy cause ‚Ä¶ (The credit belongs)A: who in the end knows the triumph of high achievement (so that his place shall never be), etc. etc.Does it all sound artificial? It does! But you will never know how effective this approach is until you try it by yourself!11) Combat¬†interferenceWhen you learn about similar things you often confuse them. For example, you may have problems distinguishing between the meanings of the words¬†historic¬†and¬†historical. This will even be more visible if you memorize lots of numbers, e.g. optimum dosages of drugs in pharmacotherapy. If knowledge of one item makes it harder to remember another item, we have a case of¬†memory interference. You can often remember an item for years with straight excellent grades until ‚Ä¶ you memorize another item that makes it nearly impossible to remember either! For example, if you learn geography and you memorize that the country located between Venezuela, Suriname and Brazil is Guyana, you are likely to easily recall this fact for years with just a couple of repetitions. However, once you add similar items asking about the location of all these countries, and French Guyana, and Colombia and more, you will suddenly notice strong memory interference and you may experience unexpected forgetting. In simple terms: you will get confused about what is what.Interference is probably the single greatest cause of forgetting in collections of an experienced user of SuperMemo. You can never be sure when it strikes, and the only hermetic procedure against it is to¬†detect and eliminate. In other words, in many cases it may be impossible to predict interference at the moment of formulating knowledge. Interference can also occur between remotely related items like Guyana, Guyard and Guyenne, as well as Guyana, kayman and ‚Ä¶ aspirin. It may work differently for you and for your colleague. It very hard to predict.Still you should do your best to prevent interference before it takes its toll. This will make your learning process less stressful and mentally bearable. Here are some tips:make items as unambiguous as possiblestick to the¬†minimum information principle¬†(many of the remaining rules in this text are based on avoiding interference!)eliminate interference as soon as you spot it, i.e. before it becomes your obsession (e.g. as soon as you see the word¬†inept¬†you think ‚ÄúI know the meanings of¬†inept¬†and¬†inapt¬†but I will never know which is which!‚Äù)in SuperMemo use¬†View¬†:¬†Other browsers :¬†Leeches(Shift+F3) to regularly review and¬†eliminate¬†most difficult itemsread more:¬†Memory interference12) Optimize wordingThe wording of your items must be optimized to make sure that in minimum time the right bulb in your brain lights up. This will reduce error rates, increase specificity, reduce response time, and help your concentration.Less optimum item: cloze deletion that is too wordyQ: Aldus invented desktop publishing in 1985 with PageMaker. Aldus had little competition for years, and so failed to improve. Then Denver-based ‚Ä¶ blew past. PageMaker, now owned by Adobe, remains No. 2Less optimum item: cloze deletion that is too wordyQ: Aldus invented desktop publishing in 1985 with PageMaker. Aldus had little competition for years, and so failed to improve. Then Denver-based ‚Ä¶ blew past. PageMaker, now owned by Adobe, remains No. 2A: QuarkBetter item: fewer words will speed up learningQ: Aldus invented desktop publishing in 1985 with PageMaker but failed to improve. Then ‚Ä¶ blew past (PageMaker remains No. 2)A: QuarkOr better:Q: Aldus invented desktop publishing with PageMaker but failed to improve. It was soon outdistanced by ‚Ä¶A: QuarkOr better:Q: PageMaker failed to improve and was outdistanced by ‚Ä¶A: QuarkOr better:Q: PageMaker lost ground to ‚Ä¶A: QuarkNote that the loss of information content in this item is inconsequential. During repetition you are only supposed to learn the name:¬†Quark. You should not hope that the trailing messages on the ownership of PageMaker and the year of its development will somehow trickle to your memory as a side effect. You should decide if the other pieces of information are important to you and if so, store them in separate items (perhaps reusing the above text, employing cloze deletion again and optimizing the wording in a new way). Otherwise the redundant information will only slow down your learning process!13) Refer to other memoriesReferring to other memories can place your item in a better context, simplify wording, and reduce interference. In the example below, using the words¬†humble¬†and¬†supplicant¬†helps the student focus on the word¬†shamelessly¬†and thus strengthen the correct semantics. Better focus helps eliminating interference. Secondly, the use of the words¬†humble¬†and¬†supplicant¬†makes it possible to avoid interference of¬†cringing¬†with these words themselves. Finally, the proposed wording is shorter and more specific. Naturally, the rules¬†basics-to-details¬†and¬†do not learn what you do not understand¬†require that the words¬†humble¬†and¬†supplicant¬†be learned beforehand (or at least at the same time)Item subject to strong interferenceQ: derog: adj: shamelessly conscious of one‚Äôs failings and asking in a begging wayA: cringingItem that uses interfering memories to amplify the correct meaningQ: derog: adj: shamelessly humble and supplicantA: cringing14) Personalize and provide examplesOne of the most effective ways of enhancing memories is to provide them with a link to your personal life. In the example below you will save time if you use a personal reference rather than trying to paint a picture that would aptly illustrate the questionItem subject to strong interferenceQ: What is the name of a soft bed without arms or back?A: divanItem that uses interfering memories to amplify the correct meaningQ: What is the name of a soft bed without arms or back? (like the one at Robert‚Äôs parents)A: divanIf you remember exactly what kind of soft bed can be found in Robert‚Äôs parents‚Äô apartment you will save time by not having to dig exactly into the semantics of the definition and/or looking for an appropriate graphic illustration for the piece of furniture in question. Personalized examples are very resistant to¬†interference¬†and can greatly reduce your learning time15) Rely on emotional statesIf you can illustrate your items with examples that are vivid or even shocking, you are likely to enhance retrieval (as long as you do not overuse same tools and fall victim of interference!). Your items may assume bizarre form; however, as long as they are produced for your private consumption, the end justifies the means. Use objects that evoke very specific and strong emotions: love, sex, war, your late relative, object of your infatuation, Linda Tripp, Nelson Mandela, etc. It is well known that emotional states can facilitate recall; however, you should make sure that you are not deprived of the said emotional clues at the moment when you need to retrieve a given memory in a real-life situationHarder itemQ: a light and joking conversationA: banterEasier itemQ: a light and joking conversation (e.g. Mandela and de Klerk in 1992)A: banterIf you have vivid and positive memories related to the meetings between Nelson Mandela and F.W. de Klerk, you are likely to quickly grasp the meaning of the definition of banter. Without the example you might struggle with interference from words such as¬†badinage¬†or even¬†chat. There is no risk of irrelevant emotional state in this example as the state helps to define the semantics of the learned concept! A well-thought example can often reduce your learning time several times! I have recorded examples in which an item without an example was forgotten 20 times within one year, while the same item with a subtle interference-busting example was not forgotten even once in ten repetitions spread over five years. This is roughly equivalent to¬†25-fold saving in time in the period of 20 years! Such examples are not rare! They are most effectively handled with the all the preceding rules targeted on¬†simplicity¬†and against the¬†interference16) Context cues¬†simplify wordingYou can use¬†categories¬†in¬†SuperMemo 2000/2002, provide different branches of knowledge with a different look (different¬†template), use reference labels (Title, Author, Date,¬†etc.) and clearly label subcategories (e.g. with strings such as¬†chem¬†for¬†chemistry,¬†math¬†for¬†mathematics, etc.). This will help you simplify the wording of your items as you will be relieved from the need to specify the context of your question. In the example below, the well-defined prefix¬†bioch:¬†saves you a lot of typing and a lot of reading while still making sure you do not confuse the abbreviation GRE with Graduate Record Examination. Note that in the recommended case, you process the item starting from the label¬†bioch¬†which puts your brain immediately in the right context. While processing the lesser optimum case, you will waste precious milliseconds on flashing the standard meaning of GRE and ‚Ä¶ what is worse ‚Ä¶ you will light up the wrong areas of your brain that will now perhaps be prone to interference!Wordy item can cause accidental lapses through interferenceQ: What does GRE stand for in biochemistry?A: glucocorticoid response elementContext-labeled items increase success rateQ: bioch: GREA: glucocorticoid response element17) Redundancy¬†does not contradict minimum information principleRedundancy¬†in simple terms is more information than needed or duplicate information, etc. Redundancy does not have to contradict the¬†minimum information principle¬†and may even be welcome. The problem of redundancy is too wide for this short text. Here are some examples that are only to illustrate that¬†minimum information principle¬†cannot be understood as¬†minimum number of characters or bits in your collections or even items:passive and active approach: if you learn a foreign language, e.g. Esperanto, you will often build word pairs such as¬†phone-telefono, language-lingvo, hope-esperanto,¬†etc. These pairs require active recall of the foreign word. Active recall does not, however, guarantee passive recognition and you may fail with¬†telefono-phone, lingvo-language,¬†or¬†esperanto-hope.¬†Adding new elements with swapped questions and answers may in some cases be redundant but it does not contradict the minimum information principle! Your items are still as simple as possible. You just get more of themIn¬†SuperMemo 2000/2002, you can quickly generate swapped word-pair items with¬†Duplicate¬†(Ctrl+Alt+D) and¬†Swap¬†(Ctrl+Shift+S)reasoning cues: you will often want to boost your reasoning ability by asking about a solution to the problem. Instead of just¬†memorizing¬†the answer you would like to quickly follow the reasoning steps (e.g. solve a simple mathematical equation) and¬†generate¬†the answer. In such a case, providing the hint on the reasoning steps in the answer will only serve helping you always follow the right path at repetitionsderivation steps: in more complex problems to solve, memorizing individual derivation steps is always highly recommended (e.g. solving complex mathematical problems). It is not cramming! It is making sure that the brain can always follow the fastest path while solving the problem. For more on boosting creativity and intelligence read:¬†Roots of genius and creativity, as well as more specific:¬†Derivation, reasoning and intelligencemultiple semantic representation: very often the same knowledge can be represented and viewed from different angles. Memorizing different representations of the same fact or rule is recommended in cases where a given memory is of high value. This will increase the expected recall rate (beyond that specified with the¬†forgetting index)!flexible repetition: if there are many valid responses to the same question make sure that your representation makes it possible to identify the equivalence and reward you with good grades by providing just one of the equivalent choices. For example, if you learn a language, it rarely make sense to learn all synonyms that meet a definition of a concept. It is more adequate to consider a single synonym as the sufficient answer (e.g.¬†a mark made by ink spilt on sth¬†=¬†blot/blob/blotch)more18) Provide¬†sourcesExcept for well-tested and proven knowledge (such as¬†2+2=4), it is highly recommended that you include sources from which you have gathered your knowledge. In real-life situation you will often be confronted with challenges to your knowledge. Sources can come to your rescue. You will also find that facts and figures differ depending on the source. You can really be surprised how frivolously reputable information agencies publish figures that are drastically different from other equally reputable sources. Without SuperMemo, those discrepancies are often difficult to notice: before you encounter the new fact, the old one is often long forgotten. With sources provided, you will be able to make more educated choices on which pieces of information are more reliable. Adding reliability labels may also be helpful (e.g.¬†Watch out!, Other sources differ!, etc.). Sources should accompany your items but should not be part of the learned knowledge (unless it is critical for you to be able to recall the source whenever asked).19) Provide¬†date stampingKnowledge can be relatively stable (basic math, anatomy, taxonomy, physical geography, etc.) and highly volatile (economic indicators, high-tech knowledge, personal statistics, etc.). It is important that you provide your items with time stamping or other tags indicating the degree of obsolescence. In case of statistical figures, you might stamp them with the year they have been collected. When learning software applications, it is enough you stamp the item with the software version. Once you have newer figures you can update your items. Unfortunately, in most cases you will have to re-memorize knowledge that became outdated. Date stamping is useful in editing and verifying your knowledge; however, you will rarely want to memorize stamping itself. If you would like to remember the changes of a given figure in time (e.g. GNP figures over a number of years), the date stamping becomes the learned knowledge itself.20) PrioritizeYou will always face far more knowledge that you will be able to master. That is why prioritizing is critical for building quality knowledge in the long-term. The way you prioritize will affect the way your knowledge slots in. This will also affect the speed of learning (e.g. see:¬†learn basics first). There are many stages at which prioritizing will take place; only few are relevant to knowledge representation, but all are important:Prioritizing sources¬†‚Äì there will always be a number of sources of your knowledge. If you are still at student years: these will most likely be books and notes pertaining to different subjects. Otherwise you will probably rely more on journals, Internet, TV, newspapers, encyclopedias, dictionaries, etc. It is always worth being aware what is the optimum proportion of time devoted to those varied sources. As you progress with learning, you will quickly develop a good sense of which learning slots bring better results and which might be extended at the cost of othersExtracting knowledge¬†‚Äì unless you are about to pass an important exam, it nearly never makes sense to memorize whole books or whole articles. You will need to extract those parts that are most likely to impact the quality of your knowledge. You can do it by (1) marking paragraphs in a book or journal, (2) pasting relevant web pages to SuperMemo, (3) pasting relevant passages to SuperMemo, (4) typing facts and figures directly to SuperMemo notes, etc. You will need some experience before you can accurately measure how much knowledge you can indeed transfer to your brain and what degree of detail you can feasibly master. Your best way to prioritize the flow of knowledge into your memory is to use¬†incremental reading¬†toolsTransferring knowledge to SuperMemo¬†‚Äì you may try to stick with the 20 rules of formulating knowledge at the moment of introducing your material to SuperMemo. However, you can also literally transfer your notes or import whole files and later use the mechanisms provided by SuperMemo to determine the order of processing the imported material. Probably the best criterion for choosing between formulating or just importing is the time needed for accurately formulating the item or items. If formulation requires more knowledge, more time, comparing with other sources, etc. you can just import. Otherwise, if you believe that formulating an accurate item is a matter of seconds, formulate itFormulating items¬†‚Äì make sure that explanatory or optional components of the answer are placed in the parentheses so that your attention is focused on the most important part of the item. The parts in the parentheses can be read after the repetition to strengthen the memory in its contextUsing forgetting index¬†‚Äì you can use the¬†forgetting index¬†to prioritize pending items. The sequence of repetitions will naturally be determined by SuperMemo; however, you can request higher retention level for items that are more important and lower retention level for items of lower priorityLearning¬†‚Äì the process of prioritizing does not end with the onset of repetitions. Here are the tools you can use to continue setting your priorities while the learning process is under way:Remember¬†(Ctrl+M) ‚Äì re-memorize items of high priority that have changed or which are extremely important to your knowledge at a given moment. If you choose¬†Ctrl+M¬†you will be able to determine the next interval for the currently reviewed item (its repetition counter will be reset to zero). It is recommended that you always re-memorize items whose content has changed significantlyReschedule¬†(Ctrl+J) ‚Äì manually schedule the date of the next repetitionExecute repetition¬†(Ctrl+Shift+R) ‚Äì manually execute a repetition even before the repetition‚Äôs due date (e.g. when reviewing particularly important material)Forget¬†(Ctrl+R)- remove the current item from the learning process and place it at the end of the¬†pending queueDismiss¬†(Ctrl+D)¬†‚Äì ignore the current item in the learning process altogetherDelete¬†(Ctrl+Shift+Del) ‚Äì remove the current item from your collectionChange the forgetting index of memorized items or change the ordinal of pending items (Ctrl+Shift+P)SummaryHere again are the twenty rules of formulating knowledge. You will notice that the first 16 rules revolve around making memories simple! Some of the rules strongly overlap. For example: do not learn if you do not understand is a form of applying the minimum information principle which again is a way of making things simple:Do not learn if you do not understandLearn before you memorize¬†‚Äì build the picture of the whole before you dismember it into simple items in SuperMemo. If the whole shows holes, review it again!Build upon the basics¬†‚Äì never jump both feet into a complex manual because you may never see the end. Well remembered basics will help the remaining knowledge easily fit inStick to the minimum information principle¬†‚Äì if you continue forgetting an item, try to make it as simple as possible. If it does not help, see the remaining rules (cloze deletion, graphics, mnemonic techniques, converting sets into enumerations, etc.)Cloze deletion is easy and effective¬†‚Äì completing a deleted word or phrase is not only an effective way of learning. Most of all, it greatly speeds up formulating knowledge and is highly recommended for beginnersUse imagery¬†‚Äì a picture is worth a thousand wordsUse mnemonic techniques¬†‚Äì read about peg lists and mind maps. Study the books by Tony Buzan. Learn how to convert memories into funny pictures. You won‚Äôt have problems with phone numbers and complex figuresGraphic deletion is as good as cloze deletion¬†‚Äì obstructing parts of a picture is great for learning anatomy, geography and moreAvoid sets¬†‚Äì larger sets are virtually un-memorizable unless you convert them into enumerations!Avoid enumerations¬†‚Äì enumerations are also hard to remember but can be dealt with using cloze deletionCombat interference¬†‚Äì even the simplest items can be completely intractable if they are similar to other items. Use examples, context cues, vivid illustrations, refer to emotions, and to your personal lifeOptimize wording¬†‚Äì like you reduce mathematical equations, you can reduce complex sentences into smart, compact and enjoyable maximsRefer to other memories¬†‚Äì building memories on other memories generates a coherent and hermetic structure that forgetting is less likely to affect. Build upon the basics and use planned redundancy to fill in the gapsPersonalize and provide examples¬†‚Äì personalization might be the most effective way of building upon other memories. Your personal life is a gold mine of facts and events to refer to. As long as you build a collection for yourself, use personalization richly to build upon well established memoriesRely on emotional states¬†‚Äì emotions are related to memories. If you learn a fact in the sate of sadness, you are more likely to recall it if when you are sad. Some memories can induce emotions and help you employ this property of the brain in rememberingContext cues simplify wording¬†‚Äì providing context is a way of simplifying memories, building upon earlier knowledge and avoiding interferenceRedundancy does not contradict minimum information principle¬†‚Äì some forms of redundancy are welcome. There is little harm in memorizing the same fact as viewed from different angles. Passive and active approach is particularly practicable in learning word-pairs. Memorizing derivation steps in problem solving is a way towards boosting your intellectual powers!Provide sources¬†‚Äì sources help you manage the learning process, updating your knowledge, judging its reliability, or importanceProvide date stamping¬†‚Äì time stamping is useful for volatile knowledge that changes in timePrioritize¬†‚Äì effective learning is all about prioritizing. In¬†incremental¬†reading¬†you can start from badly formulated knowledge and improve its shape as you proceed with learning (in proportion to the cost of inappropriate formulation). If need be, you can review pieces of knowledge again, split it into parts, reformulate, reprioritize, or delete. See also:¬†Incremental reading,¬†Devouring knowledge,¬†Flow of knowledge,¬†Using tasklists]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Turns out Google made up an elaborate story about me]]></title>
            <link>https://bsky.app/profile/bennjordan.bsky.social/post/3lxojrbessk2z</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45092925</guid>
        </item>
        <item>
            <title><![CDATA[Git for Music ‚Äì Using Version Control for Music Production (2023)]]></title>
            <link>https://grechin.org/2023/05/06/git-and-reaper.html</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45092895</guid>
            <description><![CDATA[last updated on 6 Apr 2024]]></description>
            <content:encoded><![CDATA[
        

  

  
    
  last updated on 6 Apr 2024


Being both a musician and a software engineer, I always felt that these two areas are almost completely separated. My developer skill-set seemed to have little to no use for my work as a musician. Which is a pity considering how cool it would be if there was some kind of a sinergy across these two sides of my life.

Recently, though, I have found a useful possibility to utilize something I previously used solely for my development work, namely, git, the version control tool, for my music production.

Okay, and now let‚Äôs get to the point and‚Ä¶



Did you notice yourself creating a dozen of versions of your project? Are the names like this familiar to you?

my-cool-song-new-vocals-brighter-mix-4.rpp

Did you ever feel frustrated about unmanageability of all this and how sloppy you project directory ends up looking?

This version nightmare problem for software people has a solid and well-recognized solution: version control systems. Such as ‚Äúgit‚Äù, which is not only the most widely used one in the industry, but also completely free, open source and cross platform (that is working flawlessly on Win/Mac/Linux).

For music production, I use Reaper, and instead of creating dozens of copies of my project file (my-cool-song.rpp), such as my-cool-song-new-vocals-brighter-mix-4.rpp, I simply initialize a git repository in the project folder and put the file under version control. This git repository will be the ‚Äúhome‚Äù for managing the version of our music project.

By the way, a good supplementary for this reading could be this video of me going through an example. If you are not fan of watching videos, feel free to read on.


  


My git-based music production workflow

Although, when wearing a developer hat, I am normally in linux, for the music production stuff, due to the better availability of plugins and such, Windows is a better option. For Windows, you can install git-bash, and have all the git functionality at your fingertips through a command-line interface.

First, I initialize a repository in the project directory. For me, it is most convenient to use a git bash command line terminal:

Acer@DESKTOP-NRN84IB MINGW64 /c/home/music
$ cd test_git_project/

Acer@DESKTOP-NRN84IB MINGW64 /c/home/music/test_git_project
$ git init .
Initialized empty Git repository in C:/home/music/test_git_project/.git/

Acer@DESKTOP-NRN84IB MINGW64 /c/home/music/test_git_project (master)
$


in the example above:

  I first navigated to the directory with my project with cd command
  initialized a repository with git init .
  on the last, third line, my command prompt starts having a little (master) thing, which is the default ‚Äúbranch‚Äù in my repository that Git has created for me


I also create a .gitignore file and that this is this particular project file that I want to track, and not any other, such as media or peak files:

*

!in_your_eyes_remix_git_managed.rpp


Then I am free to work with the project in my DAW as usual. When I am done working on a specific version, I make a commit and give it a descriptive name, e.g. ‚Äúbass vst settings adjusted‚Äù.

Then I can see all the versions of my project in git gui tool.




  side note: you can use any git frontend, not only git gui.


Not only that, but I can also open any historical version of the project, create branches and so on. In other words, I can fully benefit from the version control system! If you are already using git, you know what I mean.

The days of versioned files mess in my project folder are finally gone! I wonder, though, if Reaper developers will be willing to incorporate that into their product one day.

Managing other files (WAVs etc.)

Git is not super suited for managing big binary files (such as WAV samples and stems), but this is not a problem for me since I only manage the main project file.

About other files I do not care. Why? Becase I never remove them. The media files are either WAVs related to this project (and which are therefore kept in the project folder) or samples from my library. In both cases, these files are normally (at least withing the lifespan of the project under construction) never deleted.

This approach, which, I guess, I share with most producers, makes it easy to return to any historical version of the project and rely on the media files to be found.

collaborating with GIT? Not sure‚Ä¶

GIT is not only about versioning, but also about collaboration, with remote repositories and so on. Frankly, I don‚Äôt see it feasible for collaboration over music projects since the project files are normally opaque and we should not expect git or any other version control system to be able to merge/diff them.

And let‚Äôs not forget that to be able to work on your project, the collaborator needs to have very close set up: the DAW, the plugins and all the media files.

Another note of the remote repositories: I do find it useful that I can push my music project to github and this kind of a backup that will outlive my current PC. This is nice, but we can‚Äôt really consider it a real backup - because of missing media.

Tracking TODO items for your music project in GitHub

Interesting use-case I‚Äôm currently testing is to have a ‚Äútodo list‚Äù, think of an small per-project issue tracker with a list of things you plan to do later. Just a version-tracked text file of the format similar to this:

fix panning issues in chorus TODO
add one more synth layer TODO


Once it‚Äôs in Github, you can update it from anywhere (GitHub allows you to edit files right in the browser), so, basically, you project gets its own, private, read/write website. On the go and got a cool idea? Now you know where to record it (don‚Äôt forget to pull your update, though, once you are back to your DAW PC).

In conclusion, when we inspect this idea of ‚Äúgit for music‚Äù a bit closer, we can see that it does have a few viable applications. Yes, this tool is not magical, but still pretty useful!

Thanks for reading.

  


      ]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[AI enters the grant game, picking winners]]></title>
            <link>https://www.science.org/content/article/ai-enters-grant-game-picking-winners</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45092880</guid>
        </item>
        <item>
            <title><![CDATA[Show HN: Simple modenized .NET NuGet server reached RC]]></title>
            <link>https://github.com/kekyo/nuget-server</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45092734</guid>
            <description><![CDATA[Simple modenized NuGet server üì¶. Contribute to kekyo/nuget-server development by creating an account on GitHub.]]></description>
            <content:encoded><![CDATA[nuget-server
Simple modenized NuGet server implementation.






(Êó•Êú¨Ë™û„ÅØ„Åì„Å°„Çâ)
What is this?
A simple NuGet server implementation built on Node.js that provides essential NuGet v3 API endpoints.
Compatible with dotnet restore and standard NuGet clients for package publishing, querying, and manually downloading.
A modern browser-based UI is also provided:

You can refer to registered packages. You can check various package attributes.
You can download packages by version.
You can also publish (upload) packages.
You can manage user accounts.

Browse package list:

Publishing packages:

User account managements:

Key Features

Easy setup, run NuGet server in 10 seconds!
NuGet V3 API compatibility: Support for modern NuGet client operations
No need database management: Store package file and nuspecs into filesystem directly, feel free any database managements
Package publish: Flexible client to upload .nupkg files via HTTP POST using cURL and others
Basic authentication: Setup authentication for publish and general access when you want it
Reverse proxy support: Configurable trusted reverse proxy handling for proper URL resolution
Modern Web UI with enhanced features:

Multiple package upload: Drag & drop multiple .nupkg files at once
User account management: Add/delete users, reset passwords (admin only)
API password regeneration: Self-service API password updates
Password change: Users can change their own passwords


Package importer: Included package importer from existing NuGet server
Docker image available


Installation
npm install -g nuget-server
For using Docker images, refer to a separate chapter.
Usage
# Start server on default port 5963
nuget-server

# Custom port
nuget-server --port 3000

# Multiple options
nuget-server --port 3000 --config-file config/config.json --users-file config/users.json
The NuGet V3 API is served on the /v3 path.

Default nuget-server served URL (Show UI): http://localhost:5963
Actual NuGet V3 API endpoint: http://localhost:5963/v3/index.json

The default URL provided by nuget-server can be changed using the --base-url option.
This is particularly necessary when public endpoint service using a reverse proxy. For details, refer to below chapter.
Configure the NuGet client
nuget-server only supports the NuGet V3 API. Therefore, NuGet clients must always access it using the V3 API.
If you do not explicitly specify to use the V3 API, some implementations may fall back to the V3 API while others may not, potentially causing unstable behavior. Therefore, you must always specify it. Example below.
Add as package source:
For HTTP endpoints:
dotnet nuget add source http://localhost:5963/v3/index.json \
  -n "local" --protocol-version 3 --allow-insecure-connections
For HTTPS endpoints:
dotnet nuget add source https://packages.example.com/v3/index.json \
  -n "packages" --protocol-version 3
Or specify in nuget.config:
<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <packageSources>
    <add key="local" value="http://localhost:5963/v3/index.json"
      protocolVersion="3" allowInsecureConnections="true" />
  </packageSources>
</configuration>
Publish packages
Upload packages by HTTP POST method, using cURL or any HTTP client with /api/publish endpoint:
# Upload "MyPackage.1.0.0.nupkg" file
curl -X POST http://localhost:5963/api/publish \
  --data-binary @MyPackage.1.0.0.nupkg \
  -H "Content-Type: application/octet-stream"
You may be dissatisfied with publishing using this method. The dotnet command includes dotnet nuget push, which is the standard approach.
However, in my experience, this protocol uses multipart/form-data for transmission, which has caused issues with gateway services, reverse proxies, load balancers, and similar components.
Therefore, the current nuget-server does not implement this method and instead uses the simplest binary transmission procedure.
Another advantage is that when authentication is enabled, you don't need to manage Basic authentication and V3 API keys separately.
You might still feel issue with managing read operations and publish operation with the same key,
but in that case, you can simply separate the users.
For authentication feature, please refer to below chapter.

Package storage configuration
Storage location
By default, packages are stored in the ./packages directory relative to where you run nuget-server.
You can customize this location using the --package-dir option:
# Use default ./packages directory
nuget-server

# Use custom directory (relative or absolute path)
nuget-server --package-dir /another/package/location
Package storage layout
Packages are stored in the filesystem using the following structure:
packages/
‚îú‚îÄ‚îÄ PackageName/
‚îÇ   ‚îú‚îÄ‚îÄ 1.0.0/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ PackageName.1.0.0.nupkg
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ PackageName.nuspec
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ icon.png            # Package icon (if present)
‚îÇ   ‚îî‚îÄ‚îÄ 2.0.0/
‚îÇ       ‚îú‚îÄ‚îÄ PackageName.2.0.0.nupkg
‚îÇ       ‚îú‚îÄ‚îÄ PackageName.nuspec
‚îÇ       ‚îî‚îÄ‚îÄ icon.jpg            # Package icon (if present)
‚îî‚îÄ‚îÄ AnotherPackage/
    ‚îî‚îÄ‚îÄ 1.5.0/
        ‚îú‚îÄ‚îÄ AnotherPackage.1.5.0.nupkg
        ‚îú‚îÄ‚îÄ AnotherPackage.nuspec
        ‚îî‚îÄ‚îÄ icon.png            # Package icon (if present)

Backup and restore
You can backup the package directory using simply tar or other achiver:
cd /your/server/base/dir
tar -cf - ./packages | lz4 > backup-packages.tar.lz4
Restore is simply extract it and re-run nuget-server with the same package directory configuration, because nuget-server does not use any specialized storage such as databases.

Configuration
nuget-server supports configuration through command-line options, environment variables, and JSON file.
Settings are applied in the following order (highest to lowest priority):

Command-line options
Environment variables
config.json
Default values

Configuration file structure
You can specify a custom configuration file:
# Using command line option
nuget-server --config-file /path/to/config.json
# or short alias
nuget-server -c /path/to/config.json

# Using environment variable
export NUGET_SERVER_CONFIG_FILE=/path/to/config.json
nuget-server
If not specified, nuget-server looks for ./config.json in the current directory.
config.json structure
Create a config.json file:
{
  "port": 5963,
  "baseUrl": "http://localhost:5963",
  "packageDir": "./packages",
  "usersFile": "./users.json",
  "realm": "Awsome nuget-server",
  "logLevel": "info",
  "trustedProxies": ["127.0.0.1", "::1"],
  "authMode": "none",
  "sessionSecret": "<your-secret-here>",
  "passwordMinScore": 2,
  "passwordStrengthCheck": true
}
All fields are optional. Only include the settings you want to override.
Both packageDir and usersFile paths can be absolute or relative. If relative, they are resolved from the directory containing the config.json file.

Authentication
nuget-server also supports authentication.



Authentication Mode
Details
Auth Initialization




none
Default. No authentication required
Not required


publish
Authentication required only for package publishing
Required


full
Authentication required for all operations (must login first)
Required



To enable authentication on the NuGet server, first register an initial user using the --auth-init option.
Initialize
Create an initial admin user interactively:
nuget-server --auth-init
This command will:

Prompt for admin username (default: admin)
Prompt for password (with strength checking, masked input)
Create users.json
Exit after initialization (server does not start)

When enabling authentication using a Docker image, use this option to generate the initial user.
Example session
Initializing authentication...
Enter admin username [admin]:
Enter password: ********
Confirm password: ********

============================================================
Admin user created successfully!
============================================================
Username: admin
Password: *********************
============================================================

User Management
Users added with --auth-init automatically become administrator users.
Administrator users can add or remove other users via the UI. They can also reset user passwords.

While administrator users can also be assigned API passwords (described later), we recommend separating users for management whenever possible.
Using the API password
The NuGet server distinguishes between the password used to log in to the UI and the password used by NuGet clients when accessing the server.
The password used by NuGet clients when accessing the server is called the "API password,"
and access is granted using the combination of the user and the API password.
Please log in by displaying the UI in the browser.
Select the ‚ÄúAPI password‚Äù menu from the UI menu to generate an API password.
Using this API password will enable access from the NuGet client.

Here is an example of using the API password:
# Add source with API password
dotnet nuget add source http://localhost:5963/v3/index.json \
  -n "local" \
  -u admin \
  -p xxxxxxxxxxxxxxxxxxxxxx \
  --protocol-version 3 --store-password-in-clear-text --allow-insecure-connections
Or specify nuget.config with credentials:
<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <packageSources>
    <add key="local" value="http://localhost:5963/v3/index.json"
      protocolVersion="3" allowInsecureConnections="true" />
  </packageSources>
  <packageSourceCredentials>
    <local>
      <add key="Username" value="reader" />
      <add key="ClearTextPassword" value="xxxxxxxxxxxxxxxxxxxxxx" />
    </local>
  </packageSourceCredentials>
</configuration>
For package publishing:
# Publish packages with API password
curl -X POST http://localhost:5963/api/publish \
  -u admin:xxxxxxxxxxxxxxxxxxxxxx \
  --data-binary @MyPackage.1.0.0.nupkg \
  -H "Content-Type: application/octet-stream"
When publishing a package, you can send the package by setting Basic authentication in the Authorization header.
Password strength requirements
nuget-server uses the zxcvbn library to enforce strong password requirements:

Evaluates password strength on a scale of 0-4 (Weak to Very Strong)
Default minimum score: 2 (Good)
Checks against common passwords, dictionary words, and patterns
Provides real-time feedback during password creation

Configure password requirements in config.json:
{
  "passwordMinScore": 2, // 0-4, default: 2 (Good)
  "passwordStrengthCheck": true // default: true
}
The NuGet server stores both "password" and "API password" as SALT hashed information, so no plaintext passwords are ever saved.
However, if you do not use HTTPS (TLS), be aware that the Authorization header will contain the plaintext password, making it vulnerable to sniffing.
When makes public endpoint, protect communications using HTTPS.

Import packages from another NuGet server
Import all packages from another NuGet server to your local nuget-server instance.
This feature can be used when migrating the foreign NuGet server to nuget-server.
Package import from another NuGet server
Import packages interactively in CLI:
nuget-server --import-packages --package-dir ./packages
This command will:

Prompt for source NuGet server URL
Ask if authentication is required
If needed, prompt for username and password (masked input)
Discover all packages from the source server
Download and import all packages to local storage
Display progress for each package (1% intervals)
Exit after import (server does not start)

Import behavior

Existing packages with the same version will be overwritten
Failed imports are logged with error details
Progress is reported at 1% intervals to reduce log noise
Package icons are preserved during import

Parallel downloads are not done. This is to avoid making a large number of requests to the repository.
This feature is a type of downloader.
Therefore, it does not need to be run on the actual host where it will operate.
You can perform the import process in advance on a separate host and then move the packages directory as-is.
Example session
Starting package import...
Enter source NuGet server URL [http://host.example.com/repository/nuget/]: https://nexus.example.com/repository/nuget/
Does the server require authentication? [y/N]: y
Enter username: reader
Enter password: **********

============================================================
Import Configuration:
Source: https://nexus.example.com/repository/nuget/
Target: ./packages
Authentication: reader (password hidden)
============================================================

Start importing packages? (existing packages will be overwritten) [y/N]: y

Discovering packages from source server...
Found 125 packages with 563 versions total.
Starting package import...
Progress: 100/563 packages (17%) - MyPackage.Core@1.2.3
Progress: 563/563 packages (100%) - AnotherPackage@2.0.0

============================================================
Import Complete!
============================================================
Total packages: 125
Total versions: 563
Successfully imported: 563
Failed: 0
Time elapsed: 125.3 seconds
============================================================


Reverse proxy interoperability
The server supports running behind a reverse proxy.
For example, when you have a public URL like https://nuget.example.com and run nuget-server on a host within your internal network via a gateway.
In such cases, you MUST specify the base URL of the public URL to ensure the NuGet V3 API can provide the correct sub-endpoint address.
URL resolving
The server resolves URLs using the following priority order:

Fixed base URL (highest priority): When --base-url option is specified, it always takes precedence
Trusted proxy headers: When trusted proxies are configured with --trusted-proxies:

HTTP Forwarded header (proto, host, port)
Traditional X-Forwarded-* headers (X-Forwarded-Proto, X-Forwarded-Host, X-Forwarded-Port)


Standard request information (fallback): Uses Host header when proxy headers are not available

For example --base-url option:

nuget-server served public base URL: https://packages.example.com
Actual NuGet V3 API endpoint: https://packages.example.com/v3/index.json

# Configure served base URL (do not include /v3 path)
nuget-server --base-url https://packages.example.com

# Add as NuGet source (HTTPS - no --allow-insecure-connections needed)
dotnet nuget add source https://packages.example.com/v3/index.json \
  -n "packages" --protocol-version 3
Another option, you can configure with trusted proxy addresses:
# Configure trusted proxies for proper host header handling
nuget-server --trusted-proxies "10.0.0.1,192.168.1.100"
Environment variables are also supported:
export NUGET_SERVER_BASE_URL=https://packages.example.com
export NUGET_SERVER_TRUSTED_PROXIES=10.0.0.1,192.168.1.100
export NUGET_SERVER_CONFIG_FILE=/path/to/config.json
export NUGET_SERVER_USERS_FILE=/path/to/users.json
export NUGET_SERVER_SESSION_SECRET=your-secret-key-here

Docker usage
Docker images are available for multiple architectures:

linux/amd64 (x86_64)
linux/arm64 (aarch64)

When pulling the image, Docker automatically selects the appropriate architecture for your platform.
Quick start
Suppose you have configured the following directory structure for persistence (recommended):
docker-instance/
‚îú‚îÄ‚îÄ data/
‚îÇ   ‚îú‚îÄ‚îÄ config.json
‚îÇ   ‚îî‚îÄ‚îÄ user.json
‚îî‚îÄ‚îÄ packages/
    ‚îî‚îÄ‚îÄ (package files)

Execute as follows:
# Pull and run the latest version
docker run -d -p 5963:5963 \
  -v $(pwd)/data:/data \
  -v $(pwd)/packages:/packages \
  kekyo/nuget-server:latest

# Or with Docker Compose
cat > docker-compose.yml << EOF
version: '3'
services:
  nuget-server:
    image: kekyo/nuget-server:latest
    ports:
      - "5963:5963"
    volumes:
      - ./data:/data
      - ./packages:/packages
    environment:
      - NUGET_SERVER_AUTH_MODE=publish
EOF

docker-compose up -d
Your NuGet server is now available at:

Web UI: http://localhost:5963
NuGet V3 API: http://localhost:5963/v3/index.json

Permission requirements
The Docker container runs as the nugetserver user (UID 1001) for security reasons. You need to ensure that the mounted directories have the appropriate permissions for this user to write files.
Set proper permissions for mounted directories:
# Create directories if they don't exist
mkdir -p ./data ./packages

# Set ownership to UID 1001 (matches the container's nugetserver user)
sudo chown -R 1001:1001 ./data ./packages
Important: Without proper permissions, you may encounter 500 Permission Denied errors when:

Creating or updating user accounts
Publishing packages
Writing configuration files

Basic usage
# Run with default settings (port 5963, packages and data stored in mounted volumes)
docker run -p 5963:5963 \
  -v $(pwd)/data:/data \
  -v $(pwd)/packages:/packages \
  kekyo/nuget-server:latest

# With authentication (users.json will be created in /data)
docker run -p 5963:5963 \
  -v $(pwd)/data:/data \
  -v $(pwd)/packages:/packages \
  -e NUGET_SERVER_AUTH_MODE=publish \
  kekyo/nuget-server:latest
You can also change settings using environment variables or command-line options, but the easiest way to configure settings is to use config.json.
Since the Docker image has mount points configured, you can mount /data and /packages as shown in the example above and place /data/config.json there to flexibly configure settings. Below is an example of config.json:
{
  "port": 5963,
  "baseUrl": "http://localhost:5963",
  "realm": "Awsome nuget-server",
  "logLevel": "info",
  "authMode": "publish"
}
When initializing credentials or importing packages, configure config.json and perform the operation via the CLI before launching the Docker image:
# Initialize authentication
nuget-server -c ./data/config.json --auth-init
Volume mounts and configuration

/data: Default data directory for config.json, users.json and other persistent data
/packages: Default package storage directory (mounted to persist packages)

Default behavior: The Docker image runs with --users-file /data/users.json --package-dir /packages by default.
Configuration priority (highest to lowest):

Custom command line arguments (when overriding CMD)
Environment variables (e.g., NUGET_SERVER_PACKAGE_DIR)
config.json file (if explicitly specified)
Default command line arguments in Dockerfile

Example of Automatic Startup Using systemd
Various methods exist for automatically starting containers with systemd.
Below is a simple example of configuring a systemd service using Podman.
This is a simple service unit file used before quadlets were introduced to Podman.
By placing this file and having systemd recognize it, you can automatically start the nuget-server:
/etc/systemd/system/container-nuget-server.service:
# container-nuget-server.service

[Unit]
Description=Podman container-nuget-server.service
Documentation=man:podman-generate-systemd(1)
Wants=network-online.target
After=network-online.target
RequiresMountsFor=%t/containers

[Service]
Environment=PODMAN_SYSTEMD_UNIT=%n
Restart=always
RestartSec=30
TimeoutStopSec=70
ExecStart=/usr/bin/podman run \
        --cidfile=%t/%n.ctr-id \
        --cgroups=no-conmon \
        --rm \
        --sdnotify=conmon \
        --replace \
        -d \
        -p 5963:5963 \
        --name nuget_server \
        -v /export/data:/data -v /export/packages:/packages docker.io/kekyo/nuget-server:latest
ExecStop=/usr/bin/podman stop \
        --ignore -t 10 \
        --cidfile=%t/%n.ctr-id
ExecStopPost=/usr/bin/podman rm \
        -f \
        --ignore -t 10 \
        --cidfile=%t/%n.ctr-id
Type=notify
NotifyAccess=all

[Install]
WantedBy=default.target

Building the Docker image (Advanced)
The build of the nuget-server Docker image uses Podman.
Multi-platform build with Podman (recommended)
Use the provided multi-platform build script that uses Podman to build for all supported architectures:
# Build for all platforms (local only, no push)
./build-docker-multiplatform.sh

# Build and push to Docker Hub
./build-docker-multiplatform.sh --push

# Build for specific platforms only
./build-docker-multiplatform.sh --platforms linux/amd64,linux/arm64

# Push with custom Docker Hub username
OCI_SERVER_USER=yourusername ./build-docker-multiplatform.sh --push

# Inspect existing manifest
./build-docker-multiplatform.sh --inspect
Important: For cross-platform builds, QEMU emulation must be configured first:
# Option 1: Use QEMU container (recommended)
sudo podman run --rm --privileged docker.io/multiarch/qemu-user-static --reset -p yes

# Option 2: Install system packages
# Ubuntu/Debian:
sudo apt-get update && sudo apt-get install -y qemu-user-static
# Fedora/RHEL:
sudo dnf install -y qemu-user-static

# Verify QEMU is working:
podman run --rm --platform linux/arm64 alpine:latest uname -m
# Should output: aarch64
Without QEMU, you can only build for your native architecture.

Note
Non-interactive mode (CI/CD)
The --auth-init and --import-packages options require interactive responses from the operator.
Therefore, attempting to automate these may not work properly.
In such cases, you can provide credentials via environment variables:
export NUGET_SERVER_ADMIN_USERNAME=admin
export NUGET_SERVER_ADMIN_PASSWORD=MySecurePassword123!
nuget-server --auth-init --config-file ./config.json
This allows initialization in CI/CD pipelines without user interaction.
Session Security
For special configurations (or to support persistent sessions), you can set a fixed session secret. Specify a sufficiently long value for the secret:
export NUGET_SERVER_SESSION_SECRET=$(openssl rand -base64 32)
nuget-server
(Or use config.json.)
If not set, a random secret is generated (warning will be logged).
Supported NuGet V3 API endpoints
The server implements a subset of the NuGet V3 API protocol:

Service index: /v3/index.json
Package content: /v3/package/{id}/index.json
Package downloads: /v3/package/{id}/{version}/{filename}
Registration index: /v3/registrations/{id}/index.json


License
Under MIT.
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Zfsbackrest: Pgbackrest style encrypted backups for ZFS filesystems]]></title>
            <link>https://github.com/gargakshit/zfsbackrest</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45092605</guid>
            <description><![CDATA[pgbackrest style encrypted backups for ZFS filesystems - gargakshit/zfsbackrest]]></description>
            <content:encoded><![CDATA[zfsbackrest

‚ö†Ô∏è Experimental:
Do not use it as your only way for backups. This is something I wrote over a
weekend. There's a lot of things that need work here.

pgbackrest style encrypted backups for ZFS
filesystems.
Getting Started
Installing
You need age installed to generate
encryption keys. Encryption is NOT optional.
$ go install github.com/gargakshit/zfsbackrest/cmd/zfsbackrest@latest
Configuring
Create /etc/zfsbackrest.toml.
debug = true # warning, may log sensitive data

[repository]
# zfsbackrest does not support changing the list of datasets after a repository
# is initialized YET. That's one feature I need.
included_datasets = ["storage/*"] # Glob is supported

[repository.s3]
# zfsbackrest does NOT support non-secure S3 endpoints.
endpoint = "todo"
bucket = "todo"
key = "todo"
secret = "todo"
region = "todo"

[repository.expiry]
# Child backups expire if the parent expires. See the model below for a better
# explanation.
full = "336h" # 14 days
diff = "120h" # 5 days
incr = "24h" # 1 day

[upload_concurrency]
full = 2
diff = 4
incr = 4
Creating a repository
$ zfsbackrest init --age-recipient-public-key="<your age public key>"
Backing up
$ zfsbackrest backup --type <full | diff | incr>
full backups are standalone. They do not depend on any other backups. They are
also huge in size because of that.
diff backups are sent incrementally from the latest full backup. They depend
on the parent full backup to be present in the repository to restore.
incr backups are send incrementally from the latest diff backup. They depend
on the parent diff backup to restore.
Viewing the repository
$ zfsbackrest detail
It shows a list of backups, orphans and all.
Cleaning up the repository
Sometimes, orphaned backups are left as an artefact of incomplete or cancelled
backups. You can clean those by running
$ zfsbackrest cleanup --orphans --dry-run=false
You can clean up expired backups by running
$ zfsbackrest cleanup --expired --dru-run=false
Restoring
To restore the backups, you'll need your age identity file (private key).
zfsbackrest restore -i <path-to-age-identity-file> \
  -s <name of the dataset to restore from> \
  -b <optionally, the backup ID to restore from, leave empty to restore the latest> \
  -d <name of the dataset to restore to> # Restoring to a dataset that already exists on your local FS will fail.
Safety
zfsbackrest doesn't write or modify actual zfs datasets. It makes extensive
use of snapshots. List of zfs operations used by zfsbackrest are


backup

zfs snapshot - Creating a zfs snapshot for zfsbackrest
zfs hold - Creating a reference to that snapshot to prevent removal
zfs send - Sending the snapshot incrementally



cleanup / force-destroy

zfs release - Release the held snapshot
zfs destroy - Destroy the snapshot



restore

zfs recv - Receiving the remote snapshot



Model
TODO
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Tetris is NP-hard even with O(1) rows or columns [pdf]]]></title>
            <link>https://martindemaine.org/papers/ThinTetris_JIP/paper.pdf</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45092324</guid>
        </item>
        <item>
            <title><![CDATA[CocoaPods Is Deprecated]]></title>
            <link>https://blog.cocoapods.org/CocoaPods-Specs-Repo/</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45091493</guid>
            <description><![CDATA[The Dependency Manager for iOS & Mac projects]]></description>
            <content:encoded><![CDATA[
        TLDR: In two years we plan to turn CocoaPods trunk to be read-only. At that point, no new versions or pods will be added to trunk. - Note, this post has been updated in May 2025.

Last month I wrote about how CocoaPods is currently being maintained, I also noted that we were discussing converting the main CocoaPods spec repo "trunk" to be read-only:


We are discussing that on a very long, multi-year, basis we can drastically simplify the security of CocoaPods trunk by converting the Specs Repo to be read-only. Infrastructure like the Specs repo and the CDN would still operate as long as GitHub and jsDelivr continue to exist, which is pretty likely to be a very long time. This will keep all existing builds working.


I plan to implement the read-only mode so that when someone submits a new Podspec to CocoaPods, it will always be denied at the server level. I would then convert the "CocoaPods/Specs" repo to be marked as "Archived" on GitHub which should cover all of our bases.

Making the switch will not break builds for people using CocoaPods in 2026 onwards, but at that point, you're not getting any more updates to dependencies which come though CocoaPods trunk. This shouldn't affect people who use CocoaPods with their own specs repos, or have all of their dependencies vendored (e.g. they all come from npm.)

May 2025 Update: Since this post was originally written, we've had enough security researchers abusing scripting capabilities in CocoaPods that we are now introducing a block on allowing new CocoaPods to use the prepare_command field in a Podspec. Any existing Pods using prepare_command are hard-coded to bypass this check.

Timeline

My goal is to send 2 very hard-to-miss notifications en-masse, and then do a test run a month before the final shutdown.

May 2025

We are stopping new CocoaPods from being added which use the prepare_command field

Mid-late 2025

I will email all email addresses for people who have contributed a Podspec, informing them of the impending switch to read-only, and linking them to this blog post.

September-October 2026

I will, again, email all email addresses for people who have contributed a Podspec, informing them of the impending switch to read-only, and linking them to this blog post, noting that they have roughly a month before we do a test run of going read-only.

November 1-7th 2026

I will trigger a test run, giving automation a chance to break early

December 2nd 2026

I will switch trunk to not accept new Podspecs permanently. This is a Wednesday after American Thanksgiving, so I think folks won't be in rush mode.



These dates are not set in stone, and maybe someone out there has a good reason for us to amend the timeline. I don't think I'm amenable to moving it forwards, but within reason there's space for backwards.

If you have questions, you can contact the team via [email¬†protected], me personally at [email¬†protected] or reach out to me via Bluesky: @orta.io.

      ]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[De-Googling TOTP Authenticator Codes]]></title>
            <link>https://imrannazar.com/articles/degoogle-otp</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45091202</guid>
            <description><![CDATA[I've been slowly removing Google apps from my life, and one of the last ones left is Authenticator. In this post I look at migrating codes out of Authenticator to a command-line OTP tool, and the steps involved.]]></description>
            <content:encoded><![CDATA[
   
Back to Articles
1st Sep 2025
In the ongoing effort to extricate myself from Google's services, I've been paring down my usage of their apps on my (admittedly Android) phone. I'm now down to two Google apps I use regularly: Maps (for traffic data) and Authenticator (for TOTP[A]Time-based One Time Password codes).
Now, I spend most of my time in a terminal window on MacOS or connected to a Linux machine; it'd be nice if I could get TOTPs on the command-line, and it turns out there's a utility called oathtool that allows for TOTP generation on the CLI. However, that would mean switching my OTP provider, which usually involves:

 Logging into each service that has an OTP registered in the app;
 Disabling two-factor authentication (2FA);
 Re-enabling 2FA and using the "manual entry" code as input to oathtool;
 Doing it all again for the next website or service.

Fortunately, Google's Authenticator provides a way to migrate codes between instances of the app based on scanning QR codes, and we can use this to migrate them away from Google into a TOTP handler of our choosing. It's another four-step process:

 Generating a QR code in Google Authenticator for the codes you want to export;
 Decoding the QR somewhere off-device, into a URL;
 Decoding the URL into its constituent services and secret values;
 Setting up oathtool to use the secrets.

Note that the below steps are presented just as I went through them, you may be able to find efficiencies or you may run into troubles that I didn't (especially if you're trying this exclusively on Windows); "your mileage may vary" is apt here.
Going from Authenticator to a migration URL
The first step is getting the code out of Authenticator, through the Transfer Codes menu option in the app. Picking the services you'd like to extract leads you to a code like this:

 
 Figure 1: QR code exported from Google AuthenticatorUnrivalled padding between the QR and Next button

You may have an app on your phone that decodes QRs, but I don't; instead, I transferred the file to my MacOS machine over Tailscale, and used a command-line tool called qrtool to get the QR content:

 Decoding the migration QR
 $ brew install qrtool
$ qrtool decode Screenshot_20250901_062719_Authenticator.jpg
otpauth-migration://offline?data=CjwKC2kqSJnNaAyKkw6jEhJUaGUgUmlja3JvbGwgU3RvcmUgASgBMAJCEzg4Yzg5ZTE3NTY3MDQzOTE0MzkQAhgBIAA%3D

Decoding the URL into secrets
So we have our migration URL, with a Base64-encoded data block. Unfortunately, if we were to simply decode the data, we'd end up with some binary gibberish:

 Trying to decode the URL directly
 $ php -r 'var_dump(base64_decode("CjwKC2kqSJnNaAyKkw6jEhJUaGUgUmlja3JvbGwgU3RvcmUgASgBMAJCEzg4Yzg5ZTE3NTY3MDQzOTE0MzkQAhgBIAA%3D"));'
string(69) "
<

i*H??h??√Ω

It turns out that this is a Protobuf-encoded data string, and we need to use Google's Protobuf library to get the data out. It turns out Tim Brooks has already done this with a short piece of Python at: https://github.com/brookst/otpauth_migrate
I decided to install this on a Linux machine I tend to be connected to (entirely unrelated to my Python installation being broken on Mac...):

 Extracting the data via otpauth_migrate
 $ git clone https://github.com/brookst/otpauth_migrate
$ cd otpauth_migrate
$ ./otpauth_migrate.py otpauth-migration://offline?data=CjwKC2kqSJnNaAyKkw6jEhJUaGUgUmlja3JvbGwgU3RvcmUgASgBMAJCEzg4Yzg5ZTE3NTY3MDQzOTE0MzkQAhgBIAA%3D
secret: "i*H\231\315h\014\212\223\016\243"
name: "The Rickroll Store"
algorithm: ALGORITHM_SHA1
digits: DIGIT_COUNT_SIX
type: OTP_TYPE_TOTP

Secret code = NEVERGONNAGIVEYOUM======

This tool is intelligent enough to extract any number of names and secrets from a migration URL, so you can export all your codes from Authenticator into one giant QR without needing to do each separately.
Using oathtool to generate OTPs
The final step is to use this secret code with oathtool, which takes the secret directly as a parameter. If you instead want to refer to the service by name, Michael Bushey[1]"CLI 2-Factor Authentication", Michael Bushey, 2023 has a quick wrapper script which extracts the secrets from a locally-stored file:

 Wrapper script to generate OTPs: /usr/local/bin/otp
 #!/bin/bash
OTPKEY="$(sed -n "s/${1}=//p" ~/.otpkeys)"
if [ -z "$OTPKEY" ]; then
   echo "$(basename $0): Bad Service Name '$1'"
   exit
fi
date
oathtool --totp -b "$OTPKEY"
 OTP key store: ~/.otpkeys
 rickroll=NEVERGONNAGIVEYOUM======

With this in place, you won't need to use your Authenticator app again. The tool outputs the current date and time, so you can double-check that your code won't expire (at :00 seconds) before you get a chance to type it in:

 $ otp rickroll
Mon Sep  1 07:10:42 AM UTC 2025
200213

Future expansion
There's a security issue here, of course, which is the exposed secret key sitting in a file on-disk. I'm happy to sit with that and not require a password to generate OTPs every time, but if you're interested in adapting the wrapper script to use symmetric encryption to secure the keys, Vivek Gite[2]"Use oathtool Linux command line for 2 step verification (2FA)", Vivek Gite, updated Feb 2025 has a set of scripts which employ gpg for the job.
Now I just need to find a way to get traffic data into a maps App that doesn't involve Google's servers... Thoughts welcome.
  
  
 
    
  ]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[UK's largest battery storage facility at Tilbury substation]]></title>
            <link>https://www.nationalgrid.com/national-grid-connects-uks-largest-battery-storage-facility-tilbury-substation</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45091119</guid>
            <description><![CDATA[The 300MW¬†Thurrock Storage project, developed by Statera Energy, is now energised and delivering electricity flexibly to the network across London and the south east.]]></description>
            <content:encoded><![CDATA[    
            National Grid has connected the UK‚Äôs largest battery energy storage system (BESS) to its transmission network at Tilbury substation in Essex.
        The 300MW¬†Thurrock Storage project, developed by Statera Energy, is now energised and delivering electricity flexibly to the network across London and the south east.With a total capacity of 600MWh, Thurrock Storage is capable of powering up to 680,000 homes, and can help to balance supply and demand by soaking up surplus clean electricity and discharging it instantaneously when the grid needs it.Our Tilbury substation once served a coal plant, and with battery connections like this, it‚Äôs today helping to power a more sustainable future for the region and the country.National Grid reinforced its Tilbury substation to ensure the network in the region could safely carry the battery‚Äôs significant additional load, with new protection and control systems installed to ensure a robust connection.The substation previously served the coal-fired Tilbury A and B power stations on adjacent land prior to their demolition, so the connection of the Thurrock Storage facility marks a symbolic transition from coal to clean electricity at the site.John Twomey, director of customer and network development at National Grid Electricity Transmission, said:‚ÄúBattery storage plays a vital role in Britain‚Äôs clean energy transition. Connecting Thurrock Storage, the UK‚Äôs biggest battery, to our transmission network marks a significant step on that journey.‚ÄúOur Tilbury substation once served a coal plant, and with battery connections like this, it‚Äôs today helping to power a more sustainable future for the region and the country.‚ÄùTom Vernon, Statera Energy CEO and founder, said:‚ÄúWe are delighted that Thurrock Storage is now energised, following its successful connection to the grid by National Grid Electricity Transmission. Increasing BESS capacity is essential for supporting the grid when renewable generation, such as solar and wind, is low or changes quickly. It ensures that energy can be stored efficiently and returned to the grid whenever it‚Äôs needed.‚ÄùNational Grid is continuing work at Tilbury substation to connect the 450MW¬†Thurrock Flexible Generation facility, another Statera project that is set to support the energy needs of the region.The connection of the UK‚Äôs biggest battery follows energisation in July of the 373MW Cleve Hill Solar Park in Kent ‚Äì the largest solar plant in the country ‚Äì which National Grid connected to its adjacent Cleve Hill substation.]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Telli (YC F24) is hiring engineers, designers, and interns (on-site in Berlin)]]></title>
            <link>https://hi.telli.com/join-us</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45090216</guid>
        </item>
        <item>
            <title><![CDATA[Preserving Order in Concurrent Go Apps: Three Approaches Compared]]></title>
            <link>https://destel.dev/blog/preserving-order-in-concurrent-go</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45089938</guid>
            <description><![CDATA[Concurrency breaks ordering by design, but sometimes we need both. Explore three methods to preserve order in concurrent Go applications, from standard ReplyTo channels to sophisticated permission passing, with benchmarks and real-world trade-offs.]]></description>
            <content:encoded><![CDATA[ Concurrency is one of Go‚Äôs greatest strengths, but it comes with a fundamental trade-off: when multiple goroutines process data simultaneously, the natural ordering gets scrambled. Most of the time, this is fine ‚Äì unordered processing is enough, it‚Äôs faster and simpler.
But sometimes, order matters.
When Order Matters
Here are three real-world scenarios where preserving order becomes critical:
Real-time Log Enrichment: You‚Äôre processing a high-volume log stream, enriching each entry with user metadata from a database or external API. Sequential processing can‚Äôt keep up with the incoming rate, but concurrent processing breaks the sequence, making the enriched logs unusable for downstream consumers that depend on chronological order.
Finding the First Match in a File List: You need to download a list of files from cloud storage and find the first one containing a specific string. Concurrent downloads are much faster, but they complete out of order ‚Äì the 50th file might finish before the 5th file, so you can‚Äôt simply return the first match you find without knowing if an earlier file also contains the string.
Time Series Data Processing: This scenario inspired my original implementation. I needed to download 90 days of transaction logs (~600MB each), extract some data, then compare consecutive days for trend analysis. Sequential downloads took hours; concurrent downloads could give an order of magnitude speedup, but would destroy the temporal relationships I needed for comparison.
The challenge is clear: we need the speed benefits of concurrent processing without sacrificing the predictability of ordered results. This isn‚Äôt just a theoretical problem ‚Äì it‚Äôs a practical constraint that affects real systems at scale.
In this article, we‚Äôll explore three approaches I‚Äôve developed and used in production Go applications. We‚Äôll build a concurrent OrderedMap function that transforms a channel of inputs into a channel of outputs while preserving order. Through benchmarks of each approach, we‚Äôll understand their trade-offs and discover surprising performance insights along the way.
The Problem: Why Concurrency Breaks Order

Let‚Äôs quickly recall why concurrency messes up ordering. One of the reasons is that goroutines process tasks at different speeds. Another common reason ‚Äì we can‚Äôt predict how exactly goroutines will be scheduled by the Go runtime.
For example, goroutine #2 might finish processing item #50 before goroutine #1 finishes item #10, causing results to arrive out of order. This is the natural behavior of concurrent processing.
If you want to see this in action, here‚Äôs a quick demo the Go playground.
Design Philosophy: Backpressure vs Buffering
The classic approach to ordered concurrency uses some sort of reorder buffer or queue. When a worker calculates a result but it‚Äôs too early to write it to the output, the result gets stored in that buffer until it can be written in the correct order.
In such designs buffers can typically grow without bound. This happens when:

The input is skewed ‚Äì early items take longer to process than later items
Downstream consumers are slow

The algorithms presented below are backpressure-first. If a worker can‚Äôt yet write its result to the output channel, it blocks. This design is memory-bound and preserves the behavior developers expect from Go channels.

Technically speaking, such algorithms also do buffering, but here out-of-order items are held on the stacks of running goroutines. So, to get a larger ‚Äúbuffer‚Äù in these algorithms, you can simply increase the concurrency level. This works well in practice since typically when applications need larger buffers they also need higher concurrency levels.

Establishing a Performance Baseline
To understand the true cost of ordering, we first need a baseline to measure against.
Let‚Äôs implement and benchmark a basic concurrent Map function that doesn‚Äôt preserve order ‚Äì this will show us exactly what overhead the ordering approaches add.
Our Map function transforms an input channel into an output channel using a user-supplied function f. It‚Äôs built on top of a simple worker pool, which spawns multiple goroutines to process input items concurrently.
// Map transforms items from the input channel using n goroutines, and the
// provided function f. Returns a new channel with transformed items.
func Map[A, B any](in <-chan A, n int, f func(A) B) <-chan B {
	out := make(chan B)
	Loop(in, n, out, func(a A) {
		out <- f(a)
	})
	return out
}

// Loop is a worker pool implementation. It calls function f for each 
// item from the input channel using n goroutines. This is a non-blocking function 
// that signals completion by closing the done channel when all work is finished.
func Loop[A, B any](in <-chan A, n int, done chan<- B, f func(A)) {
	var wg sync.WaitGroup

	for i := 0; i < n; i++ {
		wg.Add(1)
		go func() {
			defer wg.Done()
			for a := range in {
				f(a)
			}
		}()
	}

	go func() {
		wg.Wait()
		if done != nil {
			close(done)
		}
	}()
}

// Discard is a non-blocking function that consumes and discards
// all items from the input channel
func Discard[A any](in <-chan A) {
	go func() {
		for range in {
			// Discard the value
		}
	}()
}

func BenchmarkMap(b *testing.B) {
	for _, n := range []int{1, 2, 4, 8, 12, 50} {
		b.Run(fmt.Sprint("n=", n), func(b *testing.B) {
			in := make(chan int)
			defer close(in)
			out := Map(in, n, func(a int) int {
				//time.Sleep(50 * time.Microsecond)
				return a // no-op: just return the original value
			})
			Discard(out)

			b.ReportAllocs()
			b.ResetTimer()

			for i := 0; i < b.N; i++ {
				in <- 10 // write something to the in chan
			}
		})
	}
}
As you can see, Map uses Loop to create a worker pool that processes items concurrently, while Loop itself handles the low-level goroutine management and synchronization. This separation of concerns will become important later when we build our ordered variants.
What exactly are we measuring here? We‚Äôre measuring throughput ‚Äì how fast we can push items through the entire pipeline. Since the Map function creates backpressure (blocking when the pipeline is full), the rate at which we can feed items into the input channel acts as an accurate proxy for overall processing speed.
Let‚Äôs run the benchmark (I used Apple M2 Max laptop to run it):



































GoroutinesTime /opAllocs/op2408.6ns04445.1ns08546.4ns012600.2ns0501053ns0
You might wonder: ‚ÄúShouldn‚Äôt higher concurrency increase throughput?‚Äù In real applications, absolutely ‚Äì but only when there‚Äôs actual work to parallelize. Here I used a trivial no-op transformation to isolate and benchmark the pure overhead of goroutines, channels, and coordination. As expected, this overhead grows with the number of goroutines.
We‚Äôll use this overhead-focused benchmark for comparisons later in the article, but to demonstrate that concurrency improves performance, let‚Äôs run one more benchmark with some work simulated (50Œºs sleep):















































GoroutinesTime /opSpeedupAllocs/op161656ns1.0x0230429ns2.0x0415207ns4.1x087524ns8.2x0125034ns12.2x0501277ns48.3x0
Perfect! Here we see the dramatic benefits of concurrency when there‚Äôs real work to be done. With 50Œºs of work per item, increasing concurrency from 1 to 50 goroutines improves performance by nearly 50x. This demonstrates why concurrent processing is so valuable in real applications.
We‚Äôre now ready to compare the 3 approaches and measure exactly what price we pay for adding order preservation.
Approach 1: ReplyTo Channels
This is probably the most Go-native way to implement ordered concurrency. The ReplyTo pattern is well-known in Go (I also used it in my batching article), but somehow this was the hardest approach for me to explain clearly.
Here‚Äôs how it works:

A packer goroutine creates jobs by attaching a unique replyTo channel to every input item.
Workers process jobs concurrently, and send results through those replyTo channels.
An unpacker goroutine unpacks the values sent via replyTo channels and writes them to the output.

The following diagram illustrates how this pattern in more detail:

The left part of this diagram is sequential (packer and unpacker) while the worker pool on the right operates concurrently. Notice that workers can only send results when the unpacker is ready to receive them, because the replyTo channels are unbuffered. This creates natural backpressure and prevents unnecessary buffering.
func OrderedMap1[A, B any](in <-chan A, n int, f func(A) B) <-chan B {
	type Job struct {
		Item    A
		ReplyTo chan B
	}

	// Packer goroutine.
	// `jobs` chan will be processed by the pool
	// `replies` chan will be consumed by unpacker goroutine
	jobs := make(chan Job)
	replies := make(chan chan B, n)
	go func() {
		for item := range in {
			replyTo := make(chan B)
			jobs <- Job{Item: item, ReplyTo: replyTo}
			replies <- replyTo
		}
		close(jobs)
		close(replies)
	}()

	// Worker pool of n goroutines.
	// Sends results back via replyTo channels
	Loop[Job, any](jobs, n, nil, func(job Job) {
		job.ReplyTo <- f(job.Item) // Calculate the result and send it back
		close(job.ReplyTo)
	})

	// Unpacker goroutine.
	// Unpacks replyTo channels in order and sends results to the `out` channel
	out := make(chan B)
	go func() {
		defer close(out)
		for replyTo := range replies {
			result := <-replyTo
			out <- result
		}
	}()
	return out
}
Performance Results:









































GoroutinesTime /opvs BaselineAllocs/op2818.7ns+410ns14808.9ns+364ns18826.8ns+280ns112825.6ns+225ns150772.3ns-281ns1
This approach introduces up to 410ns of overhead per input item compared to our baseline. Part of this cost comes from allocating a new replyTo channel for every item. Unfortunately, we can‚Äôt use a package level sync.Pool to mitigate this because our function is generic ‚Äì channels for different types can‚Äôt share the same pool.
What‚Äôs also interesting about this result is that the overhead brought by ordering becomes smaller as the number of goroutines grows. At some point even an inversion happens ‚Äì OrderedMap1 becomes faster than Map (-281ns at 50 goroutines).
I haven‚Äôt investigated this phenomenon deeply. I believe it can‚Äôt be caused by inefficiencies inside Map since it‚Äôs already based on the simplest possible channel-based worker pool. One guess that I have is that in Map we have 50 goroutines competing to write into a single output channel. On the contrary, in OrderedMap, despite additional moving parts, only one goroutine is writing to the output.
Let‚Äôs now move on to the next approach.
Approach 2: sync.Cond for Turn-Taking
This was the first algorithm I implemented when I needed ordered concurrency, and it‚Äôs much easier to explain than the ReplyTo approach.
Here we attach an incremental index to each item and send it to the worker pool. Each worker performs the calculation, then waits its turn to write the result to the output channel.
This conditional waiting is implemented using a shared currentIndex variable protected by sync.Cond, a powerful but underused concurrency primitive from the standard library that allows goroutines to wait for specific conditions and be woken up when those conditions change.
Here‚Äôs how the turn-taking mechanism works:

Here, after each write, all workers wake up (using broadcast) and recheck ‚Äúis it my turn?‚Äù condition
func OrderedMap2[A, B any](in <-chan A, n int, f func(A) B) <-chan B {
	type Job struct {
		Item  A
		Index int
	}

	// Indexer goroutine.
	// Assign an index to each item from the input channel
	jobs := make(chan Job)
	go func() {
		i := 0
		for item := range in {
			jobs <- Job{Item: item, Index: i}
			i++
		}
		close(jobs)
	}()

	// Shared state.
	// Index of the next result that must be written to the output channel.
	nextIndex := 0
	cond := sync.NewCond(new(sync.Mutex))

	// Worker pool of n goroutines.
	out := make(chan B)
	Loop(jobs, n, out, func(job Job) {
		result := f(job.Item) // Calculate the result

		// Cond must be used with a locked mutex (see stdlib docs)
		cond.L.Lock()

		// wait until it's our turn to write the result
		for job.Index != nextIndex {
			cond.Wait()
		}

		// Write the result
		out <- result

		// Increment the index and notify all other workers
		nextIndex++
		cond.Broadcast()

		cond.L.Unlock()
	})

	return out
}
Performance Results:









































GoroutinesTime /opvs BaselineAllocs/op2867.7ns+459ns041094ns+649ns081801ns+1255ns0122987ns+2387ns05016074ns+15021ns0
The results are telling ‚Äì no more per-item allocations, which is excellent for memory efficiency. But there‚Äôs a critical flaw: significant performance degradation as goroutine count increases. This happens because of the shared state and the ‚Äúthundering herd‚Äù problem: after each write, all goroutines wake up via cond.Broadcast(), but only one will do useful work.
This inefficiency led me to think: ‚ÄúHow can I wake only the goroutine that should write next?‚Äù And this is how the 3rd approach was born.
Approach 3: Permission Passing Chain
Here‚Äôs the key insight: when is it safe to write output #5? After output #4 was written. Who knows when output #4 was written? The goroutine that wrote it.
In this algorithm, any job must hold the write permission before its worker can send results to the output channel. We chain jobs together so each one knows exactly which job comes next and can pass the permission to it. This is done by attaching two channels to each job: canWrite channel to receive the permission, and nextCanWrite channel to pass the permission to the next job.

This chain structure makes the worker logic remarkably simple:

Calculate: Process the job using the provided function
Wait: Receive the permission from canWrite channel
Write: Send the result to the output channel
Pass: Send the permission to the next job via nextCanWrite channel

Here‚Äôs the diagram that illustrates the whole flow:

The green arrows show how the permission to write is passed from one job to another along the chain. Essentially this is a token-passing algorithm that eliminates the ‚Äúthundering herd‚Äù problem entirely ‚Äì each goroutine wakes exactly one other goroutine, creating efficient point-to-point signaling rather than expensive broadcasts.
Let‚Äôs see how this translates to code. The implementation has two parts: a ‚Äúlinker‚Äù goroutine that builds the chain, and workers that follow the calculate-wait-write-pass pattern:
func OrderedMap3[A, B any](in <-chan A, n int, f func(A) B) <-chan B {
	type Job[A any] struct {
		Item         A
		CanWrite     chan struct{}
		NextCanWrite chan struct{} // canWrite channel of the next job
	}

	// Linker goroutine:
	// Builds a chain of jobs where each has a CanWrite channel attached.
	// Additionally, each job knows about the CanWrite channel of the next job in the chain.
	jobs := make(chan Job[A])
	go func() {
		defer close(jobs)

		var canWrite, nextCanWrite chan struct{}
		nextCanWrite = make(chan struct{}, 1)
		close(nextCanWrite) // the first job can write immediately

		for item := range in {
			canWrite, nextCanWrite = nextCanWrite, make(chan struct{}, 1)
			jobs <- Job[A]{item, canWrite, nextCanWrite}
		}
	}()

	// Worker pool of n goroutines.
	// Jobs pass the write permission along the chain.
	out := make(chan B)
	Loop(jobs, n, out, func(job Job[A]) {
		result := f(job.Item) // Calculate the result

		<-job.CanWrite          // Wait for the write permission
		out <- result           // Write to the output channel
		close(job.NextCanWrite) // Pass the permission to the next job
	})

	return out
}
Performance Results:









































GoroutinesTime /opvs BaselineAllocs/op2927.2ns+519ns14939.8ns+495ns18860.7ns+314ns112823.8ns+224ns150609.8ns-443ns1
Here the result is very similar to what we‚Äôve seen in the ReplyTo approach. Almost the same overhead, the same inversion at higher levels of concurrency, and the same extra allocation per item. But there‚Äôs one difference‚Ä¶
Unlike approach 1, here we‚Äôre allocating a non-generic chan struct{}. This means we can use a package level sync.Pool to eliminate those allocations ‚Äì let‚Äôs explore that next.
Approach 3a: Zero-Allocation Permission Passing Chain
Let‚Äôs create a pool for canWrite channels. Implementation is straightforward ‚Äì the pool itself and make/release functions.
// Package-level pool for canWrite channels
type chainedItem[A any] struct {
	Value        A
	CanWrite     chan struct{}
	NextCanWrite chan struct{} // canWrite channel for the next item
}

var canWritePool sync.Pool

func makeCanWriteChan() chan struct{} {
	ch := canWritePool.Get()
	if ch == nil {
		return make(chan struct{}, 1)
	}
	return ch.(chan struct{})
}

func releaseCanWriteChan(ch chan struct{}) {
	canWritePool.Put(ch)
}
Now let‚Äôs use the pool in the permission passing algorithm. Since channels are reused, we can no longer signal by closing them. Instead workers must read and write empty structs form/to these channels.
func OrderedMap3a[A, B any](in <-chan A, n int, f func(A) B) <-chan B {
	type Job[A any] struct {
		Item         A
		CanWrite     chan struct{}
		NextCanWrite chan struct{} // canWrite channel of the next job
	}

	// Linker goroutine:
	// Builds a chain of jobs where each has a CanWrite channel attached.
	// Additionally, each job knows about the CanWrite channel of the next job in the chain.
	jobs := make(chan Job[A])
	go func() {
		defer close(jobs)

		var canWrite, nextCanWrite chan struct{}
		nextCanWrite = makeCanWriteChan()
		nextCanWrite <- struct{}{} // the first job can write immediately

		for item := range in {
			canWrite, nextCanWrite = nextCanWrite, makeCanWriteChan()
			jobs <- Job[A]{item, canWrite, nextCanWrite}
		}
	}()

	// Worker pool of n goroutines.
	// Jobs pass the write permission along the chain.
	out := make(chan B)
	Loop(jobs, n, out, func(job Job[A]) {
		result := f(job.Item) // Calculate the result

		<-job.CanWrite                    // Wait for the write permission
		out <- result                     // Write to the output channel
		releaseCanWriteChan(job.CanWrite) // Release our canWrite channel to the pool
		job.NextCanWrite <- struct{}{}    // Pass the permission to the next job
	})

	return out
}
Performance Results with Pooling:









































GoroutinesTime /opvs BaselineAllocs/op2891.0ns+482ns04916.5ns+471ns08879.5ns+333ns012872.6ns+272ns050657.6ns-395ns0
Perfect! Zero allocations and good performance, meaning less GC pressure for long running jobs. But this approach has one more trick up its sleeve‚Ä¶
One more thing: Building Reusable Abstractions
The permission passing approach has another significant advantage over the ReplyTo method: it controls when to write rather than where to write.
I‚Äôll admit it ‚Äì sometimes I get a bit obsessed with building clean abstractions. When working on rill, I really wanted to extract this ordering logic into something reusable and testable. This ‚Äúwhen vs where‚Äù distinction was an AHA moment for me.
Since the algorithm doesn‚Äôt care where the outputs are written, it‚Äôs easy to abstract it into a separate function ‚Äì OrderedLoop. The API is very similar to the Loop function we used before, but here the user function receives two arguments ‚Äì an item and a canWrite channel. It‚Äôs important that the user function must read from the canWrite channel exactly once to avoid deadlocks or undefined behavior.
func OrderedLoop[A, B any](in <-chan A, done chan<- B, n int, f func(a A, canWrite <-chan struct{})) {
	type Job[A any] struct {
		Item         A
		CanWrite     chan struct{}
		NextCanWrite chan struct{} // canWrite channel of the next job
	}

	// Linker goroutine:
	// Builds a chain of jobs where each has a CanWrite channel attached.
	// Additionally, each job knows about the CanWrite channel of the next job in the chain.
	jobs := make(chan Job[A])
	go func() {
		defer close(jobs)

		var canWrite, nextCanWrite chan struct{}
		nextCanWrite = makeCanWriteChan()
		nextCanWrite <- struct{}{} // the first job can write immediately

		for item := range in {
			canWrite, nextCanWrite = nextCanWrite, makeCanWriteChan()
			jobs <- Job[A]{item, canWrite, nextCanWrite}
		}
	}()

	// Worker pool of n goroutines.
	// Jobs pass the write permission along the chain.
	Loop(jobs, n, done, func(job Job[A]) {
		f(job.Item, job.CanWrite) // Do the work

		releaseCanWriteChan(job.CanWrite) // Release item's canWrite channel to the pool
		job.NextCanWrite <- struct{}{}    // Pass the permission to the next job
	})
}
The typical usage looks like:
OrderedLoop(in, out, n, func(a A, canWrite <-chan struct{}) {
	// [Do processing here]
	
	// Everything above this line is executed concurrently,
	// everything below it is executed sequentially and in order
	<-canWrite
	
	// [Write results somewhere]
})

With this abstraction in hand it‚Äôs remarkably simple to build any ordered operations. For example OrderedMap becomes just 7 lines of code:
func OrderedMap3b[A, B any](in <-chan A, n int, f func(A) B) <-chan B {
	out := make(chan B)
	OrderedLoop(in, out, n, func(a A, canWrite <-chan struct{}) {
		result := f(a)
		<-canWrite
		out <- result
	})
	return out
}
We can also easily build an OrderedFilter that conditionally writes outputs:
func OrderedFilter[A any](in <-chan A, n int, predicate func(A) bool) <-chan A {
	out := make(chan A)
	OrderedLoop(in, out, n, func(a A, canWrite <-chan struct{}) {
		keep := predicate(a)
		<-canWrite
		if keep {
			out <- a
		}
	})
	return out
}
Or even an OrderedSplit that distributes items to two channels based on a predicate:
func OrderedSplit[A any](in <-chan A, n int, predicate func(A) bool) (<-chan A, <-chan A) {
	outTrue := make(chan A)
	outFalse := make(chan A)
	done := make(chan struct{})
	
	OrderedLoop(in, done, n, func(a A, canWrite <-chan struct{}) {
		shouldGoToTrue := predicate(a)
		<-canWrite
		if shouldGoToTrue {
			outTrue <- a
		} else {
			outFalse <- a
		}
	})
	
	go func() {
		<-done
		close(outTrue)
		close(outFalse)
	}()
	
	return outTrue, outFalse
}
Simply put, this abstraction makes building ordered operations trivial.
Performance Comparison
Here‚Äôs how all approaches perform across different concurrency levels:





























































ConcurrencyBaselineApproach 1(ReplyTo)Approach 2(sync.Cond)Approach 3(Permission)Approach 3a(+ Pool)2408.6ns818.7ns867.7ns927.2ns891.0ns4445.1ns808.9ns1094ns939.8ns916.5ns8546.4ns826.8ns1801ns860.7ns879.5ns12600.2ns825.6ns2987ns823.8ns872.6ns501053ns772.3ns16074ns609.8ns657.6nsZero allocs‚úÖ‚ùå‚úÖ‚ùå‚úÖ
Key Takeaways


sync.Cond is a no-go for ordered concurrency ‚Äì While it starts with decent performance at low concurrency, it completely falls apart as goroutine count increases, due to the thundering herd problem.


ReplyTo is a strong contender ‚Äì it adds at most ~500ns of overhead compared to the baseline, but requires one additional allocation per input item, increasing GC pressure.


Permission Passing emerges as the clear winner ‚Äì It has it all:

Good performance: at most ~500ns of overhead compared to the baseline
Zero allocations: Less GC pressure for long running tasks
Clean abstraction: Core synchronization logic can be abstracted away and used to build various concurrent operations.
Maintainability: Separation of concerns and the intuitive ‚Äúcalculate ‚Üí wait ‚Üí write ‚Üí pass‚Äù pattern make code easy to support and reason about



This exploration shows that ordered concurrency doesn‚Äôt have to be expensive. With the right approach, you can have concurrency, ordering and backpressure at the same time. The permission passing pattern, in particular, demonstrates how Go‚Äôs channels can be used creatively to solve complex coordination problems.
Finally, these patterns have been battle-tested in production through rill concurrency toolkit (1.7k üåü on GitHub). It implements Map, OrderedMap, and many other concurrent operations. Rill focuses on composability ‚Äì operations chain together into larger pipelines ‚Äì while adding comprehensive error handling, context-friendly design, and maintaining over 95% test coverage.
Playground Links:

Code from this article
Finding the First Match in a File List example
 ]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Lewis and Clark marked their trail with laxatives]]></title>
            <link>https://offbeatoregon.com/2501d1006d_biliousPills-686.077.html</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45087815</guid>
            <description><![CDATA[AS LEWIS AND CLARK‚ÄôS Corps of Discovery made its way across the continent to Oregon, the men (and woman) of the party probably weren‚Äôt thinking much about their place in history. So they weren‚Äôt taking any particular pains to document their every movement.

There were, however, some particular pains they were experiencing, as a result of a relentlessly low-fiber diet: Everyone was constipated, all the time.

Luckily, they had something that helped with that ‚Äî a lot. The Corps of Discovery left on its journey with a trove of 600 giant pills that the men called ‚Äúthunder-clappers,‚Äù which the soldiers and travelers used to jump-start things when they got bound up. And everyone used them pretty regularly.

And, strange as it seems, that fact is why we know several of their campsites along the way. The main active ingredient in ‚Äúthunder-clappers‚Äù was a mercury salt, which is a pretty stable compound. Archaeologists simply have to search for dimples in the ground ‚Äî which is what old latrine pits often end up looking like, hundreds of years later, after Nature has partly filled them in ‚Äî and take samples of the dirt in them. 

If it comes up with an off-the-charts reading for mercury, well, that‚Äôs a Corps of Discovery pit toilet ‚Äî and the layout of the rest of the campsite can be extrapolated with considerable precision by consulting the military manuals they used to lay out their camps.
												   
(Astoria, Clatsop County; 1800s) --  #ofor #oregonHistory #ORhistory -- 26 Jan 2025 -- By Finn J.D. John]]></description>
            <content:encoded><![CDATA[
			
		
				
		
		
		
        
			ASTORIA, CLATSOP COUNTY; 1800s: 
			
     
    
			  
			  			  
				   Audio version is not yet available
				  
            


		              By Finn J.D. John
			                January 26, 2025
                            
                        
		              
		              AS LEWIS AND CLARK‚ÄôS Corps of Discovery made its way across the continent to Oregon, the men (and woman) of the party probably weren‚Äôt thinking much about their place in history. So they weren‚Äôt taking any particular pains to document their every movement.
            There were, however, some particular pains they were experiencing with every movement, so to speak ... as a result of a relentlessly low-fiber diet: Everyone was constipated, all the time.
            Luckily, they had something that helped with that ‚Äî a lot. The Corps of Discovery left on its journey with a trove of 600 giant pills that the men called ‚Äúthunder-clappers,‚Äù which the soldiers and travelers used to jump-start things when they got bound up. And everyone used them pretty regularly.
            
               
                  The reproduction of Fort Clatsop, built at or near the site of the Corps of Expedition's original buildings. Dr. Rush's Bilious Pills have not been particularly helpful in locating the original Fort Clatsop, long since rotted away ‚Äî either because it hasn‚Äôt been found yet, or because the site of the old pit latrine has been disturbed by farming or logging activities in the years since. (Image: National Parks Service)
                
              
            
            And, strange as it seems, that fact is why we know several of their campsites along the way. The main active ingredient in ‚Äúthunder-clappers‚Äù was a mercury salt, which is a pretty stable compound. Archaeologists simply have to search for dimples in the ground ‚Äî which is what old latrine pits often end up looking like, hundreds of years later, after Nature has partly filled them in ‚Äî and take samples of the dirt in them. 
            If it comes up with an off-the-charts reading for mercury, well, that‚Äôs a Corps of Discovery pit toilet ‚Äî and the layout of the rest of the campsite can be extrapolated with considerable precision by consulting the military manuals they used to lay out their camps.
            
              THESE PILLS WERE the pride and joy of Dr. Benjamin Rush, one of the Founding Fathers and a signer of the Declaration of Independence. Rush was also the man President Thomas Jefferson considered the finest physician in the republic. 
            In that opinion, Jefferson was probably alone, or at least in a small minority. Dr. Rush‚Äôs style of ‚Äúheroic medicine‚Äù had caused his star to fall quite a bit by this time ‚Äî especially after the Philadelphia yellow fever epidemic of 1793, when his patients died at a noticeably higher rate than untreated sufferers. 
            At the time, of course, very little was known about how the human body worked. Physicians were basically theorists, who made educated guesses and did their best. 
            The problem was, the education on which those educated guesses were based varied pretty wildly depending on what school you came from. Homeopathic physicians theorized that giving patients a tiny amount of something that mimicked their symptoms would stimulate the body to cure itself. Eclectic physicians sought cures from herbs and folk remedies. Hydropathic physicians believed hot and cold water, applied externally or internally, was all that was needed. 
            Dr. Rush wasn‚Äôt from one of these schools. He was from the school of mainstream medicine ‚Äî also known as allopathic medicine (although that term is a perjorative today).
            Allopathic medical theory, in the early 1800s, dated from the second century A.D., courtesy of a Roman doctor named Galen. 
            Galen theorized that the human body ran on four different fluids, which he called ‚Äúhumours‚Äù: Blood, phlegm, yellow bile, and black bile. All disease, he claimed, stemmed from an imbalance in these humours.
            Thus, too much blood caused inflammation and fever; the solution was to let a pint or two out. Too much bile caused problems like constipation; the solution was to administer a purgative and let the patient blow out some black bile into a handy chamber-pot, or vomit up some yellow bile ‚Äî or both.
            These interventions sometimes helped, but most of the time they had little or no good effect. So by Rush‚Äôs time, a number of physicians were going on the theory that what was needed was a doubling-down on their theory ‚Äî in a style of practice that they called ‚Äúheroic medicine.‚Äù
            If a sensible dose of a purgative didn‚Äôt get a patient‚Äôs bile back in balance, a ‚Äúheroic‚Äù dose might. If a cup or two of blood didn‚Äôt get the fever down, four or five surely would.          
          
            ¬†
            
              [EDITOR'S NOTE: In "reader view" some phone browsers truncate the story here, algorithmically "assuming" that the second column is advertising. (Most browsers do not recognize this page as mobile-device-friendly; it is designed to be browsed on any device without reflowing, by taking advantage of the "double-tap-to-zoom" function.) If the story ends here on your device, you may have to exit "reader view" (sometimes labeled "Make This Page Mobile Friendly Mode") to continue reading. We apologize for the inconvenience.]
            
            ‚Äî(Jump to top of next column)‚Äî
    

        
           
            A sketch of Fort Clatsop as it would have appeared in 1805. (Image: Oregon Historical Society)
          
        
        
          You can imagine what the result of this philosophy was, when applied to an actual sick person.
        ‚ÄúSome people have stated that the Lewis and Clark Expedition would have been better off if they had taken a trained physician along to care for the numerous problems that they encountered. I totally disagree,‚Äù says physician and historian David Peck. ‚ÄúI think a trained physician would have been overly confident and possibly would have been much more aggressive in their treatment of illnesses, often times to the detriment of the patient.‚Äù
        In lieu of a trained physician, the Corps of Discovery‚Äôs leaders got some basic medical training, along with a bag full of the tools of allopathic intervention: lancets for bleeding patients, blister powder for inducing ‚Äúheat,‚Äù opium products for relieving pain and inducing sleep ‚Äî and purgatives.
        Those purgatives are the heroes of our story today. They came in the form of beefy pills, about four times the size of a standard aspirin tablet, which Rush called ‚ÄúDr. Rush‚Äôs Bilious Pills.‚Äù They contained about 10 grains of calomel and 10 to 15 grains of jalap.
        
           
              This recipe for a milder version of Rush's Bilious Pills comes from the National Formulary in 1945. This image appears in the Lewis and Clark Fort Mandan Foundation's Web site, at which there's a lot more information about the ingredients in this compound. Mercury was still being used as an internal medicine in the 1960s and as a topical antiseptic (chiefly as Mercurochrome) into the 1990s.
            
          
        
        Jalap, the powdered root of a Mexican variety of morning glory, is a natural laxative of considerable power. 
        And calomel ... ah, calomel. Calomel was the wonder drug of the age. Its chemical name is mercury chloride. In large doses (and they don‚Äôt get much larger than 10 grains, or 20 if a fellow takes two of them, as Dr. Rush recommended!) it functions as a savage purgative, causing lengthy and productive sessions in the outhouse and leaving a patient thoroughly depleted and hopefully in full restoration of his bile balance. 
        Calomel also was the only thing known to be effective against syphilis, which was always an issue with military outfits. Whether picked up from a friendly lady in a waterfront St. Louis ‚Äúsporting house‚Äù before the journey, or from an equally friendly Native lady met along the way, syphilis went with soldiers like ice cold milk with an Oreo cookie.
        When symptoms broke out, the patient would be dosed with ‚Äúthunder clappers‚Äù and slathered with topical mercury ointments until he started salivating ferociously, which was a symptom of mild mercury poisoning but at the time was considered a sure sign that the body was purging the sickness out of itself. 
        And yes, a few of the men did end up needing treatment for syphilis. But everyone in the party needed a good laxative ‚Äúon the regular‚Äù (sorry about that). Week after week, hunting parties went out and brought back animals to eat. The explorers lived on almost nothing but meat.
        And this low-fiber diet had predictable results.
        It had another result, too, which was less predictable ‚Äî although highly convenient for later historians. The fact is, mercury chloride is only slightly soluble in human digestion. Plus, the reason it works is, it irritates the tissues of the digestive tract severely, causing the body to expel it just as fast as it possibly can before more damage can be done. So, most of the calomel in any given ‚Äúbilious pill‚Äù gets blown out post-haste in the ensuing ‚Äúpurge.‚Äù
        Then, once out of the body and in the earth, it lasts literally for centuries without breaking down or dissolving away.
        So as Lewis and Clark and their crew made their way across the continent, and across Oregon, they were unknowingly depositing a trail of heavy-metal laxatives along the way ‚Äî a trail that historians and scientists have been able to detect and use to document almost their every, uh, movement.        
        
          
            (Sources: Class lecture in History of American Medicine, October 2009, Univ. of Oregon, by Dr. James Mohr; Or Perish in the Attempt: Wilderness Medicine in the Lewis and Clark Expedition, a book by David J. Peck published in 2002 by Farcountry Press; ‚ÄúFollowing Lewis and Clark‚Äôs Trail of Mercurial Laxatives,‚Äù an article by Marisa Sloan published in the Jan. 29, 2022, issue of Discover Magazine.)
          TAGS: #Archaeology #HeroicMedicine #DavidPeck #Jalap #Syphilis #CorpsOfDiscovery #BenjaminRush #Humours #Medicine #FrontierDoctors #Galen #FortClatsop #Calomel #MercuryPoisoning #Thunderclappers #Constipation #DrJamesMohr #OregonTrail #DrRush's #BiliousPills #Bile #COLUMBIAgorge #CLATSOPcounty
        

		  
          

          
          

      

     
    
		
		    Background image is a postcard, a hand-tinted photograph of Crown Point and the Columbia Gorge Scenic Highway. Here is a link to the Offbeat Oregon article about it, from 2024.
		    Scroll sideways to move the article aside for a better view.
		    
		    Looking for more?
            On our Sortable Master Directory you can search by keywords, locations, or historical timeframes. Hover your mouse over the headlines to read the first few paragraphs (or a summary of the story) in a pop-up box.
            ... or ...		    
		    Home
		    
	      

    
    
  
    

]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[A Linux version of the Procmon Sysinternals tool]]></title>
            <link>https://github.com/microsoft/ProcMon-for-Linux</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45087748</guid>
            <description><![CDATA[A Linux version of the Procmon Sysinternals tool. Contribute to microsoft/ProcMon-for-Linux development by creating an account on GitHub.]]></description>
            <content:encoded><![CDATA[Process Monitor for Linux (Preview) 
Process Monitor (Procmon) is a Linux reimagining of the classic Procmon tool from the Sysinternals suite of tools for Windows.  Procmon provides a convenient and efficient way for Linux developers to trace the syscall activity on the system.

Installation & Usage
Requirements

OS: Ubuntu 18.04 lts
cmake >= 3.14 (build-time only)
libsqlite3-dev >= 3.22 (build-time only)

Install Procmon
Please see installation instructions here.
Build Procmon
Please see build instructions here.
Usage
Usage: procmon [OPTIONS]
   OPTIONS
      -h/--help                Prints this help screen
      -p/--pids                Comma separated list of process IDs to monitor
      -e/--events              Comma separated list of system calls to monitor
      -c/--collect [FILEPATH]  Option to start Procmon in a headless mode
      -f/--file FILEPATH       Open a Procmon trace file
      -l/--log FILEPATH        Log debug traces to file
Examples
The following traces all processes and syscalls on the system:
sudo procmon
The following traces processes with process id 10 and 20:
sudo procmon -p 10,20
The following traces process 20 only syscalls read, write and open at:
sudo procmon -p 20 -e read,write,openat
The following traces process 35 and opens Procmon in headless mode to output all captured events to file procmon.db:
sudo procmon -p 35 -c procmon.db
The following opens a Procmon tracefile, procmon.db, within the Procmon TUI:
sudo procmon -f procmon.db
Feedback

Ask a question on Stack Overflow (tag with ProcmonForLinux)
Request a new feature on GitHub
Vote for popular feature requests
File a bug in GitHub Issues

Contributing
If you are interested in fixing issues and contributing directly to the code base, please see the document How to Contribute, which covers the following:

How to build and run from the source
The development workflow, including debugging and running tests
Coding Guidelines
Submitting pull requests

Please see also our Code of Conduct.
License
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the MIT License.
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[We should have the ability to run any code we want on hardware we own]]></title>
            <link>https://hugotunius.se/2025/08/31/what-every-argument-about-sideloading-gets-wrong.html</link>
            <guid isPermaLink="false">https://news.ycombinator.com/item?id=45087396</guid>
            <description><![CDATA[Refuting the common and flawed argument of]]></description>
            <content:encoded><![CDATA[
  
  Sideloading has been a hot topic for the last decade. Most recently, Google has announced further restrictions on the practice in Android. Many hundreds of comment threads have discussed these changes over the years. One point in particular is always made: ‚ÄúI should be able to run whatever code I want on hardware I own‚Äù. I agree entirely with this point, but within the context of this discussion it‚Äôs moot.


  ‚ÄúI should be able to run whatever code I want on hardware I own‚Äù


When Google restricts your ability to install certain applications they aren‚Äôt constraining what you can do with the hardware you own, they are constraining what you can do using the software they provide with said hardware. It‚Äôs through this control of the operating system that Google is exerting control, not at the hardware layer. You often don‚Äôt have full access to the hardware either and building new operating systems to run on mobile hardware is impossible, or at least much harder than it should be. This is a separate, and I think more fruitful, point to make. Apple is a better case study than Google here. Apple‚Äôs success with iOS partially derives from the tight integration of hardware and software. An iPhone without iOS is a very different product to what we understand an iPhone to be. Forcing Apple to change core tenets of iOS by legislative means would undermine what made the iPhone successful.

You shouldn‚Äôt take away from this that I am some stalwart defender of the two behemoths Apple and Google, far from it. However, our critique shouldn‚Äôt be of the restrictions in place in the operating systems they provide ‚Äì rather, it should focus on the ability to truly run any code we want on hardware we own. In this context this would mean having the ability and documentation to build or install alternative operating systems on this hardware. It should be possible to run Android on an iPhone and manufacturers should be required by law to provide enough technical support and documentation to make the development of new operating systems possible. If you want to play Playstation games on your PS5 you must suffer Sony‚Äôs restrictions, but if you want to convert your PS5 into an emulator running Linux that should be possible.


  
    

]]></content:encoded>
        </item>
    </channel>
</rss>