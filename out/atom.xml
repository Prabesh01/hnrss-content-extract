<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><id>hnrss.org/frontpage</id><title>Hacker News: Front Page</title><updated>2025-10-18T18:41:42.328612+00:00</updated><link href="https://news.ycombinator.com/" rel="alternate"/><link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml" rel="self"/><generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator><subtitle>Hacker News RSS</subtitle><entry><id>https://news.ycombinator.com/item?id=45623917</id><title>The Unix Executable as a Smalltalk Method [pdf]</title><updated>2025-10-18T18:41:52.088159+00:00</updated><content/><link href="https://programmingmadecomplicated.wordpress.com/wp-content/uploads/2025/10/onward25-jakubovic.pdf"/><published>2025-10-18T01:03:22+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45624888</id><title>AMD's Chiplet APU: An Overview of Strix Halo</title><updated>2025-10-18T18:41:51.962324+00:00</updated><content>&lt;doc fingerprint="aff85855953a28bd"&gt;
  &lt;main&gt;
    &lt;p&gt;Hello you fine Internet folks!&lt;/p&gt;
    &lt;p&gt;Today we are looking at AMD’s largest client APU to date, Strix Halo. This is an APU designed to be a true all-in-one mobile processor, able to handle high end CPU and GPU workloads without compromise. Offering a TDP range of 55W to 120W, the chip targets a far higher power envelope compared to standard Strix Point, but eschews the need for dedicated graphics.&lt;/p&gt;
    &lt;p&gt;To get y’all all caught up on the history and specifications of this APU, AMD first announced Strix Halo at CES 2025 earlier this year to much fanfare. Strix Halo is AMD’s first chiplet APU in the consumer market with AMD using Strix Halo as a bit of a show piece for what both CPU and GPU performance can look like with a sufficiently large APU.&lt;/p&gt;
    &lt;p&gt;AMD’s Strix Halo can be equipped with dual 8 core Zen 5 CCDs for a total of 16 cores that feature the same 512b FPU as the desktop parts. This is a change from the more mainstream and monolithic Strix Point APU which has “double-pumped” 256b FPUs similar to Zen 4 for use with AVX512 code. What is similar to the more mainstream Strix Point is the same 5.1GHz max boost clock which is a 600MHz deficit compared to the desktop flagship Zen 5 CPU, the Ryzen 9 9950X.&lt;/p&gt;
    &lt;p&gt;Moving to the 3rd die on a Strix Halo package, a RDNA 3.5 iGPU takes up the majority of the SoC die with 40 compute units, 32MB of Infinity Cache, and a boost clock of up to 2.9GHz placing raw compute capability somewhere between the RX 7600 XT and RX 7700.&lt;/p&gt;
    &lt;p&gt;To feed this chip, AMD has equipped Strix Halo with a 256b LPDDR5X-8000 memory bus, which provides up to 256GB/s shared between all of the components. This is slightly lower than the 288GB/s available to the RX 7600 XT but is much higher than any other APU we have tested.&lt;/p&gt;
    &lt;head rend="h2"&gt;Acknowledgments&lt;/head&gt;
    &lt;p&gt;A massive thank you to both Asus and HP for sending over a ROG Flow Z13 (2025) and a ZBook Ultra G1a 14” for testing which were both equipped with an AMD Ryzen AI Max+ 395. All of the gaming tests were done on the Flow Z13 due to that being a more gaming focused device and all of the microbenchmarking was done on the ZBook Ultra G1a.&lt;/p&gt;
    &lt;head rend="h2"&gt;Memory Subsystem from the CPU’s Perspective&lt;/head&gt;
    &lt;p&gt;Starting with the memory latency from Zen 5’s perspective, we see that the latency difference between Strix Point and Strix Halo is negligible with Strix Point at ~128ns of memory latency and Strix Halo at ~123ns of memory latency. However, as you can see the CPU does not have access to the 32MB of Infinity Cache on the IO die. This behavior was confirmed by Mahesh Subramony during our interview about Strix Halo at CES 2025.&lt;/p&gt;
    &lt;p&gt;While the 123ns DRAM latency seen here is quite good for a mobile part, desktop processors like our 9950X fare much better at 75-80ns.&lt;/p&gt;
    &lt;p&gt;Moving on to memory bandwidth, we see Strix Halo fall into a category of its own of the SoCs we have tested.&lt;/p&gt;
    &lt;p&gt;When doing read-modify-add operations across both CCDs, the 16 Zen 5 cores can pull over 175GB/s of bandwidth from the memory with reads being no slouch at 124GB/s across both CCDs.&lt;/p&gt;
    &lt;p&gt;However, looking at the bandwidth of a single CCD and just like the desktop CPUs a single Strix-Halo CCD only has a 32 byte per cycle read link to the IO die. And just like the desktop chips, the chip to chip link runs at ~2000MHz, which caps out the single CCD read at 64GB/s. Unlike the desktop chips, the write link is 32 bytes per cycle and we are seeing about 43GB/s for the write bandwidth. That brings the total theoretical single CCD bandwidth to 128GB/s and the observed bandwidth is just over 103GB/s.&lt;/p&gt;
    &lt;head rend="h2"&gt;CPU’s Performance&lt;/head&gt;
    &lt;p&gt;The performance of Strix Halo’s CPU packs quite a bit more of a punch than Strix Point’s CPU.&lt;/p&gt;
    &lt;p&gt;Strix Halo’s CPU can match a last generation desktop flagship CPU, the 7950X, in Integer performance despite a 11.7% clock speed delta. And nearly matches AMD current desktop flagship CPU, the 9950X, in Floating Point performance again with a 11.7% clock speed deficit.&lt;/p&gt;
    &lt;p&gt;Looking at the SPEC CPU 2017 Integer subtests and while Strix Halo can’t quite match the desktop 9950X, likely due to the higher memory latency of Strix Halo’s LPDDR5X bus, it does get close in a number of subtests.&lt;/p&gt;
    &lt;p&gt;Moving to the FP subtests and the story is similar to the Integer subtests but Strix Halo can get even closer to the 9950X and even beat it in the fotonik3d subtest.&lt;/p&gt;
    &lt;head rend="h2"&gt;Memory from the GPU’s Perspective&lt;/head&gt;
    &lt;p&gt;Moving to the GPU side of things and this is where Strix Halo really shines. The laptop we used as a comparison to Strix Halo was the HP Omen Transcend 14 2025 with a 5070M equipped which maxed out at about 75 Watts for the GPU.&lt;/p&gt;
    &lt;p&gt;Strix Halo has over double the memory bandwidth of any of the other mobile SoCs that we have tested. However, the RTX 5070 Mobile does have about 50% more memory bandwidth compared to Strix Halo.&lt;/p&gt;
    &lt;p&gt;Looking at the caches of Strix Halo, the Infinity Cache, AKA MALL, is able to deliver over 40% higher bandwidth compared to the 5070M’s L2 while having 33% more capacity. Plus Strix Halo has a 4MB L2 which is capable of providing 2.5TB/s of bandwidth to the GPU.&lt;/p&gt;
    &lt;p&gt;Moving to the latency, the more complex cache layout of Strix Halo does give it a latency advantage after the 128KB with Strix Halo’s L2 being significantly lower latency than the 5070M’s L2 and the larger 32MB MALL that Strix Halo has a similar latency to the 5070M’s L2. And Strix Halo’s memory latency is about 35% lower than the 5070M’s memory latency.&lt;/p&gt;
    &lt;head rend="h2"&gt;The GPU’s Compute Throughput&lt;/head&gt;
    &lt;p&gt;Looking at the floating point throughput, we see that Strix Halo unsurprisingly has about 2.5x the throughput of Strix Point considering it has about two and a half times the number of Compute Units. Strix Halo oftentimes can match or even pull ahead of the 5070 Mobile in terms of throughput. I will note that the FP16 results for the 5070 Mobile are half of what I would expect; the FP16:FP32 ratio for the 5070 Mobile should be 1:1 so I am not positive about what is going on there.&lt;/p&gt;
    &lt;p&gt;Moving to the integer throughput and we see the 5070 Mobile soundly pulling ahead of the Radeon 8060S.&lt;/p&gt;
    &lt;head rend="h2"&gt;GPU Performance&lt;/head&gt;
    &lt;p&gt;Looking at the GPU performance, we see Strix Halo once again shine, with a staggering level of performance available for an iGPU, courtesy of the large CU count paired with relatively high memory bandwidth. Our comparison suite includes several recent iGPU’s from Intel/AMD, along with the newest generation RTX 5070 Mobile @ 75W to act as a reference for mid to high-range laptop dedicated graphics, and the antiquated GTX 1050 as a reference for budget dedicated graphics.&lt;/p&gt;
    &lt;p&gt;Looking at Fluid X3D for a compute-heavy workload, we can see the Radeon 8060S absolutely obliterates the other iGPU’s from Intel/AMD, putting itself firmly in a class above. The 5070 is no slouch though, and still holds a substantial 64.1% lead largely due to the higher memory bandwidth afforded to the 5070M.&lt;/p&gt;
    &lt;p&gt;Switching to gaming workloads with Cyberpunk 2077, we start with a benchmark conducted while on battery power. The gap with other iGPU’s is still wide, but now the 5070M is limited to 55W and exhibits 7.5% worse performance at 1080p low settings when compared to the Radeon 8060S.&lt;/p&gt;
    &lt;p&gt;Finally, moving to wall power and allowing both the Radeon 8060S and 5070M to access the full power limit in CP2077, we can see that the 8060S still pulls ahead at 1080p low by 2.5%, while at 1440p medium we see a reversal, with the 5070M commanding an 8.3% lead. Overall the two provide a comparable experience in Cyberpunk 2077, with changes in settings or power limits adjusting the lead between the two. This is a seriously impressive turnaround for an iGPU working against dedicated graphics, and demonstrates the versatility of the chip in workloads like gaming, where iGPU’s have traditionally struggled.&lt;/p&gt;
    &lt;head rend="h2"&gt;Conclusion&lt;/head&gt;
    &lt;p&gt;Strix Halo follows in the footsteps of many other companies in the goal of designing an SoC for desktop and laptop usage that is truly all encompassing. The CPU and GPU performance is truly a class above standard low power laptop chips, and is even able to compete with larger systems boasting dedicated graphics. CPU performance is especially impressive with a comparable showing to the desktop Zen 5 CPUs. GPU performance is comparable to mid range dedicated graphics, while still offering the efficiency and integration of an iGPU. High end dedicated graphics still have a place above Strix Halo, but the versatility of this design for smaller form factor devices is class leading.&lt;/p&gt;
    &lt;p&gt;However, this is not to say that Strix Halo is perfect. I was hoping to have a section dedicated to the ML performance of Strix Halo in this article, however AMD only just released preview support for Strix Halo in the ROCm 7.0.2 release which came out about a week ago from time of publication. As a result of the long delay between the launch of Strix Halo and the release of ROCm 7.0.2, the ML performance will have to wait until a future article.&lt;/p&gt;
    &lt;p&gt;However, putting aside ROCm, Strix Halo is a very, very cool piece of technology and I would love to see successors to Strix Halo with newer CPU and GPU IP and possibly even larger memory buses similar to Apple’s Max and Ultra series of SoCs with 512b and 1024b memory respectively. AMD has a formula for building bigger APUs with Strix Halo, which opens the door to a lot of interesting hardware possibilities in the future.&lt;/p&gt;
    &lt;p&gt;If you like the content then consider heading over to the Patreon or PayPal if you want to toss a few bucks to Chips and Cheese. Also consider joining the Discord.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://chipsandcheese.com/p/amds-chiplet-apu-an-overview-of-strix"/><published>2025-10-18T04:26:19+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45625251</id><title>StageConnect: Behringer protocol is open source</title><updated>2025-10-18T18:41:51.568849+00:00</updated><content>&lt;doc fingerprint="2d848816fdf04a85"&gt;
  &lt;main&gt;
    &lt;p&gt;This repository contains an Arduino-Library to create a StageConnect device (subordinated node-device as well as controlling main-device) using AnalogDevices AD242x-ICs like the AD2428.&lt;/p&gt;
    &lt;p&gt;StageConnect is based on the automotive A²B and is used to connect the Behringer WING to the Midas DP48, for instance. Analog Devices A²B audio bus is used as the technology basis and uses simple XLR connectors between two devices to transmit 32 channels of uncompressed 48kHz 32bit audio.&lt;/p&gt;
    &lt;p&gt;A StageConnect/A2B main-device uses a virtual I2C-connection through the A2B-link that is routed via the AD242x-IC to the Arduino microcontroller.&lt;/p&gt;
    &lt;p&gt;Include the main-library as well as the I2C-Wrapper-Class, instantiate both classes and setup the Wire-library:&lt;/p&gt;
    &lt;code&gt;#include &amp;lt;StageConnect.h&amp;gt;
#include &amp;lt;ci2c_com.h&amp;gt;

Ci2c_com i2c_com;
StageConnect stageConnect(false, 1, 0xD0, &amp;amp;i2c_com);

void I2C_RxHandler(int numBytes) {...}
void I2C_TxHandler(void) {...}

void setup() {
    Wire.begin(0x3D);
	Wire.onReceive(I2C_RxHandler);
	Wire.onRequest(I2C_TxHandler);
}
&lt;/code&gt;
    &lt;p&gt;stageConnect.update() should be then called every 100ms.&lt;/p&gt;
    &lt;p&gt;Have a look into the example-sketch to learn how to use the callbacks and the mailbox-system to receive channel-names from the host-device.&lt;/p&gt;
    &lt;p&gt;For electrical connection have a look at the following picture showing the connection with the AD2428MINI evaluation board:&lt;/p&gt;
    &lt;p&gt;Analog Devices suggests cable-length of up to 15 meters, while Behringer allows longer cables. The filter-network of the AD242x-chips is quite tricky and needs caution on adjusting the hardware-parameters. Use the schematics of the AD2428MINI as a reference.&lt;/p&gt;
    &lt;p&gt;Read the files in the folder "Documentation" for more information about the configuration-options and technical details regarding the brand- and product-ID as well as the specific commands for the mailbox-system.&lt;/p&gt;
    &lt;p&gt;Please use brand-IDs above 0x80 to prevent interference with other products.&lt;/p&gt;
    &lt;p&gt;Many thanks to MusicTribe/Behringer for sharing detailed information about the used protocol and for the permission to share the code publicly.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/OpenMixerProject/StageConnect"/><published>2025-10-18T05:52:47+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45625848</id><title>Life, Work, Death and the Peasant, Part V: Life in Cycles</title><updated>2025-10-18T18:41:51.128124+00:00</updated><content>&lt;doc fingerprint="3e109b3373c107fb"&gt;
  &lt;main&gt;
    &lt;p&gt;This is the fifth and final part of our series (I, II, IIIa, IIIb, IVa, IVb, IVc, IVd, IVe) looking at the structures of life for pre-modern peasant farmers and showing how historical modeling can help us explore the experiences of people who rarely leave much evidence of their day-to-day personal lives. I’ve been stressing this over and over again, but it is worth repeating, peasant farmers make up a simply majority of all humans who have ever lived, and yet we generally have very little evidence for their lives, because they were rarely literate and thus do not typically write to us.&lt;/p&gt;
    &lt;p&gt;We’ve talked about the patterns of marriage, of birth, of death, of subsistence in farming and spinning and weaving, the innumerable maintenance tasks that keep the household running and the pressures that elite extraction – omnipresent for our peasants – exert on the system.&lt;/p&gt;
    &lt;p&gt;This week I want to try to put it all together, taking our models and transmuting them into a sense of what life in these communities was like, with its hardships and its joys. In particular, this is an effort to take our models – which exist mostly as numbers – and turn them into something approaching a narrative, a digital-to-analog conversion that I hope can capture a bit more of the nature of life for these people. That narrative is going to follow one of the dominant ways early agrarian societies thought about time: not as a linear progression, but as a sequence of cycles, from the smallest to the largest.&lt;/p&gt;
    &lt;p&gt;But first, if you like what you are reading, please share it and if you really like it, you can support this project on Patreon! While I do teach as the academic equivalent of a tenant farmer, tilling the Big Man’s classes, this project is my little plot of freeheld land which enables me to keep working as a writers and scholar. And if you want updates whenever a new post appears, you can click below for email updates or follow me on Twitter and Bluesky and (less frequently) Mastodon (@bretdevereaux@historians.social) for updates when posts go live and my general musings; I have largely shifted over to Bluesky (I maintain some de minimis presence on Twitter), given that it has become a much better place for historical discussion than Twitter.&lt;/p&gt;
    &lt;p&gt;Before we launch in, I am going to be referring to the members of our model households a bunch, so if you need the reference, here is the table showing who is who (by relationship to the householder, whose name is in bold):&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;The Smalls (4 members)&lt;/cell&gt;
        &lt;cell&gt;The Middles (6 members)&lt;/cell&gt;
        &lt;cell&gt;The Biggs (10 members)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Mr. Smalls (M. 40)&lt;p&gt;Householder&lt;/p&gt;&lt;/cell&gt;
        &lt;cell&gt;Widow Middles (F. 46)&lt;p&gt;Mother&lt;/p&gt;&lt;/cell&gt;
        &lt;cell&gt;Widow Biggs (F. 50)&lt;p&gt;Mother&lt;/p&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Mrs. Smalls (F. 32)&lt;p&gt;Wife&lt;/p&gt;&lt;/cell&gt;
        &lt;cell&gt;Mr. Middles Jr. (M. 27)&lt;p&gt;Householder&lt;/p&gt;&lt;/cell&gt;
        &lt;cell&gt;Mr. Matt Biggs (M. 43)&lt;p&gt;Householder&lt;/p&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;John (M. 14)&lt;p&gt;Son&lt;/p&gt;&lt;/cell&gt;
        &lt;cell&gt;Mrs. Middles Jr. (F. 22)&lt;p&gt;Wife&lt;/p&gt;&lt;/cell&gt;
        &lt;cell&gt;Mrs. Maddie Biggs (F. 33)&lt;p&gt;Wife&lt;/p&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Jane (F. 6)&lt;p&gt;Daughter&lt;/p&gt;&lt;/cell&gt;
        &lt;cell&gt;Fanny Middles (F. 4)&lt;p&gt;Daughter&lt;/p&gt;&lt;/cell&gt;
        &lt;cell&gt;Mark Biggs (M. 16)&lt;p&gt;Son&lt;/p&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Freida Middles (F. newborn)&lt;p&gt;Daughter&lt;/p&gt;&lt;/cell&gt;
        &lt;cell&gt;Matilda Biggs (F. 12)&lt;p&gt;Daughter&lt;/p&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Freddie Middles (M. 16)&lt;p&gt;Brother&lt;/p&gt;&lt;/cell&gt;
        &lt;cell&gt;Mary Biggs (F. 8)&lt;p&gt;Daughter&lt;/p&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Mr. Martin Biggs (M. 28)&lt;p&gt;Brother&lt;/p&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Mrs. Martha Biggs (F. 22)&lt;p&gt;Sister-in-Law&lt;/p&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Michael Biggs (M. 4)&lt;p&gt;Nephew&lt;/p&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Melanie Biggs (F. 1)&lt;p&gt;Niece&lt;/p&gt;&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;head rend="h2"&gt;The Shortest Cycles&lt;/head&gt;
    &lt;p&gt;As you may have already teased out of our models, the lives of these peasants work in a series of cycles. There’s a reason agrarian societies of these sort often do not think in terms of time as a linear progression, but instead as a set of ‘ages’ or ‘cycles,’ with the present, in a sense, endlessly repeating in a static sort of rhythm. For these societies technological and social progress, while real is often so slow as to be almost or entirely imperceptible on a normal human lifespan. For instance, we can see that between 1000 and 1800, changes in spinning and loom technology are going to radically change the labor efficiency of that task, but for a peasant in c. 1100, for whom the technology of spinning and weaving has been constant for centuries, that is not obvious. Indeed, consider the peasant woman in c. 1500 working a non-treadle spinning wheel – things might seem almost as static. For a society with limited literacy, she relies on ‘living memory’ to understand change and that technology, introduced in Europe in the 1200s, hasn’t changed massively in three centuries, so that woman’s mother, grandmother, great-grandmother (we’ve already well passed the limit of living memory here), great-great-grandmother, great-great-great-grandmother, and on for close to fifteen generations have been using basically the same device.&lt;/p&gt;
    &lt;p&gt;Change in these societies isn’t always that slow – though when it is faster, it is often traumatic for communities that simply are not built to handle rapid change – but it frequently is. So time doesn’t seem like a march endlessly into the future, but like a wheel spinning. Or more correctly, wheels within wheels, like a clock: there is the spin of seconds, minutes, hours, days and so on – smaller cycles within larger ones, with the largest cycle our peasants, as humans, can observe being their own lifetimes.&lt;/p&gt;
    &lt;p&gt;But let’s start with the smallest cycle: the day.&lt;/p&gt;
    &lt;p&gt;The day begins early, a bit before true sunrise. Contrary to what one might imagine from pop-culture, artificial light, such as is available, is provided by lamps and candles, not torches and is, in any event, expensive. Our peasants rely almost entirely on sunlight instead, so sunlight defines much of this daily cycle. The women are likely to be moving earliest, as they’re expected to prepare breakfast for the men before they set out into the fields or to other tasks. For Mrs. Smalls, the daily set of chores is going to be especially packed as she has to shoulder most of the burden for the household, but by this point little Jane Smalls is an extra helping hand – not old enough yet to do many tasks fully on her own, but already well into the task of learning them.&lt;/p&gt;
    &lt;p&gt;By contrast in the larger households, there’s likely a bit of a division of the morning’s labor between the grown women. Widow Middles might start preparing breakfast – something simple, like pottage – while Mrs. Middles Jr nurses tiny Freida Middles and prepares to head out to fetch water from the well. For The Biggs, water-fetching is one of Matilda Biggs’ chores, while Mary Biggs helps her mother stoke the hearthfire and start warming breakfast. Martha Biggs, of course, has two children, one nursing, to rouse and look after.&lt;/p&gt;
    &lt;p&gt;In all three households, the women work something like a team, directed typically by the eldest matron, dividing tasks. They are rarely alone, nor do they stay forever sedentary in the house. Instead, with children in tow, they are on the move quiet a lot, moving to different parts of the farmhouse – which, recall, includes working and storage spaces as well – as well as heading out to pick up water, heading into the village to check on neighbors and so on. Remember that horizontal social relations in this society aren’t just a nice bit of socializing – maintaining those ties is crucial to the household. If there’s a lot of field work distant from the house, it wouldn’t be unusual for them to also plan to bring lunch out to the men in the field (though equally the men might carry lunch out with them or, if working close to home, return for a hot lunch).&lt;/p&gt;
    &lt;p&gt;As the sun comes up, the men are dressing, gathering tools and eating breakfast. Their work during the day won’t be isolated either: they’ll head out in groups and work in the fields effectively as a team. My best sense is that around seven or eight is when we’d expect to start seeing these boys supporting the farming tasks of their fathers and be expected to function as adults, performing the full range of tasks around fourteen or so, though the exact ages here will vary culture to culture. Just as with the women of the household, the senior adult male is likely to direct the collective labor of the men and boys in his household. For the Smalls, that is simple enough: John is learning how to be a farmer by helping his father, but you can easily imagine these relationships being a bit more complex for Mr. Middles Jr. and Mr. Matt Biggs, both of whom have a grown brother still in the household who is likely to chafe to some degree at the control exerted by the householder (something we’ll come back to).&lt;/p&gt;
    &lt;p&gt;The work day in the fields is likely a full one – in farming, there is always more that could be done, but our farmers are setting their own pace and schedule, with rests as necessary (or at least, as deemed necessary by the head of household). Village farming would often be itself a cooperative effort not only within households but between them, so we might very well see multiple households working together on shared or adjoining plots as well. It is worth remembering that the topography of these villages is not spread out like homesteads: for the most part the farmhouses are nucleated in the village itself, with the fields spread out around them, so walking from one house to the next to visit, ask favors or coordinate group labor is quick enough.&lt;/p&gt;
    &lt;p&gt;In all of these activities – men working in the fields, women working in the home, getting water, moving through the village – our peasants are rarely alone, for better and for worse. For the better, the social aspect of these activities are very strong: they chat with each other while working, they might sing together, they certainly pray together. Horizontal ties are also important to survival – perhaps while going through the village to fetch water, Mrs. Smalls might stop by at the Biggs to speak to Maddie Biggs (a sister, or perhaps a cousin, in these close-knit communities) to see if she can’t get some extra spun thread, perhaps in exchange for some grain, vegetables or such.&lt;/p&gt;
    &lt;p&gt;On the other hand, eyes are always watching and these are societies which expect the individual to place the community first, with individuals valued to the degree that they fill a communal role. There’s very little space for self-expression here and throughout the day, every day our peasants exist within a hierarchy beneath the male head of household. The older women direct the other women and girls, the men direct the boys and the male householder, who by law is the one that owns (or has claim to) the productive asset (land) that enables the household is the final decider on basically everything. But those heads of household are hardly able to make all of their own decisions either, constrained by the need to remain ‘respectable’ in a community that demands conformity and by debt or peonage to the Big Man.&lt;/p&gt;
    &lt;p&gt;There might be a break in the field work around midday. While women in these societies work more hours overall, the physical demands in strength and endurance in field labor are very high, so that midday rest – siesta – is an important way to conserve strength. Artists looking to capture ‘pastoral simplicity’ often seem to depict these sorts of breaks, which can give a deceptive sense of what the farming day is like: periods of rest alternated with periods of quite intense physical labor.&lt;/p&gt;
    &lt;p&gt;While the men are in the fields, the women are working through the myriad maintenance tasks necessary to keep the farm running: storing and preparing food, watching children, cleaning living and work spaces, maintaining the hearthfire and such. The diet was heavily based on grains – wheat, barley and the like would be providing a majority of the calories for most peasants – but that doesn’t mean that other types of food (legumes, meat, vegetables, fruits) were entirely absent, simply that they existed within grain-based system. The proportion of calories coming from grains would have always been high, but varied based on time and place, with wealthier societies having marginally more varied diets; a good ballpark for the calorie proportion of grains is around 75%, higher in some places, lower in others.1&lt;/p&gt;
    &lt;p&gt;That grain might take the form of bread, of course, which once baked could be taken into the field and eaten cold, but equally it could be made into porridge or (thinner) gruel). In all of these societies I’ve investigated, the task of managing food stores fell to women, who had to figure out how to make a meal out of whatever was available. Many foods would thus naturally be seasonal, especially with limited options to preserve meats, fruits or vegetables.2 The frequent recourse was to stews, which could be made with essentially whatever was available, especially if anything was liable to spoil if not eaten soon – ‘perpetual stews‘ kept over relatively long periods with new ingredients added regularly as they became available were one option to ‘use up’ any odd bits of food.&lt;/p&gt;
    &lt;p&gt;It is easy to over-idealize ‘home cooking’ – some peasant women, doubtless, were clever and creative cooks, but when you make all women cook, naturally you are going to have some indifferent or ineffective cooks as well (the same way that when you make all men farm, chances are some of them are not very good farmers). Almost regardless of cooking skill, peasant cuisine would have been mostly remarkably bland by modern standards, based heavily in grains, with few options to add sweet or savory flavors. Alongside the actual cooking of the meals, there’s quite a bit of work involved in cleaning cooking and eating surfaces, as it all has to be done by hand and without the aid of modern cleaning supplies that can loosen things like grease.&lt;/p&gt;
    &lt;p&gt;Our peasant women are also engaged in a mix of childcare activities. Matilda Biggs, at 12 is likely working along side her mother or grandmother effective as an adult; childhood doesn’t last long in these societies and by her age Matilda is already likely a relatively proficient spinner and more than able to help with cooking and other household tasks. Our three households also have a number of teenage boys (John Smalls, 14, Freddie Middles and Mark Biggs, both 16). While they probably aren’t yet legal adults (ages of majority in these societies for young men range from 15 to 21), by those ages these boys are expected to work like adults, so they would be in the fields alongside their fathers and older brothers (and would have been helping out in the fields in some capacity probably since around age 7). Likewise, as noted above, little Jane Smalls is probably transitioning into this state and so while she is with her mother, Mrs. Smalls is increasingly expecting Jane to be an active worker alongside her.&lt;/p&gt;
    &lt;p&gt;For the younger children, the two nursing infants (Freida Middles and Melanie Biggs) are going to need to be with their mothers. However for children in the age 4-7 bracket – too young to really start working, but old enough not to need constant supervision – the parenting style was, somewhat necessarily substantially ‘free range.’ Fanny Middles and Michael Biggs (both 4) might be in this period of their life, which really was the last gasp of ‘childhood’ as we understand it, as a period of play and learning rather than labor. The women (and older girls) of their households will be keeping an eye on them, in between the necessary work tasks the day demands.&lt;/p&gt;
    &lt;p&gt;Throughout all of these activities – cooking, cleaning spaces in the home, cleaning cooking and eating surfaces, watching children – our women are working textiles. For much of Eurasia, that will mean primarily wool, though linen and other fabrics are certainly used. With more capacity for spinning than strictly required, the women of the Middles and the Biggs might focus some of their efforts on producing modestly nicer clothes, while poor harried Mrs. Smalls will have to struggle just to replace worn out clothing. Nothing spun and wove will be wasted: worn out clothes are turned into children’s clothes, patchworks, rags or whatever else they can be used for, until they basically disintegrate.&lt;/p&gt;
    &lt;p&gt;As the sun begins to set, the farming work parties in the fields will start heading back home, while their wives, sisters and daughters prepare the evening meal. The day has had its cycle, from morning tasks, to the main of the work day, to evening tasks and finally, as the sun sets and work is no longer possible without artificial light that is simply too expensive for our peasants to use in any kind of quantity, to sleep. There is almost no dedicated leisure time during the day. There is a regularity to the cycle, a monotony – each day more or less like the one before it and the one after – one imagines it was comforting to some peasants and deeply constricting to others, shaped by the continuing demands of peasant labor (itself structured by the heavy extraction regime they operate under, which consumes the leisure time they might otherwise have). The next day, they’ll rise and repeat the cycle.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Year&lt;/head&gt;
    &lt;p&gt;If that monotony was all there was, one might imagine most peasants would give into despair, but while most days were just like the ones before and after, the peasant calendar had all sorts of cyclical changes. The cyclical nature here is worth stressing: most of the events that broke up the yearly cycle happened every year at roughly the same time, so they too became part of the routine of life. Peasants wouldn’t go ‘on vacation’ (though they might go to war, more on that below) or do other things that we do to disrupt the cycle, but the cycle had its breaks.&lt;/p&gt;
    &lt;p&gt;The next smallest cycle was a more-or-less weekly cycle of days, with a day of rest or religious observance at the week’s end. The Abrahamic faiths all have a weekly day of religious observance on which work is to be avoided or at least limited by religious activity, while the Romans had the nundinae (‘ninth-days’) every eight days (they’re counting inclusively) which were days for rest or attending local markets. So while that tends to mean these societies had six work days out of seven (or seven out of eight) there was, for our peasants, a day that offered, if not a rest, at least a change of pace and a chance to gather for larger social events on a regular schedule.&lt;/p&gt;
    &lt;p&gt;Beyond this was the annual cycle, all-important for farmers whose crops had to be planted and harvested at the correct times. That cycle isn’t universal, but depends on the planting and harvest times for the local major cereal crop. Spring wheat is planted in spring (usually around April) and harvested in late summer or early fall (often in August) while winter wheat is typically planted in early Fall (sometime between late September and November) and harvested in early Summer (typically June or July). These dates shift around a bit depending on local climate as well, which is why I’m offering rough ranges.&lt;/p&gt;
    &lt;p&gt;Using a winter wheat schedule, since that’s what I’m a bit more familiar with, and I am going to follow roughly a Roman agricultural calendar, the Menologium Rusticum Colatianum, but note that the exact timings here would vary depending on local climate and such. Plowing would begin in September; this was hard, backbreaking work (even with a plow-team of animals) but requires relatively few hands and has a decent amount of time for it in the calendar. It’s worth noting that fallowed fields also need to be plowed, usually once each in the fall, spring and summer. October, just before the plants go in the ground, another plowing and manuring. November brings the first labor peak in the planting season (done at the last plowing) and in some cultures we’ll see women in the fields helping get the seed into the ground at this point.3 Beans – an important food in Roman crop rotation and also simply to provide a source of protein – are planted in December.&lt;/p&gt;
    &lt;p&gt;The calendar then lightens a little bit while the plants are in the ground, but this isn’t necessarily ‘spare time’ as months without major pressing agricultural jobs are when our peasants need to do all of the gathering, fixing, preparing and such they can’t do during the hard months. January is a good time for repairing tools, cutting trees, fixing buildings and such (note this is a warmer climate; in a colder one, you’d want your firewood gathering done before winter). Hoeing is done in February. March is a slower month (and not an accident then, that it is the traditional month for the Roman dilectus – if you must call everyone to Rome for the draft, do it in a month that doesn’t have heavy labor demands). April is when sheep are washed and shorn and also when weeding might begin, although on the Roman calendar weeding more properly belongs to May. The big task in June is haymaking (although that may begin in May according to Columella) and then in July comes the harvest, the highest labor-demand part of the year, running into August. As we’ve noted, the harvest brings everyone available out into the fields to reap, thresh and winnow the grain so that it is ready for storage.4 The rest of August is often a break from all of that work – another chance to repair tools, buildings, fences and so on – and then the cycle starts again.&lt;/p&gt;
    &lt;p&gt;That annual calendar, of course, structured agricultural work, determining the kind of labor that our peasants (mostly the men, in this case) but it was also a calendar of anxiety for our peasants. After all, roughly three-quarters of the households annual calories came in during a single month – July in in a winter-wheat region, August if you’ve planted spring wheat. Remember our quote of Theophrastus, “the year bears the harvest, not the field.”5 Meaning harvests were significantly variable one year to the next and as we’ve seen our peasants do not have large margins of error in terms of their production. Most of our model households were already falling short of their ‘respectability’ requirements, but a year where the harvest was, say, 75% (or worse yet, 50%) of its expected yield could put them in serious danger of shortage. The margin of error here is actually tighter than our model suggests: we haven’t accounted, for instance, for spoilage of grain in storage over the year.&lt;/p&gt;
    &lt;p&gt;So our peasants have Janus-like worries, looking forward and looking back. Looking forward, once the seed is in the ground, while our peasants can weed and watch as carefully as they can most of the process is out of their control. Too much rain or too little, weather too hot or too cold, can ruin the harvest (while ideal conditions might produce a ‘bumper crop’ and a good year), but the farmer can only sit and watch and work on other tasks and desperately hope.&lt;/p&gt;
    &lt;p&gt;Hope, because if the harvest is poor and food is short, someone needs to be underfed. The household has to survive and that means the working adults need to have enough strength to do the farming and the household cannot shortchange the seed set aside for the next year. So the first people to tighten their belts and go with less in a shortage are the very old and the very young. Reduced nutrition in turn renders them vulnerable to sickness or injuries that in another year might be easily overcome, with the greatest vulnerability for very young children (for whom sickness can be a significant concern even with modern medicine). The Smalls are perhaps the least vulnerable household here – a bad year might stunt Jane’s growth, leaving her a bit shorter or with other developmental problems, but it probably won’t kill her. But for the Middles and the Biggs, a poorly timed bad year is quite possibly a death sentence for little Freida Middles and Melanie Biggs; it has a distressing chance of claiming Widows Middles and Biggs too.&lt;/p&gt;
    &lt;p&gt;So the peasant farmers plow their fields and plant their seeds and hope.&lt;/p&gt;
    &lt;p&gt;Meanwhile, of course, there is the food from last year’s harvest. Grain is hard to keep in the conditions these peasants can create much longer than a year or two, but it wouldn’t matter too much if they had radically better storage given that they’re barely producing enough for their own needs anyway. The task of preserving, preparing and if necessary, rationing that food generally falls to the women of the household. And they don’t lack for worries either: because the grain all comes in at once, should anything happen to it, the result could still be shortage. And there are a lot of things that can happen to it: pests, spoilage, theft or fire, for instance. So our peasant woman are, each week, keeping track of how much food remains in storage and measuring it out accordingly. If they’ve got more food than necessary, that might allow them to banquet their neighbors or to sell some grain to get tastier foods (e.g. meats) they might not normally have. But if the harvest was poor, or there’s an unwelcome surprise (say, a sack of grain develops mold), then the job suddenly becomes trying desperately to stretch what is there to the next harvest, filling gaps as much as can be done with whatever crops and produce become available in the meantime. And if necessary, knowingly shortchanging the elderly or the little ones to make sure there is enough for the rest.&lt;/p&gt;
    &lt;p&gt;(Of course there is also the peasant woman’s own nutrition to think about. Remember, she is very often pregnant or nursing, which produces substantial nutritional demands on her body, which can endanger her health, potentially cause a pregnancy to miscarry or reduce the amount of nutrients she can pass through nursing to her child, endangering the child’s health. There’s no way out of the calorie calculus: someone has to go short and both our families and mother nature will tend to prioritize health adults over children and the elderly.)&lt;/p&gt;
    &lt;p&gt;So the calendar is a cycle of anxiety, relief and despair: anxiety as the family waits for the harvest, watching the skies for weather and the pantry for its steady depletion. Glorious relief if the harvest is good, the pantry restocked, another year survived and despair if it is poor, which at best likely means seeking aid – with many strings attached – from the Big Man with his Big Estate and at worst means the household loses some of its most vulnerable members, the “vacant seat…and a crutch without an owner.”6&lt;/p&gt;
    &lt;p&gt;But the yearly calendar is not just the harbinger of threat and anxiety: it is also the bringer of joy and society, because the year is studded with festivals, days of rest and social gathering, joy and merry-making. Of course we still have holidays too, but I wonder if we don’t miss their potency to pre-modern farmers because – with, at least for some of us, eight-hour-work-days, two-day weekends and built-in vacation days – they are not our only escape from labor.&lt;/p&gt;
    &lt;p&gt;In any case, for those long days in the fields or the long hours of spinning thread while keeping one eye on the large pot and the other on the tiny tot, our peasants would be looking forward to the next festival, the next feast day, the next major event which might have music and dance and special foods. The break in the monotony of food is a significant one: in addition to peasant families putting in extra effort and deploying their relatively limited access to tastier meats, dairy and such, festivals often served as an opportunity for the ‘Big Men’ to engage in conspicuous wealth display by providing finer foods. In ancient polytheistic cultures, religious festivals generally involved animal sacrifices at scale, paid for by either the state or the very wealthy (often a bit of both) with the meat from those sacrifices cooked and given out to the celebrants, a chance for the elite to cement their hold over the community. In the Middle Ages, certain holidays might include similar traditions, where the local lord or other big man might throw a feast for the commons.&lt;/p&gt;
    &lt;p&gt;Many of these festivals were single-day affairs, but some could be multi-day events, a period for rest, socializing, singing, story-telling, and general merry-making. One very common festival motif was a ‘fool’s feast,’ – a festival predicated around brief social inversion, like the Roman Saturnalia (celebrated in December) or various ‘Feasts of Fools‘ in the Middle Ages. These sorts of festivals often created a space for a kind of tongue-in-cheek parody and mockery of authority and thus potentially a space for the lower classes to ‘let off steam’ in a way that didn’t threaten elite power, reducing the strain created on a society with such tremendous and conspicuous inequality and functionally no social mobility.&lt;/p&gt;
    &lt;p&gt;So our peasants, doing their work, have a lot to look forward to, good and bad. Mrs. Smalls, terribly overworked, might be spinning at home while Jane sweeps out the kitchen and the stew slowly boils, thinking about a coming festival – her household has food to spare so perhaps she’ll sell or exchange some for some fancier foods (perhaps to bake some cakes) to impress her neighbors (though she worries her good kirtle – that’s the top layer of the typical European medieval dress – is getting a born worn, but she’s short on fabric and needs to replace her husband’s work tunic before she can work on a new kirtle). Meanwhile, Mr. Matt and Martin Biggs are nervously watching the sky: everyone in their household has worked as hard as they can, but they need so much land and the tenancy terms for some of it were not good, so they need a good harvest to avoid a shortfall. Everyone adores little Melanie but at just one year old, she’s certainly not out of danger yet for a bad year.&lt;/p&gt;
    &lt;p&gt;John Smalls and Mark Biggs, both young men, are looking forward to that coming festival too, but for the chance to play some games and attend some dances and perhaps try to catch the eyes of some of the eligible girls in the village. Of course they’ll also need to impress those girls’ families – it will be their fathers, in this society, who decide who they marry – but John and Mark both stand to eventually inherit their farms and so have a fair bit to recommend them as matches. Freddie Middles, the same age, is not so fortunate – his brother’s farm, on which he works, is likely to go to a son if Mr. Middles has one and in many of these societies, might still go to his daughters – and so he thoughts drift a little further into the future, as he has relatively little chance of being marriageable in the village (the same, in a decade’s time, will be true of little Michael Biggs, but right now he is still of the playing age).&lt;/p&gt;
    &lt;p&gt;Which leads us now to the larger cycles.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Family Cycles&lt;/head&gt;
    &lt;p&gt;The bigger cycle is the generational cycle. If we think of these households in the long term, they tend to go through broad cycles. The foundational work on this idea is by Alexander Chayanov from work on Russian peasants,7 but as we’ve seen the precise family formation and household structure do vary depending on when peasants marry, mortality rates and also when they form new households (in particular, extended kin-groups and social relationships across multiple households soften the sharp transitions in Chayanov’s basic model).8So the exact cycle is going to vary a bit, but the basic ideas are a good framework.&lt;/p&gt;
    &lt;p&gt;We can think about it very simply thinking in terms of our smallest, simplest household: the Smalls. We can start imagining the Smalls household perhaps 10 years ago when Mr. Smalls is 30 and Mrs. Smalls is 22. John is, at that point, 4 – too young to work – and Jane is not yet born. But as you’ll recall from our childrearing model, while John and Jane are Mrs. Smalls only surviving children in the present, they are unlikely to have been her only children. That age gap between John and Jane is likely to be ‘filled’ by a child – James Smalls – who died at age 2 but 10 years ago is still living (one and a half). Mr. Smalls’ father was still alive then too – 62 years of age – but increasingly limited in his ability to work. When Old Man Smalls died, that left a household with two adults, but 2 small children and thus quite vulnerable, with a low ratio of workers to dependents. That might explain why poor James Smalls didn’t survive and also Mrs. Smalls’ repeated miscarriages: in the bad years, with Mr. Smalls only able to work so much land, food ran short and the children suffered.&lt;/p&gt;
    &lt;p&gt;But now, now John is of working age and Jane will be as well soon. If we imagine the Smalls’ household over the next, say, five years, we might expect Mr. Smalls is likely to be alive and able to work all five years, and John the same, but John Smalls won’t marry and start having his own children for quite some time. Meanwhile, Jane will be more and more helpful for her mother until she hits marriageable age which, as we’ve seen, varies by culture. These are the ‘peak’ years for the household in terms of labor-per-dependent. And while Mrs. Smalls, remembering well how the generosity of neighbors got Jane through a bad year when she was young, is thinking about how to use their increased labor to pay back favors, Mr. Smalls is thinking that he has a chance, in these years, if he works hard, of pulling together just enough money (or other resources) to maybe buy an extra field or two and thereby make the family more secure for generations to come.&lt;/p&gt;
    &lt;p&gt;That aim is possible, but the odds are stacked against him. For one, remember: the yield is born by the year, not the land. So while Mr. Smalls might want a boom harvest year to get a lot of grain to sell to pull together the capital he needs to expand, that bumper year is likely to be a good year for everyone and to cause grain prices to fall accordingly. But of course in a bad year, even the Smalls’ don’t have the wide margin for error to benefit from rising grain prices (unlike the Big Man in his estate).&lt;/p&gt;
    &lt;p&gt;Moreover, most of these peasant societies are dowry societies, meaning that the father of the bride is expected to lay down money, resources or land when his daughter marries and of course Jane must – by the rules of these societies (which we are describing, not endorsing) – must eventually marry. That time is quite a ways off, but Mr. Smalls has to think that in the next 10-15 years he needs to have put together enough of a reserve to provide that dowry, otherwise his failure of foresight will harm her marriage prospects. At the same time, in a decade, John will also be looking to potentially marry. That might bring in a dowry, but it will also in short order mean more children and the family shifting back to that first phase again. Mr. Smalls might seek to delay that marriage, but he can hardly do so forever. So while his household right now is reasonably secure, as peasants go, he is scrimping and saving with the hope that over the next few years he can just barely thread that needle in order to get those extra fields while the family is at its peak productivity…so that John won’t need to suffer through losing four very much wanted children (two to miscarriage, two to infant mortality) like he and Mrs. Smalls did.&lt;/p&gt;
    &lt;p&gt;As an aside, there is a tendency for modern folks and especially modern popular culture to assume that people in the past dreaded the sort of frequently arranged marriages they had, but this isn’t the impression we get. People in the past, after all, tended to share their societies values, and in these societies a lot of value was placed on marriage and the legitimate children it produced. Marriage was, for women especially, but also for most men, a necessary step towards adulthood and status in the community and so in most cases seems to have been anticipated, yearned for and welcomed when it came.&lt;/p&gt;
    &lt;p&gt;So while the Biggs brothers look, worried at the sky and the lack of rain clouds, worried about this year, Mr. Smalls is right there with them, worrying about the future. As humans are wont.&lt;/p&gt;
    &lt;p&gt;All of these households are going through similar cycles: periods where they are more vulnerable and less vulnerable. Though they mostly don’t see it in those terms. Instead, they see it in terms of generational events: the celebration of marriages (always a good occasion for a party), of births and of course of deaths. Alongside the annual festivals, these too create a cycle of anticipations and moments (of both joy and grief). None of our households have an unmarried child of marriageable age (an oversight of mine in plotting them out), but we might well imagine that all three households know that one of the other village households is anticipating the marriage of their daughter to a boy from the next village over and everyone is looking forward to the party that will entail. And, of course, just a few months ago the Middles were celebrating the arrival of little Freida.&lt;/p&gt;
    &lt;p&gt;For most of these peasants, there is no real escape from these cycles: one generation of Smalls, Middles and Biggs after another, each mostly the same as the last. And that is often the cultural ideal of these societies: people are born into roles and the expectation is that they will fill those roles. One day after another, one year after another, one generation after another. And within the vision permitted by a single human life, that pattern mostly holds. John Smalls and Mark Biggs can expect to marry in another 10 or 15 years; that their fathers will pass away perhaps in another 15 to 25 years and that they will then absorb the role of head of household, their wives taking the place their aging mothers held, with a new generation on the way behind them.9&lt;/p&gt;
    &lt;p&gt;Students sometimes find it odd to the point of absurd that these societies often concieve of time generally as cyclical rather than progressive, imagining that time can kind of loop back on itself if you wait long enough. But from this vantage, it doesn’t seem so absurd: the technology and conditions that shape these farmer’s lives largely don’t appear to change without the benefit of longue durée history that they (and even the aristocrats who lord over them) lack. They are so incredibly distant from their pre-farming roots (far more distant from them than they are from us) that they do not remember a time before this kind of living and cannot imagine a time after it. Instead the cycles of their lives seem to stretch out endlessly into the past beyond living memory and into the future beyond imagination.&lt;/p&gt;
    &lt;p&gt;For most of them, at least. For Freddie Middles, the picture is different: his brother inherited the farm and now has children. In societies where girls cannot inherit, Freddie might hope that his brother and sister-in-law will remain without a son – and the odds on that aren’t terrible given the high infant mortality – but in societies where daughters do inherit, he is pretty much already likely out of luck. He can probably remain in his brother’s household and be reasonably safe from want – he’s a good source of labor, so unless his relationship with his brother is really bad Mr. Middles is going to want to keep him around – but as he looks at his future, he’ll never be head of this household and will struggle to marry.&lt;/p&gt;
    &lt;p&gt;A cautious fellow might stay in his place regardless. but Freddie isn’t a cautious fellow. Because the supply of men like Freddie is virtually guaranteed in societies that have such static structures – far too static for the fluid family formation dynamics underneath them – they have ‘release valves’ for this sort of thing – which these societies understand (not entirely unreasonably) as ‘land scarcity’. One very common release valve is military service. If these were families in the Roman Republic, we might expect Freddie to be the sort of fellow who volunteers for additional military service – which both removes his mouth-to-feed from the household, but also offers him the opportunity (however narrow) of getting enough loot and pay to be able to form his own household. Likewise in the Middle Ages and especially in the early modern period, Freddie is the sort of fellow we might see enlist as a mercenary or professional soldier. Alternately, Freddie is precisely the sort of fellow we might see showing up to do some Greek or Phoenician style colonization.&lt;/p&gt;
    &lt;p&gt;In a decade or so, Michael Biggs is likely to be in a similar spot: his Uncle Matt and father Martin had enough of an arrangement to try to squeeze two family units into a single household (which is part of why the Biggs’ are more tightly economically constrained than the other households), but that sort of thing isn’t likely to continue forever. Chances are Mark Biggs, when he becomes the head of the household, would be happy enough to keep Michael on as a worker, but probably not to play host to Michael forming a family with yet more dependents in a household that is already too big. Of course either of these young men might ‘luck out’ with a marriage to a young woman with no brothers who is thus set to inherit her father’s farm (in societies where that inheritance pattern can happen), but some significant number of young men are going to be ‘thrown off’ by this system, providing a small but meaningful ‘floating’ workforce of young men with dim futures in the countryside, to do day-labor in the cities or service in the armies.10&lt;/p&gt;
    &lt;p&gt;It is notable that of the peasants, if we hear about any of them, it is often the peasants shunted through these ‘release values’ to become something else that arrive in our history. But of course I feel the need to note that the future for most such members of the peasantry was pretty grim: most would die poor and frequently young, compared to the tiny handful of unusual successes that make it into our books.&lt;/p&gt;
    &lt;p&gt;But of course, even for Freddie Middles and Michael Biggs, those disappointments are in the future. In the present Freddie has work and Michael has play and both are looking forward to that festival, mostly because they heard tell that Mrs. Smalls is planning to make her village-famous cakes and they remember those fondly from last year.&lt;/p&gt;
    &lt;head rend="h2"&gt;Conclusions&lt;/head&gt;
    &lt;p&gt;This final post in the series is, of course, a bit more ‘made up’ than the rest: I am doing my best to ‘fill in’ the color between the black and white lines of our models. But I think there is value in that, so long as we are reminded that the color is not original, these are ‘colorized’ pictures, not color pictures, to get a sense of what it was like to be a human in these societies.&lt;/p&gt;
    &lt;p&gt;On the one hand you do not work more than a medieval peasant. These households – both the men and women – worked under conditions of extremely low (by modern standards) productivity, meaning they had to put in a ton of labor to get out a fairly small amount of production. We can see that in how limited the surplus they generate under ideal conditions is and even more so just how much labor it takes to keep these families clothed. But we can also see they are also pressed down under the weight of extraction, a regime that squeezes them as hard as it can without quite ever crushing them.&lt;/p&gt;
    &lt;p&gt;That extraction goes to provide for everything else these societies do. It is how the build monuments and temples, how they maintain the lifestyles of the elite, how they provide the time to develop literature, to invent philosophy and mathematics. It is how they feed soldiers, form armies, produce weapons. Everything else that these societies do is done on the backs of these peasants. And from that list, you can easily see great injustice – our peasants could be much better off if our aristocrats were modestly less comfortable. But of course then we also don’t get the Epic of Gilgamesh or innovations in mathematics or engineering, or Greek sculpture, or preserved Greek and Roman literature, painstakingly copied by hand over and over again (mostly by monks being fed off of the produce of – of course – our peasants).&lt;/p&gt;
    &lt;p&gt;And the brutal reality of competition in the pre-industrial world is that agrarian societies which do not find some way to extract resources from their peasants to fund warfare end up conquered by societies which do. There are better and worse ways to do that extraction: it is not the case that the most brutal extraction regimes are the most militarily effective (more on this in my book project; the Roman extraction regime in Italy in the Middle Republic was actually relatively light in terms of taxes, but expected citizen-farmers to support the cost of warfare themselves, which turned out to work really well). But it is the case that the sharp edge of military necessity meant ‘no extraction’ wasn’t a realistic option.&lt;/p&gt;
    &lt;p&gt;So you do not work as much or as hard or with as much difficulty as a medieval or ancient peasant, at least if you are a typical person reading this from an industrialized country.11 But that also doesn’t mean that these peasants lives were nothing but grim starvation.&lt;/p&gt;
    &lt;p&gt;They were humans. They loved and cared about people, they made plans (which often fall through), had hopes and desires tailored to the constraints of the situation they were born into. It is true that, for the most part, they weren’t going anywhere – at least, not on the time scale of a single generation – but that wasn’t typically what they or their society valued. Indeed, major disruptions – which we haven’t dealt with here – were generally of the bad kind. That lifestyle might feel to us to be stultifying and it certainly felt that way for many of our peasants: when factories and jobs in the cities at last did appear, peasants did not have to be chased into them, large numbers of them voluntarily quit the countryside for new horizons and opportunities (to the point that their landlord overseers sometimes scrambled to find ways to prevent them from leaving).&lt;/p&gt;
    &lt;p&gt;But like humans, within the confines of the structures we’ve laid out, they had their full share of joy and grief, of success and hardship, of anxiety and relief. And they liked to have nice things: a nice meal, a carefully made piece of clothing and so on. One of the most striking misconceptions about ancient and medieval peasants is how our popular culture dresses them in brown rags, when these folks made their own clothes and liked to look nice. Their clothes, tools, housewares and homes might have been a lot more worn than ours, perhaps a little thin in places, but they were made and kept with care. It is important not to overcorrect in either direction: the average American closet represents a concentration of wealth that would shock even a rich peasant, but that doesn’t mean peasants went around wearing rags.&lt;/p&gt;
    &lt;p&gt;Likewise, it seems abundantly clear from the evidence we do have that they felt the grief and anxiety every bit as keenly as we do and that they had more of it. But that doesn’t mean their lives were without joy. Indeed, the regular predictable cycles of life left them almost always with something – the next Sunday, the next festival, the next harvest, the next generation – to look forward to with joy and anticipation. If we are shocked by how poor their lives were, they might be shocked by how terrifyingly unstable our lives are – how many people work jobs that effectively didn’t exist a century ago? Or have grandparents who once worked jobs that effectively no longer exist? They might well wonder how we coped with the anxiety of that. At least they knew that their jobs would be there for them, one day after the next, one year after the next, one generation after the next.&lt;/p&gt;
    &lt;p&gt;Perhaps most of all, I hope this sort of project helps to reorient the way some of us think about the past. We’re used to thinking about the past in terms of kings and soldiers, because that is who write to us and thus whose history gets written, to the point that we need to engage in this kind of round-a-bout modeling sometimes to get a solid picture of the structures of pre-modern life. Yet these structures make up the largest part – the majority! – of the entire human experience. Most of humanity lived not like us, nor like our more distant hunter-gatherer ancestors, but as agrarian peasant communities, in societies with very low productivity and high extraction, which changed so slowly the effect was usually imperceptible within a human lifetime.&lt;/p&gt;
    &lt;p&gt;Because of course these peasants were people too, their place in the human story no smaller than yours or mine – but far more numerous.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;We can, for instance, see meat, fish and such becoming a more prominent part of the rural Roman diet from the late Republic onwards, on this see Bowes et al. “Diet, Dining and Subsistence” in The Roman Peasant Project 2009-2014 (2021). My ballpark figure is extrapolated roughly from the estimated Roman military diet suggested by Roth, The Logistics of the Roman Army at War (2012), which is about 60% grain by calories and probably represents something like an upper-limit for non-grains in typical rural peasant diets, given how relatively well paid Roman soldiers in the imperial period were.&lt;/item&gt;
      &lt;item&gt;Of course, limited doesn’t mean none: fruit preserves are known since antiquity and meat can be dried or smoked to enable it to last longer.&lt;/item&gt;
      &lt;item&gt;November on the MRC, but it’s worth noting the agronomists have earlier dates – October in Columella and Palladius. For the full rundown of the Roman agricultural calendar, see K.D. White, Roman Farming (1970), 194-5, but note that White expects you to know some Latin to fully read his appendix (he does not translate the activity labels in the MRC and only summarizes some of them).&lt;/item&gt;
      &lt;item&gt;For heavy wine producing regions, the vintage – the bringing in of the grapes to make wine – is a similar ‘all hands on deck’ season. For the Romans, the vintage (vindemiae) came in October, or September for particularly warm regions.&lt;/item&gt;
      &lt;item&gt;Theophr. Caus. pl. 3.23.5&lt;/item&gt;
      &lt;item&gt;Of course I must note that the Cratchits of A Christmas Carol are not peasants, but the emotion evoked here is the same. Bob Cratchit is a clerk, in A Christmas Carol, a member, albeit quite a poor one, of the urban middle class (of, I should note, an industrializing society, not a pre-industrial one). But I find this story is one of the few ones modern readers in wealthy countries know that connects to this sort of parent’s grief, of realizing that unless economic conditions improve, your little one will wither away and die. What Dickens treats as a unique, striking example of poverty would have been the common experience of almost every peasant household at one time or another.&lt;/item&gt;
      &lt;item&gt;Chayanov, The Theory of Peasant Economy, ed. D. Thorner, et al. (1966)&lt;/item&gt;
      &lt;item&gt;For instance, note this study by E A Hammel.&lt;/item&gt;
      &lt;item&gt;A father dying early leaving a son inheriting the household early is one thing that could make these young fellows marriageable a lot sooner than the normal social convention, while in some societies the marriage of a son might be delayed while his father lives (which, as you might imagine, can create some tensions!).&lt;/item&gt;
      &lt;item&gt;Folks will sometimes ask here ‘what about the clergy’ and the answer for most of these societies is that if there is a professional clergy (the Greeks and Romans do not have one) that is where the ‘excess’ sons and daughters of the elite go, but those doors are often at least partially if not entirely closed to our peasants.&lt;/item&gt;
      &lt;item&gt;Of course there are still countries – a shrinking number – with subsistence economies and also people in wealthy countries who are nevertheless very poor. But ‘some (few) countries’ and ‘some (few) people’ is a far cry from ‘functionally everyone all the time everywhere.’ We’re talking averages and medians here.&lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://acoup.blog/2025/10/17/collections-life-work-death-and-the-peasant-part-v-life-in-cycles/"/><published>2025-10-18T08:31:01+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45626037</id><title>Fast calculation of the distance to cubic Bezier curves on the GPU</title><updated>2025-10-18T18:41:50.157129+00:00</updated><content>&lt;doc fingerprint="7ebb8b95b86f333a"&gt;
  &lt;main&gt;
    &lt;p&gt;Bézier curves are a core building block of text and 2D shapes rendering. There are several approaches to rendering them, but one especially challenging problem, both mathematically and technically, is computing the distance to a Bézier curve. For quadratic curves (one control point), this is fairly accessible, but for cubic (two control points) we're going to see why it is so hard.&lt;/p&gt;
    &lt;p&gt;Having this distance field opens up many rendering possibilities. It's hard, but it's possible; here is a live proof:&lt;/p&gt;
    &lt;p&gt;In this visualization, I'm borrowing your device resources to compute the distance to the curve for every single pixel. The yellow points are the control points of the curve (in white) and the blue zone is a representation of the distance field.&lt;/p&gt;
    &lt;p&gt;Note&lt;/p&gt;
    &lt;p&gt;All the demos and code in this article are self-contained GLSL fragment shaders. Most of the code can be found in the article, but feel free to inspect the source code of any of these WebGL demo for the complete code. They can be run verbatim using ShaderWorkshop.&lt;/p&gt;
    &lt;head rend="h2"&gt;The basic maths&lt;/head&gt;
    &lt;p&gt;In a previous article, we explained that a Bézier curve can be expressed as a polynomial. In our case, a cubic polynomial:&lt;/p&gt;
    &lt;p&gt;Where a, b, c and d are the vector coefficients derived from the start (P_0), end (P_3), and control points (P_1, P_2) using the following formulas (you can refer to the previous article for details):&lt;/p&gt;
    &lt;p&gt;For a given point p in 2D space, the distance to that Bézier curve can be expressed as a length between our curve and p:&lt;/p&gt;
    &lt;p&gt;Our goal is to find the t value where d(t) is the smallest.&lt;/p&gt;
    &lt;p&gt;The length formula has an annoying square root, so we start with the distance squared for simplicity, which we are going to unroll:&lt;/p&gt;
    &lt;p&gt;The derivative of that function will allow us to identify critical points: that is, points where the distance starts growing or reducing. Said differently, solving D'(t)=0 will identify all the maximums and minimums (we're interested in the latter) of D(t) (and thus d(t) as well).&lt;/p&gt;
    &lt;p&gt;It is a bit convoluted in our case but straightforward to compute:&lt;/p&gt;
    &lt;p&gt;A polynomial, this time of degree 5, emerges here. For conciseness, we can express D'(t) polynomial coefficients as a bunch of dot products:&lt;/p&gt;
    &lt;p&gt;Finally, we notice that solving D'(t)=0 is equivalent to solving D'(t)/2 = 0, so we simplify the expression:&lt;/p&gt;
    &lt;p&gt;Assuming we are able to solve this equation, we will get at most 5 values of t, among which we should find the shortest distance from p to the curve. Since t is bound within 0 and 1 (start and end of the curve), we will also have to test the distance at these locations.&lt;/p&gt;
    &lt;p&gt;Note&lt;/p&gt;
    &lt;p&gt;We could also compute the 2nd derivative in order to differentiate minimums from maximums, but simply evaluating the 5(+2) potential t values and keeping the smallest works just fine.&lt;/p&gt;
    &lt;p&gt;The red dot in the blue field is a random point in space. The red lines show which distances are evaluated (at most 5+2) to find the smallest one.&lt;/p&gt;
    &lt;head rend="h3"&gt;Translated to GLSL code&lt;/head&gt;
    &lt;p&gt;Transposing these formulas into code gives us this base template code:&lt;/p&gt;
    &lt;code&gt;float bezier_distance(vec2 p, vec2 p0, vec2 p1, vec2 p2, vec2 p3) {
    // Start by testing the distance to the boundary points at t=0 (p0) and t=1 (p3)
    vec2 dp0 = p0 - p,
         dp3 = p3 - p;
    float dist = min(dot(dp0, dp0), dot(dp3, dp3));

    // Bezier cubic points to polynomial coefficients
    vec2 a = -p0 + 3.0*(p1 - p2) + p3,
         b = 3.0 * (p0 - 2.0*p1 + p2),
         c = 3.0 * (p1 - p0),
         d = p0;

    // Solve D'(t)=0 where D(t) is the distance squared
    vec2 dmp = d - p;
    float da = 3.0 * dot(a, a),
          db = 5.0 * dot(a, b),
          dc = 4.0 * dot(a, c) + 2.0 * dot(b, b),
          dd = 3.0 * (dot(a, dmp) + dot(b, c)),
          de = 2.0 * dot(b, dmp) + dot(c, c),
          df = dot(c, dmp);

    float roots[5];
    int count = root_find5(roots, da, db, dc, dd, de, df);
    for (int i = 0; i &amp;lt; count; i++) {
        float t = roots[i];
        // Evaluate the distance to our point p and keep the smallest
        vec2 dp = ((a * t + b) * t + c) * t + dmp;
        dist = min(dist, dot(dp, dp));
    }

    // We've been working with the squared distance so far, it's time to get its
    // square root
    return sqrt(dist);
}
&lt;/code&gt;
    &lt;p&gt;Note&lt;/p&gt;
    &lt;p&gt;&lt;code&gt;dot(dp,dp)&lt;/code&gt; is a shorthand for the length squared, of course cheaper than
computing &lt;code&gt;length()&lt;/code&gt; which contains a square root.&lt;/p&gt;
    &lt;p&gt;Warning&lt;/p&gt;
    &lt;p&gt;We assume here the root finder only returns the roots that are within [0,1].&lt;/p&gt;
    &lt;p&gt;&lt;code&gt;root_find5()&lt;/code&gt; is our 5th degree root finder, that is the function that gives us
all the t (at most 5) which satisfy:&lt;/p&gt;
    &lt;p&gt;But before we are able to solve that, we need to study the simpler 2nd degree polynomial solving:&lt;/p&gt;
    &lt;head rend="h2"&gt;Solving quadratic polynomial equations&lt;/head&gt;
    &lt;p&gt;Diving into the rabbit hole of solving polynomial numerically will lead you to insanity. But we still have to scratch the surface because superior degree solvers usually rely on it.&lt;/p&gt;
    &lt;p&gt;My favorite quadratic root finding formula is the super simple one introduced by 3Blue1Brown, which involves locating a mid point m from which you get the 2 surrounding roots r:&lt;/p&gt;
    &lt;p&gt;In GLSL, a code to cover most common corner cases would look like this:&lt;/p&gt;
    &lt;code&gt;// Return true if x is not a NaN nor an infinite
// highp is probably mandatory to force IEEE 754 compliance
bool isfinite(highp float x) { return (floatBitsToUint(x) &amp;amp; 0x7f800000u) != 0x7f800000u; }

// Quadratic: solve ax²+bx+c=0
int root_find2(out float r[5], float a, float b, float c) {
    int count = 0;
    float m = -b / (2.*a);
    float d = m*m - c/a;
    if (!isfinite(m) || !isfinite(d)) { // a is (probably) too small
        // Linear: solve bx+c=0
        float s = -c / b;
        if (isfinite(s))
            r[count++] = s;
        return count;
    }
    if (d &amp;lt; 0.) // no root
        return count;
    if (d == 0.) {
        r[count++] = m; // single root
        return count;
    }
    float z = sqrt(d);
    r[count++] = m - z;
    r[count++] = m + z;
    return count;
}
&lt;/code&gt;
    &lt;p&gt;Not quite as straightforward as the math formula, isn't it?&lt;/p&gt;
    &lt;p&gt;We cannot know in advance whether the division is going to succeed, so we do run divisions and only then check if they failed (and assume a reason for the failing). This is much more reliable than an arbitrary epsilon value. We also try to avoid duplicated roots.&lt;/p&gt;
    &lt;p&gt;Note&lt;/p&gt;
    &lt;p&gt;The roots are automatically sorted because z is always positive.&lt;/p&gt;
    &lt;p&gt;Warning&lt;/p&gt;
    &lt;p&gt;&lt;code&gt;isfinite()&lt;/code&gt; may not be as reliable because in GLSL "NaNs are not required
to be generated", meaning some edge case may not be supported depending on
the hardware, drivers, and the current weather in Yokohama.&lt;/p&gt;
    &lt;p&gt;As much as I like it, this implementation might not be the most stable numerically (even though I don't have have strong data to back this claim). Instead, we may prefer the formula from Numerical Recipes:&lt;/p&gt;
    &lt;p&gt;Leading to the following alternative implementation:&lt;/p&gt;
    &lt;code&gt;int root_find2(out float r[5], float a, float b, float c) {
    int count = 0;
    float d = b*b - 4.*a*c;
    if (d &amp;lt; 0.)
        return count;
    if (d == 0.) {
        float s = -.5 * b / a;
        if (isfinite(s))
            r[count++] = s;
        return count;
    }
    float h = sqrt(d);
    float q = -.5 * (b + (b &amp;gt; 0. ? h : -h));
    float r0 = q/a, r1 = c/q;
    if (isfinite(r0)) r[count++] = r0;
    if (isfinite(r1)) r[count++] = r1;
    return count;
}
&lt;/code&gt;
    &lt;p&gt;This is not perfect at all (especially with the b²-4ac part). There are actually many other possible implementations, and this HAL CNRS paper shows how near impossible it is to make a correct one. It is an interesting but depressing read, especially since it "only" covers IEEE 754 floats, and we have no such guarantee on GPUs. We also don't have &lt;code&gt;fma()&lt;/code&gt; in
WebGL, which greatly limits improvements. For now, it will have to do.&lt;/p&gt;
    &lt;head rend="h2"&gt;Solving quintic polynomial equations: attempt 1&lt;/head&gt;
    &lt;p&gt;Solving polynomials of degree 5 cannot be solved analytically like quadratics. And even if they were, we probably wouldn't do it because of numerical instability. Typically, in my experience, analytical 3rd degree polynomials solver do not provide reliable results.&lt;/p&gt;
    &lt;p&gt;The first iterative algorithm I picked was the Aberth–Ehrlich method. Nowadays, more appropriate algorithms exist, but at the time I started messing up with these problems (several years ago), it was a fairly good contender. This video explores how it works.&lt;/p&gt;
    &lt;p&gt;The convergence to the roots is quick, and it's overall simple to implement. But it's not without flaws. The main problem is that it works in complex space. We can't ignore the complex roots because they all "respond" to each others. And filtering these roots out at the end implies some unreliable arbitrary threshold mechanism (we keep the root only when the imaginary part is close to 0).&lt;/p&gt;
    &lt;p&gt;The initialization process also annoyingly requires you to come up with a guess at what the roots are, and doesn't provide anything relevant. Aberth-Ehrlich works by refining these initial roots, similar to a more elaborate Newton iterations algorithm. Choosing better initial estimates leads to a faster convergence (meaning less iterations).&lt;/p&gt;
    &lt;p&gt;The Cauchy bound specifies a space by defining the radius of a disk (complex numbers are in 2D space) where all the roots of a polynomial should lie within. We are going to use it for the initial guess, and more specifically its "tight" version (which unfortunately relies on &lt;code&gt;pow()&lt;/code&gt;).&lt;/p&gt;
    &lt;p&gt;Since Aberth-Ehrlich is a refinement and not just a shrinking process, we define and use an inner disk that has half the area of Cauchy bound disk. That way, we're more likely to start with initial guesses spread in the "middle" of the roots; this is where the √2 comes from in the formula below.&lt;/p&gt;
    &lt;code&gt;#define K5_0 vec2( 0.951056516295154,  0.309016994374947)
#define K5_1 vec2( 0.000000000000000,  1.000000000000000)
#define K5_2 vec2(-0.951056516295154,  0.309016994374948)
#define K5_3 vec2(-0.587785252292473, -0.809016994374947)
#define K5_4 vec2( 0.587785252292473, -0.809016994374948)

int root_find5_aberth(out float roots[5], float a, float b, float c, float d, float e, float f) {
    // Initial candidates set mid-way of the tight Cauchy bound estimate
    float r = (1.0 + max_5(
        pow(abs(b/a), 1.0/5.0),
        pow(abs(c/a), 1.0/4.0),
        pow(abs(d/a), 1.0/3.0),
        pow(abs(e/a), 1.0/2.0),
            abs(f/a))) / sqrt(2.0);

    // Spread in a circle
    vec2 r0 = r * K5_0,
         r1 = r * K5_1,
         r2 = r * K5_2,
         r3 = r * K5_3,
         r4 = r * K5_4;
&lt;/code&gt;
    &lt;p&gt;The circle constants are generated with the following script:&lt;/p&gt;
    &lt;code&gt;import math
import sys

n = int(sys.argv[1])
for k in range(n):
    angle = 2 * math.pi / n
    off = math.pi / (2 * n)
    z = angle * k + off
    c, s = math.cos(z), math.sin(z)
    print(f"#define K{n}_{k} vec2({c:18.15f}, {s:18.15f})")
&lt;/code&gt;
    &lt;p&gt;Next, it's basically a simple iterative process. Unrolling everything for degree 5 looks like this:&lt;/p&gt;
    &lt;code&gt;#define close_to_zero(x) (abs(x) &amp;lt; eps)

// This also filters out roots out of the [0,1] range
#define ADD_ROOT_IF_REAL(r) if (close_to_zero(r.y) &amp;amp;&amp;amp; r.x &amp;gt;= 0. &amp;amp;&amp;amp; r.x &amp;lt;= 1.) roots[count++] = r.x

#define SMALL_OFF(off) (dot(off, off) &amp;lt;= eps*eps)

/* Complex multiply, divide, inverse */
vec2 c_mul(vec2 a, vec2 b) { return mat2(a, -a.y, a.x) * b; }
vec2 c_div(vec2 a, vec2 b) { return mat2(a, a.y, -a.x) * b / dot(b, b); }
vec2 c_inv(vec2 z)         { return vec2(z.x, -z.y) / dot(z, z); }

// Compute f(x)/f'(x): complex polynomial evaluation (y) divided by their
// derivatives (q) using Horner's method in one pass
vec2 c_poly5d4(float a, float b, float c, float d, float e, float f, vec2 x) {
    vec2 y =       a*x  + vec2(b, 0), q =       a*x  + y;
         y = c_mul(y,x) + vec2(c, 0); q = c_mul(q,x) + y;
         y = c_mul(y,x) + vec2(d, 0); q = c_mul(q,x) + y;
         y = c_mul(y,x) + vec2(e, 0); q = c_mul(q,x) + y;
         y = c_mul(y,x) + vec2(f, 0);
    return c_div(y, q);
}

vec2 sum_of_inv(vec2 z0, vec2 z1, vec2 z2, vec2 z3, vec2 z4) { return c_inv(z0 - z1) + c_inv(z0 - z2) + c_inv(z0 - z3) + c_inv(z0 - z4); }

int root_find5_aberth(out float roots[5], float a, float b, float c, float d, float e, float f) {
    if (close_to_zero(a))
        return root_find4_aberth(roots, b, c, d, e, f);

    // Code snip: see previous snippet
    // float r = ...
    // vec2 r0, r1, r2, ... 

    for (int m = 0; m &amp;lt; 16; m++) {
        vec2 d0 = c_poly5d4(a, b, c, d, e, f, r0),
             d1 = c_poly5d4(a, b, c, d, e, f, r1),
             d2 = c_poly5d4(a, b, c, d, e, f, r2),
             d3 = c_poly5d4(a, b, c, d, e, f, r3),
             d4 = c_poly5d4(a, b, c, d, e, f, r4);

        vec2 off0 = c_div(d0, vec2(1,0) - c_mul(d0, sum_of_inv(r0, r1, r2, r3, r4))),
             off1 = c_div(d1, vec2(1,0) - c_mul(d1, sum_of_inv(r1, r0, r2, r3, r4))),
             off2 = c_div(d2, vec2(1,0) - c_mul(d2, sum_of_inv(r2, r0, r1, r3, r4))),
             off3 = c_div(d3, vec2(1,0) - c_mul(d3, sum_of_inv(r3, r0, r1, r2, r4))),
             off4 = c_div(d4, vec2(1,0) - c_mul(d4, sum_of_inv(r4, r0, r1, r2, r3)));

        r0 -= off0;
        r1 -= off1;
        r2 -= off2;
        r3 -= off3;
        r4 -= off4;

        if (SMALL_OFF(off0) &amp;amp;&amp;amp; SMALL_OFF(off1) &amp;amp;&amp;amp; SMALL_OFF(off2) &amp;amp;&amp;amp; SMALL_OFF(off3) &amp;amp;&amp;amp; SMALL_OFF(off4))
            break;
    }

    int count = 0;
    ADD_ROOT_IF_REAL(r0);
    ADD_ROOT_IF_REAL(r1);
    ADD_ROOT_IF_REAL(r2);
    ADD_ROOT_IF_REAL(r3);
    ADD_ROOT_IF_REAL(r4);
    return count;
}
&lt;/code&gt;
    &lt;p&gt;When the main coefficient is too small, we fall back on the 4th degree (and so on until we reach the analytic quadratic). The 4th and 3rd degree versions of this function are easy to guess (they're pretty much identical, just removing one coefficient at each degree).&lt;/p&gt;
    &lt;p&gt;We're also hardcoding a maximum of 16 iterations here because it's usually enough. To have an idea of how many iterations are required in practice, following is a visualization of the heat map of the number of iterations for every pixel:&lt;/p&gt;
    &lt;p&gt;The big picture and the weaknesses of the algorithm should be pretty obvious by now. Among all drawbacks of this approach, there are also surprising pathological cases where the algorithm is not performing well. Fortunately, there were some progress on the state of the art in recent years.&lt;/p&gt;
    &lt;head rend="h2"&gt;Solving quintic polynomial equations: the state of the art&lt;/head&gt;
    &lt;p&gt;In 2022, Cem Yuksel published a new algorithm for polynomial root solving. Initially I had my reservations because the official implementation had a few shortcomings on some edge cases, which made me question its reliability. It's also optimized for CPU computation and is, to my very personal taste, overly complex.&lt;/p&gt;
    &lt;p&gt;Fortunately, Christoph Peters showed that it was possible on the GPU by implementing it for very large degrees, and without any recursion. Inspired by that, I decided to unroll it myself for degree 5.&lt;/p&gt;
    &lt;p&gt;One core difference with Aberth approach is that it is designed for arbitrary ranges. In our case this is actually convenient because, due to how Bézier curves are defined, we are only interested in roots between 0 and 1. We will need to adjust the Quadratic function to work in this range, as well as keeping the roots ordered:&lt;/p&gt;
    &lt;code&gt;     }
     float h = sqrt(d);
     float q = -.5 * (b + (b &amp;gt; 0. ? h : -h));
-    float r0 = q/a, r1 = c/q;
-    if (isfinite(r0)) r[count++] = r0;
-    if (isfinite(r1)) r[count++] = r1;
+    vec2 v = vec2(q/a, c/q);
+    if (v.x &amp;gt; v.y) v.xy = v.yx; // keep them ordered
+    if (isfinite(v.x) &amp;amp;&amp;amp; v.x &amp;gt;= 0. &amp;amp;&amp;amp; v.x &amp;lt;= 1.) r[count++] = v.x;
+    if (isfinite(v.y) &amp;amp;&amp;amp; v.y &amp;gt;= 0. &amp;amp;&amp;amp; v.y &amp;lt;= 1.) r[count++] = v.y;
     return r;
 }
&lt;/code&gt;
    &lt;p&gt;The core logic of the algorithm relies on a cascade of derivatives for every degree. Christoph Peters provides an analytic formula to obtain the derivative for any degree. This is a huge helper when we need to work for an arbitrary degree, but in our case we can just differentiate manually:&lt;/p&gt;
    &lt;p&gt;Since we're only interested in the roots, similar to what we did to D(t), we can simplify some of these expressions:&lt;/p&gt;
    &lt;p&gt;The purpose of that cascade of derivatives is to cut the curve into monotonic segments. In practice, the core function looks like this:&lt;/p&gt;
    &lt;code&gt;int root_find5_cy(out float r[5], float a, float b, float c, float d, float e, float f) {
    float r2[5], r3[5], r4[5];
    int n = root_find2(r2,          10.*a, 4.*b,    c);            // degree 2
    n = cy_find5(r3, r2, n, 0. ,0., 10.*a, 6.*b, 3.*c,   d);       // degree 3
    n = cy_find5(r4, r3, n,     0.,  5.*a, 4.*b, 3.*c, d+d, e);    // degree 4
    n = cy_find5(r,  r4, n,             a,    b,    c,   d, e, f); // degree 5
    reutnr n;
}
&lt;/code&gt;
    &lt;p&gt;We could unroll &lt;code&gt;cy_find3&lt;/code&gt;, &lt;code&gt;cy_find4&lt;/code&gt;, and &lt;code&gt;cy_find5&lt;/code&gt;, but to keep the
code simple, the degree 3 to 5 will share the same function, with leading
coefficients set to 0 (hopefully the compiler does its job properly).&lt;/p&gt;
    &lt;p&gt;&lt;code&gt;cy_find5&lt;/code&gt; relies on roots found (at most 4) at previous stages to define
intervals of search:&lt;/p&gt;
    &lt;p&gt;Such an approach has the nice side effect of keeping the roots ordered.&lt;/p&gt;
    &lt;p&gt;The solver itself is not that complex either:&lt;/p&gt;
    &lt;code&gt;float poly5(float a, float b, float c, float d, float e, float f, float t) {
     return ((((a * t + b) * t + c) * t + d) * t + e) * t + f;
}

// Quintic: solve ax⁵+bx⁴+cx³+dx²+ex+f=0
iint cy_find5(out float r[5], float r4[5], int n, float a, float b, float c, float d, float e, float f) {
    int count = 0;
    vec2 p = vec2(0, poly5(a,b,c,d,e,f, 0.));
    for (int i = 0; i &amp;lt;= n; i++) {
        float x = i == n ? 1. : r4[i],
              y = poly5(a,b,c,d,e,f, x);
        if (p.y * y &amp;gt; 0.)
            continue;
        float v = bisect5(a,b,c,d,e,f, vec2(p.x,x), vec2(p.y,y));
        r[count++] = v;
        p = vec2(x, y);
    }
    return count;
}
&lt;/code&gt;
    &lt;p&gt;The last brick of the algorithm is the Newton bisection, the slowest part:&lt;/p&gt;
    &lt;code&gt;// Newton bisection
//
// a,b,c,d,e,f: 5th degree polynomial parameters
// t: x-axis boundaries
// v: respectively f(t.x) and f(t.y)
float bisect5(float a, float b, float c, float d, float e, float f, vec2 t, vec2 v) {
    float x = (t.x+t.y) * .5; // mid point
    float s = v.x &amp;lt; v.y ? 1. : -1.; // sign flip
    for (int i = 0; i &amp;lt; 32; i++) {
        // Evaluate polynomial (y) and its derivative (q) using Horner's method in one pass
        float y = a*x + b, q = a*x + y;
              y = y*x + c; q = q*x + y;
              y = y*x + d; q = q*x + y;
              y = y*x + e; q = q*x + y;
              y = y*x + f;

        t = s*y &amp;lt; 0. ? vec2(x, t.y) : vec2(t.x, x);
        float next = x - y/q; // Newton iteration
        next = next &amp;gt;= t.x &amp;amp;&amp;amp; next &amp;lt;= t.y ? next : (t.x+t.y) * .5;
        if (abs(next - x) &amp;lt; eps)
            return next;
        x = next;
    }
    return x;
}
&lt;/code&gt;
    &lt;p&gt;And that's pretty much it. Looking at its heat map, it has a completely different look than Aberth:&lt;/p&gt;
    &lt;p&gt;The number of iterations might be larger but it is much faster (I observed a factor 3 on my machine), the code is shorter, and actually more reliable.&lt;/p&gt;
    &lt;p&gt;Note&lt;/p&gt;
    &lt;p&gt;The scale used to represent the heat map is not the same as the one used in Aberth, but it is identical with the method presented in the next section.&lt;/p&gt;
    &lt;head rend="h2"&gt;Exploring ITP convergence&lt;/head&gt;
    &lt;p&gt;The bisection being the hot loop, it is interesting to ponder how to make this faster. A while back, Raph Levien hypothesized about how the ITP method could perform. Out of curiosity, I gave it a chance. The function is designed to work like a bisection, claiming to be as performant in the worst case.&lt;/p&gt;
    &lt;p&gt;There isn't a lot of code, and the paper provides a pseudo-code. But implementing it was actually challenging in many ways.&lt;/p&gt;
    &lt;p&gt;First of all, the authors didn't seem to find relevant to mention that it only works if f(a)&amp;lt;0&amp;lt;f(b). If f(a)&amp;gt;0&amp;gt;f(b), you're pretty much on your own. It requires just 2 lines of adjustments but figuring out this shortcoming of the algorithm was particularly unexpected.&lt;/p&gt;
    &lt;p&gt;Another bothering aspect concerns the parameters: K_1, K_2 and n_0. The paper proposes those:&lt;/p&gt;
    &lt;p&gt;I played with them for a while and couldn't find any set that would make a real difference, so I ended up with the following:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;For performance reasons, reducing K_2 to a value of 2 saves a call to &lt;code&gt;pow()&lt;/code&gt;.&lt;/item&gt;
      &lt;item&gt;For K_1, CRAN seems to suggest \frac{0.2}{b-a} so I went along with it&lt;/item&gt;
      &lt;item&gt;And for n_0, well 1 or 2 seem to be the usual parameter.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;In the end, the function looks like this:&lt;/p&gt;
    &lt;code&gt;// ITP algorithm (2020) by Oliveira &amp;amp; Takahashi
// "An Enhancement of the Bisection Method Average Performance Preserving Minmax Optimality"
//
// a,b,c,d,e,f: 5th degree polynomial parameters
// t: x-axis boundaries (a and b in the paper)
// v: respectively f(a) and f(b) in the paper (evaluation of the function with t.x and t.y)
float itp5(float a, float b, float c, float d, float e, float f, vec2 t, vec2 v) {
    float diff = t.y-t.x;

    // K1 and n0 suggested by CRAN
    float K1 = .2 / diff;
    int n0 = 1;

    // The paper has the assumption that f(a)&amp;lt;0&amp;lt;f(b) but we want to
    // support f(a)&amp;gt;0&amp;gt;f(b) too, so we keep a sign flip
    float s = v.x &amp;lt; v.y ? 1. : -1.;

    // Using log(ab)=log(a)+log(b): log2(x/(2ε)) &amp;lt;=&amp;gt; log2(x/ε)-1
    int nh = int(ceil(log2(diff/eps)-1.)); // n_{1/2} (half point)
    int n_max = nh + n0;

    // ε 2^(n_max-k) = ε 2^n_max 2^-k = ε 2^n_max ½^k
    // ½^k is done iteratively in the loop, simplifying the arithmetic
    float q = eps * float(1&amp;lt;&amp;lt;n_max);

    while (diff &amp;gt; eps+eps) {
        // Interpolation
        float xf = (v.y*t.x - v.x*t.y) / (v.y-v.x); // Regula-Falsi

        // Truncation
        float xh = (t.x+t.y) * .5; // x half point
        float sigma = sign(xh - xf);
        float delta = K1*diff*diff; // save a pow() by forcing K2=2
        float xt = delta &amp;lt;= abs(xh - xf) ? xf + sigma*delta : xh; // xt: truncation of xf

        // Projection
        float r = q - diff*.5;
        float x = abs(xt-xh) &amp;lt;= r ? xt : xh-sigma*r;

        // Updating
        float y = poly5(a,b,c,d,e,f, x);
        float side = s*y;
        if      (side &amp;gt; 0.) t.y=x, v.y=y;
        else if (side &amp;lt; 0.) t.x=x, v.x=y;
        else                return x;

        diff = t.y-t.x;
        q *= .5;
    }
    return (t.x+t.y) * .5;
}
&lt;/code&gt;
    &lt;p&gt;This function can be used as a drop'in replacement for &lt;code&gt;bisect5&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;I had a lot of expectations about it, but in the end it requires more iterations than the bisection we implemented. The paper claims to perform at least as good as a bisection, but our &lt;code&gt;bisect5&lt;/code&gt; is driven by the derivatives so it converges
much faster. Here is the heat map with &lt;code&gt;itp5&lt;/code&gt; instead of &lt;code&gt;bisect5&lt;/code&gt;:&lt;/p&gt;
    &lt;head rend="h2"&gt;Conclusion&lt;/head&gt;
    &lt;p&gt;The naive unrolled version of Cem Yuksel paper definitely is, so far, the best choice for our problem. I have still concerns about how to implement a good quadratic formula, and I have my reservations about various edge cases. There is also still room for improvements in the cubic solver (degree 3) because it's still a special case where analytical formulas exist, but in general this implementation is satisfying.&lt;/p&gt;
    &lt;p&gt;The next step is to work with chains of Bézier curves to make up complex shapes (such as font glyphs). It will lead us to build a signed distance field. This is not trivial at all and mandates one or several dedicated articles. We will hopefully study these subjects in the not-so-distant future.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://blog.pkh.me/p/46-fast-calculation-of-the-distance-to-cubic-bezier-curves-on-the-gpu.html"/><published>2025-10-18T09:25:30+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45626130</id><title>./watch</title><updated>2025-10-18T18:41:50.072538+00:00</updated><link href="https://dotslashwatch.com/"/><published>2025-10-18T09:55:06+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45626910</id><title>The IDEs we had 30 years ago ... and we lost (2023)</title><updated>2025-10-18T18:41:49.987823+00:00</updated><content/><link href="https://blogsystem5.substack.com/p/the-ides-we-had-30-years-ago-and"/><published>2025-10-18T12:44:16+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45626961</id><title>Lux: A luxurious package manager for Lua</title><updated>2025-10-18T18:41:49.568412+00:00</updated><content>&lt;doc fingerprint="ac056e38d961f788"&gt;
  &lt;main&gt;
    &lt;head rend="h4"&gt;A luxurious package manager for Lua.&lt;/head&gt;
    &lt;p&gt;Key Features • How To Use • Comparison with Luarocks • Related Projects • Contributing&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Create and manage Lua projects &lt;list rend="ul"&gt;&lt;item&gt;Easily manage dependencies, build steps and more through the &lt;code&gt;lux.toml&lt;/code&gt;file.&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Easily manage dependencies, build steps and more through the &lt;/item&gt;
      &lt;item&gt;Parallel builds and installs 🚀&lt;/item&gt;
      &lt;item&gt;Add/remove dependencies with simple CLI commands&lt;/item&gt;
      &lt;item&gt;Automatic generation of rockspecs &lt;list rend="ul"&gt;&lt;item&gt;Say goodbye to managing 10 different rockspec files in your source code 🎉&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Integrated code formatting via &lt;code&gt;lx fmt&lt;/code&gt;&lt;list rend="ul"&gt;&lt;item&gt;Powered by &lt;code&gt;stylua&lt;/code&gt;.&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Powered by &lt;/item&gt;
      &lt;item&gt;Easily specify compatible Lua versions &lt;list rend="ul"&gt;&lt;item&gt;Lux will take care of Lua header installation automatically&lt;/item&gt;&lt;item&gt;Forget about users complaining they have the wrong Lua headers installed on their system&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Automatic EmmyLua/LuaCATS based type checking via &lt;code&gt;lx check&lt;/code&gt;&lt;list rend="ul"&gt;&lt;item&gt;Powered by &lt;code&gt;emmylua-analyzer-rust&lt;/code&gt;&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Powered by &lt;/item&gt;
      &lt;item&gt;Automatic code linting via &lt;code&gt;lx lint&lt;/code&gt;&lt;list rend="ul"&gt;&lt;item&gt;Powered by &lt;code&gt;luacheck&lt;/code&gt;&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Powered by &lt;/item&gt;
      &lt;item&gt;Powerful lockfile support &lt;list rend="ul"&gt;&lt;item&gt;Makes for fully reproducible developer environments.&lt;/item&gt;&lt;item&gt;Makes Lux easy to integrate with Nix!&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Fully compatible &lt;list rend="ul"&gt;&lt;item&gt;Works with existing luarocks packages.&lt;/item&gt;&lt;item&gt;Have a complex rockspec that you don't want to rewrite to TOML? No problem! Lux allows the creation of an &lt;code&gt;extra.rockspec&lt;/code&gt;file, everything just works.&lt;/item&gt;&lt;item&gt;Have a very complex build script? Lux can shell out to &lt;code&gt;luarocks&lt;/code&gt;if it knows it has to preserve maximum compatibility.&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Automatically adds project dependencies to a &lt;code&gt;.luarc.json&lt;/code&gt;file so they can be picked up by&lt;code&gt;lua-language-server&lt;/code&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Warning&lt;/p&gt;
    &lt;p&gt;Lux, while generally functional, is a work in progress and does not have a &lt;code&gt;1.0&lt;/code&gt; release yet.&lt;/p&gt;
    &lt;p&gt;Feel free to consult the documentation on how to get started with Lux!&lt;/p&gt;
    &lt;p&gt;It features a tutorial and several guides to make you good at managing Lua projects.&lt;/p&gt;
    &lt;p&gt;As this project is still a work in progress, some luarocks features have not been (fully) implemented yet. On the other hand, lux has some features that are not present in luarocks.&lt;/p&gt;
    &lt;p&gt;The following table provides a brief comparison:&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="3"&gt;
        &lt;cell role="head"&gt;lux&lt;/cell&gt;
        &lt;cell role="head"&gt;luarocks v3.12.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;project format&lt;/cell&gt;
        &lt;cell&gt;TOML / Lua&lt;/cell&gt;
        &lt;cell&gt;Lua&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;add/remove dependencies&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
        &lt;cell&gt;❌&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;parallel builds/installs&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
        &lt;cell&gt;❌&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;proper lockfile support with integrity checks&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
        &lt;cell&gt;❌ (basic, dependency versions only)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;run tests with busted&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;linting with luacheck&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
        &lt;cell&gt;❌&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;code formatting with stylua&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
        &lt;cell&gt;❌&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;automatic lua detection/installation&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
        &lt;cell&gt;❌&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;default build specs&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;custom build backends&lt;/cell&gt;
        &lt;cell&gt;✅1&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;&lt;code&gt;rust-mlua&lt;/code&gt; build spec&lt;/cell&gt;
        &lt;cell&gt;✅ (builtin)&lt;/cell&gt;
        &lt;cell&gt;✅ (external build backend)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;&lt;code&gt;treesitter-parser&lt;/code&gt; build spec&lt;/cell&gt;
        &lt;cell&gt;✅ (builtin)&lt;/cell&gt;
        &lt;cell&gt;✅ (external build backend)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;install pre-built binary rocks&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;install multiple packages with a single command&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
        &lt;cell&gt;❌&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;install packages using version constraints&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
        &lt;cell&gt;❌&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;auto-detect external dependencies and Lua headers with &lt;code&gt;pkg-config&lt;/code&gt;&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
        &lt;cell&gt;❌&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;resolve multiple versions of the same dependency at runtime&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;pack and upload pre-built binary rocks&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;luarocks.org manifest namespaces&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;luarocks.org dev packages&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;versioning&lt;/cell&gt;
        &lt;cell&gt;SemVer2&lt;/cell&gt;
        &lt;cell&gt;arbitrary&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;rockspecs with CVS/Mercurial/SVN/SSCM sources&lt;/cell&gt;
        &lt;cell&gt;❌ (YAGNI3)&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;static type checking&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
        &lt;cell&gt;❌&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;generate a &lt;code&gt;.luarc&lt;/code&gt; file with dependencies&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
        &lt;cell&gt;❌&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;git dependencies in local projects&lt;/cell&gt;
        &lt;cell&gt;✅&lt;/cell&gt;
        &lt;cell&gt;❌&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Lux includes the following packages and libraries:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;lux-cli&lt;/code&gt;: The main CLI for interacting with projects and installing Lua packages from the command line.&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;lux-lua&lt;/code&gt;: The Lux Lua API, which provides:&lt;list rend="ul"&gt;&lt;item&gt;&lt;code&gt;lux.loader&lt;/code&gt;for resolving dependencies on&lt;code&gt;require&lt;/code&gt;at runtime.&lt;/item&gt;&lt;item&gt;A work-in-progress API for embedding Lux into Lua applications. We provide builds of &lt;code&gt;lux-lua&lt;/code&gt;for Lua 5.1, 5.2, 5.3, 5.4 and Luajit.&lt;code&gt;lux-cli&lt;/code&gt;uses&lt;code&gt;lux-lua&lt;/code&gt;for commands like&lt;code&gt;lx lua&lt;/code&gt;,&lt;code&gt;lx run&lt;/code&gt;and&lt;code&gt;lx path&lt;/code&gt;.&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;lux-lib&lt;/code&gt;: The Lux library for Rust. A dependency of&lt;code&gt;lux-cli&lt;/code&gt;and&lt;code&gt;lux-lua&lt;/code&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Note&lt;/p&gt;
    &lt;p&gt;We do not yet provide a way to install &lt;code&gt;lux-lua&lt;/code&gt; as a Lua library using Lux.
See #663.
Lux can detect a lux-lua installation using pkg-config
or via the &lt;code&gt;LUX_LIB_DIR&lt;/code&gt; environment variable.&lt;/p&gt;
    &lt;p&gt;Our pre-built binary release artifacts are bundled with &lt;code&gt;lux-lua&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;Dependencies:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;gnupg&lt;/code&gt;,&lt;code&gt;libgpg-error&lt;/code&gt;and&lt;code&gt;gpgme&lt;/code&gt;(*nix only)&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;If building without the &lt;code&gt;vendored&lt;/code&gt; feature:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;code&gt;lua&lt;/code&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;code&gt;libgit2&lt;/code&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;code&gt;openssl&lt;/code&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;If building with the &lt;code&gt;vendored&lt;/code&gt; feature:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;perl&lt;/code&gt;and&lt;code&gt;perl-core&lt;/code&gt;&lt;/item&gt;
      &lt;item&gt;
        &lt;code&gt;make&lt;/code&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;To link &lt;code&gt;gpgme&lt;/code&gt; statically on Linux and macOS, set the environment variable
&lt;code&gt;SYSTEM_DEPS_LINK=static&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;We usually recommend building with the &lt;code&gt;vendored&lt;/code&gt; feature enabled,
to statically link &lt;code&gt;lua&lt;/code&gt;, &lt;code&gt;libgit2&lt;/code&gt; and &lt;code&gt;openssl&lt;/code&gt;:&lt;/p&gt;
    &lt;code&gt;SYSTEM_DEPS_LINK="static" cargo build --locked --profile release --features vendored&lt;/code&gt;
    &lt;p&gt;Or, to build with dynamically linked libraries:&lt;/p&gt;
    &lt;code&gt;cargo build --locked --profile release&lt;/code&gt;
    &lt;p&gt;On Windows/MSVC, you must disable the &lt;code&gt;gpgme&lt;/code&gt; feature:&lt;/p&gt;
    &lt;code&gt;cargo build --locked --profile release --no-default-features --features lua54,vendored&lt;/code&gt;
    &lt;p&gt;You can build &lt;code&gt;lux-lua&lt;/code&gt; for a given Lua version with:&lt;/p&gt;
    &lt;code&gt;cargo xtask51 dist-lua # lux-lua for Lua 5.1
cargo xtask52 dist-lua # for Lua 5.2
cargo xtask53 dist-lua # ...
cargo xtask54 dist-lua
cargo xtaskjit dist-lua&lt;/code&gt;
    &lt;p&gt;This will install &lt;code&gt;lux-lua&lt;/code&gt; to &lt;code&gt;target/dist/share/lux-lua/&amp;lt;lua&amp;gt;/lux.so&lt;/code&gt;
and a pkg-config &lt;code&gt;.pc&lt;/code&gt; file to &lt;code&gt;target/dist/lib/lux-lua*.pc&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;To build completions:&lt;/p&gt;
    &lt;code&gt;cargo xtask dist-completions&lt;/code&gt;
    &lt;p&gt;To build man pages:&lt;/p&gt;
    &lt;code&gt;cargo xtask dist-man&lt;/code&gt;
    &lt;p&gt;To build the binary distributions for your platform, bundled with completions, man pages and &lt;code&gt;lux-lua&lt;/code&gt;:&lt;/p&gt;
    &lt;code&gt;cargo xtask dist-package&lt;/code&gt;
    &lt;p&gt;If you would like to use the latest version of lux with Nix, you can import our flake. It provides an overlay and packages for:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;lux-cli&lt;/code&gt;: The Lux CLI package.&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;lux-lua51&lt;/code&gt;The Lux Lua API for Lua 5.1&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;lux-lua52&lt;/code&gt;The Lux Lua API for Lua 5.2&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;lux-lua53&lt;/code&gt;The Lux Lua API for Lua 5.3&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;lux-lua54&lt;/code&gt;The Lux Lua API for Lua 5.4&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;lux-luajit&lt;/code&gt;The Lux Lua API for Luajit&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;If you have a &lt;code&gt;lux-lua&lt;/code&gt; build and &lt;code&gt;pkg-config&lt;/code&gt; in a Nix devShell,
Lux will auto-detect &lt;code&gt;lux-lua&lt;/code&gt;.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;luarocks - The original Lua package manager&lt;/item&gt;
      &lt;item&gt;rocks.nvim - A Neovim plugin manager that uses &lt;code&gt;luarocks&lt;/code&gt;under the hood, and will soon be undergoing a rewrite to use Lux instead.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Credits go to the Luarocks team for maintaining luarocks and luarocks.org for as long as they have. Without their prior work Lux would not be possible.&lt;/p&gt;
    &lt;p&gt;Contributions are more than welcome! See CONTRIBUTING.md for a guide.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Lux is licensed under LGPL-3.0+.&lt;/item&gt;
      &lt;item&gt;The Lux logo © 2025 by Kai Jakobi is licensed under CC BY-NC-SA 4.0.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Footnotes&lt;/head&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Supported via a compatibility layer that uses luarocks as a backend. ↩&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Mostly compatible with the luarocks version parser, which allows an arbitrary number of version components. To comply with SemVer, we treat anything after the third version component (except for the specrev) as a prerelease/build version. ↩&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/lumen-oss/lux"/><published>2025-10-18T12:53:32+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45626985</id><title>SQL Anti-Patterns You Should Avoid</title><updated>2025-10-18T18:41:49.500958+00:00</updated><content/><link href="https://datamethods.substack.com/p/sql-anti-patterns-you-should-avoid"/><published>2025-10-18T12:56:50+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45627324</id><title>Ripgrep 15.0.0</title><updated>2025-10-18T18:41:49.086748+00:00</updated><content>&lt;doc fingerprint="3cab1bfb2c6333d9"&gt;
  &lt;main&gt;
    &lt;p&gt;ripgrep 15 is a new major version release of ripgrep that mostly has bug fixes,&lt;lb/&gt; some minor performance improvements and minor new features.&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;In case you haven't heard of it before, ripgrep is a line-oriented search&lt;/p&gt;&lt;lb/&gt;tool that recursively searches the current directory for a regex pattern.&lt;lb/&gt;By default, ripgrep will respect gitignore rules and automatically skip&lt;lb/&gt;hidden files/directories and binary files.&lt;/quote&gt;
    &lt;p&gt;Here are some highlights:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Several bugs around gitignore matching have been fixed. This includes&lt;lb/&gt;a commonly reported bug related to applying gitignore rules from parent&lt;lb/&gt;directories.&lt;/item&gt;
      &lt;item&gt;A memory usage regression when handling very large gitignore files has been&lt;lb/&gt;fixed.&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;rg -vf file&lt;/code&gt;, where&lt;code&gt;file&lt;/code&gt;is empty, now matches everything.&lt;/item&gt;
      &lt;item&gt;The &lt;code&gt;-r/--replace&lt;/code&gt;flag now works with&lt;code&gt;--json&lt;/code&gt;.&lt;/item&gt;
      &lt;item&gt;A subset of Jujutsu (&lt;code&gt;jj&lt;/code&gt;) repositories are now treated as if they were git&lt;lb/&gt;repositories. That is, ripgrep will respect&lt;code&gt;jj&lt;/code&gt;'s gitignores.&lt;/item&gt;
      &lt;item&gt;Globs can now use nested curly braces.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Platform support:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;aarch64&lt;/code&gt;for Windows now has release artifacts.&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;powerpc64&lt;/code&gt;no longer has release artifacts generated for it. The CI&lt;lb/&gt;release workflow stopped working, and I didn't deem it worth my time to&lt;lb/&gt;debug it. If someone wants this and can test it, I'd be happy to add it&lt;lb/&gt;back.&lt;/item&gt;
      &lt;item&gt;ripgrep binaries are now compiled with full LTO enabled. You may notice&lt;lb/&gt;small performance improvements from this and a modest decrease in binary&lt;lb/&gt;size.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Performance improvements:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;PERF #2111:&lt;lb/&gt;Don't resolve helper binaries on Windows when&lt;code&gt;-z/--search-zip&lt;/code&gt;isn't used.&lt;/item&gt;
      &lt;item&gt;PERF #2865:&lt;lb/&gt;Avoid using path canonicalization on Windows when emitting hyperlinks.&lt;/item&gt;
      &lt;item&gt;PERF #3184:&lt;lb/&gt;Improve performance of large values with&lt;code&gt;-A/--after-context&lt;/code&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Bug fixes:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;BUG #829,&lt;lb/&gt;BUG #2731,&lt;lb/&gt;BUG #2747,&lt;lb/&gt;BUG #2770,&lt;lb/&gt;BUG #2778,&lt;lb/&gt;BUG #2836,&lt;lb/&gt;BUG #2933,&lt;lb/&gt;BUG #3067:&lt;lb/&gt;Fix bug related to gitignores from parent directories.&lt;/item&gt;
      &lt;item&gt;BUG #1332,&lt;lb/&gt;BUG #3001:&lt;lb/&gt;Make&lt;code&gt;rg -vf file&lt;/code&gt;where&lt;code&gt;file&lt;/code&gt;is empty match everything.&lt;/item&gt;
      &lt;item&gt;BUG #2177:&lt;lb/&gt;Ignore a UTF-8 BOM marker at the start of&lt;code&gt;.gitignore&lt;/code&gt;(and similar files).&lt;/item&gt;
      &lt;item&gt;BUG #2750:&lt;lb/&gt;Fix memory usage regression for some truly large gitignore files.&lt;/item&gt;
      &lt;item&gt;BUG #2944:&lt;lb/&gt;Fix a bug where the "bytes searched" in&lt;code&gt;--stats&lt;/code&gt;output could be incorrect.&lt;/item&gt;
      &lt;item&gt;BUG #2990:&lt;lb/&gt;Fix a bug where ripgrep would mishandle globs that ended with a&lt;code&gt;.&lt;/code&gt;.&lt;/item&gt;
      &lt;item&gt;BUG #2094,&lt;lb/&gt;BUG #3076:&lt;lb/&gt;Fix bug with&lt;code&gt;-m/--max-count&lt;/code&gt;and&lt;code&gt;-U/--multiline&lt;/code&gt;showing too many matches.&lt;/item&gt;
      &lt;item&gt;BUG #3100:&lt;lb/&gt;Preserve line terminators when using&lt;code&gt;-r/--replace&lt;/code&gt;flag.&lt;/item&gt;
      &lt;item&gt;BUG #3108:&lt;lb/&gt;Fix a bug where&lt;code&gt;-q --files-without-match&lt;/code&gt;inverted the exit code.&lt;/item&gt;
      &lt;item&gt;BUG #3131:&lt;lb/&gt;Document inconsistency between&lt;code&gt;-c/--count&lt;/code&gt;and&lt;code&gt;--files-with-matches&lt;/code&gt;.&lt;/item&gt;
      &lt;item&gt;BUG #3135:&lt;lb/&gt;Fix rare panic for some classes of large regexes on large haystacks.&lt;/item&gt;
      &lt;item&gt;BUG #3140:&lt;lb/&gt;Ensure hyphens in flag names are escaped in the roff text for the man page.&lt;/item&gt;
      &lt;item&gt;BUG #3155:&lt;lb/&gt;Statically compile PCRE2 into macOS release artifacts on&lt;code&gt;aarch64&lt;/code&gt;.&lt;/item&gt;
      &lt;item&gt;BUG #3173:&lt;lb/&gt;Fix ancestor ignore filter bug when searching whitelisted hidden files.&lt;/item&gt;
      &lt;item&gt;BUG #3178:&lt;lb/&gt;Fix bug causing incorrect summary statistics with&lt;code&gt;--json&lt;/code&gt;flag.&lt;/item&gt;
      &lt;item&gt;BUG #3179:&lt;lb/&gt;Fix gitignore bug when searching absolute paths with global gitignores.&lt;/item&gt;
      &lt;item&gt;BUG #3180:&lt;lb/&gt;Fix a panicking bug when using&lt;code&gt;-U/--multiline&lt;/code&gt;and&lt;code&gt;-r/--replace&lt;/code&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Feature enhancements:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Many enhancements to the default set of file types available for filtering.&lt;/item&gt;
      &lt;item&gt;FEATURE #1872:&lt;lb/&gt;Make&lt;code&gt;-r/--replace&lt;/code&gt;work with&lt;code&gt;--json&lt;/code&gt;.&lt;/item&gt;
      &lt;item&gt;FEATURE #2708:&lt;lb/&gt;Completions for the fish shell take ripgrep's config file into account.&lt;/item&gt;
      &lt;item&gt;FEATURE #2841:&lt;lb/&gt;Add&lt;code&gt;italic&lt;/code&gt;to the list of available style attributes in&lt;code&gt;--color&lt;/code&gt;.&lt;/item&gt;
      &lt;item&gt;FEATURE #2842:&lt;lb/&gt;Directories containing&lt;code&gt;.jj&lt;/code&gt;are now treated as git repositories.&lt;/item&gt;
      &lt;item&gt;FEATURE #2849:&lt;lb/&gt;When using multithreading, schedule files to search in order given on CLI.&lt;/item&gt;
      &lt;item&gt;FEATURE #2943:&lt;lb/&gt;Add&lt;code&gt;aarch64&lt;/code&gt;release artifacts for Windows.&lt;/item&gt;
      &lt;item&gt;FEATURE #3024:&lt;lb/&gt;Add&lt;code&gt;highlight&lt;/code&gt;color type, for styling non-matching text in a matching line.&lt;/item&gt;
      &lt;item&gt;FEATURE #3048:&lt;lb/&gt;Globs in ripgrep (and the&lt;code&gt;globset&lt;/code&gt;crate) now support nested alternates.&lt;/item&gt;
      &lt;item&gt;FEATURE #3096:&lt;lb/&gt;Improve completions for&lt;code&gt;--hyperlink-format&lt;/code&gt;in bash and fish.&lt;/item&gt;
      &lt;item&gt;FEATURE #3102:&lt;lb/&gt;Improve completions for&lt;code&gt;--hyperlink-format&lt;/code&gt;in zsh.&lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/BurntSushi/ripgrep/releases/tag/15.0.0"/><published>2025-10-18T13:44:02+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45627394</id><title>1,180 root system drawings</title><updated>2025-10-18T18:41:47.998751+00:00</updated><content>&lt;doc fingerprint="fbf286432d583069"&gt;
  &lt;main&gt;
    &lt;p&gt;Javascript Required To experience full interactivity, please enable Javascript in your browser.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://images.wur.nl/digital/collection/coll13/search"/><published>2025-10-18T13:52:24+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45627692</id><title>Flowistry: An IDE plugin for Rust that focuses on relevant code</title><updated>2025-10-18T18:41:47.574853+00:00</updated><content>&lt;doc fingerprint="b283f24420974767"&gt;
  &lt;main&gt;
    &lt;p&gt;Flowistry is a tool that analyzes the information flow of Rust programs. Flowistry understands whether it's possible for one piece of code to affect another. Flowistry integrates into the IDE to provide a "focus mode" which helps you focus on the code that's related to your current task.&lt;/p&gt;
    &lt;p&gt;For example, this GIF shows the focus mode when reading a function that unions two sets together:&lt;/p&gt;
    &lt;p&gt;When the user clicks a given variable or expression, Flowistry fades out all code that does not influence that code, and is not influenced by that code. For example, &lt;code&gt;orig_len&lt;/code&gt; is not influenced by the for-loop, while &lt;code&gt;set.len()&lt;/code&gt; is.&lt;/p&gt;
    &lt;p&gt;Flowistry can be helpful when you're reading a function with a lot of code. For example, this GIF shows a real function in the Rust compiler. If you want to understand the role of a specific argument to the function, then Flowistry can filter out most of the code as irrelevant:&lt;/p&gt;
    &lt;p&gt;The algorithm that powers Flowistry was published in the paper "Modular Information Flow through Ownership" at PLDI 2022.&lt;/p&gt;
    &lt;p&gt;Table of contents&lt;/p&gt;
    &lt;p&gt;Flowistry is available as a VSCode plugin. You can install Flowistry from the Visual Studio Marketplace or the Open VSX Registry. In VSCode:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Go to the Extensions pane by clicking this button in the left margin:&lt;/item&gt;
      &lt;item&gt;Search for "Flowistry" and then click "Install".&lt;/item&gt;
      &lt;item&gt;Open a Rust workspace and wait for the tool to finish installing.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Note on platform support: Flowistry does not yet support NixOS. Flowistry cannot provide pre-built binaries for ARM targets like M1 Macs, so Flowistry must be installed from scratch on these targets (this is done for you, but will take a few more minutes than usual).&lt;/p&gt;
    &lt;p&gt;Alternatively, you can install it from source:&lt;/p&gt;
    &lt;code&gt;# Install flowistry binaries
git clone https://github.com/willcrichton/flowistry
cd flowistry
cargo install --path crates/flowistry_ide

# Install vscode extension
cd ide
npm install
npm run build
ln -s $(pwd) ~/.vscode/extensions/flowistry
&lt;/code&gt;
    &lt;p&gt;If you are interested in the underlying analysis, you can use the &lt;code&gt;flowistry&lt;/code&gt; crate published to crates.io: https://crates.io/crates/flowistry&lt;/p&gt;
    &lt;p&gt;The documentation is published here: https://willcrichton.net/flowistry/flowistry/&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;Note: Docs.rs doesn't support documentation for crates that use&lt;/p&gt;&lt;code&gt;#![feature(rustc_private)]&lt;/code&gt;so we have to host it ourselves.&lt;/quote&gt;
    &lt;p&gt;Note that the latest Flowistry has a Maximum Supported Rust Version of Rust 1.73. Flowistry is not guaranteed to work with features implemented after 1.73.&lt;/p&gt;
    &lt;p&gt;Once you have installed Flowistry, open a Rust workspace in VSCode. You should see this icon in the bottom toolbar:&lt;/p&gt;
    &lt;p&gt;Flowistry starts up by type-checking your codebase. This may take a few minutes if you have many dependencies.&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;Note: Flowistry type-checking results are cached in the&lt;/p&gt;&lt;code&gt;target/flowistry&lt;/code&gt;directory. If you delete this folder, Flowistry will have to recompute types. Also for a large codebase this directory may take up a fair amount of disk space.&lt;/quote&gt;
    &lt;p&gt;Once Flowistry has booted up, the loading icon will disappear. Then you can enter focus mode by running the "Toggle focus mode" command. By default the keyboard shortcut is Ctrl+R Ctrl+A (⌘+R ⌘+A on Mac), or you can use the Flowistry context menu:&lt;/p&gt;
    &lt;p&gt;In focus mode, Flowistry will automatically compute the information flow within a given function once you put your cursor there. Once Flowistry has finished analysis, the status bar will look like this:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Note: Flowistry can be a bit slow for larger functions. It may take up to 15 seconds to finish the analysis.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Flowistry infers what you want to focus on based on your cursor. So if you click on a variable, you should see the focus region of that variable. Flowistry will highlight the focused code in gray, and then fade out code outside the focus region. For example, because the user's cursor is on &lt;code&gt;view_projection&lt;/code&gt;, that variable is highlighted in gray, and its focus region is shown.&lt;/p&gt;
    &lt;p&gt;Sometimes you want to keep the focus region where it is, and click on other code to inspect it without changing focus. For this purpose, Flowistry has a concept of a "mark". Once you have selected code to focus on, you can run the "Set mark" command (Ctrl+R Ctrl+S / ⌘+R ⌘+S). Then a mark is set at your cursor's current position, and the focus will stay there until you run the "Unset mark" command (Ctrl+R Ctrl+D / ⌘+R ⌘+D).&lt;/p&gt;
    &lt;p&gt;If you want to modify all the code in the focus region, e.g. to comment it out or copy it, then you can run the "Select focused region" command (Ctrl+R Ctrl+T / ⌘+R ⌘+T). This will add the entire focus region into your editor's selection.&lt;/p&gt;
    &lt;p&gt;Flowistry is an active research project into the applications of information flow analysis for Rust. It is continually evolving as we experiment with analysis techniques and interaction paradigms. So it's not quite as polished or efficient as tools like Rust Analyzer, but we hope you can still find it useful! Nevertheless, there are a number of important limitations you should understand when using Flowistry to avoid being surprised.&lt;/p&gt;
    &lt;p&gt;If you have questions or issues, please file a Github issue, join our Discord, or DM @wcrichton on Twitter.&lt;/p&gt;
    &lt;p&gt;When your code has references, Flowistry needs to understand what that reference points-to. Flowistry uses Rust's lifetime information to determine points-to information. However, data structures that use interior mutability such as &lt;code&gt;Arc&amp;lt;Mutex&amp;lt;T&amp;gt;&amp;gt;&lt;/code&gt; explicitly do not share lifetimes between pointers to the same data. For example, in this snippet:&lt;/p&gt;
    &lt;code&gt;let x = Arc::new(Mutex::new(0));
let y = x.clone();
*x.lock().unwrap() = 1;
println!("{}", y.lock().unwrap());&lt;/code&gt;
    &lt;p&gt;Flowistry can determine that &lt;code&gt;*x.lock().unwrap() = 1&lt;/code&gt; is a mutation to &lt;code&gt;x&lt;/code&gt;, but it can not determine that it is a mutation to &lt;code&gt;y&lt;/code&gt;. So if you focus on &lt;code&gt;y&lt;/code&gt;, the assignment to 1 would be faded out, even though it is relevant to the value of &lt;code&gt;y&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;We are researching methods to overcome this limitation, but for now just be aware that this is the main case where Flowistry is known to provide an incorrect answer.&lt;/p&gt;
    &lt;p&gt;Flowistry's analysis tries to include all code that could have an influence on a focal point. This analysis makes a number of assumptions for both practical and fundamental reasons. For example, in this snippet:&lt;/p&gt;
    &lt;code&gt;let mut v = vec![1, 2, 3];
let x = v.get_mut(0);
println!("{:?} {}", v, x);&lt;/code&gt;
    &lt;p&gt;If you focus on &lt;code&gt;v&lt;/code&gt; on line 3, it will include &lt;code&gt;v.get_mut(0)&lt;/code&gt; as an operation that could have modified &lt;code&gt;v&lt;/code&gt;. The reason is that Flowistry does not actually analyze the bodies of called functions, but rather approximates based on their type signatures. Because &lt;code&gt;get_mut&lt;/code&gt; takes &lt;code&gt;&amp;amp;mut self&lt;/code&gt; as input, it assumes that the vector could be modified.&lt;/p&gt;
    &lt;p&gt;In general, you should use focus mode as a pruning tool. If code is faded out, then you don't have to read it (minus the limitation mentioned above!). If it isn't faded out, then it might be relevant to your task.&lt;/p&gt;
    &lt;p&gt;Flowistry works by analyzing the MIR graph for a given function using the Rust compiler's API. Then the IDE extension lifts the analysis results from the MIR level back to the source level. However, a lot of information about the program is lost in the journey from source code to MIR.&lt;/p&gt;
    &lt;p&gt;For example, if the source contains an expression &lt;code&gt;foo.whomp.bar().baz()&lt;/code&gt;, it's possible that a temporary variable is only generated for the expression &lt;code&gt;foo.whomp.bar()&lt;/code&gt;. So if the user selects &lt;code&gt;foo&lt;/code&gt;, Flowistry may not be able to determine that this corresponds to the MIR place that represents &lt;code&gt;foo&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;This is why the IDE extension highlights the focused code in gray, so you can understand what your cursor's selection actually maps to.&lt;/p&gt;
    &lt;p&gt;Flowistry analyzes a single function at a time. If a function contains other functions, e.g. &lt;code&gt;fn&lt;/code&gt; definitions, or closures, or implicitly via async, then Flowistry will only show you focus regions within the smallest function body containing your cursor. This is usually well defined for function definitions and closures, but may be confusing for async since that depends on how rustc decides to carve up your async function.&lt;/p&gt;
    &lt;p&gt;If rustup fails, especially with an error like "could not rename downloaded file", this is probably because Flowistry is running rustup concurrently with another tool (like rust-analyzer). Until rustup#988 is resolved, there is unfortunately no automated way around this.&lt;/p&gt;
    &lt;p&gt;To solve the issue, go to the command line and run:&lt;/p&gt;
    &lt;code&gt;rustup toolchain install nightly-2023-08-25 -c rust-src -c rustc-dev -c llvm-tools-preview
&lt;/code&gt;
    &lt;p&gt;Then go back to VSCode and click "Continue" to let Flowistry continue installing.&lt;/p&gt;
    &lt;p&gt;Rust Analyzer does not support MIR and the borrow checker, which are essential parts of Flowistry's analysis. That fact is unlikely to change for a long time, so Flowistry is a standalone tool.&lt;/p&gt;
    &lt;p&gt;See Limitations for known issues. If that doesn't explain what you're seeing, please post it in the unexpected highlights issue or ask on Discord.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/willcrichton/flowistry"/><published>2025-10-18T14:33:22+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45628022</id><title>Rapid amyloid-β clearance and cognitive recovery by modulating BBB transport</title><updated>2025-10-18T18:41:45.543491+00:00</updated><content>&lt;doc fingerprint="7369022309fa8dc2"&gt;
  &lt;main&gt;
    &lt;head rend="h2"&gt;Abstract&lt;/head&gt;
    &lt;p&gt;The blood‒brain barrier (BBB) is a highly selective permeability barrier that safeguards the central nervous system (CNS) from potentially harmful substances while regulating the transport of essential molecules. Its dysfunction is increasingly recognized as a pivotal factor in the pathogenesis of Alzheimer’s disease (AD), contributing to the accumulation of amyloid-β (Aβ) plaques. We present a novel therapeutic strategy that targets low-density lipoprotein receptor-related protein 1 (LRP1) on the BBB. Our design leverages the multivalent nature and precise size of LRP1-targeted polymersomes to modulate receptor-mediated transport, biasing LRP1 trafficking toward transcytosis and thereby upregulating its expression to promote efficient Aβ removal. In AD model mice, this intervention significantly reduced brain Aβ levels by nearly 45% and increased plasma Aβ levels by 8-fold within 2 h, as measured by ELISA. Multiple imaging techniques confirmed the reduction in brain Aβ signals after treatment. Cognitive assessments revealed that treated AD mice exhibited significant improvements in spatial learning and memory, with performance levels comparable to those of wild-type mice. These cognitive benefits persisted for up to 6 months post-treatment. This work pioneers a new paradigm in drug design, where function arises from the supramolecular nature of the nanomedicine, harnessing multivalency to elicit biological action at the membrane trafficking level. Our findings also reaffirm the critical role of the BBB in AD pathogenesis and demonstrate that targeting the BBB can make therapeutic interventions significantly more effective. We establish a compelling case for BBB modulation and LRP1-mediated Aβ clearance as a transformative foundation for future AD therapies.&lt;/p&gt;
    &lt;head rend="h3"&gt;Similar content being viewed by others&lt;/head&gt;
    &lt;head rend="h2"&gt;Introduction&lt;/head&gt;
    &lt;p&gt;Alzheimer’s disease (AD) accounts for almost 70% of dementia cases, and its pathophysiology is characterized by an accumulation of small peptides, amyloid-β (Aβ), in fibrils and plaques, followed by hyperphosphorylation, misfolding, and aggregation into neurofibrillary tangles of another protein, tau. Both aggregates are associated with strong inflammatory responses, synaptic dysfunction, and neuronal injury, causing considerable brain damage and impairing cognitive processes.1,2 In addition, the brain vasculature network, often referred to as the blood-brain barrier (BBB), plays a critical role in AD progression and possibly initiation.3,4,5,6 The BBB consists of aligned endothelial cells supported by pericytes and astrocytes, forming the densest vascular network in the body, with approximately one capillary per neuron.3 Mounting evidence indicates that BBB dysfunction actively drives AD pathogenesis through interconnected pathological cascades: perivascular Aβ deposition progressively accumulates,7,8,9,10 while low-density lipoprotein receptor-related protein 1 (LRP1) localization shifts from endothelial cells to pericytes, a cell-specific redistribution significantly impairs Aβ clearance capacity and promotes neurovascular uncoupling pathogenesis.11,12,13 The BBB poses a significant challenge in pharmacology, impeding the penetration of most known drugs and complicating the discovery of treatments for neurological disorders.3 Most AD patients experience various vascular dysfunctions,14 which may be linked to Aβ15 and tau16,17,18 or occur independently of both.19 The LRP1 is possibly the most studied receptor for both Aβ1,20,21,22 and, more recently, tau23,24 processing. Endothelial LRP1 plays a vital role in removing Aβ, and its expression decreases with age. This decrease is more pronounced in AD patients and animal models, where BBB LRP1 levels are almost undetectable.25,26,27,28,29 The downregulation of LRP1 is strongly correlated with impairment of the BBB and cognitive decline.27,30,31,32,33,34 Proper regulation of LRP1 levels in endothelial cells is crucial for preventing the progression of AD. Despite this, the mechanisms that maintain appropriate LRP1 levels on the basolateral surface of endothelial cells remain unclear.&lt;/p&gt;
    &lt;p&gt;LRP1-mediated trafficking follows distinct routes influenced by the avidity of the cargo–receptor interaction. High-avidity binding promotes receptor clustering and recruitment of phosphatidylinositol-binding clathrin assembly protein (PICALM), triggering clathrin-mediated endocytosis and Rab5-dependent sorting within early endosomes. This pathway frequently leads to lysosomal degradation, thereby reducing the pool of membrane-bound LRP1 available for further transport. Mid-avidity cargo instead engages PACSIN2 (also known as syndapin-2), an F-BAR membrane-sculpting protein that generates and stabilizes tubular carriers linking the luminal and abluminal membranes. This noncanonical transcytosis pathway bypasses the degradative endo-lysosomal system, enabling rapid, degradation-free delivery of LRP1 cargo to the brain parenchyma or, in the case of efflux, into the circulation. For Aβ, the choice of pathway is crucial. Aβ/LRP1 complexes internalized through PICALM-clathrin-Rab5 processing may be recycled via Rab11-mediated transcytosis into the bloodstream30,31,32,33,34,35,36,37 or diverted into Rab7-positive compartments for lysosomal degradation.38,39 Our previous work40,41 revealed an alternative, Rab5/PICALM-independent route in which LRP1 is internalized collectively, trafficked in PACSIN2-stabilized tubular carriers, and exocytosed across the BBB (Fig. 1a). These two mechanisms have opposing functional outcomes: PACSIN2-mediated tubular trafficking preserves Aβ clearance capacity, whereas Rab5-dependent lysosomal routing reduces LRP1 surface availability and can accelerate amyloidogenic aggregation. Binding energetics underlie this sorting decision—mid-avidity interactions favor PACSIN2-mediated cycling, while high avidity triggers Rab5-directed degradation.1,3,40,41,42&lt;/p&gt;
    &lt;p&gt;Cargo avidity also influences LRP1 expression levels (Fig. 1b). Mid-avidity ligands promote PACSIN2-dependent shuttling, which correlates with sustained or even elevated LRP1 expression, likely because receptors are spared from degradation. In contrast, high-avidity ligands bias trafficking toward Rab5-rich endosomes and lysosomal processing, leading to LRP1 downregulation. We propose that LRP1 homeostasis reflects a dynamic balance between receptor synthesis and degradation, with a fraction of LRP1 normally cycling across the BBB via PACSIN2 carriers. New cargo can disrupt this equilibrium; high avidity shifts the balance toward degradation, lowering receptor levels, while mid avidity supports efficient shuttling and receptor preservation. Mid-affinity targeting is not a new idea in BBB drug delivery.43,44,45,46,47 Several neuropharmaceutical strategies already harness moderate binding strength to the transferrin receptor to bypass lysosomal degradation and improve central nervous system (CNS) uptake. These approaches have opened an important avenue in neurotherapeutics by exploiting binding energetics to enhance transport efficiency. However, they share a common limitation: they treat the BBB merely as a gate to cross rather than as a dysfunctional tissue to repair. In AD, the problem extends beyond access; the very transport machinery itself is pathologically biased. In the case of LRP1, we and others showed that it is increasingly sequestered in Rab5-positive endosomes by high-avidity Aβ aggregates, leading to receptor degradation and impaired clearance capacity. Our recent findings reframe avidity not only as a means of transport optimization but as a therapeutic switch capable of correcting faulty receptor trafficking. In healthy conditions, a fraction of LRP1 continuously cycles via PACSIN2-stabilized tubular carriers, preserving receptor levels and supporting Aβ efflux. In disease, high-avidity Aβ disrupts this balance, diverting receptors into degradative compartments and accelerating surface LRP1 depletion. By contrast, mid-avidity ligands bias trafficking toward PACSIN2-dependent tubular transcytosis, sparing receptors from degradation and promoting receptor upregulation (Fig. 1b). This creates an opportunity to reprogram LRP1 trafficking to restore BBB clearance function and reverse vascular dysfunction at its source. Guided by this concept, we developed angiopep-2–conjugated LRP1-targeted polymersomes (A40-POs) engineered for intermediate binding affinity. This energetically tuned design avoids the two pathological extremes: (i) high-affinity interactions that trigger Rab5-dependent lysosomal sequestration, and (ii) low-affinity dissociations that fail to sustain transport. Instead, A40-POs stabilize the LRP1–PACSIN2 transportosome, restoring endogenous tubular transcytosis and preserving receptor homeostasis. Unlike transferrin receptor–based mid-affinity systems, which aim only to boost cargo penetration, our platform actively repairs the endothelial trafficking defect, rebalancing LRP1 synthesis and degradation dynamics.&lt;/p&gt;
    &lt;p&gt;We propose that this “avidity-optimized trafficking reprogramming” approach can counteract Aβ-induced BBB dysfunction. Our superselective design—multivalent angiopep-2 on P[(OEG)10MA]20–PDPA120 polymersomes—targets LRP1 with mid-avidity to bias trafficking toward PACSIN2-mediated transcytosis, thereby promoting LRP1 upregulation and enhancing Aβ clearance.40,41,42,48 In preclinical testing, A40-POs achieved triple therapeutic synergy: rapid clearance of 41% of brain Aβ within hours via reactivated transcytosis; structural BBB restoration with 78% recovery of LRP1–CD31 colocalization; and long-lasting cognitive rescue, with Morris water maze performance indistinguishable from wild-type controls for 6 months. This performance surpasses antibody-based approaches, which are hampered by delayed onset, transient efficacy, and receptor depletion.1,3,49 By directly leveraging avidity as a therapeutic variable, our work extends mid-affinity targeting beyond simple delivery toward vascular repair, offering a universal and disease-modifying framework for neurological disorders in which BBB dysfunction and receptor downregulation are both cause and consequence of pathology.&lt;/p&gt;
    &lt;head rend="h2"&gt;Results&lt;/head&gt;
    &lt;p&gt;To fully understand the role of BBB LPR1 in mediating Aβ transport, we followed its expression alongside other markers and Aβ in the APP/PS1 and wild-type animals. We conducted a multi-tiered comparative investigation employing enzyme-linked immunosorbent assay (ELISA) quantification and in situ imaging modalities. This integrated methodology facilitated comprehensive whole-brain profiling coupled with systematic evaluation of separated vascular-parenchymal (Fig. 2 and supplementary Fig. 1).&lt;/p&gt;
    &lt;p&gt;We used confocal microscopy to assess the spatial localization of LRP1 and Aβ at the BBB endothelial cells (CD31) and pericytes (CD146) in 3- and 12-month-old AD brain samples. In Fig. 2a (3-month-old), Aβ (red) is highly colocalized with LRP1 (white) on the endothelial cells (green), suggesting the active involvement of LRP1 in Aβ transport and clearance at a younger age, with less Aβ accumulation around the vessels. Figure 2b shows 12-month-old brains, and the corresponding 3D image (Fig. 2c) indicates a noticeable increase in Aβ deposition on the basal side of the BBB vessels. The colocalization of LRP1 with Aβ appears to decrease, potentially indicating impaired LRP1-mediated clearance of Aβ as AD progresses. In the later stages of AD, increased Aβ accumulation and reduced association with LRP1 may affect BBB function and promote disease pathology. Interestingly, further imaging (Fig. 2d) suggested that LRP1 was predominantly deposited around the pericytes on the exterior side of the blood vessels. We conducted longitudinal analysis of representative brain sections spanning 3 to 12 months through immunolabeling with antibodies targeting LRP1, Aβ, pericyte marker (CD146), and endothelial cell marker (CD31). Colocalization analysis was performed, and Pearson correlation coefficients (PCC) were calculated to quantify the spatial relationships between Aβ/LRP1 and CD31, as well as between Aβ/LRP1 and CD146. In Fig. 2e, the results show a trend where the association between Aβ and endothelial cells weakens over time, while its correlation with pericytes appears to strengthen. Similarly, analyses with LRP1 revealed PCC over time, specifically between LRP1 and endothelial cells as well as between LRP1 and pericytes, suggesting potential associations.&lt;/p&gt;
    &lt;p&gt;We collected brains from both AD and wild-type mice over a lifespan of 3–12 months and fractionated them into parenchyma and vasculature. We thus measured Aβ, LRP1, PACSIN2, and Rab5 levels via ELISA. The data shown in Fig. 2f reveal significantly more Aβ in the vasculature of wild-type mice with notable differences emerging at all lifespan stages compared with APP/PS1 mice, demonstrating the pathological hallmarks of AD. These differences correspond to increased Aβ levels in the parenchyma. The latter is the dominant index of temporal changes in Aβ from the macroscopic whole brain. Figure 2g (quantitative data of supplementary Fig. 1) and Fig. 2h display the aggregate Aβ levels in the brain, showing a marked Aβ increase in the AD models with age, a trend particularly pronounced between 6 and 12 months. The buildup of Aβ in brain, along with its restricted passage through blood vessels, corresponds to the downregulation of LRP1 and PACSIN2, alongside the upregulation of Rab5 as the animals aged, as measured by ELISA (Fig. 2f), and immune fluorescence (supplementary Fig. 2). Notably, this difference between AD and wild-type animals was especially significant during the 6- to 12-month period, particularly in the vascular system (Fig. 2f and supplementary Fig. 2). The interplay between LRP1, PACSIN2, and Rab5 at the BBB is crucial for understanding the mechanisms of aging and AD. Our previous studies40,42,50 in which the peptide angiopep-2 was used to target LRP1 revealed that the efficiency of crossing the BBB is greater for multivalent scaffolds. We demonstrated that LRP1 shuttles across the BBB through transcytosis31 via collective endocytosis and exocytosis regulated by the BAR domain protein PACSIN2 for mid-avidity cargo. PACSIN2 plays a pivotal role in facilitating transport via LRP1 for small Aβ structures (i.e., mid-avidity cargo) across the BBB.41 A large Aβ structure with greater affinity for LRP1 traffics toward Rab5-positive endosomes via the recruitment of PICALM and clathrin-mediated endocytosis.35 The loss of BBB integrity may trigger compensatory mechanisms, including the upregulation of Rab5, as the brain attempts to increase endosomal trafficking to manage increased cellular stress and the accumulation of neurotoxic substances, such as Aβ. However, Rab5 is significantly upregulated in vulnerable neuronal populations, particularly in individuals with AD.51,52 Combining the above ELISA and confocal evaluation results, the localization shift in LRP1 from the BBB vascular endothelium to pericytes with aging underscores a potentially pivotal role in the pathophysiology of AD. This progression suggests a decrease in LRP1-mediated Aβ clearance at the BBB endothelial level, with a concomitant increase associated with pericytes, which may impact AD progression. Most importantly, the timing of this alteration precedes or evolves alongside the early stage of cognitive decline, as measured in the APP/PS1 AD model we used.50&lt;/p&gt;
    &lt;p&gt;As we previously reported, both small Aβ and mid-avidity multivalent units trigger PACSIN2-mediated transcytosis. In both, this pathway is associated with the upregulation of the LRP1 receptor,31,32 as shown in Fig. 1b. We thus hypothesize that the use of multivalent LRP1-targeted nanoparticles may restore the ability of LRP1 to transport Aβ from the brain and potentially clear Aβ deposits in AD models. We prepared and characterized P[(OEG)10 MA]20-PDPA120 mixed with angiopep2-P[(OEG)10 MA]20-PDPA120 to make polymersomes bearing 40 ligands per particle. Hereinafter, these polymersomes are referred to as A40-POs (supplementary Fig. 3). The number of ligands optimized for transcytosis31 was adjusted via our phenotypic targeting theory calculations to account for the reduced LRP1 expression in AD mice.34&lt;/p&gt;
    &lt;p&gt;APP/PS1 transgenic AD mice were intravenously injected with 200 μL of A40-POs alongside four control treatments: a sham formulation (only PBS), angiopep-2 alone (A1), pristine P[(OEG)10 MA]20-PDPA120 polymersomes (A0-POs), and polymersomes with 200 angiopep-2 ligands (A200-POs). Two hours after administration, the animals were culled, and the Aβ levels in both the brain and blood plasma were measured via ELISA. The results plotted in Fig. 3a, b show a clear effect on only A40-POs treatment, with a reduction in brain Aβ of almost 50%, from 8603.6 to 4236.3 ng ml−1, and a mirrored increase in the blood plasma of 8 times from 85.3 to 673.5 ng ml−1 compared with that of the diseased animals treated with a sham formulation. If we assume that the brain volume of an APP/PS1 12-month-old mouse brain is 0.35–0.45 ml and has a total blood volume of 1.5–2.3 ml, the amount of Aβ removed from the brain corresponds almost entirely to the surplus measured in the plasma.&lt;/p&gt;
    &lt;p&gt;A parallel IHC analysis confirmed that the Aβ area fraction also decreased (supplementary Fig. 4). Furthermore, we employed positron emission tomography-computed tomography (PET-CT) to assess the clearance of Aβ in the brains of live animals. The animals were injected with [18 F]-4-(2-(6-(2-(2-(2-18F-fluoroethoxy)ethoxy)ethoxy)pyridin-3-yl)vinyl)-N-methyl benzamine ([18 F] AV-45), an established Aβ marker.53 PET‒CT revealed that the brain of 12-month-old APP/PS1 mice exhibited intense Aβ signal. In contrast, this signal sharply decreased after treatment with A40-POs (Fig. 3c). After 12 h of administration of A40-POs, the reduction in [18 F] AV-45 standardized uptake value associated with Aβ was 46.25% (Fig. 3d). Confocal images revealed that Aβ deposition around the BBB disappeared, and a large amount of Aβ signal in the vascular lumen (supplementary Fig. 5). We performed tissue clearing on the brains of 12-month-old APP/PS1 mice treated with sham formulation or A40-POs. The Aβ (red) and blood vessels (green) of these brains were labeled (Fig. 3e and supplementary Fig. 6). The brains of the mice treated with A40-POs presented fewer Aβ signals than did the Sham APP/PS1 brains. The 3D brain images were embedded into the Allen Brain Atlas-based parcellation model integrated with Amira software, with each brain parcellated into 14 distinct regions (Fig. 3f). The Aβ volume in 14 brain regions of the mouse brain was measured separately (Fig. 3g). There was a 41% Aβ volume reduction in the brains of A40-POs-treated mice. Finally, the coronal Aβ distribution is shown as a heatmap in Fig. 3h.&lt;/p&gt;
    &lt;p&gt;These findings motivated us to study the BBB vascular phenotype after A40-PO treatment. We first observed increasing of the colocalization of LRP1 with CD31 in the treated brain, as shown in Fig. 4a and supplementary Fig. 7. The overlap of LRP1 and BBB endothelial cells (CD31) returned to the wild-type state. Quantitative analysis of Aβ distribution revealed a significant increase in the brain vasculature after treatment (Fig. 4b), contrasting with a progressive reduction in parenchymal Aβ deposition (Fig. 4c). ELISA tests were subsequently performed to detect proteins in both the vasculature and parenchyma. As discussed previously, the analysis focused on the concentrations of various proteins, including LRP1, PACSIN2, and Rab5. The nanomedicine cleared Aβ and caused a rapid change in the BBB phenotype by upregulating PACSIN2 and downregulating Rab5 (Fig. 4d). This finding is consistent with our fluorescent imaging data, which show that PACSIN2 relocates to blood vessels (supplementary Fig. 7). The morphology of LRP1, as observed under a stimulated emission depletion (STED) microscope, revealed a clustered distribution in the vessel wall, suggesting robust ongoing transcytosis (Fig. 4e and supplementary Fig. 5).&lt;/p&gt;
    &lt;p&gt;Finally, we investigated the effects of A40-POs administration on animal cognition via Morris water maze. As indicated in Fig. 5a the stage I, with the number of experimental days increased, the time they took to find the platform gradually decreased, suggesting that animals made progress in learning and remembering the platform’s location.&lt;/p&gt;
    &lt;p&gt;The APP/PS1 POs (A40-POs-treated) group exhibited a significantly shorter escape path length than the sham-operated APP/PS1 group after training (Fig. 5a, Stage I), suggesting improved spatial navigation strategies. Their search efficiency was similar to that of the wild-type mice. The escape latency (time taken to reach the escape platform) of the APP/PS1 POs group was also shorter than that of the sham group. A shorter escape latency indicates better spatial learning and memory ability. Although the relationship between swimming speed and spatial learning and memory abilities is weak, analyzing swimming speed can rule out the impact of an animal’s motor ability or fear during experiments. For all the parts, there was no significant difference in the swimming speeds of the three groups of mice.&lt;/p&gt;
    &lt;p&gt;When the platform was removed in Stage II, the APP/PS1 POs group crossed the platform more times and spent a significantly greater percentage of time at the platform’s original location than the Sham group did, reflecting stronger memory of the platform’s location. In Stage III, the escape platform was placed on the opposite side of its original location. Initially, longer search times reflect the long-term memory of the original platform’s location. Nevertheless, as the number of training sessions increased, the group with stronger learning abilities would present a greater reduction in path length and escape latency. In the last two days of this stage, animals treated with A40-POs and the wild-type group presented shorter escape paths and escape latencies. When the escape platform was removed (stage IV), the APP/PS1 POs group stayed longer than the sham group at the escape location. This location was crossed more often, reflecting the stronger memory abilities. Six months after the mice were treated with A40-POs, we performed this water maze experiment to evaluate the persistence of cognitive improvement in the treated mice. Place navigation and spatial probe tests (Stages V and VI) were performed on the mice adhering to the same methods as those implemented in Stages I and II. Between-group comparisons revealed that the cognitive enhancement provided by A40-POs treatment persisted in APP/PS1 mice, and A40-POs-treated mice demonstrated a level of cognitive similar to that of wild-type mice, which was significantly greater than that of sham APP/PS1 mice.&lt;/p&gt;
    &lt;p&gt;Enhancing quality of life is a crucial objective in AD treatment and improvement. To assess the life quality of the mice, we conducted nest construction (Fig. 5b, c) and sucrose preference (Fig. 5d) experiments following the Stages IV and VI of the Morris water maze test. Nest-construction behavior is commonly used to evaluate daily activities, fine motor skills, cognition, and emotional state in mice with cognitive impairments. For mice, a high-quality nest provides thermoregulation and predator avoidance, serving as a security indicator that correlates with executive function performance. The treated group exhibited a significantly higher nest-construction score compared to the Sham group. The sucrose preference experiment was conducted to assess the hedonic response of the animals to sweetness by administering a low-concentration sucrose solution. The group treated with A40-POs exhibited significantly higher preference scores compared to the sham APP/PS1 group (Fig. 5d).&lt;/p&gt;
    &lt;p&gt;Overall, the results of the behavioral experiments indicated that animals treated with A40-POs presented improved memory and learning capabilities, enhanced cognition, and elevated quality of life.&lt;/p&gt;
    &lt;head rend="h2"&gt;Discussion&lt;/head&gt;
    &lt;p&gt;The profound therapeutic recalcitrance of late-stage AD arises from a self-reinforcing cascade of neuropathological disturbances: persistent accumulation of Aβ, progressive breakdown of the BBB, collapse of physiological clearance routes, and the convergence of multiple neurodegenerative mechanisms that entrench the disease state.54,55,56 In the classical APP/PS1 mouse model, at 12 months of age, perivascular amyloid deposits accumulate in parallel with a marked reduction in LRP1–endothelial co-localization, signaling the decoupling of the neurovascular unit and the erosion of Aβ efflux capacity. This pathological uncoupling is accompanied by a molecular shift from physiological PACSIN2-mediated tubular transcytosis toward Rab5-driven degradative endocytosis, establishing a microenvironment in which the very barrier dysfunction amplifies amyloid burden, it helps to perpetuate.41,51,52 The resulting landscape is not merely one of impaired barrier integrity but of disrupted and maladapted transport machinery. In this context, effective therapy must extend beyond directly targeting amyloid aggregates, instead restoring the underlying vascular transport architecture that maintains neurovascular homeostasis.&lt;/p&gt;
    &lt;p&gt;Current therapeutic approaches have often focused on improving transport efficiency by tuning ligand affinity, particularly in transferrin receptor-targeting strategies, which have demonstrated that mid-affinity interactions can outperform high-affinity binding by avoiding lysosomal routing and promoting transcytosis. While such strategies have opened a new chapter in neuropharmaceutical design, they largely remain transport-centric, concerned with getting molecules into the brain rather than repairing the transport systems themselves. In contrast, the approach presented here seeks to correct the pathological shift in endothelial trafficking, re-establishing a healthy balance between receptor recycling and degradation. Our strategy is founded on fundamental biophysical principles of receptor–ligand binding thermodynamics, supramolecular spatial encoding, and membrane trafficking dynamics. Receptor fate is governed by a finely balanced interplay between binding energy, spatial confinement, and membrane microdomain organization: mid-avidity cargo engages PACSIN2-facilitated tubular carriers that maintain physiological clearance, whereas high-avidity ligands promote Rab5-mediated lysosomal degradation, progressively depleting functional receptors. This dichotomy acts as a biological switch, directing LRP1 either toward productive transcytosis or toward degradation. Crucially, these processes are not passive but allosterically sensitive to the geometry, valency, and spatial arrangement of ligands at the nanoscale. To exploit this mechanism, we developed A40-POs, LRP1-targeted polymersomes displaying angiopep-2 ligands in a spatially programmed multivalent configuration. Computational modeling guided the spatial organization of ligands to emulate physiological neurovascular engagement, minimizing conformational strain that would otherwise trigger degradative routing. This precise nanoscale architecture thermodynamically stabilizes LRP1 conformations favorable for PACSIN2 recruitment, restoring productive transcytosis by recreating the membrane curvature and receptor clustering dynamics of healthy endothelium. In contrast, A200-POs with overcrowded ligands induce pathological Rab5 activation through microdomain disruption and receptor conformational distortion, underscoring the fine balance between therapeutic reactivation and aberrant trafficking.&lt;/p&gt;
    &lt;p&gt;Our study underscores the transformative potential of multivalent targeting and BBB modulation in treating AD. The deployment of LRP1-targeting polymersomes has facilitated rapid Aβ clearance and initiated significant changes in the BBB, leading to improved cognitive outcomes. This innovative therapeutic paradigm offers a promising pathway for developing effective clinical interventions, addressing vascular contributions to AD, and ultimately enhancing patient outcomes. The therapeutic implications are profound. By reinstating PACSIN2-mediated trafficking, A40-POs not only restore clearance but also shift LRP1 homeostasis toward upregulation, counteracting the receptor loss driven by pathological high-avidity amyloid binding. This shift represents a form of vascular reprogramming, in which the endothelium regains its native capacity to manage proteopathic stress. Experimental evidence confirms that treatment initiates a rapid clearance phase within hours, marked by a substantial reduction in cerebral amyloid load and concurrent elevation of plasma Aβ, consistent with restored vectorial efflux. Pathological imaging reveals depletion of insoluble aggregates across the isocortex, while functional assays demonstrate normalization of transporter stoichiometry and re-coupling of the neurovascular unit. Multiplex immunohistochemistry confirms reactivation of vesicular trafficking from the luminal surface toward the parenchyma, representing a spatial inversion of pathological amyloid dynamics. Most notably, these structural and molecular restorations translate into long-lasting cognitive preservation, with treated animals performing indistinguishably from wild-type controls in complex spatial learning tasks over extended observation periods. The conceptual advance here lies in moving beyond the paradigm of “overcoming the barrier” toward “repairing the barrier.” A40-POs demonstrate that nanoscale spatial programming can restore the BBB’s intrinsic clearance machinery by directly modulating the conformational and trafficking dynamics of its transport receptors. This represents a transition from nanocarriers as passive shuttles to active supramolecular regulators of endothelial biology. The therapeutic trilogy achieved—amyloid clearance, barrier restoration, and sustained cognitive recovery—establishes a blueprint for precision neurovascular medicine.&lt;/p&gt;
    &lt;p&gt;While current studies have substantiated the validity of this novel theoretical framework, the application of cell-specific knockout models in mechanistic studies holds significant potential to enhance our understanding of the functional role of the PACSIN2 pathway within the pathophysiological context of AD. Looking ahead, the translational journey will require accounting for interspecies differences in receptor glycosylation and membrane composition, as well as vascular pathologies such as cerebral amyloid angiopathy and pericyte loss, which are incompletely recapitulated in murine models. Strategies integrating spatiotemporal mapping of clearance dynamics with human-specific in vitro models, computational simulations under physiological shear stress, and tailored ligand designs informed by patient-specific LRP1 polymorphisms will be essential. The potential extends beyond AD to Parkinson’s, amyotrophic lateral sclerosis, and other disorders where vascular transport failure accelerates neurodegeneration.&lt;/p&gt;
    &lt;p&gt;In essence, this work illustrates that the BBB is not merely an obstacle to be bypassed but a dynamic and reparable interface whose dysfunction can be therapeutically reversed. By embedding the principles of receptor thermodynamics and supramolecular spatial encoding into material design, we have demonstrated that pathological trafficking can be reprogrammed toward physiological transport, converting the barrier itself into a therapeutic target. The A40-POs paradigm demonstrates that rational materials design integrated with supramolecular engineering can reprogram pathological pathways into targeted therapeutic interventions, establishing precise regulation over endogenous transport systems. This bidirectional engineering framework not only recapitulates natural regulatory paradigms but achieves functional expansion through predictable assembly. This reframing not only changes how we approach drug delivery in neurodegeneration but also heralds a new era in which nanomaterials act as intelligent modulators of cellular behavior, capable of decoding disease-specific transport disruptions and orchestrating their repair at the molecular scale.&lt;/p&gt;
    &lt;head rend="h2"&gt;Materials and methods&lt;/head&gt;
    &lt;head rend="h3"&gt;A40-PO polymersome preparation and characterization&lt;/head&gt;
    &lt;p&gt;P[(OEG)10MA]20-PDPA120 and angiopep2-P[(OEG)10MA]20-PDPA120 copolymers were synthesized via atom transfer radical polymerization (ATRP) as previously reported.33 A40-POs were formulated adhering to the film-rehydration method, whereby P[(OEG)10MA]20-PDPA120 and a 1.88% molar ratio of angiopep2-P[(OEG)10MA]20-PDPA120 were dissolved in a mixture of methanol and chloroform (v/v, 3:1). The mixture was left to evaporate, allowing the organic solvent to completely dissipate and form a homogeneous polymer film at the bottom of the vial. PBS solution was added to rehydrate the polymer film and sonicated for 30 min. The solution was stirred continuously for 7 days at 4 °C via a magnetic stirrer at 1000 rpm. The morphology of the A40-POs was characterized via transmission electron microscopy (JEM-2100Plus, Japan). The diameter distribution was assessed via dynamic light scattering (Malvern Zetasizer Pro, UK).&lt;/p&gt;
    &lt;head rend="h3"&gt;Animals&lt;/head&gt;
    &lt;p&gt;All the animal studies were conducted in accordance with the guidelines set forth by the West China Hospital Animal Care Committee (IACUC-approved project number: 20211475A). Considerable efforts were made to minimize the number of animals utilized in these studies and to alleviate any pain or discomfort experienced by the animals. In all the experiments, the animals were housed in a room where the temperature was regulated, with consistent alternating cycles of light and darkness.&lt;/p&gt;
    &lt;head rend="h3"&gt;Immunohistochemistry (IHC)&lt;/head&gt;
    &lt;p&gt;Paraffin-embedded sections (5 μm) of mouse brain tissue were deparaffinized with xylene and subjected to gradient alcohol hydration (100%, 80%, 50%, 30%). Endogenous peroxidase activity was quenched via the addition of 3% H2O2 (room temperature, 10 min) following antigen retrieval (Biosharp, 22315828). The tissues were blocked with 1% BSA (Aladdin, A104912) at room temperature for 30 min. Aβ-targeting primary antibodies were incubated overnight at 4 °C (Servicebio, GB13414-1, 1:200), followed by washing with PBS. The sections were then incubated with HRP-conjugated secondary antibodies (ABclonal, AS014, 1:150) at ambient temperature for 30 min and subsequently washed with PBS. DAB substrate (Elabscience, E-IR-R101, 1:20) was applied for 5 min, followed by hematoxylin solution (Servicebio, G1004) for 1 min and hematoxylin differentiation solution (Servicebio, G1039) for 10−15 s. The sections were immediately rinsed in running tap water for 20 s, treated with hematoxylin bluing buffer (Servicebio, G1040) for 1 min, and washed with PBS. Finally, the slides were mounted with quick-drying neutral resin (ZSZSGBBIO, ZLI-9516).&lt;/p&gt;
    &lt;head rend="h3"&gt;Aβ extraction&lt;/head&gt;
    &lt;p&gt;Following euthanasia via an overdose of isoflurane anesthesia, cardiac perfusion was conducted with cold PBS. The entire brain tissue was subsequently harvested and weighed. The brain tissues were subjected to comprehensive homogenization (Servicebio, KZ-5F-3D) employing a TBS solution enriched with phosphatase inhibitor (Servicebio, CR2302054) and protease inhibitor (Servicebio, CR2306008) at 70 Hz and −20 °C. The supernatant was segregated after the brain tissue homogenate was centrifuged for 1 h at 100,000 × g and 4 °C via an ultrahigh-speed centrifuge (Beckman, Optima MAX-XP). The sediment were subsequently resuspended in 70% formic acid (Aopusheng (Tianjin) Chemical, 20210610) and centrifuged at 100,000 × g and 4 °C for 1 h, after which the resulting supernatant was collected.&lt;/p&gt;
    &lt;head rend="h3"&gt;Vessel extraction&lt;/head&gt;
    &lt;p&gt;Immediately following euthanasia via isoflurane overdose anesthesia, cardiac perfusion was conducted with cold PBS, then brain tissues were excised and weighed. The tissues were processed via vascular parenchyma isolation buffer comprising 10 mM HEPES (Servicebio, CR2207064), 141 mM NaCl (Aladdin, 111549), 4 mM KCl (Aladdin, P112134), 2.8 mM CaCl2 (Aladdin, C290953), 1 mM MgSO4 (Aladdin, M433513), 1 mM NaH2PO4 (Aladdin, S433623), and 10 mM glucose (Servicebio, CR2112094). To 500 μL of brain tissue homogenate, 1 mL of 26% (w/w) dextran (Next Sage, 61212ES60) was added. Following thorough mixing and a resting period of 15 min at 4 °C, the mixture was centrifuged (15,800 × g, 15 min, 4 °C). The upper layer subsequently represented the parenchymal fraction, and the lower layer corresponded to the vascular fraction. The vascular fraction was washed with PBS 2 × 5 min for further detection.&lt;/p&gt;
    &lt;head rend="h3"&gt;Enzyme-linked immunosorbent assay (ELISA)&lt;/head&gt;
    &lt;p&gt;The parenchyma and blood vessels underwent comprehensive homogenization using a tissue lysis mixture (Yase, 016c1050) enriched with a phosphatase inhibitor (Servicebio, CR2302054) and a protease inhibitor (Servicebio, CR2306008) at 70 Hz and −20 °C. The tissues were allowed to fully lyse at 4 °C for 15 min. The supernatant was collected via centrifugation at 14,000 × g and 4 °C for 10 min. The protein concentrations of various proteins, including LRP1 (NOVUS, NBP3-00449), PACSIN2 (Anruike, YX-160103M), Rab5 (abbexa, abx154598), and Aβ (Invitrogen, KMB3441), were determined via ELISA kits following the manufacturer’s protocols. For Aβ in the blood, the test was performed directly according to the ELISA instructions. Aβ extracted by formic acid needs to be neutralized with Tris base before testing. Protein concentrations were calculated on the basis of the curve equation (four-parameter fit).&lt;/p&gt;
    &lt;head rend="h3"&gt;Confocal imaging&lt;/head&gt;
    &lt;p&gt;Confocal images were captured via a Leica Stellaris 5 confocal microscope equipped with Diode 405, Argon, DPSS 561, and HeNe633 lasers. Imaging was conducted at a resolution of 2048 × 2048 pixels and a scanning speed of ×100. Colocalization analysis to derive PCC (r) was performed via the colocalization plug-in for ImageJ.&lt;/p&gt;
    &lt;head rend="h3"&gt;STED imaging&lt;/head&gt;
    &lt;p&gt;STED nanoscopy experiments were performed under a Leica DMi8 confocal microscope equipped with a Leica TCS SP8 STED-ONE uni. The dyes (TSA570, TSA620 and TSA750) were excited under an STED laser. The emission signals were collected via HyD reflected light detectors. The depletion beam was applied at wavelengths of 592 nm, 660 nm, and 775 nm (50% power), with a resolution of 2048 × 2048 pixels and a scanning speed of ×100.&lt;/p&gt;
    &lt;head rend="h3"&gt;Tyramide signal amplification (TSA) stain&lt;/head&gt;
    &lt;p&gt;Mouse brain tissue sections were deparaffinized with xylene and hydrated through gradient alcohol dehydration. Following antigen retrieval, 3% H2O2 was utilized to inactivate endogenous peroxidase (Biosarp, 22315828) for 10 min. Permeabilization of the sections at room temperature for 10 min was achieved with 1% Triton X-100 (Biofroxx, 1139ML100). The sections were rinsed with PBS and incubated with the primary antibody for 1 h at room temperature. After washing with PBS, the samples were incubated with the HRP-conjugated secondary antibody for 10 min. Subsequent to a PBS rinse, the TSA fluorescent solution (Absin, abs50031) was applied and incubated at room temperature for 10 min. Antigen retrieval was subsequently conducted. The aforementioned steps were repeated with distinct primary antibodies, including antibodies against LRP1 (ABclonal, A1439, 1:100), Aβ (Servicebio, GB13414-1, 1:200), CD31 (Cell Signaling, 77699, 1:300), Rab5 (Thermo Fisher, PA5-88260, 1:200) and CD146 (Abcam, ab75769, 1:300). Various wavelengths of TSA, including the TSA520, TSA570, TSA620, and TSA700 dyes, until multimeric fluorescence staining was achieved. The nuclei were stained with DAPI (Solarbio, C0065) for 5 min and then sealed with antiquenching sealing agent (Solarbio, S2100).&lt;/p&gt;
    &lt;head rend="h3"&gt;Positron emission tomography-computed tomography (PET-CT) imaging&lt;/head&gt;
    &lt;p&gt;APP/PS1 POs (12-month-old) mice were injected intravenously with the commercial Aβ radiocontrast agent [18F] AV-45 (2.8–3.2 MBq). Then, intracranial images of the mice were acquired via a micro-PET-CT imager (Inviscan, France) according to operation specifications. After a recovery period, saline (200 μL) was intravenously injected into wild-type mice (3- and 12-month-old) and sham APP/PS1 mice (12 months old). The APP/PS1 POs were intravenously injected with 200 μL of A40-POs (10 g/L). After 12 h, all the mice were intravenously injected with [18F] AV-45 (2.8–3.2 MBq). Intracranial images of the mice were acquired via the same imager.&lt;/p&gt;
    &lt;head rend="h3"&gt;Hematoxylin‒eosin (H&amp;amp;E) staining&lt;/head&gt;
    &lt;p&gt;Mice tissue sections (5 μm) were dewaxed and rehydrated. The sections were stained with hematoxylin solution for 5 min, immediately rinsed in running tap water for 10–15 s, followed by incubation with hematoxylin differentiation solution (Servicebio, G1039) for 10–15 s. Subsequently, the sections were treated with hematoxylin bluing solution (Servicebio, G1040) for 30 s and washed in running tap water. The sections were then stained with eosin staining solution for 30 s, followed by washing with ethanol. The slides were dehydrated through a gradient of ethanol (100%, 80%, 50%, 30%) and xylene. Seal the sections with quick-drying neutral resin (ZSZSGBBIO, ZLI-9516).&lt;/p&gt;
    &lt;head rend="h3"&gt;Tissue clearing and staining&lt;/head&gt;
    &lt;p&gt;The paraformaldehyde-fixed mouse brain were treated with 1/2 CUBIC-L solution (80 mL Milli-Q, 5 g Triton X-100, and 5 g N-butyldiethanolamine (Aladdin, 102-79-4)) at 37 °C for 6 h. Then, the solution was replaced with a CUBIC-L solution and incubated at 37 °C for 15 days, with the new CUBIC-L solution being replaced every 2 days. The brain tissues were subsequently washed three times with staining buffer (1.5 M NaCl). The hyalinized brains were transferred to staining buffer containing a vasculature probe (Vector, DL-1178-1, 1:100) and an Aβ probe (Abcam, ab216983, 100 nM) for fluorescence staining (RT, 3 days). The refractive index was adjusted via a CUBIC-M solution (25 g Milli-Q, 45 g antipyrine (Aladdin, 60-80-0), 30 g N-methylnicotinamide (Aladdin, 114-33-0), and 125 μl of N-butyldiethanolamine)). Images were analyzed via Amira and iMaris software.&lt;/p&gt;
    &lt;head rend="h3"&gt;High-performance liquid chromatography (HPLC)&lt;/head&gt;
    &lt;p&gt;Donepezil HCl (Aladdin, D129948) was dissolved and added to a polymer film preparing donepezil HCl@A40-POs, followed by dialysis using a 3 kDa dialysis bag for 7 days. The concentration of donepezil HCl in the dialysis fluid was measured to calculate the encapsulation efficiency. Sodium 1-decanesulfonate (Aladdin, S100284) was dissolved in pure water (15.7416 mM/L) and filtered. Chromatographic grade acetonitrile solution and perchloric acid were added, followed by ultrasonication for 10 min. Standard solutions of donepezil HCl at concentrations of 250, 125, 62.5, 31.25, 15.625, and 7.8125 μg/mL were prepared. The content of donepezil HCl was detected via an Agilent-1260 chromatograph at a flow rate of 1 mL/min, a column temperature of 35 °C, a volume of 20 μl, and a detection signal at 271 nm.&lt;/p&gt;
    &lt;head rend="h3"&gt;Morris water maze (MWM) experiment&lt;/head&gt;
    &lt;p&gt;In each group, the mice were administered a caudal vein injection daily (A40-POs, donepezil@A40-POs, donepezil, or saline), which was continued for three days. The mice were subsequently housed in a standard rearing environment for seven days to acclimatize and recover. For the analysis, the pool was segmented into four quadrants. From days 11 to 14 (days 375–378 of lifespan), a platform was positioned in quadrant II, and the animals were introduced into the thermostatic pool from each quadrant daily, with time taken by the mice to locate the platform recorded as escape latency. If the mice failed to reach the platform within 120 s, they were guided to it and remained there for 30 s. A spatial probe (Stage II) was performed on day 15 (day 379 of lifespan). Once the platform was removed, the mice were placed in the water from the IV quadrant. The results of the spatial probe were expressed as either the percentage of time the mice remained at the original escape platform location or the number of times they passed. Reverse place navigation trials were conducted from days 16 to 19 (day 380–383 of lifespan), with the platform positioned in the IV quadrant which opposite the original platform location. The animals repeated the regimen from days 11 to 14, and the reverse escape latency was documented. On day 20 (day 384 of lifespan), the platform was removed, and the mice were introduced into the water from quadrant II. The results of the reverse spatial probe are expressed as either the percentage of time that the animal spent on the original platform position or the number of times it crossed the location. In addition, 6 months later, the mice were subjected to place navigation (stage V) and spatial probe (stage VI) experiments again with the same methods and conditions. Animal performance was recorded by the same tracking system (EthoVision XT, Noldus Information Technology) for each stage.&lt;/p&gt;
    &lt;head rend="h3"&gt;Sucrose preference&lt;/head&gt;
    &lt;p&gt;At the end of Stage IV and Stage VI, the sucrose preference of the sham, APP/PS1 and APP/PS1 POs was tested. Each mouse was housed individually and allowed to acclimatize to the cage, which contained two bottles of standard pure water, for 2 days. One of the bottles was subsequently filled with 2% sucrose solution. The amount of water consumed by the mice was recorded, and the water in each bottle was refreshed daily. Sucrose preference = Sucrose water consumption/(Sucrose water consumption + Standard purified water consumption) × 100%&lt;/p&gt;
    &lt;head rend="h3"&gt;Nest construction&lt;/head&gt;
    &lt;p&gt;Three days after the sucrose preference experiment, each mouse was housed individually and then adapted to a single-cage environment for 7 days. Subsequently, 10 pieces of paper (5 × 5 cm2) were added to each cage and evenly placed. After 4 days, the nesting test results were scored in accordance with the improved 4-point scoring system.57 1 point, no visible tear, no recognizable nest site; 2 points, no visible tear, nest site recognizable; 3 points, partial tear, recognizable nest site; 4 points, sharpest tear, recognizable nest.&lt;/p&gt;
    &lt;head rend="h3"&gt;Digital western blot&lt;/head&gt;
    &lt;p&gt;Western blot analysis was performed via the Jess automated digital system (ProteinSimple, Santa Clara, CA, USA) with 12–230 kDa separation modules. Total protein concentrations were determined via a bicinchoninic acid (BCA) assay (Biosharp, BL520A). The samples were diluted in 1× sample buffer and 5× master mix (ProteinSimple) to a final loading concentration of 1 μg/μL, denatured at 95 °C for 5 min. They were then loaded into wells at a volume of 3 μL per well. Denatured samples, blocking buffer, primary antibodies, HRP-conjugated secondary antibodies (Jess modular antibodies, ProteinSimple), wash buffer, and chemiluminescent substrate (1:1 luminol-peroxidase mixture) were sequentially loaded into the designated detection plate wells. The primary antibodies used included rabbit anti-CD31 (1:50; Cell Signaling Technology, #77699), anti-CD146 (1:50; Abmart, T55209), anti-NeuN (1:50; Abcam, ab177487), and anti-β-actin (1:300; Servicebio) antibodies. Automated capillary electrophoresis, immunoblotting, and signal acquisition were performed via the Jess system according to operation specifications. The data were analyzed with Compass for Simple Western software (v6.2, ProteinSimple).&lt;/p&gt;
    &lt;head rend="h3"&gt;Proximity ligation assay (PLA)&lt;/head&gt;
    &lt;p&gt;Protein‒protein interaction analysis was performed using the Duolink® PLA Kit (Sigma‒Aldrich; DUO96000 and DUO96040) strictly following the manufacturer’s operational protocol. The brain slices of the mice were pre-stained with TSA dye for pericytes (CD146, Abcam, ab75769), endothelial cells (CD31, Cell Signaling, 77699), and astrocytes (GFAP, Invitrogen, PA5-16291). After sodium azide neutralization pre-treatment, the antibodies, LRP1 (Abcam, ab92544), PACSIN2 (Invitrogen, PA5--99032), and Aβ (ABclonal, A24422), were conjugated to species-specific PLA probes (DUO96040). Subsequent procedures inclouding incubation, hybridization, ligation, amplification, and signal development—were conducted according to the kit’s standard protocol. Nuclei were counterstained with DAPI, and images were acquired via confocal microscopy.&lt;/p&gt;
    &lt;head rend="h2"&gt;Data availability&lt;/head&gt;
    &lt;p&gt;All data supporting the findings of this study are included in the main text and supplementary materials. Data can be accessed from the corresponding author upon reasonable request, subject to compliance with consent agreements and applicable data usage restrictions.&lt;/p&gt;
    &lt;head rend="h2"&gt;References&lt;/head&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Hampel, H. et al. The amyloid-beta pathway in Alzheimer’s disease. Mol. Psychiatry 26, 5481–5503 (2021).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Karran, E. &amp;amp; De Strooper, B. The amyloid hypothesis in Alzheimer disease: new insights from new therapeutics. Nat. Rev. Drug Discov. 21, 306–318 (2022).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Kurz, C., Walker, L., Rauchmann, B. S. &amp;amp; Perneczky, R. Dysfunction of the blood‒brain barrier in Alzheimer’s disease: evidence from human studies. Neuropathol. Appl. Neurobiol. 48, e12782–12794 (2022).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Arvanitakis, Z., Capuano, A. W., Leurgans, S. E., Bennett, D. A. &amp;amp; Schneider, J. A. Relation of cerebral vessel disease to Alzheimer’s disease dementia and cognitive function in elderly people: a cross-sectional study. Lancet Neurol. 15, 934–943 (2016).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Kisler, K., Nelson, A. R., Montagne, A. &amp;amp; Zlokovic, B. V. Cerebral blood flow regulation and neurovascular dysfunction in Alzheimer disease. Nat. Rev. Neurosci. 18, 419–434 (2017).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Iturria-Medina, Y. et al. Early role of vascular dysregulation on late-onset Alzheimer’s disease based on multifactorial data-driven analysis. Nat. Commun. 7, 11934–11948 (2016).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Shibata, M. et al. Clearance of Alzheimer’s amyloid-(1-40) peptide from brain by LDL receptor-related protein-1 at the blood-brain barrier. J. Clin. Investig. 106, 1489–1499 (2000).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Yamazaki, Y. &amp;amp; Kanekiyo, T. Blood-brain barrier dysfunction and the pathogenesis of Alzheimer’s disease. Int. J. Mol. Sci. 18, 1965–1984 (2017).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Zhao, Z., Nelson, A. R., Betsholtz, C. &amp;amp; Zlokovic, B. V. Establishment and dysfunction of the blood-brain barrier. Cell 163, 1064–1078 (2015).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Yu, Y., Yu, S., Battaglia, G. &amp;amp; Tian, X. Amyloid-β in Alzheimer’s disease: structure, toxicity, distribution, treatment, and prospects. Ibrain 10, 266–289 (2024).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Ma, Q. et al. Blood-brain barrier-associated pericytes internalize and clear aggregated amyloid-β42 by LRP1-dependent apolipoprotein E isoform-specific mechanism. Mol. Neurodegener. 19, 27–40 (2024).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Petralla, S., Panayotova, M., Franchina, E., Fricker, G. &amp;amp; Puris, E. Low-density lipoprotein receptor-related protein 1 as a potential therapeutic target in Alzheimer’s disease. Pharmaceutics 16, 948–969 (2024).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Tarawneh, R. Microvascular contributions to Alzheimer disease pathogenesis: is Alzheimer disease primarily an endotheliopathy? Biomolecules 13, 830–856 (2023).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Wardlaw, J. M. et al. Neuroimaging standards for research into small vessel disease and its contribution to aging and neurodegeneration. Lancet Neurol. 12, 822–838 (2013).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Jellinger, K. A. Alzheimer disease and cerebrovascular pathology: an update. J. Neural Transm.109, 813–836 (2002).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Bennett, R. E. et al. Tau induces blood vessel abnormalities and angiogenesis-related gene expression in P301L transgenic mice and human Alzheimer’s disease. Proc. Natl. Acad. Sci. USA 115, e1289–e1298 (2018).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Moon, Y. et al. Blood‒brain barrier breakdown is linked to tau pathology and neuronal injury in a differential manner according to amyloid deposition. J. Cereb. Blood Flow. Metab. 43, 1813–1825 (2023).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Fisher, R. A., Miners, J. S. &amp;amp; Love, S. Pathological changes within the cerebral vasculature in Alzheimer’s disease: new perspectives. Brain Pathol. 32, e13061–e13084 (2022).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Nation, D. A. et al. Blood‒brain barrier breakdown is an early biomarker of human cognitive dysfunction. Nat. Med. 25, 270–276 (2019).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Sweeney, M. D., Kisler, K., Montagne, A., Toga, A. W. &amp;amp; Zlokovic, B. V. The role of brain vasculature in neurodegenerative disorders. Nat. Neurosci. 21, 1318–1331 (2018).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Liu, Q. et al. Amyloid precursor protein regulates brain apolipoprotein E and cholesterol metabolism through lipoprotein receptor LRP1. Neuron 56, 66–78 (2007).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Kanekiyo, T. &amp;amp; Bu, G. The low-density lipoprotein receptor-related protein 1 and amyloid-β clearance in Alzheimer's disease. Front. Aging Neurosci. 6, 93–105 (2014).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Rauch, J. N. et al. LRP1 is a master regulator of tau uptake and spread. Nature 580, 381–385 (2020).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Cooper, J. M. et al. Regulation of tau internalization, degradation, and seeding by LRP1 reveals multiple pathways for tau catabolism. J. Biol. Chem. 296, 100715–100732 (2021).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Deane, R. et al. LRP/Amyloid β-Peptide interaction mediates differential brain efflux of Aβ isoforms. Neuron 43, 333–344 (2004).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Yamada, K. et al. The low density lipoprotein receptor-related protein 1 mediates uptake of amyloid β peptides in an in vitro model of the blood‒brain barrier cells. J. Biol. Chem. 283, 34554–34562 (2008).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Jaeger, L. B. et al. Testing the neurovascular hypothesis of Alzheimer’s disease: LRP-1 antisense reduces blood‒brain barrier clearance, increases brain levels of amyloid-β protein, and impairs cognition. J. Alzheimer Dis. 17, 553–570 (2009).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Kanekiyo, T. et al. Neuronal clearance of amyloid-β by endocytic receptor LRP1. J. Neurosci. 33, 19276–19283 (2013).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Storck, S. E. et al. Endothelial LRP1 transports amyloid-β1-42 across the blood‒brain barrier. J. Clin. Investig. 126, 123–136 (2016).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Montagne, A. et al. Blood‒brain barrier breakdown in the aging human hippocampus. Neuron 85, 296–302 (2015).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Montagne, A. et al. APOE4 leads to blood‒brain barrier dysfunction predicting cognitive decline. Nature 581, 71–76 (2020).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Nikolakopoulou, A. M. et al. Endothelial LRP1 protects against neurodegeneration by blocking cyclophilin A. J. Exp. Med. 218, 11–21 (2021).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Van Gool, B. et al. LRP1 has a predominant role in production over clearance of Aβ in a mouse model of Alzheimer’s disease. Mol. Neurobiol. 56, 7234–7245 (2019).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Govindpani, K. et al. Vascular dysfunction in Alzheimer’s disease: a prelude to the pathological process or a consequence of it? J. Clin. Med. 8, 651–708 (2019).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Tian, Y., Chang, J. C., Fan, E. Y., Flajolet, M. &amp;amp; Greengard, P. Adaptor complex AP2/PICALM, through interaction with LC3, targets Alzheimer’s APP-CTF for terminal degradation via autophagy. Proc. Natl. Acad. Sci. USA 110, 17071–17076 (2013).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Zhao, Z. et al. Central role for PICALM in amyloid-β blood‒brain barrier transcytosis and clearance. Nat. Neurosci. 18, 978–987 (2015).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Storck, S. et al. The concerted amyloid-beta clearance of lrp1 and abcb1/p-gp across the blood‒brain barrier is linked by picalm. Brain Behav. Immun. 73, 21–33 (2018).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Vanlandingham, P. A. &amp;amp; Ceresa, B. P. Rab7 regulates late endocytic trafficking downstream of multivesicular body biogenesis and cargo sequestration. J. Biol. Chem. 284, 12110–12124 (2009).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;McEwan, D. G. PLEKHM1 regulates autophagosome-lysosome fusion through HOPS complex and LC3/GABARAP proteins. Mol. Cell 57, 39–54 (2015).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Tian, X. et al. On the shuttling across the blood‒brain barrier via tubule formation: mechanism and cargo avidity bias. Sci. Adv. 6, eabc4397–eabc4412 (2020).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;M. Leite, D. et al. Syndapin-2 mediated transcytosis of amyloid-beta across the blood-brain barrier. Brain Commun. 4, fcac039–058 (2022).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Tian, X. et al. LRP-1-mediated intracellular antibody delivery to the central nervous system. Sci. Rep. 5, 11990–12004 (2015).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Yu, Y. J. et al. Boosting brain uptake of a therapeutic antibody by reducing its affinity for a transcytosis target. Sci. Transl. Med. 3, 84–44 (2011).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Zuchero, Y. J. et al. Discovery of novel blood-brain barrier targets to enhance brain uptake of therapeutic antibodies. Neuron 89, 70–82 (2016).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Arguello, A. et al. Molecular architecture determines brain delivery of a transferrin receptor-targeted lysosomal enzyme. J. Exp. Med. 219, e20211057–e20211075 (2022).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Niewoehner, J. et al. Increased brain penetration and potency of a therapeutic antibody using a monovalent molecular shuttle. Neuron 81, 49–60 (2014).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Terstappen, G. C., Meyer, A. H., Bell, R. D. &amp;amp; Zhang, W. Strategies for delivering therapeutics across the blood-brain barrier. Nat. Rev. Drug Discov. 20, 362–383 (2021).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Tian, X., Angioletti-Uberti, S. &amp;amp; Battaglia, G. On the design of precision nanomedicines. Sci. Adv. 6, aat0919–0937 (2020).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Michael Eisenstein 2021: Anti-amyloid antibodies take a bumpy road to the clinic. Nature 627, 252–253 (2024).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Jankowsky, J. L. et al. Mutant presenilins specifically elevate the levels of the 42 residue beta-amyloid peptide in vivo: evidence for augmentation of a 42-specific gamma secretase. Hum. Mol. Genet. 13, 159–170 (2004).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Ginsberg, S. D. et al. Regional selectivity of rab5 and rab7 protein upregulation in mild cognitive impairment and Alzheimer’s disease. J. Alzheimer Dis. 22, 631–639 (2010).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Xu, W., Fang, F., Ding, J. &amp;amp; Wu, C. Dysregulation of rab5-mediated endocytic pathways in Alzheimer’s disease. Traffic 19, 253–262 (2018).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Clark, C. M. et al. Use of florbetapir-PET for imaging β-amyloid pathology. JAMA 305, 275–283 (2011).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Mathys, H. et al. Single-cell multiregion dissection of Alzheimer’s disease. Nature 632, 858–868 (2024).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Sweeney, M. D., Sagare, A. P. &amp;amp; Zlokovic, B. V. Blood-brain barrier breakdown in Alzheimer disease and other neurodegenerative disorders. Nat. Rev. Neurol. 14, 133–150 (2018).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Knopman, D. S. et al. Alzheimer disease. Nat. Rev. Dis. Prim. 7, 33 (2021).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Guo, J.-W. et al. Erythrocyte membrane-encapsulated celecoxib improves the cognitive decline of Alzheimer’s disease by concurrently inducing neurogenesis and reducing apoptosis in APP/PS1 transgenic mice. Biomaterials 145, 106–127 (2017).&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Acknowledgements&lt;/head&gt;
    &lt;p&gt;This study was supported by the National Key R&amp;amp;D Program of China (2022YFC2009900), the Alzheimer’s Association New to the Field award, ERC Consolidator grant H2020-ERC-2018-CoG (769798 CheSSTag), the Plan de Recuperacion Nacional Biotech for Health Project (ADNano), Activitat científica dels grups de recerca de Catalunya (SGR-Cat 2021), and the Spanish Research Agency Proyectos I + D + I PID2020-119914RB-I00. We thank Liwen Qin (Core Facilities of West China Hospital) and Kaifu Ruan (Huaxi MR Research Centre for their assistance with digital western blotting. We would like to express our gratitude to the National Supercomputing Center in Chengdu for their invaluable support in providing computational resources and technical assistance during the data analysis and simulation effort process.&lt;/p&gt;
    &lt;head rend="h2"&gt;Author information&lt;/head&gt;
    &lt;head rend="h3"&gt;Authors and Affiliations&lt;/head&gt;
    &lt;head rend="h3"&gt;Contributions&lt;/head&gt;
    &lt;p&gt;Junyang Chen, Pan Xiang, Xiaohe Tian, and Giuseppe Battaglia were responsible for drafting the manuscript. Junyang Chen conducted the experiments, including data collection and analysis. Pan Xiang participated in the experimental work and performed data verification. Aroa Duro-Castano carried out chemical-related tasks, including polymer synthesis, characterization, and validation. Huawei Cai, Bin Guo, Xiqin Liu, Yifan Yu, Su Liu, Kui Luo, Bowen Ke, and Lorena Ruiz-Pérez reviewed and confirmed the experimental results and contributed to all phases of project planning and implementation. Qiyong Gong, Xiaohe Tian, and Giuseppe Battaglia supervised the overall progress of the study. Giuseppe Battaglia conceived and directed the experimental design. All the authors have read and approved the article.&lt;/p&gt;
    &lt;head rend="h3"&gt;Corresponding authors&lt;/head&gt;
    &lt;head rend="h2"&gt;Ethics declarations&lt;/head&gt;
    &lt;head rend="h3"&gt;Competing interests&lt;/head&gt;
    &lt;p&gt;The authors declare no competing interests. Giuseppe Battaglia is an associate editor of Signal Transduction and Targeted Therapy, but he has not been involved in the process of manuscript handling.&lt;/p&gt;
    &lt;head rend="h3"&gt;Ethical approval&lt;/head&gt;
    &lt;p&gt;All animal studies were conducted in accordance with the guidelines set forth by the West China Hospital Animal Care Committee (IACUC-approved project number: 20211475 A).&lt;/p&gt;
    &lt;head rend="h2"&gt;Additional information&lt;/head&gt;
    &lt;p&gt;Publisher’s note Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.&lt;/p&gt;
    &lt;head rend="h2"&gt;Supplementary information&lt;/head&gt;
    &lt;head rend="h2"&gt;Rights and permissions&lt;/head&gt;
    &lt;p&gt;Open Access This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article’s Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article’s Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit http://creativecommons.org/licenses/by/4.0/.&lt;/p&gt;
    &lt;head rend="h2"&gt;About this article&lt;/head&gt;
    &lt;head rend="h3"&gt;Cite this article&lt;/head&gt;
    &lt;p&gt;Chen, J., Xiang, P., Duro-Castano, A. et al. Rapid amyloid-β clearance and cognitive recovery through multivalent modulation of blood–brain barrier transport. Sig Transduct Target Ther 10, 331 (2025). https://doi.org/10.1038/s41392-025-02426-1&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;Received:&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Revised:&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Accepted:&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Published:&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;DOI: https://doi.org/10.1038/s41392-025-02426-1&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.nature.com/articles/s41392-025-02426-1"/><published>2025-10-18T15:14:58+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45628190</id><title>Attention Is a Luxury Good</title><updated>2025-10-18T18:41:45.188613+00:00</updated><content>&lt;doc fingerprint="f09fb1166f69ed9a"&gt;
  &lt;main&gt;
    &lt;head rend="h2"&gt;Attention is a luxury good&lt;/head&gt;
    &lt;p&gt;Luxury goods are special: they are scarce and expensive, and they earn us status with some folks because it shows that we paid more than we needed to.&lt;/p&gt;
    &lt;p&gt;Luxury isn’t about quality, suitability or performance. Luxury isn’t a more accurate watch or a faster processor. Luxury is a marker that we can afford to do something others might consider wasteful.&lt;/p&gt;
    &lt;p&gt;A Birkin bag is a luxury good, and so is reading an entire non-fiction book, listening to a public radio broadcast or attending a concert when we could stay at home and listen for free.&lt;/p&gt;
    &lt;p&gt;By ‘wasting’ our attention on nuance, narrative, experiences and everything except the checkbox takeaway, we’re sending a message to ourselves and others. A message about allocating our time to something beyond optimized performance or survival.&lt;/p&gt;
    &lt;p&gt;If you’ve signed up to offer an attention-luxury good, you undermine it when you also try to make it quick and convenient.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://seths.blog/2025/10/attention-is-a-luxury-good/"/><published>2025-10-18T15:39:47+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45628283</id><title>Picturing Mathematics</title><updated>2025-10-18T18:41:45.063357+00:00</updated><content>&lt;doc fingerprint="d0851df7d6d09a8"&gt;
  &lt;main&gt;
    &lt;p&gt;I’m a great believer in low-tech math. I don’t like to rely on things a computer tells me; what if there’s a bug in the code? I prefer trusting things that I can check for myself. At the same time, I’m keenly aware of the limits of my imagination even when it’s aided by paper and pencil. Sometimes I need a computer to show me things I can imagine myself imagining but don’t yet know how to imagine.&lt;/p&gt;
    &lt;p&gt;ILLUSTRATING MATH TOGETHER&lt;/p&gt;
    &lt;p&gt;In 2016, the Institute for Computational and Experimental Research in Mathematics (ICERM) in Providence, Rhode Island hosted a workshop called Illustrating Mathematics with the hope of bringing together researchers who, like me, study mathematical abstractions that can be brought to life by appropriate visuals. The workshop spawned a community that has held meetings at ICERM from time to time and has been running a webinar series since 2023.&lt;/p&gt;
    &lt;p&gt;I’ve spoken twice at the webinar. Back in 2024, I gave a brief mathematical eulogy for the brilliant mathematical explorer Roger Antonsen, now sadly deceased (though you can’t tell that he’s deceased from his website), who had a unique knack for coming up with cool visuals related to every topic we ever discussed. The striking figure below, arising from a deterministic model of a one-dimensional gas I’d proposed, is just one instance among many dozens he created as part of our email conversations.&lt;/p&gt;
    &lt;p&gt;&lt;lb/&gt;On October 10th, 2025, I spoke at the webinar for a second time, even more briefly: I gave a five-minute “show-and-ask” pitch as a warmup-act for the phenomenal math explainer/animator Grant Sanderson (aka 3Blue1Brown). My lightning talk was entitled “Evolving cross sections of Ford spheres”, and it was my way of testing the waters of the webinar crowd. I wondered: if I described a compelling mathematical object that nobody has illustrated yet in a fully satisfying manner, or at least not in a way that I find fully satisfying, and I shared with other webinar attendees my vision of how one could make that mathematical object more available to the brain by way of the eye, then could I convince others, more skilled than I in the art of computer-assisted illustration, to bring my vision into reality?&lt;/p&gt;
    &lt;p&gt;The answer proved to be a resounding “Yes!” Roice Nelson (with whom I’ve corresponded in the past) was one of several people who expressed interest, and Roice and I have moved forward with this project. Arguably I shouldn’t be spending my time this way—I don’t plan to write any research articles on the Ford spheres. I just think that they’re cool things that other people would find interesting if they were better publicized. And they got stuck in my head like a catchy tune.&lt;/p&gt;
    &lt;p&gt;AN 87-YEAR-OLD FRACTAL&lt;/p&gt;
    &lt;p&gt;I’m sure you’ve heard of fractals—they had a moment back in the 1980s that basically never ended, with fractals penetrating not just the sciences and geek culture but popular culture as well, culminating in a line about frozen fractals in a stirring power ballad in the 2013 Disney movie Frozen. The Ford spheres form a three-dimensional fractal that not enough mathematicians know about, even though Lester Ford described it in a charming article called, simply, “Fractions”, back in 1938—thirty-seven years before Benoit Mandelbrot coined the term “fractal”.&lt;/p&gt;
    &lt;p&gt;There are actually many arrangements that are called Ford sphere arrangements nowadays, but the one Ford himself described looks like this:&lt;/p&gt;
    &lt;p&gt;&lt;lb/&gt;This image is a still from a video made by Sam Wells and Aidan Donahue. The video gives some intuition for the fractal, but (to quote another Disney movie heroine) I want more.&lt;/p&gt;
    &lt;p&gt;What makes the Ford spheres worthy of study? From a research perspective, they’re descendants of a more famous two-dimensional fractal Ford wrote about in his 1938 article. The Ford circles are geometrical surrogates for the rational numbers, and the way the circles nestle against one another turns out to reflect important facts in number theory.&lt;/p&gt;
    &lt;p&gt;&lt;lb/&gt;It stands to reason that the analogous three-dimensional fractals would have secrets to teach us as well.&lt;/p&gt;
    &lt;p&gt;ALL OVER THE PLACE BUT ALMOST NOWHERE&lt;/p&gt;
    &lt;p&gt;Another thing that makes the Ford spheres worthy of illustration is the way they offer math-loving non-mathematicians the chance to have their minds blown by the counterintuitive behavior of countable dense sets. The primordial example of such a set is the set of rational numbers: as elements of the real line, the rational numbers are all over the place but they’re also almost nowhere. I’ve chosen my phrasing to be provocative and a little paradoxical, but in a certain mathematical sense, it’s true: hardly any real numbers are rational, but no tiniest stretch of the real line is free of them. If you zoom in on (say) the square root of two, no matter how far in you zoom, you’ll keep on seeing rational numbers with ever-bigger numerators and denominators. Ford circles give geometric meaning to that bigness: the bigger those numerators and denominators are, the tinier the corresponding circles are.&lt;/p&gt;
    &lt;p&gt;All the Ford circles are tangent to a single horizontal line. One way to think about the Ford circles is as what you get when you try to pack together as many circles as you can above that line. You start by drawing evenly-spaced circles tangent to the number line at the points . . . , −2, −1, 0, 1, 2, . . . I’ll just show the two circles that touch the line at 0 and 1 and hereafter ignore all the circles to the left or right of them:&lt;/p&gt;
    &lt;p&gt;&lt;lb/&gt;Then you add a circle to fill the gap between the 0-circle and the 1-circle, tangent to the line at 1/2):&lt;/p&gt;
    &lt;p&gt;&lt;lb/&gt;Then you add more circles to fill the new gaps with tangencies at 1/3 and 2/3:&lt;/p&gt;
    &lt;p&gt;&lt;lb/&gt;Then you add even more circles to fill the newer gaps with tangencies at 1/4, 2/5, 3/5, and 3/4:&lt;/p&gt;
    &lt;p&gt;&lt;lb/&gt;If you continue this process, the circles you’ll draw are precisely the Ford circles, all tangent to the line, and the points of tangency will be all the rational numbers and nothing else.&lt;/p&gt;
    &lt;p&gt;Now imagine that, having drawn in the Ford circles (or as many of them as you have the patience to draw), you add to your picture a horizontal line parallel to, but slightly above, the line we were talking about before. This new line will intersect some of the circles. If you move that new line downward slightly, it’ll intersect more of the circles. As you continue to move the new line further downward, closer and closer to the original line (which I’ll call the “limit line”), you start to intersect more and more circles.&lt;/p&gt;
    &lt;p&gt;FROM TWO TO THREE&lt;/p&gt;
    &lt;p&gt;Ford also described a similar fractal one dimension up. We have infinitely many spheres, all tangent to the x, y plane, and the points of tangency correspond exactly to the points (x, y) with x and y rational. Here’s Ford’s sketch showing four of the infinitely many spheres:&lt;/p&gt;
    &lt;p&gt;&lt;lb/&gt;(Yeah, four is a lot less than infinity, but cut Ford some slack: this was before computers.)&lt;/p&gt;
    &lt;p&gt;I want to picture this complicated three-dimensional object by way of its two-dimensonal cross-sections. Here’s one of the animations Roice sent me a few days ago, as part of our ongoing work:&lt;/p&gt;
    &lt;p&gt;&lt;lb/&gt;It shows what you get when you intersect the Ford spheres with a moving plane that approaches, without ever reaching, the limit plane that all the Ford spheres touch (analogous to the limit line that all the Ford circles touch). As time passes in the video and the moving plane moves on, we see a mix of growing disks and shrinking disks; the shrinking disks are cross-sections of the spheres whose centers the plane has already passed through, while the growing disks are cross-sections of the spheres whose centers still lie just a bit ahead of us. The picture becomes frothier and frothier, approaching the limit of infinite fractal frothiness.&lt;/p&gt;
    &lt;p&gt;The video is just a rough cut, but already I can see features of the image that I didn’t expect: halos and solar arches, one might call them. Perhaps one of you will find a way to make rigorous mathematics of what your eyes are telling you, but even if not, I hope the animation gives you visual pleasure.&lt;/p&gt;
    &lt;p&gt;WHY I BOTHER&lt;/p&gt;
    &lt;p&gt;If this essay inspires any of you to drop by one of the monthly meetings of the Illustrating Math webinar, visit the webinar link. Or, if you’re feeling brave and want to pitch an idea or to give a five-minute presentation of any kind, go to the show-and-ask signup sheet. Or if you just want to see what other cool visuals Roice has created, check out his website.&lt;/p&gt;
    &lt;p&gt;I realized shortly before I published this essay that there is a connection to my research, though it’s not a direct link, and that it was probably subconsciously driving me to explore the Ford spheres. Two decades ago I was looking at “rotor-router blobs” that gave rise to images like this one, generated by Tobias Friedrich and Lionel Levine:&lt;/p&gt;
    &lt;p&gt;If you’re like me, your eyes and brain see ghostly circles (or near-circles), forming bands separated by lines of orange fire. The trouble is, those near-circles are very much creations of your eyes and brain, intermediated by software called ImageMagick. The task of figuring out what details at the pixel-level create ghostly near-circles in my brain defeated me. Such are the frustrations of “digital pointillism”: when we zoom in, we tend to lose sight of what we are trying to understand! It’s the problem faced by creators of monumental paintings: you have to stand close to the canvas to paint your strokes or dots or whatever, but when you stand close it’s easy to literally lose sight of the big picture. I’d like to try looking at those blobs again sometime, once I have the tools and the skills to “interrogate” such pictures more effectively than I could in the past.&lt;/p&gt;
    &lt;p&gt;A smaller-scale version of this gap in my skill-set manifests itself for the Ford spheres. Those halos and solar arches exist in my brain (and I hope in yours), but what do they correspond to at the pixel level? I don’t know how to ask the picture to tell me, but I’m hoping I can learn.&lt;/p&gt;
    &lt;p&gt;I’ll finish by mentioning one last reason for bringing the Ford spheres from the world of fancy to the world of the senses: videos like these can convey to non-mathematicians, in a way that words and symbols can’t, what makes math so addictive to those of us who love it.&lt;/p&gt;
    &lt;p&gt;Thanks to David Jacobi and Roice Nelson.&lt;/p&gt;
    &lt;p&gt;REFERENCES&lt;/p&gt;
    &lt;p&gt;L. R. Ford, Fractions, American Mathematical Monthly, 45, 586–601.&lt;/p&gt;
    &lt;p&gt;S. Northshield, Ford circles and spheres, 2015.&lt;/p&gt;
    &lt;p&gt;C. Pickover, Beauty and Gaussian Rational Numbers, Chapter 103 (pages 243-247) in: “Wonders of Numbers: Adventures in Mathematics, Mind, and Meaning”, Oxford University Press, 2001.&lt;/p&gt;
    &lt;p&gt;S. Wells and A. Donahue, Ford spheres, 2021.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://mathenchant.wordpress.com/2025/10/18/picturing-mathematics/"/><published>2025-10-18T15:52:39+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45628315</id><title>Event Sourcing, CQRS and Micro Services: Real FinTech Example</title><updated>2025-10-18T18:41:44.811978+00:00</updated><content>&lt;doc fingerprint="e73ca15521624faf"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Event Sourcing, CQRS and Micro Services: Real FinTech Example from my Consulting Career&lt;/head&gt;
    &lt;p&gt;This is a detailed breakdown of a FinTech project from my consulting career. I’m writing this because I’m convinced that this was a great architecture choice and there aren’t many examples of event sourcing and CQRS in the internet where it actually makes sense. You are very welcome to share your thoughts and whether you agree about this design choice or not :)&lt;/p&gt;
    &lt;head rend="h2"&gt;Project Description&lt;/head&gt;
    &lt;p&gt;The client was a medium sized fintech company that has in-house developed a real time trading platform that was launched as a beta test version. The functionality included:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Real time stock info&lt;/item&gt;
      &lt;item&gt;Portfolio management&lt;/item&gt;
      &lt;item&gt;Real time transaction tracking&lt;/item&gt;
      &lt;item&gt;Report generation&lt;/item&gt;
      &lt;item&gt;Account with a little social media functionality (making posts, liking and commenting)&lt;/item&gt;
      &lt;item&gt;Mobile device notifications&lt;/item&gt;
      &lt;item&gt;and more&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Their app was an MVP. It had a monolithic Spring boot backend and a simple React based web UI, everything hosted on Azure.&lt;/p&gt;
    &lt;p&gt;They hired us because of two main reasons: their MVP was not auditable and thus not compliant with financial regulations and also not scalable (high usage and fault tolerance).&lt;/p&gt;
    &lt;head rend="h2"&gt;Our Team&lt;/head&gt;
    &lt;p&gt;We worked with the customer, not alone. Our team were about 10 people, experienced back end or full stack developers and me as a software architect. The client had about 20 developers, ranging from front end, back end to database experts and more. My role was to lead the architecture.&lt;/p&gt;
    &lt;head rend="h2"&gt;Our Design Decision&lt;/head&gt;
    &lt;p&gt;As said, the main issues to solve were auditability (compliance) and scalability (including performance and fault tolerance). I will start with an overview of the design including a super short repetition of what each technology is and later dive into detail in the next session, including discussing the trade offs and alternative solutions.&lt;/p&gt;
    &lt;head rend="h2"&gt;Auditability&lt;/head&gt;
    &lt;p&gt;Our customer must by law always know past states. For example, customer A had exactly $901 on their account 2 months ago at 1:30 pm. This was not possible with the existing system so we needed to tackle it. I proposed to use event sourcing. Here is a very brief explanation of event sourcing.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Event sourcing = Save events, not state&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;So instead of having a state we update, we save events. We use these events to create the state when we need it. Consider this simple example:&lt;/p&gt;
    &lt;p&gt;Old Approach&lt;/p&gt;
    &lt;code&gt;+--------------------------------------+&lt;lb/&gt;| Table: Account_Balance               |&lt;lb/&gt;+--------------------------------------+&lt;lb/&gt;| Account_ID | Balance | Last_Updated  |&lt;lb/&gt;+--------------------------------------+&lt;lb/&gt;| Customer_A | $0      | 2025-04-29    | &amp;lt;- Initial state&lt;lb/&gt;+--------------------------------------+&lt;lb/&gt;| Customer_A | $5      | 2025-04-29    | &amp;lt;- After receiving $5 (overwrites $0)&lt;lb/&gt;+--------------------------------------+&lt;lb/&gt;| Customer_A | $12     | 2025-04-29    | &amp;lt;- After receiving $7 (overwrites $5)&lt;lb/&gt;+--------------------------------------+&lt;/code&gt;
    &lt;p&gt;Problem: Past states (e.g., $5 at 1:30 PM) are lost unless separately logged.&lt;/p&gt;
    &lt;p&gt;Event Sourcing&lt;/p&gt;
    &lt;code&gt;+-------------------------------------------------------------------+&lt;lb/&gt;| Table: Account_Events                                             |&lt;lb/&gt;+-------------------------------------------------------------------+&lt;lb/&gt;| Event_ID | Account_ID | Event_Type | Amount | Timestamp           |&lt;lb/&gt;+-------------------------------------------------------------------+&lt;lb/&gt;| 1        | Customer_A | Deposit    | $5     | 2025-04-29 13:30:00 | &amp;lt;- Event: Received $5&lt;lb/&gt;+-------------------------------------------------------------------+&lt;lb/&gt;| 2        | Customer_A | Deposit    | $7     | 2025-04-29 13:31:00 | &amp;lt;- Event: Received $7&lt;lb/&gt;+-------------------------------------------------------------------+&lt;/code&gt;
    &lt;p&gt;Reconstructing Balance at 2025–04–29 13:30:00:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Sum events up to timestamp: $5 = $5&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Reconstructing Balance at 2025–04–29 13:31:00:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Sum events up to timestamp: $5 + $7 = $12&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Reconstructing Balance 2 months ago:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Sum all relevant events &amp;lt;= timestamp&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This is event sourcing in a nutshell. For a more comprehensive explanation, please have a look here for example.&lt;/p&gt;
    &lt;p&gt;This is the right choice here because this gives us total control and transparency. When we want to know how much money a particular user had 2 months ago at 1:42 pm, we can just query the needed transactions and sum them up. We know everything with this approach. And this is required to be compliant. As a side note, accounting does the same thing but, of course, they don’t call it event sourcing :)&lt;/p&gt;
    &lt;p&gt;But event sourcing comes with more advantages, including:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Rebuild state: you can always just discard the app state completely and rebuild it. You have all info you need, all events that ever took place.&lt;/item&gt;
      &lt;item&gt;Event replay: if we want to adjust a past event, for example because it was incorrect, we can just do that and rebuild the app state.&lt;/item&gt;
      &lt;item&gt;Event replay again: if we have received events in the wrong sequence, which is a common problem with systems that communicate with asynchronous messaging, we can just replay them and get the correct state.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;Alternatives to Event Sourcing&lt;/head&gt;
    &lt;p&gt;Event sourcing definitely solves the auditability/compliance problem. But there are alternatives:&lt;/p&gt;
    &lt;p&gt;1. Audit Log Pattern: Keep the current state tables but add comprehensive audit logs that track all changes. This is simpler to implement but doesn’t provide the same level of detail as event sourcing. You track what changed, but not necessarily the business intent behind the change.&lt;/p&gt;
    &lt;p&gt;2. Change Data Capture (CDC): Use database-level tools to capture all changes automatically. Tools like Debezium can stream database changes, but this is more technical and less business-focused than event sourcing.&lt;/p&gt;
    &lt;p&gt;3. Temporal Tables: Use database features (like SQL Server’s temporal tables) to automatically version data. This provides history but lacks the rich business context that events provide.&lt;/p&gt;
    &lt;p&gt;4. Transaction Log Mining: Extract historical data from database transaction logs. This is complex and database-specific, making it harder to maintain.&lt;/p&gt;
    &lt;head rend="h2"&gt;CQRS (Command Query Responsibility Segregation)&lt;/head&gt;
    &lt;p&gt;The second major architectural decision was implementing CQRS, though we didn’t start with it immediately due to complexity. We kept it in mind during the initial design and tested it later through a proof of concept, then implemented it in production.&lt;/p&gt;
    &lt;p&gt;Here’s what CQRS means:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;CQRS = Separate your reads from your writes&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;This is all. Often CQRS is presented as (among other things) having two separate DBs, one for writing and one for reading. But this is not true, you are doing CQRS already when you just separate read and write code, for example by putting them into separate classes.&lt;/p&gt;
    &lt;p&gt;However, the benefits we needed do indeed require separate DBs.&lt;/p&gt;
    &lt;code&gt;Traditional Approach:&lt;lb/&gt;┌─────────────┐    ┌──────────────┐    ┌──────────────┐&lt;lb/&gt;│   Client    │────│   Service    │────│   Database   │&lt;lb/&gt;│             │    │              │    │              │&lt;lb/&gt;│ Read/Write  │    │ Read/Write   │    │ Read/Write   │&lt;lb/&gt;└─────────────┘    └──────────────┘    └──────────────┘&lt;lb/&gt;&lt;lb/&gt;&lt;lb/&gt;CQRS Approach:&lt;lb/&gt;┌─────────────┐    ┌──────────────┐    ┌──────────────┐&lt;lb/&gt;│   Client    │────│ Command Side │────│ Write Store  │&lt;lb/&gt;│             │    │   (Writes)   │    │ (Event Store)│&lt;lb/&gt;│             │    └──────────────┘    └──────────────┘&lt;lb/&gt;│             │           │                    │&lt;lb/&gt;│             │           │ Events             │ Events&lt;lb/&gt;│             │           ▼                    ▼&lt;lb/&gt;│             │    ┌──────────────┐    ┌──────────────┐&lt;lb/&gt;│             │────│  Query Side  │────│  Read Store  │&lt;lb/&gt;│             │    │   (Reads)    │    │ (Projections)│&lt;lb/&gt;└─────────────┘    └──────────────┘    └──────────────┘&lt;/code&gt;
    &lt;p&gt;More about CQRS here.&lt;/p&gt;
    &lt;p&gt;The benefits of doing this are the following:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Scale read and write resources differently&lt;/item&gt;
      &lt;item&gt;By having two separate DBs, you can choose different technologies and scale them independently&lt;/item&gt;
      &lt;item&gt;If performance is critical in your app, this can definitely help, especially when reads and writes are not of a similar amount&lt;/item&gt;
      &lt;item&gt;In our case, we have a read heavy app&lt;/item&gt;
      &lt;item&gt;You can have different models for reading and writing&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;As hinted already, this was crucial for our trading platform because:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Complex reports and dashboards need denormalized, optimized read models,&lt;/item&gt;
      &lt;item&gt;Read and write loads are completely different in trading systems, so we need independent scalability,&lt;/item&gt;
      &lt;item&gt;We can use different databases optimized for each purpose.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;However, CQRS with separate DBs comes at great cost again, for example, you need to deal with eventual consistency.&lt;/p&gt;
    &lt;p&gt;Important note: We do NOT use CQRS on every service but only where it justifies the complexity.&lt;/p&gt;
    &lt;head rend="h3"&gt;Alternatives to CQRS&lt;/head&gt;
    &lt;p&gt;You can try to get the benefits of CQRS in other ways, for example by using caching strategies and read replicas. I’ll dive into the tradeoffs of these approaches in the detailed discussion section.&lt;/p&gt;
    &lt;head rend="h2"&gt;Microservices&lt;/head&gt;
    &lt;p&gt;We also decided to break the monolith into microservices. The main reason for this decision was again independent scalability and higher fault tolerance. The existing monolith was often running on very high CPU usage due to report generation and real-time market data processing consuming most resources.&lt;/p&gt;
    &lt;p&gt;By separating these concerns into different services, even if our report generation service crashes due to heavy usage, other critical services like transaction processing are not impacted at all. This improves our overall system availability (MTBF — Mean Time Between Failures) and reduces recovery time (MTTR — Mean Time To Recovery).&lt;/p&gt;
    &lt;p&gt;An interesting part here was the migration from monolith to microservices using the strangler fig pattern, gradually replacing parts of the monolith.&lt;/p&gt;
    &lt;head rend="h2"&gt;Asynchronous Messaging&lt;/head&gt;
    &lt;p&gt;Another decision was to use asynchronous messaging for inter-service communication instead of request-response communication.&lt;/p&gt;
    &lt;code&gt;Synchronous (Traditional):&lt;lb/&gt;Service A ──HTTP Request──► Service B&lt;lb/&gt;          ◄──Response─────&lt;/code&gt;
    &lt;code&gt;Asynchronous (Our Approach):&lt;lb/&gt;Service A ──Event──► Message Queue ──Event──► Service B&lt;/code&gt;
    &lt;p&gt;This event-driven approach has many benefits such as high decoupling. However, we were primarily interested in better fault tolerance:&lt;/p&gt;
    &lt;p&gt;Suppose Service A informs Service B to save data to its DB. If we use a traditional HTTP request and Service B is down, then the request is lost. Of course there are ways to combat this but if we use asynchronous messaging instead, then Service A just pushed that event to the message queue and if Service B is down, nothing happens. The event just stays on the queue. And as soon as Service B is up again, the event gets processed.&lt;/p&gt;
    &lt;p&gt;So using this approach gives us better fault tolerance in the case of network partitions.&lt;/p&gt;
    &lt;p&gt;Now asynchronous messaging has clear downsides too, mainly complexity, particularly when it comes to debugging, testing and things of that kind.&lt;/p&gt;
    &lt;head rend="h2"&gt;Detailed Discussion: Tradeoffs and Alternatives&lt;/head&gt;
    &lt;head rend="h2"&gt;Microservices Deep Dive&lt;/head&gt;
    &lt;p&gt;We identified services based on business capabilities as follows:&lt;/p&gt;
    &lt;code&gt;Transaction-Portfolio Service:&lt;lb/&gt;├── Owns: Account balances, transaction history, stock holdings&lt;lb/&gt;├── Responsibilities: Money transfers, buy/sell orders, balance queries&lt;lb/&gt;└── Database: PostgreSQL (ACID compliance critical)&lt;lb/&gt;&lt;lb/&gt;Notification Service:&lt;lb/&gt;├── Owns: User preferences, notification history&lt;lb/&gt;├── Responsibilities: Email, SMS, push notifications&lt;lb/&gt;└── Database: MongoDB (flexible schema for different notification types)&lt;lb/&gt;└── Event Sourcing: NOT used (simple CRUD operations)&lt;lb/&gt;&lt;lb/&gt;Social Service:&lt;lb/&gt;├── Owns: Posts, likes, comments&lt;lb/&gt;├── Responsibilities: Social feed, user interactions&lt;lb/&gt;└── Database: MongoDB&lt;lb/&gt;└── Event Sourcing: NOT used (not critical for compliance)&lt;lb/&gt;&lt;lb/&gt;Report Service:&lt;lb/&gt;├── Owns: Aggregated data, report templates&lt;lb/&gt;├── Responsibilities: Generate complex reports&lt;lb/&gt;└── Database: ClickHouse (optimized for analytics)&lt;lb/&gt;└── CQRS: Read-only projections from other services&lt;lb/&gt;&lt;lb/&gt;User Service:&lt;lb/&gt;├── Owns: User profiles, authentication&lt;lb/&gt;├── Responsibilities: Registration, login, profile management&lt;lb/&gt;└── Database: PostgreSQL&lt;lb/&gt;└── Event Sourcing: NOT used (user profiles change infrequently)&lt;/code&gt;
    &lt;p&gt;Service Boundary Evolution: Initially, we considered separating Transaction Service and Portfolio Service. However, we discovered early in the design phase that this would be wrong. Due to very frequent boundary crossings and the need for distributed transactions when a trade affects both account balance and portfolio holdings, we decided to keep these as a single service. This eliminated the complexity of distributed transactions while maintaining other benefits.&lt;/p&gt;
    &lt;p&gt;In my opinion, the need of distributed transactions or sagas is always an indicator to check if your service boundaries are the right choice. Maybe you want to merge services instead. To quote Sam Newman in Building Microservices (2nd edition):&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Distributed Transactions: Just Say No. For all the reasons outlined so far, I strongly suggest you avoid the use of distributed transactions like the two-phase commit to coordinate changes in state across your microservices. So what else can you do? Well, the first option could be to just not split the data apart in the first place. If you have pieces of state that you want to manage in a truly atomic and consistent way, and you cannot work out how tosensibly get these characteristics without an ACID-style transaction, then leave that state in a single database, and leave the functionality that manages that state in a single service (or in your monolith). If you’re in the process of working out where to split your monolith and what decompositions might be easy (or hard), then you could well decide that splitting apart data that is currently managed in a transaction is just too difficult to handle right now. Work on some other area of the system, and come back to this later. But what happens if you really do need to break this data apart, but you don’t want all the pain of managing distributed transactions? In cases like this, you may consider an alternative approach: sagas.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;So he also recommends to either merge the services or, if really needed, to use sagas. In our case we decided that this service boundary would be wrong since the scalibility needs to the transaction service and the portfolio service are not that different actually.&lt;/p&gt;
    &lt;head rend="h3"&gt;Where We Use Event Sourcing&lt;/head&gt;
    &lt;p&gt;We used event sourcing only in the Transaction-Portfolio Service due to the strict compliance requirements for financial data. The other services used traditional CRUD patterns since they didn’t require the same level of auditability.&lt;/p&gt;
    &lt;head rend="h2"&gt;Event Sourcing Deep Dive&lt;/head&gt;
    &lt;head rend="h3"&gt;Benefits of Event Sourcing&lt;/head&gt;
    &lt;p&gt;Event sourcing has better performance when it comes to writing. Consider this example:&lt;/p&gt;
    &lt;p&gt;Traditional Update Pattern:&lt;/p&gt;
    &lt;code&gt;1. SELECT current_balance FROM accounts WHERE id = 123&lt;lb/&gt;2. UPDATE accounts SET balance = balance + 100 WHERE id = 123&lt;lb/&gt;   (Requires row locking, potential contention)&lt;/code&gt;
    &lt;p&gt;Event Sourcing Pattern:&lt;/p&gt;
    &lt;code&gt;INSERT INTO events (account_id, type, amount, timestamp)&lt;lb/&gt;   VALUES (123, 'deposit', 100, NOW())&lt;/code&gt;
    &lt;p&gt;And it has even more advantages on the writing part:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Write Performance: Append-only writes are much faster than updates&lt;/item&gt;
      &lt;item&gt;No Lock Contention: Multiple transactions can write simultaneously&lt;/item&gt;
      &lt;item&gt;Better Concurrency: No need to lock rows for balance updates&lt;/item&gt;
      &lt;item&gt;Optimized for SSD: Sequential writes perform excellently on modern storage&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Although we talked about this already, here is a sample of how you could implement summing an event replay:&lt;/p&gt;
    &lt;code&gt;-- Regulatory Question: "What was Account X's balance on Date Y at Time Z?"&lt;lb/&gt;-- Event Sourcing Answer:&lt;lb/&gt;SELECT SUM(amount) FROM events&lt;lb/&gt;WHERE account_id = X AND timestamp &amp;lt;= 'Y Z'&lt;lb/&gt;GROUP BY account_id&lt;/code&gt;
    &lt;head rend="h3"&gt;Challenges and Solutions&lt;/head&gt;
    &lt;p&gt;Performance Issue — Event Replay&lt;/p&gt;
    &lt;p&gt;The main challenge we faced was performance degradation when reconstructing current state from thousands of events. For active trading accounts, we had up to 50,000 events per day.&lt;/p&gt;
    &lt;p&gt;Our solution was a hybrid approach:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Event-Based Snapshots: Create snapshots after every 1,000 events per account&lt;/item&gt;
      &lt;item&gt;Delta Replay: Only replay events since the last snapshot&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This approach ensures that we never need to replay more than 1,000 events for any account, keeping reconstruction time predictable and fast.&lt;/p&gt;
    &lt;code&gt;-- Sample code&lt;lb/&gt;SELECT snapshot.balance + COALESCE(SUM(events.amount), 0) as current_balance&lt;lb/&gt;FROM account_snapshots snapshot&lt;lb/&gt;LEFT JOIN events ON events.account_id = snapshot.account_id&lt;lb/&gt;    AND events.sequence_number &amp;gt; snapshot.last_event_sequence&lt;lb/&gt;WHERE snapshot.account_id = 123&lt;lb/&gt;    AND snapshot.last_event_sequence = (&lt;lb/&gt;        SELECT MAX(last_event_sequence) FROM account_snapshots&lt;lb/&gt;        WHERE account_id = 123&lt;lb/&gt;    )&lt;/code&gt;
    &lt;p&gt;This reduced our balance calculation time from 2–5 seconds to 50–200ms for active accounts.&lt;/p&gt;
    &lt;p&gt;Storage Growth&lt;/p&gt;
    &lt;p&gt;Events accumulate rapidly. We implemented a tiered storage strategy:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Hot storage (Azure Premium SSD): Last 3 months ~ 2TB&lt;/item&gt;
      &lt;item&gt;Warm storage (Azure Standard SSD): 3–12 months ~ 5TB&lt;/item&gt;
      &lt;item&gt;Cold storage (Azure Archive): 1+ years ~ 50TB&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Total storage costs: $800/month vs $15,000/month if everything was on premium storage.&lt;/p&gt;
    &lt;head rend="h3"&gt;Tradeoffs&lt;/head&gt;
    &lt;p&gt;Event sourcing adds significant complexity. A part of the team needed training.&lt;/p&gt;
    &lt;p&gt;Query Complexity:&lt;lb/&gt;Getting current state requires aggregation:&lt;/p&gt;
    &lt;code&gt;-- Current Balance Query:&lt;lb/&gt;SELECT account_id, SUM(amount) as current_balance&lt;lb/&gt;FROM events&lt;lb/&gt;WHERE account_id = 123&lt;lb/&gt;GROUP BY account_id&lt;lb/&gt;&lt;lb/&gt;&lt;lb/&gt;-- vs Traditional:&lt;lb/&gt;SELECT balance FROM accounts WHERE id = 123&lt;/code&gt;
    &lt;p&gt;Storage Growth:&lt;lb/&gt;Events accumulate over time and require storage management strategies.&lt;/p&gt;
    &lt;head rend="h3"&gt;Why We Rejected Alternatives&lt;/head&gt;
    &lt;p&gt;Yes, we have decided to use event sourcing even though it comes with read performance issues — and performance was a main concern of our customer.&lt;/p&gt;
    &lt;p&gt;The reason is that event sourcing is simply much superior when it comes to audits. This was much more important to the customer than performance. Plus we managed to solve the performance issue.&lt;/p&gt;
    &lt;head rend="h2"&gt;CQRS Deep Dive&lt;/head&gt;
    &lt;p&gt;Very important note: CQRS in the sense of having multiple DBs adds complexity and eventual consistency. This is why we decided against using it immediately but just kept it in mind. We later created a proof of concept to compare the performance benefits we would get in the Portfolio Service.&lt;/p&gt;
    &lt;p&gt;Our POC results showed for a test user account:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Report generation time: 30 seconds → 10 seconds&lt;/item&gt;
      &lt;item&gt;Dashboard load time: 1 second → 400ms&lt;/item&gt;
      &lt;item&gt;Complex query performance: about 2x improvement&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The result convinced us to implement it. We later added it to the Transaction Service for high-volume trading operations, but not to all services. Adding CQRS to all our services would have little benefits (we don’t need the performance benefits or different read/write models at most services) but much complexity.&lt;/p&gt;
    &lt;head rend="h3"&gt;Implementation Details&lt;/head&gt;
    &lt;p&gt;We implemented CQRS for the Transaction-Portfolio Service as follows. We had a Postgres DB for the write side (command side) and a MongoDB for the read side (query side). We chose a document store because we did not want a fixed schema plus we wanted very high read throughput.&lt;/p&gt;
    &lt;p&gt;So the service received a request and decided to write, it wrote to the Postgres DB and also emitted an event to our message broker (Azure Service Bus). This event was then processed by a different instance of the Transaction-Portfolio Service and we write to the MongoDB. Here we don’t write the same data but a denormalized form, so that querying the data we need is faster.&lt;/p&gt;
    &lt;p&gt;Note we sacrifice ACID by doing this. This gave us eventual consistency between read and write sides, typically within 100–500ms.&lt;/p&gt;
    &lt;p&gt;Why This Was Faster&lt;/p&gt;
    &lt;p&gt;The performance improvements came from:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Denormalized Read Models: Instead of complex JOINs across normalized tables, we had pre-computed aggregations&lt;/item&gt;
      &lt;item&gt;Optimized Indexes: Each MongoDB collection had indexes tailored for specific query patterns&lt;/item&gt;
      &lt;item&gt;Separate Scaling: We could scale read replicas independently of the write database&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Consider this example of generating a user’s portfolio performance report:&lt;/p&gt;
    &lt;p&gt;Traditional approach:&lt;/p&gt;
    &lt;code&gt;-- Complex query with multiple JOINs and aggregations&lt;lb/&gt;SELECT u.name, p.symbol,&lt;lb/&gt;       SUM(t.quantity) as total_shares,&lt;lb/&gt;       AVG(t.price) as avg_price,&lt;lb/&gt;       -- ... more complex calculations&lt;lb/&gt;FROM users u&lt;lb/&gt;JOIN portfolios p ON u.id = p.user_id&lt;lb/&gt;JOIN transactions t ON p.id = t.portfolio_id&lt;lb/&gt;WHERE u.id = 123&lt;lb/&gt;GROUP BY u.name, p.symbol&lt;lb/&gt;-- This took up to 30 seconds for active users&lt;/code&gt;
    &lt;p&gt;CQRS approach:&lt;/p&gt;
    &lt;code&gt;// Simple document lookup from pre-computed projection&lt;lb/&gt;db.portfolio_summaries.findOne({ user_id: 123 });&lt;lb/&gt;// fast&lt;/code&gt;
    &lt;head rend="h2"&gt;Major Challenges and How We Solved Them&lt;/head&gt;
    &lt;p&gt;1. Debugging Distributed Systems&lt;/p&gt;
    &lt;p&gt;This was our biggest pain point initially. When a transaction failed, tracing the issue across multiple services and async message queues was a nightmare.&lt;/p&gt;
    &lt;p&gt;We solved this by implementing distributed tracing with correlation IDs that flow through every service call and message. Every log entry includes the correlation ID, making it possible to reconstruct the entire flow. We used Jaeger for distributed tracing and structured logging with consistent fields across all services.&lt;/p&gt;
    &lt;p&gt;2. Testing Complexity&lt;/p&gt;
    &lt;p&gt;Testing event sourcing and CQRS systems is fundamentally different. You can’t just mock database calls — you need to verify that events are produced correctly and that projections are updated properly.&lt;/p&gt;
    &lt;p&gt;We created integration test environments that could replay production events against test instances. This allowed us to validate that code changes wouldn’t break existing event processing. We also invested heavily in property-based testing to verify that event sequences always produce valid states.&lt;/p&gt;
    &lt;head rend="h2"&gt;What Would I Change?&lt;/head&gt;
    &lt;p&gt;I’m convinced this was the right architecture for our specific requirements. However, there are definitely things I would approach differently:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;We didn’t have a clear strategy for evolving event schemas initially. When we needed to add fields to events or change event structure, it created compatibility issues with existing events.&lt;/item&gt;
      &lt;item&gt;Also our monitoring and logging was weak in the beginning and made everything even more complex to start.&lt;/item&gt;
      &lt;item&gt;I would consider using EventStore instead of Postgres for the Transaction-Portfolio Service. EventStore is purpose-built for event sourcing and provides features like built-in projections, event versioning, and optimized append-only storage. This would eliminate much of the custom event sourcing infrastructure we had to build on top of Postgres.&lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://lukasniessen.medium.com/this-is-a-detailed-breakdown-of-a-fintech-project-from-my-consulting-career-9ec61603709c"/><published>2025-10-18T15:56:22+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45628348</id><title>Free Programing Books</title><updated>2025-10-18T18:41:44.386173+00:00</updated><content>&lt;doc fingerprint="a757541299261d84"&gt;
  &lt;main&gt;
    &lt;p&gt;Search the list at https://ebookfoundation.github.io/free-programming-books-search/ .&lt;/p&gt;
    &lt;p&gt;This page is available as an easy-to-read website. Access it by clicking on .&lt;/p&gt;
    &lt;p&gt;This list was originally a clone of StackOverflow - List of Freely Available Programming Books with contributions from Karan Bhangui and George Stocker.&lt;/p&gt;
    &lt;p&gt;The list was moved to GitHub by Victor Felder for collaborative updating and maintenance. It has grown to become one of GitHub's most popular repositories.&lt;/p&gt;
    &lt;p&gt;The Free Ebook Foundation now administers the repo, a not-for-profit organization devoted to promoting the creation, distribution, archiving, and sustainability of free ebooks. Donations to the Free Ebook Foundation are tax-deductible in the US.&lt;/p&gt;
    &lt;p&gt;Please read CONTRIBUTING. If you're new to GitHub, welcome! Remember to abide by our adapted from Code of Conduct too (translations also available).&lt;/p&gt;
    &lt;p&gt;Click on these badges to see how you might be able to help:&lt;/p&gt;
    &lt;p&gt;Share on LinkedIn&lt;/p&gt;
    &lt;p&gt;Share on Mastodon/Fediverse&lt;/p&gt;
    &lt;p&gt;Share on Telegram&lt;/p&gt;
    &lt;p&gt;Share on 𝕏 (Twitter)&lt;/p&gt;
    &lt;p&gt;This project lists books and other resources grouped by genres:&lt;/p&gt;
    &lt;p&gt;English, By Programming Language&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Arabic / al arabiya / العربية&lt;/item&gt;
      &lt;item&gt;Armenian / Հայերեն&lt;/item&gt;
      &lt;item&gt;Azerbaijani / Азәрбајҹан дили / آذربايجانجا ديلي&lt;/item&gt;
      &lt;item&gt;Bengali / বাংলা&lt;/item&gt;
      &lt;item&gt;Bulgarian / български&lt;/item&gt;
      &lt;item&gt;Burmese / မြန်မာဘာသာ&lt;/item&gt;
      &lt;item&gt;Chinese / 中文&lt;/item&gt;
      &lt;item&gt;Czech / čeština / český jazyk&lt;/item&gt;
      &lt;item&gt;Catalan / catalan / català&lt;/item&gt;
      &lt;item&gt;Danish / dansk&lt;/item&gt;
      &lt;item&gt;Dutch / Nederlands&lt;/item&gt;
      &lt;item&gt;Estonian / eesti keel&lt;/item&gt;
      &lt;item&gt;Finnish / suomi / suomen kieli&lt;/item&gt;
      &lt;item&gt;French / français&lt;/item&gt;
      &lt;item&gt;German / Deutsch&lt;/item&gt;
      &lt;item&gt;Greek / ελληνικά&lt;/item&gt;
      &lt;item&gt;Hebrew / עברית&lt;/item&gt;
      &lt;item&gt;Hindi / हिन्दी&lt;/item&gt;
      &lt;item&gt;Hungarian / magyar / magyar nyelv&lt;/item&gt;
      &lt;item&gt;Indonesian / Bahasa Indonesia&lt;/item&gt;
      &lt;item&gt;Italian / italiano&lt;/item&gt;
      &lt;item&gt;Japanese / 日本語&lt;/item&gt;
      &lt;item&gt;Korean / 한국어&lt;/item&gt;
      &lt;item&gt;Latvian / Latviešu&lt;/item&gt;
      &lt;item&gt;Malayalam / മലയാളം&lt;/item&gt;
      &lt;item&gt;Norwegian / Norsk&lt;/item&gt;
      &lt;item&gt;Persian / Farsi (Iran) / فارسى&lt;/item&gt;
      &lt;item&gt;Polish / polski / język polski / polszczyzna&lt;/item&gt;
      &lt;item&gt;Portuguese (Brazil)&lt;/item&gt;
      &lt;item&gt;Portuguese (Portugal)&lt;/item&gt;
      &lt;item&gt;Romanian (Romania) / limba română / român&lt;/item&gt;
      &lt;item&gt;Russian / Русский язык&lt;/item&gt;
      &lt;item&gt;Serbian / српски језик / srpski jezik&lt;/item&gt;
      &lt;item&gt;Slovak / slovenčina&lt;/item&gt;
      &lt;item&gt;Spanish / español / castellano&lt;/item&gt;
      &lt;item&gt;Swedish / Svenska&lt;/item&gt;
      &lt;item&gt;Tamil / தமிழ்&lt;/item&gt;
      &lt;item&gt;Telugu / తెలుగు&lt;/item&gt;
      &lt;item&gt;Thai / ไทย&lt;/item&gt;
      &lt;item&gt;Turkish / Türkçe&lt;/item&gt;
      &lt;item&gt;Ukrainian / Українська&lt;/item&gt;
      &lt;item&gt;Urdu / اردو&lt;/item&gt;
      &lt;item&gt;Vietnamese / Tiếng Việt&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Arabic / al arabiya / العربية&lt;/item&gt;
      &lt;item&gt;Bengali / বাংলা&lt;/item&gt;
      &lt;item&gt;Bulgarian / български&lt;/item&gt;
      &lt;item&gt;Burmese / မြန်မာဘာသာ&lt;/item&gt;
      &lt;item&gt;Chinese / 中文&lt;/item&gt;
      &lt;item&gt;English&lt;/item&gt;
      &lt;item&gt;Finnish / suomi / suomen kieli&lt;/item&gt;
      &lt;item&gt;French / français&lt;/item&gt;
      &lt;item&gt;German / Deutsch&lt;/item&gt;
      &lt;item&gt;Greek / ελληνικά&lt;/item&gt;
      &lt;item&gt;Hebrew / עברית&lt;/item&gt;
      &lt;item&gt;Hindi / हिंदी&lt;/item&gt;
      &lt;item&gt;Indonesian / Bahasa Indonesia&lt;/item&gt;
      &lt;item&gt;Italian / italiano&lt;/item&gt;
      &lt;item&gt;Japanese / 日本語&lt;/item&gt;
      &lt;item&gt;Kannada / ಕನ್ನಡ&lt;/item&gt;
      &lt;item&gt;Kazakh / қазақша&lt;/item&gt;
      &lt;item&gt;Khmer / ភាសាខ្មែរ&lt;/item&gt;
      &lt;item&gt;Korean / 한국어&lt;/item&gt;
      &lt;item&gt;Malayalam / മലയാളം&lt;/item&gt;
      &lt;item&gt;Marathi / मराठी&lt;/item&gt;
      &lt;item&gt;Nepali / नेपाली&lt;/item&gt;
      &lt;item&gt;Norwegian / Norsk&lt;/item&gt;
      &lt;item&gt;Persian / Farsi (Iran) / فارسى&lt;/item&gt;
      &lt;item&gt;Polish / polski / język polski / polszczyzna&lt;/item&gt;
      &lt;item&gt;Portuguese (Brazil)&lt;/item&gt;
      &lt;item&gt;Portuguese (Portugal)&lt;/item&gt;
      &lt;item&gt;Punjabi / ਪੰਜਾਬੀ / پنجابی&lt;/item&gt;
      &lt;item&gt;Romanian (Romania) / limba română / român&lt;/item&gt;
      &lt;item&gt;Russian / Русский язык&lt;/item&gt;
      &lt;item&gt;Sinhala / සිංහල&lt;/item&gt;
      &lt;item&gt;Spanish / español / castellano&lt;/item&gt;
      &lt;item&gt;Swedish / svenska&lt;/item&gt;
      &lt;item&gt;Tamil / தமிழ்&lt;/item&gt;
      &lt;item&gt;Telugu / తెలుగు&lt;/item&gt;
      &lt;item&gt;Thai / ภาษาไทย&lt;/item&gt;
      &lt;item&gt;Turkish / Türkçe&lt;/item&gt;
      &lt;item&gt;Ukrainian / Українська&lt;/item&gt;
      &lt;item&gt;Urdu / اردو&lt;/item&gt;
      &lt;item&gt;Vietnamese / Tiếng Việt&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Free Podcasts and Screencasts:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Arabic / al Arabiya / العربية&lt;/item&gt;
      &lt;item&gt;Burmese / မြန်မာဘာသာ&lt;/item&gt;
      &lt;item&gt;Chinese / 中文&lt;/item&gt;
      &lt;item&gt;Czech / čeština / český jazyk&lt;/item&gt;
      &lt;item&gt;Dutch / Nederlands&lt;/item&gt;
      &lt;item&gt;English&lt;/item&gt;
      &lt;item&gt;Finnish / Suomi&lt;/item&gt;
      &lt;item&gt;French / français&lt;/item&gt;
      &lt;item&gt;German / Deutsch&lt;/item&gt;
      &lt;item&gt;Hebrew / עברית&lt;/item&gt;
      &lt;item&gt;Indonesian / Bahasa Indonesia&lt;/item&gt;
      &lt;item&gt;Persian / Farsi (Iran) / فارسى&lt;/item&gt;
      &lt;item&gt;Polish / polski / język polski / polszczyzna&lt;/item&gt;
      &lt;item&gt;Portuguese (Brazil)&lt;/item&gt;
      &lt;item&gt;Portuguese (Portugal)&lt;/item&gt;
      &lt;item&gt;Russian / Русский язык&lt;/item&gt;
      &lt;item&gt;Sinhala / සිංහල&lt;/item&gt;
      &lt;item&gt;Spanish / español / castellano&lt;/item&gt;
      &lt;item&gt;Swedish / Svenska&lt;/item&gt;
      &lt;item&gt;Turkish / Türkçe&lt;/item&gt;
      &lt;item&gt;Ukrainian / Українська&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Write, compile, and run your code within a browser. Try it out!&lt;/p&gt;
    &lt;p&gt;Volunteers have translated many of our Contributing, How-to, and Code of Conduct documents into languages covered by our lists.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;English&lt;/item&gt;
      &lt;item&gt;... More languages ...&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;You might notice that there are some missing translations here - perhaps you would like to help out by contributing a translation?&lt;/p&gt;
    &lt;p&gt;Each file included in this repository is licensed under the CC BY License.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/EbookFoundation/free-programming-books"/><published>2025-10-18T15:59:58+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45628391</id><title>Tinnitus Neuromodulator</title><updated>2025-10-18T18:41:43.475036+00:00</updated><content>&lt;doc fingerprint="b64980b949699afa"&gt;
  &lt;main&gt;
    &lt;div&gt;
      &lt;head rend="h1"&gt;User Stories&lt;/head&gt;
      &lt;p&gt;Write your own here. Click the blue bullets ● to load associated settings.&lt;/p&gt;
      &lt;p&gt;● Been loving this project, this website for years. The sounds, the stories, the community. &amp;lt;3 This particular "noise" for me is a real lifesaver. It always helps me with (tension-) headaches. Thank you so much.&lt;lb/&gt; ● I couldn't think for two days straight; it was so bad and kept getting worse. This quieted the constant chatter and noise down to a mild hum.&lt;lb/&gt; ● This and a special Dreaming Nautilus almost put me to sleep for some weird reason.&lt;lb/&gt; ● Neural Hack sounds so funny, that one time I laughed so hard at night listening to this, that my mom came upstairs and whooped me. All jokes aside, if anyone has trouble managing their tinnitus, then this is the one for you! 8.7 out of 10.&lt;lb/&gt; ● Yes, this is pretty wonderful. I only need 3 of the sliders for it to work, thank you. Why not make a standalone device for this?&lt;lb/&gt; ● It takes a moment to adjust, but once you do, all your problems warble away.&lt;lb/&gt; ● I feel like I'm on an alien planet!&lt;lb/&gt; ● Stéphane and Steve have created a nearly magical tinnitus solution. Whenever my tinnitus starts acting up, I pop on these settings for a few minutes, and when I take the headphones off... Silence. Absolute silence. I have no idea how this works, but it's genius!&lt;lb/&gt; ● An absolute godsend! It's just tickly enough to distract me from the noise in my ears, but it doesn't crowd out my actual thoughts.&lt;lb/&gt; ● You wouldn't think such an exotic, high-pitched, and beepy sound generator would be calming, but when you find the right spot and let it go for a few minutes, then pause the audio, it's so much quieter—not gone, but still a relief compared to before. Even just letting it play and noticing your ear ringing contributing to the music instead of being a distracting annoyance is calming.&lt;lb/&gt; ● Once properly calibrated, after a few minutes of listening, it helps reduce the perception of tinnitus—and even after removing the headphones, the sensation almost seems to vanish. myNoise is a great tool to use when needed.&lt;lb/&gt; ● I have infrequent tinnitus in one ear that gets really annoying when I'm sick. I tried this on a whim, and I straight-up can't hear it anymore! What a godsend.&lt;lb/&gt; ● I've been using this neuromodulator on a daily basis for many weeks and this is by far the best help I could ever find to release my tinnitus 24/7 head drill. It doesn’t get rid of it completely, but it tones it down massively - just leaves a soft background hum that lets you live your life. Honestly, it feels like magic. No idea how it works this well. Huge thanks to the creators - you guys rock!&lt;lb/&gt; ● I use the tinnitus neuromodulator when things get rough. It doesn't just mask the tinnitus, it transports me into a space where I can focus again. For a while, I feel clear. What gets me is this: when I take off the headphones, the tinnitus is gone. Not reduced—gone. Then, slowly, it creeps back. That minute of silence is everything.&lt;lb/&gt; ● If you have basic audio knowledge, this website is a much better option than commercial tinnitus therapies based on overpriced hearing aids. Thanks to this website, I’m reconfiguring my relationship with tinnitus in a much more organic and spontaneous way.&lt;lb/&gt; ● My tinnitus is an infrequent problem. When it gets bad, though, it gets horrible. This just saved my whole morning.&lt;lb/&gt; ● I don't have tinnitus, but I love the strangeness of this generator. It sounds really fascinating and seems to help me focus. By the way, I guess this is what an aural representation (a strange tone poem?) of a ketamine trip would sound like :D&lt;lb/&gt; ● I use myNoise to go to sleep.&lt;lb/&gt; ● This doesn't so much drown out my tinnitus as blend with it, but it's still a fantastic change from the usual! I've had tinnitus my entire life, and as a kid, I never understood why people liked silence so much since it was so loud! Weird alien beep-boops is the new silence.&lt;lb/&gt; ● Wow! I don't have tinnitus, but this is stunning!&lt;lb/&gt; ● This is so satisfying to listen to, and I don't even have tinnitus.&lt;lb/&gt; ● It's the best website for listening to sounds while doing productive activities.&lt;lb/&gt; ● I have found "trance" to work well with outside high-pitched noises like old TVs. Nice job.&lt;lb/&gt; ● This is crazy, it actually works. Thankfully my tinnitus is not constant, but very annoying when it's present. It actually makes it disappear, even after I've closed the sound generator, for quite some time.&lt;lb/&gt; ● This is the first time in a while that I've been able to just sit and be content without that infernal ringing hijacking my thoughts. Definitely not something I'd be able to listen to for longer periods, but it's amazing how well my tinnitus just blends in and becomes a part of the experience.&lt;lb/&gt; ● This app and noise really help me in primary school, and since I am sometimes cleverer than my peers, this helps.&lt;lb/&gt; ● Thanks so much for this site. My tinnitus fluctuates a lot, and when it's bad, I rely on sounds/maskers like these for work and at night.&lt;lb/&gt; ● It helps me write an interesting Egyptian story and gives a nice effect.&lt;lb/&gt; ● I was using this to help me focus because I have really bad tinnitus, and it makes it so hard to focus! As soon as it started playing, it drowned out my tinnitus and made me able to think way better! The sounds seem to go all around me, and it's just so helpful. I definitely recommend MyNoise!&lt;lb/&gt; ● Against all odds, it apparently works. I have tested it a couple of times today by playing the audio on headphones for 5-10 minutes, and there is a significant relief in my tinnitus for shorter periods of time. I will try running the audio for a longer time to see if I can have a longer-lasting effect.&lt;lb/&gt; ● It's tingling my brain.&lt;lb/&gt; ● I must be doing it wrong. Unfortunately, the sound in my head got louder as I was adjusting the sliders.&lt;lb/&gt; ● I needed this sound every day in 2022 when I was having major mental issues and anxiety, which created a feedback loop for my tinnitus (tinnitus increased anxiety, anxiety increased tinnitus.) with the help of this sound generator I managed to reduce my anxiety and tinnitus to the point where it's nothing more than a passing thought every now and then, that I come back here to get rid of. THANKS: )&lt;lb/&gt; ● I love this soo much.&lt;lb/&gt; ● I love this beyond belief! Thank you :) &lt;lb/&gt; ● It's funny, the raw noises should really make me angry but they work. I don't get it. Why does it work better than any other tinnitus blocker.&lt;lb/&gt; ● I don't have tinnitus; I have MS. Certain sounds have started to bother me a lot, even waking me up. I can't sleep for longer than 2 hours some nights. It's not fun. I usually have to turn some white noise on loud enough to mask the sounds but that hurts sometimes, and is hard to sleep with. This sound however is pretty weird. I don't have to crank it up loud, and it works. I'm actually sleepy.&lt;lb/&gt; ● It helps me focus on reading. I like it ;)&lt;lb/&gt; ● My form of tinnitus is masked by many of your noise generators. I prefer natural sounds, but this did remarkably let me forget the constant, piercing ring in my right ear rather than just mask it.&lt;lb/&gt; ● Dude thank you, I've had musical ear syndrome since I was a kid, and a life of listening to heavy metal and rock and roll at high volume on headphones and going to shows has made tinnitus worse. Now I get musical ear syndrome all the time, it can be distracting as well a bit concerning but this soundscape cured it instantly. Thank you! This saved me from a mental breakdown.&lt;lb/&gt; ● All points of connectivity reaching all other points.&lt;lb/&gt; ● Works wonders to cancel out the Tinnitus on both of my ears. It seems to make my ringing go away for short periods of time also. &lt;lb/&gt; ● Who else heard an iphone alarm and horror movie riffs? -TDR&lt;lb/&gt; ● This is a god - send! My brain never quiets down, and this lovely soundscape is a perfect solution for letting my brain latch on to something while I do things I need to. Thank you so much!&lt;lb/&gt; ● It might not relieve my tinnitus, but it definitely helps me focus on my homework!&lt;lb/&gt; ● Works for my ADHD as well as tinnitus :3&lt;lb/&gt; ● This is the ONLY thing I've found that actually helps with my tinnitus. 10-20 minutes of listening, and I'm free from it for an hour or even longer. Thank you so, so much for this.&lt;lb/&gt; ● I'm still highly skeptical if this truly works but, with the noises I selected, I like it. &lt;lb/&gt; ● I just recommended this to a friend with tinnitus who used to leave the TV on all night, and we found this present that I hope works better!&lt;lb/&gt; ● This helps me break free from the world. Great noise.&lt;lb/&gt; ● Relief from tinnitus, for the first time in years! I can't handle listening to it for much longer than twenty minutes (because I'm bored by generated noise after a while), but when I take my headphones off, my tinnitus is so massively diminished I can hardly believe it. Compared to everything else I've unsuccessfully tried for my tinnitus, this feels like actual magic--audiomancy?&lt;lb/&gt; ● Wow, this actually works! I didn't expect it, but it does, and while not completely canceling out my tinnitus, works much better than songs or such.&lt;lb/&gt; ● The absolute relief I feel right now has me reeling. My Jaw dropped instantly when I plugged this baby in. My head feels about half the weight it usually does just from honestly maybe a minute total of listening to this. I didn't think there would be such a solution to tinnitus but this might just really improve my quality of life, especially in the falling asleep department! Thank you, thank you!&lt;lb/&gt; ● This sound helps my tinnitus a lot and it also kind of tickles my ears a bit!&lt;lb/&gt; ● Suffering from tinitus for many years, this is helping me tremendously. My tinitus sounds resemble the high pitch noise you get from old TV sets. Listening to this setting for just a couple of minutes brings me relief for up to an hour afterwards, sometimes even longer because I forget to concentrate on it. Just amazing!&lt;lb/&gt; ● I started using MyNoise's ocean sounds years ago to help me sleep due to severe misophonia, it blocks the noise from the street and I don't need to sleep with earplugs or headphones anymore. Recently a covid infection damaged my ear nerves and caused intolerable sound sensitivity accompanied of tinnitus and hyperacusis. If it wasn't for these sound generators I would have lost my sanity.&lt;lb/&gt; ● I have autism and difficulty focusing. I've never liked listening to things like this generator, but for the first time I quite like this! I love the way that I can hear the sounds travel from each side of my brain. It's pretty awesome to listen to when you've got synesthesia. &lt;lb/&gt; ● I have no tinnitus but "Neural Drops" + RPG Evil Charm on the "Monsters" preset + Canyon drone around 1 kHz is my best mix for listening to it before lucid dreaming with out-of-body experience.&lt;lb/&gt; ● For a few years I've used myNoise to block out the sounds of busy city life and to get to sleep. More recently in late 2022 I contracted covid which unfortunately left me with hearing damage and significant tinnitus in one ear. The only thing that has been able to relieve the horrible ringing so far are some of the neuromodulator tracks here, and for that I am grateful. &lt;lb/&gt; ● As an autistic person with pretty debilitating hyperacusis (I pretty much can't function without ear plugs) the onset of some mild tinnitus was distressing to say the least. White noise is usually the recommended go-to for tinnitus but it's painful to me. High pitched fuzzy or low constant humming sounds are literal agony. This is varied enough to ease and accommodate both issues. Miraculous!&lt;lb/&gt; ● Well it just works. I get into music stuff lately after a long session of mixing, mastering or drum take your ear just start to deafen sometimes with headaches. I used this as a tool to "reset" my ear by listening to it at a barely heard loudness and turning it down even more after I can hear it clearly, just rinse and repeat!&lt;lb/&gt; ● Just wanted to add my comment to say that yes, in my experience (loud ~9kHz in left ear) this is more than a placebo effect re: tinnitus relief. HOW exciting. Cheers! Breathing deeper and slower too.&lt;lb/&gt; ● When getting the automation right, it takes ages for piano or guitar sounds to get repetitive, sounds of nature and human voices (radio chatter etc) sound completely natural, organic, and at home here without feeling repetitive at all. And sci-fi sounds, and drone like instruments can pretty much do their thing forever and play well off of each other while they do it.&lt;lb/&gt; ● Suffering since 11 months from tinnitus. I destressed my life, did different types of therapy but nothing came close to the effect this neural symphony has. It actually gives me seconds or minutes as close to silence as I wasn't for 11 months. THANK YOU!&lt;lb/&gt; ● Amazing, always helps when silence is a bit too noisy. My uncle who has bad tinnitus commented that it helped even after a few minutes without headphones... Amazingly helpful in this era of being used to hearing fans, fridges, pinging tech and then ringing noises when it's supposed to be quiet.&lt;lb/&gt; ● Wow, so interesting. It fades away quickly. Greetings from Ecuador.&lt;lb/&gt; ● It takes away my tinnitus if I listen to if for a few minutes. I genuinely cannot believe this. &lt;lb/&gt; ● I have had tinnitus for several years and it recently got worse causing anxiety attacks. After discovering this site I found it really works on lessening the tinnitus and I feel so much better! I play it while working from home. Amazing! &lt;lb/&gt; ● I developed a high pitched whistling tinnitus 10 years ago when I was 14 and I thought I lost the sound of silence forever, but listening to this for 20 minutes on shuffle makes my tinnitus disappear completely! Even if it's just for a little while, it feels wonderful to experience true silence again.&lt;lb/&gt; ● Peaceful and relaxing!&lt;lb/&gt; ● Strangely, this also blocks out when my ears begin to ring highly.&lt;lb/&gt; ● I have tinnitus that sounds like a cat purring. The "purring" is annoying and it causes me to think a cat is near me, a car is starting, Etcetera. These settings work strangely well.&lt;lb/&gt; ● I luckily don't have tinnitus but this sounds like I've been taken by aliens! &lt;lb/&gt; ● Yes!! It helps!!&lt;lb/&gt; ● It definitely assisted me with my tinnitus, I feel substantially more relaxed as well 10/10. &lt;lb/&gt; ● Gone! My tinnitus sounds like a dentist's drill. Sometimes it's hard to blend it out, but with this setting it's gone. Thanx, Doc!&lt;lb/&gt; ● Silence! Silence, thank god! I've never felt so much joy.&lt;lb/&gt; ● I dont have tinnitus but this is still a cool sound to study to.&lt;lb/&gt; ● The tinnitus neuromodulator sounds empty and sinister by itself. To make it less empty and sinister, the sinewave stereo slider can combine well with the take it easy generator on the bad trip preset.&lt;lb/&gt; ● This helps with misophonia, too! I put it at a low volume and listen to it during class, it's super helpful.&lt;lb/&gt; ● I was a bit skeptical, but after listening for 10 minutes on a moderately high volume with ear buds, I can say the tinnitus relief is real! I'm now trying to find out how long the relief will last, and how long I should listen to the modulation sounds... &lt;lb/&gt; ● I don't even have tinnitus, but I like listening to this while I write my sci-fi novel!&lt;lb/&gt; ● Playing with settings was a lot of fun! I masked my tinnitus with it!&lt;lb/&gt; ● It was fun playing with the settings and I lowered some and raised some, slowed it down a bit, and it's really wonderful. I think it helps with my tinnitus but it's also just fun to listen to!&lt;lb/&gt; ● Wow! Being able to hear pure silence even only for a few seconds is truly something. Thank you.&lt;lb/&gt; ● Ahhh this is literally so amazing, it actually helped so so so so so so much!! It got so much quieter after I took my headphones off.&lt;lb/&gt; ● This.... Is good. So good. &lt;lb/&gt; ● Amazing, amazing, amazing for my tinnitus. It's not especially loud, but it's very constant when it's quiet, and having this setting is surprisingly relaxing for my mind to not hear it in the background.&lt;lb/&gt; ● Doesn't get rid of the tinnitus, but masks it while I listen to it.&lt;lb/&gt; ● Suddenly had an onset of tinnitus last night. This setting in particular seems to be holding it down for me while I wait for my trip to an ENT doctor.&lt;lb/&gt; ● Tried a lot of relief sound from youtube, but most of them are too high pitched for me and are very painful. But this one is perfect, you saved my life thank you.&lt;lb/&gt; ● I constantly hear ringing whenever it's silent, and it affects my day-to-day tasks. I used this for a while, and I went somewhere silent, and there you go, no more ringing! Mind blown!&lt;lb/&gt; ● Recently I had been dealing with pretty bad tinnitus, it had gotten to the point where I couldn't even fall asleep some nights. After one day of using this, I have had more relief than I have had in weeks. I am very grateful for this program, I have already donated and plan to continue supporting this.&lt;lb/&gt; ● I suffer from tinnitus due to infections, and this is wonderful! &lt;lb/&gt; ● I don't even have tinnitus, I just find it a cool, emotionally neutral background to stay focused at work... It feels like I'm coding on an alien spaceship!&lt;lb/&gt; ● I can't say if this will work for everyone's tinnitus, but it does for mine! After listening for 20 minutes or so, my tinnitus is much reduced and stays that way for up to two hours afterward. I am interested to see if there is any long-term effect from using this generator daily.&lt;lb/&gt; ● Thank you so much! My tinnitus began after a concussion 6 years ago. I have no hearing problems, just issues caused by my brain. I found your website, turned on my computer speakers &amp;amp; immediately my neck &amp;amp; shoulders relaxed as the tinnitus decreased significantly. Initially I listened for about 1/2 hour &amp;amp; when I walked away it was much lower volume than before. Best for me on the default setting.&lt;lb/&gt; ● This generator is completely amazing, if for no other reason it detracts attention away from my tinnitus, which is now chronic for years and years. The Neural Symphony functions are easy to use and adjust. I have discovered that for me I drop all pulses and warble to zero, and then use the automated slider animation. Wide range of high frequencies, ever changing. Bliss.&lt;lb/&gt; ● ← Click here to hear some crazy hums and beeps! &lt;lb/&gt; ● This was overwhelming for me at first, but I clicked Surprise! a few times and got settings that not only hide my tinnitus but also make a pleasing sound. I love it.&lt;lb/&gt; ● I have tinnitus in scattered frequencies between 8-10k, and this setting on studio monitors (at a quiet volume) works very well to calm my mind, and get my focus off of audio based stimuli. &lt;lb/&gt; ● It works o_0. Tinnitus is not big problem for me because I have it since I was kid, but it's nice feeling to not hear it :D&lt;lb/&gt; ● I loved it, it's kind of magical too.&lt;lb/&gt; ● It's like C3PO had too much sugar lolololololol!&lt;lb/&gt; ● I don't have tinnitus. But this sounds crazy! I love it! 8D&lt;lb/&gt; ● Neuromodulator and Summer Night are about the only things that got me through the worst bout of tinnitus. Thank you so much!&lt;lb/&gt; ● Oh my goodness. You are an absolute godsend; I wish I could have found this sooner. Will def be using this whenever I need it. Thank you so so so so much! &amp;lt;3&lt;lb/&gt; ● I use this daily to focus at work and to get my mind off of my tinnitus. Also, I use this to sleep on my phone, this is the best thing that I've had in a long time.&lt;lb/&gt; ● Thanks -- this doesn't seem to "fix" anything but it does help concentrate with the tinnitus is bothering me. I have great hearing but tinnitus (with high-pitched sounds in one ear and a tiny bit in the other) started a couple weeks ago after my doctor put me on 150mg Effexor. We cut the medication after this happened but the tinnitus is still loud :( Anyway thanks for your work on this site! &lt;lb/&gt; ● I fortunately don't have tinnitus but it helped with my daily earaches anyway.&lt;lb/&gt; ● I thought people were overreacting, my God I was wrong. It truly works.&lt;lb/&gt; ● I have used myNoise numerous times now and I find great relief from my very loud and annoying tinnitus. Waiting to see if any reversal becomes evident. Thank you for this wonderful tool! &lt;lb/&gt; ● It was not working for me at first. The tinnitus would go away and come back after a few seconds. I tweaked the settings so the high pitched noises were louder and more frequent. A day after I am writing this with little to no tinnitus now. Idk if this really works or not but it's worth a try.&lt;lb/&gt; ● I suffer from tinnitus in both the ears and have two distinct high and low frequency patterns. I listened this for about 45 mins, kept away my headphones and then went for a coffee... Guess what I could hear `silence'! Very promising!&lt;lb/&gt; ● I found that all the sounds hurt to listen to and increased or battled with my tinnitus. Disappointing! &lt;lb/&gt; ● This is certainly promising, and I did notice an affect pretty quickly. However, ACRN should be tunable to the frequency of of your tinnitus. The Steve Sequence is kind of all over the place, and mostly tuned lower than my own (6kHz, and pretty common). Would be nice to see something where the frequency can be tuned, and maybe change the waveform (sine, sawtooth, fuzz, etc). [Note from editor : try the Tape Speed Control feature]&lt;lb/&gt; ● Gosh that's impressive, Thank you so much for your work&lt;lb/&gt; ● I don't have tinnitus, but this is really relaxing with the right settings.&lt;lb/&gt; ● I have suffered tinnitus for as long as I can remember, very few things have helped lessen its obnoxious effects, and those that did (like music) were very distracting (I have ADHD too), but this generator works perfectly for me, it helps my tinnitus to the point that I don't even notice it, and even better, its not distracting in any way! Focusing has never been easier.&lt;lb/&gt; ● Try Lake Life (loon calls and lapping shore water) with this - pretty funky. Keep expecting a strange interstellar artifact to light in the depths of the lake and rise in the full moon before me. Fantastical.&lt;lb/&gt; ● Love it with Hydrogen XII.&lt;lb/&gt; ● OH MY GOSH BEAUTIFUL SILENCE&lt;lb/&gt; ● This literally worked in 10 seconds... wow!&lt;lb/&gt; ● This noise generator gave me nausea and vertigo and my tinnitus was unaffected. Am I using it wrong?&lt;lb/&gt; ● I must say that I didn't really have faith in it working to dampen my tinnitus, but I had to eat my words back when I took my headphones off. I was close to shedding tears at finally being close to experiencing silence after all these years of constant noise. I want to thank you for creating this, and I am most definitely going to favorite this and listen to it as much as possible.&lt;lb/&gt; ● While I may not have Tinnitus, this generator is still a very entertaining experience! I sometimes use it to calm myself or focus on writing, which was surprising as I thought it would have the opposite effect!&lt;lb/&gt; ● Yes. Really does improve my tinnitus. Even more, I find it actually quite soothing as ambience for indoor work - less aural fatigue than white noise. For some reason, it even makes house-cleaning less tedious :-) Kudos!&lt;lb/&gt; ● As a musician, I have to deal with tinnitus on the daily. It got bad this morning, and this helped me out a ton.&lt;lb/&gt; ● The tinnitus neuromodulation noises have had a proufound effect on lessening my tinnitus and I thoroughly recommend it to anyone who is seeking relief. Short of a future breakthrough in medication or surgical treatments, this is the best solution I have come across and it makes life that bit more bearable. Many, many, many thanks!&lt;lb/&gt; ● After listening to the Sinescape preset for this generator for only maybe 20 minutes, I found that my rather loud tinnitus because much quieter and almost non-existent immediately after removing my headphones. I'm curious to see how long this lasts, but it's quite a relief even for a little while!&lt;lb/&gt; ● This generator is the first thing that helps with my tinnitus, lowering its pitch and volume until it's almost gone even after I took off the headphones. The relief only lasts for a few hours, but to someone who has a constant high pitched noise in their ears otherwise, those hours mean the world. I cannot thank you enough for your amazing work, Stphane. You're a true blessing to the world.&lt;lb/&gt; ● After listening to this for awhile, my tinnitus was actually GONE after I took off my headphones.I don't know how long this will last but thank you. I will enjoy this sweet, sweet silence while it lasts. Donation coming your way as soon as I get home! Love this site.&lt;lb/&gt; ● My tinnitus is quite high-pitched and fairly constant. If I play this sequence for a little while, it brings it back down under a low roar, if only for a few hours. &amp;lt;3&lt;lb/&gt; ● I cannot express my thanks! Every sound has changed my life in a different way! Thank you SO MUCH! Thank You!!! These settings seem to be the ultimate cure to my T.&lt;lb/&gt; ● ← extreme warbling&lt;lb/&gt; ● Holy Crap! I was experiencing on of my usual Tinnitus spikes (and you know how annoying this can be). I tried this custom noise take from one of the testimonials and my tinnitus just went down from 10 to 4! Thanks!&lt;lb/&gt; ● Brilliant site I could spend hours here. I have tinnitus a different high pitched frequency in each ear.Slightly spacey space-station? A little dreamy but a little sedating as well and kills the tinnitus.&lt;lb/&gt; ● This works for me - a little dreamy but a little sedating as well.&lt;lb/&gt; ● This is a very strange soundscape, but in an enjoyable way. I personally do not have tinnitus, but I think this is still fun to listen to. You just have to find the right sliders to make sense of this one, hahaha.&lt;lb/&gt; ● That's artificial rain... trickle, and some wind. Very relaxing during computer work! Both stimulating and calming. :)&lt;lb/&gt; ● I have Tinnitus. I also have perfect hearing and from years of being a musician one would anticipate hearing loss. None. I am also a Director for an electric and water utility and I have a lot of concentrating work (reports, analysis, etc). When My Tinnitus is in full flight, it is impossible to concentrate. This is a life saver. I can work all day and feel the calming of the tones. Amazing! &lt;lb/&gt; ● I am sitting in the library trying to work and someone near me has the touch-tones turned all the way up on their phone. This is the only thing that drowns it out. Thank you!!!&lt;lb/&gt; ● Back again, THANK GOD for this. When I'm having a rough day with my T, I just come home, throw this on and chill and just zone out and stuff I love it. Thank you!&lt;lb/&gt; ● May be my imagination, listened for about 15 min, then when taking my speakers away from my ears, my pulsating tinnitus was quieter.&lt;lb/&gt; ● First I found myself heaving a relieved sigh, and then started crying when I found the custom noise that masked my tinnitus. It has been five months of unrelenting high pitched whine, yet I refused to allow myself a pity party, concluding, "It is what it is; suck it up, girl, there is little you can do." But to have this respite is a great blessing. Thank you! &lt;lb/&gt; ● Kudos to all who put this wonderful chaotic neural symphony together! As a tinnitus sufferer I found the sounds had a very soothing effect on me. I will be using this selection again for sure.&lt;lb/&gt; ● I noticed listening to music with different frequencies helps soften my Tinnitus. I have a constant 24/7 14,000hz sawtooth sound in my head for the two years. This program is amazing! &lt;lb/&gt; ● It is soothing but I hear my tinnitus while I am listening to it. I don't really think this would help me in any way, long term. It is soothing though, so thanks for that! &lt;lb/&gt; ● Not for me. Sounds more like star wars. What really helps me is a soft noise plug. Stick in the ear canal and when the sounds starts bothering switch to other ear. This is the only thing that helps me.&lt;lb/&gt; ● This is incredible. I've had a fairly mild, but annoying tinnitus accompanying me for some time now and this Neural Hack makes it seem magically inexistent. I am impressed (and very relaxed).&lt;lb/&gt; ● I have been listening to music with MY Tinnitus frequency embedded into the music. I understand this works for some, not me. After over 6 months, no change. The past two days have been horrible... I am a musician and although I have been playing rock music for over 40 years, I have no hearing damage at all... 20 minutes on customizing my own pattern, I can actually concentrate on my work!&lt;lb/&gt; ● Thank you so much for this incredible site! I'm quite happy to make a donation to you out of simple gratitude for all your efforts putting these sounds online for us, and keeping the site (and your iOS app, myNoise) working. I've experienced persistent tinnitus for a couple decades, now, with almost no respite except after one minutes or so of "Neural Hack" or "Neural Symphony!" Amazing!&lt;lb/&gt; ● I have severe tinnitus and this noise generator may actually change my life.&lt;lb/&gt; ● Thank you so much for this. It provides relief for my tinnitus when nothing else does.&lt;lb/&gt; ● This site is amazing! Brilliant concept and execution! As a Tinnitus sufferer, it has become safe haven for me. Thank you so much, Stephane!&lt;lb/&gt; ● I'm a fairly new comer to myNoise having serendipitously discovered the site only three weeks ago and a very long sufferer of Tinnitus. I have only discovered this particular generator only moments ago and jumped right in to listen. Ironically, I've been having episodes all week so I'll absolutely write the results of my experience after one week and again at two weeks. Today is 8 June '16 &lt;lb/&gt; ● Something very weird happens if I listen to this for 15-20 minutes: in addition to the tinnitus masking, my mind actually "quiets down". The parts of my brain that would normally be wandering seem to be occupied chasing down the bells and warbles, allowing the rest of my attention to focus entirely on the task at hand. Awesome brain hack.&lt;lb/&gt; ● I don't have tinnitus, but I find myself enjoying the bizarre dreamlike discord that using the animation sliders can provide. It's a rather lovely chiming chaos... that is weirdly calming to me. I'm not sure what that says :)&lt;lb/&gt; ● My goodness, I've been waiting for something like this. God Bless!&lt;lb/&gt; ● I guess I am fortunate that I only get ringing in my ears when I take certain prescription medications I can't believe my luck that a few hours after I took the medication I started to get the ringing and came here to find some rain sounds and discovered this new generator. What a gift this is! Thank you, thank you, thank you!&lt;/p&gt;
    &lt;/div&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://mynoise.net/NoiseMachines/neuromodulationTonesGenerator.php"/><published>2025-10-18T16:08:10+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45628499</id><title>Atuin desktop: Runbooks that run</title><updated>2025-10-18T18:41:43.061631+00:00</updated><content>&lt;doc fingerprint="3b3ee61eddbff6ea"&gt;
  &lt;main&gt;
    &lt;p&gt;Runbooks that Run. A local-first, executable runbook editor for real terminal workflows. Atuin Desktop looks like a doc, but runs like your terminal.&lt;/p&gt;
    &lt;p&gt;download | documentation | hub | discord&lt;/p&gt;
    &lt;p&gt;Atuin Desktop is currently in open beta. We're actively collecting feedback and improving the experience based on real-world usage.&lt;/p&gt;
    &lt;p&gt;Read the announcement post&lt;/p&gt;
    &lt;p&gt;Most infrastructure is held together by five commands someone remembers when things go wrong. Documentation is out of date (if it exists at all), and the real answers are buried in Slack threads, rotting in Notion, or trapped in someone's shell history.&lt;/p&gt;
    &lt;p&gt;Atuin Desktop solves this by creating executable runbooks that bridge the gap between documentation and automation:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Kill context switching: Chain shell commands, database queries, and HTTP requests in one place&lt;/item&gt;
      &lt;item&gt;Docs that don't rot: Execute directly and stay relevant&lt;/item&gt;
      &lt;item&gt;Reusable automation: Dynamic runbooks with Jinja-style templating&lt;/item&gt;
      &lt;item&gt;Instant recall: Autocomplete from your real shell history&lt;/item&gt;
      &lt;item&gt;Local-first, CRDT-powered: If it runs in your terminal, it runs in a runbook&lt;/item&gt;
      &lt;item&gt;Sync and share: Keep runbooks up to date across devices and teams with Atuin Hub&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Terminal blocks that run directly in the interface&lt;/item&gt;
      &lt;item&gt;Database clients for live queries&lt;/item&gt;
      &lt;item&gt;Prometheus charts and monitoring integration&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Runbooks that run&lt;/item&gt;
      &lt;item&gt;No more copy-pasting from outdated docs&lt;/item&gt;
      &lt;item&gt;Real workflows that teams can actually use&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Jinja-style templating for reusable logic&lt;/item&gt;
      &lt;item&gt;Variable substitution and conditional logic&lt;/item&gt;
      &lt;item&gt;Parameterized workflows for different environments&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;CRDT-powered collaboration&lt;/item&gt;
      &lt;item&gt;Works offline, syncs when connected&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Teams are already using Atuin Desktop for:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Release Management: Automated release checklists that actually run&lt;/item&gt;
      &lt;item&gt;Infrastructure Migration: Safe, repeatable migration workflows&lt;/item&gt;
      &lt;item&gt;Environment Management: Spinning up staging and production with confidence&lt;/item&gt;
      &lt;item&gt;Database Operations: Collaborative live query management&lt;/item&gt;
      &lt;item&gt;Incident Response: Runbooks for when things break&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Download a package for your platform on our releases page&lt;/item&gt;
      &lt;item&gt;Sign up for an account on Atuin Hub&lt;/item&gt;
      &lt;item&gt;Log into Atuin Desktop and create your first runbook&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;We're actively seeking feedback during our beta phase! Please use this repository to:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Found a bug? Open an issue&lt;/item&gt;
      &lt;item&gt;Include your OS, Atuin Desktop version, and steps to reproduce&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Have an idea? Submit a feature request&lt;/item&gt;
      &lt;item&gt;Tell us about your workflow and how Atuin Desktop could better support it&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Questions about usage? Start a discussion&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Enhanced Integrations: More database clients, monitoring tools, and APIs&lt;/item&gt;
      &lt;item&gt;History-to-Runbook: Generate runbooks automatically from your shell history&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Blog: blog.atuin.sh&lt;/item&gt;
      &lt;item&gt;Discord: Join our community&lt;/item&gt;
      &lt;item&gt;Twitter: @atuinsh&lt;/item&gt;
      &lt;item&gt;Bluesky: @atuin.sh&lt;/item&gt;
      &lt;item&gt;Website: atuin.sh&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Atuin CLI: Magical shell history with sync, search, and stats&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Copyright 2025 Atuin, Inc&lt;/p&gt;
    &lt;p&gt;Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at&lt;/p&gt;
    &lt;code&gt;http://www.apache.org/licenses/LICENSE-2.0
&lt;/code&gt;
    &lt;p&gt;Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/atuinsh/desktop"/><published>2025-10-18T16:25:58+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45628761</id><title>Liva AI (YC S25) Is Hiring</title><updated>2025-10-18T18:41:42.626453+00:00</updated><content>&lt;doc fingerprint="66cee20134c3ed39"&gt;
  &lt;main&gt;
    &lt;p&gt;Scale AI for video and voice data.&lt;/p&gt;
    &lt;p&gt;As part of Liva's engineering team, you'll have end-to-end ownership over projects that define how frontier AI data is collected, validated, and quality-assured. You'll work on a mix of platform engineering and infrastructure development (scaling data platforms, building human-in-the-loop systems, designing evaluation pipelines).&lt;/p&gt;
    &lt;p&gt;You might build a mobile app for data collection one week, design an automated QA pipeline with intelligent validation systems the next, and then improve our annotation platforms. You’ll also play a key role in developing AI agent–driven workflows that automate core operations.&lt;/p&gt;
    &lt;p&gt;WHAT YOU’LL DO:&lt;/p&gt;
    &lt;p&gt;REQUIRED SKILLS:&lt;/p&gt;
    &lt;p&gt;BENEFITS:&lt;/p&gt;
    &lt;p&gt;Liva's mission is to make AI look and sound truly human. The AI voices and faces today feel off, and lack the capability to reflect diverse people across different ethnicities, races, accents, and career professions. We’re fixing that by building the world’s richest library of human voice and video data, fueling the next generation of realistic AI.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.ycombinator.com/companies/liva-ai/jobs/inrUYH9-founding-engineer"/><published>2025-10-18T17:02:22+00:00</published></entry></feed>