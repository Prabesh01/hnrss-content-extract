<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><id>hnrss.org/frontpage</id><title>Hacker News: Front Page</title><updated>2025-09-22T10:41:38.285455+00:00</updated><link href="https://news.ycombinator.com/" rel="alternate"/><link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml" rel="self"/><generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator><subtitle>Hacker News RSS</subtitle><entry><id>https://news.ycombinator.com/item?id=45324349</id><title>Sj.h: A tiny little JSON parsing library in ~150 lines of C99</title><updated>2025-09-22T10:41:47.817303+00:00</updated><content>&lt;doc fingerprint="afd877d9ee5a4e03"&gt;
  &lt;main&gt;
    &lt;p&gt;A tiny little JSON parsing library&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;~150 lines of C99&lt;/item&gt;
      &lt;item&gt;Zero-allocations with minimal state&lt;/item&gt;
      &lt;item&gt;Error messages with &lt;code&gt;line:column:&lt;/code&gt;location&lt;/item&gt;
      &lt;item&gt;No number parsing: &lt;code&gt;strtod&lt;/code&gt;,&lt;code&gt;atoi&lt;/code&gt;? Handle them how you want&lt;/item&gt;
      &lt;item&gt;No string parsing: bring your own unicode surrogate pair handling (or don't)&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;A small program to load a rectangle from a JSON string into a &lt;code&gt;Rect&lt;/code&gt; struct:&lt;/p&gt;
    &lt;code&gt;char *json_text = "{ \"x\": 10, \"y\": 20, \"w\": 30, \"h\": 40 }";

typedef struct { int x, y, w, h; } Rect;

bool eq(sj_Value val, char *s) {
    size_t len = val.end - val.start;
    return strlen(s) == len &amp;amp;&amp;amp; !memcmp(s, val.start, len);
}

int main(void) {
    Rect rect = {0};

    sj_Reader r = sj_reader(json_text, strlen(json_text));
    sj_Value obj = sj_read(&amp;amp;r);

    sj_Value key, val;
    while (sj_iter_object(&amp;amp;r, obj, &amp;amp;key, &amp;amp;val)) {
        if (eq(key, "x")) { rect.x = atoi(val.start); }
        if (eq(key, "y")) { rect.y = atoi(val.start); }
        if (eq(key, "w")) { rect.w = atoi(val.start); }
        if (eq(key, "h")) { rect.h = atoi(val.start); }
    }

    printf("rect: { %d, %d, %d, %d }\n", rect.x, rect.y, rect.w, rect.h);
    return 0;
}&lt;/code&gt;
    &lt;p&gt;See the demo folder for further usage examples.&lt;/p&gt;
    &lt;p&gt;This is free and unencumbered software released into the public domain. See LICENSE for details.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/rxi/sj.h"/><published>2025-09-21T16:43:45+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45326740</id><title>Lightweight, highly accurate line and paragraph detection</title><updated>2025-09-22T10:41:47.754745+00:00</updated><content>&lt;doc fingerprint="2c9c2528d5d592af"&gt;
  &lt;main&gt;&lt;head rend="h1"&gt;Computer Science &amp;gt; Computer Vision and Pattern Recognition&lt;/head&gt;&lt;p&gt; [Submitted on 17 Mar 2022]&lt;/p&gt;&lt;head rend="h1"&gt;Title:Unified Line and Paragraph Detection by Graph Convolutional Networks&lt;/head&gt;View PDF&lt;quote&gt;Abstract:We formulate the task of detecting lines and paragraphs in a document into a unified two-level clustering problem. Given a set of text detection boxes that roughly correspond to words, a text line is a cluster of boxes and a paragraph is a cluster of lines. These clusters form a two-level tree that represents a major part of the layout of a document. We use a graph convolutional network to predict the relations between text detection boxes and then build both levels of clusters from these predictions. Experimentally, we demonstrate that the unified approach can be highly efficient while still achieving state-of-the-art quality for detecting paragraphs in public benchmarks and real-world images.&lt;/quote&gt;&lt;head rend="h3"&gt;References &amp;amp; Citations&lt;/head&gt;&lt;p&gt; export BibTeX citation Loading... &lt;/p&gt;&lt;head rend="h1"&gt;Bibliographic and Citation Tools&lt;/head&gt;&lt;p&gt; Bibliographic Explorer (What is the Explorer?) &lt;/p&gt;&lt;p&gt; Connected Papers (What is Connected Papers?) &lt;/p&gt;&lt;p&gt; Litmaps (What is Litmaps?) &lt;/p&gt;&lt;p&gt; scite Smart Citations (What are Smart Citations?) &lt;/p&gt;&lt;head rend="h1"&gt;Code, Data and Media Associated with this Article&lt;/head&gt;&lt;p&gt; alphaXiv (What is alphaXiv?) &lt;/p&gt;&lt;p&gt; CatalyzeX Code Finder for Papers (What is CatalyzeX?) &lt;/p&gt;&lt;p&gt; DagsHub (What is DagsHub?) &lt;/p&gt;&lt;p&gt; Gotit.pub (What is GotitPub?) &lt;/p&gt;&lt;p&gt; Hugging Face (What is Huggingface?) &lt;/p&gt;&lt;p&gt; Papers with Code (What is Papers with Code?) &lt;/p&gt;&lt;p&gt; ScienceCast (What is ScienceCast?) &lt;/p&gt;&lt;head rend="h1"&gt;Demos&lt;/head&gt;&lt;head rend="h1"&gt;Recommenders and Search Tools&lt;/head&gt;&lt;p&gt; Influence Flower (What are Influence Flowers?) &lt;/p&gt;&lt;p&gt; CORE Recommender (What is CORE?) &lt;/p&gt;&lt;head rend="h1"&gt;arXivLabs: experimental projects with community collaborators&lt;/head&gt;&lt;p&gt;arXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.&lt;/p&gt;&lt;p&gt;Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.&lt;/p&gt;&lt;p&gt;Have an idea for a project that will add value for arXiv's community? Learn more about arXivLabs.&lt;/p&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://arxiv.org/abs/2203.09638"/><published>2025-09-21T21:18:14+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45326754</id><title>Show HN: Tips to stay safe from NPM supply chain attacks</title><updated>2025-09-22T10:41:47.036912+00:00</updated><content>&lt;doc fingerprint="1c111a5d8ce32b00"&gt;
  &lt;main&gt;
    &lt;p&gt;Note&lt;/p&gt;
    &lt;p&gt;The NPM ecosystem is no stranger to compromises12, supply-chain attacks3, malware45, spam6, phishing7, incidents8 or even trolls9. In this repository, I have consolidated a list of information you might find useful in securing yourself against these incidents.&lt;/p&gt;
    &lt;p&gt;Feel free to submit a Pull Request, or reach out to me on Twitter!&lt;/p&gt;
    &lt;p&gt;Tip&lt;/p&gt;
    &lt;p&gt;This repository covers &lt;code&gt;npm&lt;/code&gt;, &lt;code&gt;bun&lt;/code&gt;, &lt;code&gt;deno&lt;/code&gt;, &lt;code&gt;pnpm&lt;/code&gt;, &lt;code&gt;yarn&lt;/code&gt; and more.&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;On&lt;/p&gt;&lt;code&gt;npm&lt;/code&gt;, by default, a new dependency will be installed with the Caret&lt;code&gt;^&lt;/code&gt;operator. This operator installs the most recent&lt;code&gt;minor&lt;/code&gt;or&lt;code&gt;patch&lt;/code&gt;releases. E.g.,&lt;code&gt;^1.2.3&lt;/code&gt;will install&lt;code&gt;1.2.3&lt;/code&gt;,&lt;code&gt;1.2.4&lt;/code&gt;,&lt;code&gt;1.3.0&lt;/code&gt;,&lt;code&gt;1.6.2&lt;/code&gt;, etc. See https://docs.npmjs.com/about-semantic-versioning and try out the npm SemVer Calculator (https://semver.npmjs.com). To avoid installing freshly compromised packages, it is often advised to pin exact versions (e.g.,&lt;code&gt;"my-package": "1.2.3"&lt;/code&gt;).&lt;/quote&gt;
    &lt;p&gt;Here's how to use the save exact flag to pin exact version in various package managers:&lt;/p&gt;
    &lt;code&gt;npm install --save-exact react

pnpm add --save-exact react

yarn add --save-exact react

bun add --exact react

deno add npm:react@19.1.1&lt;/code&gt;
    &lt;p&gt;We can also update this setting in configuration files (e.g., &lt;code&gt;.npmrc&lt;/code&gt;), with either &lt;code&gt;save-exact&lt;/code&gt; or &lt;code&gt;save-prefix&lt;/code&gt; alike key and value pairs:&lt;/p&gt;
    &lt;code&gt;npm config set save-exact=true

pnpm config set save-exact true

yarn config set defaultSemverRangePrefix ""&lt;/code&gt;
    &lt;p&gt;For &lt;code&gt;bun&lt;/code&gt;, the config file is &lt;code&gt;bunfig.toml&lt;/code&gt; and corresponding config is:&lt;/p&gt;
    &lt;code&gt;[install]
exact = true&lt;/code&gt;
    &lt;quote&gt;&lt;p&gt;However, our direct dependencies also have their own dependencies (transitive dependencies). Even if we pin our direct dependencies, their transitive dependencies might still use broad version range operators (like&lt;/p&gt;&lt;code&gt;^&lt;/code&gt;or&lt;code&gt;~&lt;/code&gt;). The solution is to override the transitive dependencies: https://docs.npmjs.com/cli/v11/configuring-npm/package-json#overrides&lt;/quote&gt;
    &lt;p&gt;In &lt;code&gt;package.json&lt;/code&gt;, if we have the following &lt;code&gt;overrides&lt;/code&gt; field:&lt;/p&gt;
    &lt;code&gt;{
  "dependencies": {
    "library-a": "^3.0.0"
  },
  "overrides": {
    "lodash": "4.17.21"
  }
}&lt;/code&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Let's assume that &lt;code&gt;library-a&lt;/code&gt;'s&lt;code&gt;package.json&lt;/code&gt;has a dependency on&lt;code&gt;"lodash": "^4.17.0"&lt;/code&gt;&lt;/item&gt;
      &lt;item&gt;Without the &lt;code&gt;overrides&lt;/code&gt;section,&lt;code&gt;npm&lt;/code&gt;might install&lt;code&gt;lodash@4.17.22&lt;/code&gt;(or any of the latest&lt;code&gt;4.x.x&lt;/code&gt;versions) as a transitive dependency of&lt;code&gt;library-a&lt;/code&gt;&lt;/item&gt;
      &lt;item&gt;However, by adding &lt;code&gt;"overrides": { "lodash": "4.17.21" }&lt;/code&gt;, we are telling&lt;code&gt;npm&lt;/code&gt;that anywhere&lt;code&gt;lodash&lt;/code&gt;appears in the dependency tree, it must be resolved to exactly version&lt;code&gt;4.17.21&lt;/code&gt;&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;For &lt;code&gt;pnpm&lt;/code&gt;, we can also define the &lt;code&gt;overrides&lt;/code&gt; field in the &lt;code&gt;pnpm-workspace.yaml&lt;/code&gt; file: https://pnpm.io/settings#overrides&lt;/p&gt;
    &lt;p&gt;For &lt;code&gt;yarn&lt;/code&gt;, the &lt;code&gt;resolutions&lt;/code&gt; field is introduced before the &lt;code&gt;overrides&lt;/code&gt; field, and it also offers a similar functionality: https://yarnpkg.com/configuration/manifest#resolutions&lt;/p&gt;
    &lt;code&gt;{
  "resolutions": {
    "lodash": "4.17.21"
  }
}&lt;/code&gt;
    &lt;code&gt;# yarn also provide a cli to set the resolution: https://yarnpkg.com/cli/set/resolution
yarn set resolution &amp;lt;descriptor&amp;gt; &amp;lt;resolution&amp;gt;&lt;/code&gt;
    &lt;p&gt;For &lt;code&gt;bun&lt;/code&gt;, it supports either the &lt;code&gt;overrides&lt;/code&gt; field or the &lt;code&gt;resolutions&lt;/code&gt; field: https://bun.com/docs/install/overrides&lt;/p&gt;
    &lt;p&gt;For &lt;code&gt;deno&lt;/code&gt;, see denoland/deno#28664 for more details.&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;Ensure to commit package managers lockfiles to&lt;/p&gt;&lt;code&gt;git&lt;/code&gt;and share between different environments. Different lockfiles are:&lt;code&gt;package-lock.json&lt;/code&gt;for&lt;code&gt;npm&lt;/code&gt;,&lt;code&gt;pnpm-lock.yaml&lt;/code&gt;for&lt;code&gt;pnpm&lt;/code&gt;,&lt;code&gt;bun.lock&lt;/code&gt;for&lt;code&gt;bun&lt;/code&gt;,&lt;code&gt;yarn.lock&lt;/code&gt;for&lt;code&gt;yarn&lt;/code&gt;and&lt;code&gt;deno.lock&lt;/code&gt;for&lt;code&gt;deno&lt;/code&gt;.&lt;p&gt;In automated environments such as continuous integration and deployments, we should install the exact dependencies as defined in the lockfile.&lt;/p&gt;&lt;/quote&gt;
    &lt;code&gt;npm ci

bun install --frozen-lockfile

yarn install --frozen-lockfile

deno install --frozen&lt;/code&gt;
    &lt;p&gt;For &lt;code&gt;deno&lt;/code&gt;, we can also set the following in a &lt;code&gt;deno.json&lt;/code&gt; file:&lt;/p&gt;
    &lt;code&gt;{
  "lock": {
    "frozen": true
  }
}&lt;/code&gt;
    &lt;quote&gt;&lt;p&gt;Lifecycle scripts are special scripts that happen in addition to the&lt;/p&gt;&lt;code&gt;pre&amp;lt;event&amp;gt;&lt;/code&gt;,&lt;code&gt;post&amp;lt;event&amp;gt;&lt;/code&gt;, and&lt;code&gt;&amp;lt;event&amp;gt;&lt;/code&gt;scripts. For instance,&lt;code&gt;preinstall&lt;/code&gt;is run before&lt;code&gt;install&lt;/code&gt;is run and&lt;code&gt;postinstall&lt;/code&gt;is run after&lt;code&gt;install&lt;/code&gt;is run. See how npm handles the "scripts" field: https://docs.npmjs.com/cli/v11/using-npm/scripts#life-cycle-scripts&lt;p&gt;Lifecycle scripts are a common strategy from malicious actors. For example, the "Shai-Hulud" worms3 edit the&lt;/p&gt;&lt;code&gt;package.json&lt;/code&gt;file to add a&lt;code&gt;postinstall&lt;/code&gt;script that would then steal credentials.&lt;/quote&gt;
    &lt;code&gt;npm config set ignore-scripts true --global

yarn config set enableScripts false&lt;/code&gt;
    &lt;p&gt;For &lt;code&gt;bun&lt;/code&gt;, &lt;code&gt;deno&lt;/code&gt; and &lt;code&gt;pnpm&lt;/code&gt;, they are disabled by default.&lt;/p&gt;
    &lt;p&gt;Tip&lt;/p&gt;
    &lt;p&gt;We can combine many of the flags above. For example, the following &lt;code&gt;npm&lt;/code&gt; command would install only production dependencies as defined in the lockfile and ignore lifecycle scripts:&lt;/p&gt;
    &lt;p&gt;
      &lt;code&gt;npm ci --omit=dev --ignore-scripts&lt;/code&gt;
    &lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;We can set a delay to avoid installing newly published packages. This applies to all dependencies, including transitive ones. For example,&lt;/p&gt;&lt;code&gt;pnpm v10.16&lt;/code&gt;introduced the&lt;code&gt;minimumReleaseAge&lt;/code&gt;option: https://pnpm.io/settings#minimumreleaseage, which defines the minimum number of minutes that must pass after a version is published before pnpm will install it. If&lt;code&gt;minimumReleaseAge&lt;/code&gt;is set to&lt;code&gt;1440&lt;/code&gt;, then pnpm will not install a version that was published less than 24 hours ago.&lt;/quote&gt;
    &lt;code&gt;pnpm config set minimumReleaseAge &amp;lt;minutes&amp;gt;

# only install packages published at least 1 day ago
npm install --before="$(date -v -1d)"

yarn config set npmMinimalAgeGate &amp;lt;minutes&amp;gt;&lt;/code&gt;
    &lt;p&gt;For &lt;code&gt;pnpm&lt;/code&gt;, there's also a &lt;code&gt;minimumReleaseAgeExclude&lt;/code&gt; option to exclude certain packages from the minimum release age.&lt;/p&gt;
    &lt;p&gt;For &lt;code&gt;npm&lt;/code&gt;, there is a proposal to add &lt;code&gt;minimumReleaseAge&lt;/code&gt; option and &lt;code&gt;minimumReleaseAgeExclude&lt;/code&gt; option.&lt;/p&gt;
    &lt;p&gt;For &lt;code&gt;yarn&lt;/code&gt;, config options &lt;code&gt;npmMinimalAgeGate&lt;/code&gt; and &lt;code&gt;npmPreapprovedPackages&lt;/code&gt; are implemented since &lt;code&gt;v4.10.0&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;For &lt;code&gt;bun&lt;/code&gt;, it is discussed here: oven-sh/bun#22679&lt;/p&gt;
    &lt;p&gt;For &lt;code&gt;deno&lt;/code&gt;, an draft proposal is here: denoland/deno#30752&lt;/p&gt;
    &lt;p&gt;Tip&lt;/p&gt;
    &lt;p&gt;Renovate CLI (https://github.com/renovatebot/renovate) also includes a &lt;code&gt;minimumReleaseAge&lt;/code&gt; config option.&lt;/p&gt;
    &lt;p&gt;Step Security (https://www.stepsecurity.io) introduced a NPM Package Cooldown Check feature to fail any PR that adds a recently published package.&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;In the latest LTS version of&lt;/p&gt;&lt;code&gt;nodejs&lt;/code&gt;, we can use the Permission model to control what system resources a process has access to or what actions the process can take with those resources. However, this does not provide security guarantees in the presence of malicious code. Malicious code can still bypass the permission model and execute arbitrary code without the restrictions imposed by the permission model.&lt;/quote&gt;
    &lt;p&gt;Read about the Node.js permission model: https://nodejs.org/docs/latest/api/permissions.html&lt;/p&gt;
    &lt;code&gt;# by default, granted full access
node index.js

# restrict access to all available permissions
node --permission index.js

# enable specific permissions
node --permission --allow-fs-read=* --allow-fs-write=* index.js

# use permission model with `npx`
npx --node-options="--permission" &amp;lt;package-name&amp;gt;&lt;/code&gt;
    &lt;p&gt;Deno enables permissions by default. See https://docs.deno.com/runtime/fundamentals/security/&lt;/p&gt;
    &lt;code&gt;# by default, restrict access
deno run script.ts

# enable specific permission
deno run --allow-read script.ts&lt;/code&gt;
    &lt;p&gt;For Bun, the permission model is currently discussed here and here.&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;Because&lt;/p&gt;&lt;code&gt;npm&lt;/code&gt;has a low barrier for publishing packages, the ecosystem quickly grew to be the biggest package registry with over 5 million packages to date10. But not all packages are created equal. There are small utility packages8 that are downloaded as dependencies when we could write them ourselves and raise the question of "have we forgotten how to code?11"&lt;/quote&gt;
    &lt;p&gt;Between &lt;code&gt;nodejs&lt;/code&gt;, &lt;code&gt;bun&lt;/code&gt; and &lt;code&gt;deno&lt;/code&gt;, developers can use many of their modern features instead of relying on third-party libraries. The native modules may not provide the same level of functionality, but they should be considered whenever possible. Here are few examples:&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="2"&gt;
        &lt;cell role="head"&gt;NPM libraries&lt;/cell&gt;
        &lt;cell role="head"&gt;Built-in modules&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;&lt;code&gt;axios&lt;/code&gt;, &lt;code&gt;node-fetch&lt;/code&gt;, &lt;code&gt;got&lt;/code&gt;, etc&lt;/cell&gt;
        &lt;cell&gt;native&lt;code&gt;fetch&lt;/code&gt; API&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;&lt;code&gt;jest&lt;/code&gt;, &lt;code&gt;mocha&lt;/code&gt;, &lt;code&gt;ava&lt;/code&gt;, etc&lt;/cell&gt;
        &lt;cell&gt;&lt;code&gt;node:test&lt;/code&gt;,&lt;code&gt;node:assert&lt;/code&gt;, &lt;code&gt;bun test&lt;/code&gt; and &lt;code&gt;deno test&lt;/code&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;&lt;code&gt;nodemon&lt;/code&gt;, &lt;code&gt;chokidar&lt;/code&gt;, etc&lt;/cell&gt;
        &lt;cell&gt;&lt;code&gt;node --watch&lt;/code&gt;, &lt;code&gt;bun --watch&lt;/code&gt; and &lt;code&gt;deno --watch&lt;/code&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;&lt;code&gt;dotenv&lt;/code&gt;, &lt;code&gt;dotenv-expand&lt;/code&gt;, etc&lt;/cell&gt;
        &lt;cell&gt;&lt;code&gt;node --env-file&lt;/code&gt;, &lt;code&gt;bun --env-file&lt;/code&gt; and &lt;code&gt;deno --env-file&lt;/code&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;&lt;code&gt;typescript&lt;/code&gt;, &lt;code&gt;ts-node&lt;/code&gt;, etc&lt;/cell&gt;
        &lt;cell&gt;&lt;code&gt;node --experimental-strip-types&lt;/code&gt;12, native to &lt;code&gt;deno&lt;/code&gt; and &lt;code&gt;bun&lt;/code&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;&lt;code&gt;esbuild&lt;/code&gt;, &lt;code&gt;rollup&lt;/code&gt;, etc&lt;/cell&gt;
        &lt;cell&gt;&lt;code&gt;bun build&lt;/code&gt; and &lt;code&gt;deno bundle&lt;/code&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;&lt;code&gt;prettier&lt;/code&gt;, &lt;code&gt;eslint&lt;/code&gt;, etc&lt;/cell&gt;
        &lt;cell&gt;&lt;code&gt;deno lint&lt;/code&gt; and &lt;code&gt;deno fmt&lt;/code&gt;&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Here are some resources that you might find useful:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;https://obsidian.md/blog/less-is-safer&lt;/item&gt;
      &lt;item&gt;https://kashw1n.com/blog/nodejs-2025&lt;/item&gt;
      &lt;item&gt;https://lyra.horse/blog/2025/08/you-dont-need-js&lt;/item&gt;
      &lt;item&gt;https://blog.greenroots.info/10-lesser-known-web-apis-you-may-want-to-use&lt;/item&gt;
      &lt;item&gt;https://github.com/you-dont-need/You-Dont-Need-Momentjs&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;https://docs.npmjs.com/about-two-factor-authentication&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;Two factor authentication (2FA) adds an extra layer of authentication to your&lt;/p&gt;&lt;code&gt;npm&lt;/code&gt;account. 2FA is not required by default, but it is a good practice to enable it.&lt;/quote&gt;
    &lt;code&gt;# ensure that 2FA is enabled for auth and writes (this is the default)
npm profile enable-2fa auth-and-writes&lt;/code&gt;
    &lt;p&gt;https://docs.npmjs.com/about-access-tokens#about-granular-access-tokens&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;An access token is a common way to authenticate to&lt;/p&gt;&lt;code&gt;npm&lt;/code&gt;when using the API or the&lt;code&gt;npm&lt;/code&gt;CLI.&lt;/quote&gt;
    &lt;code&gt;npm token create # for a read and publish token
npm token create --read-only # for a read-only token
npm token create --cidr=[list] # for a CIDR-restricted read and publish token
npm token create --read-only --cidr=[list] # for a CIDR-restricted read-only token&lt;/code&gt;
    &lt;p&gt;Tip&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Restrict token to specific packages, scopes, and organizations&lt;/item&gt;
      &lt;item&gt;Set a token expiration date&lt;/item&gt;
      &lt;item&gt;Limit token access based on IP address ranges (CIDR notation)&lt;/item&gt;
      &lt;item&gt;Select between read-only or read and write access&lt;/item&gt;
      &lt;item&gt;Don't use the same token for multiple purposes&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;https://docs.npmjs.com/generating-provenance-statements&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;The provenance attestation is established by publicly providing a link to a package's source code and build instructions from the build environment. This allows developers to verify where and how your package was built before they download it.&lt;/p&gt;&lt;p&gt;The publish attestations are generated by the registry when a package is published by an authorized user. When an npm package is published with provenance, it is signed by Sigstore public good servers and logged in a public transparency ledger, where users can view this information.&lt;/p&gt;&lt;p&gt;For example, here's what a provenance statement look like on the&lt;/p&gt;&lt;code&gt;vue&lt;/code&gt;package page: https://www.npmjs.com/package/vue#provenance&lt;/quote&gt;
    &lt;p&gt;To establish provenance, use a supported CI/CD provider (e.g., GitHub Actions) and publish with the correct flag:&lt;/p&gt;
    &lt;code&gt;npm publish --provenance&lt;/code&gt;
    &lt;p&gt;To publish without evoking the &lt;code&gt;npm publish&lt;/code&gt; command, we can do one of the following:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Set &lt;code&gt;NPM_CONFIG_PROVENANCE&lt;/code&gt;to&lt;code&gt;true&lt;/code&gt;in CI/CD environment&lt;/item&gt;
      &lt;item&gt;Add &lt;code&gt;provenance=true&lt;/code&gt;to&lt;code&gt;.npmrc&lt;/code&gt;file&lt;/item&gt;
      &lt;item&gt;Add &lt;code&gt;publishConfig&lt;/code&gt;block to&lt;code&gt;package.json&lt;/code&gt;&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;"publishConfig": {
  "provenance": true
}&lt;/code&gt;
    &lt;quote&gt;
      &lt;p&gt;Limiting the files in an npm package helps prevent malware by reducing the attack surface, and it avoids accidental leaking of sensitive data&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;The &lt;code&gt;files&lt;/code&gt; field in &lt;code&gt;package.json&lt;/code&gt; is used to specify the files that should be included in the published package. Certain files are always included, see: https://docs.npmjs.com/cli/v11/configuring-npm/package-json#files for more details.&lt;/p&gt;
    &lt;code&gt;{
  "name": "my-package",
  "version": "1.0.0",
  "main": "dist/index.js",
  "files": ["dist", "LICENSE", "README.md"]
}&lt;/code&gt;
    &lt;p&gt;Tip&lt;/p&gt;
    &lt;p&gt;The &lt;code&gt;.npmignore&lt;/code&gt; file can also be used to exclude files from the published package.&lt;/p&gt;
    &lt;p&gt;It will not override the &lt;code&gt;"files"&lt;/code&gt; field, but in subdirectories it will.&lt;/p&gt;
    &lt;p&gt;The &lt;code&gt;.npmignore&lt;/code&gt; file works just like a &lt;code&gt;.gitignore&lt;/code&gt;. If there is a &lt;code&gt;.gitignore&lt;/code&gt; file, and &lt;code&gt;.npmignore&lt;/code&gt; is missing, &lt;code&gt;.gitignore&lt;/code&gt;'s contents will be used instead.&lt;/p&gt;
    &lt;p&gt;We can run &lt;code&gt;npx pack --dry-run&lt;/code&gt; to see the contents that will be included in the published version of the package.&lt;/p&gt;
    &lt;code&gt;&amp;gt; npx pack --dry-run
npm notice Tarball Contents
npm notice 1.1kB LICENSE
npm notice 1.9kB README.md
npm notice 108B index.js
npm notice 700B package.json
npm notice Tarball Details&lt;/code&gt;
    &lt;p&gt;Also, run &lt;code&gt;npm publish --dry-run&lt;/code&gt; to see what would be happen when we run the publish command.&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;Private package registries are a great way for organizations to manage their own dependencies, and can acts as a proxy to the public&lt;/p&gt;&lt;code&gt;npm&lt;/code&gt;registry. Organizations can enforce security policies and vet packages before they are used in a project.&lt;/quote&gt;
    &lt;p&gt;Here are some private registries that you might find useful:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;GitHub Packages https://docs.github.com/en/packages/working-with-a-github-packages-registry/working-with-the-npm-registry&lt;/item&gt;
      &lt;item&gt;Verdaccio https://github.com/verdaccio/verdaccio&lt;/item&gt;
      &lt;item&gt;Vlt https://www.vlt.sh/&lt;/item&gt;
      &lt;item&gt;JFrog Artifactory https://jfrog.com/integrations/npm-registry&lt;/item&gt;
      &lt;item&gt;Sonatype: https://help.sonatype.com/en/npm-registry.html&lt;/item&gt;
    &lt;/list&gt;
    &lt;quote&gt;
      &lt;p&gt;Many package managers provide audit functionality to scan your project's dependencies for known security vulnerabilities, show a report and recommend the best way to fix them.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;code&gt;npm audit # audit dependencies
npm audit fix # automatically install any compatible updates
npm audit signatures # verify the signatures of the dependencies

pnpm audit
pnpm audit --fix

bun audit

yarn npm audit
yarn npm audit --recursive # audit transitive dependencies&lt;/code&gt;
    &lt;p&gt;GitHub offers several services that can help protect against &lt;code&gt;npm&lt;/code&gt; malwares, including:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Dependabot: This tool automatically scans your project's dependencies, including &lt;code&gt;npm&lt;/code&gt;packages, for known vulnerabilities.&lt;/item&gt;
      &lt;item&gt;Software Bill of Materials (SBOMs): GitHub allows you to export an SBOM for your repository directly from its dependency graph. An SBOM provides a comprehensive list of all your project's dependencies, including transitive ones (dependencies of your dependencies).&lt;/item&gt;
      &lt;item&gt;Code Scanning: Code scanning can also help identify potential vulnerabilities or suspicious patterns that might arise from integrating compromised &lt;code&gt;npm&lt;/code&gt;packages.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Warning&lt;/p&gt;
    &lt;p&gt;If you spot vulnerabilities or issues in NPM or Github, please report them using the following links:&lt;/p&gt;
    &lt;p&gt;Socket.dev is a security platform designed to protect JavaScript projects by scanning and securing dependencies from malicious and vulnerable code. It offers various tools such as GitHub App, "Safe NPM" CLI tool, Web Extension, and VSCode Extension. Watch their talk on AI powered malware hunting at scale, Jan 2025 for more details.&lt;/p&gt;
    &lt;p&gt;Snyk offers a suite of tools to fix vulnerabilities in open source dependencies, including a CLI to run vulnerability scans on local machine, IDE integrations to embed into development environment, and API to integrate with Snyk programmatically. For example, you can test public npm packages before use or create automatic PRs for known vulnerabilities.&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;Maintainer burnout is a significant problem in the open-source community. Many popular&lt;/p&gt;&lt;code&gt;npm&lt;/code&gt;packages are maintained by volunteers who work in their spare time, often without any compensation. Over time, this can lead to exhaustion and a lack of motivation, making them more susceptible to social engineering where a malicious actor pretends to be a helpful contributor and eventually injects malicious code.&lt;/quote&gt;
    &lt;quote&gt;&lt;p&gt;In 2018, the&lt;/p&gt;&lt;code&gt;event-stream&lt;/code&gt;package was compromised due to the maintainer giving access to a malicious actor13. Another example outside the JavaScript ecosystem is the XZ Utils incident14 in 2024 where a malicious actor worked for over three years to attain a position of trust.&lt;/quote&gt;
    &lt;quote&gt;
      &lt;p&gt;OSS donations also help create a more sustainable model for open-source development. Foundations can help support the business, marketing, legal, technical assistance and direct support behind hundreds of open source projects that so many rely upon15.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;In the JavaScript ecosystem, the OpenJS Foundation (https://openjsf.org) was founded in 2019 from a merger of JS Foundation and Node.js Foundation. But here are few platforms where you can also directly donate to OSS maintainers:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;GitHub Sponsors https://github.com/sponsors&lt;/item&gt;
      &lt;item&gt;Open Collective https://opencollective.com&lt;/item&gt;
      &lt;item&gt;Thanks.dev https://thanks.dev&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Footnotes&lt;/head&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;https://www.aikido.dev/blog/npm-debug-and-chalk-packages-compromised ↩&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;https://socket.dev/blog/ongoing-supply-chain-attack-targets-crowdstrike-npm-packages ↩ ↩2&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;https://www.reversinglabs.com/blog/malicious-npm-patch-delivers-reverse-shell ↩&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;https://socket.dev/blog/north-korean-apt-lazarus-targets-developers-with-malicious-npm-package ↩&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;https://github.com/duckdb/duckdb-node/security/advisories/GHSA-w62p-hx95-gf2c ↩&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;https://openssf.org/blog/2024/04/15/open-source-security-openssf-and-openjs-foundations-issue-alert-for-social-engineering-takeovers-of-open-source-projects/ ↩&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/bodadotsh/npm-security-best-practices"/><published>2025-09-21T21:19:47+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45327199</id><title>How can I influence others without manipulating them?</title><updated>2025-09-22T10:41:46.587304+00:00</updated><content>&lt;doc fingerprint="b482039d8bacd597"&gt;
  &lt;main&gt;
    &lt;p&gt;We influence others every day, whether we intend to or not. Sometimes it is through the way we argue, sometimes through the way we listen, and sometimes simply through the story we tell about what matters. Influence is not the property of the few who hold authority. It is the currency of all relationships.&lt;/p&gt;
    &lt;p&gt;The word persuasion often carries with it the scent of manipulation, as though one person is moving another toward something they do not really want. But there is another way to hold it. Influence can be understood as an invitation. It is the art of meeting people where they are, of entering their world with respect, and of opening a door that they might choose to walk through with us.&lt;/p&gt;
    &lt;p&gt;This article invites you to consider five doors of influence: Rationalising, Asserting, Negotiating, Inspiring, and Bridging. Each opens a different path into relationship and commitment. Each has its gifts. Each, when overused, can become a wall instead of a door.&lt;/p&gt;
    &lt;p&gt;The practice is not to master all five overnight, but to grow our awareness and our range. Persuasion is not a personality trait. It is a skill. It asks us to listen, to notice, and to choose consciously how we invite others.&lt;/p&gt;
    &lt;head rend="h2"&gt;Our own doorway: The blind spot of preference&lt;/head&gt;
    &lt;p&gt;Most of us have a default style of persuasion. Perhaps you lean on facts. Perhaps you rely on conviction. Perhaps you search for compromise, tell stories, or call on the voices of others. None of these is wrong. Each is a doorway.&lt;/p&gt;
    &lt;p&gt;Yet our default does more than shape how we speak. It shapes how we see. If I lean on data, I may hear someone’s story as weak rather than inspiring. If I favour conviction, I may interpret hesitation as lack of commitment, when it might be an opening for negotiation. If I thrive on inspiration, I may dismiss detail-oriented questions as nit-picking rather than as a real need for clarity. If I am most comfortable with bridging, I may feel uneasy with those who are direct and independent.&lt;/p&gt;
    &lt;p&gt;Our own doorway becomes a filter. It colours what we pay attention to, what we dismiss, and how we react. The danger is that we mistake difference for resistance. We think they are being difficult, when in fact they are simply standing at another door.&lt;/p&gt;
    &lt;p&gt;Becoming aware of our preference allows us to pause. Instead of defending our own style, we can ask: What is the invitation they are offering me through their language and behaviour? Which door are they holding open that I have overlooked because I was guarding my own?&lt;/p&gt;
    &lt;p&gt;Influence begins with this act of humility. The willingness to see that the door we most trust may not be the one others are waiting at.&lt;/p&gt;
    &lt;p&gt;Once we recognise our blind spot, we are ready to notice the variety of doors available to us. Influence is not one way, it is five ways. Each has its own language, its own gifts, and its own risks. Rationalising, Asserting, Negotiating, Inspiring, and Bridging are not personality types but choices. At any moment, we can choose to knock on a different door, depending on where others are standing and what the moment requires.&lt;/p&gt;
    &lt;p&gt;What follows is a closer look at each door. how to recognise it, how to walk through it well, and how to avoid turning it into a wall.&lt;/p&gt;
    &lt;head rend="h2"&gt;Rationalising: The door of logic&lt;/head&gt;
    &lt;p&gt;Rationalising is the style that seeks to persuade through facts, evidence, and analysis. It appeals to those who are comforted by structure and clarity. When someone asks for data, compares benchmarks, or worries about risk and performance, they are standing at the rational door.&lt;/p&gt;
    &lt;p&gt;This style has its strengths. It reassures the finance director who needs a business case. It appeals to the engineer who wants proof that the system will not fail. It builds trust with the analyst who measures quality by what can be verified.&lt;/p&gt;
    &lt;p&gt;To enter this door well, we come prepared. We gather our facts. We organise our thinking into a clear flow: problem, options, evidence, recommendation. We know the return on investment, the efficiency gains, the quality improvements. We anticipate objections and hold evidence ready to meet them. We present data not as a weapon but as a gift of clarity.&lt;/p&gt;
    &lt;p&gt;Yet logic alone is not enough. Overused, it can become cold and detached. The person across from us may long for empathy, but we bury them in numbers. They may seek relationship, but we offer them a chart. Rationalising can easily turn into proving a point rather than creating understanding.&lt;/p&gt;
    &lt;head rend="h3"&gt;Reflection questions&lt;/head&gt;
    &lt;p&gt;• Which metrics or outcomes matter most to this person, and have I framed my case in those terms, for example ROI, risk, quality or efficiency?&lt;/p&gt;
    &lt;p&gt;• What is my one-page flow: problem, options, evidence, recommendation?&lt;/p&gt;
    &lt;p&gt;• Which objections are most likely, and what independent sources will I cite to address them?&lt;/p&gt;
    &lt;p&gt;• Where will a chart or comparison clarify, and where could visuals overwhelm?&lt;/p&gt;
    &lt;p&gt;• What level of evidence would be enough for this decision, and how will I check for overload signals in the moment?&lt;/p&gt;
    &lt;p&gt;• Where might I be using facts to prove a point rather than to build shared understanding?&lt;/p&gt;
    &lt;p&gt;• If they are not data-driven, which second door will I pivot to after I test for fit?&lt;/p&gt;
    &lt;p&gt;• What jargon should I remove to keep the message precise and clear?&lt;/p&gt;
    &lt;head rend="h2"&gt;Asserting: The door of conviction&lt;/head&gt;
    &lt;p&gt;Asserting persuades through confidence, authority, and clarity. It is the voice that speaks directly and without hesitation. It is the person who values decisiveness, who prefers a straight line over a winding explanation, who respects those who stand their ground.&lt;/p&gt;
    &lt;p&gt;You recognise this style when someone expresses strong opinions with little hesitation, when they challenge ideas and expect you to do the same, when they respond best to conviction rather than ambiguity. For them, clarity is a form of respect.&lt;/p&gt;
    &lt;p&gt;To enter this door well, we speak with confidence. We choose firm language, declarative statements, uncluttered by qualifiers. We are direct and concise. We know our boundaries, and we state them. We are ready with anchor points: two or three firm reasons why our proposal matters.&lt;/p&gt;
    &lt;p&gt;The temptation, though, is to confuse assertiveness with aggression. Overused, asserting becomes domineering. It silences others. It leaves no room for dialogue. It builds resistance where it meant to build respect.&lt;/p&gt;
    &lt;head rend="h3"&gt;Reflection questions&lt;/head&gt;
    &lt;p&gt;• What exactly am I asking for in one clear sentence?&lt;/p&gt;
    &lt;p&gt;• What is non-negotiable, and what is flexible?&lt;/p&gt;
    &lt;p&gt;• What two or three anchor reasons will I use to support my position?&lt;/p&gt;
    &lt;p&gt;• How will I signal credibility without drifting into name-dropping or status plays?&lt;/p&gt;
    &lt;p&gt;• What does matching their energy look like while staying respectful and calm?&lt;/p&gt;
    &lt;p&gt;• Where will I deliberately pause to listen so I do not over-talk the room?&lt;/p&gt;
    &lt;p&gt;• What early signals tell me I am tipping into pressure, and how will I de-escalate?&lt;/p&gt;
    &lt;p&gt;• If directness stalls the dialogue, what is my next door to try?&lt;/p&gt;
    &lt;head rend="h2"&gt;Negotiating: The door of balance&lt;/head&gt;
    &lt;p&gt;Negotiating persuades by finding common ground. It seeks the middle path, the workable solution, the compromise that honours both sides. It is rooted in the belief that influence is not about victory but about mutual benefit.&lt;/p&gt;
    &lt;p&gt;You notice this style in those who raise concerns gently, who suggest meeting halfway, who speak in terms of “what if” and “could we.” They are pragmatic. They value win–win outcomes. They prefer flexibility over confrontation.&lt;/p&gt;
    &lt;p&gt;To enter this door well, we listen closely to uncover the real concern beneath the stated one. We protect what matters most to us while staying open to trade-offs. We come with options. We ask open-ended questions. We remain collaborative, treating the conversation as joint problem-solving.&lt;/p&gt;
    &lt;p&gt;But compromise has its dangers. Overused, negotiation turns into unnecessary concession. We may be seen as weak or uncertain. Others may begin every conversation expecting us to bend. We may give away value before fully exploring our own position.&lt;/p&gt;
    &lt;head rend="h3"&gt;Reflection questions&lt;/head&gt;
    &lt;p&gt;• What is the real concern beneath what is being said, and how will I surface it with open questions?&lt;/p&gt;
    &lt;p&gt;• Which larger goals or principles am I protecting, and what are my red lines?&lt;/p&gt;
    &lt;p&gt;• What tradables or creative options can I offer that create value without giving away too much?&lt;/p&gt;
    &lt;p&gt;• What do I expect in return for each concession?&lt;/p&gt;
    &lt;p&gt;• How will I hold a respectful, collaborative tone so we stay in joint problem solving?&lt;/p&gt;
    &lt;p&gt;• At what point would compromise become drift, and how will I name that threshold?&lt;/p&gt;
    &lt;p&gt;• If others expect automatic concessions from me, how will I reset expectations early?&lt;/p&gt;
    &lt;p&gt;• What alternative door will I use if bargaining signals are not present?&lt;/p&gt;
    &lt;head rend="h2"&gt;Inspiring: The door of vision&lt;/head&gt;
    &lt;p&gt;Inspiring persuades through story, metaphor, and imagination. It calls people to something larger than themselves. It shifts the focus from what is practical to what is possible.&lt;/p&gt;
    &lt;p&gt;You know you are with an inspiring type when they disengage from technical talk but light up at mention of purpose or possibility. They ask about impact and legacy. They respond to stories and metaphors. They look for meaning, not just measurement.&lt;/p&gt;
    &lt;p&gt;To enter this door well, we tell relevant stories. We use vivid language and imagery. We connect ideas to values and aspirations. We speak with authenticity and passion. We invite others to imagine: What if you could? What would it feel like if…?&lt;/p&gt;
    &lt;p&gt;Yet inspiration without grounding can lose its way. Overused, it becomes idealistic, disconnected from reality, heavy with promise and light on delivery. Listeners may nod politely but ask for numbers that never come. Trust fades when vision is not matched by action.&lt;/p&gt;
    &lt;head rend="h3"&gt;Reflection questions&lt;/head&gt;
    &lt;p&gt;• What specific story from their world will make this possibility feel real and credible?&lt;/p&gt;
    &lt;p&gt;• What image or analogy will help them visualise success?&lt;/p&gt;
    &lt;p&gt;• Which values or purpose of theirs does this idea serve, for example impact, legacy, innovation or customer experience?&lt;/p&gt;
    &lt;p&gt;• What is the smallest concrete next step that grounds the vision?&lt;/p&gt;
    &lt;p&gt;• Where will I invite imagination with a genuine what if question, then check for practical concerns?&lt;/p&gt;
    &lt;p&gt;• What numbers or proof points should I have ready if they ask for them?&lt;/p&gt;
    &lt;p&gt;• How will I keep my tone authentic so enthusiasm does not outpace deliverables?&lt;/p&gt;
    &lt;p&gt;• If inspiration lands politely but without commitment, which door will I move to next?&lt;/p&gt;
    &lt;head rend="h2"&gt;Bridging: The door of relationship&lt;/head&gt;
    &lt;p&gt;Bridging persuades through connection and social proof. It is the style that builds trust by involving others, by leaning on shared experience, by showing that someone else has walked this path before.&lt;/p&gt;
    &lt;p&gt;You recognise it when someone asks, “Who else is doing this?” or seems hesitant until they hear a peer’s endorsement. They value rapport and trust more than unknown data. They commit when they see others they respect committing.&lt;/p&gt;
    &lt;p&gt;To enter this door well, we bring in mutual contacts. We offer testimonials and case studies. We emphasise shared goals. We give before we ask, offering help, making introductions, extending reciprocity. We are warm and attentive, because this style rests on human connection.&lt;/p&gt;
    &lt;p&gt;But here too lies a danger. Overused, bridging makes us dependent on others. We may delay decisions, waiting for third-party validation. We may undermine our own authority, deferring to outside voices instead of speaking for ourselves.&lt;/p&gt;
    &lt;head rend="h3"&gt;Reflection questions&lt;/head&gt;
    &lt;p&gt;• Who do they already trust that I can appropriately involve, and how will I make that connection?&lt;/p&gt;
    &lt;p&gt;• Which case study or testimonial best mirrors their context?&lt;/p&gt;
    &lt;p&gt;• How will I frame our shared goals so alignment is explicit?&lt;/p&gt;
    &lt;p&gt;• What value can I offer first, for example a helpful introduction or insight, before asking for commitment?&lt;/p&gt;
    &lt;p&gt;• How will I keep momentum without waiting for every third party to weigh in?&lt;/p&gt;
    &lt;p&gt;• Where do I need to speak in my own voice so I do not over-rely on others’ validation?&lt;/p&gt;
    &lt;p&gt;• What is my plan to sustain the relationship beyond this single decision?&lt;/p&gt;
    &lt;p&gt;• If bridging slows progress, which door should I try to regain decisiveness?&lt;/p&gt;
    &lt;head rend="h2"&gt;Living the paradox of influence&lt;/head&gt;
    &lt;p&gt;Each of these five doors, Rationalising, Asserting, Negotiating, Inspiring, and Bridging, offers a path into relationship. Each works best when it honours the person we hope to influence rather than serving only our own habits.&lt;/p&gt;
    &lt;p&gt;The paradox is that any of them, when overused, becomes a wall. Logic turns cold. Conviction turns harsh. Compromise turns weak. Vision turns empty. Relationship turns dependent. What begins as invitation can end as imposition.&lt;/p&gt;
    &lt;p&gt;The practice is not to abandon our natural style but to notice when it no longer serves. To ask: Which doorway is this person already standing at? What language are they using? What energises them? What shuts them down?&lt;/p&gt;
    &lt;p&gt;Influence then becomes less about pressing harder on the door we know, and more about walking around to the door they are holding open.&lt;/p&gt;
    &lt;p&gt;Persuasion is not about clever tactics or manipulation. It is about presence. It is about listening for what matters to others and choosing consciously how we invite them.&lt;/p&gt;
    &lt;p&gt;The question that remains for each of us is simple: Which door will you choose to knock on in your next conversation?&lt;/p&gt;
    &lt;p&gt;Do you have any tips or advice? What has worked for you? Do you have any recommended resources to explore? Thanks for reading!&lt;/p&gt;
    &lt;head rend="h2"&gt;Influenced by&lt;/head&gt;
    &lt;p&gt;The five doors of influence: Rationalising, Asserting, Negotiating, Inspiring, and Bridging, are my synthesis, but several bodies of work have shaped them:&lt;/p&gt;
    &lt;p&gt;• Gary Yukl’s research on leadership influence tactics, which identified patterns such as rational persuasion, pressure, exchange, inspirational appeals, and coalition tactics.&lt;/p&gt;
    &lt;p&gt;• Robert Cialdini’s principles of persuasion, especially authority, social proof, reciprocity, and consistency, which continue to show how people respond to influence in practice.&lt;/p&gt;
    &lt;p&gt;• Negotiation practice and theory, from both organisational behaviour research and classic works on principled negotiation, which highlight the importance of mutual benefit and trade-offs.&lt;/p&gt;
    &lt;p&gt;• Leadership and change literature, including Peter Block’s writings on community and invitation, which shape the idea of influence as a relational act rather than a manipulative one.&lt;/p&gt;
    &lt;p&gt;• My own work with leadership teams, where repeated practice has confirmed that leaders tend to default to one or two styles, often without realising the limits this creates in how they see and respond to others.&lt;/p&gt;
    &lt;p&gt;These streams converge in the five doors. They are not meant as a new theory, but as a practical frame that leaders can hold in the moment, to choose how they wish to invite others.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://andiroberts.com/leadership-questions/how-to-influence-others-without-manipulating"/><published>2025-09-21T22:20:16+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45327417</id><title>Why is Venus hell and Earth an Eden?</title><updated>2025-09-22T10:41:46.328244+00:00</updated><content>&lt;doc fingerprint="7719f9695df445ba"&gt;
  &lt;main&gt;
    &lt;p&gt;Mark Belan/Quanta Magazine&lt;/p&gt;
    &lt;p&gt;Venus is arguably the worst place in the solar system. A cloak of carbon dioxide suffocates the planet, subjecting its surface to skull-crushing pressure. Sulfuric acid rains down through the sickly yellow sky but never reaches the lava-licked ground. Venus is so hot — hot enough to melt lead — that the acid rain evaporates as it’s falling.&lt;/p&gt;
    &lt;p&gt;The planet’s extreme inhospitality is at the heart of one of the most beguiling mysteries in planetary science. Venus and Earth formed at the same time, from the same geologic building blocks, in pretty much the same part of the solar system. They’re even the same size. So why is Venus a hellscape, and Earth a garden?&lt;/p&gt;
    &lt;p&gt;A common refrain in the scientific community is that Venus is just several steps ahead — that it represents the end state of all large rocky planets, including Earth. The hypothesis is that these planets eventually lose the ability to sequester planet-warming greenhouse gases in their geologic underbelly. When those gases then accumulate in the atmosphere, the world enters a runaway greenhouse state — like the boiling hot Venusian climate. “Over the years, we’d always heard about Venus being a preview into Earth’s future,” said Stephen Kane, a planetary astrophysicist at the University of California, Riverside.&lt;/p&gt;
    &lt;p&gt;But is that long-held assumption true? In hundreds of millions or billions of years, will Earth’s climate go the way of Venus’, transitioning from a temperate world into a catastrophic hothouse? Kane and his colleagues have been trying to find out. Venus and Earth are often referred to as twins, with Venus being the evil one of the pair. In their Reuniting Twins project, the scientists have developed a digital model of Earth that combines solar physics, volcanology, plate tectonics and climate science. They’ve been pushing their model Earth to its extremes, trying every plausible way to break it and make it into Venus.&lt;/p&gt;
    &lt;p&gt;As well as exploring what went so wrong on the second rock from the sun, this work speaks to a query closer to home, said Paul Byrne, a planetary scientist at Washington University in St. Louis who was not directly involved with the project: “How long is Earth habitable for?”&lt;/p&gt;
    &lt;p&gt;NASA&lt;/p&gt;
    &lt;head rend="h2"&gt;A Planetary Whodunit&lt;/head&gt;
    &lt;p&gt;Forecasting Earth’s future requires an understanding of Venus’ past. Long ago, Venus might not have been too different from how Earth is now. Spacecraft surveys and telescope observations have revealed the existence of a rare, heavy form of water in the Venusian atmosphere — a telltale sign that regular water used to be abundant on the planet.&lt;/p&gt;
    &lt;p&gt;Researchers debate how that water resided there. One possibility is that the water on young Venus formed steam that wafted above the magma sea covering the newborn planet’s surface. That water vapor, a potent greenhouse gas, would have pushed the world into a scorching-hot greenhouse state not long after its birth. Alternatively, Venus’ initial, planetwide magma sea might have cooled and hardened into a crust quickly enough for liquid water — maybe even an ocean’s worth of water — to flow across it. If that is true, then what happened to all that water?&lt;/p&gt;
    &lt;p&gt;In 2020, Michael Way, a planetary scientist and climate modeler at NASA’s Goddard Institute for Space Studies in New York, looked at two possibilities for how a Venusian ocean could have boiled away.&lt;/p&gt;
    &lt;p&gt;The first hypothesis points to the sun, which, as it ages and burns through its hydrogen fuel, blasts out ever more sunlight, subjecting nearby planets — including Venus, which sits closer to the sun than we do — to an increasingly intense blaze. Planetary scientists estimate that by about a billion years after the solar system’s birth, the gradually brightening sun would have been able to efficiently vaporize any liquid water on Venus. Water vapor would then have flooded the Venusian atmosphere, potentially causing intensive global warming; this warming might have been exacerbated further by volcanoes off-gassing carbon dioxide. The combination might have pushed Venus into a runaway greenhouse state.&lt;/p&gt;
    &lt;p&gt;It’s a nice story. But according to Way’s models, the theory that the sun broke Venus by evaporating its oceans has problems. Venus spins very slowly on its axis, and one day there is equivalent to 116 Earth days, or nearly four months. If the planet’s dayside initially held liquid oceans, that water’s evaporation would have formed thick clouds. Those prodigious, persistent dayside clouds would have reflected sunlight, keeping Venus cooler than it otherwise might have been and actually preventing a runaway greenhouse effect and unrestrained global warming.&lt;/p&gt;
    &lt;p&gt;Way thinks that a more plausible suspect in Venus’ demise is a form of ruinous volcanism. In its own storied past, Earth experienced prolonged eruptions of lava in single regions, known as large igneous provinces (LIPs), that lasted for hundreds of thousands and perhaps millions of years. Each of these events injected copious carbon dioxide into the atmosphere and made the world, for a time, extremely hot. One LIP 252 million years ago triggered the worst recorded mass extinction in Earth’s history, almost sterilizing the planet.&lt;/p&gt;
    &lt;p&gt;NASA&lt;/p&gt;
    &lt;p&gt;Fortunately for life, after each of these LIP events, Earth gradually drew that excess carbon dioxide deep into its rocky bowels, and the planet cooled back down. It accomplished this through a process called subduction: When tectonic plates collide, one plate can descend below the other, drawing seawater rich in dissolved carbon dioxide into the abyssal depths. That carbon remains sequestered in the lower mantle for epochal lengths of time; some of it eventually erupts back into the atmosphere via volcanism. That, in a nutshell, is how Earth’s global thermostat is regulated.&lt;/p&gt;
    &lt;p&gt;It’s possible that back when there was water on Venus, it also had Earth-like plate tectonics with major subduction zones. But the system wasn’t widespread or large-scale enough to save it from a planetary immolation — especially if several LIP events occurred at roughly the same time. Way’s models show that several concurrent LIPs could have thrown vast quantities of carbon dioxide into Venus’ atmosphere, warming the world so severely that much of its liquid water boiled away into the sky, accelerating the warming further. With no oceans to speak of, all that carbon dioxide could not be reabsorbed. Moreover, water is an enabler of subduction: It lowers the melting point of rocks, allowing tectonic plates to more easily bend and break. And so, with no water left at the surface, major subduction zones would grind to a halt, preventing the entombment of carbon dioxide.&lt;/p&gt;
    &lt;p&gt;Other scientists tend to agree with Way’s assessment: The sun alone cannot be responsible for making Venus the awful place it is today. “I really do think you need multiple extreme volcanic episodes … to get there,” said Anna Gülcher, a planetary scientist at the University of Bern in Switzerland.&lt;/p&gt;
    &lt;head rend="h2"&gt;How to Break the World&lt;/head&gt;
    &lt;p&gt;While studying Venus and its runaway greenhouse wasteland, Kane became morbidly curious: Could the same fate befall Earth? “What if we shut down the carbon cycle on Earth?” he said. “Could you produce a Venus?”&lt;/p&gt;
    &lt;p&gt;To find out, he and his team built a virtual world-destroying machine. “Everybody loves a post-apocalyptic or doomsday scenario, provided it’s 5 billion years in our future,” he said.&lt;/p&gt;
    &lt;p&gt;Courtesy of Stephen Kane&lt;/p&gt;
    &lt;p&gt;The first step was to fast-forward their model of Earth about 3.5 billion years, to when the sun and planets will be 8 billion years old. At that point, the sun will shine brighter than it does today, and Earth’s atmosphere will receive the same level of roasting-hot starlight that Venus did when it was just 1 billion years old. Back then, it’s thought, Venus would have been at a tipping point: either temperate and waterlogged, or burnt to a crisp. The 8 billion-year-old sun will push Earth to a similar, climatic knife-edge.&lt;/p&gt;
    &lt;p&gt;The team’s model suggests that in 3.5 billion years, Earth’s oceans could begin evaporating and become heat-trapping water vapor in the atmosphere. That could be sufficient to kill off Earth’s major subduction zones, since without water, there might be no subduction (plus, there would be less water for carbon dioxide to dissolve into in the first place). “We’re losing the ability to draw back that CO2 into the Earth’s mantle. So it just builds up,” said Michelle Hill of Stanford University, a member of the Reuniting Twins project.&lt;/p&gt;
    &lt;p&gt;The shutdown of major subduction zones would mean that the Earth’s tectonic plates stop clashing and jostling about. Instead, they would form a near-united rocky shell around the hot mantle. For a time, the mantle would get hotter, since the shell around it would trap heat generated by radioactively decaying compounds inside it. As heat accumulates in the interior, the Earth in Kane’s simulations would experience an uptick in volcanism lasting for about 15 million years.&lt;/p&gt;
    &lt;p&gt;This period, known as a “stagnant lid regime,” adds even more carbon dioxide to the sky. But the eruptive spike is short-lived. The mantle cools down and the crust thickens until it becomes nearly impermeable to any major carbon-erupting volcanism.&lt;/p&gt;
    &lt;p&gt;So 15 million years after its stagnant lid forms, Earth will have reached a new equilibrium. Occasional spurts of volcanism would still happen. (Likewise, scientists have found compelling evidence that Venus is volcanically active today.) But Kane explained that these sporadic eruptions aren’t expected to add much carbon to the atmosphere.&lt;/p&gt;
    &lt;p&gt;At that point, the team’s simulations stop. How Venus-like is their model of the future Earth?&lt;/p&gt;
    &lt;p&gt;USGS&lt;/p&gt;
    &lt;head rend="h2"&gt;There’s No Place Like Venus&lt;/head&gt;
    &lt;p&gt;If or when Earth’s large-scale subduction shuts off in about 3.5 billion years, kneecapping the planet’s ability to bury carbon, Kane and his team’s simulations indicate that the carbon dioxide level in the atmosphere will rise anywhere from 0.1 bars to 0.8 bars. (For reference, the total atmospheric pressure at sea level today is 1 bar, and roughly 0.04% of that, or 0.042 bars, comes from carbon dioxide.) Even in their best-case scenario of a 0.1-bar rise in carbon dioxide, Earth’s surface temperature surpasses 100 degrees Celsius (212 degrees Fahrenheit). The same happens at 0.8 bars, but far more quickly.&lt;/p&gt;
    &lt;p&gt;Either way, the surface of the world becomes literally boiling hot. Earth will “turn into a post-runaway greenhouse state,” Kane said. “The surface temperature will be too hot for any water. It’ll all boil away.” Nothing sitting on the world’s skin would survive.&lt;/p&gt;
    &lt;p&gt;Still, Earth won’t get close to the state that Venus is in today. “It’d be Venus lite,” Kane said.&lt;/p&gt;
    &lt;p&gt;Venus has a 93-bar atmosphere consisting of 96.5% carbon dioxide. Kane and his colleagues’ doomsday machine, no matter how hard they push it, cannot take Earth to those levels. “I was surprised by that,” he said. Because the mantle is sealed off by a stagnant lid, volcanism drops, protecting Earth from a Venus-style roasting better than he thought.&lt;/p&gt;
    &lt;p&gt;Independent scientists have praised the Reuniting Twins project for challenging prior assumptions and adding significantly to the discussion about the terminal state of rocky planets.&lt;/p&gt;
    &lt;p&gt;“I like their idea,” Way said, adding that the team’s version of a future Earth “doesn’t sound unreasonable.”&lt;/p&gt;
    &lt;p&gt;“You end up with a world that’s stinkingly hot,” said Byrne, the Washington University planetary scientist. But, he said, the possibility that it may not be Venusian levels of hot is intriguing.&lt;/p&gt;
    &lt;p&gt;Kane’s team acknowledged that their model hasn’t considered LIP-style mega-eruptions, and that these events could feasibly add a bounty of trapped carbon to the atmosphere at any point in the future. Maybe Earth gets unlucky and experiences multiple, simultaneous LIP events (though this grows less likely over time, Kane said, as the mantle cools and its churning slows). If so, that scenario could push Earth to be more like Venus than the team’s model suggests.&lt;/p&gt;
    &lt;p&gt;Uncertainties abound. But if Kane’s team is even broadly correct, it suggests that Venus has a uniquely grim history. Something — perhaps an inundation of lava — burned that planet to the bone. Earth, meanwhile, has so far been unable to bring about its own destruction. Let’s hope that remains the case long into the future.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.quantamagazine.org/why-is-venus-hell-and-earth-an-eden-20250915/"/><published>2025-09-21T22:56:31+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45327478</id><title>Biconnected components</title><updated>2025-09-22T10:41:44.434912+00:00</updated><content>&lt;doc fingerprint="7f2d86d422351d9d"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Biconnected Components&lt;/head&gt;
    &lt;p&gt;There are many articles online about graphs and (1-)connected components, but not many about biconnected components (BCCs), even though these are way more interesting and can be used to solve many problems! Especially in competitive programming it is vital to know about this concept.&lt;/p&gt;
    &lt;p&gt;I will outline what biconnected components are, how they work similar to/different from connected components, and how to find them algorithmically (with C++ code included). Presumed knowledge is knowing what a graph is. Sections:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Biconnectedness in a Problem (introduces runing example)&lt;/item&gt;
      &lt;item&gt;Edge-Biconnected Components&lt;/item&gt;
      &lt;item&gt;Tarjan's Algorithm&lt;/item&gt;
      &lt;item&gt;C++ Implementation&lt;/item&gt;
      &lt;item&gt;Bonus 1: Edge-Disjoint Paths&lt;/item&gt;
      &lt;item&gt;Bonus 2: Vertex-Biconnected Components&lt;/item&gt;
      &lt;item&gt;Appendix: List of Relevant Terms&lt;/item&gt;
      &lt;item&gt;Appendix: Proof of Connection Between Edge-Biconnectedness and Bridges&lt;/item&gt;
      &lt;item&gt;Appendix: Proof of Connection Between Bridges and Simple Cycles&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Biconnectedness in a Problem&lt;/head&gt;
    &lt;p&gt;Let's introduce the concept by looking at a problem that BCCs could help solve.&lt;/p&gt;
    &lt;p&gt;Charlotte is a secret agent for Enforcement of Metro Integrity (EMI), and she is tasked with transporting a top-secret package from one of her informants, Alice, to an undercover agent, Bob. Alice and Bob must not meet each other, because that would ruin the safety of the mission, so they must be at different metro stations, and Charlotte can naturally only use the metro network for transport. The matter is further complicated by the fact that Eve, Charlotte's adversary, is trying to sabotage the mission by disabling one unknown metro connection! For the sets of meeting locations \( A \) where Alice can meet and \( B \) where Bob can meet, how many possible pairs \( (a, b) \) are there such that Charlotte can safely transport the package from \( a \) to \( b \) no matter which line Eve disables?&lt;/p&gt;
    &lt;p&gt;Example metro network 1: nodes in the \( A \) set are marked with an A, nodes in the \( B \) set are marked with a B; an example valid pair of locations would be \( (3, 1) \), because no matter which metro line Eve chooses to sabogate, there is still a path from \( 3 \) to \( 1 \).&lt;/p&gt;
    &lt;p&gt;The metro network is a graph \( G \) with \( n \) nodes (metro stations) and \( m \) edges (metro lines). \( A \) and \( B \) are then subsets of the set of nodes \( V(G) \). We are trying to find an algorithm with the best possible running time. We can use the following definition to make the objective a bit more precise:&lt;/p&gt;
    &lt;p&gt;Definition: two nodes \( a, b \) are edge-biconnected if for any edge \( e \), there exists a path from \( a \) to \( b \) that does not go through \( e \).&lt;/p&gt;
    &lt;p&gt;Then in this problem we are trying to count the number of pairs \( (a, b) \) with \( a \in A \) and \( b \in B \) that are edge-biconnected. After all, no matter what edge Eve sabotages, we always still have a path between the two nodes.&lt;/p&gt;
    &lt;p&gt;The most naive algorithm would be to consider each \( a \in A \) and \( b \in B \). We would then go over each edge, remove it, and check if there is still a path from \( a \) to \( b \) using a simple graph traversal. This approach would have a time complexity of \( O(|A| \cdot |B| \cdot m \cdot (n + m)) \), which is very bad.&lt;/p&gt;
    &lt;p&gt;We could try to speed up this approach by precomputing for each edge the connected components (CCs) of the graph without that edge, making the path checking constant time. First we would start with the set of all \( (a, b) \) pairs, and iteratively remove pairs that we find can be blocked off by Eve's sabotage. Then we would iterate over each of the \( m \) edges, and: (1) remove it and compute for each node in which connected component it lies (\( O(m + n) \) time using a simple graph traversal), and (2) for each \( (a, b) \) pair, remove it if they do not both lie in the same connected component (now a constant time operation, so \( O(|A| \cdot |B|) \) overall). This leads to to a complexity of \( O(m \cdot ((n + m) + |A| \cdot |B|)) \), which is definitely an improvement, and we considered how to leverage connected components. Click through the animation below to see how this algorithm would work (the dashed circles indicate connected components with the edge removed). However, the running time is still quite miserable.&lt;/p&gt;
    &lt;p&gt;If Eve sabotages this edge: all nodes can reach all nodes.&lt;/p&gt;
    &lt;p&gt;If Eve sabotages this edge: all nodes can reach all nodes.&lt;/p&gt;
    &lt;p&gt;If Eve sabotages this edge: remove pairs starting with 5 ending with 1/6/7.&lt;/p&gt;
    &lt;p&gt;If Eve sabotages this edge: all nodes can reach all nodes.&lt;/p&gt;
    &lt;p&gt;If Eve sabotages this edge: all nodes can reach all nodes.&lt;/p&gt;
    &lt;p&gt;If Eve sabotages this edge: all nodes can reach all nodes.&lt;/p&gt;
    &lt;p&gt;If Eve sabotages this edge: remove pairs starting with 2/4/5 ending with 6/7, and pairs starting with 6/8 ending with 1/5.&lt;/p&gt;
    &lt;p&gt;If Eve sabotages this edge: all nodes can reach all nodes.&lt;/p&gt;
    &lt;p&gt;If Eve sabotages this edge: all nodes can reach all nodes.&lt;/p&gt;
    &lt;p&gt;If Eve sabotages this edge: all nodes can reach all nodes.&lt;/p&gt;
    &lt;p&gt;The final set of pairs is \( \{ (2, 1), (4, 1), ~~ (5, 5), ~~ (6, 6), (6, 7), (8, 6), (8, 7) \} \).&lt;/p&gt;
    &lt;p&gt;In this example, we are definitely doing a lot of unnecessary work, and you might also notice that the final set of pairs has a specific pattern to it (whitespace to make this a bit more obvious). We can (suggestively) draw the pairs in the graph as follows:&lt;/p&gt;
    &lt;p&gt;Notice that we just have a few clusters of nodes, and within each cluster every possible pair is interconnected (a clustering like this is called a partition of the nodes). Can we prove that we can always find such a clustering/partition? Or could it be that in some graph, there is an edge-biconnected pair \( x, y \), an edge-biconnected pair \( y, z \), but not an edge-biconnected pair \( x, z \)? (Think about counterexamples, or convince yourself this should always hold.)&lt;/p&gt;
    &lt;head rend="h2"&gt;Edge-Biconnected Components&lt;/head&gt;
    &lt;p&gt;Okay, I am kind of giving it away by naming this section like this. But it is a very doable exercise to prove that such a partition is always possible, where within each cluster all the pairs are connected through a pair of edge-disjoint paths, and between two distinct clusters, there are no pairs connected in that way. When thinking about partitions, you should always think about the mathematical concept of an equivalence relation. If edge-biconnectedness were an equivalence relation, we would need to prove the following three properties:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Reflexivity: any node \( u \) is edge-biconnected to itself.&lt;/item&gt;
      &lt;item&gt;Symmetry: if \( u \) is edge-biconnected to \( v \), then \( v \) must be edge-biconnected to \( u \).&lt;/item&gt;
      &lt;item&gt;Transitivity: if \( u \) is edge-biconnected to \( v \) and \( v \) is edge-biconnected to \( w \), then \( u \) must be edge-biconnected to \( w \).&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;It turns out that edge-biconnectedness is in fact an equivalence relation. The proofs for these properties are definitely doable to do for yourself! (Try this! Or look at the proof for the first property and then try the other two yourself. For transitivity, you have to consider that the two assumed paths can be overlapping.) Regardless, I will give the proof here, together with a "proof by picture":&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Reflexivity: let \( u \) be any node. Obviously no matter what edge we remove, we still have a path from \( u \) going to itself, namely the empty path. Therefore, \( u \) is edge-biconnected to \( u \).&lt;/item&gt;
      &lt;item&gt;Symmetry: let \( u \) and \( v \) be any nodes, assume that \( u \) is edge-biconnected to \( v \), and let \( e \) be any edge that we must not use. Because \( u \) was edge-biconnected to \( v \), we can choose \( p \) to be the path from \( u \) to \( v \) that does not use \( e \). Because this path lives in an undirected graph, we can reverse the path to get a path from \( v \) to \( u \) that still does not use \( e \). Therefore, \( v \) is edge-biconnected to \( u \).&lt;/item&gt;
      &lt;item&gt;Transitivity: let \( u \), \( v \) and \( w \) be any nodes, assume that \( u \) is edge-biconnected to \( v \) and that \( v \) is edge-biconnected to \( w \), and let \( e \) be any edge that we must not use. Because \( u \) was edge-biconnected to \( v \), we can choose \( p \) to be the path from \( u \) to \( v \) that does not use \( e \). Because \( v \) was edge-biconnected to \( w \), we can choose \( q \) to be the path from \( v \) to \( w \). If \( p \) and \( q \) do not overlap in any edges, simply concatenate to get a path \( p q \) from \( u \) to \( w \). If they do however overlap at some point, take the subpath \( p' \) of \( p \) from \( u \) to the earliest point where the overlap, take the subpath \( q' \) of \( q \) from that point to \( w \), and concatenate to get a path \( p' q' \) from \( u \) to \( w \) that does not use \( e \) and does not overlap with itself. Therefore in either case, \( v \) is edge-biconnected to \( w \). (See figure.)&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Example for transitivity proof: \( e \) marks the sabotaged edge.&lt;/p&gt;
    &lt;p&gt;Example for transitivity proof: path from \( u \) to \( v \).&lt;/p&gt;
    &lt;p&gt;Example for transitivity proof: path from \( v \) to \( w \).&lt;/p&gt;
    &lt;p&gt;Example for transitivity proof: red marks the first overlapping node of the two paths.&lt;/p&gt;
    &lt;p&gt;Example for transitivity proof: concatenated path from \( u \) to \( w \).&lt;/p&gt;
    &lt;p&gt;This gives us a new algorithm for our problem. First compute the edge-biconnected components for the entire graph. Then within each component count how many \( A \) nodes and how many \( B \) nodes there are. Because within a component each pair of nodes is edge-biconnected, we can simply multiply the A count by the B count and add this value to the result. Between any two different components there are no edge-biconnected pairs, we are not missing any pairs. Now all we need is an algorithm for computing edge-biconnected components!&lt;/p&gt;
    &lt;head rend="h2"&gt;Tarjan's Algorithm&lt;/head&gt;
    &lt;p&gt;As could be seen in the example of our connected-component-based algorithm, there are certain edges that, when removed, will split up the graph into more connected components. These edges are called bridges.&lt;/p&gt;
    &lt;p&gt;Definition: an edge \( \{ u, v \} \) is a bridge if there is no path between \( u \) and \( v \) in \( G - \{ u, v \} \).&lt;/p&gt;
    &lt;p&gt;If we can find the bridges of the graph, then finding the edge-biconnected components will be very easy, because they are simply the connected components of the graph with all bridges removed. This follows from the following lemma.&lt;/p&gt;
    &lt;p&gt;Lemma 1: two nodes are edge-biconnected if and only if they are in the same connected component of the graph with all bridges removed. (See the appendix for the proof, which is safe to skip.)&lt;/p&gt;
    &lt;p&gt;The algorithm for finding bridges was invented by famous computer scientist Robert Tarjan and only uses depth-first search. (Fun fact: Tarjan's brother James is a chess grandmaster.) Let's look at the first observation that makes this algorithm works:&lt;/p&gt;
    &lt;p&gt;Lemma 2: an edge \( e \) is a bridge if and only if there does not exist a simple cycle that goes through \( e \). (See the appendix for the proof, which is safe to skip.)&lt;/p&gt;
    &lt;p&gt;We can check this condition for all edges by performing a DFS and looking at the back-edges of the DFS tree. For instance, this is what a DFS tree looks like for the example if we start at node 1:&lt;/p&gt;
    &lt;p&gt;A possible DFS tree. Filled arrows are tree-edges and dotted arrows are back-edges.&lt;/p&gt;
    &lt;p&gt;We know that back edges are always part of a cycle. Thus, we can make the following two observations about the connection between bridges, by using lemma 2.&lt;/p&gt;
    &lt;p&gt;Observation: a back edge is never a bridge.&lt;/p&gt;
    &lt;p&gt;Observation: a tree edge \( (u, v) \) is a bridge if and only if none of the descendants of \( v \) has a back edge to an ancestor of \( u \).&lt;/p&gt;
    &lt;p&gt;Tarjan's algorithm maintains for every node a \( \mathit{low} \) value, which is the minimum between (1) the DFS entry time of the node itself, (2) the entry times of all back-edge neighbors, and (3) the \( \mathit{low} \) values of the children. Then a tree edge \( (u, v) \) is a bridge if and only if \( low[v] \) is strictly greater than the entry time of \( u \). Essentially, this means that when the algorithm visits a back edge \( (u, v) \), all of the tree edges between \( v \) and \( u \) are marked as not being a bridge as soon as we go back up the DFS tree.&lt;/p&gt;
    &lt;p&gt;Step through the example below. I have made the graph such that the DFS entry time matches the node labels.&lt;/p&gt;
    &lt;p&gt;All nodes start with \( \mathit{low} \) equal to the DFS entry time.&lt;/p&gt;
    &lt;p&gt;Visit tree edge \( (1, 2) \).&lt;/p&gt;
    &lt;p&gt;Visit tree edge \( (2, 3) \).&lt;/p&gt;
    &lt;p&gt;Visit back edge \( (3, 1) \): update \( \mathit{low}[3] := \min(\mathit{low}[3], 1) \). All tree edges shown in red thus cannot be bridges.&lt;/p&gt;
    &lt;p&gt;Visit tree edge \( (3, 4) \).&lt;/p&gt;
    &lt;p&gt;Visit back edge \( (4, 1) \): update \( \mathit{low}[4] := \min(\mathit{low}[4], 1) \). All tree edges shown in red thus cannot be bridges.&lt;/p&gt;
    &lt;p&gt;Visit tree edge \( (4, 5) \).&lt;/p&gt;
    &lt;p&gt;Node 5 has no children, so \( \mathit{low}[5] = 5 \). Since \( \mathit{low}[5] &amp;gt; 4 \), the edge is a bridge.&lt;/p&gt;
    &lt;p&gt;Visit tree edge \( (4, 6) \).&lt;/p&gt;
    &lt;p&gt;Visit tree edge \( (6, 7) \).&lt;/p&gt;
    &lt;p&gt;Visit tree edge \( (7, 8) \).&lt;/p&gt;
    &lt;p&gt;Visit back edge \( (8, 6) \): update \( \mathit{low}[8] := \min(\mathit{low}[8], 6) \). All tree edges shown in red thus cannot be bridges.&lt;/p&gt;
    &lt;p&gt;So \( \mathit{low}[8] = 6 \).&lt;/p&gt;
    &lt;p&gt;Update \( \mathit{low}[7] := \min(\mathit{low}[7], \mathit{low}[8]) \).&lt;/p&gt;
    &lt;p&gt;Update \( \mathit{low}[6] := \min(\mathit{low}[6], \mathit{low}[7]) \). Since \( \mathit{low}[6] &amp;gt; 4 \), the edge is a bridge.&lt;/p&gt;
    &lt;p&gt;Update \( \mathit{low}[4] := \min(\mathit{low}[4], \mathit{low}[6]) \).&lt;/p&gt;
    &lt;p&gt;Update \( \mathit{low}[3] := \min(\mathit{low}[3], \mathit{low}[4]) \).&lt;/p&gt;
    &lt;p&gt;Update \( \mathit{low}[2] := \min(\mathit{low}[2], \mathit{low}[3]) \).&lt;/p&gt;
    &lt;p&gt;Update \( \mathit{low}[1] := \min(\mathit{low}[1], \mathit{low}[2]) \).&lt;/p&gt;
    &lt;p&gt;As you can see, the algorithm finds the bridges, and even appears to identify edge-biconnected components. It can be modified to find the edge-biconnected components and even articulation points (which is a concept related to vertex-biconnectedness) in a single pass, but understanding and proving why this works is quite difficult.&lt;/p&gt;
    &lt;p&gt;Since the algorithm only performs a DFS and maintains some integers associated with the nodes, it has a time complexity of \( O(|V| + |E|) \) and a space complexity of \( O(|V|) \) (assuming the graph space usage itself is not counted).&lt;/p&gt;
    &lt;head rend="h2"&gt;C++ Implementation&lt;/head&gt;
    &lt;p&gt;Now we can solve the original metro problem. The full code is available on this website. I also have code that computes the edge-biconnected components without the metro stuff and that also works for non-simple graphs (with self loops or multi-edges), which I tested on judge.yosupo.jp. All code is licensed under GPL3 (see the COPYING file).&lt;/p&gt;
    &lt;p&gt; First we set up the graph data structure and implement the bridge-finding algorithm. The nodes keep track of the \( \mathit{low} \) value and whether they are in the A and/or B set. Tarjan's algorithm performs a standard DFS and computes the \( \mathit{low} \) value for each node, and puts an edge in the &lt;code&gt;bridges&lt;/code&gt; set if it meets
                the condition given in the previous section.
            &lt;/p&gt;
    &lt;code&gt;
// Copyright 2025 emilia-h
#include &amp;lt;iostream&amp;gt;
#include &amp;lt;set&amp;gt;
#include &amp;lt;utility&amp;gt;
#include &amp;lt;vector&amp;gt;

struct Node {
    std::vector&amp;lt;int&amp;gt; adj;
    bool visited = false;
    int dfsEntryTime = -1;
    int low = -1;
    bool isA = false, isB = false;
};

void dfs(
    std::vector&amp;lt;Node&amp;gt;&amp;amp; graph,
    int i, int parent,
    int&amp;amp; time, std::set&amp;lt;std::pair&amp;lt;int, int&amp;gt;&amp;gt;&amp;amp; bridges
) {
    graph[i].dfsEntryTime = time++;

    int low = graph[i].dfsEntryTime;
    for (int j : graph[i].adj) {
        if (j == parent) { // edge back to parent
            continue;
        } else if (graph[j].visited) { // back edge
            low = std::min(low, graph[j].dfsEntryTime);
        } else { // tree edge
            graph[j].visited = true;
            dfs(graph, j, i, time, bridges);
            low = std::min(low, graph[j].low);

            if (graph[j].low &amp;gt; graph[i].dfsEntryTime) {
                bridges.insert({i, j});
                bridges.insert({j, i});
            }
        }
    }
    graph[i].low = low;
}

std::set&amp;lt;std::pair&amp;lt;int, int&amp;gt;&amp;gt; getBridges(std::vector&amp;lt;Node&amp;gt;&amp;amp; graph) {
    std::set&amp;lt;std::pair&amp;lt;int, int&amp;gt;&amp;gt; bridges;
    int time = 0;
    for (int i = 0; i &amp;lt; graph.size(); i++) {
        if (graph[i].visited) continue;
        graph[i].visited = true;
        dfs(graph, i, -1, time, bridges);
    }
    return bridges;
}
&lt;/code&gt;
    &lt;p&gt;Then we have another DFS procedure which, given a node \( i \), computes the number of A nodes and B nodes within the edge-biconnected component that it lies in. It does this by never passing through bridges, meaning it will not go to another edge-biconnected component.&lt;/p&gt;
    &lt;code&gt;
std::pair&amp;lt;int, int&amp;gt; countAB(
    std::vector&amp;lt;Node&amp;gt;&amp;amp; graph,
    int i,
    const std::set&amp;lt;std::pair&amp;lt;int, int&amp;gt;&amp;gt;&amp;amp; bridges
) {
    if (graph[i].visited) return {0, 0};
    graph[i].visited = true;
    std::pair&amp;lt;int, int&amp;gt; result {0, 0};
    if (graph[i].isA) result.first++;
    if (graph[i].isB) result.second++;
    for (int j : graph[i].adj) {
        // don't traverse bridges (act like they are removed from the graph)
        if (bridges.count({i, j})) continue;
        auto abCount = countAB(graph, j, bridges);
        result.first += abCount.first;
        result.second += abCount.second;
    }
    return result;
}
&lt;/code&gt;
    &lt;p&gt;Finally, we have some code that reads the graph and the set of A and B nodes. It runs the two DFS passes above for the whole graph. For each edge-biconnected component, it adds the product of the number of A nodes and B nodes, because that is how many \( (a, b ) \) pairs you can find within an edge-biconnected component that Eve cannot sabotage.&lt;/p&gt;
    &lt;code&gt;
int main() {
    int n, m, a, b;
    std::cin &amp;gt;&amp;gt; n &amp;gt;&amp;gt; m &amp;gt;&amp;gt; a &amp;gt;&amp;gt; b;

    std::vector&amp;lt;Node&amp;gt; graph(n);
    for (int i = 0; i &amp;lt; m; i++) {
        int v, w;
        std::cin &amp;gt;&amp;gt; v &amp;gt;&amp;gt; w;
        graph[v - 1].adj.push_back(w - 1);
        graph[w - 1].adj.push_back(v - 1);
    }
    for (int i = 0; i &amp;lt; a; i++) {
        int v;
        std::cin &amp;gt;&amp;gt; v;
        graph[v - 1].isA = true;
    }
    for (int i = 0; i &amp;lt; b; i++) {
        int v;
        std::cin &amp;gt;&amp;gt; v;
        graph[v - 1].isB = true;
    }

    auto bridges = getBridges(graph);

    for (auto&amp;amp; node : graph) node.visited = false;

    // go over each edge-biconnected component and count A and B nodes
    int result = 0;
    for (int i = 0; i &amp;lt; n; i++) {
        if (graph[i].visited) continue;
        auto abCount = countAB(graph, i, bridges);
        result += abCount.first * abCount.second;
    }
    std::cout &amp;lt;&amp;lt; result &amp;lt;&amp;lt; "\n";

    return 0;
}
&lt;/code&gt;
    &lt;p&gt;The input format is as follows. The first line is \( n, m, a, b \), which are the number of nodes, the number of edges, the number of A nodes, and the number of B nodes respectively. Then follow \( m \) lines of pairs \( v~w \), which are the edges. It is assumed that the graph is simple. Then follow \( a \) lines of integers, which are the A nodes, and then \( b \) lines of integers, which are the B nodes. All nodes in the input are 1-based. There is an example input available that encodes the graph we've been using as an example, for which the code gives the correct answer 7.&lt;/p&gt;
    &lt;head rend="h2"&gt;Bonus 1: Edge-Disjoint Paths&lt;/head&gt;
    &lt;p&gt;Another way to state the edge-biconnectedness property is that there exist two edge-disjoint paths from \( a \) to \( b \), i.e., paths that do not have any of the same edges. For instance, in the example there are two edge-disjoint paths from node 2 to 1: one that goes from 2 directly to 1, and one that goes from 2 through 3 to 1. However, there are no two edge-disjoint paths from node 5 to 7: any path must go through the same edge \( \{ 4, 6 \} \), so we cannot choose two paths to be fully edge-disjoint. The proof that this is a property that holds if and only if the nodes are edge-biconnected is not trivial. You can see the picture for an example that we have two edge-disjoint paths for each edge-biconnected pair, but not for any other pairs:&lt;/p&gt;
    &lt;p&gt;Pair: \( (2, 1) \)&lt;/p&gt;
    &lt;p&gt;Pair: \( (4, 1) \)&lt;/p&gt;
    &lt;p&gt;Pair: \( (5, 5) \)&lt;/p&gt;
    &lt;p&gt;Pair: \( (6, 6) \)&lt;/p&gt;
    &lt;p&gt;Pair: \( (6, 7) \)&lt;/p&gt;
    &lt;p&gt;Pair: \( (8, 6) \)&lt;/p&gt;
    &lt;p&gt;Pair: \( (8, 7) \)&lt;/p&gt;
    &lt;p&gt;Also note that in an undirected graph, we can see two edge-disjoint paths from \( a \) to \( b \) as an edge walk that goes from \( a \) to \( b \) and then back to \( a \) again, without repeating any edges. This is kind of like a cycle going through \( a \) and \( b \), except we may go over the same node several times.&lt;/p&gt;
    &lt;head rend="h2"&gt;Bonus 2: Vertex-Biconnected Components&lt;/head&gt;
    &lt;p&gt;We can repeat the problem that we stated before but change one thing: what if after you pick a station for Alice and one for Bob, Eve sabotages a metro station instead of a metro line? (She would not be able to sabotage the metro station that Alice or Bob was in.) Do we still have an equivalence relation on the nodes like with edge-biconnectedness? I will not discuss it in this article, but consider the following example and think about if the transitivity property holds for vertex-biconnectedness:&lt;/p&gt;
    &lt;p&gt;I will also leave you with a hint: a node can be part of multiple vertex-biconnected components. Consider instead an equivalence relation on the edges (it's a cute little symmetry that edge-biconnectedness gives an equivalence relation on the vertices, and vertex-biconnectedness gives an equivalence relation on the edges).&lt;/p&gt;
    &lt;head rend="h2"&gt;Appendix: List of Relevant Terms&lt;/head&gt;
    &lt;p&gt;Here is a list of terms used in the theory for edge-biconnectedness and vertex-biconnectedness:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Edge-biconnectedness (for pairs of nodes): a node \( u \) is edge-biconnected to a node \( v \) if for any edge \( e \), we can find a path from \( u \) to \( v \) that does not go through \( e \).&lt;/item&gt;
      &lt;item&gt;Edge-biconnectedness (for whole undirected graphs): a graph is edge-biconnected if the graph is connected even if any one edge is removed.&lt;/item&gt;
      &lt;item&gt;Edge-biconnected components: a subset of nodes forms an edge-biconnected component if each pair of nodes within it is edge-biconnected, and it cannot have any additional nodes added to it and still have this property. (The edge-biconnected components of any graph are the equivalence classes of the edge-biconnectedness equivalence relation.)&lt;/item&gt;
      &lt;item&gt;Bridge: an edge is a bridge if, when removed, the number of connected components is increased (in the example graph there are two such edges, which you can see by stepping through the second figure).&lt;/item&gt;
      &lt;item&gt;Vertex-biconnectedness (for pairs of nodes): a node \( u \) is vertex-biconnected to a node \( v \) if there exist two vertex-disjoint paths from \( u \) to \( v \), or \( u = v \). (Note that this is not an equivalence relation.)&lt;/item&gt;
      &lt;item&gt;Vertex-biconnectedness (for whole undirected graphs): a graph is vertex-biconnected if the graph is connected even if any one node is removed.&lt;/item&gt;
      &lt;item&gt;Vertex-biconnected component: a subset of nodes forms a vertex-biconnected component if each pair of nodes within it is vertex-biconnected, and it cannot have any additional nodes added to it and still have this property. (Note that the vertex-biconnected components of a graph are not necessarily a partition of the nodes.)&lt;/item&gt;
      &lt;item&gt;Articulation point: a node is an articulation point if it is part of more than one vertex-biconnected component.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Appendix: Proof of Connection Between Edge-Biconnectedness and Bridges&lt;/head&gt;
    &lt;p&gt;Lemma 1: for any undirected graph \( G \), for any two nodes \( u, v \in V(G) \), \( u \) and \( v \) are edge-biconnected if and only if \( u \) and \( v \) are in the same connected component of \( G \) with all bridges removed.&lt;/p&gt;
    &lt;p&gt;Proof. For convenience, define \( G' \) to be \( G \) with all bridges removed.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;\( (\Rightarrow) \) Assume \( u \) and \( v \) are edge-biconnected. For a contradiction, suppose \( u \) and \( v \) are not in the same connected component of \( G' \), i.e., all paths from \( u \) to \( v \) go through some bridge in \( G \). Since edge-biconnectedness implies connectedness, there must exist at least one path \( p \) between them in \( G \), and choose \( e \) to be a bridge that this path goes through. From edge-biconnectedness, we can instead choose a path \( q \) that does not go through \( e \). Choose \( C \) to be the first connected component of \( G' \) that \( q \) passes through and that \( p \) also goes through, and that is not just the connected component that \( u \) lies in (we know such a connected component must exist, because \( p \) and \( q \) at least meet in the component of \( v \) in \( G' \), and that component is separate from the component of \( u \) because we passed through the bridge \( e \)). We can join up these paths \( p \) and \( q \) in that connected component through edges that are not bridges. Now we have a cycle passing through a bridge, which is a contradiction because it implies that both endpoints of the bridge are in the same connected component even if \( e \) was removed (see also lemma 2).&lt;/item&gt;
      &lt;item&gt;\( (\Leftarrow) \) Assume \( u \) and \( v \) are in the same connected component of \( G' \). To prove their edge-biconnectedness, let \( e \) be any edge. If \( e \) is a bridge or lies outside of the connected component of \( u \) and \( v \), then trivially there exists a path from \( u \) to \( v \) that does not use \( e \). Otherwise, \( e \) must not be a bridge and that means that removing it from \( G \) does not change what vertices are connected to each other, i.e., \( u \) and \( v \) would still lie in the same connected component in \( G - e \). This means there exists a path from \( u \) to \( v \) in \( G - e \) and thus there exists a path in \( G \) that does not use \( e \) going from \( u \) to \( v \). Either way, we have a path from \( u \) to \( v \), proving that \( u \) is edge-biconnected to \( v \).&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Appendix: Proof of Connection Between Bridges and Simple Cycles&lt;/head&gt;
    &lt;p&gt;Lemma 2: an edge \( \{ u, v \} \) is a bridge if and only if all simple cycles do not go through \( \{ u, v \} \).&lt;/p&gt;
    &lt;p&gt;Proof. For convenience, define \( G' := G - \{ u, v \} \) to be the graph with the edge removed.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;\( (\Rightarrow) \) Let \( \{ u, v \} \) be a bridge and let \( c \) be a simple cycle in \( G \), and assume for a contradiction that \( c \) goes through \( \{ u, v \} \). Then we can remove the edge \( \{ u, v \} \) from the cycle and still have a path between \( u \) and \( v \) in \( G' \). This directly contradicts the assumption that \( \{ u, v \} \) was a bridge.&lt;/item&gt;
      &lt;item&gt;\( (\Leftarrow) \) Let \( \{ u, v \} \) be an edge through which all simple cycles do not pass. For a contradiction, suppose that \( \{ u, v \} \) was not a bridge and thus \( u \) and \( v \) are still connected in \( G' \) and thus there exists a path \( \{ v, v_1 \}, ..., \{ v_n, u \} \) in \( G' \). Since \( \{ u, v \} \) is an edge in \( G \), we can connect the two ends of the path and get a simple cycle in \( G \) that passes through \( \{ u, v \} \). This contradicts the assumption.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Copyright emilia-h 2025 licensed under CC BY-SA 4.0&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://emi-h.com/articles/bcc.html"/><published>2025-09-21T23:06:42+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45327964</id><title>We Politely Insist: Your LLM Must Learn the Persian Art of Taarof</title><updated>2025-09-22T10:41:44.209066+00:00</updated><content>&lt;doc fingerprint="c89c3c0289f1848f"&gt;
  &lt;main&gt;&lt;head rend="h1"&gt;Computer Science &amp;gt; Computation and Language&lt;/head&gt;&lt;p&gt; [Submitted on 1 Sep 2025]&lt;/p&gt;&lt;head rend="h1"&gt;Title:We Politely Insist: Your LLM Must Learn the Persian Art of Taarof&lt;/head&gt;View PDF HTML (experimental)&lt;quote&gt;Abstract:Large language models (LLMs) struggle to navigate culturally specific communication norms, limiting their effectiveness in global contexts. We focus on Persian taarof, a social norm in Iranian interactions, which is a sophisticated system of ritual politeness that emphasizes deference, modesty, and indirectness, yet remains absent from existing cultural benchmarks. We introduce TaarofBench, the first benchmark for evaluating LLM understanding of taarof, comprising 450 role-play scenarios covering 12 common social interaction topics, validated by native speakers. Our evaluation of five frontier LLMs reveals substantial gaps in cultural competence, with accuracy rates 40-48% below native speakers when taarof is culturally appropriate. Performance varies between interaction topics, improves with Persian-language prompts, and exhibits gender-based asymmetries. We also show that responses rated "polite" by standard metrics often violate taarof norms, indicating the limitations of Western politeness frameworks. Through supervised fine-tuning and Direct Preference Optimization, we achieve 21.8% and 42.3% improvement in model alignment with cultural expectations. Our human study with 33 participants (11 native Persian, 11 heritage, and 11 non-Iranian speakers) forms baselines in varying degrees of familiarity with Persian norms. This work lays the foundation for developing diverse and culturally aware LLMs, enabling applications that better navigate complex social interactions.&lt;/quote&gt;&lt;head rend="h3"&gt;References &amp;amp; Citations&lt;/head&gt;&lt;p&gt; export BibTeX citation Loading... &lt;/p&gt;&lt;head rend="h1"&gt;Bibliographic and Citation Tools&lt;/head&gt;&lt;p&gt; Bibliographic Explorer (What is the Explorer?) &lt;/p&gt;&lt;p&gt; Connected Papers (What is Connected Papers?) &lt;/p&gt;&lt;p&gt; Litmaps (What is Litmaps?) &lt;/p&gt;&lt;p&gt; scite Smart Citations (What are Smart Citations?) &lt;/p&gt;&lt;head rend="h1"&gt;Code, Data and Media Associated with this Article&lt;/head&gt;&lt;p&gt; alphaXiv (What is alphaXiv?) &lt;/p&gt;&lt;p&gt; CatalyzeX Code Finder for Papers (What is CatalyzeX?) &lt;/p&gt;&lt;p&gt; DagsHub (What is DagsHub?) &lt;/p&gt;&lt;p&gt; Gotit.pub (What is GotitPub?) &lt;/p&gt;&lt;p&gt; Hugging Face (What is Huggingface?) &lt;/p&gt;&lt;p&gt; Papers with Code (What is Papers with Code?) &lt;/p&gt;&lt;p&gt; ScienceCast (What is ScienceCast?) &lt;/p&gt;&lt;head rend="h1"&gt;Demos&lt;/head&gt;&lt;head rend="h1"&gt;Recommenders and Search Tools&lt;/head&gt;&lt;p&gt; Influence Flower (What are Influence Flowers?) &lt;/p&gt;&lt;p&gt; CORE Recommender (What is CORE?) &lt;/p&gt;&lt;head rend="h1"&gt;arXivLabs: experimental projects with community collaborators&lt;/head&gt;&lt;p&gt;arXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.&lt;/p&gt;&lt;p&gt;Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.&lt;/p&gt;&lt;p&gt;Have an idea for a project that will add value for arXiv's community? Learn more about arXivLabs.&lt;/p&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://arxiv.org/abs/2509.01035"/><published>2025-09-22T00:31:06+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45328247</id><title>How I, a beginner developer, read the tutorial you, a developer, wrote for me</title><updated>2025-09-22T10:41:43.656643+00:00</updated><content>&lt;doc fingerprint="96781013d7103f19"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;How I, a non-developer, read the tutorial you, a developer, wrote for me, a beginner&lt;/head&gt;
    &lt;p&gt;“Hello! I am a developer. Here is my relevant experience: I code in Hoobijag and sometimes jabbernocks and of course ABCDE++++ (but never ABCDE+/^+ are you kidding? ha!) and I like working with Shoobababoo and occasionally kleptomitrons. I’ve gotten to work for Company1 doing Shoobaboo-ing code things and that’s what led me to the Snarfus. So, let’s dive in!&lt;/p&gt;
    &lt;p&gt;About this tutorial&lt;/p&gt;
    &lt;p&gt;I first started doing Very Simple Thing2 with Snarfus, but the more I used it the more I saw the potential! Despite the jaggle of the chromus, it’s really multi-purpose. And that’s what led me to argyling the pintafore with the quagmire instead of the hoobastank! I know, crazy. But it was kind of working, and actually a lot of fun… Until I hit a big roadblock: the fisterfunk will NOT talk to the shamrock portal or even send beep-boops back to the Snarfus! Of course, you know what that means3 — Now the entire hoob-tunnel is clogged with gramelions. Unacceptable.&lt;/p&gt;
    &lt;p&gt;I almost gave up but then I realized: If I connect the backside Snarfus stagnator to the backside shamrock Klingon troglodyte emulater, it’s good! Everything beep-boops and ding-dongs and I get the Actual Topic of the Tutorial, which lets me do the Very Simple Thing the way I want after all! Pretty cool4.&lt;/p&gt;
    &lt;p&gt;So here’s how to set it up:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;In the terminal, ajkl;gawgor;iqeg;iJLkqen. wl;R aw;oeiga 4648664 arjarwgj;llj;ja fadgfgajkljl; wlj;sdjk;lfas&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Next go to folder/hidden/deep/in/the/file/system/surprise!.file and copy the contents of the file. If it’s not there, it might be in library/library/library/llibrary/liiiiiibrarrrary/llllliiiiibrary/hidden/hidden/hiding/you can’t find me/hidden/nope/never/hahahahereiam.file.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Now go back to the terminal and paste in the file contents, then type in 64A786AGR45JAR; rdja;jg [[]][[]][[]][[]]][[]()()()()()()()()(){{}{}{}|{}{|}{}{|}{ ////////////////!! !!!! !! //// !!! agjlkargji;lwej;OI [ASRGASG[]ASGDASG[]EAEadgasg[]EAGE[edaga][]ahgr-0-0=-0-=0-=0=0-0=-0-=0=-0-=0=-0=-0!!!&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Boop!5&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Open Snarfus and upload the file you just made.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Just for shits and giggles, you can de-sham the chronostatiomatrix by running —()()(]]asdg a=-do —cd go cd stay —sususudododo baby shark—][] but that’s optional.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;That’s it!&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Let me know how it goes for you. I’d love to hear if anybody uses this approach with GewGawGamma or ometer2.7.”&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;I probably should recognize Company because it seems illustrious but I do not recognize Company or know what they do. ↵&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;It is not simple. ↵&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;I do not know what that means. ↵&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;It is cool. I don’t really understand how, but I believe it. I’m glad you know how to do it. ↵&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;The first 3 steps will take me approximately 7 hours and 193 internet searches to complete. When I finally get to Boop! it will be really satisfying.&lt;/p&gt;
        &lt;p&gt;This is meant in good fun. I really appreciate the folks who take time to share their knowledge and write up tutorials and give tips and so on. ↵&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://anniemueller.com/posts/how-i-a-non-developer-read-the-tutorial-you-a-developer-wrote-for-me-a-beginner"/><published>2025-09-22T01:27:34+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45328537</id><title>DSM Disorders Disappear in Statistical Clustering of Psychiatric Symptoms (2024)</title><updated>2025-09-22T10:41:43.241006+00:00</updated><content>&lt;doc fingerprint="9602139429a56df3"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;DSM Disorders Disappear in Statistical Clustering of Psychiatric Symptoms&lt;/head&gt;
    &lt;head rend="h3"&gt;Whither Major Depression?&lt;/head&gt;
    &lt;p&gt;“Reconstructing Psychopathology: A data-driven reorganization of the symptoms in DSM-5” by Miri Forbes, et al. (was available as a preprint at the time of writing this post, later published in Clinical Psychological Science) is a brilliantly designed and innovative study of the quantitative structure of psychopathology with important ramifications for our understanding of psychiatric classification. No one has conducted a study quite like this before, and the results are remarkable. It takes place in the context of the development of Hierarchical Taxonomy of Psychopathology (HiTOP) which is a dimensional, hierarchical, and quantitative approach to the classification of mental disorders, and relies on identification of patterns of covariation among symptoms.&lt;/p&gt;
    &lt;p&gt;The study is based on a large online survey, with participants recruited from a variety of sources, resulting in a socio-demographically diverse sample size of 14.8K participants. Participants could opt to complete a mini, short, medium, or long version of the questionnaire. The survey consisted of items based on individual symptoms derived from DSM-5. Symptoms were written in first person and past tense, as close to the DSM phrasing as possible but devoid of information about symptom onset, duration, frequency, and severity. Importantly, survey items were presented to participants in a random order. This randomness is important because in prior studies questions about symptoms were not asked or presented in a random manner. They have been asked using symptom questionnaires that cluster symptoms together in ways influenced by the diagnostic manuals or using a structured clinical interview that adopts the DSM organization. Asking about symptoms in a random order ensures that their co-occurrence is not artificially influenced by the order in which questions are asked. The survey went through multiple rounds of pilot testing, and in the end, 680 items were included. Participants reported how true each symptom statement was for them in the past 12 months on a five-point scale from Not at all true (Never) to Perfectly true (Always). Participants were told to think about their experiences across a wide variety of contexts.&lt;/p&gt;
    &lt;p&gt;The responses were subjected to two statistical clustering methods: iclust and Ward’s hierarchical agglomerative clustering. Clusters were accepted for further analysis when both methods agreed. This was intended to ensure that there were no idiosyncrasies arising from reliance on one method. This resulted in 139 clusters (“syndromes”) and 81 solo symptoms. Higher-order constructs were identified using hierarchical principal components analysis and hierarchical clustering. The sample was divided into a primary sample (11.8K) and a hold-out sample (3K) to examine the robustness of results. The final classification was based on points of agreement between samples and methods.&lt;/p&gt;
    &lt;p&gt;The final high order structure included 8 spectra: Externalizing, Harmful Substance Use, Mania/Low Detachment, Thought Disorder, Somatoform, Eating Pathology, Internalizing, and Neurodevelopmental and Cognitive Difficulties. 27 subfactors were identified. As an example, within the internalizing spectrum, the 4 subfactors were: Distress, Social Withdrawal, Dysregulated Sleep and Trauma, and Fear. Similar to earlier literature, a single overarching dimension also emerged. This has been described before as the “p-factor” (general psychopathology factor), but Forbes et al. chose to call it the “Big Everything” to avoid reifying it.&lt;/p&gt;
    &lt;p&gt;So here it is, an empirically derived hierarchical clustering of individual symptoms across the range of psychopathology:&lt;/p&gt;
    &lt;p&gt;The end result has a prominent convergence with the existing HiTOP model, with some points of divergence that would be important for future revisions of HiTOP.&lt;/p&gt;
    &lt;head rend="h4"&gt;An important thing to note is that many classic DSM disorders do not emerge as identifiable syndromes in these analyses. &lt;/head&gt;
    &lt;p&gt;Due to the symptom heterogeneity of DSM constructs, they are either broken down into smaller homogenous syndromes or they merge into higher-order clusters such as subfactors and spectra. (And this is the case not just in this particular study, but has been the case in prior analyses on which the HiTOP model is based—even though those exploratory symptom-level analyses had been conducted using measures based on DSM/ICD.)&lt;/p&gt;
    &lt;p&gt;There is much to discuss in this paper, but for illustrative purposes, I’ll focus on the case of depression and some other internalizing disorders.&lt;/p&gt;
    &lt;p&gt;“Major depressive disorder” (MDD) is one of the most common and recognizable disorders in psychiatry. Hundreds of thousands of people are diagnosed with MDD every day. Every medical student is taught the SIGECAPS symptoms that constitute the diagnostic criteria of depression, and across many clinics, people fill out the PHQ-9 screening questionnaire based on those symptoms. Generalized Anxiety Disorder (GAD) and Post-Traumatic Stress Disorder (PTSD) are similarly common diagnoses.&lt;/p&gt;
    &lt;p&gt;What does it mean that MDD, GAD, and PTSD do not show up as coherent and distinctive symptom clusters in statistical analysis?&lt;/p&gt;
    &lt;p&gt;This is the internalizing spectrum as it appears in Forbes et al. 2023:&lt;/p&gt;
    &lt;p&gt;Here is the depressed mood and anhedonia cluster:&lt;/p&gt;
    &lt;p&gt;Here are the self-derogation, suicidality, and guilt/shame proneness clusters:&lt;/p&gt;
    &lt;p&gt;There is something statistically distinctive about the clusters labeled as ‘depressed mood and anhedonia,’ ‘self-derogation,’ ‘suicidality,’ ‘guilt/shame proneness,’ ‘morning depression,’ ‘emotional lability,’ etc., but there is nothing statistically distinctive about the combination of 9 symptoms that we recognize as diagnostic criteria for depression:&lt;/p&gt;
    &lt;head rend="h4"&gt;So, what is going on here?&lt;/head&gt;
    &lt;p&gt;Obviously, people present with symptoms associated with major depression, and they report these symptoms if they are asked about them. That isn’t in doubt. What is in doubt is whether there is anything statistically special about this symptom combination.&lt;/p&gt;
    &lt;p&gt;All syndromes in the ‘Distress’ subfactor are correlated with each other, so people would present with various combinations of the syndromes, with some inclusion of symptoms/syndromes from other subfactors and spectra (since they are all correlated at a higher level).&lt;/p&gt;
    &lt;p&gt;Ms. Jones may experience:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;Depressed mood and anhedonia&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Morning depression&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Self-derogation&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Suicidality&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Guilt/Shame&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Early sleep and awakening&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Mr. Jamal may experience:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;Depressed mood and anhedonia&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Irritability&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Emotional lability&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Psychomotor agitation&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Insomnia&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Anxiousness&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Ms. Freeman may experience:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;Depressed mood and anhedonia&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;General cognitive difficulties&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Distractibility&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Psychomotor impairment&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Suspiciousness&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Psychological panic&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Guilt/Shame&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;All three meet MDD symptom criteria, but they all show varying combinations of more fundamental (statistically homogenous) syndromic clusters.&lt;/p&gt;
    &lt;p&gt;MDD indexes a varying and heterogenous subset of symptoms/syndromes, and what is common about these varying subsets is that depressed mood and/or anhedonia are prominent aspects of the presentation. In a similar manner, GAD indexes a varying and heterogenous subset of symptoms/syndromes, and what is common about these varying subsets is that pervasive anxiety is a prominent aspect of the presentation. And PTSD indexes a varying and heterogenous subset of symptoms/syndromes, and what is common about these varying subsets is that traumatic intrusions and avoidance are prominent aspects of the presentation. The subsets that constitute MDD, GAD, and PTSD all overlap, which is why these heterogenous categories dissolve when statistical homogeneity is sought. (This is also one reason why the reliability for MDD and GAD was so low in DSM-5 field trials.)&lt;/p&gt;
    &lt;p&gt;You can see in the figure below how MDD dissolves into homogenous elements that map onto ‘Distress,’ ‘Neurocognitive Impairment,’ ‘Dysregulated Sleep,’ and ‘Dysregulated Eating.’&lt;/p&gt;
    &lt;p&gt;Ken Kendler notes in his historical review of depression symptoms and the DSM:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;“… the author examines how well DSM-5 symptomatic criteria for major depression capture the descriptions of clinical depression in the post-Kraepelin Western psychiatric tradition as described in textbooks published between 1900 and 1960. Eighteen symptoms and signs of depression were described, 10 of which are covered by the DSM criteria for major depression or melancholia. For two symptoms (mood and cognitive content), DSM criteria are considerably narrower than those described in the textbooks. Five symptoms and signs (changes in volition/motivation, slowing of speech, anxiety, other physical symptoms, and depersonalization/derealization) are not present in the DSM criteria. Compared with the DSM criteria, these authors gave greater emphasis to cognitive, physical, and psychomotor changes, and less to neurovegetative symptoms. These results suggest that important features of major depression are not captured by DSM criteria. This is unproblematic as long as DSM criteria are understood to index rather than constitute psychiatric disorders. However, since DSM-III, our field has moved toward a reification of DSM that implicitly assumes that psychiatric disorders are actually just the DSM criteria. That is, we have taken an index of something for the thing itself.”&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;DSM criteria for MDD are an index, but what is the thing itself? If Forbes et al. are correct, the thing itself isn’t a fixed, stable entity but consists of variable and heterogenous subsets of internalizing and neurocognitive symptoms. And each time we use MDD as an index, we index something different. (Different from but overlapping with other instances.)&lt;/p&gt;
    &lt;p&gt;DSM criteria for MDD are an index, but what is the thing itself? If Forbes et al. are correct, the thing itself isn’t a fixed, stable entity but consists of variable and heterogeneous subsets of internalizing and neurocognitive symptoms. And each time we use MDD as an index, we index something different.&lt;/p&gt;
    &lt;p&gt;There are some important limitations to note with regards to the Forbes et al. survey. It relies only on self-reported symptoms, and features requiring clinician observation are missing; symptoms are decontextualized (e.g., insomnia due to substance withdrawal isn’t differentiated from insomnia due to anxiety); all symptoms were assessed using a 12-month time scale, even though different symptom patterns exist at different time scales.&lt;/p&gt;
    &lt;p&gt;Forbes et al. themselves note,&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;“It will also be essential to understand which aspects of these results—particularly the fine-grained levels of the structure—are robust to other approaches to measurement (i.e., using alternative measures, time frames, multi-method or multi-informant approaches, as well as within-person assessment) and across intersectional conceptualizations of identity (e.g., in a variety of sociodemographic and culturally and linguistically diverse samples).”&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;See also:&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.psychiatrymargins.com/p/traditional-dsm-disorders-dissolve?r=2wyot6&amp;triedRedirect=true"/><published>2025-09-22T02:24:50+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45329127</id><title>Privacy and Security Risks in the eSIM Ecosystem [pdf]</title><updated>2025-09-22T10:41:42.781356+00:00</updated><content/><link href="https://www.usenix.org/system/files/usenixsecurity25-motallebighomi.pdf"/><published>2025-09-22T04:35:27+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45329414</id><title>Download responsibly</title><updated>2025-09-22T10:41:41.886249+00:00</updated><content>&lt;doc fingerprint="2ce57d957d222cce"&gt;
  &lt;main&gt;
    &lt;p&gt;10.09.2025 | Frederik Ramm&lt;/p&gt;
    &lt;p&gt;This month we’ve ramped up the infrastructure behind the download server, and downloads should now be available earlier&lt;lb/&gt; and faster. There’s also a small technical change in that requests for a “…latest” file will now be answered with a&lt;lb/&gt; HTTP redirect to the specific latest version (see previous blog post).&lt;/p&gt;
    &lt;p&gt;I would like to use this opportunity to appeal to users of the download server to “download responsibly”. We want&lt;lb/&gt; to continue offering this service as powerful and as convenient as possible within our means. We want everyone&lt;lb/&gt; to have easy access to the latest OSM data in a form that is useful to them.&lt;/p&gt;
    &lt;p&gt;Every now and then, people break things for others. There have been individual clients downloading the exact same&lt;lb/&gt; 20-GB file 100s of times per day, for several days in a row. (Just the other day, one user has managed to download almost 10,000 copies of the italy-latest.osm.pbf file in 24 hours!) Others download every single file we have on the&lt;lb/&gt; server, every day. There’s a limit to the outgoing network bandwidth, and behaviour like this means that&lt;lb/&gt; things are slowing down for everyone. Also, when we block an IP range for abuse, innocent third parties can be affected. &lt;/p&gt;
    &lt;p&gt;Here’s three concrete appeals to users of the download server:&lt;/p&gt;
    &lt;p&gt;1. If you want data for the whole planet, don’t download it piecemeal from us – simply get the planet file from planet.openstreetmap.org and you’re done!&lt;lb/&gt; 2. If you want a large region (like Europe or North America) updated daily, use the excellent pyosmium-up-to-date program which will automatically determine the age of your local file and update it by downloading the latest changes; this saves something like 98% of network traffic compared to a fresh download, and is faster.&lt;lb/&gt; 3. If you automate anything with regard to our download server, monitor what your script is doing or build in appropriate catches so that you don’t end up downloading the same file 1000 times just because your disk is full or something like that.&lt;/p&gt;
    &lt;p&gt;Happy downloading!&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://blog.geofabrik.de/index.php/2025/09/10/download-responsibly/"/><published>2025-09-22T05:33:54+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45330198</id><title>Show HN: Software Freelancers Contract Template</title><updated>2025-09-22T10:41:41.323236+00:00</updated><content>&lt;doc fingerprint="f531f568962cddb4"&gt;
  &lt;main&gt;
    &lt;p&gt;FI EN 1 2 . . 3 ⚠️ → GoogleDoc &amp;amp; GitHub ✓ + + + + ✓ ✓ : ( ) : ( , ) { $refs.tilaajanYtunnusRaaka.focus({ preventScroll: true }); }, 10);" @blur="kirjaaValmisTilaajanYritys();" type="text" name="tilaajanYritys" :placeholder="t('placeholderInputClientCompany')" autocomplete="off" tabindex="0" class="input-text px-3 py-2" /&amp;gt; { $refs.tilaajanYhteyshenkiloRaaka.focus({ preventScroll: true }); }, 10);" @blur="kirjaaValmisTilaajanYtunnus();" type="text" name="tilaajanYtunnus" placeholder="1234567-1" autocomplete="off" tabindex="0" class="input-text px-3 py-2" /&amp;gt; { $refs.tilaajanEmailRaaka.focus({ preventScroll: true }); }, 10);" @blur="kirjaaValmisTilaajanYhteyshenkilo();" type="text" name="tilaajanYhteyshenkilo" :placeholder="t('placeholderInputClientContactPerson')" autocomplete="off" tabindex="0" class="input-text px-3 py-2" /&amp;gt; { $refs.tilaajanPuhelinRaaka.focus({ preventScroll: true }); }, 10);" @blur="kirjaaValmisTilaajanEmail();" type="email" name="tilaajanEmail" :placeholder="t('placeholderInputClientEmail')" autocomplete="off" tabindex="0" class="input-text px-3 py-2" :class="tilaajanEmailError ? 'border-red-500' : ''" /&amp;gt; ✓ : ( ) : ( , ) { $refs.toimittajanYtunnusRaaka.focus({ preventScroll: true }); }, 10);" @blur="kirjaaValmisToimittajanYritys();" type="text" name="toimittajanYritys" :placeholder="t('placeholderInputFreelancerCompany')" autocomplete="off" tabindex="0" class="input-text px-3 py-2" /&amp;gt; { $refs.toimittajanYhteyshenkiloRaaka.focus({ preventScroll: true }); }, 10);" @blur="kirjaaValmisToimittajanYtunnus();" type="text" name="toimittajanYtunnus" placeholder="1234567-1" autocomplete="off" tabindex="0" class="input-text px-3 py-2" /&amp;gt; { $refs.toimittajanEmailRaaka.focus({ preventScroll: true }); }, 10);" @blur="kirjaaValmisToimittajanYhteyshenkilo();" type="text" name="toimittajanYhteyshenkilo" :placeholder="t('placeholderInputFreelancerContactPerson')" autocomplete="off" tabindex="0" class="input-text px-3 py-2" /&amp;gt; { $refs.toimittajanPuhelinRaaka.focus({ preventScroll: true }); }, 10);" @blur="kirjaaValmisToimittajanEmail();" type="email" name="toimittajanEmail" :placeholder="t('placeholderInputFreelancerEmail')" autocomplete="off" tabindex="0" class="input-text px-3 py-2" :class="toimittajanEmailError ? 'border-red-500' : ''" /&amp;gt; ✓ { $refs.ohjelmistokehittajaRadioWrapper.focus({ preventScroll: true }); }, 10);" @blur="kirjaaValmisProjektinNimi();" type="text" name="projektinNimi" :placeholder="t('placeholderProjectName')" autocomplete="off" tabindex="0" class="input-text px-3 py-2" /&amp;gt; ✓ ✓ ✓ ✓ ✓ ✓ { if (!onFocus) $refs.continueButton.focus({ preventScroll: true }); }, 50);" x-transition:enter.duration.400ms @transitionstart.once="$refs.maksuaikaRaaka.focus({ preventScroll: true }); tarvittaessaScrollaaAlas();" tabindex="0" class="border-2 p-4 pl-5 mt-4 rounded" :class="onFocus ? 'border-gray-500 border-dashed' : 'border-gray-700 border-solid'" &amp;gt; ⚠️ €/h €/h €/h ⚠️&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://sopimusgeneraattori.ohjelmistofriikit.fi/?lang=en"/><published>2025-09-22T07:35:43+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45330378</id><title>You did this with an AI and you do not understand what you're doing here</title><updated>2025-09-22T10:41:40.867538+00:00</updated><content>&lt;doc fingerprint="baba43bfbdc7bb61"&gt;
  &lt;main&gt;
    &lt;p&gt;It looks like your JavaScript is disabled. To use HackerOne, enable JavaScript in your browser and refresh this page.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://hackerone.com/reports/3340109"/><published>2025-09-22T07:59:37+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45330407</id><title>SGI demos from long ago in the browser via WASM</title><updated>2025-09-22T10:41:40.471148+00:00</updated><content>&lt;doc fingerprint="f7d69218d4b7b003"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;SGI demos from long ago, running in your browser today.&lt;/head&gt;
    &lt;p&gt;Old problems require modern solutions.&lt;/p&gt;
    &lt;p&gt;This is the original SGI demo source code, compiled for the web using Emscripten and SDL2. Rendering is done using an IRIS GL software rasterizer from the Alice 4 project. Event handling is done by SDL2, with events translated into GL's event system. Each demo is a separate web page, with its own Javascript + WASM compiled by Emscripten from the original C/C++ source. Minimal modifications have been made to the original source, in order to run in the browser and to work with compilers 35 years newer.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Flight (cockpit glitches, planes too slow in web version, night mode 'shimmers', no network play)&lt;/item&gt;
      &lt;item&gt;Newave (no mesh editing, no popup menus, only wireframe)&lt;/item&gt;
      &lt;item&gt;Arena (no network play)&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Install Homebrew if you don't have it, then get SDL2 and Emscripten:&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;brew install SDL2
brew install emscripten&lt;/code&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Build:&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;git clone https://github.com/sgi-demos/sgi-demos.git
cd sgi-demos
make&lt;/code&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Install Winget if you don't have it.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Install MSYS2 from cmd.exe, in order to get the clang compiler:&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;winget install MSYS2.MSYS2
setx PATH "%PATH%C:\msys64\clang64\bin"&lt;/code&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Install clang toolchain and SDL2 in MSYS2 CLANG64 shell:&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;pacman -Syu
pacman -S base-devel mingw-w64-clang-x86_64-toolchain
pacman -S mingw-w64-clang-x86_64-SDL2&lt;/code&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Clone emscripten from Github. Cloning seems to work best with MSYS2 rather than using pacman. Follow the default install directions, not the Windows directions!&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Add this line to the&lt;/p&gt;&lt;code&gt;~/.bashrc&lt;/code&gt;file in MSYS2 CLANG64 shell:&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;source /path/to/emsdk/emsdk_env.sh&lt;/code&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Build:&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;git clone https://github.com/sgi-demos/sgi-demos.git
cd sgi-demos
make&lt;/code&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Rendering via OpenGLES/WebGL (WIP)&lt;/item&gt;
      &lt;item&gt;Arbitrary window size&lt;/item&gt;
      &lt;item&gt;Run GL demo in its own WASM worker/thread, to avoid slicing up the code for SDL's event loop&lt;/item&gt;
      &lt;item&gt;Popup menus, including the classic SGI menu font&lt;/item&gt;
      &lt;item&gt;More demos, all the demos. &lt;list rend="ul"&gt;&lt;item&gt;Electropaint, Cedit, any other IRIS GL demos I can find&lt;/item&gt;&lt;item&gt;Then OpenGL, GLUT, Inventor, Performer demos in no particular order&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Rudimentary context for each demo: name, author, year (as text in lower corner), code link&lt;/item&gt;
      &lt;item&gt;Virtual mouse and keyboard: &lt;list rend="ul"&gt;&lt;item&gt;Only display virtual keys and mouse functions used by the demo; use demo's qdevice() calls to determine this&lt;/item&gt;&lt;item&gt;Displayed as transparent virtual mouse and key pictures overlaid on demo&lt;/item&gt;&lt;item&gt;On always for touch devices&lt;/item&gt;&lt;item&gt;On/off for mouse/keyboard devices, as hints&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Description/history/context for each demo - can obtain some descriptions from .Info slide files&lt;/item&gt;
      &lt;item&gt;Man page live links&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Everyone who worked at SGI, for the eye candy and the baller computers.&lt;/item&gt;
      &lt;item&gt;The Alice 4 folks, for the inspiration and the GL implementation.&lt;/item&gt;
      &lt;item&gt;Emscripten and SDL teams, for making a web port possible.&lt;/item&gt;
      &lt;item&gt;Internet Archive, Bitsavers, WinWorld, IRIXNet, and others, for saving the history.&lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/sgi-demos"/><published>2025-09-22T08:03:59+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45330818</id><title>Metamaterials, AI, and the Road to Invisibility Cloaks</title><updated>2025-09-22T10:41:40.412594+00:00</updated><content/><link href="https://open.substack.com/pub/thepotentialsurface/p/metamaterials-ai-and-the-road-to"/><published>2025-09-22T09:02:57+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45331001</id><title>Show HN: Coding Agents swarming your codebase</title><updated>2025-09-22T10:41:39.588221+00:00</updated><content>&lt;doc fingerprint="8fc2ccdb2cbb889b"&gt;
  &lt;main&gt;
    &lt;p&gt;Using canvas, approve or edit affected items of your task. The list of repositories, file diffs, etc. can be modified by the canvas.&lt;/p&gt;
    &lt;p&gt;Use our canvas and chatbot to share what's on your mind. Our agent will define a task and cook a bunch of PRs for you.&lt;/p&gt;
    &lt;p&gt;One task may require multiple PRs, we will help you create them and track them without the need to open IDE or any other dashboard.&lt;/p&gt;
    &lt;p&gt;Runbook for your agent. Define behavior based on rules and templates you prefer—how a commit message should look, or a Slack message asking for a review.&lt;/p&gt;
    &lt;p&gt;Public language models are not designed to work with IaC-structured filesystems; they underperform with complex multi-repo organizations.&lt;/p&gt;
    &lt;p&gt;Add internal and third party servers using a simple Yaml file.&lt;/p&gt;
    &lt;p&gt;Discover your infrastructure from top to bottom. Indexing your org help us understand and connect the dots using our reasoning models.&lt;/p&gt;
    &lt;p&gt;We already indexed the patch notes of your dependencies to enrich generated codes.&lt;/p&gt;
    &lt;p&gt;We automate the process of git branching, making pull requests and taking care of issues.&lt;/p&gt;
    &lt;p&gt;Mention your ticket directly in the chat and let the agent work on it. This agent can also create tickets with details out of suggested improvments provided by our agent.&lt;/p&gt;
    &lt;p&gt;Let the exhausting work of asking for a review be done by our agent, we know which team is responsible for which repository.&lt;/p&gt;
    &lt;p&gt;Pro&lt;/p&gt;
    &lt;p&gt;Enterprise&lt;/p&gt;
    &lt;p&gt;Thank you for joining our waitlist! We'll be in touch soon.&lt;/p&gt;
    &lt;p&gt;Something went wrong. Please try again later.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://infrastructureas.ai"/><published>2025-09-22T09:32:44+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45331009</id><title>LinkedIn will soon train AI models with data from European users</title><updated>2025-09-22T10:41:39.461101+00:00</updated><content>&lt;doc fingerprint="bcddeb38d0381c6f"&gt;
  &lt;main&gt;
    &lt;p&gt;LinkedIn is preparing to switch on generative-AI training that draws from European members’ data, setting November 3, 2025 as the go-live date. The company says it will rely on “legitimate interests” as its legal basis and will offer an opt-out so members can refuse use of their data for training—promising that private messages are excluded. The change applies across the EU/EEA, United Kingdom, and Switzerland.&lt;/p&gt;
    &lt;p&gt;This is a pivot from last year’s pause. In September 2024, after criticism and scrutiny, LinkedIn suspended plans to train models on data from EU &amp;amp; U.K. users.&lt;/p&gt;
    &lt;p&gt;What exactly will be used? LinkedIn’s help center explains that profile details and public content (posts, articles, comments) can feed content-generating models. The company also points to saved résumés and job-application answers as potential inputs to features that help members get discovered by recruiters, and it says it screens out minors it believes are in secondary school. It stresses that private messages are not part of the training set. The togglable setting appears as “Data for Generative AI Improvement,” and turning it off stops future use of your data for training, though it doesn’t unwind models already trained.&lt;/p&gt;
    &lt;p&gt;There’s a parallel—but separate—data-sharing change with Microsoft, LinkedIn’s parent. Beginning November 3, LinkedIn will expand, in some regions, the types of LinkedIn data shared with Microsoft so Microsoft can personalize ads. LinkedIn frames this as an “Affiliates” update; it says it will provide an additional opt-out where relevant. The two changes arrive together in the same terms refresh but follow different regional rules.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Outside EU/EEA/Switzerland and the UK, LinkedIn shares your information with our affiliate, Microsoft, for advertising purposes and with select partners for purposes of marketing LinkedIn’s products and services.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;For European members, the legal hinge is GDPR’s “legitimate interests.” That route allows processing without consent if a company can show necessity, transparency, and an effective right to object. LinkedIn’s European Regional Privacy Notice update states that legitimate interests will be the basis for training content-generating models starting November 3, and that an objection (opt-out) will be honored via account settings.&lt;/p&gt;
    &lt;p&gt;Why now? LinkedIn has steadily added AI-assisted features—writing suggestions, profile summaries, recruiter tools—that benefit from domain-specific training. After the 2024 backlash (and a short-lived lawsuit in the U.S. that centered on fears about private messages—claims LinkedIn denied and that were later withdrawn), the company has come back with region-specific notices, a single, named training setting, and clearer language that private messages aren’t in scope.&lt;/p&gt;
    &lt;p&gt;Practically, here’s what changes on (or around) November 3 in Europe: if you do nothing, LinkedIn may use parts of your profile and public activity to refine the models behind its content-generation features. If you object in settings, that use should stop for future training. Your ability to use AI features doesn’t depend on opting in. In parallel, some—but not all—regions will see broader ad-personalization data sharing with Microsoft, governed by a separate control. Expect some differences in labels and availability by market; LinkedIn says not all features and settings roll out worldwide at once.&lt;/p&gt;
    &lt;p&gt;If you want out, the setting to look for is “Data for Generative AI Improvement” in Settings → Data privacy. The key is that the toggle affects future training, not models already built. Keep an eye out for any region-specific notices in your account banner over the next few weeks as the company aligns the U.K. with the EU schedule.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://hostvix.com/linkedin-will-soon-train-ai-models-with-data-from-european-users/"/><published>2025-09-22T09:33:32+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45331187</id><title>Some Republicans Warn of Government Overreach on Free Speech</title><updated>2025-09-22T10:41:39.239577+00:00</updated><content/><link href="https://www.wsj.com/politics/policy/some-republicans-warn-of-government-overreach-on-free-speech-821e7caf"/><published>2025-09-22T09:57:55+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45331213</id><title>M4.6 Earthquake – 2 km ESE of Berkeley, CA</title><updated>2025-09-22T10:41:39.082510+00:00</updated><content>&lt;doc fingerprint="5f4bcaf04e5289af"&gt;
  &lt;main&gt;
    &lt;p&gt;The Earthquake Event Page application supports most recent browsers, view supported browsers. Or, try our Real-time Notifications, Feeds, and Web Services.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://earthquake.usgs.gov/earthquakes/eventpage/ew1758534970/executive"/><published>2025-09-22T10:00:57+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45331217</id><title>Tell the EU: Don't Break Encryption with "Chat Control"</title><updated>2025-09-22T10:41:38.832437+00:00</updated><content>&lt;doc fingerprint="95c28970bca1f675"&gt;
  &lt;main&gt;
    &lt;p&gt;The European Union is pushing a dangerous surveillance law called “Chat Control” that would force tech companies to scan everyone’s private messages — even those protected by end-to-end encryption.&lt;/p&gt;
    &lt;p&gt;This proposal would force tech companies to use “client-side scanning” — so your private messages, photos, and files could be read before you send them, opening the door for hackers, corporations, and governments to spy on your data.&lt;/p&gt;
    &lt;p&gt;If passed, Chat Control won’t just weaken privacy — it will change the way we live online. Private conversations would no longer be private. Trust, security, and freedom on the internet would vanish.&lt;/p&gt;
    &lt;p&gt;The Mozilla community is urgently calling on EU policymakers to:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Protect encryption: Ensure that end-to-end encrypted services are fully excluded from any broad detection requirements.&lt;/item&gt;
      &lt;item&gt;Defend online security: Reject all measures that weaken encryption, violate the integrity of our devices or create new vulnerabilities in digital services.&lt;/item&gt;
      &lt;item&gt;Rely on expertise: Consult independent experts — cryptographers, child protection specialists, and fundamental rights advocates — to design solutions that are both technically sound and proportionate.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Sign Mozilla Foundation’s petition today to tell the EU: Drop Chat Control. Defend encryption. Protect our digital future.&lt;/p&gt;
    &lt;head class="tw-list-none [&amp;amp;::-webkit-details-marker]:tw-hidden tw-w-full tw-text-lg tw-leading-7 tw-min-h-40 py-3 d-flex align-items-center tw-border-t-gray-20 tw-border-t"&gt;Where does my country stand on the EU “Chat Control” proposal?&lt;/head&gt;
    &lt;p&gt;Check this map to see where your country stands: fightchatcontrol.eu&lt;/p&gt;
    &lt;p&gt;Each EU country has taken a different stance — and the debate is shifting fast. Some governments oppose it, some are undecided, and others are pushing hard to pass it.&lt;/p&gt;
    &lt;p&gt;No matter your government’s position right now, adding your voice will help protect our right to private communications. Members of the European Parliament (MEPs) and national ministers will decide this law. Contact your representatives today and tell them: protect encryption, reject client-side scanning, and defend our rights online.&lt;/p&gt;
    &lt;head class="tw-list-none [&amp;amp;::-webkit-details-marker]:tw-hidden tw-w-full tw-text-lg tw-leading-7 tw-min-h-40 py-3 d-flex align-items-center tw-border-t-gray-20 tw-border-t"&gt;What is “client-side scanning” (CSS)?&lt;/head&gt;
    &lt;p&gt;Client-side scanning means your messages, photos, or files are scanned on your device before they’re encrypted.&lt;/p&gt;
    &lt;p&gt;Client-side scanning (CSS) is often promoted as a child safety measure — but in reality, it undermines the very promise of encryption. Detection tools, especially those meant to identify “unknown” content, are error-prone and create new security vulnerabilities.&lt;/p&gt;
    &lt;p&gt;Even if scanning starts with one type of content (like CSAM), it sets a dangerous precedent: the scope can easily be expanded to monitor other kinds of conversations. And once encryption is weakened, the risks multiply — hackers can steal sensitive data, abusers can track vulnerable people, and authoritarian regimes can spy on journalists, activists, and citizens.&lt;/p&gt;
    &lt;p&gt;CSS doesn’t make people safer. It makes everyone less secure.&lt;/p&gt;
    &lt;head class="tw-list-none [&amp;amp;::-webkit-details-marker]:tw-hidden tw-w-full tw-text-lg tw-leading-7 tw-min-h-40 py-3 d-flex align-items-center tw-border-t-gray-20 tw-border-t"&gt;Which encrypted apps and products would be impacted?&lt;/head&gt;
    &lt;p&gt;If passed, Chat Control would apply to messaging and storage services operating in the EU — even those using end-to-end encryption.&lt;/p&gt;
    &lt;p&gt;Apps like WhatsApp, Signal, Telegram, iMessage, and Messenger, plus cloud services like iCloud, Google Drive, and Microsoft OneDrive, could all be forced to scan your private messages, photos, and files before they’re sent or stored.&lt;/p&gt;
    &lt;p&gt;That means no matter which service you use, your conversations and data could be opened up to surveillance.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.mozillafoundation.org/en/campaigns/tell-the-eu-dont-break-encryption-with-chat-control/"/><published>2025-09-22T10:01:20+00:00</published></entry></feed>