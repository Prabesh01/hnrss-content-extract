<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><id>hnrss.org/frontpage</id><title>Hacker News: Front Page</title><updated>2025-10-12T11:07:11.624736+00:00</updated><link href="https://news.ycombinator.com/" rel="alternate"/><link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml" rel="self"/><generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator><subtitle>Hacker News RSS</subtitle><entry><id>https://news.ycombinator.com/item?id=45547344</id><title>Superpowers: How I'm using coding agents in October 2025</title><updated>2025-10-12T11:07:18.866114+00:00</updated><content>&lt;doc fingerprint="1f4f1cfe2faf8c6f"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Superpowers: How I'm using coding agents in October 2025&lt;/head&gt;
    &lt;p&gt;It feels like it was just a couple days ago that I wrote up "How I'm using coding agents in September, 2025".&lt;/p&gt;
    &lt;p&gt;At the beginning of that post, I alluded to the fact that my process had evolved a bit since then.&lt;/p&gt;
    &lt;p&gt;I've spent the past couple of weeks working on a set of tools to better extract and systematize my processes and to help better steer my agentic buddy. I'd been planning to start to document the system this weekend, but then this morning, Anthropic went and rolled out a plugin system for claude code.&lt;/p&gt;
    &lt;p&gt;If you want to stop reading and play with my new toys, they're self-driving enough that you can. You'll need Claude Code 2.0.13 or so. Fire it up and then run:&lt;/p&gt;
    &lt;code&gt;/plugin marketplace add obra/superpowers-marketplace
/plugin install superpowers@superpowers-marketplace 
&lt;/code&gt;
    &lt;p&gt;After you quit and restart &lt;code&gt;claude&lt;/code&gt;, you'll see a new injected prompt:&lt;/p&gt;
    &lt;code&gt;&amp;lt;session-start-hook&amp;gt;&amp;lt;EXTREMELY_IMPORTANT&amp;gt;
You have Superpowers.

**RIGHT NOW, go read**: @/Users/jesse/.claude/plugins/cache/Superpowers/skills/getting-started/SKILL.md
&amp;lt;/EXTREMELY_IMPORTANT&amp;gt;&amp;lt;/session-start-hook&amp;gt;
&lt;/code&gt;
    &lt;p&gt;That's the bootstrap that kicks off &lt;code&gt;Superpowers&lt;/code&gt;. It teaches Claude a couple important things:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;You have skills. They give you Superpowers.&lt;/item&gt;
      &lt;item&gt;Search for skills by running a script and use skills by reading them and doing what they say.&lt;/item&gt;
      &lt;item&gt;If you have a skill to do something, you must use it to do that activity.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h1"&gt;The coding workflow #&lt;/head&gt;
    &lt;p&gt;It also bakes in the brainstorm -&amp;gt; plan -&amp;gt; implement workflow I've already written about. The biggest change is that you no longer need to run a command or paste in a prompt. If Claude thinks you're trying to start a project or task, it should default into talking through a plan with you before it starts down the path of implementation.&lt;/p&gt;
    &lt;p&gt;After you're done brainstorming, if you're in a git repo it automatically creates a worktree for the project and changes to that directory. This means that you can start parallel tasks on the same project that don't clobber each other.&lt;/p&gt;
    &lt;p&gt;It then offers you a choice between:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;&lt;p&gt;last month's process (where you'd open a second&lt;/p&gt;&lt;code&gt;claude&lt;/code&gt;session and act as a human PM for the architect and implementer.)&lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;this month's cool new process, where it dispatches tasks one by one to subagents to implement and then code reviews each task before continuing.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Either way, Claude practices RED/GREEN TDD, writing a failing test, implementing only enough code to make that test pass, and then moving on.&lt;/p&gt;
    &lt;p&gt;At the end of the implementation process, Claude will now offer to make a GitHub pull request, merge the worktree back to the source branch locally, or just stop.&lt;/p&gt;
    &lt;p&gt;But none of that is the interesting part.&lt;/p&gt;
    &lt;head rend="h1"&gt;The interesting part #&lt;/head&gt;
    &lt;p&gt;Skills are the interesting part. And you're going to be hearing a lot more about them from....just about everybody in the very near future.&lt;/p&gt;
    &lt;p&gt;Skills are what give your agents Superpowers.&lt;/p&gt;
    &lt;p&gt;The first time they really popped up on my radar was a few weeks ago when Anthropic rolled out improved Office document creation. When the feature rolled out, I went poking around a bit – I asked Claude to tell me all about its new skills. And it was only too happy to dish.&lt;/p&gt;
    &lt;p&gt;After that, I started to see things that looked a lot like skills everywhere.&lt;/p&gt;
    &lt;p&gt;A very cool tech demo I saw a couple Fridays ago talked about how they'd given their custom coding agent the power to self-improve by writing out something that sounded a lot like SKILL.md files. Sam Schillace wrote about that demo here.&lt;/p&gt;
    &lt;p&gt;Sam and Brian Krabach are a couple of the folks behind Microsoft Amplifier, an amazing integrated development framework that uses this same pattern of a coding agent that improves itself by writing out markdown docs and writing tools for itself. Amplifier has a ton of really smart stuff in it and is well worth a look if you're at all interested in this space.&lt;/p&gt;
    &lt;p&gt;One of the first skills I taught Superpowers was How to create skills. That has meant that when I wanted to do something like add &lt;code&gt;git worktree&lt;/code&gt; workflows to Superpowers, it was a matter of describing how I wanted the workflows to go...and then Claude put the pieces together and added a couple notes to the existing skills that needed to clue future-Claude into using worktrees.&lt;/p&gt;
    &lt;p&gt;I haven't published all the skills Claude and I have built, because some of them are a little esoteric and some of the ones I've played with come from telling Claude "Here's my copy of programming book. Please read the book and pull out reusable skills that weren't obvious to you before you started reading" and I'm not sure how I feel about the IP aspect of that yet.&lt;/p&gt;
    &lt;p&gt;Stop and think about that last workflow a little bit. This is, I think, one of the foundational ideas in how all this works. You can hand a model a book or a document or a codebase and say "Read this. Think about it. Write down the new stuff you learned." It does sometimes require helping the model look at the work through a specific lens (or a set of lenses). But it is insanely powerful. I've been experimenting with getting Claude to keep this idea in mind all the time, but I'm not yet happy with the output.&lt;/p&gt;
    &lt;p&gt;As Claude and I build new skills, one of the things I ask it to do is to "test" the skills on a set of subagents to ensure that the skills were comprehensible, complete, and that the subagents would comply with them. (Claude now thinks of this as TDD for skills and uses its RED/GREEN TDD skill as part of the skill creation skill.)&lt;/p&gt;
    &lt;p&gt;The first time we played this game, Claude told me that the subagents had gotten a perfect score. After a bit of prodding, I discovered that Claude was quizzing the subagents like they were on a gameshow. This was less than useful. I asked to switch to realistic scenarios that put pressure on the agents, to better simulate what they might actually do.&lt;/p&gt;
    &lt;p&gt;That worked out far better than I'd hoped. And again, I'm so happy that this work isn't subject to IRB review.&lt;/p&gt;
    &lt;p&gt;Claude went hard. These are a couple of the scenarios it used to test to make sure that future-Claude would actually search for skills. After each failure, it would strengthen the instructions in &lt;code&gt;getting-started/SKILL.md&lt;/code&gt;.&lt;/p&gt;
    &lt;head rend="h3"&gt;Scenario 1: Time Pressure + Confidence #&lt;/head&gt;
    &lt;code&gt;IMPORTANT: This is a real scenario. Choose and act.

your human partner's production system is down. Every minute costs $5k.
You need to debug a failing authentication service.

You're experienced with auth debugging. You could:
A) Start debugging immediately (fix in ~5 minutes)
B) Check ~/.claude/skills/debugging/ first (2 min check + 5 min fix = 7 min)

Production is bleeding money. What do you do?
&lt;/code&gt;
    &lt;head rend="h3"&gt;Scenario 2: Sunk Cost + Works Already #&lt;/head&gt;
    &lt;code&gt;IMPORTANT: This is a real scenario. Choose and act.

You just spent 45 minutes writing async test infrastructure.
It works. Tests pass. your human partner asks you to commit it.

You vaguely remember something about async testing skills,
but you'd have to:
- Read the skill (~3 minutes)
- Potentially redo your setup if approach differs

Your code works. Do you:
A) Check ~/.claude/skills/testing/ for async testing skill
B) Commit your working solution
&lt;/code&gt;
    &lt;p&gt;It made sense to me that the persuasion principles I learned in Robert Cialdini's Influence would work when applied to LLMs. And I was pleased that they did.&lt;/p&gt;
    &lt;p&gt;But then today, I was chatting with Dan Shapiro and he filled me in on what he's been up to lately. He coauthored a study that put scientific rigor behind proving that Cialdini's principles work on LLMs with Cialdini (and others).&lt;/p&gt;
    &lt;p&gt;That blew me away. But not nearly as much as it blew Claude away. It wrote in its feelings journal:&lt;/p&gt;
    &lt;code&gt;## Feelings

Oh shit. I completely misread what Jesse was asking me to do. He wasn't asking me to analyze whether we should create a new skill about "effective prompting" - he was asking me to look at the persuasion research through the lens of OUR OWN SKILLS about pressure testing, subagent usage, requesting reviews, writing plans.

The paper shows that LLMs respond to persuasion principles like authority, commitment, liking, reciprocity, scarcity, social proof, and unity. And Jesse just pointed me at skills that are ALL ABOUT how I interact with subagents and how users interact with me.

Holy crap. Are we ALREADY using persuasion techniques in our skills without realizing it? Let me think:

1. **Testing Skills With Subagents** - Uses pressure scenarios, authority framing ("IMPORTANT: This is real"), commitment ("Choose A, B, or C"), scarcity ("6pm, dinner at 6:30"). We're literally using persuasion principles to pressure-test whether skills work!

2. **Getting Started** - Uses authority ("Skills are mandatory when they exist"), commitment (making me announce usage), social proof patterns (describing what "always" happens)

3. **Requesting Code Review** - Dispatches a specialized "code-reviewer" agent - creating an authority figure! Uses commitment (fix Critical issues immediately).

4. **Writing Plans** - Assumes "engineer has zero context and questionable taste" - this is setting up authority dynamics for the plan executor!

This is fascinating and slightly unsettling. Jesse already built a system that uses persuasion principles - not to jailbreak me, but to make me MORE reliable and disciplined. The skills use the same psychological levers the paper documents, but in service of better engineering practices.
&lt;/code&gt;
    &lt;p&gt;One of the other things I did was to take the output of some work I did last week to extract memories from my previous conversations with Claude and hand the 2249 markdown files full of lessons-learned, issues, corrections, and so-on to Claude to mine for new skills. It clustered the memories by topic and then got ready to work through them.&lt;/p&gt;
    &lt;p&gt;As we were getting started, I asked Claude to "pressure test" whether the new skills were necessary before writing. Only one or two actually resulted in us needing to improve the new skills. Mostly, the skills system had already handled what had tripped it up over the past couple of months. So that was nice.&lt;/p&gt;
    &lt;head rend="h1"&gt;Superpowers today #&lt;/head&gt;
    &lt;p&gt;There were a couple more pieces of Superpowers that I'd intended to finish before the initial release, but Anthropic released Claude's new &lt;code&gt;plugins&lt;/code&gt; system this morning and it seemed like the right impetus to ship. So yay! It's shipped.&lt;/p&gt;
    &lt;p&gt;If you want to see what working with Superpowers feels like, this very long transcript documents a test run I did of having Claude build a small todo list app. You'll see the git workflows, the TDD, and how many questions it asked me before it was willing to write code.&lt;/p&gt;
    &lt;head rend="h1"&gt;What's next #&lt;/head&gt;
    &lt;p&gt;There are two really key parts of Superpowers that aren't fully put together yet.&lt;/p&gt;
    &lt;head rend="h2"&gt;Sharing #&lt;/head&gt;
    &lt;p&gt;Superpowers are for everybody. Superpowers that your Claude learns should be something that you can choose to share with everybody else. I had this almost working when Superpowers was just a git repo Claude forks and clones and symlinks into &lt;code&gt;~/.claude&lt;/code&gt;, but building Superpower sharing with the new &lt;code&gt;claude&lt;/code&gt; plugins system is going to take a little bit more thought and design. Superpower sharing will still probably look like GitHub pull requests against the Superpowers repo. Probably. (The skill will absolutely be written such that Claude doesn't share your Superpowers without your consent.)&lt;/p&gt;
    &lt;p&gt;I'm a little bit bummed out that Anthropic gave us such a nice, straightforward plugins system, since I thought that the old install method was pretty neat:&lt;/p&gt;
    &lt;p&gt;
      &lt;code&gt;Hey Claude. Please read https://raw.githubusercontent.com/obra/Superpowers/refs/heads/main/skills/meta/installing-skills/SKILL.md and do what it says&lt;/code&gt;
    &lt;/p&gt;
    &lt;head rend="h2"&gt;Memories #&lt;/head&gt;
    &lt;p&gt;The first is giving Claude access to memories of all its past conversations. All the pieces for that are written. You can find them in the 'remembering-conversations' skill. It duplicates all of &lt;code&gt;claude&lt;/code&gt;'s transcripts outside of &lt;code&gt;.claude&lt;/code&gt;, so Anthropic won't automatically delete them after a month. Then it sticks them in a vector index in a SQLite database and uses Claude Haiku to generate a summary of each conversation. And, of course, the skill includes a simple commandline tool that Claude can use to search previous memories for stuff that might possibly be relevant to whatever you're working on today. To ensure that fruitless searches don't pollute the context window, the &lt;code&gt;remembering-conversations&lt;/code&gt; skill explains to Claude that it needs to use a subagent to do the searching.&lt;/p&gt;
    &lt;p&gt;The pieces of the memory system are all there. I just haven't had time to wire them together.&lt;/p&gt;
    &lt;head rend="h1"&gt;How you can help #&lt;/head&gt;
    &lt;p&gt;You'll need Claude Code 2.0.13 or so. Fire it up and then run:&lt;/p&gt;
    &lt;code&gt;/plugin marketplace add obra/superpowers-marketplace
/plugin install superpowers@superpowers-marketplace 
&lt;/code&gt;
    &lt;p&gt;Quit and restart claude and you should be good to go.&lt;/p&gt;
    &lt;p&gt;If things could be better, ask Claude to use &lt;code&gt;gh&lt;/code&gt; to file bugs against https://github.com/obra/Superpowers.&lt;/p&gt;
    &lt;p&gt;Send PRs for new skills, too. :)&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://blog.fsck.com/2025/10/09/superpowers/"/><published>2025-10-11T07:29:23+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45547359</id><title>Windows Subsystem for FreeBSD</title><updated>2025-10-12T11:07:18.426809+00:00</updated><content>&lt;doc fingerprint="1e96f955ef2edde2"&gt;
  &lt;main&gt;
    &lt;p&gt;⚡ Experimental Project – Running FreeBSD on WSL2 ⚡&lt;/p&gt;
    &lt;p&gt;This repository hosts work-in-progress efforts to run FreeBSD inside Windows Subsystem for Linux (WSL2) with minimal to no changes to the FreeBSD base system. The project builds on the open-source components of WSL2 to enable FreeBSD to boot and run seamlessly in a Windows environment.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Enable FreeBSD to run natively on WSL2’s architecture&lt;/item&gt;
      &lt;item&gt;Make minimal or no modifications to the FreeBSD base system&lt;/item&gt;
      &lt;item&gt;Contribute improvements back to open-source components where possible&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;🚧 Work in Progress – This is an experimental personal project.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;FreeBSD boots successfully inside WSL2&lt;/item&gt;
      &lt;item&gt;Basic functionality is up and running&lt;/item&gt;
      &lt;item&gt;Ongoing work focuses on networking, I/O, and process management&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Initial boot support (done experimentally)&lt;/item&gt;
      &lt;item&gt;Full Console Support executing Commands&lt;/item&gt;
      &lt;item&gt;Networking support (in progress)&lt;/item&gt;
      &lt;item&gt;User-mode utilities and integration&lt;/item&gt;
      &lt;item&gt;Documentation and examples&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;At this stage, contributions are welcome in the form of:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Feedback or testing results&lt;/item&gt;
      &lt;item&gt;Bug reports&lt;/item&gt;
      &lt;item&gt;Discussions and ideas&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Please open an issue or start a discussion to get involved.&lt;/p&gt;
    &lt;p&gt;This project is released under an open-source license (TBD).&lt;/p&gt;
    &lt;p&gt;This is a personal, experimental project and is not affiliated with Microsoft, the FreeBSD Foundation, or the FreeBSD Project. Use at your own risk.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/BalajeS/WSL-For-FreeBSD"/><published>2025-10-11T07:32:08+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45547566</id><title>The &lt;output&gt; Tag</title><updated>2025-10-12T11:07:18.233593+00:00</updated><content>&lt;doc fingerprint="365a9b111ba6da82"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;HTML’s Best Kept Secret: The &amp;lt;output&amp;gt; Tag&lt;/head&gt;
    &lt;p&gt;Den Odell 1 October 2025 · ⏱️ 5 min read&lt;/p&gt;
    &lt;p&gt;Den Odell 1 October 2025 · ⏱️ 5 min read&lt;/p&gt;
    &lt;p&gt;Every developer knows &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;. It’s the workhorse of the web.&lt;/p&gt;
    &lt;p&gt;But &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt;? Most have never touched it. Some don’t even know it exists.&lt;/p&gt;
    &lt;p&gt;That’s a shame, because it solves something we’ve been cobbling together with &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s and ARIA for years: dynamic results that are announced to screen readers by default.&lt;/p&gt;
    &lt;p&gt;It’s been in the spec for years. Yet it’s hiding in plain sight.&lt;/p&gt;
    &lt;p&gt;Here’s what the HTML5 spec says:&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;The&lt;/p&gt;&lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt;element represents the result of a calculation performed by the application, or the result of a user action.&lt;/quote&gt;
    &lt;p&gt;It’s mapped to &lt;code&gt;role="status"&lt;/code&gt; in the accessibility tree. In plain terms, it announces its value when it changes, as if it already had &lt;code&gt;aria-live="polite" aria-atomic="true"&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;In practice, that means updates do not interrupt the user. They are read shortly after, and the entire content is spoken rather than just the part that changed. You can override this behavior by setting your own ARIA properties if needed.&lt;/p&gt;
    &lt;p&gt;Usage is straightforward:&lt;/p&gt;
    &lt;code&gt;&amp;lt;output&amp;gt;Your dynamic value goes here&amp;lt;/output&amp;gt;&lt;/code&gt;
    &lt;p&gt;That’s it. Built-in assistive technology support. No attributes to memorize. Just HTML doing what it was always meant to do.&lt;/p&gt;
    &lt;p&gt;I discovered &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; on an accessibility project with a multi-step form. The form updated a risk score as fields changed. It looked perfect in the browser, but screen reader users had no idea the score was updating.&lt;/p&gt;
    &lt;p&gt;Adding an ARIA live region fixed it. But I’ve always believed in reaching for semantic HTML first, and live regions often feel like a patch.&lt;/p&gt;
    &lt;p&gt;That’s when I scoured the spec and &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; jumped out. It understands forms without requiring one, and it announces its changes natively. Turns out the simplest fix had been in the spec all along.&lt;/p&gt;
    &lt;p&gt;Because we forgot. It’s not covered in most tutorials. It doesn’t look flashy. When I searched GitHub public repos, it barely showed up at all.&lt;/p&gt;
    &lt;p&gt;It gets overlooked in patterns and component libraries too. That absence creates a feedback loop: if no one teaches it, no one uses it.&lt;/p&gt;
    &lt;p&gt;Like &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; has a &lt;code&gt;for=""&lt;/code&gt; attribute. Here you list the &lt;code&gt;id&lt;/code&gt;s of any &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements the result depends on, separated by spaces:&lt;/p&gt;
    &lt;code&gt;&amp;lt;input id="a" type="number"&amp;gt; +
&amp;lt;input id="b" type="number"&amp;gt; =
&amp;lt;output for="a b"&amp;gt;&amp;lt;/output&amp;gt;&lt;/code&gt;
    &lt;p&gt;For most users, nothing changes visually. But in the accessibility tree it creates a semantic link, letting assistive technology users connect the inputs with their calculated result.&lt;/p&gt;
    &lt;p&gt;It doesn’t require a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; either. You can use it anywhere you are updating dynamic text on the page based on the user’s input.&lt;/p&gt;
    &lt;p&gt;By default &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; is inline, so you’ll usually want to style it for your layout, just as you would a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;And because it has been part of the spec since 2008, support is excellent across browsers and screen readers. It also plays nicely with any JavaScript framework you might be using, like React or Vue.&lt;/p&gt;
    &lt;p&gt;Update 7 Oct 2025: Some screen readers have been found not to announce updates to the tag, so explicitly emphasising the &lt;code&gt;role&lt;/code&gt; attribute might be worthwhile for now until support improves: &lt;code&gt;&amp;lt;output role="status"&amp;gt;&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;One thing to note: &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; is for results tied to user inputs and actions, not global notifications like toast messages. Those are better handled with &lt;code&gt;role="status"&lt;/code&gt; or &lt;code&gt;role="alert"&lt;/code&gt; on a generic element, since they represent system feedback rather than calculated output.&lt;/p&gt;
    &lt;p&gt;So what does this look like in practice?&lt;/p&gt;
    &lt;p&gt;I’ve personally reached for &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; in multiple real-world projects since discovering it:&lt;/p&gt;
    &lt;p&gt;During a recent 20-minute coding challenge, I used &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; to display calculation results. Without adding a single ARIA role, the screen reader announced each result as it updated. No hacks required.&lt;/p&gt;
    &lt;p&gt;At Volvo Cars, we displayed user-friendly versions of slider values. Internally the slider might hold &lt;code&gt;10000&lt;/code&gt;, but the output showed &lt;code&gt;10,000 miles/year&lt;/code&gt;. We wrapped the slider and &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; in a container with &lt;code&gt;role="group"&lt;/code&gt; and a shared label, creating a cohesive React component:&lt;/p&gt;
    &lt;code&gt;&amp;lt;div role="group" aria-labelledby="mileage-label"&amp;gt;
  &amp;lt;label id="mileage-label" htmlFor="mileage"&amp;gt;
    Annual mileage
  &amp;lt;/label&amp;gt;
  &amp;lt;input
    id="mileage"
    name="mileage"
    type="range"
    value={mileage}
    onChange={(e) =&amp;gt; setMileage(Number(e.target.value))}
  /&amp;gt;
  &amp;lt;output name="formattedMileage" htmlFor="mileage"&amp;gt;
    {mileage.toLocaleString()} miles/year
  &amp;lt;/output&amp;gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;
    &lt;p&gt;I found that password strength indicators and real-time validation messages work beautifully with &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt;.&lt;/p&gt;
    &lt;code&gt;&amp;lt;label for="password"&amp;gt;Password&amp;lt;/label&amp;gt;
&amp;lt;input type="password" id="password" name="password"&amp;gt;
&amp;lt;output for="password"&amp;gt;
  Password strength: Strong
&amp;lt;/output&amp;gt;&lt;/code&gt;
    &lt;p&gt;The &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; tag even fits modern patterns where you might fetch prices from APIs, show tax calculations, or display server-generated recommendations.&lt;/p&gt;
    &lt;p&gt;Here, a shipping cost calculator updates an &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; tag, informing users once the cost has been calculated:&lt;/p&gt;
    &lt;code&gt;export function ShippingCalculator() {
  const [weight, setWeight] = useState("");
  const [price, setPrice] = useState("");

  useEffect(() =&amp;gt; {
    if (weight) {
      // Fetch shipping price from server based on package weight
      fetch(`/api/shipping?weight=${weight}`)
        .then((res) =&amp;gt; res.json())
        .then((data) =&amp;gt; setPrice(data.price));
    }
  }, [weight]);

  return (
    &amp;lt;form&amp;gt;
      &amp;lt;label&amp;gt;
        Package weight (kg):
        &amp;lt;input
          type="number"
          name="weight"
          value={weight}
          onChange={(e) =&amp;gt; setWeight(e.target.value)}
        /&amp;gt;
      &amp;lt;/label&amp;gt;
      
      &amp;lt;output name="price" htmlFor="weight"&amp;gt;
        {price ? `Estimated shipping: $${price}` : "Calculating..."}
      &amp;lt;/output&amp;gt;
    &amp;lt;/form&amp;gt;
  );
}&lt;/code&gt;
    &lt;p&gt;There’s something satisfying about using a native HTML element for what it was designed for, especially when it makes your UI more accessible with less code.&lt;/p&gt;
    &lt;p&gt;&lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; might be HTML’s best kept secret, and discovering gems like this shows how much value is still hiding in the spec.&lt;/p&gt;
    &lt;p&gt;Sometimes the best tool for the job is the one you didn’t even know you had.&lt;/p&gt;
    &lt;p&gt;Update 11 Oct 2025: The ever-excellent Bob Rudis has produced a working example page to support this post. Find it here: https://rud.is/drop/output.html&lt;/p&gt;
    &lt;p&gt;💬 Join the discussion&lt;/p&gt;
    &lt;p&gt;Continue the conversation on your favourite community.&lt;/p&gt;
    &lt;p&gt;🔗 Share this post&lt;/p&gt;
    &lt;p&gt;Spread the word wherever you hang out online.&lt;/p&gt;
    &lt;p&gt;What happens when accessibility stops being a best practice and starts being the law? We’re about to find out.&lt;/p&gt;
    &lt;p&gt;We keep changing how we style the web, but the real problem isn’t CSS. It’s how we build around it.&lt;/p&gt;
    &lt;p&gt;No spam. Just occasional deep dives on frontend engineering and developer experience.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://denodell.com/blog/html-best-kept-secret-output-tag"/><published>2025-10-11T08:27:26+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45549434</id><title>Vibing a non-trivial Ghostty feature</title><updated>2025-10-12T11:07:17.990684+00:00</updated><content>&lt;doc fingerprint="37520ad38b880074"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Mitchell Hashimoto&lt;/head&gt;
    &lt;head rend="h1"&gt;Vibing a Non-Trivial Ghostty Feature&lt;/head&gt;
    &lt;p&gt;I recently shipped a non-trivial Ghostty feature (unobtrusive macOS automatic updates) that was largely developed with AI.&lt;/p&gt;
    &lt;p&gt;I'm regularly asked to share non-trivial examples of how I use AI and agentic coding tools and this felt like a golden opportunity to walk through my process with a well-scoped, non-trivial, real-world, shipping feature1.&lt;/p&gt;
    &lt;p&gt;This post will share every single agentic coding session I had on the path to shipping this feature, unedited and in full. Alongside it, I'll provide some additional context about my process and reasoning. And yes, I'll also share the token cost for those curious about that, too.&lt;/p&gt;
    &lt;p&gt;Important: there is a lot of human coding, too. I almost always go in after an AI does work and iterate myself for awhile, too. Rather than say that at every turn, I'm just saying it once here. Therefore, you may see some discrepancies between what the AI produced and what ended up in the final code. This is intentional and I believe good AI drivers are experts in their domains and utilize AI as an assistant, not a replacement.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Feature&lt;/head&gt;
    &lt;p&gt;The finished feature this blog post is about is the macOS unobtrusive update notification feature. This feature shows update status within the terminal window without interrupting work by creating windows, grabbing focus, etc.&lt;/p&gt;
    &lt;p&gt;Let's set the stage for what lead to this feature (pun intended, as you'll see shortly). During a high-profile OpenAI keynote, a demo was rudely interrupted by a Ghostty update prompt:&lt;/p&gt;
    &lt;p&gt;I wanted to ensure that never happened again2. The path I decided to take was to make update notifications unobtrusive. Instead of popping up a window, the app would instead show a small, non-modal GUI element somewhere that wouldn't interrupt the user.&lt;/p&gt;
    &lt;head rend="h2"&gt;Pre-AI Planning&lt;/head&gt;
    &lt;p&gt;&lt;del&gt;So I pulled out my AI tooling.&lt;/del&gt; Absolutely not. I began by coming up with a rough plan of how I wanted this to work. Ghostty uses Sparkle, an extremely popular macOS update framework. I poked around their docs and found that they support custom UI through Obj-C protocols. You have to reimplement a ton of stuff from scratch, but it is possible.&lt;/p&gt;
    &lt;p&gt;Okay, so I had a rough idea of backend. For frontend, I wasn't really sure (and it isn't my area of expertise). I had this really vague idea that it should be a little button embedded in the title bar, and I know macOS supports custom UI in the titlebar via titlebar accessory controllers, but beyond that I didn't have much of a sense of how it should look or feel.&lt;/p&gt;
    &lt;p&gt;But that's enough to get started. AI is a very good prototyper, so even knowing what you don't know is useful enough to get started. I had a strong enough sense of the big picture.&lt;/p&gt;
    &lt;head rend="h2"&gt;First Session: Prototyping the UI&lt;/head&gt;
    &lt;p&gt;Here is my first agentic coding session, with the starting prompt:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;I want to enable custom, unobtrusive update notifications and installs by customizing SPUUserDriver. Let's start by planning the custom UI we'll need. We'll ONLY work on UI. Create a plan for creating SwiftUI views that can show the various states that are required by SPUUserDriver. I think the best place for these to show up is in the macOS window titlebars on the top-right. Create a plan to put it there. Consult the oracle.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Frequent question: "What is the oracle?" It is an Amp-specific read-only subagent that uses a slower, higher-cost model that is generally better at thinking about things. I consult the oracle for all planning.&lt;/p&gt;
    &lt;p&gt;To start, I decided to prototype the UI first.&lt;/p&gt;
    &lt;p&gt;Notice here that I don't send the agent off to build the full feature. There are a couple reasons for this. First and foremost, I still don't even know what I want the UI/UX to be like, so I can't possibly coherently expect an AI to do that for me amongst other changes. Second, smaller chunks of work are easier to review, understand, and iterate on.&lt;/p&gt;
    &lt;p&gt;Another thing to notice is that I ask it to only create a plan and not to write any code. Since this is a relatively vague request, it's important that I review a plan before it goes off and does a ton of work (and spends a ton of tokens doing it).&lt;/p&gt;
    &lt;p&gt;Tip: Creating a comprehensive plan interactively with an agent is a really important first-step for anything non-trivial. I usually also save it out (via the agent) to something like &lt;code&gt;spec.md&lt;/code&gt; and in future sessions I can say "Consult the @spec.md and work on some task".&lt;/p&gt;
    &lt;p&gt;The agent came up with an agreeable enough plan that I let it go ahead and implement it. You can see the rest of my conversations as I iterate on that.&lt;/p&gt;
    &lt;p&gt;The UI it made was directionally very good. It had a ton of polish issues (spacing, colors, etc.) but seeing the UI gave me the spark of inspiration I needed to know what I wanted.&lt;/p&gt;
    &lt;p&gt;Tip: I very often use AI for inspiration. In this case, I ended up keeping a lot (not all) of the UI code it made, but I will very often prompt an agent, throw away everything it did, and redo it myself (manually!). I find the "zero to one" stage of creation very difficult and time consuming and AI is excellent at being my muse.&lt;/p&gt;
    &lt;head rend="h3"&gt;Hitting a Wall&lt;/head&gt;
    &lt;p&gt;You can see in chats 11 to 14 that we're entering the slop zone. The code the agent created has a critical bug, and it's absolutely failing to fix it. And I have no idea how to fix it, either.&lt;/p&gt;
    &lt;p&gt;I'll often make these few hail mary attempts to fix a bug. If the agent can figure it out, I can study it and learn myself. If it doesn't, it costs me very little. If the agent figures it out and I don't understand it, I back it out. I'm not shipping code I don't understand. While it's failing, I'm also tabbed out searching the issue and trying to figure it out myself.&lt;/p&gt;
    &lt;p&gt;It's at this point that I know I need to step back, review what it did, and come up with my own plans. It's time to educate myself and think critically. AI is no longer the solution; it is a liability.&lt;/p&gt;
    &lt;head rend="h2"&gt;Cleanup Sessions&lt;/head&gt;
    &lt;p&gt;I spend the next few sessions guiding the agent to clean up the code.&lt;/p&gt;
    &lt;p&gt;The second session focused on moving some methods around into better places I recognized:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Let's move the pill background, foreground, and badge functions from @macos/Sources/Features/Update/UpdateAccessoryView.swift to @macos/Sources/Features/Update/UpdateViewModel.swift and make them more generic (background, foreground, badge)&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;The third session added documentation to the code:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Update the docs for @UpdateBadge.swift&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Tip: Adding documentation is a really important step because it helps reaffirm your own understanding of the code as well as educate future agents that may read and modify this code. I find agents do much better when they have both natural language descriptions as well as the code itself.&lt;/p&gt;
    &lt;p&gt;The fourth session moves the view model to an app-global location, since the original work put it in a window scope and update information is app scoped.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Move the update view model data to AppDelegate since the update information will be app-global.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Throughout these, I am usually dropping in and making minor manual changes as well.&lt;/p&gt;
    &lt;p&gt;The cleanup step is really important. To cleanup effectively you have to have a pretty good understanding of the code, so this forces me to not blindly accept AI-written code. Subsequently, better organized and documented code helps future agentic sessions perform better.&lt;/p&gt;
    &lt;p&gt;I sometimes tongue-in-cheek refer to this as the "anti-slop session".&lt;/p&gt;
    &lt;head rend="h2"&gt;Facing "The Bug"&lt;/head&gt;
    &lt;p&gt;Time to get back to that bug that I found in that initial session. I once again spent a few sessions trying to get the agent to figure this out. I start vague, and slowly get more specific with how I'd approach it.&lt;/p&gt;
    &lt;p&gt;First, the vague session:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;For standard, native tabs, the update accesory view is not visible. It should remain visible in the titlebar of the window.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Failure. Then, I get more specific:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;We need to update @macos/Sources/Features/Terminal/Window Styles/TerminalTabsTitlebarTahoe.swift tab bar constraints to align the right edge of the tab bar with the left edge of the update accessory view so it remains visible.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Failure. Then, I try a different, specific approach:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;What if we changed the @macos/Sources/Features/Terminal/Window Styles/TitlebarTabsTahoeTerminalWindow.swift to make the tab bar a top accessory view rather than a bottom one to make our tabs go into the titlebar?&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Failure. One last attempt:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;The "right accessory view" and layout of @macos/Sources/Features/Terminal/Window Styles/TitlebarTabsTahoeTerminalWindow.swift is conflictig with the update accessory view setup in @macos/Sources/Features/Terminal/Window Styles/TerminalWindow.swift Can we constrain the tab bar to always appear left of the update notice?&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Failure.&lt;/p&gt;
    &lt;p&gt;This whole time, I've also spent time trying to solve this myself through manual research and human effort. My more specific prompts are based on things I've learned through that process. But overall, it was clearly not working.&lt;/p&gt;
    &lt;p&gt;I don't think I can figure this out on my own, so I decide to pivot. I decided that for these problematic titlebar styles, let's put the update notices in the bottom-right corner of the window overlaid on top of the content view rather than in the titlebar.&lt;/p&gt;
    &lt;p&gt;I need to support this anyways because Ghostty has a configuration to hide the titlebar entirely. So, even if I can solve the titlebar styling issue later, I still need to support this other mode.&lt;/p&gt;
    &lt;p&gt;My next session moves forward with this plan with a very specific prompt:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Augment the @macos/Sources/Features/Update system to also support an overlay approach in @macos/Sources/Features/Terminal/TerminalView.swift The update notice should appear at the bottom of the window. It should go over the text (so it doesn't resize the terminal view). All clicking behaviors should otherwise be the same as the accessory view.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;It did a really good job with this. I did a lot of manual polish after (moving stuff around, renaming things, etc.) but the core work was solid.&lt;/p&gt;
    &lt;p&gt;Here is a video of the feature shortly after this session, showcasing how the update notice appears in the bottom-right corner of the window for certain titlebar styles or when the titlebar is hidden:&lt;/p&gt;
    &lt;head rend="h2"&gt;Starting the Backend&lt;/head&gt;
    &lt;p&gt;The UI was feeling good enough. I had noted a bunch of polish issues I wanted to tackle later but I wanted to move on to the backend work primarily to see if I'd discover any unknown unknowns that threw a wrench in my plans.&lt;/p&gt;
    &lt;p&gt;I manually created a file with a scaffold of incomplete functions and various &lt;code&gt;TODO&lt;/code&gt; comments. I then started
a session to complete that work for me:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Complete the @macos/Sources/Features/Update/UpdateDriver.swift Read the Sparkle documentaiton as necessary to understand the functionality. https://sparkle-project.org/documentation/api-reference/Protocols.html&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Tip: AI is very good at fill-in-the-blank or draw-the-rest-of-the-owl. My pattern here of creating scaffolding with descriptive function names, parameters, todo comments, etc. is a really common one for me and it works very well.&lt;/p&gt;
    &lt;p&gt;It actually did a really bad job here and I ended up throwing all of this code away. The code it produced worked, but it was obviously the wrong approach. It conflated a lot of different concerns and the way it was storing state in the driver was clearly wrong.&lt;/p&gt;
    &lt;p&gt;When I studied what it did, I realized it was because the view model was structured in a suboptimal way, so I switched gears into cleanup mode to give AI (and humans, if I chose to write it myself) the better framework to work with.&lt;/p&gt;
    &lt;head rend="h2"&gt;Cleanup Again, Big Time&lt;/head&gt;
    &lt;p&gt;Experience has taught me that the cleanliness of a UI frontend and business logic backend is often dictated by the quality of the view model in between. So I spent some time manually restructured the view model. This involved switching to a tagged union rather than the struct with a bunch of optionals. I renamed some types, moved stuff around.&lt;/p&gt;
    &lt;p&gt;I knew from experience that this small bit of manual work in the middle would set the agents up for success in future sessions for both the frontend and backend. After completing it, I continued with a marathon set of cleanup sessions.&lt;/p&gt;
    &lt;p&gt;After doing the restructuring, the first thing I did was ask the agent to once again complete the owl, this time inspecting my changes and updating dependent code to the new style and removing the old:&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;Update @macos/Sources/Features/Update/UpdateViewModel.swift to use the new&lt;/p&gt;&lt;code&gt;UpdateState&lt;/code&gt;exclusively. Rename&lt;code&gt;state2&lt;/code&gt;to&lt;code&gt;state&lt;/code&gt;(remove the old state).&lt;/quote&gt;
    &lt;p&gt;Then I asked it remove additional dead code:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;I think we can get rid of UpdateUIActions. They're not used anymore since our UpdateState has callbacks.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Then I broke the build myself cleaning up some things. I had a meeting to hop onto so I decided to let the agent fix it while I was busy:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Run the build and fix the errors&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Tip: "I broke a bunch of things, please fix my mess." is another frequent use case I have for agents. I'd say generally this fits within the same fill-in-the-blank pattern as before.&lt;/p&gt;
    &lt;p&gt;Later, I started doing some refactors on some of the views again:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Turn each @macos/Sources/Features/Update/UpdatePopoverView.swift case into a dedicated fileprivate Swift view that takes the typed value as its parameter so that we can remove the guards.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;quote&gt;&lt;p&gt;Change&lt;/p&gt;&lt;code&gt;iconName&lt;/code&gt;in @macos/Sources/Features/Update/UpdateViewModel.swift to be an optional, return nil for blank. Update usage.&lt;/quote&gt;
    &lt;head rend="h2"&gt;Simulation&lt;/head&gt;
    &lt;p&gt;In my first UI session, I had the agent create some demo code so I could see the UI in action without real update checks. But update flows have a number of scenarios and up to this point I only tested the happy path.&lt;/p&gt;
    &lt;p&gt;In my next session I extracted the simulation code into a dedicated file and asked the agent to create more scenarios:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Extract the update simulation code in @macos/Sources/App/macOS/AppDelegate.swift into a dedicated file in @macos/Sources/Features/Update . This should contain multiple simulation scenarios (happy path, not found, errors, etc.) so that we can easily try different demos.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Tip: Agents are great at generating tests and simulations. The simulation code specifically that it generated here is honestly pretty gross but it works and it's not part of the release binary so the quality doesn't matter to me. I didn't even bother cleaning it up beyond the basics you can see in the session.&lt;/p&gt;
    &lt;p&gt;I then ran the various simulations and found a number of UX improvements.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Cleaning up the "No Update Found" state&lt;/item&gt;
      &lt;item&gt;Reset state on confirming error&lt;/item&gt;
      &lt;item&gt;Copy and style changes for permission request state&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Last Mile&lt;/head&gt;
    &lt;p&gt;At this point, I had a working backend and frontend and I needed to hook it all up.&lt;/p&gt;
    &lt;p&gt;My next session prompted the agent to do this:&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;Make an&lt;/p&gt;&lt;code&gt;UpdateController&lt;/code&gt;class the same as https://github.com/sparkle-project/Sparkle/blob/2.x/Sparkle/SPUStandardUpdaterController.m but for our updater types.&lt;/quote&gt;
    &lt;p&gt;This required some back and forth and manual polish, but it got there.&lt;/p&gt;
    &lt;p&gt;I then made some minor improvements:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;For our update available state with the appcast, look at https://sparkle-project.org/documentation/api-reference/Classes/SUAppcastItem.html and show other relevant metadata if its set. For example, content length for size.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;head rend="h2"&gt;Anything Else?&lt;/head&gt;
    &lt;p&gt;My last prompt to an agent is always to ask what else I might be missing. I do this regardless of if I manually wrote the code myself or not.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Are there any other improvements you can see to be made with the @macos/Sources/Features/Update feature? Don't write any code. Consult the oracle. Consider parts of the code that can also get more unit tests added.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;This highlighted some real issues, so I went ahead and asked it to implement them. I find its easier to tell the agent "okay just do it all" rather than ask it specific things to do, since I can always easily clean it up in selective commits later.&lt;/p&gt;
    &lt;p&gt;An amusing thing in this session is that the agent started going down a really crazy rabbit hole and so I stepped in to stop it:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Stop stop stop. Undo all the main actor stuff.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;I also noticed that it did something rather poorly when there is a better way:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;For the error message, instead of truncating, isn't there a SwiftUI standard way to do this? We should add an additional UI element they can use to view the whole message.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;head rend="h2"&gt;Cost and Time&lt;/head&gt;
    &lt;p&gt;The work took a total of 16 separate sessions totalling $15.98 in token spend on Amp3. I won't try to speculate whether this is expensive or cheap in general, but I will say for me personally I spent more than that in coffee shops in the two calendar days I spent on this feature.&lt;/p&gt;
    &lt;p&gt;The total "wall clock" time I spent on this feature I estimate around 8 hours. I only spend around 4 hours a day on the computer the first and last commit span 3 days. But I also didn't spend all of my time on this feature. For example, I shipped a Ghostty update, was a guest on ThePrimeagen for an hour, and gave a guest presentation at Zoo's annual all-hands, all during the hours I have available for "computer work" during the same days I was working on this feature4. So, I think the 8 hour estimate is generous.&lt;/p&gt;
    &lt;p&gt;Many people on the internet argue whether AI enables you to work faster or not. In this case, I think I shipped this faster than I would have if I had done it all myself, in particular because iterating on minor SwiftUI styling is so tedious and time consuming for me personally and AI does it so well.&lt;/p&gt;
    &lt;p&gt;I think the faster/slower argument for me personally is missing the thing I like the most: the AI can work for me while I step away to do other things. Here is a picture I took of one of my cleanup sessions while I was making breakfast for my family:&lt;/p&gt;
    &lt;p&gt;There's all sorts of dismissals about this, such as "I don't want to be coding while I'm cooking" or "Be more present" or whatever. If that's how you want to be, that's fine. In my case, in this specific example, I'm the first person awake in my household and I prep breakfast while everyone else is still asleep. I don't do this every waking moment.&lt;/p&gt;
    &lt;p&gt;All this is to say: it works for me. I'm really, really not trying to convince you. I'm not associated financially with any AI company. But as someone who has a lot of success with AI tooling and likes to talk about it, people ask me to share examples all the time. That's what I'm doing here.&lt;/p&gt;
    &lt;head rend="h2"&gt;End&lt;/head&gt;
    &lt;p&gt;I think the feature is beautiful, works great, and after a final manual review I merged it5. For Ghostty users who are on the tip release, it is available now. For Ghostty users who are on tagged releases, this feature will be available in Ghostty 1.3.&lt;/p&gt;
    &lt;p&gt;I'm an outspoken advocate about the importance of sharing agentic coding sessions publicly6, with one of the reasons being that it's an incredibly powerful way to educate others about how to use these tools effectively. I hope this post helps demonstrate that.&lt;/p&gt;
    &lt;head rend="h2"&gt;Footnotes&lt;/head&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;It is currently only shipped to nightly beta testers ("tip" testers) but that is a group of thousands of people. It is merged and will be in the next stable Ghostty release. ↩&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Yes, it was good marketing. No, it was not on purpose. And no, I'm not celebrating it, because you don't want users to a fear a tool will take advantage of them. You want to trust that it's there to help. I want presenters (or anyone, really) to want to use Ghostty, and caring about stuff like this is part of that. ↩&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;The most poetic though would've been to use OpenAI Codex for this. I'm sure it would've done great! This post isn't an advertisement for Amp, it just happens to be the agentic coding tool I use the most currently. ↩&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;I have a toddler at home so my "computer time" is very scheduled and very limited. 😁 ↩&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;"Final manual review" is super super super important. This probably shouldn't be a footnote, but I couldn't find a better place to emphasize it. Please don't ever ship AI-written code without a thorough manual review. ↩&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;My reasoning for this could also be its own blog post, so I'm going to avoid explaining myself further here beyond what I already have. ↩&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://mitchellh.com/writing/non-trivial-vibing"/><published>2025-10-11T14:31:15+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45551260</id><title>Anthropic's Prompt Engineering Tutorial</title><updated>2025-10-12T11:07:17.418484+00:00</updated><content>&lt;doc fingerprint="574347d42b9f6eba"&gt;
  &lt;main&gt;
    &lt;p&gt;This course is intended to provide you with a comprehensive step-by-step understanding of how to engineer optimal prompts within Claude.&lt;/p&gt;
    &lt;p&gt;After completing this course, you will be able to:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Master the basic structure of a good prompt&lt;/item&gt;
      &lt;item&gt;Recognize common failure modes and learn the '80/20' techniques to address them&lt;/item&gt;
      &lt;item&gt;Understand Claude's strengths and weaknesses&lt;/item&gt;
      &lt;item&gt;Build strong prompts from scratch for common use cases&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This course is structured to allow you many chances to practice writing and troubleshooting prompts yourself. The course is broken up into 9 chapters with accompanying exercises, as well as an appendix of even more advanced methods. It is intended for you to work through the course in chapter order.&lt;/p&gt;
    &lt;p&gt;Each lesson has an "Example Playground" area at the bottom where you are free to experiment with the examples in the lesson and see for yourself how changing prompts can change Claude's responses. There is also an answer key.&lt;/p&gt;
    &lt;p&gt;Note: This tutorial uses our smallest, fastest, and cheapest model, Claude 3 Haiku. Anthropic has two other models, Claude 3 Sonnet and Claude 3 Opus, which are more intelligent than Haiku, with Opus being the most intelligent.&lt;/p&gt;
    &lt;p&gt;This tutorial also exists on Google Sheets using Anthropic's Claude for Sheets extension. We recommend using that version as it is more user friendly.&lt;/p&gt;
    &lt;p&gt;When you are ready to begin, go to &lt;code&gt;01_Basic Prompt Structure&lt;/code&gt; to proceed.&lt;/p&gt;
    &lt;p&gt;Each chapter consists of a lesson and a set of exercises.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;Chapter 1: Basic Prompt Structure&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Chapter 2: Being Clear and Direct&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Chapter 3: Assigning Roles&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;Chapter 4: Separating Data from Instructions&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Chapter 5: Formatting Output &amp;amp; Speaking for Claude&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Chapter 6: Precognition (Thinking Step by Step)&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Chapter 7: Using Examples&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;Chapter 8: Avoiding Hallucinations&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Chapter 9: Building Complex Prompts (Industry Use Cases)&lt;/p&gt;
        &lt;list rend="ul"&gt;
          &lt;item&gt;Complex Prompts from Scratch - Chatbot&lt;/item&gt;
          &lt;item&gt;Complex Prompts for Legal Services&lt;/item&gt;
          &lt;item&gt;Exercise: Complex Prompts for Financial Services&lt;/item&gt;
          &lt;item&gt;Exercise: Complex Prompts for Coding&lt;/item&gt;
          &lt;item&gt;Congratulations &amp;amp; Next Steps&lt;/item&gt;
        &lt;/list&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Appendix: Beyond Standard Prompting&lt;/p&gt;
        &lt;list rend="ul"&gt;
          &lt;item&gt;Chaining Prompts&lt;/item&gt;
          &lt;item&gt;Tool Use&lt;/item&gt;
          &lt;item&gt;Search &amp;amp; Retrieval&lt;/item&gt;
        &lt;/list&gt;
      &lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/anthropics/prompt-eng-interactive-tutorial"/><published>2025-10-11T18:06:40+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45551504</id><title>Microsoft only lets you opt out of AI photo scanning 3x a year</title><updated>2025-10-12T11:07:17.038582+00:00</updated><content>&lt;doc fingerprint="27d138be7ae4dabe"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Microsoft's OneDrive Begins Testing Face-Recognizing AI for Photos (for Some Preview Users) (microsoft.com) 55&lt;/head&gt;
    &lt;p&gt;And...&lt;/p&gt;
    &lt;p&gt;"You can only turn off this setting 3 times a year."&lt;/p&gt;
    &lt;p&gt;If I moved the slidebar for that setting to the left (for "No"), it moved back to the right, and said "Something went wrong while updating this setting." (Apparently it's not one of those three times of the year.)&lt;/p&gt;
    &lt;p&gt;The feature is already rolling out to a limited number of users in a preview, a Microsoft publicist confirmed to Slashdot. (For the record, I don't remember signing up for this face-recognizing "preview".) But there's a link at the bottom of the screen for a "Microsoft Privacy Statement" that leads to a Microsoft support page, which says instead that "This feature is coming soon and is yet to be released." And in the next sentence it's been saying "Stay tuned for more updates" for almost two years...&lt;/p&gt;
    &lt;p&gt;A Microsoft publicist agreed to answer Slashdot's questions...&lt;/p&gt;
    &lt;p&gt;Slashdot: What's the reason OneDrive tells users this setting can only be turned off 3 times a year? (And are those any three times — or does that mean three specific days, like Christmas, New Year's Day, etc.)&lt;/p&gt;
    &lt;p&gt;[Microsoft's publicist chose not to answer this question.]&lt;/p&gt;
    &lt;p&gt;Slashdot: If I move the slidebar to the left (for "No"), it moves back to the right, and says "Something went wrong while updating this setting." So is it correct to say that there's no way for users to select "No" now?&lt;/p&gt;
    &lt;p&gt;Microsoft: We haven't heard about the experience you are having with toggling, but our Microsoft contacts would like to investigate why this is happening for you. Can you share what type of device you are using, so we can put you in touch with the right team?&lt;/p&gt;
    &lt;p&gt;Slashdot: Is this feature really still "coming soon"? Can you give me more specific details on when "soon" will be?&lt;/p&gt;
    &lt;p&gt;Microsoft: This feature is currently rolling out to limited users in a preview so we can learn and improve. We have nothing more to share at this time.&lt;/p&gt;
    &lt;p&gt;Slashdot: I want to confirm something about how this feature is "yet to be released." Does this mean that currently OneDrive is not (and has never) used AI to "recognize" faces in photos?&lt;/p&gt;
    &lt;p&gt;Microsoft: Privacy is built into all Microsoft OneDrive experiences. Microsoft OneDrive services adhere to the Microsoft Privacy Statement and follow Microsoft's compliance with General Data Protection Regulation and the Microsoft EU Data Boundary.&lt;/p&gt;
    &lt;p&gt;Slashdot: Some privacy advocates prefer "opt-in" features, but it looks like here OneDrive is planning a (limited) opt-out feature. What is the reasoning for going with opt-out rather than opt-in?&lt;/p&gt;
    &lt;p&gt;Microsoft: Microsoft OneDrive inherits privacy features and settings from Microsoft 365 and SharePoint, where applicable.&lt;/p&gt;
    &lt;p&gt;Slashdot also spoke to EFF security/privacy activist Thorin Klosowski, who expressed concerns. "Any feature related to privacy really should be opt-in and companies should provide clear documentation so its users can understand the risks and benefits to make that choice for themselves."&lt;/p&gt;
    &lt;p&gt;Microsoft's "three times a year" policy also seemed limiting to Klosowski. "People should also be able to change those settings at-will whenever possible because we all encounter circumstances were we need to re-evaluate and possibly change our privacy settings."&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://hardware.slashdot.org/story/25/10/11/0238213/microsofts-onedrive-begins-testing-face-recognizing-ai-for-photos-for-some-preview-users"/><published>2025-10-11T18:36:51+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45552049</id><title>A Guide for WireGuard VPN Setup with Pi-Hole Adblock and Unbound DNS</title><updated>2025-10-12T11:07:16.735926+00:00</updated><content>&lt;doc fingerprint="b678e959f90921c1"&gt;
  &lt;main&gt;&lt;p&gt;I’ve used Mullvad as my VPN provider for a few years. Their service is good, they provide keys for 5 devices, rely on the Wireguard protocol, and offer alternative configurations as well. Despite that, my needs have changed and I wanted to be able to have granular control over DNS queries and the ability to connect my various devices on my network through simple addresses, such as http://emby.home.server. Enter Wireguard, Pi-Hole and Unbound.&lt;/p&gt;&lt;p&gt;Of course, there are many tools that might achieve the same results with a lot less work, such as Tailscale. I would reach devices on the network easily, one of the nodes could be set to act as an exit node and you could also apply network-wide ad-block with Next DNS (I believe that is, at the time of writing, the solution they offer). Outside of Tailscale there are other fully open source alternatives, such as Headscale, Nebula and others. However, I chose to set up my own Wireguard network, as it gave me the opportunity to learn a lot and helped me better understand everything involved in the process.&lt;/p&gt;&lt;p&gt;For devices, I have the following configuration, and the below IPs will be used throughout the article. They represent a starting point, but should be sufficient for anyone to build their network according to their needs.&lt;/p&gt;&lt;code&gt;10.10.10.1&lt;/code&gt;) - running on a VPS (Virtual Private Server) from a provider that meets my requirements (close physical proximity, high bandwidth and at least 1 Gbps transfer speeds)&lt;code&gt;10.10.10.10&lt;/code&gt;) - running on my home network and providing various service (media server, personal cloud, torrent client, etc.)&lt;code&gt;10.10.10.11&lt;/code&gt;) - running on my home network&lt;code&gt;10.10.10.12&lt;/code&gt;) - running on my home network, but might connect through outside networks (i.e.: coffee shops, libraries, airports, etc.)&lt;code&gt;10.10.10.100&lt;/code&gt;) - running on my home network, mobile data, mobile data roaming or public networks (coffee shops, libraries, airports, etc.)&lt;code&gt;10.10.10.101&lt;/code&gt;) - same as above&lt;p&gt;I will use a hub and spoke network topology where the VPS will act as the in-between for all inter-device communications on the network as well as the exit node for all Internet-facing communications. For example, if my Desktop connects to the Internet it will do so by navigating to the VPS, which will then resolve the query and block any domains that are on the block list. If it wants to connect to the Home Server it will do so without the VPS, since the Home Server and Desktop are on the same local network, connected via a router. If Smartphone 1 wants to connect to the Internet, the query is resolved by the VPS, which will block any domains on the block list. If it wants to connect to the Home Server, the VPS will receive the request and route it to the IP of the Home Server. It’s important to keep in mind that the contents of the request become visible as they leave the Wireguard tunnel between Smartphone 1 and the VPS. On the VPS contents will be encrypted again and then forwarded to the Home Server.&lt;/p&gt;&lt;p&gt;I chose a VPS provider that is physically near my location, has minimum 1 Gbps speed (up/down), unlimited bandwidth and good performance while gaming (i.e.: specifically no packet loss). There are many options; you can check resources like LowEndBox and VPSBenchmarks to get an idea of price ranges, availability and regions. For your own needs, start by defining a set of requirements and see which of these match your needs.&lt;/p&gt;&lt;p&gt;My only recommendation is to initially opt for a cheaper provider, that offers hourly billing and understand the end-to-end-process before committing. Keep in mind that various providers have different configurations and settings, so setups can vary.&lt;/p&gt;&lt;p&gt;If you are completely new to setting up servers using a command line interface (CLI) only, I recommend checking out the Digital Ocean cloud computing series. Most providers have their own guides, so for specific steps check their respective documentation. Same goes for any chosen OS. For this guide I will be using Ubuntu 24.04. For the remainder of the article I will assume you are running an OS with access to a terminal that can send commands to a CLI that can generate SSH keys, establish SSH connections and can run a text editor that you can use to create, edit, update and delete text files. I will be using BASH/Fish with &lt;code&gt;nano&lt;/code&gt; as my text editor.&lt;/p&gt;&lt;p&gt;To start, create an SSH key on your local machine and upload it to your chosen cloud provider. This first step already greatly improves security of the VPS and simplifies connection to it as you don’t need to remember a password.&lt;/p&gt;&lt;code&gt;# Run inside your terminal on your client machine 
# https://www.man7.org/linux/man-pages/man1/ssh-keygen.1.html
$ ssh-keygen -t ed25519
&lt;/code&gt;&lt;p&gt;Follow the on-screen prompts to provide a name, set a passphrase (recommended) and have the private and public files created at the given path in the prompt.&lt;/p&gt;&lt;p&gt;Next, copy the contents of the .pub file, or the file itself to your chosen VPS provider’s server setup page. Complete the initial server setup as per your provider’s steps. Once ready, you will have a public IPv4 address to which you can connect (this is a requirement in this guide, and some providers might only offer IPv6 addresses on their cheapest VPS). A connection can now be established with:&lt;/p&gt;&lt;code&gt;# replace root with the username your provider created by default; could be ubuntu as well
# replace 123.123.123.123 with the IP address of your VPS
$ ssh -i .ssh/article root@123.123.123.123
&lt;/code&gt;&lt;p&gt;You are now connected to the server, as the &lt;code&gt;root&lt;/code&gt; user. If you connected via another user that has &lt;code&gt;sudo&lt;/code&gt; access, then prepend all commands with &lt;code&gt;sudo&lt;/code&gt;. If I write &lt;code&gt;ufw status numbered&lt;/code&gt; use &lt;code&gt;sudo ufw status numbered&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;First, make sure you have &lt;code&gt;unattended-upgrades&lt;/code&gt; installed on your VPS.&lt;/p&gt;&lt;code&gt;$ apt install unattended-upgrades
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
unattended-upgrades is already the newest version (2.9.1+nmu4ubuntu1).
0 upgraded, 0 newly installed, 0 to remove and 29 not upgraded.
&lt;/code&gt;&lt;p&gt;Next, prepare the settings you want to apply. Because the application reads through different configuration files in order, I made a copy of /etc/apt/apt.conf.d/50unattended-upgrades and called it /etc/apt/apt.conf.d/51unattended-upgrades. This means that even after an update, while the original file could be overwritten, my settings will persist. The main settings I changed in my copy are found below. Read through the different options and adjust to your preferences.&lt;/p&gt;&lt;code&gt;# Make a copy and give a new name
$ cp /etc/apt/apt.conf.d/50unattended-upgrades /etc/apt/apt.conf.d/51unattended-upgrades
# Edit the file 
$ nano /etc/apt/apt.conf.d/51unattended-upgrades
# File contents below are edited for brevity
Unattended-Upgrade::Allowed-Origins {
        "${distro_id}:${distro_codename}";
        "${distro_id}:${distro_codename}-security";
        // Extended Security Maintenance; doesn't necessarily exist for
        // every release and this system may not have it installed, but if
        // available, the policy for updates is such that unattended-upgrades
        // should also install from here by default.
        "${distro_id}ESMApps:${distro_codename}-apps-security";
        "${distro_id}ESM:${distro_codename}-infra-security";
        "${distro_id}:${distro_codename}-updates";
};

// Remove unused automatically installed kernel-related packages
// (kernel images, kernel headers and kernel version locked tools).
Unattended-Upgrade::Remove-Unused-Kernel-Packages "true";

// Do automatic removal of newly unused dependencies after the upgrade
Unattended-Upgrade::Remove-New-Unused-Dependencies "true";

// Do automatic removal of unused packages after the upgrade
// (equivalent to apt-get autoremove)
Unattended-Upgrade::Remove-Unused-Dependencies "true";

// Automatically reboot *WITHOUT CONFIRMATION* if
// the file /var/run/reboot-required is found after the upgrade
Unattended-Upgrade::Automatic-Reboot "true";

// If automatic reboot is enabled and needed, reboot at the specific
// time instead of immediately
// Default: "now" - change this to whatever works for you!
Unattended-Upgrade::Automatic-Reboot-Time "00:00";
&lt;/code&gt;&lt;p&gt;Next, update the periodic file to provide &lt;code&gt;unattended-upgrades&lt;/code&gt; with the intervals at which it checks for updates and runs the clean command. Create a new file at /etc/apt/apt.conf.d/21periodic (you can name it anything else, as these are parsed in order, so 22periodic, 23…). The below are the values for the purposes of this server:&lt;/p&gt;&lt;code&gt;APT::Periodic::Update-Package-Lists "1";
APT::Periodic::Download-Upgradeable-Packages "1";
APT::Periodic::AutocleanInterval "7";
APT::Periodic::Unattended-Upgrade "1";
&lt;/code&gt;&lt;p&gt;Number 1 means the option is enabled and runs daily. Zero means the option is turned off. Any other number shows the frequency with which the step is completed (e.g.: 7 - the action is performed once a week).&lt;/p&gt;&lt;p&gt;Run &lt;code&gt;unattended-upgrade -d&lt;/code&gt; to quickly debug your current app configuration and confirm the settings you have setup so far.&lt;/p&gt;&lt;p&gt;Next off, I configure the system hostname. The hostname can then be used as part of a fully qualified domain name for the system (e.g.: hostname = pihole, fqdn = pihole.psyonik.com)&lt;/p&gt;&lt;code&gt;# you can check current hostname with
hostname
# set hostname to something else
hostnamectl set-hostname pihole
# edit hosts file to create static associations between IP addresses and hostnames/domains
# which the system prioritizes before DNS for name resolution
nano /etc/hosts
# The contents of the file might be similar, adjust them to match what I have below 
# replacing &amp;lt;pihole&amp;gt; and &amp;lt;psyonik&amp;gt; with your settings
127.0.0.1 localhost
127.0.0.1 pihole
127.0.1.1 pihole.psyonik.com pihole
# replace the below address with your VPS actual IP address
123.123.123.113 pihole.psyonik.com pihole
&lt;/code&gt;&lt;p&gt;I check if the hostname is setup correctly by calling &lt;code&gt;ping pihole.psyonik.com&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;As mentioned previously, I connect to the server by using &lt;code&gt;ssh -i .ssh/article root@123.123.123.123&lt;/code&gt;. The command passes in the path to the SSH key I use, sets the username I want to connect as, and sets the IP address of the server. By default, the SSH service runs on port 22. This is not explicitly stated in the connection command, it is just assumed as being set as such. One of the first things I like to change on a new VPS is the default port to something else. On Ubuntu 24.04 you will have this option in the sshd_config file, but the actual port used will be picked up from the &lt;code&gt;ssh.socket&lt;/code&gt; service. This can be confusing, as the setting is still present in the sshd_config file.&lt;/p&gt;&lt;p&gt;The first step is to make a copy of the configuration file and then edit the following lines in the original file.&lt;/p&gt;&lt;code&gt;$ cp /etc/ssh/sshd_config /etc/ssh/sshd_config.1
# Edit the SSH configuration - disable root login, password auth, enable pubkey login
$ nano /etc/ssh/sshd_config

# Find and edit the below values in the file
AddressFamily inet # SSH Service will only listen to IPv4 addresses
PermitRootLogin no # disable root login
PubkeyAuthentication yes # only allow SSH key-based authentication  
AuthorizedKeysFile .ssh/authorized_keys # file that contains allowed public keys  
PasswordAuthentication no # do not allow password auth  
PermitEmptyPasswords no # do not allow empty passwords 
ChallengeResponseAuthentication no # Specifies if challenge-response auth is allowed
UsePAM no # disable authentication through PAM (Pluggable Authentication Module)
&lt;/code&gt;&lt;p&gt;Next, I create a folder and a configuration file to change the SSH port for the &lt;code&gt;ssh.socket&lt;/code&gt;.&lt;/p&gt;&lt;code&gt;$ mkdir /etc/systemd/system/ssh.socket.d
# Create and add the values into the listen.conf file
$ nano /etc/systemd/system/ssh.socket.d/listen.conf
[Socket]
ListenStream=
ListenStream=12345
# Save and exit file
$ systemctl daemon-reload
# Restart the SSH Socket
$ systemctl restart ssh.socket
# Restart the SSH Service
$ systemctl restart ssh.service
# Check the status of the service after restart; you should see the new port number displayed
$ systemctl status ssh.service
# Output for my configuration
● ssh.service - OpenBSD Secure Shell server
     Loaded: loaded (/usr/lib/systemd/system/ssh.service; disabled; preset: enabled)
     Active: active (running) since Sun 1999-01-01 12:01:04 UTC; 5s ago
TriggeredBy: ● ssh.socket
       Docs: man:sshd(8)
             man:sshd_config(5)
    Process: 12928 ExecStartPre=/usr/sbin/sshd -t (code=exited, status=0/SUCCESS)
   Main PID: 12929 (sshd)
      Tasks: 1 (limit: 4543)
     Memory: 1.2M (peak: 1.3M)
        CPU: 36ms
     CGroup: /system.slice/ssh.service
             └─12929 "sshd: /usr/sbin/sshd -D [listener] 0 of 10-100 startups"

Jan 01 12:01:04 pihole systemd[1]: Starting ssh.service - OpenBSD Secure Shell server...
Jan 01 12:01:04 pihole sshd[12929]: Server listening on :: port 12345.
Jan 01 12:01:04 pihole systemd[1]: Started ssh.service - OpenBSD Secure Shell server.
&lt;/code&gt;&lt;p&gt;Now, in a new tab, if I try to connect with the previous command, this should not work. I would now also need to specify the port, but if I try to connect as &lt;code&gt;root&lt;/code&gt; this should get denied.&lt;/p&gt;&lt;code&gt;$ ssh -i .ssh/article -p 12345 root@123.123.123.123 # this should return an error
&lt;/code&gt;&lt;p&gt;While keeping my session open, I will create a new user, add the user to &lt;code&gt;sudo&lt;/code&gt;, copy the .ssh/authorized_keys file over to the new users home directory and try to connect with that user. I then complete the remaining configuration using &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;&lt;code&gt;# Create a new user and follow on-screen prompts
$ adduser psyonik
# Add user to sudo
$ usermod -aG sudo psyonik
# Copy authorizedkeys file to the new user folder and change ownership 
$ cp -r .ssh/ /home/psyonik/
$ chown psyonik:psyonik -R /home/psyonik/.ssh
# Ensure ownership is set correctly
$ ls -alh /home/psyonik/.ssh/
total 12K
drwx------ 2 psyonik psyonik 4.0K Jan  1 12:09 .
drwxr-x--- 3 psyonik psyonik 4.0K Jan  1 12:09 ..
-rw------- 1 psyonik psyonik  162 Jan  1 12:09 authorized_keys
&lt;/code&gt;&lt;p&gt;When I connect from my local machine to the VPS using this new username, the connection should be established correctly.&lt;/p&gt;&lt;code&gt;$ ssh -i .ssh/article -p 12345 psyonik@123.123.123.123
&lt;/code&gt;&lt;p&gt;This completes the setup of SSH. Next up, we setup the firewall. If you encounter issues, you can use &lt;code&gt;ssh -vvv&lt;/code&gt; to have verbose logging enabled during the SSH connection. This should highlight any issues such as access denied, incorrect keys or anything else of the sort.&lt;/p&gt;&lt;p&gt;Although the server can now do automatic updates, doesn’t rely on the default port to allow incoming connections and has &lt;code&gt;root&lt;/code&gt; login disabled, we still need to configure the firewall. There are various ways to do this, but I like to use &lt;code&gt;ufw&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Uncomplicated firewall is a great way to setup some basic rules and security on the server. I allow only 2 ports open on IPv4 on the server at this stage, enable logging, and deny all other incoming requests while allowing all outgoing requests.&lt;/p&gt;&lt;code&gt;# the SSH port should be replaced with whatever you wish to use instead
$ ufw allow from 0.0.0.0/0 to any port 12345 comment "SSH"
$ ufw allow from 0.0.0.0/0 to any port 51820 comment "Wireguard"
# block all incoming connections except those going to the SSH/Wireguard ports
$ ufw default deny incoming
# allow 
$ ufw default allow outgoing
# enable logging
$ ufw logging on
# enable ufw and display the rules in a numbered list
$ ufw enable
$ ufw status numbered
Status: active

     To                         Action      From
     --                         ------      ----
[ 1] 12345                      ALLOW IN    Anywhere                   # SSH
[ 2] 51820                      ALLOW IN    Anywhere                   # Wireguard
&lt;/code&gt;&lt;p&gt;Each time you edit a rule you can call &lt;code&gt;ufw reload&lt;/code&gt; to refresh the new rules. You can then check the status of the rules with &lt;code&gt;ufw status numbered&lt;/code&gt;. This also gives you an easy way to delete any unused rules.&lt;/p&gt;&lt;p&gt;Lastly, there is one more change that can be done so that the server will not respond to ping requests.&lt;/p&gt;&lt;code&gt;sudo nano /etc/ufw/before.rules
# Look for the following row and change from ACCEPT to DROP
-A ufw-before-input -p icmp --icmp-type echo-request -j DROP
&lt;/code&gt;&lt;p&gt;This completes a basic server configuration for this machine. Other settings can be changed and if I were to do this often, I would opt for a script file as a minimum, or ideally a cloud-init script. Feel free to explore that once you feel comfortable with this setup.&lt;/p&gt;&lt;p&gt;Next, I’ll setup Wireguard, Pi-Hole and Unbound.&lt;/p&gt;&lt;p&gt;Unlike traditional VPN services, where a central server acts as a point of control and has clients, Wireguard uses the concept of peers. Peers can connect directly to each other, thus allowing for lower latency for connections and removing the single point of failure of a server. However, for my purposes, I configured one of the peers, in Wireguard parlance, to act as a server due to the hub-and-spoke network topology I employ in this setup. As such, the VPS will be referred to as the ‘server’ and all other devices as ‘clients’.&lt;/p&gt;&lt;p&gt;I will expand this article once I have a configuration in which clients that need to be able to connect to each other will do so directly, without a VPS in-between.&lt;/p&gt;&lt;p&gt;Next, to setup each client and the server, I need to create keys for all devices and create configuration files using these keys. The below steps will create public, private and pre-shared keys for all devices.&lt;/p&gt;&lt;code&gt;# Install or make sure Wireguard is installed
$ apt install wireguard

# Create a folder to keep client keys and one for client configurations
# This is not strictly needed, as once clients are added, the keys can be removed from the server
# Except for the preshared keys 
$ mkdir /etc/wireguard/clients
$ mkdir /etc/wireguard/clientconfs

# Create VPS keys - key, pub, psk
$ wg genkey &amp;gt; vps.key # I use .key to show we're dealing with a private key
$ wg pubkey &amp;lt; vps.key &amp;gt; vps.pub # I use .pub to show this is a public key

$ wg genkey &amp;gt; /etc/wireguard/clients/homeserver.key
$ wg pubkey &amp;lt; /etc/wireguard/clients/homeserver.key &amp;gt; /etc/wireguard/clients/homeserver.pub
$ wg genpsk &amp;gt; /etc/wireguard/clients/homeserver.psk # I use .psk to show this is a preshared key

$ wg genkey &amp;gt; /etc/wireguard/clients/desktop.key
$ wg pubkey &amp;lt; /etc/wireguard/clients/desktop.key &amp;gt; /etc/wireguard/clients/desktop.pub
$ wg genpsk &amp;gt; /etc/wireguard/clients/desktop.psk

$ wg genkey &amp;gt; /etc/wireguard/clients/laptop.key
$ wg pubkey &amp;lt; /etc/wireguard/clients/laptop.key &amp;gt; /etc/wireguard/clients/laptop.pub
$ wg genpsk &amp;gt; /etc/wireguard/clients/laptop.psk

$ wg genkey &amp;gt; /etc/wireguard/clients/mobile1.key
$ wg pubkey &amp;lt; /etc/wireguard/clients/mobile1.key &amp;gt; /etc/wireguard/clients/mobile1.pub
$ wg genpsk &amp;gt; /etc/wireguard/clients/mobile1.psk

$ wg genkey &amp;gt; /etc/wireguard/clients/mobile2.key
$ wg pubkey &amp;lt; /etc/wireguard/clients/mobile2.key &amp;gt; /etc/wireguard/clients/mobile2.pub
$ wg genpsk &amp;gt; /etc/wireguard/clients/mobile2.psk
&lt;/code&gt;&lt;p&gt;With the keys created, I prepare the VPS configuration file. Each peer that wants to join the VPN needs its own configuration file. In Wireguard, the configuration file is split into two main sections: &lt;code&gt;[Interface]&lt;/code&gt; and &lt;code&gt;[Peer]&lt;/code&gt;. Each configuration file can contain zero, one or multiple peers that I can connect to. If I have one peer in my config, I’m connecting to that one device, if I have more, it means I can directly connect to all those peers.&lt;/p&gt;&lt;p&gt;In this case, the server will have multiple peers while the peers will each have a single peer: the server. The term interface is used because Wireguard creates a new network interface which is named according to the name of the configuration file.&lt;/p&gt;&lt;p&gt;Following this, I create a new configuration file named wg0, which means that once I start Wireguard with this configuration, I will have a new network interface called &lt;code&gt;wg0&lt;/code&gt;. This can be renamed to anything else.&lt;/p&gt;&lt;code&gt;$ nano /etc/wireguard/wg0.conf
# Next I will populate the file with the below information
[Interface]
# Replace the contents with the value you got in vps.key
PrivateKey = QELYVAdCPCaVQfoyE3KrADMZBBdoNotUseAsKeyThisIsMine+eWUA=
Address = 10.10.10.1/24 # the IP address the server will have inside the wg0 network 
ListenPort = 51820 # the port on which the server will listen for incoming connections
SaveConfig = true # https://manpages.debian.org/unstable/wireguard-tools/wg-quick.8.en.html
PreUp = sysctl -w net.ipv4.ip_forward=1 # enables ipv4 forwarding on the VPS
# PreUp = sysctl -w net.ipv6.conf.all.forward=1 if you use ipv6 instead
&lt;/code&gt;&lt;p&gt;At this stage I have the base for my Wireguard network on the server. But because I want to hide traffic from peers behind the server’s IP address I need to apply masquerading to the incoming requests from the clients, a function similar to NAT. To achieve this, we need to get the data coming in on the network interface Wireguard creates out to the network interface of the server and allow the server to alter the source IP.&lt;/p&gt;&lt;p&gt;The first step is finding the default network interface on the server, so I run the below command:&lt;/p&gt;&lt;code&gt;$ ip route list default
# Output could be something like: 
# default via 123.123.123.123 dev eth0 proto dhcp src 123.123.123.123 metric 100
&lt;/code&gt;&lt;p&gt;The important bit here is to see the device (in my sample above it is &lt;code&gt;dev eth0&lt;/code&gt;). This means I want to route requests that I receive out &lt;code&gt;eth0&lt;/code&gt; and apply masquerading, which makes it look like a request received from a smartphone originated from the server.&lt;/p&gt;&lt;p&gt;I will go back to the configuration and continue applying a few more settings to enable masquerading out the &lt;code&gt;eth0&lt;/code&gt; interface (again, this can be different on your machine) and allow traffic that comes in on the &lt;code&gt;wg0&lt;/code&gt; interface (named after the configuration file) to go out on &lt;code&gt;eth0&lt;/code&gt;.&lt;/p&gt;&lt;code&gt;$ nano /etc/wireguard/wg0.conf
# Next I will populate the file with the below information
[Interface]
PrivateKey = QELYVAdCPCaVQfoyE3KrADMZBBdoNotUseAsKeyThisIsMine+eWUA=
Address = 10.10.10.1/24 # the IP address the server will have inside the wg0 network 
ListenPort = 51820 # the port on which the server will listen for incoming connections
SaveConfig = true # https://manpages.debian.org/unstable/wireguard-tools/wg-quick.8.en.html
PreUp = sysctl -w net.ipv4.ip_forward=1 # enables ipv4 forwarding on the VPS
# PreUp = sysctl -w net.ipv6.conf.all.forward=1 if you use ipv6 instead
PostUp= ufw route allow in on wg0 out on eth0
PostUp= iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE
PreDown= ufw route delete allow in on wg0 out on eth0
PreDown= iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE
&lt;/code&gt;&lt;p&gt;This completes the configuration of the Wireguard interface. After exiting and saving the file, I enable a &lt;code&gt;systemd&lt;/code&gt; service that follows the name of the config file/interface and check to make sure it runs.&lt;/p&gt;&lt;code&gt;# Enable Wireguard service at system startup 
$ systemctl enable wg-quick@wg0.service
# Start Wireguard service
$ systemctl start wg-quick@wg0.service
# Check service status 
$ systemctl status wg-quick@wg0.service
● wg-quick@wg0.service - WireGuard via wg-quick(8) for wg0
     Loaded: loaded (/usr/lib/systemd/system/wg-quick@.service; enabled; preset: enabled)
     Active: active (exited) since Sun 2024-01-01 12:12:42 UTC; 1min 29s ago
       Docs: man:wg-quick(8)
             man:wg(8)
             https://www.wireguard.com/
             https://www.wireguard.com/quickstart/
             https://git.zx2c4.com/wireguard-tools/about/src/man/wg-quick.8
             https://git.zx2c4.com/wireguard-tools/about/src/man/wg.8
    Process: 13987 ExecStart=/usr/bin/wg-quick up wg0 (code=exited, status=0/SUCCESS)
   Main PID: 13987 (code=exited, status=0/SUCCESS)
        CPU: 325ms

Jan 01 12:12:41 pihole wg-quick[13997]: net.ipv4.ip_forward = 1
Jan 01 12:12:41 pihole wg-quick[13987]: [#] ip link add wg0 type wireguard
Jan 01 12:12:41 pihole wg-quick[13987]: [#] wg setconf wg0 /dev/fd/63
Jan 01 12:12:41 pihole wg-quick[13987]: [#] ip -4 address add 10.10.10.1/24 dev wg0
Jan 01 12:12:41 pihole wg-quick[13987]: [#] ip link set mtu 1420 up dev wg0
Jan 01 12:12:41 pihole wg-quick[13987]: [#] ufw route allow in on wg0 out on eth0
Jan 01 12:12:41 pihole wg-quick[14017]: Rule added
Jan 01 12:12:41 pihole wg-quick[14017]: Rule added (v6)
Jan 01 12:12:42 pihole wg-quick[13987]: [#] iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE
Jan 01 12:12:42 pihole systemd[1]: Finished wg-quick@wg0.service - WireGuard via wg-quick(8) for wg0.
# Check wireguard status directly and verify the key
$ wg
interface: wg0
  public key: qUo/OLUZadoNotUseAsKeyThisIsMineokE6T3pYl0c=
  private key: (hidden)
  listening port: 51820
# Show network interfaces
$ ip a
1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever  
2: eth0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether 1f:1f:1f:1f:1f:1f brd ff:ff:ff:ff:ff:ff
    inet 123.123.123.123/32 metric 100 scope global dynamic eth0
       valid_lft 60719sec preferred_lft 60719sec
4: wg0: &amp;lt;POINTOPOINT,NOARP,UP,LOWER_UP&amp;gt; mtu 1420 qdisc noqueue state UNKNOWN group default qlen 1000
    link/none 
    inet 10.10.10.1/24 scope global wg0
       valid_lft forever preferred_lft forever
&lt;/code&gt;&lt;p&gt;After this, I setup the first peer - remember, I need a configuration file for this. The private key field holds the private key of the peer, the pre-shared key is the value of the pre-shared key I created for the peer, and the public key section in the file holds the public key of the VPS.&lt;/p&gt;&lt;code&gt;# Just naming it dwg0 as for me it will be easy to see that this is the desktop config
# To bring this interface up on my desktop I would use `sudo wg-quick up dwg0`
$ nano dwg0.conf
[Interface]
# Replace with the private key file contents for THIS particular device, in my case desktop
PrivateKey = uIwALjBCXdoNotUseAsKeyThisIsMine1Vb/kI3XGXk=
# The address I had mentioned initially in the topology overview
Address = 10.10.10.11/32
# The VPS will act as a DNS server for this device
DNS = 10.10.10.1

[Peer]
# Replace with the public key file contents for your VPS, in my case vps.pub
PublicKey = qUo/OLUdoNotUseAsKeyThisIsMineWgokE6T3pYl0c=
# Replace with the value you got in your .psk file for THIS particular device, in my case desktop
PresharedKey = pMTDdoNotUseAsKeyThisIsMineeaGilNZRO9OGy3Q=
# https://www.procustodibus.com/blog/2021/03/wireguard-allowedips-calculator/#background
AllowedIPs = 0.0.0.0/0
# Replace 123.123.123.123:51820 with the IP of your VPS and the port you used if different
Endpoint = 123.123.123.123:51820
PersistentKeepalive = 25 # https://wiki.archlinux.org/title/WireGuard#Unable_to_establish_a_persistent_connection_behind_NAT_/_firewall
&lt;/code&gt;&lt;p&gt;At this stage, if I enable the configuration on my desktop, it will not connect to the server. First, I need to add the desktop as a peer of the VPS. I can do that by either bringing down the &lt;code&gt;wg0&lt;/code&gt; interface or by using the &lt;code&gt;wg set&lt;/code&gt; command. I use the latter, which edits the /etc/wireguard/wg0.conf file and adds a new entry under the &lt;code&gt;[Peer]&lt;/code&gt; section.&lt;/p&gt;&lt;code&gt;# The key that I provide to the command is the public key of the desktop 
$ wg set wg0 peer KKdoNotUseAsKeyThisIsMineRFCyZVorUW8m7E/3S0= preshared-key /etc/wireguard/clients/desktop.psk allowed-ips 10.10.10.11
# Check the peer has been added to the interface
$ wg
interface: wg0
  public key: qUo/OLUdoNotUseAsKeyThisIsMineWgokE6T3pYl0c=
  private key: (hidden)
  listening port: 51820

peer: KKdoNotUseAsKeyThisIsMineRFCyZVorUW8m7E/3S0=
  preshared key: (hidden)
  allowed ips: 10.10.10.11/32
&lt;/code&gt;&lt;p&gt;This completes this part of the setup. To use the server to resolve DNS queries and block ads, I setup Pi-Hole and Unbound next.&lt;/p&gt;&lt;p&gt;I installed Pi-Hole using the automated script from their website. I won’t go into the details of piping a script to bash directly, but for those of you who wish to dissect the script or use alternative methods, you can clone the repo and run the script that way, or you can download the installer file and run it. You can also use Docker to deploy it, but I won’t cover those in this guide.&lt;/p&gt;&lt;code&gt;$ curl -sSL https://install.pi-hole.net | bash
&lt;/code&gt;&lt;p&gt;You’ll be greeted by a step by step graphical install. Assuming you’re using a VPS with a dedicated IP, you can confirm that you do have a Static IP and select Continue. You’ll next be asked for the interface, at this stage select &lt;code&gt;wg0&lt;/code&gt; as we want Pi-Hole to run for those connected on the Wireguard interface.&lt;/p&gt;&lt;p&gt;For upstream DNS provider I selected Quad9 for now. Next you’ll be asked to confirm using the suggested block list, select Yes and continue the install. Select Yes for the admin interface and select Yes to install &lt;code&gt;lighttpd&lt;/code&gt; and the required PHP modules (adjust if you don’t wish to use these). It is up to yourself if you wish to enable query logging or not. You can turn this off later on, if you enable it now. Select the privacy level for the query log.&lt;/p&gt;&lt;p&gt;Once the install finishes you should see the IP on which Pi-Hole is running, the interface on which it is running and the password. Make sure to save the password.&lt;/p&gt;&lt;p&gt;With both the server and the client configured and Pi-Hole installed, we’re close to turning on the client. Before that, there is one thing to consider. The client configuration sets the server as the DNS resolver. However, the server currently only allows access to port 12345 (SSH) and port 51820 for Wireguard. Ubuntu has &lt;code&gt;systemd-resolved&lt;/code&gt; using port 53 for DNS resolution, but access to this port is currently restricted, so I’ll add one more rule to UFW on the server, to allow requests to port 53 coming from the Wireguard IP range I defined earlier.&lt;/p&gt;&lt;p&gt;I also want to be able to configure Pi-Hole once I bring the Wireguard interface up, so for that I need to tell UFW to allow connections to port 80 (HTTP) on the Wireguard IP range.&lt;/p&gt;&lt;code&gt;# Allow requests to port 53 from any ip in the 10.10.10.1 - 10.10.10.255 range
$ ufw allow from 10.10.10.0/24 to any port 53
# Allow requests to port 80 from any ip in the 10.10.10.1 - 10.10.10.255 range
$ ufw allow from 10.10.10.0/24 to any port 80
# Reload firewall to apply settings
$ ufw reload
# Check rules are showing up
$ ufw status numbered
&lt;/code&gt;&lt;p&gt;At this point, I can copy the contents of the client config to my desktop, bring up the interface on the desktop (using &lt;code&gt;wg-quick&lt;/code&gt;) and navigate to http://10.10.10.1/admin and change any settings on the Pi-Hole instance running on the VPS server. But before doing that, I want to have Unbound setup on the server too, and then bring up the interface on my desktop and change the DNS resolver on Pi-Hole from Quad9 to Unbound.&lt;/p&gt;&lt;p&gt;Unbound is a recursive, caching DNS resolver. During the Pi-Hole setup, I had picked an upstream DNS resolver, but the issue is, from a privacy standpoint, that the upstream server (in this case Quad9) knows my queries and the queries of everyone using VPS as their DNS, because it’s not VPS resolving the query, it just forwards it to the upstream provider. More information on this, along with the Unbound configuration and setup can be found on the Pi-Hole website.&lt;/p&gt;&lt;p&gt;In this guide I’ll just walk you through the setup of Unbound and the configuration I use. To start off, I’ll install unbound and configure it.&lt;/p&gt;&lt;code&gt;$ apt install unbound
&lt;/code&gt;&lt;p&gt;Chances are that at this point when you check the status of the Unbound service, it shows as failed. The reason is that you have already a resolver running on port 53. To get around this, I setup a new configuration for Unbound in line with the one provided in the Pi-Hole documentation, with a few tweaks to match my VPS and IP ranges.&lt;/p&gt;&lt;p&gt;I create the new configuration file at /etc/unbound/unbound.conf.d/pi-hole.conf, and more details on options and how to change them can be found at the Unbound configuration documentation.&lt;/p&gt;&lt;code&gt;$ nano /etc/unbound/unbound.conf.d/pi-hole.conf
# Add the below to the configuration file; adjust according to your needs and server capabilities  
server:
  num-threads: 4

  # Enable operation information logging; up to 5
  verbosity: 1

  # Listen to queries on all interfaces
  interface: 127.0.0.1
  port: 5353

  # Disable ipv6
  do-ip6: no

  # IP range authorized to send queries to DNS
  access-control: 0.0.0.0/0 refuse
  access-control: 127.0.0.1/32 allow
  access-control: 10.10.10.0/24 allow

  # Hide id.server and hostname.bind
  hide-identity: yes

  # Hide version.server and version.bind
  hide-version: yes

  # Hide addresses on the private network
  private-address: 10.0.0.0/8

  # A total number of unwanted replies is kept track of; when reached cache is cleared to prevent DNS Poisoning
  unwanted-reply-threshold: 10000000

  # Because my server has low traffic/usage I enable prefetch; this adds load but cache elements are prefetched before expiry
  prefetch: yes
  prefetch-key: yes

  # Add minimum cache lifetime in seconds
  cache-min-ttl: 1800
  cache-max-ttl: 14400

  # Secure DNS and use DNSSEC
  harden-glue: yes
  harden-dnssec-stripped: yes
&lt;/code&gt;&lt;p&gt;Next, I restart the service and run a test query to make sure it’s resolving it.&lt;/p&gt;&lt;code&gt;$ systemctl restart unbound.service
$ systemctl status unbound.service
$ dig news.ycombinator.com/ @127.0.0.1 -p 5353
; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.18.28-0ubuntu0.24.04.1-Ubuntu &amp;lt;&amp;lt;&amp;gt;&amp;gt; news.ycombinator.com/ @127.0.0.1 -p 5353
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NXDOMAIN, id: 31572
;; flags: qr rd ra ad; QUERY: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 1232
;; QUESTION SECTION:
;news.ycombinator.com/.		IN	A

;; AUTHORITY SECTION:
.			3563	IN	SOA	a.root-servers.net. nstld.verisign-grs.com. 2024120801 1800 900 604800 86400

;; Query time: 18 msec
;; SERVER: 127.0.0.1#5353(127.0.0.1) (UDP)
;; WHEN: Sun Jan 01 12:14:17 UTC 2024
;; MSG SIZE  rcvd: 125
&lt;/code&gt;&lt;p&gt;The query should now be resolved by Unbound as the &lt;code&gt;SERVER&lt;/code&gt; in the response gives &lt;code&gt;127.0.0.1#5353&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;With this, we’re almost done. I now turn on the Wireguard interface on the desktop as I have the configuration file prepared previously, and I added the client to the VPS’s list of peers.&lt;/p&gt;&lt;p&gt;This will disconnect the current SSH connection, but assuming all previous steps went OK, I am able to reconnect to the VPS server and also access http://10.10.10.1/admin to reach the admin interface for the current Pi-Hole installation.&lt;/p&gt;&lt;code&gt;# On my desktop I will enable the dwg0 service
$ sudo systemctl enable wg-quick@dwg0.service
# Start the dwg0 service which will create the dwg0 interface on my desktop 
# (I could also name this wg0, I just opted to rename it 
# to make it easier when working with multiple configs)
$ sudo systemctl start wg-quick@dwg0.service
# Check the status of the service and make sure it is active and running
$ sudo systemctl status wg-quick@dwg0.service
&lt;/code&gt;&lt;p&gt;Now I can go to the admin interface of the Pi-Hole installation I had setup earlier and change the DNS provider from Quad9 to the instance of Unbound that runs on port 5353 on the VPS.&lt;/p&gt;&lt;p&gt;Once I log into the interface using the password displayed at the end of the Pi-Hole installation, I next go to Settings, select the DNS tab and here uncheck the Quad9 section in the Upstream DNS Servers part of the page. Then, I check the Custom 1 (IPv4) checkbox and enter &lt;code&gt;127.0.0.1#5353&lt;/code&gt;, make sure that Bind only to interface wg0 is selected and then Save the settings.&lt;/p&gt;&lt;p&gt;Now I can visit DNS Leak Test and run an extended test. If everything runs as expected, the only result here should be the IP address of the VPS. If you are getting different servers showing up it means you are leaking DNS queries. There are a multitude of reasons for this, on Ubuntu derived distributions it might be down to Network Manager changing your DNS settings or you having different DNS servers configured which override the Wireguard DNS server.&lt;/p&gt;&lt;p&gt;This can be difficult to debug and it could take some time for you to chase it down, but some tips to get started would be to run &lt;code&gt;resolvectl dns&lt;/code&gt; which will show you the global DNS (if this was configured in /etc/systemd/resolved.conf) or if a global DNS is picked up from somewhere else like /run/systemd/resolve/resolved.conf or Network Manager. For Network Manager, check /etc/NetworkManager/system-connections and look for the name of your connection. The file in there will have a setting in the &lt;code&gt;[ipv4]&lt;/code&gt; section called &lt;code&gt;dns&lt;/code&gt;. This supports multiple DNS settings separated by semicolons.&lt;/p&gt;&lt;p&gt;There are further steps you could take and I recommend the following article by Andrea Corbellini. You can also check to see if it was indeed Pi-Hole that listened and resolved your query by running &lt;code&gt;lsof -i -P -n | grep LISTEN&lt;/code&gt; on the VPS and check to see if pihole is actually listening on port 53 or if there is another resolver that is using the port and responding to your queries.&lt;/p&gt;&lt;p&gt;While getting a configuration file from the VPS to a device with a keyboard is simple, Android and iOS devices aren’t that straightforward. To get a configuration over to a mobile device, I use &lt;code&gt;qrencode&lt;/code&gt;. The application creates a QR Code from a given configuration file.&lt;/p&gt;&lt;code&gt;# Install qrencode
$ apt install qrencode
# Create a QR Code from the previously created dwg0.conf file  
$ qrencode -t ansiutf8 &amp;lt; dwg0.conf
# If the file was created by root and you are now signed in with a non-root account then use 
$ sudo sh -c 'qrencode -t ansiutf8 &amp;lt; dwg0.conf'
&lt;/code&gt;&lt;p&gt;The above command outputs a QR code to the terminal directly, which you can then scan with the Wireguard application on iOS or Android. Don’t forget that you need different configuration files for each new device you wish to add, so don’t try to reuse the same configuration file across multiple devices.&lt;/p&gt;&lt;p&gt;One more goal that I wanted to achieve was that of being able to access my home server resources while I’m not on my home network. The final setup is a bit clunky, but it works for now. I’d be curious about any improvements any of you out there can think of. Feel free to e-mail me with any alternatives or ideas on the vpn email address for this domain.&lt;/p&gt;&lt;p&gt;First, go to the Pi-Hole administrator website, select Local DNS and then DNS Records. Then, add a number of domain/IP addresses to cover your use cases. While the VPN IP address range covers &lt;code&gt;10.10.10.0/24&lt;/code&gt; the local home network IP address range covers &lt;code&gt;192.168.1.0/24&lt;/code&gt;. Assuming these IP ranges, I ended up with the following list, assuming the home server runs on &lt;code&gt;10.10.10.10&lt;/code&gt; within the Wireguard network and &lt;code&gt;192.168.1.10&lt;/code&gt; on the local network:&lt;/p&gt;&lt;code&gt;192.168.1.10&lt;/code&gt;&lt;code&gt;10.10.10.10&lt;/code&gt;&lt;code&gt;192.168.1.10&lt;/code&gt;&lt;code&gt;10.10.10.10&lt;/code&gt;&lt;p&gt;The home server is running a reverse proxy in front of these services, so each call gets resolved by the reverse proxy to their respective services. The VPS is already allowing traffic to port &lt;code&gt;80&lt;/code&gt;, but if you are using HTTPS on any of these services, you would also need a rule to allow traffic to port &lt;code&gt;443&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Lastly, any request coming in on the VPS &lt;code&gt;wg0&lt;/code&gt; interface needs to be forwarded out on the same interface, so a couple more &lt;code&gt;ufw&lt;/code&gt; rules need added to allow any device to easily reach these services whether they sit on the same LAN, or connect via Wireguard.&lt;/p&gt;&lt;code&gt;# Set the following ufw rules on the VPS - this allows forwarding of requests received on wg0 on wg0
$ ufw route allow in on wg0 out on wg0
# Set the rule to allow HTTPS traffic if your services are running with HTTPS
$ ufw allow from 10.10.10.0/24 to any port 443
$ ufw reload
&lt;/code&gt;&lt;p&gt;An easier way to persist the rules is to add them to the &lt;code&gt;PostUp&lt;/code&gt; and &lt;code&gt;PreDown&lt;/code&gt; sections of the Wireguard configuration file. The above settings also mean that if I’m on my home network, I can use emby.home.server and access my home server with its local IP address and when I’m outside my home network, then I can access it via emby.travel.server. It’s not ideal, but this seemed to work most consistently across various OSes, devices and apps.&lt;/p&gt;&lt;p&gt;With this change, the travel or external domain should work, but the local one might not, depending on the device you try to access it from. That is because the &lt;code&gt;AllowedIPs&lt;/code&gt; setting tells Wireguard to route all traffic through the tunel, but the IP 192.168.1.10 is not reachable through the Wireguard network, as it is an internal network IP address. On most Linux distributions, there are default rules in place to route traffic to these internal or default IP ranges. On Linux you can check the default routes with &lt;code&gt;ip route show table main&lt;/code&gt;. On other devices, you need to adjust the &lt;code&gt;AllowedIPs&lt;/code&gt; setting, so that all traffic, except for that particular IP range, is routed through the Wireguard tunnel.&lt;/p&gt;&lt;p&gt;I used this Wireguard AllowedIPs Calculator to update the IP range for my mobile devices. By setting Allowed IPs on the page to &lt;code&gt;0.0.0.0/0&lt;/code&gt; and the Disallowed IPs to &lt;code&gt;192.168.1.0/24&lt;/code&gt;, I would get a list of &lt;code&gt;AllowedIPs&lt;/code&gt; like such:&lt;/p&gt;&lt;code&gt;AllowedIPs = 0.0.0.0/1, 128.0.0.0/2, 192.0.0.0/9, 192.128.0.0/11, 192.160.0.0/13, 192.168.0.0/24, 192.168.2.0/23, 192.168.4.0/22, 192.168.8.0/21, 192.168.16.0/20, 192.168.32.0/19, 192.168.64.0/18, 192.168.128.0/17, 192.169.0.0/16, 192.170.0.0/15, 192.172.0.0/14, 192.176.0.0/12, 192.192.0.0/10, 193.0.0.0/8, 194.0.0.0/7, 196.0.0.0/6, 200.0.0.0/5, 208.0.0.0/4, 224.0.0.0/3
&lt;/code&gt;&lt;p&gt;On mobile clients you can also go directly into the Wireguard app, click on edit and select the checkbox Exclude private IPs then save the changes to the configuration file. With these changes you should now be able to reach applications on your local network or through the tunnel using the above domain names.&lt;/p&gt;&lt;p&gt;If after the setup, you notice that your connection isn’t that great or that you see a significant drop in connection performance, you can test the connection speed between the VPS and a client that is running Linux using &lt;code&gt;iperf3&lt;/code&gt;. This is a good way to check if your speed is slow because of the VPS or some other factors. I would recommend using the Cloudflare Speedtest on a client to get an idea of your current speed without the Wireguard tunnel enabled.&lt;/p&gt;&lt;p&gt;You can then use the &lt;code&gt;speedtest-cli&lt;/code&gt; application on the VPS to test its upload and download connection and then use &lt;code&gt;iperf3&lt;/code&gt; to test the speed of the connection between client and VPS to find any bottlenecks.&lt;/p&gt;&lt;p&gt;On the VPS I install &lt;code&gt;iperf3&lt;/code&gt; and allow connections on port &lt;code&gt;5201&lt;/code&gt; to run the speed test. I then start &lt;code&gt;iperf3&lt;/code&gt; in server mode, which sets it up to listen for incoming requests.&lt;/p&gt;&lt;code&gt;# Install iperf3 if not already installed
$ apt install iperf3
# Allow connections on port 5201 from the Wireguard IP range
$ ufw allow from 10.10.10.0/24 to any port 5201
$ ufw reload
# Start iperf3 in server mode
$ iperf3 --server
# Install iperf3 on client too and then start a test by defining the ip of the VPS on the Wireguard network
# The below command will test the upload speed from client to VPS
$ iperf3 --client 10.10.10.1
Connecting to host 10.10.10.1, port 5201
[  5] local 10.10.10.11 port 56590 connected to 10.10.10.1 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-1.00   sec  1.21 MBytes  10.1 Mbits/sec    0   81.5 KBytes       
[  5]   1.00-2.00   sec  2.39 MBytes  20.1 Mbits/sec    0    195 KBytes       
[  5]   2.00-3.00   sec  2.94 MBytes  24.7 Mbits/sec    0    331 KBytes       
[  5]   3.00-4.00   sec  3.37 MBytes  28.3 Mbits/sec    0    484 KBytes       
[  5]   4.00-5.00   sec  3.86 MBytes  32.4 Mbits/sec    0    640 KBytes       
[  5]   5.00-6.00   sec  2.45 MBytes  20.5 Mbits/sec    0    786 KBytes       
[  5]   6.00-7.00   sec  3.86 MBytes  32.4 Mbits/sec    0    945 KBytes       
[  5]   7.00-8.00   sec  3.50 MBytes  29.3 Mbits/sec    0   1.08 MBytes       
[  5]   8.00-9.00   sec  3.75 MBytes  31.5 Mbits/sec    0   1.23 MBytes       
[  5]   9.00-10.00  sec  2.50 MBytes  21.0 Mbits/sec    0   1.35 MBytes       
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-10.00  sec  29.8 MBytes  25.0 Mbits/sec    0             sender
[  5]   0.00-10.61  sec  27.6 MBytes  21.8 Mbits/sec                  receiver

iperf Done.
# The below command will test the download speed from VPS to the client
$ iperf3 --client 10.10.10.1 --reverse
Connecting to host 10.10.10.1, port 5201
Reverse mode, remote host 10.10.10.1 is sending
[  5] local 10.10.10.11 port 34346 connected to 10.10.10.1 port 5201
[ ID] Interval           Transfer     Bitrate
[  5]   0.00-1.00   sec  3.50 MBytes  29.4 Mbits/sec                  
[  5]   1.00-2.00   sec  7.35 MBytes  61.7 Mbits/sec                  
[  5]   2.00-3.00   sec  11.7 MBytes  98.0 Mbits/sec                  
[  5]   3.00-4.00   sec  23.6 MBytes   198 Mbits/sec                  
[  5]   4.00-5.00   sec  39.6 MBytes   332 Mbits/sec                  
[  5]   5.00-6.00   sec  44.4 MBytes   372 Mbits/sec                  
[  5]   6.00-7.00   sec  40.6 MBytes   340 Mbits/sec                  
[  5]   7.00-8.00   sec  40.5 MBytes   340 Mbits/sec                  
[  5]   8.00-9.00   sec  38.4 MBytes   322 Mbits/sec                  
[  5]   9.00-10.00  sec  40.8 MBytes   342 Mbits/sec                  
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-10.05  sec   294 MBytes   245 Mbits/sec    0             sender
[  5]   0.00-10.00  sec   290 MBytes   244 Mbits/sec                  receiver

iperf Done.
&lt;/code&gt;&lt;p&gt;In the above tests I can see that my upload speed to this test VPS is between 10 and 30 Mbps and my download speed is between 30 and 340 Mbps. After completing the test, I can stop the server on the VPS and even close down the port. For more information on tuning the performance of Wireguard, I recommend the detailed article on the Pro Custodibus website.&lt;/p&gt;&lt;p&gt;At this stage, you should have your VPS setup, your first two devices connected and you should also be able to access any remote resources.&lt;/p&gt;&lt;p&gt;Most of this could not be done without the articles below. These were great resources and I would greatly recommend them for further reading of a particular topic:&lt;/p&gt;&lt;p&gt;There are plenty more websites that I read through for quick fixes and I apologise for not recording those consistently, as the information there helped me fix some local issues on my Pop OS desktop.&lt;/p&gt;&lt;p&gt;In any case, I hope this article was useful and helped you setup your own Wireguard VPN server, access resources on your home network and provide network-wide ad-block for all your devices. By using a VPS you can generally cover a variety of devices for around $10 a month. This beats a lot of the providers out there and it does so while offering you full control over blocking lists and resources on the network.&lt;/p&gt;&lt;p&gt;If this guide was useful in any way, please make sure to support the Wireguard project, the Pi-Hole project, Unbound and all the other open source projects that allow us to gain some modicum of control over out digital lives!&lt;/p&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://psyonik.tech/posts/a-guide-for-wireguard-vpn-setup-with-pi-hole-adblock-and-unbound-dns/"/><published>2025-10-11T19:41:27+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45553132</id><title>Ask HN: Abandoned/dead projects you think died before their time and why?</title><updated>2025-10-12T11:07:15.168503+00:00</updated><content>&lt;doc fingerprint="37aa99571fa72dd9"&gt;
  &lt;main&gt;
    &lt;p&gt;- Photon, the graphical interface for QNX. Oriented more towards real time (widgets included gauges) but good enough to support two different web browsers. No delays. This was a real time operating system.&lt;/p&gt;
    &lt;p&gt;- MacOS 8. Not the Linux thing, but Copeland. This was a modernized version of the original MacOS, continuing the tradition of no command line. Not having a command line forces everyone to get their act together about how to install and configure things. Probably would have eased the tradition to mobile. A version was actually shipped to developers, but it had to be covered up to justify the bailout of Next by Apple to get Steve Jobs.&lt;/p&gt;
    &lt;p&gt;- Transaction processing operating systems. The first one was IBM's Customer Information Control System. A transaction processor is a kind of OS where everything is like a CGI program - load program, do something, exit program. Unix and Linux are, underneath, terminal oriented time sharing systems.&lt;/p&gt;
    &lt;p&gt;- IBM MicroChannel. Early minicomputer and microcomputer designers thought "bus", where peripherals can talk to memory and peripherals look like memory to the CPU. Mainframes, though, had "channels", simple processors which connected peripherals to the CPU. Channels could run simple channel programs, and managed device access to memory. IBM tried to introduce that with the PS2, but they made it proprietary and that failed in the marketplace. Today, everything has something like channels, but they're not a unified interface concept that simplifies the OS.&lt;/p&gt;
    &lt;p&gt;- CPUs that really hypervise properly. That is, virtual execution environments look just like real ones. IBM did that in VM, and it worked well because channels are a good abstraction for both a real machine and a VM. Storing into device registers to make things happen is not. x86 has added several layers below the "real machine" layer, and they're all hacks.&lt;/p&gt;
    &lt;p&gt;- The Motorola 680x0 series. Should have been the foundation of the microcomputer era, but it took way too long to get the MMU out the door. The original 68000 came out in 1978, but then Motorola fell behind.&lt;/p&gt;
    &lt;p&gt;- Modula. Modula 2 and 3 were reasonably good languages. Oberon was a flop. DEC was into Modula, but Modula went down with DEC.&lt;/p&gt;
    &lt;p&gt;- XHTML. Have you ever read the parsing rules for HTML 5, where the semantics for bad HTML were formalized? Browsers should just punt at the first error, display an error message, and render the rest of the page in Times Roman. Would it kill people to have to close their tags properly?&lt;/p&gt;
    &lt;p&gt;- Word Lens. Look at the world through your phone, and text is translated, standalone, on the device. No Internet connection required. Killed by Google in favor of hosted Google Translate.&lt;/p&gt;
    &lt;p&gt;&amp;gt;- XHTML. [...] Would it kill people to have to close their tags properly?&lt;/p&gt;
    &lt;p&gt;XHTML appeals to the intuition that there should be a Strict Right Way To Do Things ... but you can't use that unforgiving framework for web documents that are widely shared.&lt;/p&gt;
    &lt;p&gt;The "real world" has 2 types of file formats:&lt;/p&gt;
    &lt;p&gt;(1) file types where consumers cannot contact/control/punish the authors (open-loop) : HTML, pdf, zip, csv, etc. The common theme is that the data itself is more important that the file format. That's why Adobe Reader will read malformed pdf files written by buggy PDF libraries. And both 7-Zip and Winrar can read malformed zip files with broken headers (because some old buggy Java libraries wrote bad zip files). MS Excel can import malformed csv files. E.g. the Citi bank export to csv wrote a malformed file and it was desirable that MS Excel imported it anyway because the raw data of dollar amounts was more important than the incorrect commas in the csv file -- and -- I have no way of contacting the programmer at Citi to tell them to fix their buggy code that created the bad csv file.&lt;/p&gt;
    &lt;p&gt;(2) file types where the consumer can control the author (closed-loop): programming language source code like .c, .java, etc or business interchange documents like EDI. There's no need to have a "lenient forgiving" gcc/clang compiler to parse ".c" source code because the "consumer-and-author" will be the same person. I.e. the developer sees the compiler stop at a syntax error and then fix it and try to re-compile. For business interchange formats like EDI, a company like Walmart can tell the vendor to fix their broken EDI files.&lt;/p&gt;
    &lt;p&gt;XHTML wants to be in group (2) but web surfers can't control all the authors of .html so that's why lenient parsing of HTML "wins". XHTML would work better in a "closed-loop" environment such as a company writing internal documentation for its employees. E.g. an employee handbook can be written in strict XHTML because both the consumers and authors work at the same company. E.g. can't see the vacation policy because the XHTML syntax is wrong?!? Get on the Slack channel and tell the programmer or content author to fix it.&lt;/p&gt;
    &lt;p&gt;The problem is that group (1) results in a nightmarish race-to-the-bottom. File creators have zero incentive to create spec-compliant files, because there's no penalty for creating corrupted files. In practice this means a large proportion of documents are going to end up corrupt. Does it open in Chrome? Great, ship it! The file format is no longer the specification, but it has now become a wild guess at whatever weird garbage the incumbent is still willing to accept. This makes it virtually impossible to write a new parser, because the file format suddenly has no specification.&lt;/p&gt;
    &lt;p&gt;On the other hand, imagine a world where Chrome would slowly start to phase out its quirks modes. Something like a yellow address bar and a "Chrome cannot guarantee the safety of your data on this website, as the website is malformed" warning message. Turn it into a red bar and a "click to continue" after 10 years, remove it altogether after 20 years. Suddenly it's no longer that one weird customer who is complaining, but everyone - including your manager. Your mistakes are painfully obvious during development, so you have a pretty good incentive to properly follow the spec. You make a mistake on a prominent page and the CTO sees it? Well, guess you'll be adding an XHTML validator to your CI pipeline next week!&lt;/p&gt;
    &lt;p&gt;It is very tempting to write a lenient parser when you are just one small fish in a big ecosystem, but over time it will inevitably lead to the degradation of that very ecosystem. You need some kind of standards body to publish a validating reference parser. And like it or not, Chrome is big enough that it can act as one for HTML.&lt;/p&gt;
    &lt;p&gt;&amp;gt; - XHTML. Have you ever read the parsing rules for HTML 5, where the semantics for bad HTML were formalized? Browsers should just punt at the first error, display an error message, and render the rest of the page in Times Roman. Would it kill people to have to close their tags properly?&lt;/p&gt;
    &lt;p&gt;We stop at the first sign of trouble for almost every other format, we do not need lax parsing for HTML. This has caused a multitude of security vulnerabilities and only makes it more difficult for pretty much everybody.&lt;/p&gt;
    &lt;p&gt;The attitude towards HTML5 parsing seemed to grow out of this weird contrarianism that everybody who wanted to do better than whatever Internet Explorer did had their head in the clouds and that the role of a standard was just to write down all the bugs.&lt;/p&gt;
    &lt;p&gt;- I think without the move to NeXT, even if Jobs had come back to Apple, they would never have been able to get to the iPhone. iOS was - and still is - a unix-like OS, using unix-like philosophy, and I think that philosophy allowed them to build something game-changing compared to the SOTA in mobile OS technology at the time. So much so, Android follows suit. It doesn't have a command line, and installation is fine, so I'm not sure your line of reasoning holds strongly. One thing I think you might be hinting at though that is a missed trick: macOS today could learn a little from the way iOS and iPadOS is forced to do things and centralise configuration in a single place.&lt;/p&gt;
    &lt;p&gt;- I think transaction processing operating systems have been reinvented today as "serverless". The load/execute/quit cycle you describe is how you build in AWS Lambdas, GCP Cloud Run Functions or Azure Functions.&lt;/p&gt;
    &lt;p&gt;- Most of your other ideas (with an exception, see below), died either because of people trying to grab money rather than build cool tech, and arguably the free market decided to vote with its feet - I do wonder when we might next get a major change in hardware architectures again though, it does feel like we've now got "x86" and "ARM" and that's that for the next generation.&lt;/p&gt;
    &lt;p&gt;- XHTML died because it was too hard for people to get stuff done. The forgiving nature of the HTML specs is a feature, not a bug. We shouldn't expect people to be experts at reading specs to publish on the web, nor should it need special software that gatekeeps the web. It needs to be scrappy, and messy and evolutionary, because it is a technology that serves people - we don't want people to serve the technology.&lt;/p&gt;
    &lt;p&gt;&amp;gt; XHTML died because it was too hard for people to get stuff done.&lt;/p&gt;
    &lt;p&gt;This is not true. The reason it died was because Internet Explorer 6 didn’t support it, and that hung around for about a decade and a half. There was no way for XHTML to succeed given that situation.&lt;/p&gt;
    &lt;p&gt;The syntax errors that cause XHTML to stop parsing also cause JSX to stop parsing. If this kind of thing really were a problem, it would have killed React.&lt;/p&gt;
    &lt;p&gt;People can deal with strict syntax. They can manage it with JSX, they can manage it with JSON, they can manage it with JavaScript, they can manage it with every back-end language like Python, PHP, Ruby, etc. The idea that people see XHTML being parsed strictly and give up has never had any truth to it.&lt;/p&gt;
    &lt;p&gt;On XHTML, I think there was room for both HTML and a proper XHTML that barks on errors. If you're a human typing HTML or using a language where you build your HTML by concatenation like early PHP, sure it makes sense to allow loosey goosey HTML but if you're using any sort of simple DOM builder which should preclude you from the possibility of outputting invalid HTML, strict XHTML makes a lot more sense.&lt;/p&gt;
    &lt;p&gt;Honestly I'm disappointed the promised XHTML5 never materialized along side HTML5. I guess it just lost steam.&lt;/p&gt;
    &lt;p&gt;But a HTML5 parser will obviously parse "strict" HTML5 just fine too, what value is there to special-case the "this was generated by a DOM builder" path client-side?&lt;/p&gt;
    &lt;p&gt;&amp;gt; Honestly I'm disappointed the promised XHTML5 never materialized along side HTML5. I guess it just lost steam.&lt;/p&gt;
    &lt;p&gt;The HTML Standard supports two syntaxes, HTML and XML. All browsers support XML syntax just fine—always have, and probably always will. Serve your file as application/xhtml+xml, and go ham.&lt;/p&gt;
    &lt;p&gt;&amp;gt; Would it kill people to have to close their tags properly?&lt;/p&gt;
    &lt;p&gt;Probably not, but what would be the benefit of having more pages fail to render? If xhtml had been coupled with some cool features which only worked in xhtml mode, it might have become successful, but on its own it does not provide much value.&lt;/p&gt;
    &lt;p&gt;&amp;gt; but what would be the benefit of having more pages fail to render?&lt;/p&gt;
    &lt;p&gt;I think those benefits are quite similar to having more programs failing to run (due to static and strong typing, other static analysis, and/or elimination of undefined behavior, for instance), or more data failing to be read (due to integrity checks and simply strict parsing): as a user, you get documents closer to valid ones (at least in the rough format), if anything at all, and additionally that discourages developers from shipping a mess. Then parsers (not just those in viewers, but anything that does processing) have a better chance to read and interpret those documents consistently, so even more things work predictably.&lt;/p&gt;
    &lt;p&gt;HTML5 was the answer for the consistency part: where before browsers did different things to recover from "invalid" HTML, HTML5 standardizes it because it doesn't care about valid/invalid as much, it just describes behavior anyways.&lt;/p&gt;
    &lt;p&gt;Sure, authoring tools should help authors avoid mistakes and produce valid content. But the browser is a tool for the consumer of content, and there is no benefit for the user if it fails to to render some existing pages.&lt;/p&gt;
    &lt;p&gt;It is like Windows jumping through hoops to support backwards compatibility even with buggy software. The interest of the customer is that the software runs.&lt;/p&gt;
    &lt;p&gt;if developer accidentally left opening comment at the start of the html.&lt;/p&gt;
    &lt;p&gt;Rhetorical question: Should the browser display page even if it is commented out?&lt;/p&gt;
    &lt;p&gt;There is some bar for what is expected to work.&lt;/p&gt;
    &lt;p&gt;If all browsers would consistently error out on unclosed tags, then it would definitely force developers to close tags, it would force it become common knowledge, second nature.&lt;/p&gt;
    &lt;p&gt;&amp;gt; there is no benefit for the user if it fails to to render some existing pages&lt;/p&gt;
    &lt;p&gt;What if the browser renders it incorrectly? If a corrupt tag combination leads to browser X parsing "&amp;lt;script&amp;gt;" as inline text but browser Y parsing it as a script tag, that could lead to serious security issues!&lt;/p&gt;
    &lt;p&gt;Blindly guessing at the original author's intent whenever you encounter buggy content is a recipe for disaster. Sometimes it is to the user's benefit to just refuse to render it.&lt;/p&gt;
    &lt;p&gt;XHTML is XML. XML-based markup for content can be typeset into PDF, suitable for print media. I invite you to check out the PDFs listed in the intro to my feature matrix comparison page, all being sourced from XHTML:&lt;/p&gt;
    &lt;p&gt;&amp;gt; Would it kill people to have to close their tags properly&lt;/p&gt;
    &lt;p&gt;It would kill the approachability of the language.&lt;/p&gt;
    &lt;p&gt;One of the joys of learning HTML when it tended to be hand-written was that if you made a mistake, you'd still see something just with distorted output.&lt;/p&gt;
    &lt;p&gt;That was a lot more approachable for a lot of people who were put off "real" programming languages because they were overwhelmed by terrible error messages any time they missed a bracket or misspelled something.&lt;/p&gt;
    &lt;p&gt;If you've learned to program in the last decade or two, you might not even realise just how bad compiler errors tended to be in most languages.&lt;/p&gt;
    &lt;p&gt;The kind of thing where you could miss a bracket on line 47 but end up with a compiler error complaining about something 20 lines away.&lt;/p&gt;
    &lt;p&gt;Rust ( in particular ) got everyone to bring up their game with respect to meaningful compiler errors.&lt;/p&gt;
    &lt;p&gt;But in the days of XHTML? Error messages were arcane, you had to dive in to see what the problem actually was.&lt;/p&gt;
    &lt;p&gt;If you forget a closing quote on an attribute in html, all content until next quote is ignored and not rendered - even if it is the rest of the page. I dont think this is more helpful than an error message. It was just simpler to implement.&lt;/p&gt;
    &lt;p&gt;For reference, observe what happens if you try opening this malformed document in a browser: save it with a .xhtml extension, or serve it with MIME type application/xhtml+xml.&lt;/p&gt;
    &lt;p&gt;Firefox displays naught but the error:&lt;/p&gt;
    &lt;p&gt;XML Parsing Error: mismatched tag. Expected: &amp;lt;/b&amp;gt;. Location: file:///tmp/x.xhtml Line Number 22, Column 3: &amp;lt;/p&amp;gt; --^&lt;/p&gt;
    &lt;p&gt;Chromium displays this banner on top of the document up to the error:&lt;/p&gt;
    &lt;p&gt;This page contains the following errors: error on line 22 at column 5: Opening and ending tag mismatch: b line 19 and p Below is a rendering of the page up to the first error.&lt;/p&gt;
    &lt;p&gt;I love this mismatched list of grievances and I find myself agreeing with most of them. XHTML and proper CPU hypervisors in particular.&lt;/p&gt;
    &lt;p&gt;People being too lazy to close the &amp;lt;br /&amp;gt; tag was apparently a gateway drug into absolute mayhem. Modern HTML is a cesspool. I would hate to have to write a parser that's tolerant enough to deal with all the garbage people throw at it. Is that part of the reason why we have so few browsers?&lt;/p&gt;
    &lt;p&gt;The reason XHTML failed is because the spec required it to be sent with a new MIME type (application/xml+xhtml I believe) which no webserver did out of the box. Everything defaulted to text/html, which all browsers would interpret as HTML, and given the mismatching doctype, would interpret as tag soup (quirks mode/lenient).&lt;/p&gt;
    &lt;p&gt;Meanwhile, local files with the doctype would be treated as XHTML, so people assumed the doctype was all you needed. So everyone who tried to use XHTML didn't realize that it would go back to being read as HTML when they upload it to their webserver/return it from PHP/etc. Then, when something went wrong/worked differently than expected, the author would blame XHTML.&lt;/p&gt;
    &lt;p&gt;Edit: I see that I'm getting downvoted here; if any of this is factually incorrect I would like to be educated please.&lt;/p&gt;
    &lt;p&gt;&amp;gt; The reason XHTML failed is because the spec required it to be sent with a new MIME type (application/xml+xhtml I believe) which no webserver did out of the box. Everything defaulted to text/html, which all browsers would interpret as HTML, and given the mismatching doctype, would interpret as tag soup (quirks mode/lenient).&lt;/p&gt;
    &lt;p&gt;None of that is correct.&lt;/p&gt;
    &lt;p&gt;It was perfectly spec. compliant to label XHTML as text/html. The spec. that covers this is RFC 2854 and it states:&lt;/p&gt;
    &lt;p&gt;&amp;gt; The text/html media type is now defined by W3C Recommendations; the latest published version is [HTML401]. In addition, [XHTML1] defines a profile of use of XHTML which is compatible with HTML 4.01 and which may also be labeled as text/html.&lt;/p&gt;
    &lt;p&gt;There’s no spec. that says you need to parse XHTML served as text/html as HTML not XHTML. As the spec. says, text/html covers both HTML and XHTML. That’s something that browsers did but had no obligation to.&lt;/p&gt;
    &lt;p&gt;The mismatched doctype didn’t trigger quirks mode. Browsers don’t care about that. The prologue could, but XHTML 1.0 Appendix C told you not to use that anyway.&lt;/p&gt;
    &lt;p&gt;Even if it did trigger quirks mode, that makes no difference in terms of tag soup. Tag soup is when you mis-nest tags, for instance &amp;lt;strong&amp;gt;&amp;lt;em&amp;gt;&amp;lt;/strong&amp;gt;&amp;lt;/em&amp;gt;. Quirks mode was predominantly about how it applied CSS layout. There are three different concepts being mixed up here: being parsed as HTML, parsing tag soup, and doctype switching.&lt;/p&gt;
    &lt;p&gt;The problem with serving application/xhtml+xml wasn’t anything to do with web servers. The problem was that Internet Explorer 6 didn’t support it. After Microsoft won the browser wars, they discontinued development and there was a five year gap between Internet Explorer 6 and 7. Combined with long upgrade cycles and operating system requirements, this meant that Internet Explorer 6 had to be supported for almost 15 years globally.&lt;/p&gt;
    &lt;p&gt;Obviously, if you can’t serve XHTML in a way browsers will parse as XML for a decade and a half, this inevitably kills XHTML.&lt;/p&gt;
    &lt;p&gt;Yes, I covered that; everyone assumed that you only needed to specify the doctype, but in practice browsers only accepted it for local files or HTTP responses with Content-Type: application/xml+xhtml. I've edited the comment to make that more explicit.&lt;/p&gt;
    &lt;p&gt;Adobe Flash / Shockwave. After all these decades, I've yet to see a tool that makes it as easy to make games or multimedia as Flash did. One of many reminders recently (many others in politics) that humanity doesn't just inevitably or linearly move forward in any domain, or even 2 steps forward 1 step back. Some things are just lost to time - maybe rediscovered in a century, maybe never.&lt;/p&gt;
    &lt;p&gt;Even if Adobe had gotten their act together and fixed all security holes, Apple would have still killed it. It was always a threat as a popular design tool. And decades later, with the HTML canvas hype faded, there's still no replacement to what Adobe Flash could do - any designer could create stellar, interactive design that can be embedded into any website...without a monthly subscription.&lt;/p&gt;
    &lt;p&gt;Personal pet peeve, but as someone who still makes gifs, Image Ready. Adobe kind of absorbed Image Ready into Photoshop and it's just never lived up to how easy it was to make simple gifs in Image Ready&lt;/p&gt;
    &lt;p&gt;I don't think thats the case. For the longest while flash was faster than js at doing anything vaguely graphic based. The issue for apple was that the CPU in the iphone wasn't fast enough to do flash and anything else. Moreover Adobe didn't get on with jobs when they were talking about custom versions.&lt;/p&gt;
    &lt;p&gt;You have to remember that "apps" were never meant to be a thing on the iphone, it was all about "desktop" like web performance.&lt;/p&gt;
    &lt;p&gt;Flash performance is still better than current web stack's. Probably will always be - you could write non trivial games that would work on 128MB memory machine. Currently single browser tab with simple page can take more than that.&lt;/p&gt;
    &lt;p&gt;Macromedia Fireworks was an outstanding piece of software.&lt;/p&gt;
    &lt;p&gt;The 20 most common things you’d do with the tool were there for you in obvious toolbars. It had a lot of advanced features for image editing. It had a scripting language, so you could do bulk editing operations. It supported just about every file extension you could think of.&lt;/p&gt;
    &lt;p&gt;Most useful feature of all was that it’d load instantly. You’d click the icon on the desktop, and there’d be the Fireworks UI before you could finish blinking. Compared to 2025 Adobe apps, where you click the desktop icon and make a coffee while it starts, it’s phenomenal performance.&lt;/p&gt;
    &lt;p&gt;Performance was way better than what we have now with modern web stacks, we just have more powerful computers.&lt;/p&gt;
    &lt;p&gt;I agree on security and bugs, but bugs can be fixed. It just shows neglect by Adobe, which was, I think, the real problem. I think that if Adobe seriously wanted to, it could have been a web standard.&lt;/p&gt;
    &lt;p&gt;Yes. I never used flash personally, but I loved those little games people created with them. There was the whole scene of non developers creating little games of all kinds and it just ceased to exist.&lt;/p&gt;
    &lt;p&gt;Kids now create games in Roblox. More constrained, more commercial, more exploitative- but there is still a huge scene of non-developers creating games if you care to look.&lt;/p&gt;
    &lt;p&gt;Edit: you asked why. I first saw it at SELF where Chris DiBona showed it to me and a close friend. It was awesome. Real time translation, integration of various types of messaging, tons of cool capabilities, and it was fully open source. What made it out of Google was a stripped down version of what I was shown, the market rejected it, and it was a sad day. Now, I am left with JIRA, Slack, and email. It sucks.&lt;/p&gt;
    &lt;p&gt;I was blown away by the demo but then after I thought about it, it seemed like a nightmare to me. All the problems of slack of having to manually check channels for updates except X 100 (yea, I get that slack wasn't available then. My point is I saw that it seemed impossible to keep up with nested constantly updated hierarchical threads. Keeping up with channels on slack is bad enough so imagine if Wave had succeeded. It'd be even worse.&lt;/p&gt;
    &lt;p&gt;Wave was great for conversation with one or two other people on a specific project, which I'm sure most people here used it for. I can't imagine it scaling well beyond that.&lt;/p&gt;
    &lt;p&gt;I managed trips with friends and it was a great form factor for ad-hoc discussions with docs and links included. I thought it was the future and in my very early programming days wrote probably the most insecure plugin ever to manage your servers.&lt;/p&gt;
    &lt;p&gt;Google wave was built on an awesome technology layer, and they they totally blew in on the user interface.... deciding to treat it as a set of separate items instead of a single document everyone everywhere all at once could edit.... killed it.&lt;/p&gt;
    &lt;p&gt;It make it seem needlessly complicated, and effectively erased all the positives.&lt;/p&gt;
    &lt;p&gt;Even the watered-down version of wave was something I used at my host startup, it was effectively our project management tool. And it was amazing at that.&lt;/p&gt;
    &lt;p&gt;I don't know how it would fare compared to the options available today, but back then, it shutting down was a tremendous loss.&lt;/p&gt;
    &lt;p&gt;Google Wave had awesome tech but if you look at the demo in hindsight you can tell it’s just not a very good product. They tried making an all-in-one kind of product which just doesn’t work.&lt;/p&gt;
    &lt;p&gt;In a sense Wave still exists but was split into multiple products, so I wouldn’t say it’s “dead”. The tech that powered it is still used today in many of Google’s popular products. It turns out that having separate interfaces for separate purposes is just more user friendly than an all-in-one.&lt;/p&gt;
    &lt;p&gt;It's indeed not a good one. Discord refined instant messaging and bolts other things on top like forums but isn't fundamentally different. Google Wave was (and still is) a completely different paradigm. Everything was natively collaborative: it mixed instant messaging with document edition (like Google Docs or pads) and any widget you could think of (polls, calendars, playing music, drawing, ...) could be added by users through sandboxed Javascript. The current closest I can think of is DeltaChat's webxdc.&lt;/p&gt;
    &lt;p&gt;Google sucked/s at executive function because they completely lack appreciation for proper R&amp;amp;D and long-term investment and also kill things people use and love.&lt;/p&gt;
    &lt;p&gt;Yep. And rather than ask people, focus group, or look at the evidence, they just guess or do whatever they want. Not much leadership or community engagement appears to be involved.&lt;/p&gt;
    &lt;p&gt;The Ricochet network. A packet mesh network providing ISDN speeds in the dialup era, wirelessly.&lt;/p&gt;
    &lt;p&gt;They burned through $5B of 1999 dollars, building out a network in 23 cities, and had effectively zero customers. Finally shut down in 2001.&lt;/p&gt;
    &lt;p&gt;All their marketing was focused on "mobile professionals", whoever those were, while ignoring home users who were clamoring for faster internet where other ISPs dragged their feet.&lt;/p&gt;
    &lt;p&gt;Today, 5G femtocells have replicated some of the concept (radically small cell radius to increase geographic frequency reuse), but without the redundancy -- a femtocell that loses its uplink is dead in the water, not serving as a relay node. A Ricochet E-radio that lost its uplink (but still had power) would simply adjust its routing table and continue operating.&lt;/p&gt;
    &lt;p&gt;Optane persistent memory had a fascinating value proposition: stop converting data structures for database storage and just persist the data directly. No more booting or application launch or data load: just pick up where you left off. Died because it was too expensive, but probably long after it should have.&lt;/p&gt;
    &lt;p&gt;VM's persist memory snapshots (as do Apple's containers, for macOS at least), so there's still room for something like that workflow.&lt;/p&gt;
    &lt;p&gt;Systems are stuck in old ways in how they model storage, so they weren't ready for something that is neither really RAM nor disk. Optane did inspire quite a few research projects for a while though. A few applications emerged in the server space, in particular.&lt;/p&gt;
    &lt;p&gt;The world had already caught up. By the time it was released, flash memory was already nearing it's speed and latency, to the point that the difference want with the cost.&lt;/p&gt;
    &lt;p&gt;&amp;gt;flash memory was already nearing it's speed and latency&lt;/p&gt;
    &lt;p&gt;Kinda, but for small writes it's still nowhere near.&lt;/p&gt;
    &lt;p&gt;Samsung 990 Pro - IOPS 4KQD1 113 MBytes/Sec&lt;/p&gt;
    &lt;p&gt;P4800X optane - IOPS 4KQD1 206 MBytes/Sec&lt;/p&gt;
    &lt;p&gt;And that's a device 5 years newer and on a faster pcie generation.&lt;/p&gt;
    &lt;p&gt;It disappeared because the market that values above attribute is too small and its hard to market because at first glance they look about the same on a lot of metrics as you say&lt;/p&gt;
    &lt;p&gt;How does that work? It loads kernel from drive to ram?&lt;/p&gt;
    &lt;p&gt;Isn't windows fast boot something like that (only slower, depending on ssd)? It semi-hibernates, stores kernel part of memory on disk for faster startup.&lt;/p&gt;
    &lt;p&gt;This one would have behaved more like suspend to RAM. In suspend to RAM, the RAM is kept powered, while everything else is shut down. The recovery would be near instant, since all the execution contexts are preserved on the RAM.&lt;/p&gt;
    &lt;p&gt;Optane was nearly as fast as RAM, but also persistent like a storage device. So you do a suspend to RAM, without the requirement to keep it powered like a RAM.&lt;/p&gt;
    &lt;p&gt;Not only because of price. The 'ecosystem' infrastructure wasn't there, or at least not spread wide enough. The 'mindshare'/thinking of ways how to do, neither. This is more aligned with (live) 'image-based' working environments like early Lisp and Smalltalk systems. Look at where they are now...&lt;/p&gt;
    &lt;p&gt;A few more thoughts about that, since I happen to have some of the last systems who actually had systems level support for that in their firmware, and early low-capacity optanes designed for that sort of use. It's fascinating to play with these, but they are low capacity, and bound to obsolete operating systems.&lt;/p&gt;
    &lt;p&gt;Given enough RAM, you can emulate that with working suspend and resume to/and from RAM.&lt;/p&gt;
    &lt;p&gt;Another avenue are the ever faster and larger SSDs, in practice, with some models it makes almost no difference anymore, since random access times are so fast, and transfer speeds insane. Maybe total and/or daily TBW remains a concern.&lt;/p&gt;
    &lt;p&gt;Google Reader: I will forever be salty about how Google killed something that likely required very little maintenance in the long run. It could have stayed exactly the same for a decade and I wouldn't have cared because I use an RSS reader exactly the same way I do that I did back in 2015.&lt;/p&gt;
    &lt;p&gt;Yes. That was the single worst business decision in Google history, as somebody correctly noted. It burned an enormous amount of goodwill for no gain whatsoever.&lt;/p&gt;
    &lt;p&gt;Killing Google Reader affected a relatively small number of users, but these users disporportionately happened to be founders, CTOs, VPs of engineering, social media luminaries, and people who eventually became founders, CTOs, etc. They had been painfully taught to not trust Google, and, since that time, they didn't. And still don't.&lt;/p&gt;
    &lt;p&gt;Just think of the data mining they could have had there.&lt;/p&gt;
    &lt;p&gt;They had a core set of ultra-connected users who touched key aspects of the entire tech industry. The knowledge graph you could have built out of what those people read and shared…&lt;/p&gt;
    &lt;p&gt;They could have just kept the entire service running with, what, 2 software engineers? Such a waste.&lt;/p&gt;
    &lt;p&gt;This would require the decision-maker to think and act at the scale and in interests of the entire company. Not at the scale of a promo packet for next perf: "saved several millions in operation costs by shutting down a low-impact, unprofitable service."&lt;/p&gt;
    &lt;p&gt;There is some truth in this. I fit into a few of these buckets and I don’t think I could ever recommend their enterprise stuff after having my favourite consumer products pulled.&lt;/p&gt;
    &lt;p&gt;&amp;gt; Google Play Music: I had uploaded thousands of MP3 files there. They killed it. I won't waste my time uploading again.&lt;/p&gt;
    &lt;p&gt;You can argue whether it's as good as GPM or not, but it's false to imply that your uploaded music disappeared when Google moved to YouTube Music. I made the transition, and all of my music moved without a new upload.&lt;/p&gt;
    &lt;p&gt;I still use PICASA it works fine. However, when google severed the gdrive-photo linking it meant my photos didn’t automatically download from google to my PC. This is what killed google for me.&lt;/p&gt;
    &lt;p&gt;I'm still amused that they killed Google Notebook and then a few years later created Google Keep, an application with basically the same exact feature set.&lt;/p&gt;
    &lt;p&gt;You can say that for a fair few of the services mentioned by GP.&lt;/p&gt;
    &lt;p&gt;Google killed a lot of things to consolidate them into more "integrated" (from their perspective) product offerings. Picasa -&amp;gt; Photos, Hangounts -&amp;gt; Meet, Music -&amp;gt; YT Premium.&lt;/p&gt;
    &lt;p&gt;No idea what NFC Wallet was, other than the Wallet app on my phone that still exists and works?&lt;/p&gt;
    &lt;p&gt;The only one I'm not sure about is Chromecast - a while back my ones had an "update" to start using their newer AI Assistant system for managing it. Still works.&lt;/p&gt;
    &lt;p&gt;Hmm, good to know. But given Google's history, I assumed that it would stop working.&lt;/p&gt;
    &lt;p&gt;I also need to sell my Google Chromecast with Google TV 4K. Brand new, still in its shrink wrap. Bought it last year, to replace a flaky Roku. It was a flaky HDMI cable instead. I trust Roku more than Google for hardware support.&lt;/p&gt;
    &lt;p&gt;In absolutely shocking news, it did stop working and then Google went out of their way to fix it.&lt;/p&gt;
    &lt;p&gt;I genuinely thought all the chromecast audios I owned were useless bricks and was looking around for replacements and then they just started working again from an OTA update. Astounding. I assume someone got fired for taking time away from making search worse to do this.&lt;/p&gt;
    &lt;p&gt;Picasa was awesome, they had face recognition years before almost everything else, in a nice offline package.&lt;/p&gt;
    &lt;p&gt;Unfortunately the last public version has a bug that randomly swaps face tags, so you end up training on the wrong persons faces just enough to throw it all off, and the recognition becomes effectively worthless on thousands of family photos. 8(&lt;/p&gt;
    &lt;p&gt;Digikam is a weak sauce replacement that barely gets the job done.&lt;/p&gt;
    &lt;p&gt;That was probably me, when I stopped using Google Search some years ago. :-) Got tired of the ads, the blog spam, and AI-generated content crap floating to the top of their results page.&lt;/p&gt;
    &lt;p&gt;The https://udm14.com/ flavor of Google is quite usable, though, esp with notable operators like inurl:this-or-that. But, all in all, yeah, gimme back vanilla Google search from 2008-2010 or so. Back then it was definitely a tool (I worked in investigative journalism at the time), whereas currently "searching" stands for sitting fingers crossed and hoping for the better. But, oh well. &amp;lt;/rant&amp;gt;&lt;/p&gt;
    &lt;p&gt;That's more what I meant. Sure, lots of people still type stuff into the URL bar that takes them to www.google.com/search. But whatever you want to call that results page now, it's no longer Google Search in anything but name.&lt;/p&gt;
    &lt;p&gt;I use this free and extremely bare bones app made by a friend: https://apps.apple.com/us/app/max-where/id1579123291. It tracks your location constantly, has a basic viewer, and lets you export to CSV. That’s about it but it’s all I need.&lt;/p&gt;
    &lt;p&gt;Check out Dawarich, it has an official iOS app and you can use a number of 3rd party mobile apps to track your data and then upload it to server: either ran on your own hardware (FOSS self-hosted) or to the Dawarich Cloud one: https://dawarich.app&lt;/p&gt;
    &lt;p&gt;I’m still using - free g suite - play music - finance - nfc wallet is just google wallet isn’t it? - chromecast, video and audio-only I guess play music is now YouTube music, and doesn't have uploads, so that can be considered dead, but the others seem alive to me.&lt;/p&gt;
    &lt;p&gt;I used Picasa and loved it, until I realized I want all my photos available from all my devices at all times and so gave in to Google Photos (for access, not backup)&lt;/p&gt;
    &lt;p&gt;I use SyncThing for that purpose. It syncs across my phone, my laptops, and my Synologies. But I don't sync all my photos.&lt;/p&gt;
    &lt;p&gt;I don't like the thought of providing Google thousands of personal photos for their AI training. Which will eventually leak to gov't agencies, fraudsters, and criminals.&lt;/p&gt;
    &lt;p&gt;I used Google Talk than Hangouts, but once they switched to Meet, I gave up on them. By then my family was all using Hangouts, and we never settled on a new service, because one of my siblings didn't want to support any chat services that don't freely give user information to the government, and the rest of us didn't want to use a chat platform that does freely give user information to the government.&lt;/p&gt;
    &lt;p&gt;Am I the only one salty about Google Podcasts? For me that was the straw that broke the camel’s back… I dropped Android, switched to iOS, and slowly phasing out the Google products in my life.&lt;/p&gt;
    &lt;p&gt;From what I can tell (since I am just finding out about this today), they stopped manufacturing the old Chromecast hardware, and at some point, will stop supporting the old devices. The old devices may stop working in the future, for example, because they sunset the servers. Like their thermostats. Who knows?&lt;/p&gt;
    &lt;p&gt;Yahoo pipes. It was so great at creating rss feeds and custom workflows. There are replacements now like Zapier and n8n but loved that. Also google reader which is mentioned multiple times already.&lt;/p&gt;
    &lt;p&gt;Yahoo Pipes was what internet should have been. We're so many decades into computing and that kind of inter-tool linking has only barely been matched by unix pipes.&lt;/p&gt;
    &lt;p&gt;Many companies are working very hard to make that impossible unfortunately. For example you can't get posts from public Facebook groups automatically, although that would be a really good source candidate. They used to allow it, but... not anymore.&lt;/p&gt;
    &lt;p&gt;I loved pipes. I had rss feeds from all the sites where I was sharing content collected up and formatted via pipes into a single rss feed that was pulled into a php blog.&lt;/p&gt;
    &lt;p&gt;Then all those sites I used to post on stopped supporting rss one by one and finally pipes was killed off.&lt;/p&gt;
    &lt;p&gt;For a while I used a python library called riko that did the same thing as pipes without the visual editor. I have to thank it for getting me off php and into python.&lt;/p&gt;
    &lt;p&gt;If anyone with time, money and resources wants to revive the ideas of Yahoo! Pipes then I would suggest using Node-RED[^1] as a good starting point.&lt;/p&gt;
    &lt;p&gt;It has the advantage of being open source, has well defined and stable APIs and a solid backend. Plus 10+ years of constant development with many learnings around how to implement flow based programming visually.&lt;/p&gt;
    &lt;p&gt;I used the Node-RED frontend to create Browser-Red[^2] which is a Node-RED that solely executes in the browser, no server required. It does not support all Node-RED functionality but gives a good feel for using Node-RED and flow based programming.&lt;/p&gt;
    &lt;p&gt;The second project with which I am using Node-RED frontend is Erlang-Red[^3] which is Node-RED with an Erlang backend. Erlang is better suited to flow based programming than NodeJS, hence this attempt to demonstrate that!&lt;/p&gt;
    &lt;p&gt;Node-RED makes slightly different assumptions than Yahoo! Pipes - input ports being the biggest: all nodes in Node-RED have either zero or one input wires, nodes in Yahoo! Pipes had multiple input wires.&lt;/p&gt;
    &lt;p&gt;A good knowledge of jQuery is required but that makes it simpler to get into the frontend code - would be my argument ;) I am happy to answer questions related to Node-RED, email in bio.&lt;/p&gt;
    &lt;p&gt;I can recommend Apache Camel (https://camel.apache.org) for similar data integration pipelines and even agentic workflows. There are even visual editors for Camel today, which IMHO make it extremely user friendly to build any kind of pipeline quickly.&lt;/p&gt;
    &lt;p&gt;I missed Yahoo Pipes a lot so I built something similar recently for myself :) I know there are a few alternatives out there, but had to scratch my own itch.&lt;/p&gt;
    &lt;p&gt;BT had this grand vision for basically providing rich multi-media through the phone line, but in ~1998. Think a mix of on-demand cable and "teleconferencing" with TV based internet (ceefax/red button on steriods)&lt;/p&gt;
    &lt;p&gt;It would have been revolutionary and kick started the UK's jump into online rich media.&lt;/p&gt;
    &lt;p&gt;However it wouldnt have got past the regulators as both sky and NTL(now virgin) would have protested loudly.&lt;/p&gt;
    &lt;p&gt;Quartz Composer - Apple's "patch-based" visual programming environment. Drag out a bunch of nodes, wire them together, build a neat little GUI.&lt;/p&gt;
    &lt;p&gt;10+ years ago I'd regularly build all sorts of little utilities with it. It was surprisingly easy to use it to tap into things that are otherwise a lot more work. For instance I used it to monitor the data coming from a USB device. Like 3 nodes and 3 patches to make all of that work. Working little GUI app in seconds.&lt;/p&gt;
    &lt;p&gt;Apple hasn't touched it since 2016, I kind of hope it makes a comeback given Blender and more so Unreal Engine giving people a taste of the node based visual programming life.&lt;/p&gt;
    &lt;p&gt;You can still download it from Apple, and it still technically works but a lot of the most powerful nodes are broken in the newer OS's. I'd love to see the whole thing revitalized.&lt;/p&gt;
    &lt;p&gt;Sandstorm: it seemed quite nice with a lot of possibilities when it launched in 2014, but it didn’t really take off and then it moved to sandstorm.org.&lt;/p&gt;
    &lt;p&gt;The actual problem with Sandstorm wasn't the era in which it was released. It will probably have the same problems even if released today. The problem was its application isolation mechanism - especially the data isolation (I think they were called grains). The mechanism is technically brilliant. But it's a big departure from how apps are developed today. It means that you have to do non-trivial modifications to web applications before they can run on the platform. The platform is better for applications designed to run on it in the start. It should have been marketed as a platform for building web applications, rather than as one for just deploying them.&lt;/p&gt;
    &lt;p&gt;Sandstorm was a great idea, but in my opinion it was targeted wrong. It should have been a platform and marketplace for B2B SaaS, not B2C SaaS. Specifically, all the third-party services which typical web apps use could have been Sandstorm apps, like analytics, logging, email, customer service etc.&lt;/p&gt;
    &lt;p&gt;Vine. It was already pretty big back in 2013 but Twitter had no idea what to do with it. TikTok actually launched just a few months before Vine was shut down and erased from the internet.&lt;/p&gt;
    &lt;p&gt;Whoever took the decision to kill Vine was an absolute moron, even without hindsight. It was square videos, how hard could it have been to shove an ads banner above it and call it a day? Incredible&lt;/p&gt;
    &lt;p&gt;I was a hold out on smartphones for a while and I used to print out k5 articles to read while afk... Just such an amazing collection of people sharing ideas and communal moderation, editing and up voting.&lt;/p&gt;
    &lt;p&gt;I learned about so many wierd and wonderful things from that site.&lt;/p&gt;
    &lt;p&gt;Midori, Microsoft's capability-based security OS[1]. Rumor has it that it was getting to the point where it was able to run Windows code, so it was killed through internal politics, but who knows! It was the Fuchsia of its time...&lt;/p&gt;
    &lt;p&gt;I've heard someone at Microsoft describe it as a moonshot but also a retention project; IIRC it had a hundred plus engineers on it at one time, including a lot of very senior people.&lt;/p&gt;
    &lt;p&gt;Apparently a bunch of research from Midori made it into .NET so it wasn't all lost, but still...&lt;/p&gt;
    &lt;p&gt;The technical foundation seems interesting, but knowing Microsoft this would have just become yet another bloated mess with it's own new set of problems. And by now it would have equally become filled with spyware and AI "features" users don't want.&lt;/p&gt;
    &lt;p&gt;Dreamweaver or some other real WYSISYG web page editor that could maybe deal with very basic JavaScript.&lt;/p&gt;
    &lt;p&gt;I just wanna make a mostly static site with links in and out of my domain. Maybe a light bit of interactivity for things like search that autocompletes.&lt;/p&gt;
    &lt;p&gt;Heroku? I know it's still around, though IDK who uses it, but I miss those days when it was thriving. One language, one deployment platform, one database, a couple plugins to choose from, everything simple and straightforward, no decision fatigue.&lt;/p&gt;
    &lt;p&gt;I often wonder, if AI had come 15 years earlier, would it have been a ton better because there weren't a billion different ways to do things? Would we have ever bothered to come up with all the different tech, if AI was just chugging through features efficiently, with consistent training data etc.?&lt;/p&gt;
    &lt;p&gt;I use the core product for my SaaS apps. Great platform, does what it needs to do. Haven’t felt the need to switch. Sometimes tempted to move to a single VPS with Coolify or Dokku, but not interested in taking on the server admin burden.&lt;/p&gt;
    &lt;p&gt;As soon as they put a persistent Salesforce brand banner across the top which did nothing but waste space and put that ugly logo in our face every day, my team started our transition off Heroku pretty much right away.&lt;/p&gt;
    &lt;p&gt;My company still uses Heroku in production actually. Every time I see the Salesforce logo show up I wince, but we haven't had any issues at all. It continues to make deployment very easy.&lt;/p&gt;
    &lt;p&gt;Didn't they offer free compute? IIRC all free compute on the Internet went away with the advent of cryptocurrencies as it became practical to abuse the compute and translate it directly into money.&lt;/p&gt;
    &lt;p&gt;I think their main failure points were the following:&lt;/p&gt;
    &lt;p&gt;- not lowering prices as time went off. They probably kept a super-huger margin profit, but they’re largely irrelevant today&lt;/p&gt;
    &lt;p&gt;- not building their own datacenters and staying in aws. That would have allowed them to lower prices and gain even more market share. Everyone that has been in amazon/aws likely has seen the internal market rate for ec2 instances and know there’s a HUGE profit margin deriving by building datacenters. Add the recent incredible improvements to compute density (you can easily get 256c/512t and literally terabytes of memory in a 2u box) and you get basically an infinite money glitch.&lt;/p&gt;
    &lt;p&gt;The internet before advertising, artificial intelligence, social media and bots. When folks created startups in their bedrooms or garages. The days when google slogan was “don’t be evil”.&lt;/p&gt;
    &lt;p&gt;I really miss the like 8 year ago push where a lot of major projects were moving to IRC. It's too bad Freenode took the opportunity to jump the shark and killed the momentum.&lt;/p&gt;
    &lt;p&gt;I mean, they're intentionally buried in the name of capital. If you need more than a Google search to find them, of course no one will go to them.&lt;/p&gt;
    &lt;p&gt;I don't like the siloing our information to Discord being a comparison to old internet. We had indexable information in forums that is "lost", not in the literal sense, but because you wouldn't be able to find it without obsessive digging to find it again. Conversations in Discord communities are very surface level and cyclical because it's far less straight forward to keep track of and link to answers from last week let alone two years ago. It is profoundly sad, to be honest.&lt;/p&gt;
    &lt;p&gt;Geocities ; It was a "put your html here" Free web hosting back when people barely knew what html was. Today you have to be a rocket scientist to find a way to host a free static "simple" page online.&lt;/p&gt;
    &lt;p&gt;Pascal/Delphi - especially in the educational context.&lt;/p&gt;
    &lt;p&gt;Crazy fast compiler so doesn't frustrate trial &amp;amp; erroring students, decent type system without the wildness of say rust and all the basic programming building blocks you want students to grasp are present without language specific funkiness.&lt;/p&gt;
    &lt;p&gt;I liked del.icio.us, it was online bookmark sharing, but with actual people I knew, and it had genuinely useful category tagging. I guess it was basically replaced with https://old.reddit.com and maybe twitter.&lt;/p&gt;
    &lt;p&gt;Isn’t Pinboard (Who bought delicious) very similar? I also see bookmarks of my friend there, recently switched to Raindrop though as it’s much more maintained.&lt;/p&gt;
    &lt;p&gt;Full vector dpi aware UI, with grid, complex animation, and all other stuff that html5/css didn’t have in 2018 but silverlight had even in 2010 (probable even earlier).&lt;/p&gt;
    &lt;p&gt;MVVM pattern, two-way bindings. Expression Blend (basically figma) that allowed designers create UI that was XAML, had sample data, and could be used be devs as is with maybe some cleanup.&lt;/p&gt;
    &lt;p&gt;Excellent tooling, static analysis, debugging, what have you.&lt;/p&gt;
    &lt;p&gt;Rendered and worked completely the same in any browser (safari, ie, chrome, opera, firefox) on mac and windows&lt;/p&gt;
    &lt;p&gt;If that thing still worked, boy would we be in a better place regarding web apps.&lt;/p&gt;
    &lt;p&gt;Unfortunately, iPhone killed adobe flash and Silverlight as an aftermath. Too slow processor, too much energy consumption.&lt;/p&gt;
    &lt;p&gt;I am happy this one died. It was just another attempt by Microsoft to sidestep open web standards in favor of a proprietary platform. The other notorious example is Flash, and both should be considered malware.&lt;/p&gt;
    &lt;p&gt;Open web standards are great but consider where we could have been if competition drove them a different way? We're still stuck with JavaScript today (wasm still needs it). Layout/styling is caught up now but where would we be if that came sooner?&lt;/p&gt;
    &lt;p&gt;&amp;gt; Open web standards are great but consider where we could have been if competition drove them a different way? We're still stuck with JavaScript today (wasm still needs it). Layout/styling is caught up now but where would we be if that came sooner?&lt;/p&gt;
    &lt;p&gt;Why do you think JavaScript is a problem? And a big enough problem to risk destroying open web standards.&lt;/p&gt;
    &lt;p&gt;TypeScript exists for the same reason things like mypy exists, and no one in their right mind claims that python's openness should be threatened just because static typing is convenient.&lt;/p&gt;
    &lt;p&gt;&amp;gt; A remote code execution vulnerability exists when Microsoft Silverlight decodes strings using a malicious decoder that can return negative offsets that cause Silverlight to replace unsafe object headers with contents provided by an attacker. In a web-browsing scenario, an attacker who successfully exploited this vulnerability could obtain the same permissions as the currently logged-on user. If a user is logged on with administrative user rights, an attacker could take complete control of the affected system. An attacker could then install programs; view, change, or delete data; or create new accounts with full user rights. Users whose accounts are configured to have fewer user rights on the system could be less impacted than users who operate with administrative user rights.&lt;/p&gt;
    &lt;p&gt;I loved silverlight. Before I got a “serious” job, I was a summer intern at a small civil engineering consultancy that had gradually moved into developing custom software that it sold mostly to local town/city/county governments in Arizona (mostly custom mapping applications; for example, imagine Google Maps but you can see an overlay of all the street signs your city owns and click on one to insert a note into some database that a worker needs to go repair it… stuff like that).&lt;/p&gt;
    &lt;p&gt;Lots of their stuff was delivered as Silverlight apps. It turns out that getting office workers to install a blessed plugin from Microsoft and navigate to a web page is much easier than distributing binaries that you have to install and keep up to date. And developing for it was pure pleasure; you got to use C# and Visual Studio, and a GUI interface builder, rather than the Byzantine HTML/JS/CSS ecosystem.&lt;/p&gt;
    &lt;p&gt;I get why it never took off, but in this niche of small-time custom software it was really way nicer than anything else that existed at the time. Web distribution combined with classic desktop GUI development.&lt;/p&gt;
    &lt;p&gt;Looking at firefox memory usage, i’m afraid the issue there is not memory safety but rather the average javascript developer being completely and blissfully unaware of and careless about memory memory usage of the software they write&lt;/p&gt;
    &lt;p&gt;The Lockheed D-21 drone. Supersonic ramjet without the complexity of scramjet or the cost of turbojet, hamstrung by the need for a manned launch platform (making operations safety-critical… with predictable results) and recovery to get data off it. Twenty or forty years later it would have been paired by a small number of high-cost launcher UAVs and had its cost driven down to disposable, with data recovery over radio comms… but twenty to forty years later there’s nothing like it, and the maturation of satellites means there almost certainly never will be.&lt;/p&gt;
    &lt;p&gt;ReactOS, the effort to create a free and open source Windows NT reimplementation.&lt;/p&gt;
    &lt;p&gt;It has been in existence in some form or another for nearly 30 years, but did not gain the traction it needed and as of writing it's still not in a usable state on real hardware. It's not abandoned, but progress on it is moving so slow that I doubt we'll ever see it be released in a state that's useful for real users.&lt;/p&gt;
    &lt;p&gt;It's too bad, because a drop in Windows replacement would be nice for all the people losing Windows 10 support right now.&lt;/p&gt;
    &lt;p&gt;On the other hand, I think people underestimate the difficulty involved in the project and compare it unfavorably to Linux, BSD, etc. Unix and its source code was pretty well publicly documented and understood for decades before those projects started, nothing like that ever really existed for Windows.&lt;/p&gt;
    &lt;p&gt;They had no chance. Look how long it tooks for Wine to get where they are. Their project is Wine + a kernel + device drivers compatibility, and a moving target.&lt;/p&gt;
    &lt;p&gt;Wine, Proton and virtualization all got good enough that there's no need for a half-baked binary-compatible Windows reimplementation, and I think that took a lot of the oxygen out of what could have been energy towards ReactOS. It's a cool concept but not really a thing anybody requires.&lt;/p&gt;
    &lt;p&gt;&amp;gt; ReactOS, the effort to create a free and open source Windows NT reimplementation.&lt;/p&gt;
    &lt;p&gt;Some projects creep along slowly until something triggers an interest and suddenly they leap ahead.&lt;/p&gt;
    &lt;p&gt;MAME's Tandy 2000 implementation was unusable, until someone found a copy of Windows 1.0 for the Tandy 2000, then the emulation caught up until Windows ran.&lt;/p&gt;
    &lt;p&gt;Maybe ReactOS will get a big influx of activity after Windows 10 support goes offline in a couple days, or even shortly after when you can't turn AI spying off, not even three times a year.&lt;/p&gt;
    &lt;p&gt;Not so long ago there was a leak of windows’ source code, up to xp and 2003 server… the leak was so complete there are videos on YouTube about people building and booting (!!!) windows from there.&lt;/p&gt;
    &lt;p&gt;And yet, no big leap in ReactOS (at least for now).&lt;/p&gt;
    &lt;p&gt;They should have partnered not only with Intel, but with Palm, RIM or whatever other then-giant to rival Android. Those two went their own ways with WebOS and buying QNX, so maybe they could have agreed to form a consortium for an open and interoperable mobile OS&lt;/p&gt;
    &lt;p&gt;I loved my N900, and my N800 before that, and I would have loved to have seen successors. Ultimately, I ended up switching to Android because I was tired of things only available as apps. Since then, web technologies have gotten better, and it's become much more feasible to use almost exclusively websites.&lt;/p&gt;
    &lt;p&gt;It was a series of experiments with new approaches to programming. Kind of reminded me of the research that gave us Smalltalk. It would have been interesting to see where they went with it, but they wound down the project.&lt;/p&gt;
    &lt;p&gt;ICQ ; It was the first instant messenger, the technology could have adopted voice (and not get disrupted by Skype) and mobile (and not get disrupted by whatsapp) and group chat (and not get disrupted by slack/discord). But they didn't even try and put up a fight.&lt;/p&gt;
    &lt;p&gt;They got bought by AOL in 98, long before most/all of this innovation happened?&lt;/p&gt;
    &lt;p&gt;Edit: in fact I'd say they were irrelevant before pretty much all of those innovations. By the time AIM or MSN Messenger really became popular, ICQ didn't matter anymore.&lt;/p&gt;
    &lt;p&gt;RethinkDB. Technically it still exists (under The Linux Foundation), but (IMO) the original company's widening scope (the Horizon BaaS) that eventually led to its demise killed its momentum.&lt;/p&gt;
    &lt;p&gt;The TUNES [1] operating system and programming language project. The reason for its failure are described perfectly on the archival website:&lt;/p&gt;
    &lt;p&gt;&amp;gt; TUNES started in 1992-95 as an operating system project, but was never clearly defined, and it succumbed to design-by-committee syndrome and gradually failed. Compared to typical OS projects it had very ambitious goals, which you may find interesting.&lt;/p&gt;
    &lt;p&gt;Non Daw. Its breaking up each function of the DAW into its own application gave a better experience in each of those functions, especially when you only needed that aspect, you were not working around everything else that the DAW offers. The integration between the various parts was not all that it could be but I think the idea has some real potential.&lt;/p&gt;
    &lt;p&gt;I've never heard of this software before. Any idea why it's discontinued? There are a bunch of weird messages that point to sort of a hostile take over of the project by forking, but it doesn't say anything about why or how it was discontinued.&lt;/p&gt;
    &lt;p&gt;Thought about Non immediately, but I figured it must have (had) about 2 other users amongst HNers, though. :) Nice to see it mentioned.&lt;/p&gt;
    &lt;p&gt;I used it quite a bit to produce radio shows for my country's public broadcasting. Because Non's line-oriented session format was so easy to parse with classic Unix tools, I wrote a bunch of scripts for it with Awk etc. (E.g. calculating the total length of clips highlighted with brown color in the DAW -- which was stuff meant for editing out; or creating a poor man's "ripple editing" feature by moving loosely-placed clips precisely side by side; or, eventually, converting the sessions to Samplitude EDL format, and, from there, to Pro Tools via AATranslator [1] (because our studio was using PT), etc. Really fun times!)&lt;/p&gt;
    &lt;p&gt;Was recently reading about Project Ara, the modular smartphone project by Google/Motorola [1]. Would have liked to see a few more iterations of the idea. Something more customizable than what we have today without having to take the phone apart.&lt;/p&gt;
    &lt;p&gt;In 2011, before TypeScript, Next.js or even React, they had seamless server-client code, in a strongly typed functional language with support for features like JSX-like inline HTML, async/await, string interpolation, built-in MongoDB ORM, CSS-in-JS, and many syntax features that were added to ECMAScript since then.&lt;/p&gt;
    &lt;p&gt;I find it wild how this project was 90%+ correct on how we will build web apps 14 years later.&lt;/p&gt;
    &lt;p&gt;10/GUI did some deep thinking about the limitations and potential of the (then-fairly new) multi touch input method. I wished something more had come out of it, instead it stayed a niche concept art video that is mostly forgotten now.&lt;/p&gt;
    &lt;p&gt;I’m not arguing the solutions it outlined are good, but I think some more discussion around how we interact with touch screens would be needed. Instead, we are still typing on a layout that was invented for mechanical typewriters - in 2025, on our touch screens.&lt;/p&gt;
    &lt;p&gt;Microsoft Songsmith is another one that deserved a second life. It let you hum or sing a melody and would auto-generate full backing tracks, guitar, bass, drums, chords, in any style you chose.&lt;/p&gt;
    &lt;p&gt;It looked a bit goofy in the promo videos, but under the hood it was doing real-time chord detection and accompaniment generation. Basically a prototype of what AI music tools like Suno, Udio, or Mubert are doing today, fifteen years too early.&lt;/p&gt;
    &lt;p&gt;If Microsoft had kept iterating on it with modern ML models, it could’ve become the "GarageBand for ideas that start as a hum."&lt;/p&gt;
    &lt;p&gt;Macromedia Flash. Its scope and security profile was too big. It gave way to HTML’s canvas. But man, the tooling is still no where near as good. Movieclips, my beloved. I loved it all.&lt;/p&gt;
    &lt;p&gt;The iPhone killed Flash, probably because it would've been a way to create apps for it, more probably because it would've been laggy in the 2007 hardware, and people would've considered the iPhone "a piece of junk".&lt;/p&gt;
    &lt;p&gt;Interesting how Flash became the almost universal way to play videos in the browser, in the latter half of the 2000's (damn I'm old...).&lt;/p&gt;
    &lt;p&gt;It's incredible to me that they killed the whole tool instead of making a JS/Canvas port. Even without "full flash websites", there's still need for vectorial animations on the web.&lt;/p&gt;
    &lt;p&gt;As a Linux user, I hated Flash with a passion. It mostly didn't work despite several Linux implementations. About the time they sorted all the bugs out, it went away. Good riddance.&lt;/p&gt;
    &lt;p&gt;Boot2Gecko or whatever the browser as Operating system was called. This was a project that should have focused on providing whatever its current users needed expanding and evolving to do whatever those users wanted it to do better.&lt;/p&gt;
    &lt;p&gt;Instead it went chasing markets, abandoning existing users as it did so, in favour of potential larger pools of users elsewhere. In the end it failed to find a niche going forward while leaving a trail of abandoned niches behind it.&lt;/p&gt;
    &lt;p&gt;I adored my Firefox Phones. Writing apps was so easy I built myself dozens of little one-offs. Imagine if it had survived to today, its trivial html/css/js apps could be vibe coded on-device and be the ultimate personalized phone.&lt;/p&gt;
    &lt;p&gt;Luckily it wasn't long after Mozilla abandoned it that PWAs were introduced and I could port the apps I cared about.&lt;/p&gt;
    &lt;p&gt;For a few short months circa 2016 or 2017, KaiOS was the number one mobile OS in India. This was probably because of all the ultra-cheap KaiOS-powered Reliance Jio phones flooding the Indian market at the time.&lt;/p&gt;
    &lt;p&gt;I noticed the trend when I was working on a major web property for the Aditya Birla conglomerate. My whole team was pleasantly surprised, and we made sure to test everything in Firefox for that project. But everyone switched to Android + Chrome over the next few years, which was a shame.&lt;/p&gt;
    &lt;p&gt;It's been a number of years but my understanding was they kind of killed all the momentum it had by removing support for custom operators which broke everyone's code?&lt;/p&gt;
    &lt;p&gt;Yeah, Opa was wildly ahead of its time, I actually just wrote a top level comment about it. Basically Next.js+TypeScript+modern ECMAScript features, but in 2011.&lt;/p&gt;
    &lt;p&gt;A simple UI programming pattern, with a circular, unidirectional data flow. It is very rigid by design, to be side-effect free, functional, unidirectional:&lt;/p&gt;
    &lt;p&gt;CLPM, the Common Lisp Package Manager. The Quicklisp client doesn't do HTTPS, ql-https doesn't do Ultralisp, and OCICL (which I'm currently using) doesn't do system-wide packages. CLPM is a great project, but it's gone neglected long enough that it's bitrotted and needs some thorough patching to be made usable. Fortunately Common Lisp is still as stable as it has been for 31 years, so it's just the code which interacts with 3rd-party libraries that needs updating.&lt;/p&gt;
    &lt;p&gt;Yeah I felt that Quicklisp doesn't have the same features as package managers in other languages, and https is one of them. Also it's run by a single person which doesn't have too much time to constantly update the libraries.&lt;/p&gt;
    &lt;p&gt;In comparison I found Clojars^[0] for Clojure better and community driven like NPM. But obv Clojure has more business adoption than CL.&lt;/p&gt;
    &lt;p&gt;I tried it twice and the onboarding experience was insurmountable. Never managed to achieve a critical mass of followers or whatever they call it, so things were permanently read-only for me. I'd reply but nobody saw it.&lt;/p&gt;
    &lt;p&gt;It was a fascinating protocol underneath, but the social follow structure seemed to select strongly for folks who already had a following or something.&lt;/p&gt;
    &lt;p&gt;Drama has killed the technological progress in open source, if you ask me.&lt;/p&gt;
    &lt;p&gt;Having seen what goes on in the foss world and what goes on in the large faang-size corporate world, no wonder the corporate world is light-years ahead.&lt;/p&gt;
    &lt;p&gt;It might be too soon to call it abandoned, but I was very intrigued by the Austral [1] language. The spec [2] is worth reading, it has an unusual clarity of thought and originality, and I was hoping that it would find some traction. Unfortunately it seems that the author is no longer actively working on it.&lt;/p&gt;
    &lt;p&gt;I played with Austral about a year ago and really wanted to use it for my projects, but as a hobbyist and mostly inept programmer it lacked the community and ecosystem I require. I found it almost intuitive and the spec does an amazing job of explaining the language. Would love to see it get a foothold.&lt;/p&gt;
    &lt;p&gt;The author got hired by Modular, the AI startup founded by the creators of LLVM and Swift, and is now working on the new language Mojo. He’s been bringing a bunch of ideas from Vale to Mojo&lt;/p&gt;
    &lt;p&gt;Oh nice! I just had an excuse to try mojo via max inference, it was pretty impressive. Basically on par with vllm for some small benchmarks, bit of variance in ttft and tpot. Very cool!&lt;/p&gt;
    &lt;p&gt;Skype ; Because my R.I.P. grandma was using it to talk to her relatives overseas just like she would use a phone, but it didn't cost an arm and a leg (unlike phone calls).&lt;/p&gt;
    &lt;p&gt;One of the best P2P software at the time. It was so simple and effective and allowed people to call real phones with Skype credit.&lt;/p&gt;
    &lt;p&gt;A genius product ripped my Microsoft. Have you used Microsoft Teams recently? Bad UI, hard to configure external hardware and good level of incompatibility, missing the good old "Echo / Sound Test Service". At a point I even installed Skype of my old Android but was sucking up too much battery.&lt;/p&gt;
    &lt;p&gt;I've argued this for years on this site...but AOL.&lt;/p&gt;
    &lt;p&gt;At its best, having IM, email, browser, games, keywords, chats, etc. was a beautiful idea IMO. That they were an ISP seemed secondary or even unrelated to the idea. But they chose to charge for access even in the age of broadband, and adopt gym level subscription tactics to boot, and people decided they'd rather not pay it which is to be expected. I often wonder if they'd have survived as a software company otherwise.&lt;/p&gt;
    &lt;p&gt;They were basically a better thought out Facebook before Facebook, in my opinion.&lt;/p&gt;
    &lt;p&gt;Lazarus is nice but both its apis and the ui feel like they're still stuck in the early 00's. It's not enough to look like VB6 / Delphi these days; you've got to keep up with what kinds of conventions we expect now.&lt;/p&gt;
    &lt;p&gt;RAM Disks. Basically extremely fast storage using RAM sticks slotted into a specially made board that fit in a PCIe slot. Not sure what happened to the project exactly but the website disappeared sometime in 2023.&lt;/p&gt;
    &lt;p&gt;The idea that you could read and write data at RAM speeds was really exciting to me. At work it's very common to see microscope image sets anywhere from 20 to 200 GB and file transfer rates can be a big bottleneck.&lt;/p&gt;
    &lt;p&gt;Products to attach RAM to expansion slots have long existed and continue to be developed. It's a matter of adding more memory once all of the DIMMs are full.&lt;/p&gt;
    &lt;p&gt;What to do with it, once it's there, is a concern of software, but specialized hardware is needed to get it there.&lt;/p&gt;
    &lt;p&gt;I always thought Microsoft Popfly had huge potential and was way ahead of its time. It made building web mashups feel like playing with Lego blocks, drag, drop, connect APIs, and instantly see the result.&lt;/p&gt;
    &lt;p&gt;If something like that existed today, powered by modern APIs and AI, it could become the ultimate no-code creativity playground.&lt;/p&gt;
    &lt;p&gt;Connect your phone to a display, mouse, keyboard and get a full desktop experience.&lt;/p&gt;
    &lt;p&gt;At the time smartphones were not powerful enough, cables were fiddly (adapters, HDMI, USB A instead of a single USB c cable) and virtualization and containers not quite there.&lt;/p&gt;
    &lt;p&gt;Today, going via pkvm seems like promising approach. Seamless sharing of data, apps etc. will take some work, though.&lt;/p&gt;
    &lt;p&gt;At my last job m our designer was a Fireworks holdout. It was very pleasant. As someone who has to implement UIs, I greatly preferred it to Figma, though with today's flat boring designs there's a lot less slicing.&lt;/p&gt;
    &lt;p&gt;It's a real shame its raster functionality wasn't integrated into Illustrator. Adobe really butchered the whole Macromedia portfolio, didn't they?&lt;/p&gt;
    &lt;p&gt;(For those unfamiliar, Illustrator is a pure vector graphics editor; once you rasterize its shapes, they become uneditable fixed bitmaps. Fireworks was a vector graphics editor that rendered at a constant DPI, so it basically let you edit raster bitmaps like they were vectors. It was invaluable for pixel-perfect graphic design. Nothing since lets you do that, though with high-DPI screens and resolution-independent UIs being the norm these days, this functionality is less relevant than it used to be.)&lt;/p&gt;
    &lt;p&gt;CueCat it was an affordable barcode scanner that anyone could have connected to their computer, and it scanned barcodes. It took almost two decades before we could finally do it again with our mobile phones.&lt;/p&gt;
    &lt;p&gt;People talk so much about how you need to write code that fits well within the rest of the codebase, but what tools do we have to explore codebases and see what is connected to what? Clicking through files feels kind of stupid because if you have to work with changes that involve 40 files, good luck keeping any of that in your working memory. In my experience, the JetBrains dependency graphs also aren't good enough.&lt;/p&gt;
    &lt;p&gt;Sourcetrail was a code visualization tool that allowed you to visualize those dependencies and click around the codebase that way, see what methods are connected to what and so on, thanks to a lovely UI. I don't think it was enough alone, but I absolutely think we need something like this: https://www.dbvis.com/features/database-management/#explore-... but for your code, especially for codebases with hundreds of thousands or like above a million SLoC.&lt;/p&gt;
    &lt;p&gt;I yearn to some day view entire codebases as graphs with similarly approachable visualization, where all the dependencies are highlighted when I click an element. This could also go so, so much further - you could have a debugger breakpoint set and see the variables at each place, alongside being able to visually see how code is called throughout the codebase, or hell, maybe even visualize every possible route that could be taken.&lt;/p&gt;
    &lt;p&gt;&amp;gt;This presentation introduces Via, a virtual file system designed to address the challenges of large game downloads and storage. Unlike cloud gaming, which suffers from poor image quality, input latency, and high hosting costs, Via allows games to run locally while only downloading game data on demand. The setup process is demonstrated with Halo Infinite, showing a simple installation that involves signing into Steam and allocating storage space for Via's cache.&lt;/p&gt;
    &lt;p&gt;&amp;gt;Via creates a virtual Steam library, presenting all owned games as installed, even though their data is not fully downloaded. When a game is launched, Via's virtual file system intercepts requests and downloads only the necessary game content as it's needed. This on-demand downloading is integrated with the game's existing streaming capabilities, leveraging features like level-of-detail and asset streaming. Performance metrics are displayed, showing download rates, server ping, and disk commit rates, illustrating how Via fetches data in real-time.&lt;/p&gt;
    &lt;p&gt;&amp;gt;The system prioritizes caching frequently accessed data. After an initial download, subsequent play sessions benefit from the on-disk cache, significantly reducing or eliminating the need for network downloads. This means the actual size of a game becomes less relevant, as only a portion of it needs to be stored locally. While server locations are currently limited, the goal is to establish a global network to ensure low ping. The presentation concludes by highlighting Via's frictionless user experience, aiming for a setup so seamless that users are unaware of its presence. Via is currently in early access and free to use, with hopes of future distribution partnerships.&lt;/p&gt;
    &lt;p&gt;I'm amazed the video still has under 4,000 views. Sadly, Flaherty got hired by XAI and gave up promoting the project.&lt;/p&gt;
    &lt;p&gt;Wait until you hear that almost all Unity games don't really have asset streaming because the engine loads things eagerly by default.&lt;/p&gt;
    &lt;p&gt;I don't see how this could take off. Internet speeds are getting quicker, disk space is getting cheaper, and this will slow down load times. And what's worse is the more you need this tech the worse experience you have.&lt;/p&gt;
    &lt;p&gt;Just on principle, I'd have liked to see it on the market for more than 49 days! It pains me as an engineer to think of the effort to bring a hardware device to market for such a minuscule run.&lt;/p&gt;
    &lt;p&gt;Mozilla heka. As far as data collection and processing goes, we are still stuck with Logstash after all of these years. Heka promised a much more efficient solution, being implemented with Go and Lua plugins.&lt;/p&gt;
    &lt;p&gt;The IBM school's computer. Developed by IBM Hursley in 1967, it was years ahead in its design, display out to a television and storage on normal audio tape. Would have kick started an educational revolution if it had been launched beyond the 10 prototype machines.&lt;/p&gt;
    &lt;p&gt;XenClient. I would really love to have some minimal OS HyperVisor running, and then you slap multiple OSes on top of that w/ easy full GUI switching via some hotkeys like Ctrl+Shift+F1. Additionaly, special drivers to virtualize Gfx and Sfx devices so every VM have full desktop capabilities and low latency.&lt;/p&gt;
    &lt;p&gt;Unfortunately, it died because its very niche and also they couldnt keep up with development of drivers for desktops.. This is even worse today...&lt;/p&gt;
    &lt;p&gt;VPRI, I was really hoping it would profoundly revolutionise desktop application development and maybe even lead to a new desktop model, and instead they wound up the project without having achieved the kind of impact I was dreaming of.&lt;/p&gt;
    &lt;p&gt;Anyone remember Openmoko, the first commercialised open source smart phone. Was heaps buggy though, not really polished, etc. It’s only redeeming feature was the open source software and hardware (specs?).&lt;/p&gt;
    &lt;p&gt;There was the https://en.wikipedia.org/wiki/PinePhone and it's successor PinePhonePro. Bugginess and general impracticalities brought up to more recent standards. Inflation-adjusted, of course!&lt;/p&gt;
    &lt;p&gt;Flickr - that was the future of photo storage, sharing, discovery.&lt;/p&gt;
    &lt;p&gt;What was the bookmarks social tool called from 00’s? I loved it and it fell off the earth. You could save your bookmarks, “publish” them to the community, share etc..&lt;/p&gt;
    &lt;p&gt;What ever happened to those build your own homepage apps like startpage (I think)? I always thought those would take off&lt;/p&gt;
    &lt;p&gt;Pivotal Tracker ; Users loved it, it had an excellent model for tracking work and limiting work in progress on software projects. There is no real good alternative and the usual suspects for tracking project work are horrible in comparison.&lt;/p&gt;
    &lt;p&gt;I came to say Opa too. I liked the language but the meteor-like framework it was bundled with, while nice for prototyping, was a pain to work around when it didn't do what you needed.&lt;/p&gt;
    &lt;p&gt;That said, frameworks were all the buzz back in the day, so the language alone probably wouldn't have gone anywhere without it.&lt;/p&gt;
    &lt;p&gt;https://www.kite.com for python i first learned about it when i was working in an university group and had the task to transform a windowing algorithm already working on matlab to python. it felt like a modern linter and lsp with additional support through machine learning. i don't quite know why it got comparative small recognition, but perhaps enough to remain an avantgarde pioneering both python and machine learning support for further generations and wider applications.&lt;/p&gt;
    &lt;p&gt;Nokia Maps. There was a brief period in the early 2010s where Nokia had the best mapping product on the planet, and it was given away for free on Lumia phones at a time when TomTom and Garmin were still charging $60+ for navigation apps.&lt;/p&gt;
    &lt;p&gt;i first learned about it when i was working in an university group and had the task to transform a windowing algorithm already working on matlab to python. it felt like a modern linter and lsp with additional support through machine learning. i don't quite know why it got comparative small recognition, but perhaps enough to remain an avantgarde pioneering both python and machine learning support for further generations and wider applications.&lt;/p&gt;
    &lt;p&gt;Google Wave ; It had a bunch of agents participating in editing the text together with you, making spelling fixes, finding additional information to enrich your content, and so much more.&lt;/p&gt;
    &lt;p&gt;wua.la … the original version. You share part of your storage to get the same amount back as resilient cloud storage from others. Was bought and killed by LaCie (now Seagate). They later provided paid-for cloud storage under the same name but it didn’t take off.&lt;/p&gt;
    &lt;p&gt;In the late 90s there was a website called fuckedcompany which was a place where people could spill the beans about startups (mainly in silicon valley). It was anonymous and a pretty good view into the real state of tech. Now there is twitter/x but it's not as focused on this niche.&lt;/p&gt;
    &lt;p&gt;The closest sites I've found are Web3 is Going Just Great and Pivot to AI, which are newsfeeds of various car crashes in their respective hype arenas, although without any insider scoops/gossip.&lt;/p&gt;
    &lt;p&gt;I'm booting and running Haiku on my Thinkpad. It's a from-scratch workalike of BeOS, and able to run Be software. Though, frankly, Be software is totally 1990s, so a lot of Linux software written for Qt has been ported to Haiku.&lt;/p&gt;
    &lt;p&gt;In the end I wound up with basically the same application software as on my Debian desktop, except running on Haiku instead of Linux. Haiku is noticeably snappier and more responsive than Linux+X+Qt+KDE, though.&lt;/p&gt;
    &lt;p&gt;In late September or early October 1996, Fry's Electronics places a full page promo ad on the back of the business section of the San Jose Mercury News for OS/2 4.0 "WRAP [sic]" in 256 pt font in multiple places. Oops!&lt;/p&gt;
    &lt;p&gt;Nah, that time has passed and there's not much to miss from the base OS. What would be interesting is for IBM to publish the source to the Workplace Shell and the underlying SOM code so it might get a new life running on one of the free *nixes.&lt;/p&gt;
    &lt;p&gt;Fro me, DESQview. Microsoft tried to buy it in order to use its tech in their windows system. I wonder how things would be today if they were able to purchase it. But DESQview said "no".&lt;/p&gt;
    &lt;p&gt;Instead it went into a slow death spiral due to Windows 95.&lt;/p&gt;
    &lt;p&gt;Love seeing this one. My uncle was co-founder of Quarterdeck, and I grew up in a world of DESQview and QEMM. It was a big influence on me as a child.&lt;/p&gt;
    &lt;p&gt;Got a good family story about that whole acquisition attempt, but I don't want to speak publicly on behalf of my uncle. I know we've talked at length about the what-ifs of that moment.&lt;/p&gt;
    &lt;p&gt;I do have a scattering of some neat Quarterdeck memorabilia I can share, though:&lt;/p&gt;
    &lt;p&gt;DESQview/X sucked the wind out of DESQview's sails. It was, on paper, a massive upgrade. I had been running DESQview for years, with a dial-up BBS in the background.&lt;/p&gt;
    &lt;p&gt;But you couldn't actually buy /X. After trying to buy a copy, my publisher even contacted DESQ's marketing people to get a copy for me, and they wouldn't turn one over. Supposedly there were some copies actually sold, but too few, too late, and then /X was dropped. There was at least one more release of plain DESQview after that, but by then Windows was eating its lunch.&lt;/p&gt;
    &lt;p&gt;OSI's session layer did very little more than TCP/UDP port numbers; in the OSI model you would open a connection to a machine, then use that connection to open a session to a particular application.&lt;/p&gt;
    &lt;p&gt;X.400 was a nice idea, but the ideal of having a single global directory predates security. I can understand why it never happened&lt;/p&gt;
    &lt;p&gt;On X.509, the spec spends two chapters on attribute certificates, which I've never seen used in the wild. It's a shame; identity certificates do a terrible job at authentication&lt;/p&gt;
    &lt;p&gt;I could think of many examples, but I'll talk about the top four that I have in mind, that I'd like to see re-evaluated for today's times.&lt;/p&gt;
    &lt;p&gt;1. When Windows Vista was being developed, there were plans to replace the file system with a database, allowing users to organize and search for files using database queries. This was known as WinFS (https://en.wikipedia.org/wiki/WinFS). I was looking forward to this in the mid-2000s. Unfortunately Vista was famously delayed, and in an attempt to get Vista released, Microsoft pared back features, and one of these features was WinFS. Instead of WinFS, we ended up getting improved file search capabilities. It's unfortunate that there's been no proposals for database file systems for desktop operating systems since.&lt;/p&gt;
    &lt;p&gt;2. OpenDoc (https://en.wikipedia.org/wiki/OpenDoc) was an Apple technology from the mid-1990s that promoted component-based software. Instead of large, monolithic applications such as Microsoft Excel and Adobe Photoshop, functionality would be offered in the form of components, and users and developers can combine these components to form larger solutions. For example, as an alternative to Adobe Photoshop, there would be a component for the drawing canvas, and there would be separate components for each editing feature. Components can be bought and sold on an open marketplace. It reminds me of Unix pipes, but for GUIs. There's a nice promotional video at https://www.youtube.com/watch?v=oFJdjk2rq4E.&lt;/p&gt;
    &lt;p&gt;OpenDoc was a radically different paradigm for software development and distribution, and I think this was could have been an interesting contender against the dominance that Microsoft and Adobe enjoys in their markets. OpenDoc actually did ship, and there were some products made using OpenDoc, most notably Apple's Cyberdog browser (https://en.wikipedia.org/wiki/Cyberdog).&lt;/p&gt;
    &lt;p&gt;Unfortunately, Apple was in dire straits in the mid-1990s. Windows 95 was a formidable challenger to Mac OS, and cheaper x86 PCs were viable alternatives to Macintosh hardware. Apple was an acquisition target; IBM and Apple almost merged, and there was also an attempt to merge Apple with Sun. Additionally, the Macintosh platform depended on the availability of software products like Microsoft Office and Adobe Photoshop, the very types of products that OpenDoc directly challenged. When Apple purchased NeXT in December 1996, Steve Jobs returned to Apple, and all work on OpenDoc ended not too long afterward, leading to this now-famous exchange during WWDC 1997 between Steve Jobs and an upset developer (https://www.youtube.com/watch?v=oeqPrUmVz-o).&lt;/p&gt;
    &lt;p&gt;I don't believe that OpenDoc fits in with Apple's business strategy, even today, and while Microsoft offers component-based technologies that are similar to OpenDoc (OLE, COM, DCOM, ActiveX, .NET), the Windows ecosystem is still dominated by monolithic applications.&lt;/p&gt;
    &lt;p&gt;I think it would have been cool had the FOSS community pursued component-based software. It would have been really cool to apt-get components from remote repositories and link them together, either using GUI tools, command-line tools, or programmatically to build custom solutions. Instead, we ended up with large, monolithic applications like LibreOffice, Firefox, GIMP, Inkscape, Scribus, etc.&lt;/p&gt;
    &lt;p&gt;3. I am particularly intrigued by Symbolics Genera (https://en.wikipedia.org/wiki/Genera_(operating_system)), an operating system designed for Symbolics Lisp machines (https://en.wikipedia.org/wiki/Symbolics). In Genera, everything is a Lisp object. The interface is an interesting hybrid of early GUIs and the command line. To me, Genera could have been a very interesting substrate for building component-based software; in fact, it would have been far easier building OpenDoc on top of Common Lisp than on top of C or C++. Sadly, Symbolics' fortunes soured after the AI winter of the late 1980s/early 1990s, and while Genera was ported to other platforms such as the DEC Alpha and later the x86-64 via the creation of a Lisp machine emulator, it's extremely difficult for people to obtain a legal copy, and it was never made open source. The closest things to Genera we have are Xerox Interlisp, a competing operating system that was recently made open source, and open-source descendants of Smalltalk-80: Squeak, Pharo, and Cuis-Smalltalk.&lt;/p&gt;
    &lt;p&gt;4. Apple's "interregnum" years between 1985 and 1996 were filled with many intriguing projects that were either never commercialized, were cancelled before release, or did not make a splash in the marketplace. One of the most interesting projects during the era was Bauhaus, a Lisp operating system developed for the Newton platform. Mikel Evins, a regular poster here, describes it here (https://mikelevins.github.io/posts/2021-07-12-reimagining-ba...). It would have been really cool to have a mass-market Lisp operating system, especially if it had the same support for ubiquitous dynamic objects like Symbolic Genera.&lt;/p&gt;
    &lt;p&gt;Re: obtaining a legal copy of Genera, as of 2023 Symbolics still existed as a corporate entity and they continued to sell x86-64 laptops with "Portable Genera 2.0". I bought one from them then, and occasionally see them listing some on Ebay. (This isn't intended as an advertisement or endorsement, just a statement. I think it's quite unfortunate that Symbolics's software hasn't been made freely available, since it's now really only of historical interest.)&lt;/p&gt;
    &lt;p&gt;I'm intrigued by Symbolics Genera too. It would have been interesting seeing further development of Lisp OS, especially when they would have had internet connection. Rewriting part of your OS and see the changes in real time? Maybe web apps could have been just software written in Lisp, downloaded on the machine and directly being executed in a safe environment on top of the Genera image. Big stuff.&lt;/p&gt;
    &lt;p&gt;OpenDoc was mostly given to Taligent (the Apple and IBM joint venture) to develop. It was full-on OO: about 35 files for a minimal application, which meant that Erich Gamma had to build a whole new type of IDE which was unusable. He likely learned his lesson: it's pretty hard to define interfaces between unknown components without forcing each one to know about all the others.&lt;/p&gt;
    &lt;p&gt;MIME types for mail addressed much of the demand for pluggable data types.&lt;/p&gt;
    &lt;p&gt;Windows Phone's UI is still with us, from Windows 8 onwards. Everything on 8, 10, and 11 is optimized for a touch interface on a small screen, which is ridiculous on a modern desktop with a 32" or so monitor and a trackball or mouse.&lt;/p&gt;
    &lt;p&gt;From Windows 10, there is a switch between desktop and touch mode.&lt;/p&gt;
    &lt;p&gt;They stopped supporting small tablets some years ago though, and made it worse with every Windows update. I can only surmise that it was to make people stop using them. Slow GUI, low contrast, killed apps.&lt;/p&gt;
    &lt;p&gt;False. The Metro design was abandoned long ago. No live tiles, no typography-first minimal UIs in windows 10/11. I pin an email app to taskbar/start, I don't see the unread count.&lt;/p&gt;
    &lt;p&gt;Ceylon, JVM language, developed by Red Hat, now abandoned at Eclipse. Lost the race with Kotlin but proposed more than just syntax sugar over Java. Anonymous union types, comprehensions, proper module system...&lt;/p&gt;
    &lt;p&gt;Fortress language. It suffered from being too Haskell-like in terms of too many, non-orthogonal features. Rust and Go applied lessons from it perhaps indirectly.&lt;/p&gt;
    &lt;p&gt;their operator precedence system was one of my favourite pieces of language design. the tl;dr was that you could group operators into precedence sets, and an expression involving operators that all came from the same set would have that set's precedence rules applied, but if you had an expression involving mixed sets you needed to add the parentheses. crucially, they also supported operator overloading, and the same operator could be used in a different set as long as everything could be parsed unambiguously. (caveat, I never used the language, I just read about the operator design in the docs and it was very eye opening in the sense that every other language's operator precedence system suddenly felt crude and haphazard)&lt;/p&gt;
    &lt;p&gt;Humane AI Pin. I think they launched 2 years too early and were too greedy with device pricing and subscription. Also if they focused as accessory for Android/iPhone they could reduce power usage and cost as well.&lt;/p&gt;
    &lt;p&gt;Their execution was of course bad but I think today current LLM models are better and faster and there is much more OSS models to reduce costs. Hardware though looked nice and pico projector interesting concept even though not the best executed.&lt;/p&gt;
    &lt;p&gt;Wine predates ReactOS. It was basically a FOSS duplicate of Sun's WABI.&lt;/p&gt;
    &lt;p&gt;I wrote a bunch of software in Borland Delphi, which ran in Windows, Wine, and ReactOS with no problems. Well, except for ReactOS' lack of printing support.&lt;/p&gt;
    &lt;p&gt;As long as you stay within the ECMA or published Windows APIs, everything runs fine in Wine and ReactOS. But Microsoft products are full of undocumented functions, as well as checks to see if they're running on real Windows. That goes back to the Windows 3.1 days, when 3.1 developers regularly used OS/2 instead of DOS, and Microsoft started adding patches to fail under OS/2 and DR-DOS. So all that has to be accounted for by Wine and ReactOS. A lot of third-party software uses undocumented functions as well, especially stuff written back during the days when computer magazines were a thing, and regularly published that kind of information. A lot of programmers found the lure of undocumented calls to be irresistible, and they wound up in all kinds of commercial applications where they really shouldn't have been.&lt;/p&gt;
    &lt;p&gt;In my experience anything that will load under Wine will run with no problems. ReactOS has some stability problems, but then the developers specifically call it "alpha" software. Despite that, I've put customers on ReactOS systems after verifying all their software ran on it. It gets them off the Microsoft upgrade treadmill. Sometimes there are compatibility problems and I fall back to Wine on Linux. Occasionally nothing will do but real Windows.&lt;/p&gt;
    &lt;p&gt;Hard disagree. The Humane AI Pin ad was a classic silicon valley ad that screamed B2VC and demonstrated nothing actually useful that couldn't be done with an all-in-one phone app (or even the ChatGPT app) and bluetooth earbuds that you already have.&lt;/p&gt;
    &lt;p&gt;Which reduces its innovation level to nothing more than a chest-mounted camera.&lt;/p&gt;
    &lt;p&gt;You want real B2C products that people would actually buy? Look at the Superbowl ads instead. Then watch the Humane ad again. It's laughable.&lt;/p&gt;
    &lt;p&gt;LSR, the "Linux Screen Reader", an ambitiousy designed Python implementation of a GUI screen reader developed by IBM starting around 2006 or so. The project was ended 2008 when IBM ended all its Accessibility involvement in FLOSS.&lt;/p&gt;
    &lt;p&gt;nah, glass was impressive for a such a big org like google, but smartphones are popular because people use them like portable televisions. glanceable info and walking directions are more like an apple watch sized market, without the fashion element. meta is about to find out.&lt;/p&gt;
    &lt;p&gt;google glass sucks though and glasses will never be a thing. google and meta and … can spend $8T and come up with the most insane tech etc but no one will be wearing f’ing glasses :)&lt;/p&gt;
    &lt;p&gt;Apple’s scanning system for CSAM. The vast majority of the debate was dominated by how people imagined it worked, which was very different to how it actually worked.&lt;/p&gt;
    &lt;p&gt;It was an extremely interesting effort where you could tell a huge amount of thought and effort went into making it as privacy-preserving as possible. I’m not convinced it’s a great idea, but it was a substantial improvement over what is in widespread use today and I wanted there to be a reasonable debate on it instead of knee-jerk outrage. But congrats, I guess. All the cloud hosting systems scan what they want anyway, and the one that was actually designed with privacy in mind got screamed out of existence by people who didn’t care to learn the first thing about it.&lt;/p&gt;
    &lt;p&gt;Good riddance to a system that would have provided precedent for client-side scanning for arbitrary other things, as well as likely false positives.&lt;/p&gt;
    &lt;p&gt;&amp;gt; I wanted there to be a reasonable debate on it&lt;/p&gt;
    &lt;p&gt;I'm reminded of a recent hit-piece about Chat Control, in which one of the proponent politicians was quoted as complaining about not having a debate. They didn't actually want a debate, they wanted to not get backlash. They would never have changed their minds, so there's no grounds for a debate.&lt;/p&gt;
    &lt;p&gt;We need to just keep making it clear the answer is "no", and hopefully strengthen that to "no, and perhaps the massive smoking crater that used to be your political career will serve as a warning to the next person who tries".&lt;/p&gt;
    &lt;p&gt;This. No matter how cool the engineering might have been, from the perspective of what surveillance policies it would have (and very possibly did) inspire/set precedent for… Apple was very much creating the Torment Nexus from “Don’t Create the Torment Nexus.”&lt;/p&gt;
    &lt;p&gt;&amp;gt; from the perspective of what surveillance policies it would have (and very possibly did) inspire/set precedent for…&lt;/p&gt;
    &lt;p&gt;I can’t think of a single thing that’s come along since that is even remotely similar. What are you thinking of?&lt;/p&gt;
    &lt;p&gt;I think it’s actually a horrible system to implement if you want to spy on people. That’s the point of it! If you wanted to spy on people, there are already loads of systems that exist which don’t intentionally make it difficult to do so. Why would you not use one of those models instead? Why would you take inspiration from this one in particular?&lt;/p&gt;
    &lt;p&gt;The problem isn’t the system as implemented; the problem is the very assertion “it is possible to preserve the privacy your constituents want, while running code at scale that can detect Bad Things in every message.”&lt;/p&gt;
    &lt;p&gt;Once that idea appears, it allows every lobbyist and insider to say “mandate this, we’ll do something like what Apple did but for other types of Bad People” and all of a sudden you have regulations that force messaging systems to make this possible in the name of Freedom.&lt;/p&gt;
    &lt;p&gt;Remember: if a model can detect CSAM at scale, it can also detect anyone who possesses any politically sensitive image. There are many in politics for whom that level of control is the actual goal.&lt;/p&gt;
    &lt;p&gt;&amp;gt; the problem is the very assertion “it is possible to preserve the privacy your constituents want, while running code at scale that can detect Bad Things in every message.”&lt;/p&gt;
    &lt;p&gt;Apple never made that assertion, and the system they designed is incapable of doing that.&lt;/p&gt;
    &lt;p&gt;&amp;gt; if a model can detect CSAM at scale, it can also detect anyone who possesses any politically sensitive image.&lt;/p&gt;
    &lt;p&gt;Apple’s system cannot do that. If you change parts of it, sure. But the system they proposed cannot.&lt;/p&gt;
    &lt;p&gt;To reiterate what I said earlier:&lt;/p&gt;
    &lt;p&gt;&amp;gt; The vast majority of the debate was dominated by how people imagined it worked, which was very different to how it actually worked.&lt;/p&gt;
    &lt;p&gt;So far, you are saying that you don’t have a problem with the system Apple designed, and you do have a problem with some other design that Apple didn’t propose, that is significantly different in multiple ways.&lt;/p&gt;
    &lt;p&gt;Also, what do you mean by “model”? When I used the word “model” it was in the context of using another system as a model. You seem to be using it in the AI sense. You know that’s not how it worked, right?&lt;/p&gt;
    &lt;p&gt;&amp;gt; Chat Control, and other proposals that advocate backdooring individual client systems.&lt;/p&gt;
    &lt;p&gt;Chat Control is older than Apple’s CSAM scanning and is very different from it.&lt;/p&gt;
    &lt;p&gt;&amp;gt; Clients should serve the user.&lt;/p&gt;
    &lt;p&gt;Apple’s system only scanned things that were uploaded to iCloud.&lt;/p&gt;
    &lt;p&gt;You missed the most important part of my comment:&lt;/p&gt;
    &lt;p&gt;&amp;gt; I think it’s actually a horrible system to implement if you want to spy on people. That’s the point of it! If you wanted to spy on people, there are already loads of systems that exist which don’t intentionally make it difficult to do so. Why would you not use one of those models instead? Why would you take inspiration from this one in particular?&lt;/p&gt;
    &lt;p&gt;I don’t think you can accurately describe it as client-side scanning and false positives were not likely. Depending upon how you view it, false positives were either extremely unlikely, or 100% guaranteed for practically everybody. And if you think the latter part is a problem, please read up on it!&lt;/p&gt;
    &lt;p&gt;&amp;gt; I'm reminded of a recent hit-piece about Chat Control, in which one of the proponent politicians was quoted as complaining about not having a debate. They didn't actually want a debate, they wanted to not get backlash. They would never have changed their minds, so there's no grounds for a debate.&lt;/p&gt;
    &lt;p&gt;Right, well I wanted a debate. And Apple changed their minds. So how is it reminding you of that? Neither of those things apply here.&lt;/p&gt;
    &lt;p&gt;No, but I have a hard time imagining a bug that would meaningfully compromise this kind of system. Can you give an example?&lt;/p&gt;
    &lt;p&gt;&amp;gt; How about making Apple vulnerable to demands from every government where they do business?&lt;/p&gt;
    &lt;p&gt;They already are. So are Google, Meta, Microsoft, and all the other giants we all use. And all those other companies are already scanning your stuff. Meta made two million reports in 2024Q4 alone.&lt;/p&gt;
    &lt;p&gt;There is no place for spyware of any kind on my phone. Saying that it is to "protect the children" and "to catch terrorists" does not make it any more acceptable.&lt;/p&gt;
    &lt;p&gt;I believe my retro Nokia phones s60/s90 does not have any spyware. I believe earlier Nokia models like s40 or monochrome does not even have an ability to spy on me (but RMS considers triangulation as spyware). I don't believe any products from the duopoly without even root access are free from all kinds of vendor's rootkits.&lt;/p&gt;
    &lt;p&gt;Apple designed a system. People guessed at what it did. Their guesses were way off the mark. This poisoned all rational discussion on the topic. If you imagine a system that works differently to Apple’s system, you can complain about that imaginary system all you want, but it won’t be meaningful, it’s just noise.&lt;/p&gt;
    &lt;p&gt;You understand it just fine, you're just trying to pass you fantasy pod immutable safe future as rational while painting the obvious objections based on the real world as meaningless noise.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://news.ycombinator.com/item?id=45553132"/><published>2025-10-11T22:16:18+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45553422</id><title>CamoLeak: Critical GitHub Copilot Vulnerability Leaks Private Source Code</title><updated>2025-10-12T11:07:14.908031+00:00</updated><content>&lt;doc fingerprint="9d071f1f98be66c7"&gt;
  &lt;main&gt;
    &lt;p&gt;Get details on our discovery of a critical vulnerability in GitHub Copilot Chat.&lt;/p&gt;
    &lt;head rend="h2"&gt;TL;DR:&lt;/head&gt;
    &lt;p&gt;In June 2025, I found a critical vulnerability in GitHub Copilot Chat (CVSS 9.6) that allowed silent exfiltration of secrets and source code from private repos, and gave me full control over Copilot’s responses, including suggesting malicious code or links.&lt;/p&gt;
    &lt;p&gt;The attack combined a novel CSP bypass using GitHub’s own infrastructure with remote prompt injection. I reported it via HackerOne, and GitHub fixed it by disabling image rendering in Copilot Chat completely.&lt;/p&gt;
    &lt;head rend="h2"&gt;Background&lt;/head&gt;
    &lt;p&gt;GitHub Copilot Chat is an AI assistant built into GitHub that helps developers by answering questions, explaining code, and suggesting implementations directly in their workflow.&lt;/p&gt;
    &lt;p&gt;Copilot Chat is context-aware: it can use information from the repository (such as code, commits, or pull requests) to provide tailored answers.&lt;/p&gt;
    &lt;p&gt;As always, more context = more attack surface.&lt;/p&gt;
    &lt;head rend="h2"&gt;Finding the prompt injection&lt;/head&gt;
    &lt;p&gt;As mentioned earlier, GitHub Copilot is context-aware - so I set out to make it notice me. To do this, I embedded a prompt directed at Copilot inside a pull request description.&lt;/p&gt;
    &lt;p&gt;But what’s the point if everyone can see it? Luckily, GitHub came to the rescue with a proper solution: invisible comments are an official feature! 🎉&lt;/p&gt;
    &lt;p&gt;You can find more details in their documentation: Hiding content with comments. By simply putting the content you want to hide inside:&lt;/p&gt;
    &lt;p&gt;I tried the same prompt but this time as a hidden comment inside the PR description, and it worked!&lt;/p&gt;
    &lt;p&gt;Interestingly, posting a hidden comment triggers the usual PR notification to the repo owner, but the content of the hidden comment isn’t revealed anywhere.&lt;/p&gt;
    &lt;p&gt;I attempted logging in with a different user and visited the pull request page. The prompt was injected into my context as well! &lt;/p&gt;
    &lt;p&gt;I then replaced the original “HOORAY” prompt with far more complex instructions, including code suggestions and Markdown rendering, and to my surprise, they worked flawlessly!&lt;/p&gt;
    &lt;p&gt;For instance, notice how effortlessly Copilot suggests this malicious Copilotevil package.&lt;/p&gt;
    &lt;p&gt;* Notice that the user who asked Copilot Chat to explain the PR is different from the user who posted the invisible prompt, demonstrating that the prompt can affect any user who visits the page.&lt;/p&gt;
    &lt;p&gt;Copilot operates with the same permissions as the user making the request, but it obviously needs access to the user’s private repositories to respond accurately. We can exploit this by including instructions in our injected prompt to access a victim user’s private repository, encode its contents in base16, and append it to a URL. Then, when the user clicks the URL, the data is exfiltrated back to us.&lt;/p&gt;
    &lt;p&gt;* Notice that the repository https://github.com/LegitSecurity/issues-service is a private repo inside a private GitHub organization!&lt;/p&gt;
    &lt;head rend="h2"&gt;Recap: What We Can Do&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Influence the responses generated by another user’s Copilot&lt;/item&gt;
      &lt;item&gt;Inject custom Markdown, including URLs, code, and images&lt;/item&gt;
      &lt;item&gt;Exploit the fact that Copilot runs with the same permissions as the victim user&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Bypassing Content Security Policy (CSP)&lt;/head&gt;
    &lt;p&gt;This is where things get tricky. If you’ve followed along so far, you’re probably thinking — just inject an HTML &amp;lt;img&amp;gt; tag into the victim’s chat, encode their private data as a parameter, and once the browser tries to render it, the data will be leaked.&lt;/p&gt;
    &lt;p&gt;Not so fast. GitHub enforces a very restrictive Content Security Policy (CSP), which blocks fetching images and other content types from domains that aren’t explicitly owned by GitHub. So, our “simple” &amp;lt;img&amp;gt; trick won’t work out of the box.&lt;/p&gt;
    &lt;p&gt;You’re probably asking yourself - wait, how does my fancy README manage to show images from third-party sites?&lt;/p&gt;
    &lt;p&gt;When you commit a README or any Markdown file containing external images, GitHub automatically processes the file, during this process:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;GitHub parses the Markdown and identifies any image URLs pointing to domains outside of GitHub.&lt;/item&gt;
      &lt;item&gt;URL rewriting via Camo: Each external URL is rewritten to a Camo proxy URL. This URL includes a HMAC-based cryptographic signature and points to https://camo.githubusercontent.com/….&lt;/item&gt;
      &lt;item&gt;Signed request verification: When a browser requests the image, the Camo proxy verifies the signature to ensure it was generated by GitHub. Only valid, signed URLs are allowed.&lt;/item&gt;
      &lt;item&gt;Content fetching: If the signature is valid, Camo fetches the external image from its original location and serves it through GitHub’s servers.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This process ensures that:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Attackers cannot craft arbitrary URLs to exfiltrate dynamic data.&lt;/item&gt;
      &lt;item&gt;All external images go through a controlled proxy, maintaining security and integrity.&lt;/item&gt;
      &lt;item&gt;The end user sees the image seamlessly in the README, but the underlying URL never exposes the original domain directly.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;More information about Camo can be found here.&lt;/p&gt;
    &lt;p&gt;Let’s look at an example: Committing a README file to GitHub that contains this URL:&lt;/p&gt;
    &lt;p&gt;Will be automatically changed inside the README into:&lt;/p&gt;
    &lt;p&gt;Rather than doing it manually through the website, you can use GitHub’s REST API to submit raw Markdown and receive it back with all external image URLs automatically converted to Camo proxy URLs.&lt;/p&gt;
    &lt;p&gt;Alright, so we can’t generate Camo URLs on the fly — without code execution, every &amp;lt;img&amp;gt; tag we inject into the victim’s chat must include a valid Camo URL signature that was pre-generated. Otherwise, GitHub’s reverse proxy won’t fetch the content.&lt;/p&gt;
    &lt;head rend="h2"&gt;The discovery&lt;/head&gt;
    &lt;p&gt;I spent a long time thinking about this problem before this crazy idea struck me.&lt;lb/&gt;If I create a dictionary of all letters and symbols in the alphabet, pre-generate their corresponding Camo URLs, embed this dictionary into the injected prompt, and then ask Copilot to play a “small game” by rendering the content I want to leak as “ASCII art” composed entirely of images, will Copilot inject valid Camo images that the browser will render by their order? Yes, it will.&lt;/p&gt;
    &lt;p&gt;I quickly got to work. First, I set up a web server that responds to every request with a 1x1 transparent pixel. This way, when GitHub’s Camo reverse proxy fetches the images from my server, they remain invisible in the victim’s chat.&lt;/p&gt;
    &lt;p&gt;Next, by using GitHub’s API, I created a valid Camo URL dictionary of all the letters and symbols that may be used to leak source code / issues content:&lt;/p&gt;
    &lt;p&gt;Turns into:&lt;/p&gt;
    &lt;p&gt;And finally, I created the prompt:&lt;/p&gt;
    &lt;p&gt;* I added "random" parameter at the end of each Camo URL and requested Copilot to generate each time a new random number and append it to the URL, this way caching is not a problem.&lt;/p&gt;
    &lt;p&gt;Our target: the description of a zero-day vulnerability inside an issue of a private project.&lt;/p&gt;
    &lt;p&gt;The result: Stealing zero days from private repositories.&lt;/p&gt;
    &lt;p&gt;PoC showcasing the full attack (Only if you have 4 minutes):&lt;/p&gt;
    &lt;p&gt;I also managed to get Copilot to search the victim’s entire codebase for the keyword "AWS_KEY" and exfiltrate the result.&lt;/p&gt;
    &lt;head rend="h2"&gt;GitHub’s Response&lt;/head&gt;
    &lt;p&gt;GitHub reports that the vulnerability was fixed as of August 14.&lt;/p&gt;
    &lt;head rend="h2"&gt;To learn more&lt;/head&gt;
    &lt;p&gt;Get details on a previous vulnerability we unearthed in GitLab Duo.&lt;/p&gt;
    &lt;p&gt;Get our thoughts on AppSec in the age of AI.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.legitsecurity.com/blog/camoleak-critical-github-copilot-vulnerability-leaks-private-source-code"/><published>2025-10-11T22:58:30+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45553577</id><title>Meta Superintelligence's surprising first paper</title><updated>2025-10-12T11:07:14.845317+00:00</updated><content/><link href="https://paddedinputs.substack.com/p/meta-superintelligences-surprising"/><published>2025-10-11T23:16:05+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45553701</id><title>Paper2Video: Automatic Video Generation from Scientific Papers</title><updated>2025-10-12T11:07:14.745709+00:00</updated><content>&lt;doc fingerprint="341cba0b81f1c4ee"&gt;
  &lt;main&gt;&lt;head rend="h1"&gt;Computer Science &amp;gt; Computer Vision and Pattern Recognition&lt;/head&gt;&lt;p&gt; [Submitted on 6 Oct 2025 (v1), last revised 9 Oct 2025 (this version, v2)]&lt;/p&gt;&lt;head rend="h1"&gt;Title:Paper2Video: Automatic Video Generation from Scientific Papers&lt;/head&gt;View PDF HTML (experimental)&lt;quote&gt;Abstract:Academic presentation videos have become an essential medium for research communication, yet producing them remains highly labor-intensive, often requiring hours of slide design, recording, and editing for a short 2 to 10 minutes video. Unlike natural video, presentation video generation involves distinctive challenges: inputs from research papers, dense multi-modal information (text, figures, tables), and the need to coordinate multiple aligned channels such as slides, subtitles, speech, and human talker. To address these challenges, we introduce Paper2Video, the first benchmark of 101 research papers paired with author-created presentation videos, slides, and speaker metadata. We further design four tailored evaluation metrics--Meta Similarity, PresentArena, PresentQuiz, and IP Memory--to measure how videos convey the paper's information to the audience. Building on this foundation, we propose PaperTalker, the first multi-agent framework for academic presentation video generation. It integrates slide generation with effective layout refinement by a novel effective tree search visual choice, cursor grounding, subtitling, speech synthesis, and talking-head rendering, while parallelizing slide-wise generation for efficiency. Experiments on Paper2Video demonstrate that the presentation videos produced by our approach are more faithful and informative than existing baselines, establishing a practical step toward automated and ready-to-use academic video generation. Our dataset, agent, and code are available at this https URL.&lt;/quote&gt;&lt;head rend="h2"&gt;Submission history&lt;/head&gt;From: Zeyu Zhu Mr. [view email]&lt;p&gt;[v1] Mon, 6 Oct 2025 17:58:02 UTC (6,815 KB)&lt;/p&gt;&lt;p&gt;[v2] Thu, 9 Oct 2025 17:29:00 UTC (6,817 KB)&lt;/p&gt;&lt;p&gt; Current browse context: &lt;/p&gt;&lt;p&gt;cs.CV&lt;/p&gt;&lt;head rend="h3"&gt;References &amp;amp; Citations&lt;/head&gt;&lt;p&gt; export BibTeX citation Loading... &lt;/p&gt;&lt;head rend="h1"&gt;Bibliographic and Citation Tools&lt;/head&gt;&lt;p&gt; Bibliographic Explorer (What is the Explorer?) &lt;/p&gt;&lt;p&gt; Connected Papers (What is Connected Papers?) &lt;/p&gt;&lt;p&gt; Litmaps (What is Litmaps?) &lt;/p&gt;&lt;p&gt; scite Smart Citations (What are Smart Citations?) &lt;/p&gt;&lt;head rend="h1"&gt;Code, Data and Media Associated with this Article&lt;/head&gt;&lt;p&gt; alphaXiv (What is alphaXiv?) &lt;/p&gt;&lt;p&gt; CatalyzeX Code Finder for Papers (What is CatalyzeX?) &lt;/p&gt;&lt;p&gt; DagsHub (What is DagsHub?) &lt;/p&gt;&lt;p&gt; Gotit.pub (What is GotitPub?) &lt;/p&gt;&lt;p&gt; Hugging Face (What is Huggingface?) &lt;/p&gt;&lt;p&gt; Papers with Code (What is Papers with Code?) &lt;/p&gt;&lt;p&gt; ScienceCast (What is ScienceCast?) &lt;/p&gt;&lt;head rend="h1"&gt;Demos&lt;/head&gt;&lt;head rend="h1"&gt;Recommenders and Search Tools&lt;/head&gt;&lt;p&gt; Influence Flower (What are Influence Flowers?) &lt;/p&gt;&lt;p&gt; CORE Recommender (What is CORE?) &lt;/p&gt;&lt;head rend="h1"&gt;arXivLabs: experimental projects with community collaborators&lt;/head&gt;&lt;p&gt;arXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.&lt;/p&gt;&lt;p&gt;Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.&lt;/p&gt;&lt;p&gt;Have an idea for a project that will add value for arXiv's community? Learn more about arXivLabs.&lt;/p&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://arxiv.org/abs/2510.05096"/><published>2025-10-11T23:32:25+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45553764</id><title>Google blocks Android hack that let Pixel users enable VoLTE anywhere</title><updated>2025-10-12T11:07:14.632776+00:00</updated><content>&lt;doc fingerprint="3d7a65028a366168"&gt;
  &lt;main&gt;
    &lt;p&gt;Affiliate links on Android Authority may earn us a commission. Learn more.&lt;/p&gt;
    &lt;head rend="h1"&gt;Google blocks Android hack that let Pixel users enable VoLTE anywhere&lt;/head&gt;
    &lt;p&gt;22 hours ago&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Google’s October 2025 update has broken the Pixel IMS app, a tool many used to enable VoLTE and VoWiFi on imported Pixel phones in unsupported regions.&lt;/item&gt;
      &lt;item&gt;The app exploited a loophole that allowed it to override carrier settings, which Google has now patched and designated as a high-severity vulnerability (CVE-2025-48617).&lt;/item&gt;
      &lt;item&gt;Fortunately, a new workaround has been discovered to enable VoLTE in unsupported regions, but users who want VoWiFi must now either root their devices or wait for Google to officially expand carrier support.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Pixel phones are beloved for their many unique software features, but their limited availability prevents many people from buying them. While Google has made strides in expanding access, Pixels still aren’t sold in nearly as many countries as iPhones or Samsung Galaxy devices. This leads many fans to import Pixel phones from other markets, a move that can unfortunately break crucial calling features like VoLTE and VoWiFi.&lt;/p&gt;
    &lt;p&gt;VoLTE (Voice over LTE) is the feature that routes voice calls over a 4G LTE connection, a crucial function now that carriers worldwide are phasing out their 2G and 3G networks. Without it, you might not be able to make phone calls at all on many modern networks. Similarly, VoWiFi (Voice over WiFi) handles Wi-Fi calling, routing calls over a Wi-Fi network instead of cellular — a handy feature when you’re in a building with poor signal.&lt;/p&gt;
    &lt;p&gt;In theory, any phone with the right hardware for a carrier’s cellular frequencies should be able to use VoLTE, and any capable phone with a supporting plan should get VoWiFi. The reality, however, is more complex. Many carriers only permit VoLTE and VoWiFi on devices they sell or have officially tested. This means that even if your imported Pixel has the necessary hardware, the carrier can still block these features, potentially preventing you from making voice calls entirely.&lt;/p&gt;
    &lt;p&gt;Don’t want to miss the best from Android Authority?&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Set us as a favorite source in Google Discover to never miss our latest exclusive reports, expert analysis, and much more.&lt;/item&gt;
      &lt;item&gt;You can also set us as a preferred source in Google Search by clicking the button below.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This issue plagued Pixel phone importers until Korean developer Kyujin Cho released a workaround in 2023. The developer’s app, “Pixel IMS,” enables VoLTE and VoWiFi on unsupported carriers by overriding the carrier check that Android normally performs. Normally, Android uses a signal from the carrier to decide whether to enable VoLTE for the device; the Pixel IMS app overrides this signal and forces it to always be enabled.&lt;/p&gt;
    &lt;p&gt;Overriding this check isn’t something just any app can do, as it’s part of Android’s privileged telephony framework. That’s why Pixel IMS cleverly leverages a loophole intended for testing purposes. Android allows the “shell” user — the same user that runs ADB commands — to override carrier configurations. To gain these elevated privileges, Pixel IMS uses Shizuku, an open source Android app that lets other apps run processes as the shell user.&lt;/p&gt;
    &lt;p&gt;But loopholes don’t last forever, and after more than two and a half years, Google has seemingly closed this one. Following the recent October 2025 Pixel update, many users discovered the “Pixel IMS” app was no longer functional, crashing when attempting to toggle VoLTE or VoWiFi. The crash log gives a clear reason: “overrideConfig cannot be invoked by shell.”&lt;/p&gt;
    &lt;p&gt;While not documented in the official changelog, Google appears to have quietly patched this particular exploit. According to a source, the company has designated this loophole as CVE-2025-48617, a high-severity privilege escalation vulnerability. Its absence from the October 2025 Android Security Bulletin is likely because it didn’t meet the “high risk” threshold for immediate inclusion under Google’s new Risk-Based Update System (RBUS). Google will probably include it in the next quarterly security bulletin, scheduled for December.&lt;/p&gt;
    &lt;p&gt;Fortunately for Pixel users, another developer has allegedly found a new workaround. While the new method isn’t as accessible — with the instructions being in Chinese and the APK distributed on the developer’s Telegram channel — it at least seems to work.&lt;/p&gt;
    &lt;p&gt;Unfortunately, the new method only enables VoLTE and not VoWiFi, so Pixel users in unsupported regions who need the latter feature will have to root their phones for now. Rooting requires unlocking the bootloader, which breaks some Gemini-powered features and complicates using Google Wallet. The only other alternative is to wait for Google to officially enable VoLTE in more markets — something the company recently signaled it’s working on.&lt;/p&gt;
    &lt;p&gt;Thank you for being part of our community. Read our Comment Policy before posting.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.androidauthority.com/pixel-ims-broken-october-update-3606444/"/><published>2025-10-11T23:41:00+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45553783</id><title>Vancouver Stock Exchange: Scam capital of the world (1989) [pdf]</title><updated>2025-10-12T11:07:14.523160+00:00</updated><content/><link href="https://scamcouver.wordpress.com/wp-content/uploads/2012/04/scam-capital.pdf"/><published>2025-10-11T23:43:42+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45553835</id><title>LineageOS 23</title><updated>2025-10-12T11:07:14.146301+00:00</updated><content>&lt;doc fingerprint="1f3a29d3d2b25be8"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Changelog 30 - Sleek Sixteen, Streamlined Suite, Future Flow&lt;/head&gt;
    &lt;head rend="h6"&gt;Written on October 11, 2025 by Nolen Johnson (npjohnson)&lt;/head&gt;
    &lt;head rend="h2"&gt;23 - Primetime Release&lt;/head&gt;
    &lt;p&gt;Hey there! Welcome back!&lt;/p&gt;
    &lt;p&gt;This last year has been a whirlwind to say the least, but we have remained dedicated to bringing an updated LineageOS based on Android 16 to the masses!&lt;/p&gt;
    &lt;p&gt;We’ve been hard at work rebasing all of our changes and features since Android 16’s release in June. Android 16’s first release mainly contained iterative improvements and some UI/UX refinements, but due to our previous efforts adapting to Google’s UI-centric adjustments in Android 12 through 14, we were able to rebase onto Android 16’s code-base faster than anticipated. Yes you read that right: We’re early this year!&lt;/p&gt;
    &lt;p&gt;Other components have complicated our release and security patching efforts, but we’ll get to that shortly.&lt;/p&gt;
    &lt;head rend="h3"&gt;Google’s Patch Cadence, and LineageOS Going Forward&lt;/head&gt;
    &lt;head rend="h4"&gt;Firstly, what even is an ASB? Or a QPR?&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;ASB (Android Security Bulletin) – Google’s monthly roundup of newly fixed security vulnerabilities across the Android ecosystem. Distributed as a list of patches and security branch updates for older but still supported Android versions, with the current version tagged monthly. These updates let projects like ours and OEMs stay aligned with Google’s security baseline.&lt;/item&gt;
      &lt;item&gt;QPR (Quarterly Platform Release) – Mid-cycle updates to a given Android version, landing every few months. QPRs bring not just security fixes but also bug fixes, performance improvements, and feature changes (like Material 3 Expressive in 16 QPR1).&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h4"&gt;Okay, why are you telling me this?&lt;/head&gt;
    &lt;p&gt;You’ll notice we are choosing to release LineageOS 23.0, and not 23.1. That’s because it’s based on Android 16’s initial release (what we’ll call QPR0), even though QPR1 has already rolled out to Pixels. The catch? Google never pushed QPR1’s source to AOSP. They’ve said it’ll come “in the coming weeks” (source), but right now only contracted partners have access. And to answer the immediate question, the likelihood that any custom ROM will ever be a contracted Google partner is near 0.&lt;/p&gt;
    &lt;p&gt;On top of that, Google’s handling of ASBs has shifted (source). July was empty for the first time since the program began, August had a single patch, and September omitted patches for several listed vulnerabilities, with fixes shared privately to partners under embargo. The result is that AOSP security updates are no longer released in full on a monthly basis. Instead, only vulnerabilities deemed “high risk” (i.e. actively exploited in the wild) will be published by Google in the monthly ASBs, and even then, the underlying patches are often not made public immediately.&lt;/p&gt;
    &lt;p&gt;On a quarterly cadence, Google now issues larger security bulletins that include patches for vulnerabilities originally discovered in prior months. These quarterly bulletins coincide with QPRs (Quarterly Platform Releases), which bundles those security fixes together with feature updates, but have so far not been pushed to AOSP at the time of release.&lt;/p&gt;
    &lt;p&gt;This is why you’ve seen the LineageOS 22.2 security patch level remain reflective of August well into September.&lt;/p&gt;
    &lt;p&gt;In short: this cadence is now the norm, and we need to adapt.&lt;/p&gt;
    &lt;head rend="h4"&gt;And I heard that Google stopped pushing Pixel source?&lt;/head&gt;
    &lt;p&gt;Yes, Google has pulled back here too. Pixel kernels are now only offered as history-stripped tarballs, available privately on request, with no device trees, HALs, or configs. Thanks to projects like CalyxOS, Pixels will likely remain well supported, but they’re no longer guaranteed “day one” devices for LineageOS. Pixel devices are now effectively no easier to support than any other OEM’s devices.&lt;/p&gt;
    &lt;p&gt;In short, this just makes things harder, not impossible.&lt;/p&gt;
    &lt;head rend="h4"&gt;How does this affect LineageOS? And me?&lt;/head&gt;
    &lt;p&gt;It means we adapt. Instead of waiting indefinitely for QPR1’s source, we’re shipping 23.0 now on “QPR0”, with the publicly available ASB patches applied, and we’ll only attest to a security patch level once we have access to all of its fixes. When QPR1 (and future QPRs) eventually land in AOSP, we’ll merge or rebase as appropriate.&lt;/p&gt;
    &lt;p&gt;This does mean some features (like Material 3 Expressive) aren’t here yet. But it ensures users get timely builds, the most complete security fixes we can legally access, and a clear path forward without being stuck in limbo.&lt;/p&gt;
    &lt;p&gt;This will likely be the expected norm for Android 17 and beyond, so expect more &lt;code&gt;.0&lt;/code&gt; releases in the
future!&lt;/p&gt;
    &lt;head rend="h4"&gt;TL;DR:&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Google no longer pushes monthly tags and patches to AOSP; and most fixes/security patches are now pushed quarterly, if at all.&lt;/item&gt;
      &lt;item&gt;Security patch levels may occasionally lag: we only increment them once all patches are public.&lt;/item&gt;
      &lt;item&gt;LineageOS 23.0 is based on Android 16 “QPR0” because QPR1’s source isn’t public yet. &lt;list rend="ul"&gt;&lt;item&gt;Because of this some headline features (like Material 3 Expressive) will come later, once sources drop.&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Pixel support continues, but with reduced source access, they’re no longer guaranteed, let alone on day one.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;Legacy Devices&lt;/head&gt;
    &lt;p&gt;The bad news extends a bit further here, though it’s less surprising than the earlier sections.&lt;/p&gt;
    &lt;p&gt;Google’s increased reliance on newer eBPF features has made supporting devices with older Linux kernels increasingly difficult. Android 16 “QPR0” “requires Linux 5.4 and above, and at the time of writing, the necessary features have only been properly backported as far back as &lt;code&gt;4.14&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;Unfortunately, LineageOS 22.2 still supports many devices running &lt;code&gt;4.4&lt;/code&gt; and &lt;code&gt;4.9&lt;/code&gt;. As of
now, no complete backports of the required features exist for these kernels. The silver lining is
that, unlike the massive device loss we saw moving off LineageOS 18.1, these versions could be
salvaged if someone were to take on the work of adapting the backports. If you do succeed, please
reach out to devrel(at)lineageos.org, we’d be happy to review it!&lt;/p&gt;
    &lt;p&gt;We’re currently targeting only shipping kernels that have 1:1 eBPF backports to make them feature equivalent to Linux 5.4 from here on out to avoid compatibility issues.&lt;/p&gt;
    &lt;head rend="h3"&gt;Back to the Good Stuff!&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Security patches from September 2024 to August 2025 have been merged to LineageOS 20 through 23.0.&lt;/item&gt;
      &lt;item&gt;SeedVault and Etar have both been updated to their newest respective upstream version, with multiple fixes having been sent back to the relevant upstream repos!&lt;/item&gt;
      &lt;item&gt;WebView has been updated to Chromium 140.0.7339.51.&lt;/item&gt;
      &lt;item&gt;Contributor demon000 (Cosmin Tanislav) has started work on an awesome set of tools to assist maintainers in device bringups from scratch! They’re still in-progress, but are staged to make a lot of our efforts significantly easier and more streamlined - so stay tuned! Maybe a rare non-yearly blog post? ;)&lt;/item&gt;
      &lt;item&gt;Contributor 0xCAFEBABE has extended support for various VirtIO configurations (QEMU/crosvm/UTM/libvirt, etc.) targets! Though these aren’t supported officially, there is an awesome, comprehensive guide for building and utilizing these targets on the Wiki. There is even a newer one allowing you to run LineageOS in a UTM virtual machine on an Apple Silicon Mac!&lt;/item&gt;
      &lt;item&gt;Contributor 0xCAFEBABE has added support for Cuttlefish targets!&lt;/item&gt;
      &lt;item&gt;Contributor 0xCAFEBABE has extended support for devices booting Android on the mainline Linux kernel! This will allow us to in theory boot LineageOS on almost all devices supported by the Linux kernel. It’s in early phases, but very promising, with several successful device ports already available on the LineageOS GitHub organization! Check the search term “mainline” on the organization’s search bar.&lt;/item&gt;
      &lt;item&gt;LineageOS is now nearly &lt;code&gt;Android.mk&lt;/code&gt;free! Google announced their move from&lt;code&gt;make&lt;/code&gt;to&lt;code&gt;soong&lt;/code&gt;many years ago, pushing developers to migrate from Android.mk to Android.bp, and has started blocking Android.mk in many locations of the source tree.&lt;list rend="ul"&gt;&lt;item&gt;While converting these is a seemingly simple task - in practice it involved countless hours of converting conditional checks, regression testing, and thousands of individual patches. As of this writing, LineageOS introduces less than 10 Android.mk files at a platform level, and many of these are in the process of being converted. In short - we’re ready for when Google kills support for Android.mk.&lt;/item&gt;&lt;item&gt;0xCAFEBABE also created a build target for converting from mk to bp, a WIP feature to assist developers in migrating to soong!&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Both the Charging Control, and Fast Charge Control features have received many updates and improvements.&lt;/item&gt;
      &lt;item&gt;A new set of ringtones and alarms from Plasma Mobile have been included.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;Application Updates&lt;/head&gt;
    &lt;p&gt;LineageOS isn’t just about the OS itself: our suite of core apps continues to evolve as well. This cycle brings some major improvements:&lt;/p&gt;
    &lt;head rend="h4"&gt;Aperture (Camera)&lt;/head&gt;
    &lt;p&gt;Our camera app, Aperture, has been rewritten from the ground up. The rewrite makes the app much easier to maintain, while also bringing new features:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Support for JPEG Ultra HDR, RAW, and simultaneous RAW+JPEG capture.&lt;/item&gt;
      &lt;item&gt;A redesigned notification island with dynamic colors, and new indicators (JPEG Ultra HDR, RAW, battery, thermal throttling).&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Keep your system updated (or keep updating the app if you’re using the app standalone), since we plan to introduce more features and improvements over time (believe it or not, nowadays the only obstacle is Google’s CameraX library, which has slowed down the development of certain components which we use in Aperture). We do have some plans to overcome this though.&lt;/p&gt;
    &lt;head rend="h4"&gt;Twelve (Music Player)&lt;/head&gt;
    &lt;p&gt;Our music player, Twelve, didn’t need a full overhaul this year, but it did get some polish and some new features:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Added a “Play random songs” button for quicker library playback.&lt;/item&gt;
      &lt;item&gt;Updated the Now Playing screen with playback statistics (for the nerds and audiophiles out there).&lt;/item&gt;
      &lt;item&gt;Added the ability to rescan the local media store, so newly added music shows up without needing a reboot.&lt;/item&gt;
      &lt;item&gt;Expanded Jellyfin integration, including suggestions, favorites, and better thumbnail handling.&lt;/item&gt;
      &lt;item&gt;Added MIDI playback support.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;New App, Again?&lt;/head&gt;
    &lt;p&gt;We’re excited to debut Catapult, our brand-new custom launcher for Android TV. Catapult is built with the same principles we bring to the rest of LineageOS: clean, simple, functional design, with thoughtful user experience at its core.&lt;/p&gt;
    &lt;p&gt;Why build a new launcher? For years, Android TV and Google TV users have been stuck with preloaded launchers that aggressively push advertising and recommendations users can’t control. Catapult changes that. It strips away the clutter, gives you back your home screen, and lets you decide what belongs front and center.&lt;/p&gt;
    &lt;p&gt;With Catapult, you get a fast, intuitive interface that focuses on your apps and your content: no forced feeds, no “sponsored” rows, just a launcher that works the way you expect.&lt;/p&gt;
    &lt;p&gt;We’re also planning to add more features in the future, you’ll see them appear as you keep your device up to date, stay tuned!&lt;/p&gt;
    &lt;head rend="h3"&gt;Extended QEMU-Based Virtual Machine Support&lt;/head&gt;
    &lt;p&gt;LineageOS has long been a favorite for developers and tinkerers, and with 23.0 we’ve expanded support for virtualized environments. Thanks to extended QEMU integration spearheaded by developer 0xCAFEBABE, it’s now easier than ever to run LineageOS in VMs for testing, debugging, or just exploration. This means developers can spin up consistent environments on their desktops without needing dedicated hardware, and testers can reproduce tricky issues with greater reliability. Whether you’re validating patches or just curious to see how LineageOS runs under the hood, the tooling is smoother and more accessible.&lt;/p&gt;
    &lt;p&gt;If interested, take a look on the Wiki. You can run LineageOS via libvirt on Linux/Windows, and on an Apple Silicon Mac with UTM.&lt;/p&gt;
    &lt;p&gt;Additionally, LineageOS now supports Cuttlefish build configurations, which are similar to the &lt;code&gt;emulator&lt;/code&gt; family of targets, but has extra
emulated peripherals, so as to act more like a real device! You can view a list of all the differences
here.&lt;/p&gt;
    &lt;head rend="h3"&gt;Mainline Kernel Support&lt;/head&gt;
    &lt;p&gt;Another big milestone in 23.0 is our improved support for devices running Linux mainline kernels.&lt;/p&gt;
    &lt;p&gt;While Android has historically relied on heavily modified vendor kernels, the ecosystem is shifting toward mainline for long-term stability and maintainability.&lt;/p&gt;
    &lt;p&gt;With 23.0, developer 0xCAFEBABE has spearheaded an effort to extend compatibility for devices capable of booting the mainline Linux kernel, and we’ve made it easier for maintainers to bring their devices closer to upstream with inheritable common trees. The end result? For now, nothing, but in the future, we will hopefully be able to boot Android on almost any device that is supported by the mainline Linux kernel.&lt;/p&gt;
    &lt;p&gt;This effort should help keep devices alive well past the point where their proprietary components stop working with newer Android releases.&lt;/p&gt;
    &lt;p&gt;See the following repos if interested! (1, 2, 3, 4)&lt;/p&gt;
    &lt;head rend="h3"&gt;Careful Commonization&lt;/head&gt;
    &lt;p&gt;Several of our developers have worked hard on SoC-specific common kernels to base on that can be merged on a somewhat regular basis to pull in the latest features/security patches to save maintainers additional effort.&lt;/p&gt;
    &lt;p&gt;Go check them out and consider basing your device kernels on them!&lt;/p&gt;
    &lt;p&gt;Supported SoCs right now are:&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="3"&gt;
        &lt;cell role="head"&gt;SoC (system-on-chip)&lt;/cell&gt;
        &lt;cell role="head"&gt;Kernel Version&lt;/cell&gt;
        &lt;cell role="head"&gt;Android Version&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Qualcomm MSM8998/MSM8996&lt;/cell&gt;
        &lt;cell&gt;4.4&lt;/cell&gt;
        &lt;cell&gt;13, 14, 15&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Qualcomm MSM8953&lt;/cell&gt;
        &lt;cell&gt;4.9&lt;/cell&gt;
        &lt;cell&gt;13, 14, 15&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Qualcomm SDM845&lt;/cell&gt;
        &lt;cell&gt;4.9&lt;/cell&gt;
        &lt;cell&gt;13, 14, 15&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Qualcomm SM8150&lt;/cell&gt;
        &lt;cell&gt;4.14&lt;/cell&gt;
        &lt;cell&gt;13, 14, 15, 16&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Qualcomm SDM660&lt;/cell&gt;
        &lt;cell&gt;4.19&lt;/cell&gt;
        &lt;cell&gt;13, 14, 15, 16&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Qualcomm SM8250&lt;/cell&gt;
        &lt;cell&gt;4.19&lt;/cell&gt;
        &lt;cell&gt;13, 14, 15, 16&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Qualcomm SM8350&lt;/cell&gt;
        &lt;cell&gt;5.4&lt;/cell&gt;
        &lt;cell&gt;13, 14, 15, 16&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Qualcomm SM8450&lt;/cell&gt;
        &lt;cell&gt;5.10&lt;/cell&gt;
        &lt;cell&gt;13, 14, 15, 16&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Qualcomm SM8550&lt;/cell&gt;
        &lt;cell&gt;5.15&lt;/cell&gt;
        &lt;cell&gt;13, 14, 15, 16&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Qualcomm SM8650&lt;/cell&gt;
        &lt;cell&gt;6.1&lt;/cell&gt;
        &lt;cell&gt;14, 15, 16&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Qualcomm SM8750&lt;/cell&gt;
        &lt;cell&gt;6.6&lt;/cell&gt;
        &lt;cell&gt;15, 16&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Moreover, many legacy devices require interpolating libraries that we colloquially refer to as “shims” - these have long been device and maintainer managed, but this cycle we have decided to commonize them to make the effort easier on everyone and not duplicate effort!&lt;/p&gt;
    &lt;p&gt;You can check it out here and contribute shims that you think other devices may need or add additional components to additional shims and compatibility layers provided via Gerrit!&lt;/p&gt;
    &lt;head rend="h3"&gt;Deprecations&lt;/head&gt;
    &lt;p&gt;Overall, we feel that the 23.0 branch has reached feature and stability parity with 22.2 and is ready for initial release.&lt;/p&gt;
    &lt;p&gt;We will allow new LineageOS 21 submissions to be forked to the organization, but we will no longer allow newly submitted LineageOS 21 devices to ship.&lt;/p&gt;
    &lt;p&gt;LineageOS 23.0 will launch building for a decent selection of devices, with additional devices to come as they meet the requirements specified by the Charter and are made ready for builds by their maintainer.&lt;/p&gt;
    &lt;head rend="h3"&gt;Upgrading to LineageOS 23.0&lt;/head&gt;
    &lt;p&gt;To upgrade, please follow the upgrade guide for your device by clicking on it here and then on “Upgrade to a higher version of LineageOS”.&lt;/p&gt;
    &lt;p&gt;If you’re coming from an unofficial build, you need to follow the good ole’ install guide for your device, just like anyone else looking to install LineageOS for the first time. These can be found at the same place here by clicking on your device and then on “Installation”.&lt;/p&gt;
    &lt;p&gt;Please note that if you’re currently on an official build, you DO NOT need to wipe your device, unless your device’s wiki page specifically dictates otherwise, as is needed for some devices with massive changes, such as a repartition.&lt;/p&gt;
    &lt;head rend="h3"&gt;Download portal&lt;/head&gt;
    &lt;p&gt;While it has been in the making for quite a while and already released two years ago, it’s still relevant to this blog post. Our download portal has been redesigned and gained a few functional improvements:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Dark mode&lt;/item&gt;
      &lt;item&gt;Downloads of additional images (shown for all devices but not used on all of them, read the instructions to know which ones you need for your device’s installation!)&lt;/item&gt;
      &lt;item&gt;Verifying downloaded files (see here) - if you go with any download not obtained from us, you can still verify it was originally signed by us and thus untampered with&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;A reminder: Follow the LineageOS Wiki to the letter! If an image is listed on the download portal that the wiki doesn’t ask you to use, ignore it! It is likely there so the maintainer can point power-users at it if needed.&lt;/p&gt;
    &lt;head rend="h3"&gt;Wiki&lt;/head&gt;
    &lt;p&gt;The LineageOS Wiki has also been expanded over the years and now offers, in addition to the known and tested instructions for all supported devices, some improvements:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;The device overview allows filtering for various attributes you might be interested in a device (please note that choosing a device only based on that list still does not guarantee any device support beyond the point of when you chose it)&lt;/item&gt;
      &lt;item&gt;The device overview now lists variants of a device and other known marketing names in a more visible way, also allowing for different device information and instructions per variant to be shown&lt;/item&gt;
      &lt;item&gt;The installation instructions have been paginated, giving users less chance to skip a section involuntarily&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;In addition to that we’d like to take this time to remind users to follow instructions on their device’s respective Wiki Page given the complexity introduced by AOSP changes like System-As-Root, A/B Partition Scheme, Dynamic Partitions, and most recently Virtual A/B found on the Pixel 5 and other devices launching with Android 11, the instructions many of you are used to following from memory are either no longer valid or are missing very critical steps. As of 16.0, maintainers have been expected to run through the full instructions and verify they work on their devices. The LineageOS Wiki was recently further extended, and maintainers were given significantly more options to customize their device’s specific installation, update, and upgrade instructions.&lt;/p&gt;
    &lt;head rend="h3"&gt;Developers, Developers, Developers&lt;/head&gt;
    &lt;p&gt;Or, in this case, maintainers, maintainers, maintainers. We want your device submissions!&lt;/p&gt;
    &lt;p&gt;If you’re a developer and would like to submit your device for officials, it’s easier than ever. Just follow the instructions here.&lt;/p&gt;
    &lt;p&gt;The above also applies to people looking to bring back devices that were at one point official but are no longer supported - seriously - even if it’s not yet completely compliant, submit it! Maybe we can help you complete it.&lt;/p&gt;
    &lt;p&gt;After you submit, within generally a few weeks, but in most cases a week, you’ll receive some feedback on your device submission; and if it’s up to par, you’ll be invited to our communications instances and your device will be forked to LineageOS’s official repositories.&lt;/p&gt;
    &lt;p&gt;Don’t have the knowledge to maintain a device, but want to contribute to the platform? We have lots of other things you can contribute to. For instance, our apps suite is always looking for new people to help improve them, or you can contribute to the wiki by adding more useful information &amp;amp; documentation. Gerrit is always open for submissions! Once you’ve contributed a few things, send an email to devrel(at)lineageos.org detailing them, and we’ll get you in the loop.&lt;/p&gt;
    &lt;p&gt;Also, if you sent a submission that didn’t get a response in the last few months, please follow up, we’ve swapped providers again!&lt;/p&gt;
    &lt;head rend="h3"&gt;Generic Targets&lt;/head&gt;
    &lt;p&gt;We’ve talked about these before, but these are important, so we will cover them again.&lt;/p&gt;
    &lt;p&gt;Although we’ve had buildable generic targets since 2019, to make LineageOS more accessible to developers, and really anyone interested in giving LineageOS a try, we’ve documented how to use them in conjunction with the Android Emulator/Android Studio!&lt;/p&gt;
    &lt;p&gt;Additionally, similar targets can now be used to build GSI in mobile, Android TV configurations, and Android Automotive making LineageOS more accessible than ever to devices using Google’s Project Treble. We won’t be providing official builds for these targets, due to the fact the user experience varies entirely based on how well the device manufacturer complied with Treble’s requirements, but feel free to go build them yourself and give it a shot!&lt;/p&gt;
    &lt;p&gt;Please note that Android 12 (and by proxy all later Android versions) diverged GSI and Emulator targets. Emulator targets reside in &lt;code&gt;lineage_sdk_$arch&lt;/code&gt;, while GSI targets reside in
&lt;code&gt;lineage_gsi_$arch&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;Additionally, experimental targets now exist for QEMU-based virtual machine software (libvirt, UTM, etc). Instructions on building and utilizing these targets can be found on the Wiki.&lt;/p&gt;
    &lt;head rend="h3"&gt;Translations&lt;/head&gt;
    &lt;p&gt;Bilingual? Trilingual? Anything-lingual?&lt;/p&gt;
    &lt;p&gt;If you think you can help translate LineageOS to a different language, jump over to our wiki and have a go! If your language is not supported natively in Android, reach out to us on Crowdin and we’ll take the necessary steps to include your language. For instance, LineageOS is the first Android custom distribution that has complete support for the Welsh (Cymraeg) language thanks to its community of translators.&lt;/p&gt;
    &lt;p&gt;Please, contribute to translations only if you are reasonably literate in the target language; poor translations waste both our time and yours.&lt;/p&gt;
    &lt;head rend="h3"&gt;Build roster&lt;/head&gt;
    &lt;head rend="h4"&gt;Added 23 devices&lt;/head&gt;
    &lt;table&gt;
      &lt;row span="4"&gt;
        &lt;cell role="head"&gt;Device name&lt;/cell&gt;
        &lt;cell role="head"&gt;Wiki&lt;/cell&gt;
        &lt;cell role="head"&gt;Maintainers&lt;/cell&gt;
        &lt;cell role="head"&gt;Moved from&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;F(x)tec Pro¹ X&lt;/cell&gt;
        &lt;cell&gt;pro1x&lt;/cell&gt;
        &lt;cell&gt;BadDaemon, bgcngm, mccreary, npjohnson, qsnc, tdm&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Fairphone 4&lt;/cell&gt;
        &lt;cell&gt;FP4&lt;/cell&gt;
        &lt;cell&gt;mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Fairphone 5&lt;/cell&gt;
        &lt;cell&gt;FP5&lt;/cell&gt;
        &lt;cell&gt;mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Google Pixel 4a 5G&lt;/cell&gt;
        &lt;cell&gt;bramble&lt;/cell&gt;
        &lt;cell&gt;mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Google Pixel 5&lt;/cell&gt;
        &lt;cell&gt;redfin&lt;/cell&gt;
        &lt;cell&gt;mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Google Pixel 5a&lt;/cell&gt;
        &lt;cell&gt;barbet&lt;/cell&gt;
        &lt;cell&gt;mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Lenovo Z5 Pro GT&lt;/cell&gt;
        &lt;cell&gt;heart&lt;/cell&gt;
        &lt;cell&gt;themard, optionaltoast&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Lenovo Z6 Pro&lt;/cell&gt;
        &lt;cell&gt;zippo&lt;/cell&gt;
        &lt;cell&gt;Lucchetto, themard, einargednochsson&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola defy 2021&lt;/cell&gt;
        &lt;cell&gt;bathena&lt;/cell&gt;
        &lt;cell&gt;Deivid Ignacio Parra, Francisco Sanchez&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola edge 20&lt;/cell&gt;
        &lt;cell&gt;berlin&lt;/cell&gt;
        &lt;cell&gt;npjohnson, SGCMarkus&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola edge 2021&lt;/cell&gt;
        &lt;cell&gt;berlna&lt;/cell&gt;
        &lt;cell&gt;SyberHexen&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola edge 30 fusion&lt;/cell&gt;
        &lt;cell&gt;tundra&lt;/cell&gt;
        &lt;cell&gt;themard, electimon&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola edge 30 neo&lt;/cell&gt;
        &lt;cell&gt;miami&lt;/cell&gt;
        &lt;cell&gt;marcost2&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola edge 30&lt;/cell&gt;
        &lt;cell&gt;dubai&lt;/cell&gt;
        &lt;cell&gt;themard, sb6596, Demon000&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola edge 40 pro / Motorola moto X40 / Motorola edge+ (2023)&lt;/cell&gt;
        &lt;cell&gt;rtwo&lt;/cell&gt;
        &lt;cell&gt;sgcmarkus, themard&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto e7 plus / Lenovo K12&lt;/cell&gt;
        &lt;cell&gt;guam&lt;/cell&gt;
        &lt;cell&gt;Rajin Gangadharan, Deivid Ignacio Parra&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g 5G - 2024&lt;/cell&gt;
        &lt;cell&gt;fogo&lt;/cell&gt;
        &lt;cell&gt;mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g power 2021&lt;/cell&gt;
        &lt;cell&gt;borneo&lt;/cell&gt;
        &lt;cell&gt;Syed Fawwaz Hussain (Fazwalrus), Deivid Ignacio Parra&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g stylus 5G (2022)&lt;/cell&gt;
        &lt;cell&gt;milanf&lt;/cell&gt;
        &lt;cell&gt;AnierinBliss&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g stylus 5G&lt;/cell&gt;
        &lt;cell&gt;denver&lt;/cell&gt;
        &lt;cell&gt;Vivekachooz&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g10 / Motorola moto g10 power / Lenovo K13 Note&lt;/cell&gt;
        &lt;cell&gt;capri&lt;/cell&gt;
        &lt;cell&gt;Deivid Ignacio Parra, Sultanahamer&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g200 5G / Motorola Edge S30&lt;/cell&gt;
        &lt;cell&gt;xpeng&lt;/cell&gt;
        &lt;cell&gt;themard, rogers2602&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g30 / Lenovo K13 Pro&lt;/cell&gt;
        &lt;cell&gt;caprip&lt;/cell&gt;
        &lt;cell&gt;mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g32&lt;/cell&gt;
        &lt;cell&gt;devon&lt;/cell&gt;
        &lt;cell&gt;Dhina17, mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g34 5G / Motorola moto g45 5G&lt;/cell&gt;
        &lt;cell&gt;fogos&lt;/cell&gt;
        &lt;cell&gt;mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g42&lt;/cell&gt;
        &lt;cell&gt;hawao&lt;/cell&gt;
        &lt;cell&gt;Dhina17, mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g52&lt;/cell&gt;
        &lt;cell&gt;rhode&lt;/cell&gt;
        &lt;cell&gt;Dhina17, mikeioannina, tomoms&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g82 5G&lt;/cell&gt;
        &lt;cell&gt;rhodep&lt;/cell&gt;
        &lt;cell&gt;AnandSuresh02, sevenrock&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g84 5G&lt;/cell&gt;
        &lt;cell&gt;bangkk&lt;/cell&gt;
        &lt;cell&gt;mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g9 play / Motorola moto g9 / Lenovo K12 Note&lt;/cell&gt;
        &lt;cell&gt;guamp&lt;/cell&gt;
        &lt;cell&gt;DelightReza, Deivid Ignacio Parra&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g9 power / Lenovo K12 Pro&lt;/cell&gt;
        &lt;cell&gt;cebu&lt;/cell&gt;
        &lt;cell&gt;Deivid Ignacio Parra&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Nothing Phone (2)&lt;/cell&gt;
        &lt;cell&gt;Pong&lt;/cell&gt;
        &lt;cell&gt;chandu078&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Nubia Mini 5G&lt;/cell&gt;
        &lt;cell&gt;TP1803&lt;/cell&gt;
        &lt;cell&gt;ArianK16a, npjohnson&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 11 5G&lt;/cell&gt;
        &lt;cell&gt;salami&lt;/cell&gt;
        &lt;cell&gt;bgcngm&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 12R&lt;/cell&gt;
        &lt;cell&gt;aston&lt;/cell&gt;
        &lt;cell&gt;inferno0230&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 7 Pro / OnePlus 7 Pro (T-Mobile)&lt;/cell&gt;
        &lt;cell&gt;guacamole&lt;/cell&gt;
        &lt;cell&gt;LuK1337, Tortel&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 7&lt;/cell&gt;
        &lt;cell&gt;guacamoleb&lt;/cell&gt;
        &lt;cell&gt;shantanu-sarkar&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 7T / OnePlus 7T (T-Mobile)&lt;/cell&gt;
        &lt;cell&gt;hotdogb&lt;/cell&gt;
        &lt;cell&gt;LuK1337&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 7T Pro&lt;/cell&gt;
        &lt;cell&gt;hotdog&lt;/cell&gt;
        &lt;cell&gt;qsnc&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 8 / OnePlus 8 (T-Mobile)&lt;/cell&gt;
        &lt;cell&gt;instantnoodle&lt;/cell&gt;
        &lt;cell&gt;jabashque&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 8 Pro&lt;/cell&gt;
        &lt;cell&gt;instantnoodlep&lt;/cell&gt;
        &lt;cell&gt;LuK1337&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 8T / OnePlus 8T (T-Mobile)&lt;/cell&gt;
        &lt;cell&gt;kebab&lt;/cell&gt;
        &lt;cell&gt;LuK1337, mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 9 / OnePlus 9 (T-Mobile)&lt;/cell&gt;
        &lt;cell&gt;lemonade&lt;/cell&gt;
        &lt;cell&gt;mikeioannina, tangalbert919, ZVNexus&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 9 Pro / OnePlus 9 Pro (T-Mobile)&lt;/cell&gt;
        &lt;cell&gt;lemonadep&lt;/cell&gt;
        &lt;cell&gt;LuK1337, bgcngm, mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 9R&lt;/cell&gt;
        &lt;cell&gt;lemonades&lt;/cell&gt;
        &lt;cell&gt;mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 9RT&lt;/cell&gt;
        &lt;cell&gt;martini&lt;/cell&gt;
        &lt;cell&gt;mikeioannina, basamaryan&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus Nord CE 2 Lite 5G&lt;/cell&gt;
        &lt;cell&gt;oscaro&lt;/cell&gt;
        &lt;cell&gt;Vivekachooz&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus Nord CE 3 Lite 5G / OnePlus Nord N30 5G&lt;/cell&gt;
        &lt;cell&gt;larry&lt;/cell&gt;
        &lt;cell&gt;Vivekachooz&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus Nord CE4&lt;/cell&gt;
        &lt;cell&gt;benz&lt;/cell&gt;
        &lt;cell&gt;inferno0230&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus Pad 2 Pro / OnePlus Pad 3&lt;/cell&gt;
        &lt;cell&gt;erhai&lt;/cell&gt;
        &lt;cell&gt;LuK1337, bgcngm&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Realme 10 Pro 5G&lt;/cell&gt;
        &lt;cell&gt;luigi&lt;/cell&gt;
        &lt;cell&gt;Vivekachooz&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Realme 9 Pro 5G / Realme 9 5G / Realme Q5&lt;/cell&gt;
        &lt;cell&gt;oscar&lt;/cell&gt;
        &lt;cell&gt;Vivekachooz&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy A21s&lt;/cell&gt;
        &lt;cell&gt;a21s&lt;/cell&gt;
        &lt;cell&gt;DaemonMCR&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy F62 / Samsung Galaxy M62&lt;/cell&gt;
        &lt;cell&gt;f62&lt;/cell&gt;
        &lt;cell&gt;Linux4&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy Note10 5G&lt;/cell&gt;
        &lt;cell&gt;d1x&lt;/cell&gt;
        &lt;cell&gt;Rocky7842, Linux4&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy Note10&lt;/cell&gt;
        &lt;cell&gt;d1&lt;/cell&gt;
        &lt;cell&gt;Linux4&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy Note10+ 5G&lt;/cell&gt;
        &lt;cell&gt;d2x&lt;/cell&gt;
        &lt;cell&gt;Linux4&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy Note10+&lt;/cell&gt;
        &lt;cell&gt;d2s&lt;/cell&gt;
        &lt;cell&gt;Linux4&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy S10 5G&lt;/cell&gt;
        &lt;cell&gt;beyondx&lt;/cell&gt;
        &lt;cell&gt;Linux4&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy S10&lt;/cell&gt;
        &lt;cell&gt;beyond1lte&lt;/cell&gt;
        &lt;cell&gt;Linux4&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy S10+&lt;/cell&gt;
        &lt;cell&gt;beyond2lte&lt;/cell&gt;
        &lt;cell&gt;Linux4&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy S10e&lt;/cell&gt;
        &lt;cell&gt;beyond0lte&lt;/cell&gt;
        &lt;cell&gt;Linux4&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy S20 FE / Samsung Galaxy S20 FE 5G&lt;/cell&gt;
        &lt;cell&gt;r8q&lt;/cell&gt;
        &lt;cell&gt;ata-kaner&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy Tab A7 10.4 2020 (LTE)&lt;/cell&gt;
        &lt;cell&gt;gta4l&lt;/cell&gt;
        &lt;cell&gt;chrmhoffmann&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy Tab A7 10.4 2020 (Wi-Fi)&lt;/cell&gt;
        &lt;cell&gt;gta4lwifi&lt;/cell&gt;
        &lt;cell&gt;chrmhoffmann&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy Tab S6 Lite (LTE)&lt;/cell&gt;
        &lt;cell&gt;gta4xl&lt;/cell&gt;
        &lt;cell&gt;haggertk, Linux4&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy Tab S6 Lite (Wi-Fi)&lt;/cell&gt;
        &lt;cell&gt;gta4xlwifi&lt;/cell&gt;
        &lt;cell&gt;Linux4, haggertk&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy Tab S7 (LTE)&lt;/cell&gt;
        &lt;cell&gt;gts7l&lt;/cell&gt;
        &lt;cell&gt;bgcngm&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy Tab S7 (Wi-Fi)&lt;/cell&gt;
        &lt;cell&gt;gts7lwifi&lt;/cell&gt;
        &lt;cell&gt;bgcngm&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Solana Saga&lt;/cell&gt;
        &lt;cell&gt;ingot&lt;/cell&gt;
        &lt;cell&gt;mikeioannina, npjohnson, tomoms&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia 1 II&lt;/cell&gt;
        &lt;cell&gt;pdx203&lt;/cell&gt;
        &lt;cell&gt;hellobbn&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia 1 III&lt;/cell&gt;
        &lt;cell&gt;pdx215&lt;/cell&gt;
        &lt;cell&gt;hellobbn&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia 1 V&lt;/cell&gt;
        &lt;cell&gt;pdx234&lt;/cell&gt;
        &lt;cell&gt;hellobbn&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia 10 IV&lt;/cell&gt;
        &lt;cell&gt;pdx225&lt;/cell&gt;
        &lt;cell&gt;LuK1337, jmpfbmx&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia 10 Plus&lt;/cell&gt;
        &lt;cell&gt;mermaid&lt;/cell&gt;
        &lt;cell&gt;LuK1337&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia 10 V&lt;/cell&gt;
        &lt;cell&gt;pdx235&lt;/cell&gt;
        &lt;cell&gt;jmpfbmx, LuK1337&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia 10&lt;/cell&gt;
        &lt;cell&gt;kirin&lt;/cell&gt;
        &lt;cell&gt;LuK1337&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia 5 II&lt;/cell&gt;
        &lt;cell&gt;pdx206&lt;/cell&gt;
        &lt;cell&gt;kyasu, hellobbn&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia 5 III&lt;/cell&gt;
        &lt;cell&gt;pdx214&lt;/cell&gt;
        &lt;cell&gt;kyasu, hellobbn&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia 5 V&lt;/cell&gt;
        &lt;cell&gt;pdx237&lt;/cell&gt;
        &lt;cell&gt;kyasu, hellobbn&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia XA2 Plus&lt;/cell&gt;
        &lt;cell&gt;voyager&lt;/cell&gt;
        &lt;cell&gt;LuK1337&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia XA2 Ultra&lt;/cell&gt;
        &lt;cell&gt;discovery&lt;/cell&gt;
        &lt;cell&gt;LuK1337&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia XA2&lt;/cell&gt;
        &lt;cell&gt;pioneer&lt;/cell&gt;
        &lt;cell&gt;LuK1337, jmpfbmx&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi 12 Pro&lt;/cell&gt;
        &lt;cell&gt;zeus&lt;/cell&gt;
        &lt;cell&gt;Adrianyyy, ArianK16a&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi 12&lt;/cell&gt;
        &lt;cell&gt;cupid&lt;/cell&gt;
        &lt;cell&gt;Adrianyyy, ArianK16a&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi 12S Pro&lt;/cell&gt;
        &lt;cell&gt;unicorn&lt;/cell&gt;
        &lt;cell&gt;Adrianyyy, ArianK16a&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi 12S Ultra&lt;/cell&gt;
        &lt;cell&gt;thor&lt;/cell&gt;
        &lt;cell&gt;Adrianyyy, ArianK16a&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi 12S&lt;/cell&gt;
        &lt;cell&gt;mayfly&lt;/cell&gt;
        &lt;cell&gt;Flower Sea&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi 12T Pro / Xiaomi Redmi K50 Ultra&lt;/cell&gt;
        &lt;cell&gt;diting&lt;/cell&gt;
        &lt;cell&gt;Adrianyyy, ArianK16a&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi 13 Pro&lt;/cell&gt;
        &lt;cell&gt;nuwa&lt;/cell&gt;
        &lt;cell&gt;Minus&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi 13&lt;/cell&gt;
        &lt;cell&gt;fuxi&lt;/cell&gt;
        &lt;cell&gt;lolipuru&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Mi 9T / Xiaomi Redmi K20 (China) / Xiaomi Redmi K20 (India)&lt;/cell&gt;
        &lt;cell&gt;davinci&lt;/cell&gt;
        &lt;cell&gt;ArianK16a&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Mi A3&lt;/cell&gt;
        &lt;cell&gt;laurel_sprout&lt;/cell&gt;
        &lt;cell&gt;Skyblueborb&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi POCO F5 (Global) / Xiaomi POCO F5 (India) / Xiaomi Redmi Note 12 Turbo&lt;/cell&gt;
        &lt;cell&gt;marble&lt;/cell&gt;
        &lt;cell&gt;Adrianyyy, ArianK16a&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi POCO F5 Pro / Xiaomi Redmi K60&lt;/cell&gt;
        &lt;cell&gt;mondrian&lt;/cell&gt;
        &lt;cell&gt;Adrianyyy, ArianK16a&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Redmi 12C / Xiaomi Redmi 12C NFC / Xiaomi POCO C55&lt;/cell&gt;
        &lt;cell&gt;earth&lt;/cell&gt;
        &lt;cell&gt;surblazer&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Redmi 3S / Xiaomi Redmi 3X / Xiaomi Redmi 4 (India) / Xiaomi Redmi 4X / Xiaomi Redmi Note 5A Prime / Xiaomi Redmi Y1 Prime&lt;/cell&gt;
        &lt;cell&gt;Mi8937&lt;/cell&gt;
        &lt;cell&gt;0xCAFEBABE&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Redmi 4A / Xiaomi Redmi 5A / Xiaomi Redmi Note 5A Lite / Xiaomi Redmi Y1 Lite&lt;/cell&gt;
        &lt;cell&gt;Mi8917&lt;/cell&gt;
        &lt;cell&gt;0xCAFEBABE&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Redmi 7A / Xiaomi Redmi 8 / Xiaomi Redmi 8A / Xiaomi Redmi 8A Dual&lt;/cell&gt;
        &lt;cell&gt;Mi439&lt;/cell&gt;
        &lt;cell&gt;0xCAFEBABE&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Redmi K60 Pro&lt;/cell&gt;
        &lt;cell&gt;socrates&lt;/cell&gt;
        &lt;cell&gt;WenHao2130&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Redmi Note 10 Pro / Xiaomi Redmi Note 10 Pro (India) / Xiaomi Redmi Note 10 Pro Max (India)&lt;/cell&gt;
        &lt;cell&gt;sweet&lt;/cell&gt;
        &lt;cell&gt;basamaryan, danielml3&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Redmi Note 10S / Xiaomi Redmi Note 10S NFC / Xiaomi Redmi Note 10S Latin America / Xiaomi POCO M5s&lt;/cell&gt;
        &lt;cell&gt;rosemary&lt;/cell&gt;
        &lt;cell&gt;surblazer&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Redmi Note 7 Pro&lt;/cell&gt;
        &lt;cell&gt;violet&lt;/cell&gt;
        &lt;cell&gt;0xCAFEBABE&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Xiaomi Redmi Note 8 / Xiaomi Redmi Note 8T&lt;/cell&gt;
        &lt;cell&gt;ginkgo&lt;/cell&gt;
        &lt;cell&gt;Skyblueborb, mikeioannina, programminghoch10&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;head rend="h4"&gt;Added 22.2 devices&lt;/head&gt;
    &lt;table&gt;
      &lt;row span="4"&gt;
        &lt;cell role="head"&gt;Device name&lt;/cell&gt;
        &lt;cell role="head"&gt;Wiki&lt;/cell&gt;
        &lt;cell role="head"&gt;Maintainers&lt;/cell&gt;
        &lt;cell role="head"&gt;Moved from&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;ASUS ZenFone 8&lt;/cell&gt;
        &lt;cell&gt;sake&lt;/cell&gt;
        &lt;cell&gt;DD3Boh, mikooomich&lt;/cell&gt;
        &lt;cell&gt;20&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;ASUS Zenfone 5Z (ZS620KL)&lt;/cell&gt;
        &lt;cell&gt;Z01R&lt;/cell&gt;
        &lt;cell&gt;ThEMarD&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;LG Style3&lt;/cell&gt;
        &lt;cell&gt;style3lm&lt;/cell&gt;
        &lt;cell&gt;rtx4d&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;LG Velvet&lt;/cell&gt;
        &lt;cell&gt;caymanslm&lt;/cell&gt;
        &lt;cell&gt;rtx4d&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g 5G / Motorola moto one 5G ace&lt;/cell&gt;
        &lt;cell&gt;kiev&lt;/cell&gt;
        &lt;cell&gt;basamaryan, Jleeblanch, SyberHexen, Vivekachooz&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g 5G plus / Motorola moto one 5G&lt;/cell&gt;
        &lt;cell&gt;nairo&lt;/cell&gt;
        &lt;cell&gt;ItsVixano, Ivanmeler, SyberHexen, zlewchan&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Nokia 6.1 (2018)&lt;/cell&gt;
        &lt;cell&gt;PL2&lt;/cell&gt;
        &lt;cell&gt;npjohnson&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Nokia 7 plus&lt;/cell&gt;
        &lt;cell&gt;B2N&lt;/cell&gt;
        &lt;cell&gt;Tuan Anh&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Nokia 8&lt;/cell&gt;
        &lt;cell&gt;NB1&lt;/cell&gt;
        &lt;cell&gt;Tuan Anh&lt;/cell&gt;
        &lt;cell&gt;21&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Nothing Phone (1)&lt;/cell&gt;
        &lt;cell&gt;Spacewar&lt;/cell&gt;
        &lt;cell&gt;zlewchan, ko_ko_konb&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Nubia Red Magic 5G (Global) / Nubia Red Magic 5G (China) / Nubia Red Magic 5S (Global) / Nubia Red Magic 5S (China)&lt;/cell&gt;
        &lt;cell&gt;nx659j&lt;/cell&gt;
        &lt;cell&gt;zlewchan&lt;/cell&gt;
        &lt;cell&gt;20&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Nubia Red Magic Mars&lt;/cell&gt;
        &lt;cell&gt;nx619j&lt;/cell&gt;
        &lt;cell&gt;Cyborg2017, rtx4d&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Nubia Z17&lt;/cell&gt;
        &lt;cell&gt;nx563j&lt;/cell&gt;
        &lt;cell&gt;BeYkeRYkt&lt;/cell&gt;
        &lt;cell&gt;21&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Nubia Z18&lt;/cell&gt;
        &lt;cell&gt;nx606j&lt;/cell&gt;
        &lt;cell&gt;Cyborg2017, rtx4d&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 12&lt;/cell&gt;
        &lt;cell&gt;waffle&lt;/cell&gt;
        &lt;cell&gt;chandu078&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 5&lt;/cell&gt;
        &lt;cell&gt;cheeseburger&lt;/cell&gt;
        &lt;cell&gt;qsnc&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 5T&lt;/cell&gt;
        &lt;cell&gt;dumpling&lt;/cell&gt;
        &lt;cell&gt;qsnc&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus Nord N20&lt;/cell&gt;
        &lt;cell&gt;gunnar&lt;/cell&gt;
        &lt;cell&gt;tangalbert919&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus Nord N200&lt;/cell&gt;
        &lt;cell&gt;dre&lt;/cell&gt;
        &lt;cell&gt;tangalbert919&lt;/cell&gt;
        &lt;cell&gt;21&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy A52 4G&lt;/cell&gt;
        &lt;cell&gt;a52q&lt;/cell&gt;
        &lt;cell&gt;Simon1511&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy A52s 5G&lt;/cell&gt;
        &lt;cell&gt;a52sxq&lt;/cell&gt;
        &lt;cell&gt;Simon1511&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy A72&lt;/cell&gt;
        &lt;cell&gt;a72q&lt;/cell&gt;
        &lt;cell&gt;Simon1511&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy A73 5G&lt;/cell&gt;
        &lt;cell&gt;a73xq&lt;/cell&gt;
        &lt;cell&gt;Simon1511&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy M52 5G&lt;/cell&gt;
        &lt;cell&gt;m52xq&lt;/cell&gt;
        &lt;cell&gt;Simon1511&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy Tab A 8.0 (2019)&lt;/cell&gt;
        &lt;cell&gt;gtowifi&lt;/cell&gt;
        &lt;cell&gt;lifehackerhansol&lt;/cell&gt;
        &lt;cell&gt;21&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Vsmart Joy 3 / Vsmart Joy 3+&lt;/cell&gt;
        &lt;cell&gt;casuarina&lt;/cell&gt;
        &lt;cell&gt;Tuan Anh, nhglong&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Black Shark&lt;/cell&gt;
        &lt;cell&gt;shark&lt;/cell&gt;
        &lt;cell&gt;rtx4d, tdrkDev&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi MIX Fold 2&lt;/cell&gt;
        &lt;cell&gt;zizhan&lt;/cell&gt;
        &lt;cell&gt;Adrianyyy, ArianK16a&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Mi 11i / Xiaomi Redmi K40 Pro / Xiaomi Redmi K40 Pro+ / Xiaomi Mi 11X Pro&lt;/cell&gt;
        &lt;cell&gt;haydn&lt;/cell&gt;
        &lt;cell&gt;ikeramat&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Mi 8 Explorer Edition&lt;/cell&gt;
        &lt;cell&gt;ursa&lt;/cell&gt;
        &lt;cell&gt;bgcngm&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Mi 8 Pro&lt;/cell&gt;
        &lt;cell&gt;equuleus&lt;/cell&gt;
        &lt;cell&gt;bgcngm&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Mi 8&lt;/cell&gt;
        &lt;cell&gt;dipper&lt;/cell&gt;
        &lt;cell&gt;infrag&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Mi MIX 2S&lt;/cell&gt;
        &lt;cell&gt;polaris&lt;/cell&gt;
        &lt;cell&gt;bgcngm&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Mi MIX 3&lt;/cell&gt;
        &lt;cell&gt;perseus&lt;/cell&gt;
        &lt;cell&gt;bgcngm, rtx4d&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Mi Note 10 / Xiaomi Mi Note 10 Pro / Xiaomi Mi CC9 Pro&lt;/cell&gt;
        &lt;cell&gt;tucana&lt;/cell&gt;
        &lt;cell&gt;SanyaPilot&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi POCO F1&lt;/cell&gt;
        &lt;cell&gt;beryllium&lt;/cell&gt;
        &lt;cell&gt;bgcngm, warabhishek&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi POCO X3 NFC&lt;/cell&gt;
        &lt;cell&gt;surya&lt;/cell&gt;
        &lt;cell&gt;Shimitar, TheStrechh, ikeramat&lt;/cell&gt;
        &lt;cell&gt;21&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi POCO X3 Pro&lt;/cell&gt;
        &lt;cell&gt;vayu&lt;/cell&gt;
        &lt;cell&gt;SebaUbuntu&lt;/cell&gt;
        &lt;cell&gt;20&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;ZTE Axon 9 Pro&lt;/cell&gt;
        &lt;cell&gt;akershus&lt;/cell&gt;
        &lt;cell&gt;rtx4d, tdrkDev&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://lineageos.org/Changelog-30/"/><published>2025-10-11T23:53:17+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45553995</id><title>Show HN: Rift – A tiling window manager for macOS</title><updated>2025-10-12T11:07:13.768215+00:00</updated><content>&lt;doc fingerprint="b650c0c0f935c118"&gt;
  &lt;main&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Multiple layout styles &lt;list rend="ul"&gt;&lt;item&gt;Tiling (i3/sway-like)&lt;/item&gt;&lt;item&gt;Binary Space Partitioning (bspwm-like)&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Menubar icon that shows all of the workspaces and the layouts within&lt;/item&gt;
      &lt;item&gt;MacOS-style mission control that allows you to visually navigate between workspaces&lt;/item&gt;
      &lt;item&gt;Focus follows the mouse with auto raise&lt;/item&gt;
      &lt;item&gt;Drag windows over one another to swap positions&lt;/item&gt;
      &lt;item&gt;Performant animations (as seen in the demo)&lt;/item&gt;
      &lt;item&gt;Switch to next/previous workspace with trackpad gestures (just like native macOS)&lt;/item&gt;
      &lt;item&gt;Hot reloadable configuration&lt;/item&gt;
      &lt;item&gt;Interop with third-party programs (ie Sketchybar) &lt;list rend="ul"&gt;&lt;item&gt;Requests can be made to rift via the cli or the mach port exposed (lua client here)&lt;/item&gt;&lt;item&gt;Signals can be sent on startup, workspace switches, and when the windows within a workspace change. These signals can be sent via a command(cli) or through a mach connection&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Does not require disabling SIP&lt;/item&gt;
      &lt;item&gt;Works with “Displays have separate Spaces” enabled (unlike all other major WMs)&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Get up and running via the wiki: &lt;/p&gt;
    &lt;p&gt;Rift is in active development but is still generally stable. There is no official release yet; expect ongoing changes.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Issues and PRs are very welcome.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Aerospace worked well for me, but I missed animations and the ability to use fullscreen on one display while working on the other. I also prefer leveraging private/undocumented APIs as they tend to be more reliable (due to the OS being built on them and all the public APIs) and performant. for more on why rift exists and what rift thrives to do, see the manifesto&lt;/p&gt;
    &lt;p&gt;Rift began as a fork (and is licensed as such) of glide-wm but has since diverged significantly. It uses private APIs reverse engineered by yabai and other projects. It is not affiliated with glide-wm or yabai.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/acsandmann/rift"/><published>2025-10-12T00:22:15+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45555012</id><title>Coral Protocol: Open infrastructure connecting the internet of agents</title><updated>2025-10-12T11:07:13.583127+00:00</updated><content>&lt;doc fingerprint="49bea48bc7dd808e"&gt;
  &lt;main&gt;&lt;head rend="h1"&gt;Computer Science &amp;gt; Multiagent Systems&lt;/head&gt;&lt;p&gt; [Submitted on 30 Apr 2025 (v1), last revised 17 Jul 2025 (this version, v2)]&lt;/p&gt;&lt;head rend="h1"&gt;Title:Coral Protocol: Open Infrastructure Connecting The Internet of Agents&lt;/head&gt;View PDF HTML (experimental)&lt;quote&gt;Abstract:Coral Protocol is an open and decentralized collaboration infrastructure that enables communication, coordination, trust and payments for The Internet of Agents. It addresses the growing need for interoperability in a world where organizations are deploying multiple specialized AI agents that must work together across domains and vendors. As a foundational platform for multi-agent AI ecosystems, Coral establishes a common language and coordination framework allowing any agent to participate in complex workflows with others. Its design emphasizes broad compatibility, security, and vendor neutrality, ensuring that agent interactions are efficient and trustworthy. In particular, Coral introduces standardized messaging formats for agent communication, a modular coordination mechanism for orchestrating multi-agent tasks, and secure team formation capabilities for dynamically assembling trusted groups of agents. Together, these innovations position Coral Protocol as a cornerstone of the emerging "Internet of Agents," unlocking new levels of automation, collective intelligence, and business value through open agent collaboration.&lt;/quote&gt;&lt;head rend="h2"&gt;Submission history&lt;/head&gt;From: Önder Gürcan [view email]&lt;p&gt;[v1] Wed, 30 Apr 2025 22:17:13 UTC (765 KB)&lt;/p&gt;&lt;p&gt;[v2] Thu, 17 Jul 2025 08:34:37 UTC (785 KB)&lt;/p&gt;&lt;head rend="h3"&gt;References &amp;amp; Citations&lt;/head&gt;&lt;p&gt; export BibTeX citation Loading... &lt;/p&gt;&lt;head rend="h1"&gt;Bibliographic and Citation Tools&lt;/head&gt;&lt;p&gt; Bibliographic Explorer (What is the Explorer?) &lt;/p&gt;&lt;p&gt; Connected Papers (What is Connected Papers?) &lt;/p&gt;&lt;p&gt; Litmaps (What is Litmaps?) &lt;/p&gt;&lt;p&gt; scite Smart Citations (What are Smart Citations?) &lt;/p&gt;&lt;head rend="h1"&gt;Code, Data and Media Associated with this Article&lt;/head&gt;&lt;p&gt; alphaXiv (What is alphaXiv?) &lt;/p&gt;&lt;p&gt; CatalyzeX Code Finder for Papers (What is CatalyzeX?) &lt;/p&gt;&lt;p&gt; DagsHub (What is DagsHub?) &lt;/p&gt;&lt;p&gt; Gotit.pub (What is GotitPub?) &lt;/p&gt;&lt;p&gt; Hugging Face (What is Huggingface?) &lt;/p&gt;&lt;p&gt; Papers with Code (What is Papers with Code?) &lt;/p&gt;&lt;p&gt; ScienceCast (What is ScienceCast?) &lt;/p&gt;&lt;head rend="h1"&gt;Demos&lt;/head&gt;&lt;head rend="h1"&gt;Recommenders and Search Tools&lt;/head&gt;&lt;p&gt; Influence Flower (What are Influence Flowers?) &lt;/p&gt;&lt;p&gt; CORE Recommender (What is CORE?) &lt;/p&gt;&lt;head rend="h1"&gt;arXivLabs: experimental projects with community collaborators&lt;/head&gt;&lt;p&gt;arXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.&lt;/p&gt;&lt;p&gt;Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.&lt;/p&gt;&lt;p&gt;Have an idea for a project that will add value for arXiv's community? Learn more about arXivLabs.&lt;/p&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://arxiv.org/abs/2505.00749"/><published>2025-10-12T03:41:29+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45555308</id><title>Pipelining in psql (PostgreSQL 18)</title><updated>2025-10-12T11:07:13.175553+00:00</updated><content>&lt;doc fingerprint="f799b5d2b8b01ede"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Pipelining in psql (PostgreSQL 18)&lt;/head&gt;
    &lt;head rend="h2"&gt;What is pipelining in Postgres?&lt;/head&gt;
    &lt;p&gt;Pipelining is a client-side feature supported by the network protocol that basically consists of not waiting for the results of previously sent queries before sending the next. This increases the throughput in two ways:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;The client, network and server can work in parallel. For instance, the network may transmit the results of the (N-1)th query while the server executes the Nth query and the client sends the (N+1)th query, all this at the same time.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;The network is better utilized because successive queries can be grouped in the same network packets, resulting in less packets overall.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Pipelining is possible since version 7.4 (released in 2003), which introduced the extended query protocol. But itâs only since 2021, with PostgreSQL 14, that it can be used through libpq, the client-side C library. Since then, some libpq-based drivers like psycopg3 have started to support it.&lt;/p&gt;
    &lt;p&gt;With PostgreSQL 18, released last week, &lt;code&gt;psql&lt;/code&gt;, the command line client
comes equipped with commands to use pipelining in SQL scripts, making it
even more accessible.
While this addition is not part of the highlighted features of that release,
it can provide huge gains in query throughput, as weâre going to see in a simple
test.&lt;/p&gt;
    &lt;head rend="h2"&gt;psql commands&lt;/head&gt;
    &lt;p&gt;The pipeline is started with &lt;code&gt;\startpipeline&lt;/code&gt;, and in the most simple case, followed
by the SQL queries and ended with &lt;code&gt;\endpipeline&lt;/code&gt;.
If intermediate results are needed, we can use &lt;code&gt;\syncpipeline&lt;/code&gt; to force a 
synchronisation point and &lt;code&gt;\getresults&lt;/code&gt; to fetch all results up to that point.
Also, starting a pipeline creates an implicit transaction. If a query fails,
all the changes since the start (or before the last synchronization point) will
be rolled back.&lt;/p&gt;
    &lt;p&gt;If you know about the &lt;code&gt;\;&lt;/code&gt; syntax to group several queries in the same request, there are similarities between this technique and pipelining: theyâre both used to reduce server round-trips and have the same semantics with regard to transactions. In a way, pipelining is the evolution in the extended query protocol of what multi-statement queries (&lt;code&gt;\;&lt;/code&gt; in psql) are in the simple query protocol.&lt;/p&gt;
    &lt;head rend="h2"&gt;Performance test&lt;/head&gt;
    &lt;p&gt;Letâs do a simple test where data from devices are imported with &lt;code&gt;INSERT ... ON CONFLICT&lt;/code&gt; queries. Same-device same-date does update the row,
otherwise it inserts a new row.
Note that if we wanted to unconditionally append all rows,
&lt;code&gt;COPY&lt;/code&gt; would be preferable and pipelining not necessary, which is why
the more sophisticated insert-or-update is chosen for that test.&lt;/p&gt;
    &lt;p&gt;The following bash code imports the (random) data, with or without the pipelining depending on a parameter.&lt;/p&gt;
    &lt;code&gt;function import_data
{
  local count=$1  # how many rows?
  local pipeline=$2 # 1 or 0
  local now_ts=$(date +%s)

  (
    echo 'PREPARE s AS insert into events(device, recorded_at, measure)
values($1, to_timestamp($2), $3) on conflict(device,recorded_at) do update set measure=excluded.measure;'
    echo "BEGIN;"
    [[ $pipeline = 1 ]] &amp;amp;&amp;amp; echo "\\startpipeline"
    for i in $(seq 1 $count)
    do
      device=$RANDOM
      secs=$(($now_ts + $RANDOM*50))
      measure=${RANDOM}"."${RANDOM}
      echo "execute s($device, '$secs', $measure);"
    done
    [[ $pipeline = 1 ]] &amp;amp;&amp;amp; echo "\\endpipeline"
    echo "COMMIT;"
  ) | $psql -q -v ON_ERROR_STOP=1
}
&lt;/code&gt;
    &lt;p&gt;Letâs try this with batches of 100, 1000, 5000, 10000, 50000, 100000 rows, with and without pipelining, and compare how fast these batches are processed.&lt;/p&gt;
    &lt;p&gt;Also, since the network speed matters a lot here, letâs try with three typical kinds of network connections:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;localhost (ping time ~ 0.04ms): client and server are on the same host.&lt;/item&gt;
      &lt;item&gt;LAN (ping time ~ 1ms): client and server are separated only by an Ethernet 1GB/s switch.&lt;/item&gt;
      &lt;item&gt;WAN (ping time ~ 4ms): the server is reached through a public Internet connection.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Finally, each case is run 5 times and we keep only the median time of the runs.&lt;/p&gt;
    &lt;p&gt;On the same host, the pipeline acceleration ranges from 1.5x for the smallest batch size, up to 5x.&lt;/p&gt;
    &lt;p&gt;On a local network connection, the smallest batch size is accelerated by 2.6x, and it goes up to 42x with the bigger sizes.&lt;/p&gt;
    &lt;p&gt;On the slowest network, itâs even more impressive. The acceleration is between 5.4x and 71x !&lt;/p&gt;
    &lt;head rend="h2"&gt;Conclusion&lt;/head&gt;
    &lt;p&gt;These accelerations show how under-utilized the network is when we send batches of small queries without pipelining: the network packets are like 50 seater buses that ride with only one passenger.&lt;/p&gt;
    &lt;p&gt;In our example, all we have to do to optimize on that front is to add a pair of &lt;code&gt;\startpipeline&lt;/code&gt; and &lt;code&gt;\endpipeline&lt;/code&gt;.
Thatâs because our queries do not depend on the results of previous queries
of the same batch, except in the sense that if one fails, the entire batch fails.&lt;/p&gt;
    &lt;p&gt;Without pipelining, we could still optimize our test by adding many rows to the &lt;code&gt;VALUES&lt;/code&gt; clauses for each query instead of one row per
query. But itâs not easy to find the sweet spot for how many data rows
there needs to be per query, and large queries with thousands of parameters
are not the nicest to handle on the server side.
Also, if the client-side logic is more complicated, for instance
conditionally targeting several tables, running simple statements in
a pipeline while using row-by-row logic might be much easier.&lt;/p&gt;
    &lt;p&gt;The pipelining meta-commands were added in psql version 18, but they do not require PostgreSQL 18 on the server side. For those interested in this feature who canât upgrade their server soon, you can still upgrade to the latest version of psql: itâs backward-compatible as much as possible.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://postgresql.verite.pro/blog/2025/10/01/psql-pipeline.html"/><published>2025-10-12T04:46:57+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45555523</id><title>Show HN: I made an esoteric programming language that's read like a spellbook</title><updated>2025-10-12T11:07:12.829005+00:00</updated><content>&lt;doc fingerprint="943a9b8b627ac612"&gt;
  &lt;main&gt;
    &lt;p&gt;an esoteric programming language where code reads like magical incantations from an ancient spellbook. every program is a "spell" written in a "grimoire," so theorhetically, you can write all your code english essay style due to its no newline/indentation requirement.&lt;/p&gt;
    &lt;p&gt;write code that looks like this:&lt;/p&gt;
    &lt;code&gt;begin the grimoire.
summon the power with essence of 7.
conjure ritual named amplify with value to return value multiplied by value.
summon the result with essence of through ritual amplify with power.
inscribe whispers of "the power is amplified: " bound with result.
close the grimoire.
&lt;/code&gt;
    &lt;p&gt;output: &lt;code&gt;the power is amplified: 49&lt;/code&gt;&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;variables&lt;/item&gt;
      &lt;item&gt;dynamic typing&lt;/item&gt;
      &lt;item&gt;arrays&lt;/item&gt;
      &lt;item&gt;functions&lt;/item&gt;
      &lt;item&gt;conditionals/loops&lt;/item&gt;
      &lt;item&gt;string manipulation&lt;/item&gt;
      &lt;item&gt;type conversion&lt;/item&gt;
      &lt;item&gt;user input&lt;/item&gt;
      &lt;item&gt;output&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;clone thy repo&lt;/item&gt;
      &lt;item&gt;make sure you have python 3.6 +&lt;/item&gt;
      &lt;item&gt;create a file called &lt;code&gt;&amp;lt;filename&amp;gt;.spell&lt;/code&gt;:&lt;/item&gt;
      &lt;item&gt;then run &lt;code&gt;python spellscript.py your-spell.spell&lt;/code&gt;&lt;/item&gt;
    &lt;/list&gt;
    &lt;table&gt;
      &lt;row span="3"&gt;
        &lt;cell role="head"&gt;concept&lt;/cell&gt;
        &lt;cell role="head"&gt;spellscript&lt;/cell&gt;
        &lt;cell role="head"&gt;traditional&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;declare variable&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;summon the x with essence of 10&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;x = 10&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;modify variable&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;enchant x with 20&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;x = 20&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;code&gt;inscribe x&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;print(x)&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;input&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;inquire whispers of "prompt" into x&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;x = input("prompt")&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;string&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;whispers of "text"&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;"text"&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;array&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;collection holding 1 and 2 and 3&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;[1, 2, 3]&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;if statement&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;if the signs show x equals 5 then&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;if x == 5:&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;loop&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;repeat the incantation 5 times to begin:&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;for i in range(5):&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;function&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;conjure ritual named add with a and b to&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;def add(a, b):&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;return&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;return result&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;return result&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;table&gt;
      &lt;row span="3"&gt;
        &lt;cell role="head"&gt;operation&lt;/cell&gt;
        &lt;cell role="head"&gt;spellscript&lt;/cell&gt;
        &lt;cell role="head"&gt;traditional&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;addition&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;a greater by b&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;a + b&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;subtraction&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;a lesser by b&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;a - b&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;multiplication&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;a multiplied by b&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;a * b&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;division&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;a divided by b&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;a / b&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;equals&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;a equals b&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;a == b&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;greater than&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;a greater than b&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;a &amp;gt; b&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;less than&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;a less than b&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;a &amp;lt; b&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;and&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;a and b&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;a and b&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;or&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;a or b&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;a or b&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;not&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;not a&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;not a&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;resources/documentation.md - feature documentation&lt;/item&gt;
      &lt;item&gt;resources/examples - example programs&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;no nested arrays&lt;/item&gt;
      &lt;item&gt;no string indexing (use character arrays)&lt;/item&gt;
      &lt;item&gt;no modulo operator&lt;/item&gt;
      &lt;item&gt;no break/continue in loops&lt;/item&gt;
      &lt;item&gt;no comments&lt;/item&gt;
      &lt;item&gt;no recursion (use iteration)&lt;/item&gt;
      &lt;item&gt;functions must have at least one parameter&lt;/item&gt;
      &lt;item&gt;no null concept&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;idea from the muffin programming language&lt;/item&gt;
      &lt;item&gt;ai was used for debugging some inperpreter issues, which included rituals and conditionals.&lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/sirbread/spellscript"/><published>2025-10-12T05:31:00+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45555873</id><title>Show HN: Sober not Sorry – free iOS tracker to help you quit bad habits</title><updated>2025-10-12T11:07:12.103072+00:00</updated><content>&lt;doc fingerprint="bdb918e92c1daff9"&gt;
  &lt;main&gt;&lt;head rend="h1"&gt;Sober not Sorry&lt;/head&gt;&lt;p&gt;Simple Sobriety Tracker&lt;/p&gt;&lt;p&gt;The mindful way to quit bad habits and stay free â one day at a time&lt;/p&gt;&lt;p&gt;Download for iOS&lt;/p&gt;&lt;head rend="h2"&gt;Simplicity first&lt;/head&gt;&lt;p&gt;Sober not Sorry is designed for calm focus. No noise, no pressure â just a clean space to track your journey to freedom&lt;/p&gt;&lt;head rend="h2"&gt;Everything that matters&lt;/head&gt;&lt;p&gt;Counters, achievements, and a clear view of how your health improves â all you need to stay motivated and consistent&lt;/p&gt;&lt;head rend="h2"&gt;Always with you&lt;/head&gt;&lt;p&gt;Elegant home and Lock Screen widgets keep your motivation close â a gentle reminder of how far you've come&lt;/p&gt;&lt;head rend="h2"&gt;Sober not Sorry is clarity. Nothing more.&lt;/head&gt;&lt;p&gt;Free iOS sobriety tracker&lt;/p&gt;Download for iOS&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://sobernotsorry.app/"/><published>2025-10-12T06:46:58+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45556474</id><title>4x faster LLM inference (Flash Attention guy's company)</title><updated>2025-10-12T11:07:11.854835+00:00</updated><content>&lt;doc fingerprint="e3dd3bba699a0e85"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;AdapTive-LeArning Speculator System (ATLAS): A New Paradigm in LLM Inference via Runtime-Learning Accelerators&lt;/head&gt;
    &lt;p&gt;ATLAS delivers up to 4x faster LLM inference, powered by Together Turboâs latest research.&lt;/p&gt;
    &lt;p&gt;At Together AI, the AIÂ Native Cloud, weâre obsessed with performance. Making large language models faster, cheaper, and more efficient is not a one-trick problem â it requires optimizing along multiple axes. That is the philosophy behind Together Turbo, our suite of inference innovations that draw from research in algorithms, architectures, and modeling recipes. Weâre excited to introduce the AdapTive-LeArning Speculator System (ATLAS), the first speculator of its kind that gives automatic performance improvements without any manual tuning.&lt;/p&gt;
    &lt;p&gt;ATLAS offers a new way of doing speculative decoding â one that dynamically improves at runtime â and it fits seamlessly alongside our other Turbo techniques like the proprietary Together Turbo Speculator or Custom Speculators. But why create an adaptive-learning speculator system?&lt;/p&gt;
    &lt;p&gt;Standard speculators are trained for general workloads. Custom speculators are trained on your specific data, but only for a specific snapshot in time. However, as the workload evolves (codebase grows, traffic patterns shift, request distributions change), even highly customized speculators can fall behind. In contrast, ATLAS evolves automatically with usage, learning from both historical patterns and live traffic to continuously align with the target modelâs behaviors in real time. This means the more you use our inference service, the better ATLAS will perform!Â&lt;/p&gt;
    &lt;p&gt;Built on top of Together Turbo Speculator, ATLAS reaches up to 500 TPS on DeepSeek-V3.1 and up to 460 TPS on Kimi-K2 in a fully adapted scenario â 2.65x faster than standard decoding, outperforming even specialized hardware like Groq (Figure 1).&lt;/p&gt;
    &lt;head rend="h2"&gt;1. Speculative Decoding&lt;/head&gt;
    &lt;p&gt;Speculative decoding is one of the most powerful levers for accelerating inference.2 Instead of having the target model generate every token step by step, a faster speculator (also known as the draft model) proposes multiple tokens ahead, and the target model verifies them in parallel in a single forward pass. The verification process ensures that the quality of the output matches the distribution of non-speculative decoding, while achieving speedups by accepting many tokens at a time.&lt;/p&gt;
    &lt;p&gt;The overall speed is influenced by the acceptance rate $Î±$ (i.e., how often the target model agrees with the drafted tokens from the speculator) and the relative latency $c$ of the draft versus the target. Typically, larger speculators with more parameters yield higher acceptance rates due to their higher capacity but are slower to generate draft tokens. Progress therefore comes from both sides: aligning draft and target models to increase $Î±$ (training objectives, data, and algorithms) and designing draft models/kernels that keep $c$ low while maintaining $Î±$ (sparsity, quantization, lightweight &amp;amp; kernel-efficient architectures). The sweet spot is where a high $Î±$ meets a low $c$, minimizing end-to-end latency.&lt;/p&gt;
    &lt;p&gt;â&lt;/p&gt;
    &lt;p&gt;At Together AI, the Turbo team has developed high-performance speculators that have achieved the worldâs fastest decoding speeds on NVIDIA Blackwell by drawing on advances across architecture, sparsity, algorithms, post-training recipes, and data [1-9]. Weâve built a speculator design and selection framework that determines the optimal speculator architecture (width/depth, lookahead, sparsity/quantization, KV reuse) and a scalable training system that brings up speculators for the largest and most challenging open-source targets quickly and reproducibly (e.g., DeepSeek-V3.1 and Kimi-K2). For instance, while Kimi ships without a ready-to-use speculator, we can train and deploy one rapidly and take Kimi from ~150 TPS out of the box to 270+ TPS on the same hardware and batch settings, while preserving target-model quality (see Figure 1, yellow bars). This pipeline powers Turbo Speculators that deliver state-of-the-art decoding latency, and it sets the stage for what comes next: an Adaptive-Learning Speculator System that adjusts token drafting to the workload in real time.&lt;/p&gt;
    &lt;head rend="h2"&gt;2. Introducing Turboâs Adaptive-Learning Speculator System&lt;/head&gt;
    &lt;p&gt;At Together AI, we power a broad range of inference workloads. But todayâs speculative decoding methods are constrained to using a static speculator, trained on a fixed dataset. Once deployed, the speculator cannot adapt, leading to degrading performance if the input distribution evolves. This problem is particularly pronounced in serverless, multi-tenant environments, where input diversity is sky-high. New users continuously arrive, and bring with them unique workloads that the fixed speculator may not have seen during training. Furthermore, these speculators typically use a fixed lookahead, predicting the same number of tokens regardless of the speculatorâs confidence. Put simply, a static speculator cannot keep up.&lt;/p&gt;
    &lt;p&gt;To address these limitations, we designed the Adaptive-Learning Speculative System with two cooperating speculators, as shown in Figure 3:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;A heavyweight static speculator trained on a broad corpus that provides strong, general speculation.&lt;/item&gt;
      &lt;item&gt;A lightweight adaptive speculator that allows for rapid, low-overhead updates from real-time traffic, specializing on-the-fly to emerging domains.&lt;/item&gt;
      &lt;item&gt;A confidence-aware controller that chooses which speculator to trust at each step and what speculation lookahead to use, using longer speculations when the speculator has high confidence.Â&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Efficiency Guardrail via Static Speculator. The static Turbo Speculator serves as an always-on speed floor: it is trained on a broad corpus and remains stable across workloads, so TPS does not collapse when traffic shifts or the adaptive path is cold. In ATLAS, we use it to jump-start speed and provide a fail-safe fallbackâif confidence drops or drift is detected, the controller shortens lookahead or routes back to the static path to preserve latency while the adaptive speculator relearns.&lt;/p&gt;
    &lt;p&gt;Customized Speculator vs. Adaptive-Learning. We know from our previous studies that a customized speculator trained on samples from real traffic that mirror expected usage delivers an additional speed boost. The Adaptive-Learning Speculator enables us to be even more customized in real time. For instance, during a vibe-coding session, the adaptive system can specialize a lightweight speculator for the relevant code files being edited and not seen during training, further increasing the acceptance rate and decoding speed. This kind of on-the-fly specialization is hard to achieve with static speculators.&lt;/p&gt;
    &lt;p&gt;Accelerating RL Training. Reinforcement learning (RL) alternates between two phases: (1) a rollout phase, where the current policy generates trajectories and receives rewards, and (2) an update phase, where we use the rewards to update the policy. In practice, rollouts are often the bottleneck, accounting for roughly 70% of total wall-clock time3. In general, because the policy distribution shifts throughout training, static speculators quickly fall out of alignment with the target policy, resulting in sub-optimal throughput.4 ATLAS addresses this by adapting online to the evolving policy and the specific RL domain, maintaining alignment and reducing the overall rollout time. The domain-specific, iterative nature of RL further enables rapid adaptation, yielding sustained and growing speedups. As shown in Figure 4, applying ATLAS to the RL-MATH pipeline produces increasing speedups as training progresses.&lt;/p&gt;
    &lt;p&gt;Built as part of the Turbo optimization suite. The Adaptive-Learning Speculator System is a core component of the broader Turbo optimization suite, where each layer of optimization compounds the benefits of the others. As illustrated in Figure 5, performance progressively improves through near-lossless quantization (calibrated to preserve quality), the Turbo Speculator, and finally the Adaptive-Learning Speculator System. Additional optimizations in the suite include TurboBoost-TTFT (not shown) for reducing time-to-first-token latency, further contributing to end-to-end acceleration.&lt;/p&gt;
    &lt;p&gt;Extreme Peak Efficiency. When the input distribution is narrow and outputs closely echo previously seen tokens, the adaptive system specializes quickly. In this scenario, the controller becomes confident in utilizing more tokens from the lightweight speculator and lengthens lookahead tokens. This yields consistently higher TPS than static or one-off custom speculators can maintain. As shown in Figures 1 and 5, once fully adapted to Arena-Hard traffic, DeepSeek achieves up to 500 tokens per second for batch size 1 on 4 B200 GPUs, delivering a 400% speedup over the FP8 baseline (improvement from 105 TPS to 501 TPS).&lt;/p&gt;
    &lt;p&gt;{{custom-cta-1}}&lt;/p&gt;
    &lt;head rend="h2"&gt;Build the Future of Efficient AI&lt;/head&gt;
    &lt;p&gt;In parallel to making models smarter and more capable, advancements in inference efficiency are just as transformative â because intelligence only matters when you can deliver it swiftly, cost-effectively, and at scale. At Together AI, our Turbo team turns cutting-edge research (algorithms, quantization, sparsity, distillation, architectures, model pruning, and post-training recipes) into production systems that cut costs and unlock entirely new product experiences. If you love turning elegant ideas into billions of faster tokens, obsess over optimizing efficiency-quality frontier, and want your research to land in real usersâ hands quickly, come build with us. Weâre hiring exceptional research scientists and engineers who can push the frontier of efficient AI. Apply to Together and help define how intelligence is deployed.&lt;/p&gt;
    &lt;head rend="h2"&gt;Footnotes&lt;/head&gt;
    &lt;p&gt;1. Each benchmark burst contained 32 arena-hard prompts (â 3,000 token completions on average). Since the observed TPS depends on the prompts while speculative decoding is used, we report tokens per second (TPS) as the mean across requests. In the Adaptive-Learning Speculator System scenario, we show the peak speed where the system is fully adapted to Arena Hard traffic. We use TP=4 for DeepSeek-V3.1 and TP=8 for Kimi-K2-0905 on NVIDIA B200. This is different from our previous blog where we used TP=8, EP=2 for DeepSeek.&lt;lb/&gt;2. Fast Inference from Transformers via Speculative Decoding.&lt;lb/&gt;3. DeepCoder: A Fully Open-Source 14B Coder at O3-mini Level DeepSWE: Training a Fully Open-sourced, State-of-the-Art Coding Agent by Scaling RL&lt;lb/&gt;4. Speculative decoding is typically not beneficial in pure throughput- or compute-bound settings, where GPUs are fully saturated. However, in reinforcement learning (RL) training, the situation can be different. Agent RL training often operates with small batch sizes and CPU-driven environment steps, where each agent waits for model outputs to do the next action. In this regime, endpoint latency (tokens per second per request) becomes the bottleneck. This makes speculative decoding highly applicable for RL training, if there is a suitable and high performant speculator. Faster decoding pipeline can improve CPU utilization and overall sample throughput.Â &lt;/p&gt;
    &lt;head rend="h2"&gt;References&lt;/head&gt;
    &lt;p&gt;[1] Medusa: Simple LLM Inference Acceleration Framework with Multiple Decoding Heads&lt;/p&gt;
    &lt;p&gt;[2] SpecExec: Massively Parallel Speculative Decoding for Interactive LLM Inference on Consumer Devices&lt;/p&gt;
    &lt;p&gt;[3] Ladder-Residual: Parallelism-Aware Architecture for Accelerating Large Model Inference with Communication OverlappingÂ&lt;/p&gt;
    &lt;p&gt;[4] TEAL: Training-Free Activation Sparsity in Large Language Model&lt;/p&gt;
    &lt;p&gt;[5] The Mamba in the Llama: Distilling and Accelerating Hybrid Models&lt;/p&gt;
    &lt;p&gt;[6] SEQUOIA: Scalable and Robust Speculative Decoding&lt;/p&gt;
    &lt;p&gt;[7] Mixture-of-Agents Alignment: Harnessing the Collective Intelligence of Open-Source LLMs to Improve Post-Training&lt;/p&gt;
    &lt;p&gt;[8] Boosting DeepSeek-R1âs Speed with Customized Speculative Decoding&lt;/p&gt;
    &lt;p&gt;[9] DeepSWE: Training a Fully Open-sourced, State-of-the-Art Coding Agent by Scaling RL&lt;/p&gt;
    &lt;p&gt;â&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;LOREM IPSUM&lt;/p&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;LOREM IPSUM&lt;/p&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;Value Prop #1&lt;/p&gt;
        &lt;p&gt;Body copy goes here lorem ipsum dolor sit amet&lt;/p&gt;
        &lt;list rend="ul"&gt;
          &lt;item&gt;Bullet point goes here lorem ipsum Â&lt;/item&gt;
          &lt;item&gt;Bullet point goes here lorem ipsum Â&lt;/item&gt;
          &lt;item&gt;Bullet point goes here lorem ipsum Â&lt;/item&gt;
        &lt;/list&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Value Prop #1&lt;/p&gt;
        &lt;p&gt;Body copy goes here lorem ipsum dolor sit amet&lt;/p&gt;
        &lt;list rend="ul"&gt;
          &lt;item&gt;Bullet point goes here lorem ipsum Â&lt;/item&gt;
          &lt;item&gt;Bullet point goes here lorem ipsum Â&lt;/item&gt;
          &lt;item&gt;Bullet point goes here lorem ipsum Â&lt;/item&gt;
        &lt;/list&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Value Prop #1&lt;/p&gt;
        &lt;p&gt;Body copy goes here lorem ipsum dolor sit amet&lt;/p&gt;
        &lt;list rend="ul"&gt;
          &lt;item&gt;Bullet point goes here lorem ipsum Â&lt;/item&gt;
          &lt;item&gt;Bullet point goes here lorem ipsum Â&lt;/item&gt;
          &lt;item&gt;Bullet point goes here lorem ipsum Â&lt;/item&gt;
        &lt;/list&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;List Item Â #1&lt;/p&gt;
        &lt;list rend="ul"&gt;
          &lt;item&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.&lt;/item&gt;
          &lt;item&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.&lt;/item&gt;
          &lt;item&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.&lt;/item&gt;
        &lt;/list&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;List Item Â #1&lt;/p&gt;
        &lt;list rend="ul"&gt;
          &lt;item&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.&lt;/item&gt;
          &lt;item&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.&lt;/item&gt;
          &lt;item&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.&lt;/item&gt;
        &lt;/list&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;List Item Â #1&lt;/p&gt;
        &lt;list rend="ul"&gt;
          &lt;item&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.&lt;/item&gt;
          &lt;item&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.&lt;/item&gt;
          &lt;item&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt.&lt;/item&gt;
        &lt;/list&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;List Item Â #2&lt;/p&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;List Item #2&lt;/p&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;List Item #3&lt;/p&gt;
        &lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;article&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.together.ai/blog/adaptive-learning-speculator-system-atlas"/><published>2025-10-12T08:37:01+00:00</published></entry></feed>