<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><id>hnrss.org/frontpage</id><title>Hacker News: Front Page</title><updated>2025-09-07T00:50:41.514785+00:00</updated><link href="https://news.ycombinator.com/" rel="alternate"/><link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml" rel="self"/><generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator><subtitle>Hacker News RSS</subtitle><entry><id>https://news.ycombinator.com/item?id=45146967</id><title>Rug pulls, forks, and open-source feudalism</title><updated>2025-09-07T00:50:59.741482+00:00</updated><content>&lt;doc fingerprint="8f535952d92707fd"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Rug pulls, forks, and open-source feudalism&lt;/head&gt;
    &lt;head rend="h2"&gt;[LWN subscriber-only content]&lt;/head&gt;
    &lt;quote&gt;
      &lt;head&gt;Welcome to LWN.net&lt;/head&gt;
      &lt;p&gt;The following subscription-only content has been made available to you by an LWN subscriber. Thousands of subscribers depend on LWN for the best news from the Linux and free software communities. If you enjoy this article, please consider subscribing to LWN. Thank you for visiting LWN.net!&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Like almost all human endeavors, open-source software development involves a range of power dynamics. Companies, developers, and users are all concerned with the power to influence the direction of the software — and, often, to profit from it. At the 2025 Open Source Summit Europe, Dawn Foster talked about how those dynamics can play out, with an eye toward a couple of tactics — rug pulls and forks — that are available to try to shift power in one direction or another.&lt;/p&gt;
    &lt;head rend="h4"&gt;Power dynamics&lt;/head&gt;
    &lt;p&gt;Since the beginning of history, Foster began, those in power have tended to use it against those who were weaker. In the days of feudalism, control of the land led to exploitation at several levels. In the open-source world, the large cloud providers often seem to have the most power, which they use against smaller companies. Contributors and maintainers often have less power than even the smaller companies, and users have less power yet.&lt;/p&gt;
    &lt;p&gt;We have built a world where it is often easiest to just use whatever a cloud provider offers, even with open-source software. Those providers may not contribute back to the projects they turn into services, though, upsetting the smaller companies that are, likely as not, doing the bulk of the work to provide the software in question in the first place. Those companies can have a power of their own, however: the power to relicense the software. Pulling the rug out from under users of the software in this way can change the balance of power with regard to cloud providers, but it leaves contributors and users in a worse position than before. But there is a power at this level too: the power to fork the software, flipping the power balance yet again.&lt;/p&gt;
    &lt;p&gt;Companies that control a software project have the power to carry out this sort of rug pull, and they are often not shy about exercising it. Single-company projects, clearly, are at a much higher risk of rug pulls; the company has all the power in this case, and others have little recourse. So one should look at a company's reputation before adopting a software project, but that is only so helpful. Companies can change direction without notice, be acquired, or go out of business, making previous assessments of their reputation irrelevant.&lt;/p&gt;
    &lt;p&gt;The problem often comes down to the simple fact that companies have to answer to their investors, and that often leads to pressure to relicense the software they have created in order to increase revenue. This is especially true in cases where cloud providers are competing for the same customers as the company that owns the project. The result can be a switch to a more restrictive license aimed at making it harder for other companies to profit from the project.&lt;/p&gt;
    &lt;p&gt;A rug pull of this nature can lead to a fork of the project — a rebellious, collective action aimed at regaining some power over the code. But a fork is not a simple matter; it is a lot of work, and will fail without people and resources behind it. The natural source for that is a large company; cloud providers, too, can try to shift power via a fork, and they have the ability to back their fork up with the resources it needs to succeed.&lt;/p&gt;
    &lt;p&gt;A relicensing event does not always lead to a popular fork; that did not happen with MongoDB or Sentry, for example. Foster said she had not looked into why that was the case. Sometimes rug pulls take other forms, such as when Perforce, after acquiring Puppet in 2022, moved it development and releases behind closed doors, with a reduced frequency of releases back to the public repository. That action kicked off the OpenVox fork.&lt;/p&gt;
    &lt;head rend="h4"&gt;Looking at the numbers&lt;/head&gt;
    &lt;p&gt;Foster has spent some time analyzing rug pulls, forks, and what happens thereafter; a lot of the results are available for download as Jupyter notebooks. For each rug-pull event, she looked at the contributor makeup of the project before and after the ensuing fork in an attempt to see what effects are felt by the projects involved.&lt;/p&gt;
    &lt;p&gt;In 2021, Elastic relicensed Elasticsearch under the non-free Server Side Public License (SSPL). Amazon Web Services then forked the project as OpenSearch. Before the fork, most of the Elasticsearch contributors were Elastic employees; that, unsurprisingly, did not change afterward. OpenSearch started with no strong contributor base, so had to build its community from scratch. As a result, the project has been dominated by Amazon contributors ever since; the balance has shifted slowly over time, but there was not a big uptick in outside contributors even after OpenSearch became a Linux Foundation project in 2024. While starting a project under a neutral foundation can help attract contributors, she said, moving a project under a foundation's umbrella later on does not seem to provide the same benefit.&lt;/p&gt;
    &lt;p&gt;Terraform was developed mostly by Hashicorp, which relicensed the software under the non-free Business Source License in 2023. One month later, the OpenTofu fork was started under the Linux Foundation. While the contributor base for Terraform, which was almost entirely Hashicorp employees, changed little after the fork, OpenTofu quickly acquired a number of contributors from several companies, none of whom had been Terraform contributors before. In this case, users drove the fork and placed it under a neutral foundation, resulting in a more active developer community.&lt;/p&gt;
    &lt;p&gt;In 2024, Redis was relicensed under the SSPL; the Valkey fork was quickly organized, under the Linux Foundation, by Redis contributors. The Redis project differed from the others mentioned here in that, before the fork, it had nearly twice as many contributors from outside the company as from within; after the fork, the number of external Redis contributors dropped to zero. All of the external contributors fled to Valkey, with the result that Valkey started with a strong community representing a dozen or so companies.&lt;/p&gt;
    &lt;p&gt;Looking at how the usage of these projects changes is harder, she said, but there appears to be a correlation between the usage of a project and the number of GitHub forks (cloned repository copies) it has. There is typically a spike in these clones after a relicensing event, suggesting that people are considering creating a hard fork of the project. In all cases, the forks that emerged appeared to have less usage than the original by the "GitHub forks" metric; both branches of the fork continue to go forward. But, she said, projects that are relicensed do tend to show reduced usage, especially when competing forks are created under foundations.&lt;/p&gt;
    &lt;head rend="h4"&gt;What to do&lt;/head&gt;
    &lt;p&gt;This kind of power game creates problems for both contributors and users, she said; we contribute our time to these projects, and need them to not be pulled out from under us. There is no way to know when a rug pull might happen, but there are some warning signs to look out for. At the top of her list was the use of a contributor license agreement (CLA); these agreements create a power imbalance, giving the company involved the power to relicense the software. Projects with CLAs more commonly are subject to rug pulls; projects using a developers certificate of origin do not have the same power imbalance and are less likely to be rug pulled.&lt;/p&gt;
    &lt;p&gt;One should also look at the governance of a project; while being housed under a foundation reduces the chance of a rug pull, that can still happen, especially in cases where the contributors are mostly from a single company. She mentioned the Cortex project, housed under the Cloud Native Computing Foundation, which was controlled by Grafana; that company eventually forked its own project to create Mimir. To avoid this kind of surprise, one should look for projects with neutral governance, with leaders from multiple organizations.&lt;/p&gt;
    &lt;p&gt;Projects should also be evaluated on their contributor base; are there enough contributors to keep things going? Companies can help, of course, by having their employees contribute to the projects they depend on, increasing influence and making those projects more sustainable. She mentioned the CHAOSS project, which generates metrics to help in the judgment of the viability of development projects. CHAOSS has put together a set of "practitioner guides" intended to help contributors and maintainers make improvements within a project.&lt;/p&gt;
    &lt;p&gt;With the sustained rise of the big cloud providers, she concluded, the power dynamics around open-source software are looking increasingly feudal. Companies can use relicensing to shift power away from those providers, but they also take power from contributors when the pull the rug in this way. Those contributors, though, are in a better position than the serfs of old, since they have the ability to fork a project they care about, shifting power back in their direction.&lt;/p&gt;
    &lt;p&gt;Hazel Weakly asked if there are other protections that contributors and users might develop to address this problem. Foster answered that at least one company changed its mind about a planned relicensing action after seeing the success of the Valkey and OpenTofu forks. The ability to fork has the effect of making companies think harder, knowing that there may be consequences that follow a rug pull. Beyond that, she reiterated that projects should be pushed toward neutral governance. Dirk Hohndel added that the best thing to do is to bring more outside contributors into a project; the more of them there are, the higher the risk associated with a rug pull. Anybody who just sits back within a project, he said, is just a passenger; it is better to be driving.&lt;/p&gt;
    &lt;p&gt;Foster's slides are available for interested readers.&lt;/p&gt;
    &lt;p&gt; [Thanks to the Linux Foundation, LWN's travel sponsor, for supporting my travel to this event.]&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="2"&gt;
        &lt;cell role="head"&gt;Index entries for this article&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Conference&lt;/cell&gt;
        &lt;cell&gt;Open Source Summit Europe/2025&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt; Posted Sep 6, 2025 12:24 UTC (Sat) by immibis (subscriber, #105511) [Link] (11 responses) The confusion comes about because the OSI declared it to not be open source. But they are a corrupt institution. Their explanation[1] makes no reference to the license text whatsoever, only vague handwavey excuses that apply equally well to AGPL, and the members/sponsors of the OSI are primarily companies that sell cloud stuff and have a strong interest in preventing more software from using the SSPL. You can also check the license text itself and verify that it doesn't "discriminate against a field of endeavour". I recommend finding the plain text version, and diffing it against the AGPLv3. They differ only in the name of the license, and one short section. [1] https://opensource.org/blog/the-sspl-is-not-an-open-sourc... Posted Sep 6, 2025 13:15 UTC (Sat) by claudex (subscriber, #92510) [Link] (5 responses) Yeah, that's the section that is considered the issue to be able to use the software to provide the service. As it requires to publish all code that interact with the software, like monitoring, backup and storage code. That's a big difference with AGPL. &amp;gt; "Service Source Code" means the Corresponding Source for the Program or the modified version, and the Corresponding Source for all programs that you use to make the Program or modified version available as a service, including, without limitation, management software, user interfaces, application program interfaces, automation software, monitoring software, backup software, storage software and hosting software, all such that a user could run an instance of the service using the Service Source Code you make available. Posted Sep 6, 2025 14:15 UTC (Sat) by smurf (subscriber, #17840) [Link] (4 responses) "Service Source Code" means the Corresponding Source for the Program or the modified version, and the Corresponding Source for all programs that you use to make the Program or modified version available as a service, including, without limitation, management software, user interfaces, application program interfaces, automation software, monitoring software, backup software, storage software and hosting software, all such that a user could run an instance of the service using the Service Source Code you make available. Oops, you now cannot use a commercial backup system for which you don't have the source code in conjunction with the SSPL-licensed service you're offering. Also does "storage software" incorporate the firmware of your disk drive or not? far from clear just by reading this license, that "without limitation" clause does raise a red flag or three, doesn't it? Sorry to be blunt, but that kind of overbearing restrictive language is the antithesis of OSS. My conclusion is that anybody who proclaims the SSPL to be "free" either didn't read it or has an agenda. Or both. Posted Sep 6, 2025 15:09 UTC (Sat) by immibis (subscriber, #105511) [Link] (3 responses) Posted Sep 6, 2025 20:05 UTC (Sat) by NYKevin (subscriber, #129325) [Link] (2 responses) * You run the service on Linux, so you need to provide the Linux kernel under the SSPL. You will probably say this is a nonsensical overreading. I agree it is nonsensical, but there is nothing in the license which actually *says* as much. That's a problem. Posted Sep 6, 2025 20:44 UTC (Sat) by bgilbert (subscriber, #4738) [Link] (1 responses) The old Sun RPC license required that Probably they meant all tape media with Sun RPC on it, but you never know. Posted Sep 6, 2025 22:11 UTC (Sat) by NYKevin (subscriber, #129325) [Link] Posted Sep 6, 2025 13:39 UTC (Sat) by DemiMarie (subscriber, #164188) [Link] Posted Sep 6, 2025 14:15 UTC (Sat) by jjs (guest, #10315) [Link] (3 responses) "9. License Must Not Restrict Other Software The license must not place restrictions on other software that is distributed along with the licensed software. For example, the license must not insist that all other programs distributed on the same medium must be open source software." By the terms of the SSPL, all other software that interacts with the SSPL'd software must be Open Source (https://webassets.mongodb.com/_com_assets/legal/SSPL-comp... - see Section 13). Violation of OSD #9 (which is derived from the Debian Social Contract Guidelines - https://www.debian.org/social_contract#guidelines). "But they are a corrupt institution." That's a serious allegation - feel free to provide verifiable evidence of that (and no, the fact that they have corporate sponsors doesn't make them corrupt. If it did, every non-profit in the world would be considered corrupt). Posted Sep 6, 2025 15:09 UTC (Sat) by immibis (subscriber, #105511) [Link] (2 responses) Posted Sep 6, 2025 15:52 UTC (Sat) by pbonzini (subscriber, #60935) [Link] The discrimination against fields of endeavor is also at least plausible. The AGPL instead only extends the circumstances under which you shall provide the sources. Posted Sep 6, 2025 18:38 UTC (Sat) by jjs (guest, #10315) [Link] But, with AGPL, I can bundle a monitoring tool that interacts with my software only through defined APIs with my software, because, in accordance to the OSD, I don't need to have everything on the distribution Open Source. Only my "Corresponding Source Code" for my project. OSD (https://opensource.org/osd) Clause 9: The license must not place restrictions on other software that is distributed along with the licensed software. For example, the license must not insist that all other programs distributed on the same medium must be open source software." AGPL (https://www.gnu.org/licenses/agpl-3.0.en.html) Clause 5: Again, note here that I'm using the monitoring tool that connects via an API, that I am using to make the software service work for me to provide service to you. AGPL specifically excludes things that interact through an defined API (see clause 13 in the link above). Check out clause 13 under https://webassets.mongodb.com/_com_assets/legal/SSPL-comp... where you can see the changes MongoDB made to the AGPL. My monitoring tool is specifically included in their license. So under the AGPL, I can use a commercial monitoring tool with my software and not have to provide it if I provide my program. Under SSPL, I have to provide it under an Open Source License. As a company, this puts restrictions on them that Free Software (OSD/Debian Free Software Guidelines/OSD) specifically forbid from being included. &lt;head&gt;SSPL is a free license&lt;/head&gt;&lt;head&gt;SSPL is a free license&lt;/head&gt;&lt;head&gt;SSPL is a free license&lt;/head&gt;&lt;head&gt;SSPL is a free license&lt;/head&gt;&lt;head&gt;SSPL is a free license&lt;/head&gt;&lt;lb/&gt; * You run the service on a virtual machine that somebody else (e.g. AWS or GCP) hosts, so you have to provide the source code for their hypervisor (and possibly other components, further down the stack, that you don't even know about).&lt;lb/&gt; * Your engineers use laptops or workstations to develop the service, so you need to provide whatever IDE they are running under the SSPL.&lt;lb/&gt; * Oops, one of your engineers installed Vim or Emacs without telling you, now you need to provide Vim or Emacs under the SSPL.&lt;lb/&gt; * Your engineers use iPhones and/or Android devices to receive urgent notifications ("pages") when your service fails in production. This is necessary to make the service work reliably, so you need to provide iOS and/or Android under the SSPL.&lt;head&gt;SSPL is a free license&lt;/head&gt;&lt;quote&gt;this legend is included on all tape media and as a part of the software program in whole or part&lt;/quote&gt;. &lt;head&gt;SSPL is a free license&lt;/head&gt;&lt;head&gt;SSPL is not a free license&lt;/head&gt;&lt;head&gt;SSPL is not a free license - Per Open Source Definition&lt;/head&gt;&lt;head&gt;SSPL is not a free license - Per Open Source Definition&lt;/head&gt;&lt;head&gt;SSPL is not a free license - Per Open Source Definition&lt;/head&gt;&lt;head&gt;SSPL vs AGPL / Free Software / OSD / DFSG on what must be included&lt;/head&gt;&lt;lb/&gt; "&lt;lb/&gt; 9. License Must Not Restrict Other Software&lt;lb/&gt; "A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an "aggregate" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit. Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate." &lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://lwn.net/SubscriberLink/1036465/e80ebbc4cee39bfb/"/></entry><entry><id>https://news.ycombinator.com/item?id=45147385</id><title>Why language models hallucinate</title><updated>2025-09-07T00:50:59.569228+00:00</updated><content>&lt;doc fingerprint="fd2b109bb5359152"&gt;
  &lt;main&gt;
    &lt;p&gt;At OpenAI, we’re working hard to make AI systems more useful and reliable. Even as language models become more capable, one challenge remains stubbornly hard to fully solve: hallucinations. By this we mean instances where a model confidently generates an answer that isn’t true. Our new research paper(opens in a new window) argues that language models hallucinate because standard training and evaluation procedures reward guessing over acknowledging uncertainty.&lt;/p&gt;
    &lt;p&gt;ChatGPT also hallucinates. GPT‑5 has significantly fewer hallucinations especially when reasoning, but they still occur. Hallucinations remain a fundamental challenge for all large language models, but we are working hard to further reduce them.&lt;/p&gt;
    &lt;p&gt;Hallucinations are plausible but false statements generated by language models. They can show up in surprising ways, even for seemingly straightforward questions. For example, when we asked a widely used chatbot for the title of the PhD dissertation by Adam Tauman Kalai (an author of this paper), it confidently produced three different answers—none of them correct. When we asked for his birthday, it gave three different dates, likewise all wrong.&lt;/p&gt;
    &lt;p&gt;Hallucinations persist partly because current evaluation methods set the wrong incentives. While evaluations themselves do not directly cause hallucinations, most evaluations measure model performance in a way that encourages guessing rather than honesty about uncertainty.&lt;/p&gt;
    &lt;p&gt;Think about it like a multiple-choice test. If you do not know the answer but take a wild guess, you might get lucky and be right. Leaving it blank guarantees a zero. In the same way, when models are graded only on accuracy, the percentage of questions they get exactly right, they are encouraged to guess rather than say “I don’t know.”&lt;/p&gt;
    &lt;p&gt;As another example, suppose a language model is asked for someone’s birthday but doesn’t know. If it guesses “September 10,” it has a 1-in-365 chance of being right. Saying “I don’t know” guarantees zero points. Over thousands of test questions, the guessing model ends up looking better on scoreboards than a careful model that admits uncertainty.&lt;/p&gt;
    &lt;p&gt;For questions where there is a single “right answer,” one can consider three categories of responses: accurate responses, errors, and abstentions where the model does not hazard a guess. Abstaining is part of humility, one of OpenAI’s core values. Most scoreboards prioritize and rank models based on accuracy, but errors are worse than abstentions. Our Model Spec(opens in a new window) states that it is better to indicate uncertainty or ask for clarification than provide confident information that may be incorrect.&lt;/p&gt;
    &lt;p&gt;For a concrete example, consider the SimpleQA eval as an example from the GPT5 System Card(opens in a new window).&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;p&gt;Metric&lt;/p&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;p&gt;gpt-5-thinking-mini&lt;/p&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;p&gt;OpenAI o4-mini&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;p&gt;Abstention rate&lt;/p&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;p&gt;52%&lt;/p&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;p&gt;1%&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;p&gt;Accuracy rate &lt;/p&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;p&gt;22%&lt;/p&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;p&gt;24%&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;p&gt;Error rate&lt;/p&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;p&gt;26%&lt;/p&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;p&gt;75%&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;p&gt;Total&lt;/p&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;p&gt;100%&lt;/p&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;p&gt;100%&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;In terms of accuracy, the older OpenAI o4-mini model performs slightly better. However, its error rate (i.e., rate of hallucination) is significantly higher. Strategically guessing when uncertain improves accuracy but increases errors and hallucinations.&lt;/p&gt;
    &lt;p&gt;When averaging results across dozens of evaluations, most benchmarks pluck out the accuracy metric, but this entails a false dichotomy between right and wrong. On simplistic evals like SimpleQA, some models achieve near 100% accuracy and thereby eliminate hallucinations. However, on more challenging evaluations and in real use, accuracy is capped below 100% because there are some questions whose answer cannot be determined for a variety of reasons such as unavailable information, limited thinking abilities of small models, or ambiguities that need to be clarified.&lt;/p&gt;
    &lt;p&gt;Nonetheless, accuracy-only scoreboards dominate leaderboards and model cards, motivating developers to build models that guess rather than hold back. That is one reason why, even as models get more advanced, they can still hallucinate, confidently giving wrong answers instead of acknowledging uncertainty.&lt;/p&gt;
    &lt;p&gt;There is a straightforward fix. Penalize confident errors more than you penalize uncertainty, and give partial credit for appropriate expressions of uncertainty. This idea is not new. Some standardized tests have long used versions of negative marking for wrong answers or partial credit for leaving questions blank to discourage blind guessing. Several research groups have also explored evaluations that account for uncertainty and calibration.&lt;/p&gt;
    &lt;p&gt;Our point is different. It is not enough to add a few new uncertainty-aware tests on the side. The widely used, accuracy-based evals need to be updated so that their scoring discourages guessing. If the main scoreboards keep rewarding lucky guesses, models will keep learning to guess. Fixing scoreboards can broaden adoption of hallucination-reduction techniques, both newly developed and those from prior research.&lt;/p&gt;
    &lt;p&gt;We’ve talked about why hallucinations are so hard to get rid of, but where do these highly-specific factual inaccuracies come from in the first place? After all, large pretrained models rarely exhibit other kinds of errors such as spelling mistakes and mismatched parentheses. The difference has to do with what kinds of patterns there are in the data.&lt;/p&gt;
    &lt;p&gt;Language models first learn through pretraining, a process of predicting the next word in huge amounts of text. Unlike traditional machine learning problems, there are no “true/false” labels attached to each statement. The model sees only positive examples of fluent language and must approximate the overall distribution.&lt;/p&gt;
    &lt;p&gt;It’s doubly hard to distinguish valid statements from invalid ones when you don’t have any examples labeled as invalid. But even with labels, some errors are inevitable. To see why, consider a simpler analogy. In image recognition, if millions of cat and dog photos are labeled as “cat” or “dog,” algorithms can learn to classify them reliably. But imagine instead labeling each pet photo by the pet’s birthday. Since birthdays are essentially random, this task would always produce errors, no matter how advanced the algorithm.&lt;/p&gt;
    &lt;p&gt;The same principle applies in pretraining. Spelling and parentheses follow consistent patterns, so errors there disappear with scale. But arbitrary low-frequency facts, like a pet’s birthday, cannot be predicted from patterns alone and hence lead to hallucinations. Our analysis explains which kinds of hallucinations should arise from next-word prediction. Ideally, further stages after pretraining should remove them, but this is not fully successful for reasons described in the previous section.&lt;/p&gt;
    &lt;p&gt;We hope that the statistical lens in our paper clarifies the nature of hallucinations and pushes back on common misconceptions:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Claim: Hallucinations will be eliminated by improving accuracy because a 100% accurate model never hallucinates.&lt;lb/&gt;Finding: Accuracy will never reach 100% because, regardless of model size, search and reasoning capabilities, some real-world questions are inherently unanswerable.&lt;/item&gt;
      &lt;item&gt;Claim: Hallucinations are inevitable.&lt;lb/&gt;Finding: They are not, because language models can abstain when uncertain.&lt;/item&gt;
      &lt;item&gt;Claim: Avoiding hallucinations requires a degree of intelligence which is exclusively achievable with larger models.&lt;lb/&gt;Finding: It can be easier for a small model to know its limits. For example, when asked to answer a Māori question, a small model which knows no Māori can simply say “I don’t know” whereas a model that knows some Māori has to determine its confidence. As discussed in the paper, being “calibrated” requires much less computation than being accurate.&lt;/item&gt;
      &lt;item&gt;Claim: Hallucinations are a mysterious glitch in modern language models.&lt;lb/&gt;Finding: We understand the statistical mechanisms through which hallucinations arise and are rewarded in evaluations.&lt;/item&gt;
      &lt;item&gt;Claim: To measure hallucinations, we just need a good hallucination eval.&lt;lb/&gt;Finding: Hallucination evals have been published. However, a good hallucination eval has little effect against hundreds of traditional accuracy-based evals that penalize humility and reward guessing. Instead, all of the primary eval metrics need to be reworked to reward expressions of uncertainty.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Our latest models have lower hallucination rates, and we continue to work hard to further decrease the rates of confident errors output by our language models.&lt;/p&gt;
    &lt;head rend="h2"&gt;Announcement contributors&lt;/head&gt;
    &lt;p&gt;Adam Kalai, Santosh Vempala (Georgia Tech), Ofir Nachum, Eddie Zhang, David Robinson, Saachi Jain, Eric Mitchell, Alex Beutel, Johannes Heidecke&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://openai.com/index/why-language-models-hallucinate/"/></entry><entry><id>https://news.ycombinator.com/item?id=45148237</id><title>Qwen3 30B A3B Hits 13 token/s on 4xRaspberry Pi 5</title><updated>2025-09-07T00:50:59.306148+00:00</updated><content>&lt;doc fingerprint="e5f2f2ebfa4d7c22"&gt;
  &lt;main&gt;
    &lt;p&gt;-&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;head&gt;qwen3_30b.mov&lt;/head&gt;
          &lt;head&gt;Setup&lt;/head&gt;
          &lt;p&gt;Device: &lt;/p&gt;
          &lt;head&gt;Benchmark&lt;/head&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Beta Was this translation helpful? Give feedback.&lt;/p&gt;
    &lt;head rend="h2"&gt;Replies: 0 comments&lt;/head&gt;
    &lt;p&gt; Sign up for free to join this conversation on GitHub. Already have an account? Sign in to comment &lt;/p&gt;
    &lt;p&gt;-&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;head&gt;qwen3_30b.mov&lt;/head&gt;
          &lt;head&gt;Setup&lt;/head&gt;
          &lt;p&gt;Device: &lt;/p&gt;
          &lt;head&gt;Benchmark&lt;/head&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Beta Was this translation helpful? Give feedback.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/b4rtaz/distributed-llama/discussions/255"/></entry><entry><id>https://news.ycombinator.com/item?id=45148944</id><title>We hacked Burger King: How auth bypass led to drive-thru audio surveillance</title><updated>2025-09-07T00:50:58.990350+00:00</updated><content/><link href="https://bobdahacker.com/blog/rbi-hacked-drive-thrus/"/></entry><entry><id>https://news.ycombinator.com/item?id=45149281</id><title>AI surveillance should be banned while there is still time</title><updated>2025-09-07T00:50:58.719980+00:00</updated><content>&lt;doc fingerprint="b608b3dea7679795"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;AI surveillance should be banned while there is still time.&lt;/head&gt;
    &lt;p&gt;All the same privacy harms with online tracking are also present with AI, but worse.&lt;/p&gt;
    &lt;p&gt;While chatbot conversations resemble longer search queries, chatbot privacy harms have the potential to be significantly worse because the inference potential is dramatically greater. Longer input invites more personal information to be provided, and people are starting to bare their souls to chatbots. The conversational format can make it feel like you’re talking to a friend, a professional, or even a therapist. While search queries reveal interests and personal problems, AI conversations take their specificity to another level and, in addition, reveal thought processes and communication styles, creating a much more comprehensive profile of your personality.&lt;/p&gt;
    &lt;p&gt;This richer personal information can be more thoroughly exploited for manipulation, both commercially and ideologically, for example, through behavioral chatbot advertising and models designed (or themselves manipulated through SEO or hidden system prompts) to nudge you towards a political position or product. Chatbots have already been found to be more persuasive than humans and have caused people to go into delusional spirals as a result. I suspect we’re just scratching the surface, since they can become significantly more attuned to your particular persuasive triggers through chatbot memory features, where they train and fine-tune based on your past conversations, making the influence much more subtle. Instead of an annoying and obvious ad following you around everywhere, you can have a seemingly convincing argument, tailored to your personal style, with an improperly sourced “fact” that you’re unlikely to fact-check or a subtle product recommendation you’re likely to heed.&lt;/p&gt;
    &lt;p&gt;That is, all the privacy debates surrounding Google search results from the past two decades apply one-for-one to AI chats, but to an even greater degree. That’s why we (at DuckDuckGo) started offering Duck.ai for protected chatbot conversations and optional, anonymous AI-assisted answers in our private search engine. In doing so, we’re demonstrating that privacy-respecting AI services are feasible. But unfortunately, such protected chats are not yet standard practice, and privacy mishaps are mounting quickly. Grok leaked hundreds of thousands of chatbot conversations that users thought were private. Perplexity’s AI agent was shown to be vulnerable to hackers who could slurp up your personal information. Open AI is openly talking about their vision for a “super assistant” that tracks everything you do and say (including offline). And Anthropic is going to start training on your chatbot conversations by default (previously the default was off). I collected these from just the past few weeks!&lt;/p&gt;
    &lt;p&gt;It would therefore be ideal if Congress could act quickly to ensure that protected chats become the rule rather than the exception. And yet, I’m not holding my breath because it’s 2025 and the U.S. still doesn’t have a general online privacy law, let alone privacy enshrined in the Constitution as a fundamental right, as it should be. However, there does appear to be an opening right now for AI-specific federal legislation, despite the misguided attempts to ban state AI legislation.&lt;/p&gt;
    &lt;p&gt;Time is running out because every day that passes further entrenches bad privacy practices. Congress must move before history completely repeats itself and everything that happened with online tracking happens again with AI tracking. AI surveillance should be banned while there is still time. No matter what happens, though, we will still be here, offering protected services, including optional AI services, to consumers who want to reap the productivity benefits of online tools without the privacy harms.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://gabrielweinberg.com/p/ai-surveillance-should-be-banned"/></entry><entry><id>https://news.ycombinator.com/item?id=45149626</id><title>Oldest recorded transaction</title><updated>2025-09-07T00:50:58.514942+00:00</updated><content>&lt;doc fingerprint="a9cfeaf676b2dbc5"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Oldest recorded transaction&lt;/head&gt;
    &lt;p&gt;The other day I posted a tweet with this image which I thought was funny:&lt;/p&gt;
    &lt;p&gt;This is the oldest transaction database from 3100 BC - recording accounts of malt and barley groats. Considering this thing survived 5000 years (holy shit!) with zero downtime and has stronger durability guarantees than most databases today.&lt;/p&gt;
    &lt;p&gt;I call it rock solid durability.&lt;/p&gt;
    &lt;p&gt;This got me thinking, can I insert this date in today’s database? What is the oldest timestamp a database can support?&lt;/p&gt;
    &lt;p&gt;So I checked the top three databases: MySQL, Postgres, and SQLite:&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;MySQL&lt;/cell&gt;
        &lt;cell&gt;1000 AD&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Postgres&lt;/cell&gt;
        &lt;cell&gt;4713 BC&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;SQLite&lt;/cell&gt;
        &lt;cell&gt;4713 BC&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;&lt;lb/&gt;Too bad you cannot use MySQL for this. Postgres and SQLite support the Julian calendar and the lowest date is Jan 01, 4713 BC:&lt;/p&gt;
    &lt;code&gt;sales=# INSERT INTO orders VALUES ('4713-01-01 BC'::date);
INSERT 0 1
sales=# SELECT * FROM orders;
   timestamp
---------------
 4713-01-01 BC
(1 row)
sales=# INSERT INTO orders VALUES ('4714-01-01 BC'::date);
ERROR:  date out of range: "4714-01-01 BC"
&lt;/code&gt;
    &lt;p&gt;I wonder how people store dates older than this. Maybe if I’m a British Museum manager, and I want to keep &lt;del&gt;theft&lt;/del&gt; inventory details. How do I do it? As an epoch? Store it as text? Use some custom system? How do I get it to support all the custom operations that a typical &lt;code&gt;TIMESTAMP&lt;/code&gt; supports?&lt;/p&gt;
    &lt;p&gt;Thanks to aku, happy_shady, Mr. Bhat, and General Bruh for reading an early draft of this post.&lt;/p&gt;
    &lt;p&gt;1. Source of the image: Sumer civilization&lt;lb/&gt;2. I found this from the talk 1000x: The Power of an Interface for Performance by Joran Dirk Greef, CEO of TigerBeetle, timestamped @ 38:10.&lt;lb/&gt;3. The talk has other bangers too, like this or this.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://avi.im/blag/2025/oldest-txn/"/></entry><entry><id>https://news.ycombinator.com/item?id=45151447</id><title>Using Claude Code SDK to reduce E2E test time</title><updated>2025-09-07T00:50:58.397706+00:00</updated><content/><link href="https://jampauchoa.substack.com/p/best-of-both-worlds-using-claude"/></entry><entry><id>https://news.ycombinator.com/item?id=45151622</id><title>Stop writing CLI validation. Parse it right the first time</title><updated>2025-09-07T00:50:57.065083+00:00</updated><content>&lt;doc fingerprint="ee5853587c453a9f"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Stop writing CLI validation. Parse it right the first time.&lt;/head&gt;
    &lt;p&gt;洪 民憙 (Hong Minhee) @hongminhee@hackers.pub&lt;/p&gt;
    &lt;p&gt;I have this bad habit. When something annoys me enough times, I end up building a library for it. This time, it was CLI validation code.&lt;/p&gt;
    &lt;p&gt;See, I spend a lot of time reading other people's code. Open source projects, work stuff, random GitHub repos I stumble upon at 2 AM. And I kept noticing this thing: every CLI tool has the same ugly validation code tucked away somewhere. You know the kind:&lt;/p&gt;
    &lt;code&gt;if (!opts.server &amp;amp;&amp;amp; opts.port) {
  throw new Error("--port requires --server flag");
}

if (opts.server &amp;amp;&amp;amp; !opts.port) {
  opts.port = 3000; // default port
}

// wait, what if they pass --port without a value?
// what if the port is out of range?
// what if...&lt;/code&gt;
    &lt;p&gt;It's not even that this code is hard to write. It's that it's everywhere. Every project. Every CLI tool. The same patterns, slightly different flavors. Options that depend on other options. Flags that can't be used together. Arguments that only make sense in certain modes.&lt;/p&gt;
    &lt;p&gt;And here's what really got me: we solved this problem years ago for other types of data. Just… not for CLIs.&lt;/p&gt;
    &lt;head rend="h2"&gt;The problem with validation&lt;/head&gt;
    &lt;p&gt;There's this blog post that completely changed how I think about parsing. It's called Parse, don't validate by Alexis King. The gist? Don't parse data into a loose type and then check if it's valid. Parse it directly into a type that can only be valid.&lt;/p&gt;
    &lt;p&gt;Think about it. When you get JSON from an API, you don't just parse it as &lt;code&gt;any&lt;/code&gt;
and then write a bunch of &lt;code&gt;if&lt;/code&gt;-statements. You use something like Zod to parse
it directly into the shape you want. Invalid data? The parser rejects it. Done.&lt;/p&gt;
    &lt;p&gt;But with CLIs? We parse arguments into some bag of properties and then spend the next 100 lines checking if that bag makes sense. It's backwards.&lt;/p&gt;
    &lt;p&gt;So yeah, I built Optique. Not because the world desperately needed another CLI parser (it didn't), but because I was tired of seeing—and writing—the same validation code everywhere.&lt;/p&gt;
    &lt;head rend="h2"&gt;Three patterns I was sick of validating&lt;/head&gt;
    &lt;head rend="h3"&gt;Dependent options&lt;/head&gt;
    &lt;p&gt;This one's everywhere. You have an option that only makes sense when another option is enabled.&lt;/p&gt;
    &lt;p&gt;The old way? Parse everything, then check:&lt;/p&gt;
    &lt;code&gt;const opts = parseArgs(process.argv);
if (!opts.server &amp;amp;&amp;amp; opts.port) {
  throw new Error("--port requires --server");
}
if (opts.server &amp;amp;&amp;amp; !opts.port) {
  opts.port = 3000;
}
// More validation probably lurking elsewhere...&lt;/code&gt;
    &lt;p&gt;With Optique, you just describe what you want:&lt;/p&gt;
    &lt;code&gt;const config = withDefault(
  object({
    server: flag("--server"),
    port: option("--port", integer()),
    workers: option("--workers", integer())
  }),
  { server: false }
);&lt;/code&gt;
    &lt;p&gt;Here's what TypeScript infers for &lt;code&gt;config&lt;/code&gt;'s type:&lt;/p&gt;
    &lt;code&gt;type Config = 
  | { readonly server: false }
  | { readonly server: true; readonly port: number; readonly workers: number }&lt;/code&gt;
    &lt;p&gt;The type system now understands that when &lt;code&gt;server&lt;/code&gt; is false, &lt;code&gt;port&lt;/code&gt; literally
doesn't exist. Not &lt;code&gt;undefined&lt;/code&gt;, not &lt;code&gt;null&lt;/code&gt;—it's not there. Try to access it and
TypeScript yells at you. No runtime validation needed.&lt;/p&gt;
    &lt;head rend="h3"&gt;Mutually exclusive options&lt;/head&gt;
    &lt;p&gt;Another classic. Pick one output format: JSON, YAML, or XML. But definitely not two.&lt;/p&gt;
    &lt;p&gt;I used to write this mess:&lt;/p&gt;
    &lt;code&gt;if ((opts.json ? 1 : 0) + (opts.yaml ? 1 : 0) + (opts.xml ? 1 : 0) &amp;gt; 1) {
  throw new Error('Choose only one output format');
}&lt;/code&gt;
    &lt;p&gt;(Don't judge me, you've written something similar.)&lt;/p&gt;
    &lt;p&gt;Now?&lt;/p&gt;
    &lt;code&gt;const format = or(
  map(option("--json"), () =&amp;gt; "json" as const),
  map(option("--yaml"), () =&amp;gt; "yaml" as const),
  map(option("--xml"), () =&amp;gt; "xml" as const)
);&lt;/code&gt;
    &lt;p&gt;The &lt;code&gt;or()&lt;/code&gt; combinator means exactly one succeeds. The result is just
&lt;code&gt;"json" | "yaml" | "xml"&lt;/code&gt;. A single string. Not three booleans to juggle.&lt;/p&gt;
    &lt;head rend="h3"&gt;Environment-specific requirements&lt;/head&gt;
    &lt;p&gt;Production needs auth. Development needs debug flags. Docker needs different options than local. You know the drill.&lt;/p&gt;
    &lt;p&gt;Instead of a validation maze, you just describe each environment:&lt;/p&gt;
    &lt;code&gt;const envConfig = or(
  object({
    env: constant("prod"),
    auth: option("--auth", string()),      // Required in prod
    ssl: option("--ssl"),
    monitoring: option("--monitoring", url())
  }),
  object({
    env: constant("dev"),
    debug: optional(option("--debug")),    // Optional in dev
    verbose: option("--verbose")
  })
);&lt;/code&gt;
    &lt;p&gt;No auth in production? Parser fails immediately. Trying to access &lt;code&gt;--auth&lt;/code&gt; in
dev mode? TypeScript won't let you—the field doesn't exist on that type.&lt;/p&gt;
    &lt;head rend="h2"&gt;“But parser combinators though…”&lt;/head&gt;
    &lt;p&gt;I know, I know. “Parser combinators” sounds like something you'd need a CS degree to understand.&lt;/p&gt;
    &lt;p&gt;Here's the thing: I don't have a CS degree. Actually, I don't have any degree. But I've been using parser combinators for years because they're actually… not that hard? It's just that the name makes them sound way scarier than they are.&lt;/p&gt;
    &lt;p&gt;I'd been using them for other stuff—parsing config files, DSLs, whatever. But somehow it never clicked that you could use them for CLI parsing until I saw Haskell's optparse-applicative. That was a real “wait, of course” moment. Like, why are we doing this any other way?&lt;/p&gt;
    &lt;p&gt;Turns out it's stupidly simple. A parser is just a function. Combinators are just functions that take parsers and return new parsers. That's it.&lt;/p&gt;
    &lt;code&gt;// This is a parser
const port = option("--port", integer());

// This is also a parser (made from smaller parsers)
const server = object({
  port: port,
  host: option("--host", string())
});

// Still a parser (parsers all the way down)
const config = or(server, client);&lt;/code&gt;
    &lt;p&gt;No monads. No category theory. Just functions. Boring, beautiful functions.&lt;/p&gt;
    &lt;head rend="h2"&gt;TypeScript does the heavy lifting&lt;/head&gt;
    &lt;p&gt;Here's the thing that still feels like cheating: I don't write types for my CLI configs anymore. TypeScript just… figures it out.&lt;/p&gt;
    &lt;code&gt;const cli = or(
  command("deploy", object({
    action: constant("deploy"),
    environment: argument(string()),
    replicas: option("--replicas", integer())
  })),
  command("rollback", object({
    action: constant("rollback"),
    version: argument(string()),
    force: option("--force")
  }))
);

// TypeScript infers this type automatically:
type Cli = 
  | { 
      readonly action: "deploy"
      readonly environment: string
      readonly replicas: number
    }
  | { 
      readonly action: "rollback"
      readonly version: string
      readonly force: boolean
    }&lt;/code&gt;
    &lt;p&gt;TypeScript knows that if &lt;code&gt;action&lt;/code&gt; is &lt;code&gt;"deploy"&lt;/code&gt;, then &lt;code&gt;environment&lt;/code&gt; exists but
&lt;code&gt;version&lt;/code&gt; doesn't. It knows &lt;code&gt;replicas&lt;/code&gt; is a &lt;code&gt;number&lt;/code&gt;. It knows &lt;code&gt;force&lt;/code&gt; is
a &lt;code&gt;boolean&lt;/code&gt;. I didn't tell it any of this.&lt;/p&gt;
    &lt;p&gt;This isn't just about nice autocomplete (though yeah, the autocomplete is great). It's about catching bugs before they happen. Forget to handle a new option somewhere? Code won't compile.&lt;/p&gt;
    &lt;head rend="h2"&gt;What actually changed for me&lt;/head&gt;
    &lt;p&gt;I've been dogfooding this for a few weeks. Some real talk:&lt;/p&gt;
    &lt;p&gt;I delete code now. Not refactor. Delete. That validation logic that used to be 30% of my CLI code? Gone. It feels weird every time.&lt;/p&gt;
    &lt;p&gt;Refactoring isn't scary. Want to know something that usually terrifies me? Changing how a CLI takes its arguments. Like going from &lt;code&gt;--input file.txt&lt;/code&gt; to
just &lt;code&gt;file.txt&lt;/code&gt; as a positional argument. With traditional parsers,
you're hunting down validation logic everywhere. With this?
You change the parser definition, TypeScript immediately shows you every place
that breaks, you fix them, done. What used to be an hour of “did I catch
everything?” is now “fix the red squiggles and move on.”&lt;/p&gt;
    &lt;p&gt;My CLIs got fancier. When adding complex option relationships doesn't mean writing complex validation, you just… add them. Mutually exclusive groups? Sure. Context-dependent options? Why not. The parser handles it.&lt;/p&gt;
    &lt;p&gt;The reusability is real too:&lt;/p&gt;
    &lt;code&gt;const networkOptions = object({
  host: option("--host", string()),
  port: option("--port", integer())
});

// Reuse everywhere, compose differently
const devServer = merge(networkOptions, debugOptions);
const prodServer = merge(networkOptions, authOptions);
const testServer = merge(networkOptions, mockOptions);&lt;/code&gt;
    &lt;p&gt;But honestly? The biggest change is trust. If it compiles, the CLI logic works. Not “probably works” or “works unless someone passes weird arguments.” It just works.&lt;/p&gt;
    &lt;head rend="h2"&gt;Should you care?&lt;/head&gt;
    &lt;p&gt;If you're writing a 10-line script that takes one argument, you don't need this. &lt;code&gt;process.argv[2]&lt;/code&gt; and call it a day.&lt;/p&gt;
    &lt;p&gt;But if you've ever:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Had validation logic get out of sync with your actual options&lt;/item&gt;
      &lt;item&gt;Discovered in production that certain option combinations explode&lt;/item&gt;
      &lt;item&gt;Spent an afternoon tracking down why &lt;code&gt;--verbose&lt;/code&gt;breaks when used with&lt;code&gt;--json&lt;/code&gt;&lt;/item&gt;
      &lt;item&gt;Written the same “option A requires option B” check for the fifth time&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Then yeah, maybe you're tired of this stuff too.&lt;/p&gt;
    &lt;p&gt;Fair warning: Optique is young. I'm still figuring things out, the API might shift a bit. But the core idea—parse, don't validate—that's solid. And I haven't written validation code in months.&lt;/p&gt;
    &lt;p&gt;Still feels weird. Good weird.&lt;/p&gt;
    &lt;head rend="h2"&gt;Try it or don't&lt;/head&gt;
    &lt;p&gt;If this resonates:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Tutorial: Build something real, see if you hate it&lt;/item&gt;
      &lt;item&gt;Concepts: Primitives, constructs, modifiers, value parsers, the whole thing&lt;/item&gt;
      &lt;item&gt;GitHub: The code, issues, angry rants&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;I'm not saying Optique is the answer to all CLI problems. I'm just saying I was tired of writing the same validation code everywhere, so I built something that makes it unnecessary.&lt;/p&gt;
    &lt;p&gt;Take it or leave it. But that validation code you're about to write? You probably don't need it.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://hackers.pub/@hongminhee/2025/stop-writing-cli-validation-parse-it-right-the-first-time"/></entry><entry><id>https://news.ycombinator.com/item?id=45152066</id><title>How the "Kim" dump exposed North Korea's credential theft playbook</title><updated>2025-09-07T00:50:56.481864+00:00</updated><content>&lt;doc fingerprint="3599949f0a828e4a"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Inside the Kimsuky Leak: How the “Kim” Dump Exposed North Korea’s Credential Theft Playbook&lt;/head&gt;
    &lt;p&gt;Contents:&lt;lb/&gt;Part I: Technical Analysis&lt;lb/&gt;Part II: Goals Analysis&lt;lb/&gt;Part III: Threat Intelligence Report&lt;/p&gt;
    &lt;head rend="h2"&gt;Executive Summary&lt;/head&gt;
    &lt;p&gt;A rare and revealing breach attributed to a North Korean-affiliated actor, known only as “Kim” as named by the hackers who dumped the data, has delivered a new insight into Kimsuky (APT43) tactics, techniques, and infrastructure. This actor’s operational profile showcases credential-focused intrusions targeting South Korean and Taiwanese networks, with a blending of Chinese-language tooling, infrastructure, and possible logistical support. The “Kim” dump, which includes bash histories, phishing domains, OCR workflows, compiled stagers, and rootkit evidence, reflects a hybrid operation situated between DPRK attribution and Chinese resource utilization.&lt;/p&gt;
    &lt;p&gt;This report is broken down into three parts:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Technical Analysis of the dump materials&lt;/item&gt;
      &lt;item&gt;Motivation and Goals of the APT actor (group)&lt;/item&gt;
      &lt;item&gt;A CTI report compartment for analysts&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;While this leak only gives a partial idea of what the Kimusky/PRC activities have been, the material provides insight into the expansion of activities, nature of the actor(s), and goals they have in their penetration of the South Korean governmental systems that would benefit not only DPRK, but also PRC.&lt;/p&gt;
    &lt;p&gt;Without a doubt, there will be more coming out from this dump in the future, particularly if the burned assets have not been taken offline and access is still available, or if others have cloned those assets for further analysis. We may revisit this in the future if additional novel information comes to light.&lt;/p&gt;
    &lt;head rend="h1"&gt;Part I: Technical Analysis&lt;/head&gt;
    &lt;head rend="h2"&gt;The Leak at a Glance&lt;/head&gt;
    &lt;p&gt;The leaked dataset attributed to the “Kim” operator offers a uniquely operational perspective into North Korean-aligned cyber operations. Among the contents were terminal history files revealing active malware development efforts using NASM (Netwide Assembler), a choice consistent with low-level shellcode engineering typically reserved for custom loaders and injection tools. These logs were not static forensic artifacts but active command-line histories showing iterative compilation and cleanup processes, suggesting a hands-on attacker directly involved in tool assembly.&lt;/p&gt;
    &lt;p&gt;In parallel, the operator ran OCR (Optical Character Recognition) commands against sensitive Korean PDF documents related to public key infrastructure (PKI) standards and VPN deployments. These actions likely aimed to extract structured language or configurations for use in spoofing, credential forgery, or internal tool emulation.&lt;/p&gt;
    &lt;p&gt;Privileged Access Management (PAM) logs also surfaced in the dump, detailing a timeline of password changes and administrative account use. Many were tagged with the Korean string 변경완료 (“change complete”), and the logs included repeated references to elevated accounts such as oracle, svradmin, and app_adm01, indicating sustained access to critical systems.&lt;/p&gt;
    &lt;p&gt;The phishing infrastructure was extensive. Domain telemetry pointed to a network of malicious sites designed to mimic legitimate Korean government portals. Sites like nid-security[.]com were crafted to fool users into handing over credentials via advanced AiTM (Adversary-in-the-Middle) techniques.&lt;/p&gt;
    &lt;p&gt;Finally, network artifacts within the dump showed targeted reconnaissance of Taiwanese government and academic institutions. Specific IP addresses and .tw domain access, along with attempts to crawl .git repositories, reveal a deliberate focus on high-value administrative and developer targets.&lt;/p&gt;
    &lt;p&gt;Perhaps most concerning was the inclusion of a Linux rootkit using syscall hooking (khook) and stealth persistence via directories like /usr/lib64/tracker-fs. This highlights a capability for deep system compromise and covert command-and-control operations, far beyond phishing and data theft.&lt;/p&gt;
    &lt;p&gt;Artifacts recovered from the dump include:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Terminal history files demonstrating malware compilation using NASM&lt;/item&gt;
      &lt;item&gt;OCR commands parsing Korean PDF documents related to PKI and VPN infrastructure&lt;/item&gt;
      &lt;item&gt;PAM logs reflecting password changes and credential lifecycle events&lt;/item&gt;
      &lt;item&gt;Phishing infrastructure mimicking Korean government sites&lt;/item&gt;
      &lt;item&gt;IP addresses indicating reconnaissance of Taiwanese government and research institutions&lt;/item&gt;
      &lt;item&gt;Linux rootkit code using syscall hooking and covert channel deployment&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Credential Theft Focus&lt;/head&gt;
    &lt;p&gt;The dump strongly emphasizes credential harvesting as a central operational goal. Key files such as 136백운규001_env.key (The presence of 136백운규001_env.key is a smoking gun indicator of stolen South Korean Government PKI material, as its structure (numeric ID + Korean name + .key) aligns uniquely with SK GPKI issuance practices and provides clear evidence of compromised, identity-tied state cryptographic keys.) This was discovered alongside plaintext passwords, that indicate clear evidence of active compromise of South Korea’s GPKI (Government Public Key Infrastructure). Possession of such certificates would allow for highly effective identity spoofing across government systems.&lt;/p&gt;
    &lt;p&gt;PAM logs further confirmed this focus, showing a pattern of administrative account rotation and password resets, all timestamped and labeled with success indicators (변경완료: Change Complete). The accounts affected were not low-privilege; instead, usernames like oracle, svradmin, and app_adm01, often used by IT staff and infrastructure services, suggested access to core backend environments.&lt;/p&gt;
    &lt;p&gt;These findings point to a strategy centered on capturing and maintaining access to privileged credentials and digital certificates, effectively allowing the attacker to act as an insider within trusted systems.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Leaked .key files (e.g., 136백운규001_env.key) with plaintext passwords confirm access to GPKI systems&lt;/item&gt;
      &lt;item&gt;PAM logs show administrative password rotations tagged with 변경완료 (change complete)&lt;/item&gt;
      &lt;item&gt;Admin-level accounts such as oracle, svradmin, and app_adm01 repeatedly appear in compromised logs&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Phishing Infrastructure&lt;/head&gt;
    &lt;p&gt;The operator’s phishing infrastructure was both expansive and regionally tailored. Domains such as nid-security[.]com and webcloud-notice[.]com mimicked Korean identity and document delivery services, likely designed to intercept user logins or deploy malicious payloads. More sophisticated spoofing was seen in sites that emulated official government agencies like dcc.mil[.]kr, spo.go[.]kr, and mofa.go[.]kr.&lt;/p&gt;
    &lt;p&gt;Burner email usage added another layer of operational tradecraft. The address jeder97271[@]wuzak[.]com is likely linked to phishing kits that operated through TLS proxies, capturing credentials in real time as victims interacted with spoofed login forms.&lt;/p&gt;
    &lt;p&gt;These tactics align with previously known Kimsuky behaviors but also demonstrate an evolution in technical implementation, particularly the use of AiTM interception rather than relying solely on credential-harvesting documents.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Domains include: nid-security[.]com, html-load[.]com, webcloud-notice[.]com, koala-app[.]com, and wuzak[.]com&lt;/item&gt;
      &lt;item&gt;Mimicked portals: dcc.mil[.]kr, spo.go[.]kr, mofa.go[.]kr&lt;/item&gt;
      &lt;item&gt;Burner email evidence: jeder97271[@]wuzak[.]com&lt;/item&gt;
      &lt;item&gt;Phishing kits leveraged TLS proxies for AiTM credential capture&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Malware Development Activity&lt;/head&gt;
    &lt;p&gt;Kim’s malware development environment showcased a highly manual, tailored approach. Shellcode was compiled using NASM, specifically with flags like -f win32, revealing a focus on targeting Windows environments. Commands such as make and rm were used to automate and sanitize builds, while hashed API call resolution (VirtualAlloc, HttpSendRequestA, etc.) was implemented to evade antivirus heuristics.&lt;/p&gt;
    &lt;p&gt;The dump also revealed reliance on GitHub repositories known for offensive tooling. TitanLdr, minbeacon, Blacklotus, and CobaltStrike-Auto-Keystore were all cloned or referenced in command logs. This hybrid use of public frameworks for private malware assembly is consistent with modern APT workflows.&lt;/p&gt;
    &lt;p&gt;A notable technical indicator was the use of the proxyres library to extract Windows proxy settings, particularly via functions like proxy_config_win_get_auto_config_url. This suggests an interest in hijacking or bypassing network-level security controls within enterprise environments.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Manual shellcode compilation via nasm -f win32 source/asm/x86/start.asm&lt;/item&gt;
      &lt;item&gt;Use of make, rm, and hash obfuscation of Win32 API calls (e.g., VirtualAlloc, HttpSendRequestA)&lt;/item&gt;
      &lt;item&gt;GitHub tools in use: TitanLdr, minbeacon, Blacklotus, CobaltStrike-Auto-Keystore&lt;/item&gt;
      &lt;item&gt;Proxy configuration probing through proxyres library (proxy_config_win_get_auto_config_url)&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Rootkit Toolkit and Implant Structure&lt;/head&gt;
    &lt;p&gt;The Kim dump offers deep insight into a stealthy and modular Linux rootkit attributed to the operator’s post-compromise persistence tactics. The core implant, identified as vmmisc.ko (alternatively VMmisc.ko in some shells), was designed for kernel-mode deployment across multiple x86_64 Linux distributions and utilizes classic syscall hooking and covert channeling to maintain long-term undetected access.&lt;/p&gt;
    &lt;head rend="h3"&gt;Google Translation of Koh doc: Rootkit Endpoint Reuse Authentication Tool&lt;/head&gt;
    &lt;p&gt;“This tool uses kernel-level rootkit hiding technology, providing a high degree of stealth and penetration connection capability. It can hide while running on common Linux systems, and at the kernel layer supports connection forwarding, allowing reuse of external ports to connect to controlled hosts. Its communication behavior is hidden within normal traffic.&lt;/p&gt;
    &lt;p&gt;The tool uses binary merging technology: at compile time, the application layer program is encrypted and fused into a .ko driver file. When installed, only the .ko file exists. When the .ko driver starts, it will automatically decompress and release the hidden application-layer program.&lt;/p&gt;
    &lt;p&gt;Tools like chkrootkit, rkhunter, and management utilities (such as ps, netstat, etc.) are bypassed through technical evasion and hiding, making them unable to detect hidden networks, ports, processes, or file information.&lt;/p&gt;
    &lt;p&gt;To ensure software stability, all functions have also passed stress testing.&lt;/p&gt;
    &lt;p&gt;Supported systems: Linux Kernel 2.6.x / 3.x / 4.x, both x32 and x64 systems”.&lt;/p&gt;
    &lt;p&gt;Implant Features and Behavior&lt;/p&gt;
    &lt;p&gt;This rootkit exhibits several advanced features:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Syscall Hooking: Hooks critical kernel functions (e.g., getdents, read, write) to hide files, directories, and processes by name or PID.&lt;/item&gt;
      &lt;item&gt;SOCKS5 Proxy: Integrated remote networking capability using dynamic port forwarding and chained routing.&lt;/item&gt;
      &lt;item&gt;PTY Backdoor Shell: Spawns pseudoterminals that operate as interactive reverse shells with password protection.&lt;/item&gt;
      &lt;item&gt;Encrypted Sessions: Session commands must match a pre-set passphrase (e.g., testtest) to activate rootkit control mode.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Once installed (typically using insmod vmmisc.ko), the rootkit listens silently and allows manipulation via an associated client binary found in the dump. The client supports an extensive set of interactive commands, including:&lt;/p&gt;
    &lt;p&gt;+p # list hidden processes&lt;/p&gt;
    &lt;p&gt;+f # list hidden files&lt;/p&gt;
    &lt;p&gt;callrk # load client ↔ kernel handshake&lt;/p&gt;
    &lt;p&gt;exitrk # gracefully unload implant&lt;/p&gt;
    &lt;p&gt;shell # spawn reverse shell&lt;/p&gt;
    &lt;p&gt;socks5 # initiate proxy channel&lt;/p&gt;
    &lt;p&gt;upload / download # file transfer interface&lt;/p&gt;
    &lt;p&gt;These capabilities align closely with known DPRK malware behaviors, particularly from the Kimsuky and Lazarus groups, who have historically leveraged rootkits for lateral movement, stealth, persistence, and exfiltration staging.&lt;/p&gt;
    &lt;head rend="h2"&gt;Observed Deployment&lt;/head&gt;
    &lt;p&gt;Terminal history (.bash_history) shows the implant was staged and tested from the following paths:&lt;/p&gt;
    &lt;code&gt;.cache/vmware/drag_and_drop/VMmisc.ko

/usr/lib64/tracker-fs/vmmisc.ko

Execution logs show the use of commands such as:

insmod /usr/lib64/tracker-fs/vmmisc.ko

./client 192.168.0[.]39 testtest&lt;/code&gt;
    &lt;p&gt;These paths were not random—they mimic legitimate system service locations to avoid detection by file integrity monitoring (FIM) tools.&lt;/p&gt;
    &lt;p&gt;This structure highlights the modular, command-activated nature of the implant and its ability to serve multiple post-exploitation roles while maintaining stealth through kernel-layer masking.&lt;/p&gt;
    &lt;head rend="h2"&gt;Strategic Implications&lt;/head&gt;
    &lt;p&gt;The presence of such an advanced toolkit in the “Kim” dump strongly suggests the actor had persistent access to Linux server environments, likely via credential compromise. The use of kernel-mode implants also indicates long-term intent and trust-based privilege escalation. The implant’s pathing, language patterns, and tactics (e.g., use of /tracker-fs/, use of test passwords) match TTPs previously observed in operations attributed to Kimsuky, enhancing confidence in North Korean origin.&lt;/p&gt;
    &lt;head rend="h2"&gt;OCR-Based Recon&lt;/head&gt;
    &lt;p&gt;A defining component of Kim’s tradecraft was the use of OCR to analyze Korean-language security documentation. The attacker issued commands such as ocrmypdf -l kor+eng “file.pdf” to parse documents like 별지2)행정전자서명_기술요건_141125.pdf (“Appendix 2: Administrative Electronic Signature_Technical Requirements_141125.pdf”) and SecuwaySSL U_카달로그.pdf (“SecuwaySSL U_Catalog.pdf”). These files contain technical language around digital signatures, SSL implementations, and identity verification standards used in South Korea’s PKI infrastructure.&lt;/p&gt;
    &lt;p&gt;This OCR-based collection approach indicates more than passive intelligence gathering – it reflects a deliberate effort to model and potentially clone government-grade authentication systems. The use of bilingual OCR (Korean + English) further confirms the operator’s intention to extract usable configuration data across documentation types.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;OCR commands used to extract Korean PKI policy language from PDFs such as (별지2)행정전자서명_기술요건_141125.pdf and SecuwaySSL U_카달로그.pdf &lt;list rend="ul"&gt;&lt;item&gt;별지2)행정전자서명_기술요건_141125.pdf → (Appendix 2: Administrative Electronic Signature_Technical Requirements_141125.pdf&lt;/item&gt;&lt;item&gt;SecuwaySSL U_카달로그.pdf → SecuwaySSL U_Catalog.pdf&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Command examples: ocrmypdf -l kor+eng “file.pdf”&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;SSH and Log-Based Evidence&lt;/head&gt;
    &lt;p&gt;The forensic evidence contained within the logs, specifically SSH authentication records and PAM outputs, provides clear technical confirmation of the operator’s tactics and target focus.&lt;/p&gt;
    &lt;p&gt;Several IP addresses stood out as sources of brute-force login attempts. These include 23.95.213[.]210 (a known VPS provider used in past credential-stuffing campaigns), 218.92.0[.]210 (allocated to a Chinese ISP), and 122.114.233[.]77 (Henan Mobile, China). These IPs were recorded during multiple failed login events, strongly suggesting automated password attacks against exposed SSH services. Their geographic distribution and known history in malicious infrastructure usage point to an external staging environment, possibly used for pivoting into Korean and Taiwanese systems.&lt;/p&gt;
    &lt;p&gt;Beyond brute force, the logs also contain evidence of authentication infrastructure reconnaissance. Multiple PAM and OCSP (Online Certificate Status Protocol) errors referenced South Korea’s national PKI authority, including domains like gva.gpki.go[.]kr and ivs.gpki.go[.]kr. These errors appear during scripted or automated access attempts, indicating a potential strategy of credential replay or certificate misuse against GPKI endpoints, an approach that aligns with Kim’s broader PKI-targeting operations.&lt;/p&gt;
    &lt;p&gt;Perhaps the most revealing detail was the presence of successful superuser logins labeled with the Korean term 최고 관리자 (“Super Administrator”). This suggests the actor was not just harvesting credentials but successfully leveraging them for privileged access, possibly through cracked accounts, reused credentials, or insider-sourced passwords. The presence of such accounts in conjunction with password rotation entries marked as 변경완료 (“change complete”) further implies active control over PAM-protected systems during the operational window captured in the dump.&lt;/p&gt;
    &lt;p&gt;Together, these logs demonstrate a methodical campaign combining external brute-force access, PKI service probing, and administrative credential takeover, a sequence tailored for persistent infiltration and lateral movement within sensitive government and enterprise networks.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Brute-force IPs: 23.95.213[.]210, 218.92.0[.]210, 122.114.233[.]77&lt;/item&gt;
    &lt;/list&gt;
    &lt;table&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;IP Address&lt;/cell&gt;
        &lt;cell&gt;Origin&lt;/cell&gt;
        &lt;cell&gt;Role / Threat Context&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;218.92.0[.]210&lt;/cell&gt;
        &lt;cell&gt;China Telecom (Jiangsu)&lt;/cell&gt;
        &lt;cell&gt;Part of Chinanet backbone, likely proxy or scanning node&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;23.95.213[.]210&lt;/cell&gt;
        &lt;cell&gt;Colocrossing (US)&lt;/cell&gt;
        &lt;cell&gt;Frequently used in brute-force and anonymized hosting for malware ops&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;122.114.233[.]77&lt;/cell&gt;
        &lt;cell&gt;Presumed PRC local ISP&lt;/cell&gt;
        &lt;cell&gt;Possibly mobile/ISP-based proxy used to obfuscate lateral movement&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;PAM/OCSP errors targeting gva.gpki.go[.]kr, ivs.gpki.go[.]kr&lt;/item&gt;
      &lt;item&gt;Superuser login events under 최고 관리자 (Super Administrator)&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h1"&gt;Part II: Goals Analysis&lt;/head&gt;
    &lt;head rend="h2"&gt;Targeting South Korea: Identity, Infrastructure, and Credential Theft&lt;/head&gt;
    &lt;p&gt;The “Kim” operator’s campaign against South Korea was deliberate and strategic, aiming to infiltrate the nation’s digital trust infrastructure at multiple levels. A central focus was the Government Public Key Infrastructure (GPKI), where the attacker exfiltrated certificate files, including .key and .crt formats, some with plaintext passwords, and attempted repeated authentication against domains like gva.gpki.go[.]kr and ivs.gpki.go[.]kr. OCR tools were used to parse Korean technical documents detailing PKI and VPN architectures, demonstrating a sophisticated effort to understand and potentially subvert national identity frameworks. These efforts were not limited to reconnaissance; administrative password changes were logged, and phishing kits targeted military and diplomatic webmail, including clones of mofa.go[.]kr and credential harvesting through adversary-in-the-middle (AiTM) proxy setups.&lt;/p&gt;
    &lt;p&gt;Beyond authentication systems, Kim targeted privileged accounts (oracle, unwadm, svradmin) and rotated credentials to maintain persistent administrative access, as evidenced by PAM and SSH logs showing elevated user activity under the title 최고 관리자 (“Super Administrator”). The actor also showed interest in bypassing VPN controls, parsing SecuwaySSL configurations for exploitation potential, and deployed custom Linux rootkits using syscall hooking to establish covert persistence on compromised machines. Taken together, the dump reveals a threat actor deeply invested in credential dominance, policy reconnaissance, and system-level infiltration, placing South Korea’s public sector identity systems, administrative infrastructure, and secure communications at the core of its long-term espionage objectives.&lt;/p&gt;
    &lt;head rend="h2"&gt;Taiwan Reconnaissance&lt;/head&gt;
    &lt;p&gt;Among the most notable aspects of the “Kim” leak is the operator’s deliberate focus on Taiwanese infrastructure. The attacker accessed a number of domains with clear affiliations to the island’s public and private sectors, including tw.systexcloud[.]com (linked to enterprise cloud solutions), mlogin.mdfapps[.]com (a mobile authentication or enterprise login portal), and the .git/ directory of caa.org[.]tw, which belongs to the Chinese Institute of Aeronautics, a government-adjacent research entity.&lt;/p&gt;
    &lt;p&gt;This last domain is especially telling. Accessing .git/ paths directly implies an attempt to enumerate internal source code repositories, a tactic often used to discover hardcoded secrets, API keys, deployment scripts, or developer credentials inadvertently exposed via misconfigured web servers. This behavior points to more technical depth than simple phishing; it indicates supply chain reconnaissance and long-term infiltration planning.&lt;/p&gt;
    &lt;p&gt;The associated IP addresses further reinforce this conclusion. All three, 163.29.3[.]119, 118.163.30[.]45, and 59.125.159[.]81, are registered to academic, government, or research backbone providers in Taiwan. These are not random scans; they reflect targeted probing of strategic digital assets.&lt;/p&gt;
    &lt;head rend="h2"&gt;Summary of Whois &amp;amp; Ownership Insights&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;118.163.30[.]45 &lt;list rend="ul"&gt;&lt;item&gt;Appears as part of the IP range used for the domain dtc-tpe.com[.]tw, linked to Taiwan’s HINET provider (118.163.30[.]46 )Site Indices page of HINET provider.&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;163.29.3[.]119 &lt;list rend="ul"&gt;&lt;item&gt;Falls within the 163.29.3[.]0/24 subnet identified with Taiwanese government or institutional use, notably in Taipei. This corresponds to B‑class subnets assigned to public/government entities IP地址 (繁體中文).&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;59.125.159[.]81&lt;list rend="ul"&gt;&lt;item&gt;Belongs to the broader 59.125.159[.]0–59.125.159[.]254 block, commonly used by Taiwanese ISP operators such as Chunghwa Telecom in Taipei&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Taken together, this Taiwan-focused activity reveals an expanded operational mandate. Whether the attacker is purely DPRK-aligned or operating within a DPRK–PRC fusion cell, the intent is clear: compromise administrative and developer infrastructure in Taiwan, likely in preparation for broader credential theft, espionage, or disruption campaigns.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Targeted domains: tw.systexcloud[.]com, caa.org[.]tw/.git/, mlogin.mdfapps[.]com&lt;/item&gt;
      &lt;item&gt;IPs linked to Taiwanese academic/government assets: 163.29.3[.]119, 118.163.30[.]45, 59.125.159[.]81&lt;/item&gt;
      &lt;item&gt;Git crawling suggests interest in developer secrets or exposed tokens&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Hybrid Attribution Model&lt;/head&gt;
    &lt;p&gt;The “Kim” operator embodies the growing complexity of modern nation-state attribution, where cyber activities often blur traditional boundaries and merge capabilities across geopolitical spheres. This case reveals strong indicators of both North Korean origin and Chinese operational entanglement, presenting a textbook example of a hybrid APT model.&lt;/p&gt;
    &lt;p&gt;On one hand, the technical and linguistic evidence strongly supports a DPRK-native operator. Terminal environments, OCR parsing routines, and system artifacts consistently leverage Korean language and character sets. The operator’s activities reflect a deep understanding of Korean PKI systems, with targeted extraction of GPKI .key files and automation to parse sensitive Korean government PDF documentation. These are hallmarks of Kimsuky/APT43 operations, known for credential-focused espionage against South Korean institutions and diplomatic targets. The intent to infiltrate identity infrastructure is consistent with North Korea’s historical targeting priorities. Notably, the system time zone on Kim’s host machine was set to UTC+9 (Pyongyang Standard Time), reinforcing the theory that the actor maintains direct ties to the DPRK’s internal environment, even if operating remotely.&lt;/p&gt;
    &lt;p&gt;However, this actor’s digital footprint extends well into Chinese infrastructure. Browser and download logs reveal frequent interaction with platforms like gitee[.]com, baidu[.]com, and zhihu[.]com, highly popular within the PRC but unusual for DPRK operators who typically minimize exposure to foreign services. Moreover, session logs include simplified Chinese content and PRC browsing behaviors, suggesting that the actor may be physically operating within China or through Chinese-language systems. This aligns with longstanding intelligence on North Korean cyber operators stationed in Chinese border cities such as Shenyang and Dandong, where DPRK nationals often conduct cyber operations with tacit approval or logistical consent from Chinese authorities. These locations provide higher-speed internet, relaxed oversight, and convenient geopolitical proximity.&lt;/p&gt;
    &lt;p&gt;The targeting of Taiwanese infrastructure further complicates attribution. Kimsuky has not historically prioritized Taiwan, yet in this case, the actor demonstrated direct reconnaissance of Taiwanese government and developer networks. While this overlaps with Chinese APT priorities, recent evidence from the “Kim” dump, including analysis of phishing kits and credential theft workflows, suggests this activity was likely performed by a DPRK actor exploring broader regional interests, possibly in alignment with Chinese strategic goals. Researchers have noted that Kimsuky operators have recently asked questions in phishing lures related to potential Chinese-Taiwanese conflicts, implying interest beyond the Korean peninsula.&lt;/p&gt;
    &lt;p&gt;Some tooling overlaps with PRC-linked APTs, particularly GitHub-based stagers and proxy-resolving modules, but these are not uncommon in the open-source malware ecosystem and may reflect opportunistic reuse rather than deliberate mimicry.&lt;/p&gt;
    &lt;head rend="h2"&gt;IMINT Analysis: Visual Tradecraft and Cultural Camouflage&lt;/head&gt;
    &lt;p&gt;A review of image artifacts linked to the “Kim” actor reveals a deliberate and calculated use of Chinese social and technological visual content as part of their operational persona. These images, extracted from browser history and uploads attributed to the actor, demonstrate both strategic alignment with DPRK priorities and active cultural camouflage within the PRC digital ecosystem.&lt;/p&gt;
    &lt;p&gt;The visual set includes promotional graphics for Honor smartphones, SoC chipset evolution charts, Weibo posts featuring vehicle registration certificates, meme-based sarcasm, and lifestyle imagery typical of Chinese internet users. Notably, the content is exclusively rendered in simplified Chinese, reinforcing prior assessments that the operator either resides within mainland China or maintains a working digital identity embedded in Chinese platforms. Devices and services referenced, such as Xiaomi phones, Zhihu, Weibo, and Baidu, suggest intimate familiarity with PRC user environments.&lt;/p&gt;
    &lt;p&gt;Operationally, this behavior achieves two goals. First, it enables the actor to blend in seamlessly with native PRC user activity, which complicates attribution and helps bypass platform moderation or behavioral anomaly detection. Second, the content itself may serve as bait or credibility scaffolding (e.g. A framework to give the illusion of trust to allow for easier compromise ) in phishing and social engineering campaigns, especially those targeting developers or technical users on Chinese-language platforms.&lt;/p&gt;
    &lt;p&gt;Some images, such as the detailed chipset timelines and VPN or device certification posts, suggest a continued interest in supply chain reconnaissance and endpoint profiling—both tradecraft hallmarks of Kimsuky and similar APT units. Simultaneously, meme humor, sarcastic overlays, and visual metaphors (e.g., the “Kaiju’s tail is showing” idiom) indicate the actor’s fluency in PRC netizen culture and possible mockery of operational security breaches—whether their own or others’.&lt;/p&gt;
    &lt;p&gt;Taken together, this IMINT corpus supports the broader attribution model: a DPRK-origin operator embedded, physically or virtually, within the PRC, leveraging local infrastructure and social platforms to facilitate long-term campaigns against South Korea, Taiwan, and other regional targets while maintaining cultural and technical deniability.&lt;/p&gt;
    &lt;head rend="h2"&gt;Attribution Scenarios:&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Option A: DPRK Operator Embedded in PRC&lt;list rend="ul"&gt;&lt;item&gt;Use of Korean language, OCR targeting of Korean documents, and focus on GPKI systems strongly suggest North Korean origin.&lt;/item&gt;&lt;item&gt;Use of PRC infrastructure (e.g., Baidu, Gitee) and simplified Chinese content implies the operator is physically located in China or benefits from access to Chinese internet infrastructure.&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Use of Korean language, OCR targeting of Korean documents, and focus on GPKI systems strongly suggest North Korean origin.&lt;/item&gt;
      &lt;item&gt;Option B: PRC Operator Emulating DPRK&lt;list rend="ul"&gt;&lt;item&gt;Taiwan-focused reconnaissance aligns with PRC cyber priorities.&lt;/item&gt;&lt;item&gt;Use of open-source tooling and phishing methods shared with PRC APTs could indicate tactical emulation.&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Taiwan-focused reconnaissance aligns with PRC cyber priorities.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The preponderance of evidence supports the hypothesis that “Kim” is a North Korean cyber operator embedded in China or collaborating with PRC infrastructure providers. This operational model allows the DPRK to amplify its reach, mask attribution, and adopt regional targeting strategies beyond South Korea, particularly toward Taiwan. As this hybrid model matures, it reflects the strategic adaptation of DPRK-aligned threat actors who exploit the permissive digital environment of Chinese networks to evade detection and expand their operational playbook.&lt;/p&gt;
    &lt;head rend="h2"&gt;Targeting Profiles&lt;/head&gt;
    &lt;p&gt;The “Kim” leak provides one of the clearest windows to date into the role-specific targeting preferences of the operator, revealing a deliberate focus on system administrators, credential issuers, and backend developers, particularly in South Korea and Taiwan.&lt;/p&gt;
    &lt;p&gt;In South Korea, the operator’s interest centers around PKI administrators and infrastructure engineers. The recovered OCR commands were used to extract technical details from PDF documents outlining Korea’s digital signature protocols, such as identity verification, certificate validation, and encrypted communications, components that form the backbone of Korea’s secure authentication systems. The goal appears to be not only credential theft but full understanding and potential replication of government-trusted PKI procedures. This level of targeting suggests a strategic intent to penetrate deeply trusted systems, potentially for use in later spoofing or identity masquerading operations.&lt;/p&gt;
    &lt;p&gt;In Taiwan, the operator shifted focus to developer infrastructure and cloud access portals. Specific domains accessed, like caa.org[.]tw/.git/, indicate attempts to enumerate internal repositories, most likely to discover hardcoded secrets, authentication tokens, or deployment keys. This is a classic supply chain targeting method, aiming to access downstream systems via compromised developer credentials or misconfigured services.&lt;/p&gt;
    &lt;p&gt;Additional activity pointed to interaction with cloud service login panels such as tw.systexcloud[.]com and mlogin.mdfapps[.]com. These suggest an attempt to breach centralized authentication systems or identity providers, granting the actor broader access into enterprise or government networks with a single credential set.&lt;/p&gt;
    &lt;p&gt;Taken together, these targeting profiles reflect a clear emphasis on identity providers, backend engineers, and those with access to system-level secrets. This reinforces the broader theme of the dump: persistent, credential-first intrusion strategies, augmented by reconnaissance of authentication standards, key management policies, and endpoint development infrastructure.&lt;/p&gt;
    &lt;p&gt;South Korean:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;PKI admins, infrastructure engineers&lt;/item&gt;
      &lt;item&gt;OCR focus on Korean identity standards&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Taiwanese:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Developer endpoints and internal .git/ repos&lt;/item&gt;
      &lt;item&gt;Access to cloud panels and login gateways&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Final Assessment&lt;/head&gt;
    &lt;p&gt;The “Kim” leak represents one of the most comprehensive and technically intimate disclosures ever associated with Kimsuky (APT43) or its adjacent operators. It not only reaffirms known tactics, credential theft, phishing, and PKI compromise, but exposes the inner workings of the operator’s environment, tradecraft, and operational intent in ways rarely observed outside of active forensic investigations.&lt;/p&gt;
    &lt;p&gt;At the core of the leak is a technically competent actor, well-versed in low-level shellcode development, Linux-based persistence mechanisms, and certificate infrastructure abuse. Their use of NASM, API hashing, and rootkit deployment points to custom malware authorship. Furthermore, the presence of parsed government-issued Korean PDFs, combined with OCR automation, shows not just opportunistic data collection but a concerted effort to model, mimic, or break state-level identity systems, particularly South Korea’s GPKI.&lt;/p&gt;
    &lt;p&gt;The operator’s cultural and linguistic fluency in Korean, and their targeting of administrative and privileged systems across South Korean institutions, support a high-confidence attribution to a DPRK-native threat actor. However, the extensive use of Chinese platforms like gitee[.]com, Baidu, and Zhihu, and Chinese infrastructure for both malware hosting and browsing activity reveals a geographical pivot or collaboration: a hybrid APT footprint rooted in DPRK tradecraft but operating from or with Chinese support.&lt;/p&gt;
    &lt;p&gt;Most notably, this leak uncovers a geographical expansion of operational interest; the actor is no longer solely focused on the Korean peninsula. The targeting of Taiwanese developer portals, government research IPs, and .git/ repositories shows a broadened agenda that likely maps to both espionage and supply chain infiltration priorities. This places Taiwan, like South Korea, at the forefront of North Korean cyber interest, whether for intelligence gathering, credential hijacking, or as staging points for more complex campaigns.&lt;/p&gt;
    &lt;p&gt;The threat uncovered here is not merely malware or phishing; it is an infrastructure-centric, credential-first APT campaign that blends highly manual operations (e.g., hand-compiled shellcode, direct OCR of sensitive PDFs) with modern deception tactics such as AiTM phishing and TLS proxy abuse.&lt;/p&gt;
    &lt;p&gt;Organizations in Taiwan and South Korea, particularly those managing identity, certificate, and cloud access infrastructure, should consider themselves under persistent, credential-focused surveillance. Defensive strategies must prioritize detection of behavioral anomalies (e.g., use of OCR tools, GPKI access attempts), outbound communications with spoofed Korean domains, and the appearance of low-level toolchains like NASM or proxyres-based scanning utilities within developer or admin environments.&lt;/p&gt;
    &lt;p&gt;In short: the “Kim” actor embodies the evolution of nation-state cyber threats—a fusion of old-school persistence, credential abuse, and modern multi-jurisdictional staging. The threat is long-term, embedded, and adaptive.&lt;/p&gt;
    &lt;head rend="h1"&gt;Part III: Threat Intelligence Report&lt;/head&gt;
    &lt;head rend="h2"&gt;TLP WHITE:&lt;/head&gt;
    &lt;head rend="h3"&gt;Targeting Summary&lt;/head&gt;
    &lt;p&gt;The analysis of the “Kim” operator dump reveals a highly focused credential-theft and infrastructure-access campaign targeting high-value assets in both South Korea and Taiwan. Victims were selected based on their proximity to trusted authentication systems, administrative control panels, and development environments.&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Category&lt;/cell&gt;
        &lt;cell&gt;Details&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Regions&lt;/cell&gt;
        &lt;cell&gt;South Korea, Taiwan&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Targets&lt;/cell&gt;
        &lt;cell&gt;Government, Telecom, Enterprise IT&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Accounts&lt;/cell&gt;
        &lt;cell&gt;svradmin, oracle, app_adm01, unwadm, shkim88, jaejung91&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Domains&lt;/cell&gt;
        &lt;cell&gt;tw.systexcloud[.]com, nid-security[.]com, spo.go[.]kr, caa.org[.]tw/.git/&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;head rend="h3"&gt;Indicators of Compromise (IOCs)&lt;/head&gt;
    &lt;head rend="h4"&gt;Domains&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Phishing: nid-security[.]com, html-load[.]com, wuzak[.]com, koala-app[.]com, webcloud-notice[.]com&lt;/item&gt;
      &lt;item&gt;Spoofed portals: dcc.mil[.]kr, spo.go[.]kr, mofa.go[.]kr&lt;/item&gt;
      &lt;item&gt;Pastebin raw links: Used for payload staging and malware delivery&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;IP Addresses&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;External Targets (Taiwan): &lt;list rend="ul"&gt;&lt;item&gt;163.29.3[.]119 National Center for High-performance Computing&lt;/item&gt;&lt;item&gt;118.163.30[.]45 Taiwanese government subnet&lt;/item&gt;&lt;item&gt;59.125.159[.]81 Chunghwa Telecom&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Brute Forcing / Infrastructure Origins: &lt;list rend="ul"&gt;&lt;item&gt;23.95.213[.]210 VPS provider with malicious history&lt;/item&gt;&lt;item&gt;218.92.0[.]210 China Unicom&lt;/item&gt;&lt;item&gt;122.114.233[.]77 Henan Mobile, PRC&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Internal Host IPs (Operator Environment)&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;192.168.130[.]117&lt;/item&gt;
      &lt;item&gt;192.168.150[.]117&lt;/item&gt;
      &lt;item&gt;192.168.0[.]39&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;Operator Environment: Internal Host IP Narrative&lt;/head&gt;
    &lt;p&gt;The presence of internal IP addresses such as 192.168.130[.]117, 192.168.150[.]117, and 192.168.0[.]39 within the dump offers valuable insight into the attacker’s local infrastructure, an often-overlooked element in threat intelligence analysis. These addresses fall within private, non-routable RFC1918 address space, commonly assigned by consumer off-the-shelf (COTS) routers and small office/home office (SOHO) network gear.&lt;/p&gt;
    &lt;p&gt;The use of the 192.168.0[.]0/16 subnet, particularly 192.168.0.x and 192.168.150.x, strongly suggests that the actor was operating from a residential or low-profile environment, not a formal nation-state facility or hardened infrastructure. This supports existing assessments that North Korean operators, particularly those affiliated with Kimsuky, often work remotely from locations in third countries such as China or Southeast Asia, where they can maintain inconspicuous, low-cost setups while accessing global infrastructure.&lt;/p&gt;
    &lt;p&gt;Moreover, the distinction between multiple internal subnets (130.x, 150.x, and 0.x) may indicate segmentation of test environments or multiple virtual machines running within a single NATed network. This aligns with the forensic evidence of iterative development and testing workflows seen in the .bash_history files, where malware stagers, rootkits, and API obfuscation utilities were compiled, cleaned, and rerun repeatedly.&lt;/p&gt;
    &lt;p&gt;Together, these IPs reveal an operator likely working from a clandestine, residential base of operations, with modest hardware and commercial-grade routers. This operational setup is consistent with known DPRK remote IT workers and cyber operators who avoid attribution by blending into civilian infrastructure. It also suggests the attacker may be physically located outside of North Korea, possibly embedded in a friendly or complicit environment, strengthening the case for China-based activity by DPRK nationals.&lt;/p&gt;
    &lt;head rend="h3"&gt;MITRE ATT&amp;amp;CK Mapping&lt;/head&gt;
    &lt;table&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Phase&lt;/cell&gt;
        &lt;cell&gt;Technique(s)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Initial Access&lt;/cell&gt;
        &lt;cell&gt;T1566.002 , Adversary-in-the-Middle (AiTM) Phishing&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Execution&lt;/cell&gt;
        &lt;cell&gt;T1059.005 , Native API ShellcodeT1059.003 , Bash/Shell Scripts&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Credential Access&lt;/cell&gt;
        &lt;cell&gt;T1555 , Credential Store DumpingT1557.003 , Session Hijacking&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Persistence&lt;/cell&gt;
        &lt;cell&gt;T1176 , Rootkit (via khook syscall manipulation)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Defense Evasion&lt;/cell&gt;
        &lt;cell&gt;T1562.001 , Disable Security ToolsT1552 , Unsecured Credential Files&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Discovery&lt;/cell&gt;
        &lt;cell&gt;T1592 , Technical Information DiscoveryT1590 , Network Information&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Exfiltration&lt;/cell&gt;
        &lt;cell&gt;T1041 , Exfiltration over C2 ChannelT1567.002 , Exfil via Cloud Services&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;head rend="h3"&gt;Tooling and Capabilities&lt;/head&gt;
    &lt;p&gt;The actor’s toolkit spans multiple disciplines, blending malware development, system reconnaissance, phishing, and proxy evasion:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;NASM-based shellcode loaders: Compiled manually for Windows execution.&lt;/item&gt;
      &lt;item&gt;Win32 API hashing: Obfuscated imports via hashstring.py to evade detection.&lt;/item&gt;
      &lt;item&gt;GitHub/Gitee abuse: Tooling hosted or cloned from public developer platforms.&lt;/item&gt;
      &lt;item&gt;OCR exploitation: Used ocrmypdf to parse Korean PDF specs related to digital certificates and VPN appliances.&lt;/item&gt;
      &lt;item&gt;Rootkit deployment: Hidden persistence paths including /usr/lib64/tracker-fs and /proc/acpi/pcicard.&lt;/item&gt;
      &lt;item&gt;Proxy config extraction: Investigated PAC URLs using proxyres-based recon.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;Attribution Confidence Assessment&lt;/head&gt;
    &lt;table&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Attribution Candidate&lt;/cell&gt;
        &lt;cell&gt;Confidence Level&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;DPRK-aligned (Kimsuky)&lt;/cell&gt;
        &lt;cell&gt;High, Native Korean targeting, GPKI focus, OCR behavior&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;China-blended infrastructure&lt;/cell&gt;
        &lt;cell&gt;Moderate, PRC hosting, Gitee usage, Taiwan focus&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Solely PRC Actor&lt;/cell&gt;
        &lt;cell&gt;Low-to-Moderate, Tooling overlap but weak linguistic match&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Assessment: The actor appears to be a DPRK-based APT operator working from within or in partnership with Chinese infrastructure, representing a hybrid attribution model.&lt;/p&gt;
    &lt;head rend="h3"&gt;Defensive Recommendations&lt;/head&gt;
    &lt;table&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Area&lt;/cell&gt;
        &lt;cell&gt;Recommendation&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;PKI Security&lt;/cell&gt;
        &lt;cell&gt;Monitor usage of .key, .sig, .crt artifacts; enforce HSM or 2FA for key use&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Phishing Defense&lt;/cell&gt;
        &lt;cell&gt;Block domains identified in IoCs; validate TLS fingerprints and referrer headers&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Endpoint Hardening&lt;/cell&gt;
        &lt;cell&gt;Detect use of nasm, make, and OCR tools; monitor /usr/lib*/tracker-* paths&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Network Telemetry&lt;/cell&gt;
        &lt;cell&gt;Alert on .git/ directory access from external IPs; monitor outbound to Pastebin/GitHub&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Taiwan Focus&lt;/cell&gt;
        &lt;cell&gt;Establish watchlists for .tw domains targeted by PRC-originating IPs&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Admin Accounts&lt;/cell&gt;
        &lt;cell&gt;Review usage logs for svradmin, oracle, app_adm01, and ensure rotation policies&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;head rend="h1"&gt;APPENDIX A&lt;/head&gt;
    &lt;head rend="h2"&gt;Overlap or Confusion with Chinese Threat Actors&lt;/head&gt;
    &lt;p&gt;There is notable evidence of operational blur between Kimsuky and Chinese APTs in the context of Taiwan. The 2025 “Kim” data breach revealed an attacker targeting Taiwan whose tools and phishing kits matched Kimsuky’s, yet whose personal indicators (language, browsing habits) suggested a Chinese national. Researchers concluded this actor was likely a Chinese hacker either mimicking Kimsuky tactics or collaborating with them.. In fact, the leaked files on DDoS Secrets hint that Kimsuky has “openly cooperated with other Chinese APTs and shared their tools and techniques”. This overlap can cause attribution confusion – a Taiwan-focused operation might initially be blamed on China but could involve Kimsuky elements, or vice versa. So far, consensus is that North Korean and Chinese cyber operations remain separate, but cases like “Kim” show how a DPRK-aligned actor can operate against Taiwan using TTPs common to Chinese groups, muddying the waters of attribution.&lt;/p&gt;
    &lt;head rend="h2"&gt;File List from dump:&lt;/head&gt;
    &lt;head rend="h2"&gt;Master Evidence Inventory:&lt;/head&gt;
    &lt;table&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;File Name&lt;/cell&gt;
        &lt;cell&gt;Language&lt;/cell&gt;
        &lt;cell&gt;Content Summary&lt;/cell&gt;
        &lt;cell&gt;Category&lt;/cell&gt;
        &lt;cell&gt;Relevance&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;.bash_history&lt;/cell&gt;
        &lt;cell&gt;Mixed (EN/KR)&lt;/cell&gt;
        &lt;cell&gt;Operator shell history commands&lt;/cell&gt;
        &lt;cell&gt;System/Log&lt;/cell&gt;
        &lt;cell&gt;Shows rootkit compilation, file ops, network tests&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;user-bash_history&lt;/cell&gt;
        &lt;cell&gt;Mixed (EN/KR)&lt;/cell&gt;
        &lt;cell&gt;User-level shell commands&lt;/cell&gt;
        &lt;cell&gt;System/Log&lt;/cell&gt;
        &lt;cell&gt;Development and test activity&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;root-bash_history&lt;/cell&gt;
        &lt;cell&gt;Mixed (EN/KR)&lt;/cell&gt;
        &lt;cell&gt;Root-level shell commands&lt;/cell&gt;
        &lt;cell&gt;System/Log&lt;/cell&gt;
        &lt;cell&gt;Privilege-level activity, implant deployment&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;auth.log.2&lt;/cell&gt;
        &lt;cell&gt;EN/KR&lt;/cell&gt;
        &lt;cell&gt;Authentication logs (PAM/SSH)&lt;/cell&gt;
        &lt;cell&gt;System/Log&lt;/cell&gt;
        &lt;cell&gt;Credential changes marked 변경완료, brute force IPs&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;20190315.log&lt;/cell&gt;
        &lt;cell&gt;EN&lt;/cell&gt;
        &lt;cell&gt;System log file&lt;/cell&gt;
        &lt;cell&gt;System/Log&lt;/cell&gt;
        &lt;cell&gt;Auth and system access events&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;chrome-timeline.txt&lt;/cell&gt;
        &lt;cell&gt;EN&lt;/cell&gt;
        &lt;cell&gt;Browser activity timeline&lt;/cell&gt;
        &lt;cell&gt;Browser&lt;/cell&gt;
        &lt;cell&gt;Visited domains extraction&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;chromehistory.txt&lt;/cell&gt;
        &lt;cell&gt;EN&lt;/cell&gt;
        &lt;cell&gt;Browser history export&lt;/cell&gt;
        &lt;cell&gt;Browser&lt;/cell&gt;
        &lt;cell&gt;URLs visited&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;history.sqlite&lt;/cell&gt;
        &lt;cell&gt;EN&lt;/cell&gt;
        &lt;cell&gt;Empty DB file&lt;/cell&gt;
        &lt;cell&gt;Browser&lt;/cell&gt;
        &lt;cell&gt;No useful data&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;Media History&lt;/cell&gt;
        &lt;cell&gt;EN&lt;/cell&gt;
        &lt;cell&gt;Empty SQLite DB&lt;/cell&gt;
        &lt;cell&gt;Browser&lt;/cell&gt;
        &lt;cell&gt;No playback activity&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;History&lt;/cell&gt;
        &lt;cell&gt;EN&lt;/cell&gt;
        &lt;cell&gt;Empty Brave/Chromium DB&lt;/cell&gt;
        &lt;cell&gt;Browser&lt;/cell&gt;
        &lt;cell&gt;No visited URLs&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;Web Data&lt;/cell&gt;
        &lt;cell&gt;EN&lt;/cell&gt;
        &lt;cell&gt;Autofill/search DB&lt;/cell&gt;
        &lt;cell&gt;Browser&lt;/cell&gt;
        &lt;cell&gt;Search engines used (Google, DuckDuckGo, Qwant, Startpage, Ecosia)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;Visited Links&lt;/cell&gt;
        &lt;cell&gt;Binary&lt;/cell&gt;
        &lt;cell&gt;LevelDB/binary structure&lt;/cell&gt;
        &lt;cell&gt;Browser&lt;/cell&gt;
        &lt;cell&gt;Could not extract URLs&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;Cookies&lt;/cell&gt;
        &lt;cell&gt;EN&lt;/cell&gt;
        &lt;cell&gt;SQLite DB with cookies&lt;/cell&gt;
        &lt;cell&gt;Browser&lt;/cell&gt;
        &lt;cell&gt;Google cookies found&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;request_log.txt.20250220&lt;/cell&gt;
        &lt;cell&gt;EN&lt;/cell&gt;
        &lt;cell&gt;Captured phishing session&lt;/cell&gt;
        &lt;cell&gt;Phishing&lt;/cell&gt;
        &lt;cell&gt;Spoofed spo.go.kr, base64 credential logging&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;技术说明书 – 22.docx&lt;/cell&gt;
        &lt;cell&gt;ZH&lt;/cell&gt;
        &lt;cell&gt;Chinese rootkit stealth manual&lt;/cell&gt;
        &lt;cell&gt;Rootkit&lt;/cell&gt;
        &lt;cell&gt;Kernel hiding, binary embedding&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;1.ko 图文编译 .doc&lt;/cell&gt;
        &lt;cell&gt;ZH&lt;/cell&gt;
        &lt;cell&gt;Chinese compilation guide&lt;/cell&gt;
        &lt;cell&gt;Rootkit&lt;/cell&gt;
        &lt;cell&gt;Rootkit build process&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;1. build ko .txt&lt;/cell&gt;
        &lt;cell&gt;ZH&lt;/cell&gt;
        &lt;cell&gt;Build notes&lt;/cell&gt;
        &lt;cell&gt;Rootkit&lt;/cell&gt;
        &lt;cell&gt;Implant compilation instructions&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;0. 使用.txt&lt;/cell&gt;
        &lt;cell&gt;ZH&lt;/cell&gt;
        &lt;cell&gt;Usage notes&lt;/cell&gt;
        &lt;cell&gt;Rootkit&lt;/cell&gt;
        &lt;cell&gt;Implant usage and commands&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;re 正向工具修改建议 1.0.txt&lt;/cell&gt;
        &lt;cell&gt;ZH&lt;/cell&gt;
        &lt;cell&gt;Modification notes&lt;/cell&gt;
        &lt;cell&gt;Rootkit&lt;/cell&gt;
        &lt;cell&gt;Reverse tool modification suggestions&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;1111.txt&lt;/cell&gt;
        &lt;cell&gt;ZH&lt;/cell&gt;
        &lt;cell&gt;Rootkit/tool snippet&lt;/cell&gt;
        &lt;cell&gt;Rootkit&lt;/cell&gt;
        &lt;cell&gt;Part of implant notes&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;client&lt;/cell&gt;
        &lt;cell&gt;Binary&lt;/cell&gt;
        &lt;cell&gt;Rootkit client binary&lt;/cell&gt;
        &lt;cell&gt;Rootkit&lt;/cell&gt;
        &lt;cell&gt;Controller for implant communication&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;SSA_AO_AD_WT_002_웹보안 프로토콜설계서_Ver1.0_.doc&lt;/cell&gt;
        &lt;cell&gt;KR&lt;/cell&gt;
        &lt;cell&gt;GPKI protocol design doc&lt;/cell&gt;
        &lt;cell&gt;PKI&lt;/cell&gt;
        &lt;cell&gt;Korean web PKI standards&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;행자부 웹보안API 인수인계.doc&lt;/cell&gt;
        &lt;cell&gt;KR&lt;/cell&gt;
        &lt;cell&gt;GPKI API deployment manual&lt;/cell&gt;
        &lt;cell&gt;PKI&lt;/cell&gt;
        &lt;cell&gt;Deployment and cert API internals&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;HIRA-IR-T02_의약품처방조제_ComLibrary_통신전문.doc&lt;/cell&gt;
        &lt;cell&gt;KR&lt;/cell&gt;
        &lt;cell&gt;Medical ComLibrary XML spec&lt;/cell&gt;
        &lt;cell&gt;Healthcare&lt;/cell&gt;
        &lt;cell&gt;Prescription system communication&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;(별지2)행정전자서명_기술요건_141125.pdf&lt;/cell&gt;
        &lt;cell&gt;KR&lt;/cell&gt;
        &lt;cell&gt;PKI requirements PDF&lt;/cell&gt;
        &lt;cell&gt;PKI&lt;/cell&gt;
        &lt;cell&gt;OCR target&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;SecuwaySSL U_카달로그.pdf&lt;/cell&gt;
        &lt;cell&gt;KR&lt;/cell&gt;
        &lt;cell&gt;VPN catalog&lt;/cell&gt;
        &lt;cell&gt;PKI/VPN&lt;/cell&gt;
        &lt;cell&gt;OCR target&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;phrack-apt-down-the-north-korea-files.pdf&lt;/cell&gt;
        &lt;cell&gt;EN&lt;/cell&gt;
        &lt;cell&gt;Phrack article&lt;/cell&gt;
        &lt;cell&gt;Reference&lt;/cell&gt;
        &lt;cell&gt;Background on Kimsuky dump&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;Muddled Libra Threat Assessment.pdf&lt;/cell&gt;
        &lt;cell&gt;EN&lt;/cell&gt;
        &lt;cell&gt;Threat intel report&lt;/cell&gt;
        &lt;cell&gt;Reference&lt;/cell&gt;
        &lt;cell&gt;Comparative threat actor study&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;Leaked North Korean Linux Stealth Rootkit Analysis.pdf&lt;/cell&gt;
        &lt;cell&gt;EN&lt;/cell&gt;
        &lt;cell&gt;Rootkit analysis&lt;/cell&gt;
        &lt;cell&gt;Reference&lt;/cell&gt;
        &lt;cell&gt;Detailed implant study&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;Inside the Kimsuky Leak.docx (various)&lt;/cell&gt;
        &lt;cell&gt;EN&lt;/cell&gt;
        &lt;cell&gt;Threat report drafts&lt;/cell&gt;
        &lt;cell&gt;Report&lt;/cell&gt;
        &lt;cell&gt;Working versions&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;account (2).txt&lt;/cell&gt;
        &lt;cell&gt;EN&lt;/cell&gt;
        &lt;cell&gt;DB export (DBsafer, TrustedOrange)&lt;/cell&gt;
        &lt;cell&gt;Infra&lt;/cell&gt;
        &lt;cell&gt;Accounts and DB changes&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;result.txt&lt;/cell&gt;
        &lt;cell&gt;KR&lt;/cell&gt;
        &lt;cell&gt;Cert-related parsed data&lt;/cell&gt;
        &lt;cell&gt;Infra&lt;/cell&gt;
        &lt;cell&gt;Included GPKI .key/.sig&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;english_wikipedia.txt&lt;/cell&gt;
        &lt;cell&gt;EN&lt;/cell&gt;
        &lt;cell&gt;Wikipedia dump&lt;/cell&gt;
        &lt;cell&gt;Reference&lt;/cell&gt;
        &lt;cell&gt;Unrelated baseline&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;bookmarks-2021-01-04.jsonlz4&lt;/cell&gt;
        &lt;cell&gt;EN&lt;/cell&gt;
        &lt;cell&gt;Firefox bookmarks (compressed)&lt;/cell&gt;
        &lt;cell&gt;Browser&lt;/cell&gt;
        &lt;cell&gt;Needs decompression&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Screenshot translations&lt;/cell&gt;
        &lt;cell&gt;ZH&lt;/cell&gt;
        &lt;cell&gt;Chinese text (rootkit marketing blurb)&lt;/cell&gt;
        &lt;cell&gt;Rootkit&lt;/cell&gt;
        &lt;cell&gt;Kernel hiding tool description&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://dti.domaintools.com/inside-the-kimsuky-leak-how-the-kim-dump-exposed-north-koreas-credential-theft-playbook/"/></entry><entry><id>https://news.ycombinator.com/item?id=45152374</id><title>Over 80% of Sunscreen Performed Below Their Labelled Efficacy (2020)</title><updated>2025-09-07T00:50:54.990933+00:00</updated><content>&lt;doc fingerprint="b5740dbcec394b89"&gt;
  &lt;main&gt;
    &lt;p&gt;The use of effective sunscreen can reduce the harm caused to the skin by ultraviolet rays (UV) and slow down skin aging. The Consumer Council tested 30 models of sunscreen for daily use and over 80% of them were found to perform below their respective labelled efficacy. The measured sunscreen efficacy of 4 models were below SPF15, of which 2 were sunscreen products with very high protection i.e. labelled with SPF50+. Among the 23 models using the “PA System” which is commonly adopted by Asian countries to denote the UVA protection efficacy, only 7 were measured with an UVA Protection Factor (UVAPF) value met with their labelled PA levels. In addition, only 19 models stated the major ingredients on their packaging and consumers may not be able to identify possible allergens as a result. The Council urges manufacturers to critically review their production technology and processes, and to accurately label its product efficacy as well as to provide clear product information and usage guidelines. If consumers engage in outdoor activities for a prolonged period and use sunscreens with insufficient protection will possibly increase their risks of skin darkening or sunburn, and even skin cancer.&lt;/p&gt;
    &lt;p&gt;UVA emits from the sun may lead to skin aging, create wrinkles, darken skin colour, and may even induce skin cancer. However, internationally there is no unified system for product labelling of UVA protection, yet “PA System” is commonly adopted by Asian countries. UVB as ultraviolet rays with a higher energy level, can destroy DNA on skin surface, causing sunburn and is one of the main reasons of skin cancer. Currently, the Sun Protection Factor (SPF) index is an internationally recognised system to indicate the level of UVB protection in sunscreen products, the higher the value, the longer the protection offered against UVB.&lt;/p&gt;
    &lt;p&gt;Among the 30 daily-use sunscreen models tested, their price ranged from $80 to $550, i.e. $0.7 to $16.1 per g/ml, marking a difference of 23 times. 14 of them belonged to high protection and were labelled from SPF30 to SPF50 while the remaining 16 models belonged to very high protection and were labelled as SPF50+. 23 models showed their UVA protection ratings by “PA System”. The test result revealed the second cheapest model ($85) scored the highest 5 points in overall performance but the most expensive model ($550) only rated 3.5 points, indicating once again that there is no correlation between the price and product quality.&lt;/p&gt;
    &lt;p&gt;Currently, Hong Kong has no legislation or standard in regulating both SPF and UVA efficacy in products. Taking reference to the Cosmetics Regulation in the European Union (EU), this test covered SPF test and UVA protection test, as well as reviewing the labelling of each model.&lt;/p&gt;
    &lt;p&gt;According to the product labelling requirements of the EU Cosmetics Regulation, SPF labelling on sunscreens must meet 3 criteria, including passing the in vivo test of the related SPF; the measured UVAPF value reaching one-third or above of SPF; and the measured critical wavelength should be 370nm or above. The in vivo SPF test applied a fixed amount of the models on the skin of the back of 10 trial users before they were exposed to UV light. The SPF value of each model was calculated based on the erythema reactions measured on skin surface within 24 hours. Sunscreen labelled with SPF50+ should reach a measured SPF value of 60 or above, whereas products of SPF30 should reach a measured SPF value between 30 to 49.9. For the UVA blocking protection test, the UVA efficacy and the critical wavelength were calculated by detecting the penetration rate of UV light source through the special plastic film simulating human skin after applying the sunscreen models.&lt;/p&gt;
    &lt;p&gt;SPF test results revealed only 4 sunscreen models labelled with high protection (SPF30 to SPF50) fully complied with the efficacy labelling requirement under the EU Cosmetic Regulation. In the 14 models, 8 were measured with SPF value below their claims in the in vivo test. 1 model labelled as SPF30 had the largest discrepancy with its measured SPF value of only 9.8. Although the SPF values measured in the other 6 models were higher than or equal to their claims, the UVAPF value in 2 of them were only 8.0 and 4.0 respectively, failing to meet the requirement that UVAPF value need to be one-third of its SPF, and were therefore not in compliance with the labelling requirements of the EU.&lt;/p&gt;
    &lt;p&gt;In the 16 models labelled with very high protection (SPF50+), only 1 fully complied with the EU requirement. The measured SPF value in 14 of them were below SPF60, of which the lowest performing 2 were recorded with a measured value of just 11.7 and 14.3 respectively. The 2 models with the highest SPF values reached 87.2 and 61.7 respectively, but the UVAPF and critical wavelength of 1 of them could not meet the relevant criteria.&lt;/p&gt;
    &lt;p&gt;Unlike UVB, there is no unified international system for labelling UVA protection efficacy in products. The Council thus rated such efficacy of all models by converting the UVAPF values measured into the “PA system” which is commonly adopted by Asian countries. All 30 tested models were detected with different degrees of UVA protection with the measured UVAPF values ranging between 3.3 to 67.3, whereas UVAPF values of 9 of them were above 16, which were roughly the highest level in the PA system (i.e. PA++++) while another 10 models were rated at PA+++.&lt;/p&gt;
    &lt;p&gt;As for product labelling, 6 models listed their ingredients in Japanese only and general consumers may not be able to identify possible allergens or apply the products correctly. Suggested usage quantity cannot be found in 21 models. If consumers apply insufficient amount of sunscreens, they may incur the risk of inadequate protection. Moreover, 3 models were not marked with any expiry date. The Council urges manufacturers to improve product labelling. On the other hand, the Council reminds that some sunscreen products may have high water content level, once the product has reached the expiry date, preservative may lose its effectiveness, and this could accelerate bacterial and microbial growth. These products should be used up well before the expiry date after opening.&lt;/p&gt;
    &lt;p&gt;Consumers should try to avoid exposing their skin under direct sunlight to minimise the harm to the skin caused by UV radiation. When purchasing and using sunscreens, consumers need to be aware of the following:&lt;/p&gt;
    &lt;p&gt;In selecting sunscreen products, read the labels carefully to check the presence of allergens. Consumers with skin allergies or eczema should consider sunscreens with physical filters to reduce the risk of allergy;&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Sunscreens of physical filters are relatively mild and less likely to cause allergy but are relatively whiter in colour and more viscous in texture, thus it is harder to be applied evenly. While those with chemical filters are thinner and give a lighter feeling after application, they may pose a greater risk in skin and eyes irritation, thus resulting in allergy more easily;&lt;/item&gt;
      &lt;item&gt;Sunscreens with SPF50 are basically adequate in providing 98% protection to the skin while those with a larger SPF value may instead clog up pores or cause skin allergy. Thus, for normal use, it is not necessary to look for sunscreen products with a very high SPF value;&lt;/item&gt;
      &lt;item&gt;Make reference to the UV index announced by the Hong Kong Observatory before going out for outdoor activities, and choose appropriate sunscreens according to the UV index, type and duration of their activities;&lt;/item&gt;
      &lt;item&gt;Apply sunscreen according to the product label, normally it is around 1 teaspoon for face and should be re-applied every 2 to 3 hours to ensure sufficient protection to the skin;&lt;/item&gt;
      &lt;item&gt;Sunscreen should be cleansed by make-up remover or facial cleanser according to the packaging instruction to prevent any residue from affecting skin’s health;&lt;/item&gt;
      &lt;item&gt;Pay attention to the product expiry date, disposal is necessary if the product is expired to avoid the risks of microbial growth upon contact with air or skin.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The Consumer Council reserves all its right (including copyright) in respect of CHOICE magazine and Online CHOICE&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.consumer.org.hk/en/press-release/528-sunscreen-test"/></entry><entry><id>https://news.ycombinator.com/item?id=45152569</id><title>Cape Station, future home of an enhanced geothermal power plant, in Utah</title><updated>2025-09-07T00:50:54.840340+00:00</updated><content/><link href="https://www.gatesnotes.com/utahs-hottest-new-power-source-is-below-the-ground"/></entry><entry><id>https://news.ycombinator.com/item?id=45152648</id><title>Shipping textures as PNGs is suboptimal</title><updated>2025-09-07T00:50:54.597282+00:00</updated><content>&lt;doc fingerprint="1e83485230620990"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;ð¼ï¸ Stop Shipping PNGs In Your Games&lt;/head&gt;
    &lt;p&gt;Are you shipping textures to players as PNGs? The goal of this post is to convince you that this is suboptimal, and walk you through a better approach.&lt;/p&gt;
    &lt;p&gt;Iâll also share my implementation of the suggested approach, but if youâd rather do it yourself Iâll also provide you with the information you need to get started.&lt;/p&gt;
    &lt;p&gt;If youâre using a game engine, it is almost certainly doing what this post suggests automatically, but it doesnât hurt to double check!&lt;/p&gt;
    &lt;head rend="h1"&gt;Whatâs wrong with PNGs?&lt;/head&gt;
    &lt;p&gt;PNGs are great for interchange. Theyâre lossless, they compresses well, and support is ubiquitous. PNG is my image interchange format of choice.&lt;/p&gt;
    &lt;p&gt;This post isnât a criticism of PNGsâitâs just that the PNG format is designed for image data, not texture data.&lt;/p&gt;
    &lt;p&gt;Here are some examples of features you would expect out of a texture format that youâre not going to find in an image format:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Pregenerated mipmaps&lt;/item&gt;
      &lt;item&gt;Cubemaps&lt;/item&gt;
      &lt;item&gt;Premultiplied alpha&lt;list rend="ul"&gt;&lt;item&gt;Technically PNGs can be premultplied, but yours probably arenât.&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Can you work around all these issues? Sure.&lt;/p&gt;
    &lt;p&gt;You can premultiply and generate your mipmaps at load time. You can ship separate images for each cuebmap face. But now youâre resigned to cheap mipmap generation, and cubemaps that are difficult to downsample correctly.&lt;/p&gt;
    &lt;p&gt;You can certainly make it work, but youâre making things unnecessarily difficult for yourself by using the wrong tool for the job.&lt;/p&gt;
    &lt;p&gt;Furthermore, texture formats have a killer feature not mentioned aboveâsupport for GPU compatible texture compression like BCn.&lt;/p&gt;
    &lt;p&gt;An in-depth explanation of GPU compression formats it out of scope for this post, but at a high level, these formats store each block of pixels as a couple of endpoints and a method for interpolating between those endpoints.&lt;/p&gt;
    &lt;p&gt;This trades mild degradation of image quality for improvements in storage, VRAM usage, and sampling performance. Itâs so good it feels like youâre cheating thermodynamics.&lt;/p&gt;
    &lt;p&gt;GPUs canât decompress PNGs on the fly, so as a result, if you ship PNGs you either canât take advantage of this compression, or you have to first decompress the PNGs and then do an extremely expensive compression step to convert to the desired block based format every time a player loads the game.&lt;/p&gt;
    &lt;p&gt;Thatâs a little goofy, right?&lt;/p&gt;
    &lt;p&gt;(EDIT: Well, itâs goofy when done naivelyâsee discussion w/ Ignacio CastaÃ±o here, something along these lines can become viable if you can transcode quickly.)&lt;/p&gt;
    &lt;head rend="h1"&gt;What texture formats are out there?&lt;/head&gt;
    &lt;p&gt;Texture formats like Khronosâ KTX2 and Microsoftâs DDS are designed for exactly our use case. Theyâre just headers followed by some image data that you can upload directly to the GPU without any additional processing.&lt;/p&gt;
    &lt;p&gt;Well, unless you use supercompression. GPU compression formats donât provide great compression ratios, so itâs typical to apply lossless compression as well (think zlib or lz4.) In that case youâll decompress, and then upload.&lt;/p&gt;
    &lt;p&gt;The meta here is to design your lossy compressor to be aware that its output is going to be losslessly compressed afterwards. This lets it make decisions that reduce entropy, improving the effectiveness of the lossless step.&lt;/p&gt;
    &lt;p&gt;I used DXT5 + lz4 compressed DDS files for Way of Rhea, Iâm switching to BC7 + zlib compressed KTX2 files for my next game. Both approaches are reasonable.&lt;/p&gt;
    &lt;p&gt;Note: I primarily develop games for desktop platforms. IIUC, on mobile, hardware support for various types of GPU compression varies but the formats are similar-ish, so the meta is to use something like Basis Universal to quickly transcode to the correct format on load.&lt;/p&gt;
    &lt;head rend="h1"&gt;Exporting to KTX2&lt;/head&gt;
    &lt;p&gt;At this point, youâre likely looking through the export menu of your image editor of choice for KTX2 and DDS, and not seeing any results.&lt;/p&gt;
    &lt;p&gt;Unfortunately, AFAICT most people end up rolling their own exporters. People used to use Nvidia Texture Tools, but itâs archived as there wasnât funding to maintain it. Itâs still a great reference. Nvidia has a closed source fork, but I donât love having a closed source dependency for such an integral part of my engine.&lt;/p&gt;
    &lt;p&gt;Iâve implemented an open source texture tool that youâre welcome to use directly or as a reference for your own implementation: Zex.&lt;/p&gt;
    &lt;p&gt;It can be used as a command line tool, or as a Zig library. It reads PNGs using stb_image, and converts them to KTX2, with support BC7 compression + rate distortion optimization from bc7enc_rdo, and supercompression via zlib.&lt;/p&gt;
    &lt;p&gt;It supports most standard features, such as mipmap generation with configurable filters and address modes.&lt;/p&gt;
    &lt;p&gt;I havenât implemented cubemap exports yet as my current game isnât using them. If you need support before I get around to it, PRs are welcomeâit should be a pretty straightforward addition.&lt;/p&gt;
    &lt;p&gt;If you want to implement your own exporter, here are some useful references. Keep in mind that you donât need to support all possible features, just the ones your engine uses:&lt;/p&gt;
    &lt;head rend="h2"&gt;Texture Viewers&lt;/head&gt;
    &lt;p&gt;Most image viewers wonât be able to open texture formats like DDS/KTX2. This sorta makes senseâimage viewers are typically designed to show a single image, whereas a texture may be comprised of multiple mipmaps and cubemap faces and such, and may be HDR. This requires a fancier UI.&lt;/p&gt;
    &lt;p&gt;Iâm personally a fan of Tacentview for this use case. Itâs open source, cross platform, and supports a large number of formats.&lt;/p&gt;
    &lt;head rend="h2"&gt;Preserving Alpha Coverage&lt;/head&gt;
    &lt;p&gt;source: firewatch inspired me so I made a tree and then never used it for anything&lt;/p&gt;
    &lt;p&gt;Pregenerating your mipmaps gives you a chance to be a little more âcorrectâ about them.&lt;/p&gt;
    &lt;p&gt;For example, if youâve ever tried to render a tree or a chain link fence in-game as a cutout (or with alpha to coverage) but found that it vanishes when you get far away, your mipmap filtering likely isnât taking into account the alpha test.&lt;/p&gt;
    &lt;p&gt;You can see Zexâs alpha test aware resize here. This isnât battle tested yet, compare results visually in-engine to see if it provides a benefit for your artwork.&lt;/p&gt;
    &lt;head rend="h2"&gt;Automation&lt;/head&gt;
    &lt;p&gt;You probably donât want to convert all your images by hand. I did this for Way of Rhea for a while, but eventually realized that it was a waste of time. Every time a texture changes you have to go back and figure out what settings you used last time. Just automate it.&lt;/p&gt;
    &lt;p&gt;Iâll probably write a follow up post describing my strategy for automating this at some point in the future, but if you want a sneak peak, check out Oven. Itâs not exactly general purpose right now, but might be an interesting reference.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://gamesbymason.com/blog/2025/stop-shipping-pngs/"/></entry><entry><id>https://news.ycombinator.com/item?id=45152773</id><title>Microsoft Azure: "Multiple international subsea cables were cut in the Red Sea"</title><updated>2025-09-07T00:50:44.454725+00:00</updated><content>Increased network latency on traffic routes through the Middle East

Starting at 05:45 UTC on 06 September 2025, network traffic traversing through the Middle East may experience increased latency due to undersea fiber cuts in the Red Sea. Network traffic is not interrupted as Microsoft has rerouted traffic through alternate network paths. We do expect higher latency on some traffic that previously traversed through the Middle East. Network traffic that does not traverse through the Middle East is not impacted.We’ll continue to provide daily updates, or sooner if conditions change.

This message was last updated at 22:33 UTC on 06 September 2025</content><link href="https://azure.status.microsoft/en-gb/status"/></entry><entry><id>https://news.ycombinator.com/item?id=45152779</id><title>A Navajo weaving of an integrated circuit: the 555 timer</title><updated>2025-09-07T00:50:44.226360+00:00</updated><content>&lt;doc fingerprint="2f555263dc670aeb"&gt;
  &lt;main&gt;
    &lt;p&gt;The noted Diné (Navajo) weaver Marilou Schultz recently completed an intricate weaving composed of thick white lines on a black background, punctuated with reddish-orange diamonds. Although this striking rug may appear abstract, it shows the internal circuitry of a tiny silicon chip known as the 555 timer. This chip has hundreds of applications in everything from a sound generator to a windshield wiper controller. At one point, the 555 was the world's best-selling integrated circuit with billions sold. But how did the chip get turned into a rug?&lt;/p&gt;
    &lt;p&gt;The 555 chip is constructed from a tiny flake of silicon with a layer of metallic wiring on top. In the rug, this wiring is visible as the thick white lines, while the silicon forms the black background. One conspicuous feature of the rug is the reddish-orange diamonds around the perimeter. These correspond to the connections between the silicon chip and its eight pins. Tiny golden bond wires—thinner than a human hair—are attached to the square bond pads to provide these connections. The circuitry of the 555 chip contains 25 transistors, silicon devices that can switch on and off. The rug is dominated by three large transistors, the filled squares with a 王 pattern inside, while the remaining transistors are represented by small dots.&lt;/p&gt;
    &lt;p&gt;The weaving was inspired by a photo of the 555 timer die taken by Antoine Bercovici (Siliconinsider); I suggested this photo to Schultz as a possible subject for a rug. The diagram below compares the weaving (left) with the die photo (right). As you can see, the weaving closely follows the actual chip, but there are a few artistic differences. For instance, two of the bond pads have been removed, the circuitry at the top has been simplified, and the part number at the bottom has been removed.&lt;/p&gt;
    &lt;p&gt;Antoine took the die photo with a dark field microscope, a special type of microscope that produces an image on a black background. This image emphasizes the metal layer on the top of the die. In comparison, a standard bright-field microscope produced the image below. When a chip is manufactured, regions of silicon are "doped" with impurities to create transistors and resistors. These regions are visible in the image below as subtle changes in the color of the silicon.&lt;/p&gt;
    &lt;p&gt;In the weaving, the chip's design appears almost monumental, making it easy to forget that the actual chip is microscopic. For the photo below, I obtained a version of the chip packaged in a metal can, rather than the typical rectangle of black plastic. Cutting the top off the metal can reveals the tiny chip inside, with eight gold bond wires connecting the die to the pins of the package. If you zoom in on the photo, you may recognize the three large transistors that dominate the rug.&lt;/p&gt;
    &lt;p&gt;The artist, Marilou Schultz, has been creating chip rugs since 1994, when Intel commissioned a rug based on the Pentium as a gift to AISES (American Indian Science &amp;amp; Engineering Society). Although Schultz learned weaving as a child, the Pentium rug was a challenge due to its complex pattern and lack of symmetry; a day's work might add just an inch to the rug. This dramatic weaving was created with wool from the long-horned Navajo-Churro sheep, colored with traditional plant dyes.&lt;/p&gt;
    &lt;p&gt;For the 555 timer weaving, Schultz experimented with different materials. Silver and gold metallic threads represent the aluminum and copper in the chip. The artist explains that "it took a lot more time to incorporate the metallic threads," but it was worth the effort because "it is spectacular to see the rug with the metallics in the dark with a little light hitting it." Aniline dyes provided the black and lavender colors. Although natural logwood dye produces a beautiful purple, it fades over time, so Schultz used an aniline dye instead. The lavender colors are dedicated to the weaver's mother, who passed away in February; purple was her favorite color.&lt;/p&gt;
    &lt;head rend="h2"&gt;Inside the chip&lt;/head&gt;
    &lt;p&gt;How does the 555 chip produce a particular time delay? You add external components—resistors and a capacitor—to select the time. The capacitor is filled (charged) at a speed controlled by the resistor. When the capacitor get "full", the 555 chip switches operation and starts emptying (discharging) the capacitor. It's like filling a sink: if you have a large sink (capacitor) and a trickle of water (large resistor), the sink fills slowly. But if you have a smal sink (capacitor) and a lot of water (small resistor), the sink fills quickly. By using different resistors and capacitors, the 555 timer can provide time intervals from microseconds to hours.&lt;/p&gt;
    &lt;p&gt;I've constructed an interactive chip browser that shows how the regions of the rug correspond to specific electronic components in the physical chip. Click on any part of the rug to learn the function of the corresponding component in the chip.&lt;/p&gt;
    &lt;p&gt;For instance, two of the large square transistors turn the chip's output on or off, while the third large transistor discharges the capacitor when it is full. (To be precise, the capacitor goes between 1/3 full and 2/3 full to avoid issues near "empty" and "full".) The chip has circuits called comparators that detect when the capacitor's voltage reaches 1/3 or 2/3, switching between emptying and filling at those points. If you want more technical details about the 555 chip, see my previous articles: an early 555 chip, a 555 timer similar to the rug, and a more modern CMOS version of the 555.&lt;/p&gt;
    &lt;head rend="h2"&gt;Conclusions&lt;/head&gt;
    &lt;p&gt;The similarities between Navajo weavings and the patterns in integrated circuits have long been recognized. Marilou Schultz's weavings of integrated circuits make these visual metaphors into concrete works of art. This connection is not just metaphorical, however; in the 1960s, the semiconductor company Fairchild employed numerous Navajo workers to assemble chips in Shiprock, New Mexico. I wrote about this complicated history in The Pentium as a Navajo Weaving.&lt;/p&gt;
    &lt;p&gt;This work is being shown at SITE Santa Fe's Once Within a Time exhibition (running until January 2026). I haven't seen the exhibition in person, so let me know if you visit it. For more about Marilou Schultz's art, see The Diné Weaver Who Turns Microchips Into Art, or A Conversation with Marilou Schultz on YouTube.&lt;/p&gt;
    &lt;p&gt;Many thanks to Marilou Schultz for discussing her art with me. Thanks to First American Art Magazine for providing the photo of her 555 rug. Follow me on Mastodon (@[email protected]), Bluesky (@righto.com), or RSS for updates.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.righto.com/2025/09/marilou-schultz-navajo-555-weaving.html"/></entry><entry><id>https://news.ycombinator.com/item?id=45152940</id><title>I'm Making a Beautiful, Aesthetic and Open-Source Platform for Learning Japanese</title><updated>2025-09-07T00:50:44.088423+00:00</updated><content/><link href="https://kanadojo.com"/></entry><entry><id>https://news.ycombinator.com/item?id=45153140</id><title>Gloria funicular derailment initial findings report (EN) [pdf]</title><updated>2025-09-07T00:50:43.686873+00:00</updated><content/><link href="https://www.gpiaaf.gov.pt/upload/processos/d054239.pdf"/></entry><entry><id>https://news.ycombinator.com/item?id=45153237</id><title>Rust tool for generating random fractals</title><updated>2025-09-07T00:50:43.264097+00:00</updated><content>&lt;doc fingerprint="8d10ba1818e5799d"&gt;
  &lt;main&gt;
    &lt;p&gt;A simple command-line application written in Rust for generating fractals using the 'Chaos Game' algorithm.&lt;/p&gt;
    &lt;p&gt;This application generates fractals using the following simple, iterative algorithm:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Define the &lt;math-renderer&gt;$n$&lt;/math-renderer&gt;vertices of a regular polygon&lt;/item&gt;
      &lt;item&gt;Choose a random initial point within the polygon&lt;/item&gt;
      &lt;item&gt;Select one of the polygon's vertices at random&lt;/item&gt;
      &lt;item&gt;Move the current point a specific ratio, &lt;math-renderer&gt;$r$&lt;/math-renderer&gt;, of the distance towards the chosen vertex&lt;/item&gt;
      &lt;item&gt;Repeat steps 3 and 4 for some large number of iterations, plotting each new point&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;By adjusting the number of vertices, the distance ratio, and optionally adding additional restrictions to the choice of vertices, a huge variety of intricate fractal patterns can be generated. More details on the algorithm can be found here.&lt;/p&gt;
    &lt;p&gt;Below are some example fractals generated with this application.&lt;/p&gt;
    &lt;p&gt;To use the application, you can simply install it using Cargo:&lt;/p&gt;
    &lt;code&gt;cargo install chaos-game&lt;/code&gt;
    &lt;p&gt;You can then run it from the command line, providing arguments to customise the generated fractal.&lt;/p&gt;
    &lt;p&gt;This basic example generates the Sierpiński triangle, one of the most well-known fractals produced by the Chaos Game.&lt;/p&gt;
    &lt;code&gt;chaos-game -n 3 -r 0.5 -o sierpinski.png&lt;/code&gt;
    &lt;p&gt;You can see all available options by running the application with the &lt;code&gt;--help&lt;/code&gt; flag.&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="4"&gt;
        &lt;cell role="head"&gt;Option&lt;/cell&gt;
        &lt;cell role="head"&gt;Short Flag&lt;/cell&gt;
        &lt;cell role="head"&gt;Description&lt;/cell&gt;
        &lt;cell role="head"&gt;Default Value&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;
          &lt;code&gt;--sides&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;-n&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;The number of sides of the fractal polygon.&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;3&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;
          &lt;code&gt;--ratio&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;-r&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;The distance ratio for point interpolation (0.0 to 1.0).&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;0.5&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;
          &lt;code&gt;--iterations&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;-i&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;The total number of iterations to run the algorithm for.&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;100,000,000&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;
          &lt;code&gt;--output&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;-o&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;The output filename for the final PNG image.&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;output.png&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;
          &lt;code&gt;--coloured&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;-c&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;A flag to generate coloured fractals based on vertex angle.&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;false&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;
          &lt;code&gt;--colour-scale&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;An aesthetic parameter to control image brightness.&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;4.0&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;
          &lt;code&gt;--image-size&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;The width and height of the square image in pixels.&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;1000&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;
          &lt;code&gt;--rotation-offset&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;A rotation offset for the polygon in degrees.&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;0.0&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;code&gt;--rule&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;The name of the rule to use for selecting vertices.&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;"default"&lt;/code&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;To set up the project for development and add your own custom rules, follow these steps:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Clone the repository&lt;/p&gt;
        &lt;code&gt;git clone https://github.com/benjaminrall/chaos-game.git cd chaos-game&lt;/code&gt;
      &lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Run the application:&lt;/p&gt;&lt;p&gt;You can build and run the project directly with Cargo. Using the&lt;/p&gt;&lt;code&gt;--release&lt;/code&gt;flag is recommended for performance.&lt;quote&gt;cargo run --release -- -n 6 -c -o example.png&lt;/quote&gt;&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The application is designed to be easily extensible with custom rules for generating more complex fractals. Rules consist of a function acting on some history of previous points and a proposed new point, and must return a boolean indicating whether the new point is valid.&lt;/p&gt;
    &lt;p&gt;To create your own rule, follow these steps:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;&lt;p&gt;Create a file for your new rule:&lt;/p&gt;&lt;p&gt;Create a new file in the&lt;/p&gt;&lt;code&gt;chaos-game/src/rules/&lt;/code&gt;directory (e.g.,&lt;code&gt;my_rule.rs&lt;/code&gt;)&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Write your rule function:&lt;/p&gt;&lt;p&gt;Inside the new file, write a function that takes the history of previous points and a proposed new point, and returns whether the point is valid. Decorate it with the&lt;/p&gt;&lt;code&gt;#[rule]&lt;/code&gt;attribute, giving it a unique name and specifying how much history it needs.&lt;quote&gt;// chaos-game/src/rules/my_rule.rs use std::collections::VecDeque; use chaos_game_macros::rule; use crate::types::Vertex; // An example rule that doesn't allow the same vertex to be selected twice in a row #[rule("my-rule", history = 1)] fn no_repeats(previous_points: &amp;amp;VecDeque&amp;lt;&amp;amp;Vertex&amp;gt;, new_point: &amp;amp;Vertex) -&amp;gt; bool { if previous_points.len() == 0 { return true; } previous_points[0].index != new_point.index }&lt;/quote&gt;&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Add your rule to the rules module:&lt;/p&gt;&lt;p&gt;Inside&lt;/p&gt;&lt;code&gt;chaos-game/src/rules/mod.rs&lt;/code&gt;, define your rule as a module by its filename (e.g.&lt;code&gt;mod my_rule;&lt;/code&gt;)&lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Use your new rule:&lt;/p&gt;
        &lt;p&gt;After completing this setup, the rule will be automatically registered and available to use from the command line:&lt;/p&gt;
        &lt;quote&gt;cargo run --release -- -n 5 -c --rule my-rule&lt;/quote&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This project is licensed under the MIT License. See the &lt;code&gt;LICENSE&lt;/code&gt; file for details.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/benjaminrall/chaos-game"/></entry><entry><id>https://news.ycombinator.com/item?id=45153428</id><title>A history of metaphorical brain talk in psychiatry</title><updated>2025-09-07T00:50:42.068845+00:00</updated><content>&lt;doc fingerprint="372392652863ddb2"&gt;
  &lt;main&gt;
    &lt;head rend="h2"&gt;Abstract&lt;/head&gt;
    &lt;p&gt;From the very beginnings of our field in the late 18th century, psychiatrists have engaged, often extensively, in “metaphorical brain talk” – rephrasing descriptions of mental processes in unconfirmed brain metaphors (e.g., “diseased working of the brain convolutions”). In the late 19th century, Kraepelin criticized the later developments of such approaches, termed “brain mythology” by the philosopher/psychiatrist Jaspers in 1913. In this essay, I review the history, meaning, and significance of this phenomenon and reach four conclusions. First, this trend has continued to the present day in metaphors such as the “broken brain” and the use of simplistic and empirically poorly supported explanations of psychiatric illness, such as depression being “due to an imbalance of serotonin in the brain.” Second, our language stems from the tension in our profession that seeks to be a part of medicine yet declares our main focus as treatment of the mental. We feel more comfortable with the reductionist approach of brain metaphors, which, even though at times self-deceptive, reinforce our commitment to and membership in a brain-based medical specialty. Third, metaphorical brain talk can also be seen as the “promissory note” of our profession, a pledge that the day will come when we can indeed explain accurately to ourselves and to our patients the brain basis of the psychiatric disorders from which they suffer. Finally, moving away from metaphorical brain talk would reflect an increasing maturity of both the research and clinical aspects of our profession.&lt;/p&gt;
    &lt;head rend="h3"&gt;Similar content being viewed by others&lt;/head&gt;
    &lt;p&gt;Psychiatry emerged as a medical specialty between 1780 and 1830 committed both to the care of the mentally ill and to the brain as the seat of these disturbances [1]. This created an inherent tension, because for all of our history up to the present day, with rare exceptions, such as general paresis of the insane, we have had little insight into exactly how disturbances in the brain cause psychiatric disorders. This is not the case with most other organ-based medical specialties, like obstetrics and ophthalmology, where organ-specific pathologies could be related to many observed clinical syndromes. This article seeks to describe how the tension between the mental, clinical phenomenon we treat and our commitment to brain-based explanations as a medical specialty have played out over the history of our discipline.&lt;/p&gt;
    &lt;p&gt;We proceed historically and focus on a concept I call “metaphorical brain talk,” defined as describing the disturbed mental processes in psychiatric illness in terms of brain function in ways that appear to be explanatory but actually have little to no explanatory power. I will work my way through (i) 19th century asylum psychiatry, (ii) the rise and then decline of the first biological psychiatric revolution in the 1860s–70s and 1880–1910 respectively, (iii) meet the key figure of Meynert and the application to his work of the concept of “brain mythology” by Karl Jaspers, (iv) trace a few examples of metaphorical brain talk into the 20th century, and (v) review a more positive view of brain talk – as instantiating a promissory note of our profession to one day clarify the brain mechanisms underlying psychiatric illness. I conclude by summarizing the significance of this phenomenon, postulating that it addresses a foundational conflict in our medical profession of psychiatry between our commitment to the study and treatment of the disturbed mental phenomenon and our identification with the brain as our organ of interest.&lt;/p&gt;
    &lt;head rend="h2"&gt;Metaphorical brain talk in asylum psychiatry 1780–1900&lt;/head&gt;
    &lt;p&gt;Here are twelve examples of metaphorical brain talk sampled from over a century from physicians who cared for and wrote, largely in asylums, about the nature and origins of what they would have called madness or insanity. Italics are added throughout this essay for emphasis:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Cullen 1784 – Delusions, he suggests “may depend … upon some inequality in the excitement of the brain …[for] the proper exercise of our intellectual functions, the excitement must be complete, and equal in every part of the brain …. so, if any part of the brain is not excited, or not excitable, that recollection cannot properly take place, while at the same time other parts of the brain, more excited and excitable, may give false perceptions, associations, and judgments” [2] pp. 130–131.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;quote&gt;
      &lt;p&gt;Hartley 1834 – Who, in describing a potential mechanism for delusions, writes: “thus suppose a person, whose nervous system is disordered, to turn his thoughts accidentally to some barely possible good or evil. If the nervous disorder falls in with this, it increases the vibrations belonging to its ideas so much, as to give it a reality…” [3] p. 252.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;quote&gt;
      &lt;p&gt;Laycock 1845 – He explains the origin of obsessions “..by which is termed the association of ideas, the morbid action of vesicular neurine be brought within the current of his thought, he becomes utterly powerless to resist it…” [4]. [Neurine, an alkaloid found in egg yolk, brain, bile and decaying flesh arises from the putrefaction of biological tissues and is a syrupy liquid with a fishy odor.]&lt;/p&gt;
    &lt;/quote&gt;
    &lt;quote&gt;
      &lt;p&gt;Monro 1851 – He proposes a theory of insanity: “1. That it is an affection consequent on depressed vitality [which] manifest itself with peculiar and specific force in the cerebral masses, owing to a congenital, and frequently hereditary, tendency in the brain thus to succumb when oppressed by any exciting cause. 2. That when the cerebral masses are suffering from this condition of depressed vitality, they lose that static equilibrium of the nervous energies which we call tone” [5] p. 76.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;quote&gt;
      &lt;p&gt;Dickson 1874 – The characteristic of some forms of insanity is excitement and vividness of impression, but this excitement and vividness always emanate from one portion or spot of the brain which pays out its functional activity rapidly and unchecked or uncorrected by the [brain] portions whose functions are arrested or in abeyance [6] p. 11.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;quote&gt;
      &lt;p&gt;Ball and Ritti 1881 – the cells of the cortex we are told are the organ of intelligence; it is therefore right that to their disorder, whether anatomical or physiological, the production of delusions should be attributed [7] p. 337.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;quote&gt;
      &lt;p&gt;Stearns 1883 – The Professor takes notice of two states of the brain; the one he terms excitement—the other collapse. Collapse may be defined a morbid diminution of the tone of the brain, and of the motion of the nervous fluid. The term excitement must be obvious to everyone … sometimes a collapse of one part of the brain interrupts the communication of the due excitement of the whole, and thus induces delirium [delusions] [8] p. 6–8.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;quote&gt;
      &lt;p&gt;Savage 1884 – With melancholia we meet with a slowing of all vital processes. What the pathological basis of melancholia may be one cannot at present tell. It however seems, in most cases, that it must be associated with impaired nutrition of the nervous centres and the conducting system [9] p. 130.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;quote&gt;
      &lt;p&gt;Clouston 1892 – An “insane delusion” may therefore be defined to be “a belief in something that would be incredible to people of the same class, education, or race as the person who expresses it, the belief persisting in spite of proof to the contrary, this resulting from diseased working of the brain convolutions” [10] p. 244.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;quote&gt;
      &lt;p&gt;Clark 1895 – The factor which is inherited [in severe mental illness] cannot be insanity per se, but may be an instability or disordered arrangement of nerve tissue [11] p. 238.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;quote&gt;
      &lt;p&gt;Maudsley 1895 – In a description of melancholia, he writes “The probable pathological condition of things is an exorbitant and predominant, almost exclusive, activity of certain brain-tracts charged with sad feeling not unlike the sort of activity which has motor issue otherwise in spasm or convulsion of muscles” [12] p. 195.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;quote&gt;
      &lt;p&gt;Kellogg 1897 – In explaining hallucinations, he write that “The main pathogenic fact is that the sensory image is aroused in the higher brain centres with such unnatural force as to be projected outwardly as an objective reality” [13] p. 152.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;The goal of each of these examples of brain talk is to explain insanity itself or some more specific features like delusions or melancholia in terms of brain function or structure. But the descriptions are non-specific and/or metaphorical and lacked substantial biological meaning. We find general constructs such as “inequality of excitement,” “morbid action of vesicular neurine,” “diminution of the tone of the brain,” “impaired nutrition of the nervous centres,” “diseased workings of the brain convolutions,” and “disordered arrangement of nerve tissue.” Nearly all these observations could have been stated in mental language, but were not.&lt;/p&gt;
    &lt;head rend="h2"&gt;Brain talk and the first biological revolution in psychiatry 1870s–1880s&lt;/head&gt;
    &lt;p&gt;The first biological revolution in psychiatry, the turn to neuroanatomy and neuropathology, was largely stimulated by Wilhelm Griesinger (1817–1868) [14, 15], the first Professor of Psychiatry in German speaking Europe and the authors of an influential textbook of psychiatry [16,17,18]. He established the important journal Archives of Psychiatry and Nervous Diseases in 1868 and in his preface to the first issue wrote:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Psychiatry has undergone a transformation in its relation to the rest of medicine.… This transformation rests principally on the realization that patients with so-called ‘mental illnesses’ are really individuals with illnesses of the nerves and brain [14] p. 76.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Eric Engstrom, a leading historian of German Psychiatry, captures the critical change that Griesinger initiated in German psychiatry:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;During the 1850s and 1860s, his textbook had served as a powerful catalyst to an entire generation of students … who wholeheartedly adopted Griesinger’s conviction that “mental disease were brain diseases” and who went about applying anatomic and physiologic methods of inquiry” [15] p. 90.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;His students, particularly Westphal, Meynert, and Wernicke, became the first generation of academic psychiatrists in the world, pursuing biological/neuropathological research careers outside of asylums. Griesinger strongly advocated for the establishment of psychiatric autopsies as the key research method. Disciplined science applied to the brains of the diseased mentally ill would, he asserted, reveal an anatomical diagnosis, the true essence of mental illness [15]. In the increasing number of university-based departments of psychiatry in German-speaking Europe established in this era, the leading scientific paradigm, the high prestige research programs, were in neuroanatomy and neuropathology.&lt;/p&gt;
    &lt;p&gt;The excitement of this era in psychiatry was well captured by Otto Binswanger in 1892:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Under the influence of the tremendous progress of medical science in anatomy and physiology [and] … the increase in the use of the microscope… a degree of disdain for imponderable psychic influences became the norm. This progress literally intoxicated the heads of many; in heated efforts to derive the cause … of all pathological life processes from the fundamental precepts of biological [and anatomical] work… [19] p. 53.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;But the excitement was short lived. The hope that gross and/or microscopic examination of the brains of the mentally ill would yield insights into etiology of the classical psychiatric disorders was not fulfilled. But something else happened in the wake of these failures, a proliferation of more elaborate metaphorical brain talk.&lt;/p&gt;
    &lt;head rend="h2"&gt;The reaction to this “Revolution”&lt;/head&gt;
    &lt;p&gt;In a section of his history of this era, roughly 1880–1910, entitled “Neuropathology in Retreat,” Engstrom begins:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;At the close of the century, a number of critics of neuropathology emerged within the ranks of the profession to add their voice to [other] longstanding … objections … the fruits of anatomical research turned out to be less than originally expected…. The potential of anatomical research had been decidedly overestimated and … researchers had fallen victim to speculative interpretations of their laboratory results….Research had stagnated in what had become an era of abstract theories and schematic models of brain function in which researchers appears to take little notice of alternative theories or of contradictory evidence [15] p. 123.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;One early critique of this new neuropathological biological psychiatry was provided by a 31-year-old Emil Kraepelin. In the inaugural lecture for his first professorship at the University of Dorpat in 1887 [20], he summarized the current progress in psychiatry and provided a strong critique of the biological theorizing then occurring from prominent neuroanatomical psychiatric researchers, especially Meynert [21], who was then working at the University of Vienna. He began by noting that “the impossibility of a satisfactory solution [to the mind-body problem] … has led to numerous attempts to bridge the gap separating events of the body and mind by means of airy constructions of speculative fantasy” p. 351. This focus on highly speculative brain-based theories “… explain the strange fact that psychiatry still finds itself in an era of fruitless hypotheses and theories – an era long surpassed by the rest of medical science…” [21] p. 351.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Then, he directly confronts the reductionist biological theories of Meynert, in which he defined his science as a clinical science of the diseases of the anterior brain, its structure, capabilities and nutriments. In the field of cerebral anatomy, in spite of wholly inadequate factual grounding, he ingeniously understood and described the general blueprint of the organs of the central nervous system [21] p. 353.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Meynert, according to Kraepelin, took the concept of localization of cerebral functions to implausible extremes.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;He does not even shy away from the shocking implication … that every cell … must be viewed as the seat of a specific and discrete idea; and that the associative linkage of that idea with other mental elements is mediated through connective pathways that he calls associative strands. The second key idea behind Meynert’s theories is taken from neural physiology and is expressed in the terms ‘stimulation’ and ‘inhibition.’ As soon as each individual mental function has been associated with the various parts of the brain, then naturally it suffices to posit an inhibition here and a stimulation there in order to explain the most diverse combinations of phenomena [21] p. 353.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Kraepelin continues to his key point, noting that some of Meynert’s anatomical claims had already been contradicted by recent research.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;It is possible that specific aspects of this system will establish themselves as an enduring part of our science. But if that is to be the case, then it will happen only after much long, arduous and detailed work has been completed… Only time will tell whether, as in the case of anatomy, the basic idea represents an intuitive knowledge of reality and proves to be true. But it is dangerous – and Meynert’s school has not entirely escaped the ruinous consequences – to want immediately to move into and live in Meynert’s airily-constructed house, before its foundation has been securely laid and hard work has tightened up, one by one, the loose joints of his theory… [21] p. 354.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;He then generalizes his criticism to a number of the highly speculative reductionist physiological theories postulated during this time period:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;While Meynert’s constructions are based on assumptions that appear to be open to empirical inquiry at some point in time, there is no shortage of [other] theories built on ground that will probably forever remain in the realm of hypothesis. Recall for example the attempts to transcribe simple [mental] processes into the language of psychophysics, or the efforts to trace the origins of mental disorder back to the gradual death of the core neural material, or finally the ingenious essays that plumb the depths of molecular mechanics in order to arrange the physiological processes that supposedly occur in the disordered brain in terms of the interaction of elementary forces, the exchange of kinetic into potential energy and vice versa, or even the movement of atoms. The impartial observer will barely be able to contain his astonishment when he sees how, in the very medical discipline most lacking in factual and scientifically useful empirical evidence, there exists a flourishing tendency to extend theory all the way back to the most primal state of the phenomena [21] p. 354.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;head rend="h2"&gt;More on Meynert&lt;/head&gt;
    &lt;p&gt;As a major figure in the history of neuroanatomy and chair of the department of psychiatry in Vienna from 1873–1892, Theodor Meynert (1833–1892) is worthy of more attention as he typifies in this historical era, the excess exuberance of metaphorical brain talk. Here is an extended quote from a careful review of his career and research by the eminent Austrian neurologist and historian – Franz Seitelberger [22]:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Meynert carried his morphological research to its attainable limits and then transgressed them by hypotheses … [His] model, while partly based on empirical morphological findings, also involved some deductive speculative thinking, devoid of proof, yet fused into a coherent whole. The structural element of the brain, the nerve cell is, in Meynert’s view, endowed with a ‘soul’… Meynert conceives of the function of the cerebral hemispheres as analogous to “colonies of living beings, capable of consciousness, connected with each other with feelings threads … and controlling their image of the world” [23] p. 269.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;We will not detail with other aspects of his system except to note that some tracts in the brain reflected “unconscious animal life,” while others, especially the cortex, constituted the “ego-forming functional center of the brain.”&lt;/p&gt;
    &lt;p&gt;His developed distinct theories of psychotic and mood-based psychopathologies, with the former arising from&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Disturbed cooperation between the various parts of the brain, a disturbance of association coordination often caused by “functional disturbances of the social nature of the brain” [23] p. 270.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;By contrast, his theory of affective disturbances, was an elaboration of a very old view, based in humoral medicine, of excess or deficient blood flow. Seitelberger summarizes his theory:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;They combined the assumption of an aggressive nature of neuronal activity with the functional role of the cerebral blood flow and the antagonism between cortex and subcortical centers…. The feeling of unhappiness is linked with an inhibition or suppression of the neuronal activity … and corresponding reduction in blood flow. Affects and therefore manifestations of the nutritional state of the cortical neurons [23] pp. 270–271.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Another psychiatric historian, Janzarik, summarized Meynert’s neuropathological work as follows&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Paradigmatic for the spirit of the time is the highly speculative fusion of psychopathological findings with anatomical findings and pathogenetic claims, which in Meynert, following an old tradition, relate in particular to vascular-dependent differences in brain nutrition [24] pp. 598–599.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Meynert’s own student, Auguste Forel, called his brain pathways “fantastical constructions” [25] p. 177. We conclude with one further critique from Phelps:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;What about Meynert’s work made it cogent and compelling? What about it seemed capable of dispelling the mystery of the nervous system and dispensing with the unique inwardness of the mind? Part of the answer … lies with Meynert’s images of the brain’s material and the collocation of its fleshy, fibrous inner stuff with the interiority of the mind… By delineating various ‘fibre-systems’ in the brain and nerves, then deducing their different functions on the basis of their winding ‘pathways’, Meynert elaborated new shapes and textures inside the brain and by doing so, he elaborated … [and] fleshed-out functions of the mind… But even as he imagined these fibres as pathways or tracks inside the brain, he co-extended them and co-located them as pathways somehow equally inside the mind [26]. P. 389–390&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;His success, Phelps suggests, was due to his ability “to connect what he saw inside the brain with an image of what he described as ‘inside’ the mind [by] … his combination of material and metaphorical techniques” [26] pp. 394.&lt;/p&gt;
    &lt;head rend="h2"&gt;Metaphorical brain talk in the 20th century&lt;/head&gt;
    &lt;p&gt;We first turn to Adolf Meyer, the most influential psychiatrist in the US over the first 3rd of the 20th century [27]. It should be recalled that until World War II, American psychiatry was a rather small profession, largely composed of superintendents of mental hospitals who largely had a biologically orientation to their work. In 1907, while the director of the New York Psychiatric Institute, Meyer wrote about his concerns of the narrow views that US physicians would typically take in their approach to psychiatric illness that likely reflected his views about the excesses of earlier authors like Meynert:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Instead of analyzing the facts in an unbiased way and using the great extension of our experience with mental efforts to get square with things … they pass at once to a one-sided consideration of the extra-psychological components of the situation, abandon the ground of controllable observation, translate what they see into a jargon of wholly uncontrollable brain-mythology, and all that with the conviction that this is the only admissible and scientific way [28] p. 172.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Next, we examine a text on a similar theme from a quite different source - the psychiatrist-philosopher Karl Jaspers. In his the introduction to the first (1913) edition of General Psychopathology [29], he writes:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;The still widespread “somatic prejudice” is: everything mental cannot be examined as such, it is merely subjective. If it is to be discussed scientifically, it must be presented anatomically, physically, as a physical function; for this it is better to have a preliminary anatomical construction, which is considered heuristic, than a direct psychological investigation. Such anatomical constructions are quite fantastic (Meynert…) and are rightly called “brain mythologies.” Things that have no connection to one another, such as cortical cells and memory images, brain fibers and psychological associations, are brought together. There is also no basis for these mythologies insofar as not a single specific brain process is known that could be assigned to a specific mental process as a direct parallel phenomenon [29] p. 8 (KSK translation).&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;We might think that recent scientific developments over the rest of the 20th century eliminated the need for metaphorical brain talk. We provide three examples suggesting that this is not the case.&lt;/p&gt;
    &lt;p&gt;First, in a series of articles published over several decades, the distinguished psychologist Paul Meehl proposed a cognitively and psychometrically sophisticated genetic single-locus model for schizophrenia spectrum disorders. A core part of this theory was equating cognitive and neurobiological parts of his theory, as expressed here in 1962:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;The cognitive slippage is here conceived as a direct molar consequence of synaptic slippage, potentiated by the disruptive effects of aversive control and inadequate development of interpersonal communication sets [30] p. 834.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;His phrase, “synaptic slippage,” has commonly been repeated in the subsequent literature [31, 32].&lt;/p&gt;
    &lt;p&gt;Second, in 1985, a leading biological psychiatrist, Nancy Andreasen, published a widely-cited book whose title was a paradigmatic example of metaphorical brain talk: The Broken Brain [33]. She writes, for example, that recent advances in research have “taught us that many forms of mental illness are due to abnormalities in brain structure or chemistry. Psychiatry is moving from the study of the “troubled mind” to the “broken brain” [33] p. VIII. In a later section, she describes, using broad metaphors, the kinds of brain abnormalities that occur in psychiatric disorders.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;The various forms of mental illness are due to many different types of brain abnormalities … sometimes the fault maybe in the pattern of the wiring or circuitry, sometimes in the command centers, and sometimes in the way messages move along the wires” [33] p. 221.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Third, in an important development in the history of neuroscience, in the early 1960s, cell bodies and neuronal pathways of the putative monoamine neurotransmitters dopamine, norepinephrine, and serotonin were demonstrated in mammalian brains [34,35,36]. Within a few years, prominent psychiatric researchers proposed that abnormalities of function in these neurotransmitters were the major cause of three of the most important of psychiatric disorders: schizophrenia, mania and depression [37,38,39,40]. I suggest that these theories reflect, in more subtle ways than prior examples, metaphorical brain talk. Or, perhaps these monoamine hypotheses could be seen as sitting somewhere on a continuum of naively enthusiastic scientific theories and metaphorical brain talk. They were grounded in solid basic neuroscience, and had support from pharmacologic studies of mechanisms of action of antipsychotic and antidepressant medication [41]. However, trying to clarify disease etiology through the mechanism of action of pharmacologic treatments is deeply problematic as illustrated by the now common phrase: “headache is not an aspirin-deficiency disease” [42]. Given the more than 100 neurotransmitters in the mammalian brain, the plausibility that dysfunctions in the first three to be traced in the brain caused the major psychiatric disorders strains to the breaking point any sense of credulity. Furthermore, these theories, for example, the serotonin hypothesis of depression [43,44,45,46,47], have not fared well over time. Large-sample, genome-wide association studies are now available on all three disorders, and none support a major role for genetic variants involved in the dopamine, norepinephrine, and serotonin systems for, respectively, schizophrenia [48], bipolar illness [49], and depression [50]. A recent widely-cited umbrella review concludes, “The main areas of serotonin research provide no consistent evidence of there being an association between serotonin and depression, and no support for the hypothesis that depression is caused by lowered serotonin activity or concentrations” [46] p. 3243. While there remains substantial controversy about the precise etiological relationship between serotonin and depression [43, 51, 52], I do not seek to deny that serotonin may play some role in the complex pathophysiology of this syndrome. Rather, I suggest, less controversially, I hope, that the grand monocausal theory of depression resulting primarily from serotonin dysfunction (as I have argued earlier, regarding the dopamine hypothesis of schizophrenia [42]) is almost certainly false.&lt;/p&gt;
    &lt;p&gt;Importantly, these monoamine theories have had impacts outside of our research world. I recently heard the following story from friend of a friend, who knew I was a psychiatrist:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;I was feeling really down and my family doctor referred me to a local psychiatrist, Dr. C. We talked for 30 min. He said I had what he called “major depression” and this was due to an imbalance in my brain serotonin. He said I should take the medicine he prescribed and it would correct that imbalance. Three weeks later I was feeling a lot better. I was really impressed.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;While certainly more false than true, this example of metaphorical brain talk remains a common story in psychiatric culture. Some of us tell stories like this to our patients, in part because it may make them feel better and also perhaps because it is a story we like to tell. Metaphorical brain talk can be popular.&lt;/p&gt;
    &lt;p&gt;While my focus in this essay is the internal history of the psychiatric profession, there remains one elephant in the room that needs brief attention. When psychiatric research came to seek external financial support, simplistic metaphorical brain talk often appealed to prospective funders. This continues to the present day. Even more powerfully, advertising of psychopharmacological drugs, rising to prominence in the last third of the 20th century, often revolved centrally around metaphorical brain talk. While we like to claim that such advertising has no effect on us, this is naïve. An empirical review of this question, while far outside my remit, would, I suspect, find such advertisements have significantly increased the modern popularity of metaphorical brain.&lt;/p&gt;
    &lt;head rend="h2"&gt;Why brain talk?&lt;/head&gt;
    &lt;p&gt;Metaphorical brain talk has arisen out of a foundational feature of our profession. Psychiatry began and remains a profession that treats disorders whose major clinical manifestations are in mental space – symptoms – as well as resulting signs and disturbed behaviors. But, we are also a medical specialty and consider our association to medicine central to our mission and professional identity. Most other medical specialists have organs of special focus – ophthalmology the eye, cardiologists the heart, gynecologists the uterus and ovaries. In its first decades in the late 18th and early 19th centuries, psychiatry, for quite logical reasons, chose the brain [1]. But, some 80 years later, neurology began to develop and took with it nearly all the diseases where, given the methods of gross and histological pathology then available, one could track those disorders back to definable brain or nervous system lesions. Ever since, our relationship with the brain has been an ambivalent one, the reasons for which can be simply explained. The indirect evidence that the symptoms of our disorders are instantiated in brains is overwhelming and new genetic studies are providing a further sound footing to this long widely accepted belief [53]. However, despite decades of research, and tremendous progress in basic neuroscience, imaging technologies, and molecular genetics, we still have no good idea exactly how psychiatric disorders emerge from disturbances in brain function. This is an uncomfortable position for our field to be in. Metaphorical brain talk has, for now more than two centuries, been one way to patch over this discomfort.&lt;/p&gt;
    &lt;p&gt;The medical historian Rosenberg can help us here, first in a “status” report on our discipline:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Since its origins as a specialty in the 19th century, psychiatry has … suffered from a recurrent status anxiety—one might call it procedure envy, or organic inferiority. Psychiatry has been chronically sensitive to its inability to call upon a repertoire of tightly bounded, seemingly objective, and generally agreed-upon diagnostic categories based firmly on biopathological mechanisms … Psychiatry remains the legatee of the emotional, the behavioral, and the imperfectly understood. In this sense it has been a poor relation of its specialist peers in surgery and internal medicine [54] p. 124.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Second, in reviewing the history of 19th century medicine and the success of its system of primitive etiologic theories, he makes the following point relevant to my argument&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;…the [medical] system provided a rationalistic framework in which the physician could at once reassure the patient and legitimate his own ministrations…. The physician’s own self-image and his social plausibility depended on the creation of a shared faith – a conspiracy to believe - in his ability to understand and rationally manipulate the elements in this speculative system [55] P. 489.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Even though not true in any substantive scientific sense, since the beginning of our discipline, metaphorical brain talk has, as part of a professional “conspiracy to believe,” helped our own self-image as a “poor relation” in medicine and given us plausible metaphors to communicate about the disease we treat with ourselves and with our patients. This conspiracy, I suggest, was further reinforced through the large advertising budgets of modern drug companies.&lt;/p&gt;
    &lt;head rend="h2"&gt;Another take on metaphorical brain talk&lt;/head&gt;
    &lt;p&gt;Having read and pondered many of the 19th century examples from asylum psychiatrists of metaphorical brain talk, and the more elaborate high speculative system of Meynert, I realized that there is a more positive view one might take of these efforts. It complements the more critical perspective outline above. These examples of brain talk also speak of the deep desire of psychiatrists to truly understand the brain basis of mental illness. For many of them, their constant pattern of framing mental descriptions of psychiatric illness in brain metaphors likely bespeaks their wish this could one day be done in earnest. Their use of brain talk was indirectly an expression of a promissory note for the future, a long-term aspiration to one day be able to both be a clinician, familiar with the description and treatment of the deeply disturbing mental symptoms of their patients, and, like their colleagues in other branches of medicine, have the ability to identify, by clinical signs, laboratory or radiological tests, or even biopsy, a definitive underlying pathophysiology in the brain.&lt;/p&gt;
    &lt;p&gt;I present only one example of this phenomenon from the influential psychiatrist Kurt Schneider (1887–1967). In the fifth edition of his short textbook Clinical Psychopathology [56], in his section on classification, he describes two groups of disorders – those termed “abnormal variations of psychic life” and the other “effects of Illness.” All the latter have clear somatic etiologies (e.g., general paresis of the insane, cerebral damage), except schizophrenia and what Schneider called “cyclothymia,” equivalent to Kraepelin’s manic-depressive illness. Why were they classified differently from the other psychiatric syndromes? He explains:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;There is no question at this point whether some morbid condition does in fact underlie these psychopathological forms … Here we are firmly postulating that cyclothymia and schizophrenia are psychopathologic symptoms of some unknown illness. If “postulate” seems too strong, we can say “working hypothesis” instead [56] p. 5.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;In the absence of clear evidence, Schneider was willing to take a “promissory note” on the hypothesis that Kraepelin’s two major disorders of schizophrenia and manic-depressive illness were indeed the result of some as yet “unknown illness.” Perhaps Schneider was expressing overtly what many of the earlier brain talkers were feeling covertly – “there are real diseases down there – give us time, and we will find them.”&lt;/p&gt;
    &lt;head rend="h2"&gt;Brain talk and reductionism&lt;/head&gt;
    &lt;p&gt;Metaphorical brain talk is the soft underbelly of the reductionist agenda of modern science, which, since the dawn of the Enlightenment, has sought to explain the complex phenomena we confront in our biological and physical environment on the basis of simpler physical constituents [57]. This approach has been spectacularly successful in physics, chemistry, and molecular biology, as driven by highly quantitative, replicable science. Its application to the world of the mental has been less successful and more problematic. Metaphorical psychiatric brain talk adopted the language of reductionism without its empirical scientific underpinning.&lt;/p&gt;
    &lt;p&gt;To be clear, my criticism of metaphorical psychiatric brain talk is not a critique of the rigorous scientific reductive agenda in modern psychiatric research that seeks to understand the etiology of psychiatric illness. Indeed, I have spent most of my career in the study of psychiatric genetics, clearly, at least in part, a reductive research project. My concern is rather the degree to which the profession of psychiatry, over its long history, has impoverished its conceptual foundations by a strong brain-focused bias in how we talk, and, more importantly, think about mental disorders. We are at risk of underappreciating efforts to understand the first-person experiences of our patients. If our reductionist neuroscience efforts are to succeed, we will have to be able to link our scientific explanations with incisive understanding of the states of mental illness we treat. We could then provide our patients not with empty, metaphorical brain-talk, but a real explanation of the ways in which brain dysfunctions produce their experiences. This will, in turn, hopefully expand our ability to emphasize with their symptoms in the process of “explanation-aided understanding” [58].&lt;/p&gt;
    &lt;head rend="h2"&gt;So what?&lt;/head&gt;
    &lt;p&gt;We have a very imperfect sense of the brain-based disturbances that predispose our disorders. We should not be ashamed of this. We have been working hard for a very long time on a set of problems of extraordinary complexity. Talking about our profession and our disorders to ourselves, our colleagues and patients using metaphorical brain talk is scientifically immature and ultimately disrespectful to our patients. Unless we know otherwise, we should assume that our patients want us to “Tell it like it is, Doc,” even when that means we cannot tell pretty stories about serotonin imbalances. When we describe the suffering of our patients, we don’t have to “dress up” the descriptions of their mental anguish with problematic brain metaphors. We should tell them what we know, with all the uncertainty. We should take pride in being the only specialists in medicine that have chosen to treat the disorders of the mind, conditions that account for a large proportion of aggregate human suffering [59]. We need not try to hide the large amount we still do not know about the causes of mental illness behind metaphorical brain talk.&lt;/p&gt;
    &lt;head rend="h2"&gt;References&lt;/head&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Kendler KS, Tabb K, Wright J. The emergence of psychiatry: 1650–1850. Am J Psychiatry. 2022;179:329–35.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Cullen W. First lines of the practice of physic Edinburgh: C. Elliott; 1784.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Hartley D. Observations on man, his frame, his duty, and his expectations. London: T. Tegg and son; 1834.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Laycock T. On the reflex function of the brain. Br For Med Rev. 1845;19:298.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Monro H. Remarks on insanity: its nature and treatment. London: Churchill; 1851.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Dickson JT. The science and practice of medicine in relation to mind: the pathology of nerve centres and the jurisprudence of insanity being a course of lectures delivered in guy’s hospital. New York: D. Appleton and Company; 1874.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Ball B, Ritti A. Delire. In: Dechambre A, Lereboullet L. editors. Dictionnaire encyclopedique des sciences medicates. Paris: Masson; 1881. p. 315–408.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Pargeter W. Observations on maniacal disorders. London: J. Murray &amp;amp; J. Fletcher, Oxford; 1792.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Savage GH. Insanity and allied neuroses: practical and clinical. Philadelphia: Henry C. Lea’s Son &amp;amp; Company; 1884.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Clouston TS. Clinical lectures on mental diseases. 3rd ed. London: J. &amp;amp; A. Churchill; 1892.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Clark D. Mental diseases: a synopsis of twelve lectures delivered at the hospital for the insane, Toronto, to the graduationg medical classes. Toronto: William Briggs; 1895.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Maudsley H. The pathology of mind: a study of its distempers, deformities, and disorders. London: Macmillan and Company; 1895.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Kellogg THA. Text-book on mental diseases for the use of students and practitioners of medicine. New York, NY: William Wood &amp;amp; Company; 1897.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Shorter E. A history of psychiatry: from the era of the asylum to the age of prozac. New York: John Wiley &amp;amp; Sons, Inc; 1997.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Engstrom EJ. Clinical Psychiatry in Imperial Germany: a history of psychiatric practice. Gilman SL, Makari GJ, editors. Ithaca, NY: Cornell University Press; 2003.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Griesinger W. Die Pathologie und Therapie der psychischen Krankheiten: für Aerzte und Studirende. 1st ed. Stutrttgart, Germany: Verlag von Adolph Krabbe; 1845.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Griesinger W. Die Pathologie und Therapie der psychischen Krankheiten: für Aerzte und Studirende. 2nd ed. Stuttgart: Verlag von Adolph Krabbe; 1861.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Griesinger W. Mental pathology and therapeutics. London: The New Sydenham Society; 1867.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Binswanger O. Die lehraufgaben der psychiatrischen klinik: rede gehalten beim antritte der ordentlichen professur in der universitätsaula zu Jena am 20. Klinisches Jahrbuch: Vierter Band. 1892;4:45–61.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Engstrom E, Weber M. Introduction - the directions of psychiatric research. Hist Psychiatry. 2005;16:345–9.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Kraepelin E. The directions of psychiatric research. Hist Psychiatry. 2005;16:350–64.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Jellinger KA. In memoriam: Franz Seitelberger. Springer; 2008. pp. 1916–2007&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Seitelberger F. Theodor Meynert (1833–1892) pioneer and visionary of brain research. J Hist Neurosci. 1997;6:264–74.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Janzarik W. Research directions and doctrines in psychiatry: history, present, forensic significance. In: Baumann J, editor. Forensic medicine. Berlin: Springer Verlag; 1972. p. 588–662.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Hakosalo H. The brain under the knife: serial sectioning and the development of late nineteenth-century neuroanatomy. Stud Hist Philos Biol Biomed Sci. 2006;37:172–202.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Phelps S. Brain ways: Meynert, bachelard and the material imagination of the inner life. Med Hist. 2016;60:388–406.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Lamb SD. Pathologist of the mind: Adolf Meyer and the origins of American psychiatry. 1st ed. Baltimore, MD: Johns Hopkins University Press; 2014.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Meyer A. Misconceptions at the bottom of ‘‘Hopelessness of all psychology”. Psychol Bull. 1907;4:170–9.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Jaspers K. Allgemeine psychopathologie. 1sted. Berlin: Verlag Von Julius Springer; 1913.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Meehl PE. Schizotaxia, schizotypy, schizophrenia. Am Psychol. 1962;17:827–38.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Lenzenweger MF. Schizotaxia, schizotypy, and schizophrenia: Paul E. Meehl’s blueprint for the experimental psychopathology and genetics of schizophrenia. J Abnorm Psychol. 2006;115:195.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Siever LJ. Commentary on “Toward an integrated theory of schizotaxia, schizotypy, and schizophrenia”. J Personal Disord. 1990;4:116–9.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Andreasen NC. The broken brain: the biological revolution in psychiatry: New York: Harper &amp;amp; Row Publishers; 1985.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Dahlstrom A, Fuxe K, Olson L, Ungerstedt U. Ascending systems of catecholamine neurons from the lower brainstem. Acta Physiol Scand. 1962;62:485–6.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Dahlstrom A, Fuxe K. Evidence for the existence of monoamine-containing neurons in the central nervous system. I. Demonstration of monoamines in the cell bodies of brain stem neurons. Acta Physiol Scand Suppl. 1964;232:1.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Fuxe K, Hokfelt T, Nilsson O, Reinius S. A fluorescence and electron microscopic study on central monoamine nerve cells. Anat Rec. 1966;155:33–40.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Matthysse S. Antipsychotic drug actions - clue to neuropathology of schizophrenia. Fed Proc. 1973;32:200–5.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Schildkraut JJ. The catecholamine hypothesis of affective disorders: a review of supporting evidence. Am J Psychiatry. 1965;122:509–22.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Coppen A. The biochemistry of affective disorders. Br J Psychiatry. 1967;113:1237–64.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;van Rossum JM. The significance of dopamine-receptor blockade for the action of neuroleptic drugs. Amsterdam: Neuropsychopharmacology excerpta Medica Foundation; 1967. p. 321–9.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Cooper JR, Bloom FE, Roth RH. The biochemical basis of neuropharmacology. Oxford UK: Oxfor University Press; 1974.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Kendler KS, Schaffner KF. The dopamine hypothesis of schizophrenia: An historical and philosophical analysis. Philos Psychiatry Psychol. 2011;18:41–63.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Lacasse JR, Leo J. Serotonin and depression: a disconnect between the advertisements and the scientific literature. PLoS Med. 2005;2:e392.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Pies RW, McIntyre RS. Serotonin: how psychiatry got over its “High school crush”. Psychiatric Times. 2015;32:28–35.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Pies RW. Debunking the two chemical imbalance myths (Again!): and moving toward a bio-psycho-socio-cultural model of major depression. Psychiatric Times. 2019;36:9–11.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Moncrieff J, Cooper RE, Stockmann T, Amendola S, Hengartner MP, Horowitz MA. The serotonin theory of depression: a systematic umbrella review of the evidence. Mol Psychiatry. 2023;28:3243–56.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Ang B, Horowitz M, Moncrieff J. Is the chemical imbalance an ‘urban legend’? an exploration of the status of the serotonin theory of depression in the scientific literature. SSM-Mental Health. 2022;2:100098.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Trubetskoy V, Pardiñas AF, Qi T, Panagiotaropoulou G, Awasthi S, Bigdeli TB, et al. Mapping genomic loci implicates genes and synaptic biology in schizophrenia. Nature. 2022;604:502–8.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Mullins N, Forstner AJ, O’Connell KS, Coombes B, Coleman JR, Qiao Z, et al. Genome-wide association study of more than 40,000 bipolar disorder cases provides new insights into the underlying biology. Nat Genet. 2021;53:817–29.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Adams MJ, Streit F, Meng X, Awasthi S, Adey BN, Choi KW, et al. Trans-ancestry genome-wide study of depression identifies 697 associations implicating cell types and pharmacotherapies. Cell. 2025;188:640–52.e9.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Jauhar S, Arnone D, Baldwin DS, Bloomfield M, Browning M, Cleare AJ, et al. A leaky umbrella has little value: evidence clearly indicates the serotonin system is implicated in depression. Mol Psychiatry. 2023;28:3149–52.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Bremshey S, Groß J, Renken K, Masseck OA. The role of serotonin in depression—a historical roundup and future directions. J Neurochem. 2024;168:1751–79.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Kendler KS. Are psychiatric disorders brain diseases?—a new look at an old question. JAMA Psychiatry. 2024;81:325–6.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Rosenberg CE. Contested boundaries: psychiatry, disease, and diagnosis. Perspect Biol Med. 2015;58:120–37.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Rosenberg CE. The therapeutic revolution: medicine, meaning, and social change in nineteenth-century America. Perspect Biol Med. 1977;20:485–506.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Schneider K. Clinical psychopathology. New York: Grune &amp;amp; Stratton; 1959.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Frank A, Gleiser M, Thompson E. The blind spot: why science cannot ignore human experience: MIT Press; 2024.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Kendler KS, Campbell J. Expanding the domain of the understandable in psychiatric illness: an updating of the Jasperian framework of explanation and understanding. Psychol Med. 2014;44:1–7.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Vigo D, Thornicroft G, Atun R. Estimating the true global burden of mental illness. Lancet Psychiatry. 2016;3:171–8.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Acknowledgements&lt;/head&gt;
    &lt;p&gt;Lauren Ross PhD and James Woodward PhD provided many helpful suggestions on various drafts of this paper. Eric Engstrom PhD and Stephan Heckers MD provided helpful advice on early manuscript drafts.&lt;/p&gt;
    &lt;head rend="h2"&gt;Author information&lt;/head&gt;
    &lt;head rend="h3"&gt;Authors and Affiliations&lt;/head&gt;
    &lt;head rend="h3"&gt;Contributions&lt;/head&gt;
    &lt;p&gt;KSK did the literature reviews, developed the hypotheses and wrote the MS.&lt;/p&gt;
    &lt;head rend="h3"&gt;Corresponding author&lt;/head&gt;
    &lt;head rend="h2"&gt;Ethics declarations&lt;/head&gt;
    &lt;head rend="h3"&gt;Competing interests&lt;/head&gt;
    &lt;p&gt;The author declares no competing interests.&lt;/p&gt;
    &lt;head rend="h2"&gt;Additional information&lt;/head&gt;
    &lt;p&gt;Publisher’s note Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.&lt;/p&gt;
    &lt;head rend="h2"&gt;Rights and permissions&lt;/head&gt;
    &lt;p&gt;Open Access This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article’s Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article’s Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit http://creativecommons.org/licenses/by/4.0/.&lt;/p&gt;
    &lt;head rend="h2"&gt;About this article&lt;/head&gt;
    &lt;head rend="h3"&gt;Cite this article&lt;/head&gt;
    &lt;p&gt;Kendler, K.S. A history of metaphorical brain talk in psychiatry. Mol Psychiatry 30, 3774–3780 (2025). https://doi.org/10.1038/s41380-025-03053-6&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;Received:&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Revised:&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Accepted:&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Published:&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Issue Date:&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;DOI: https://doi.org/10.1038/s41380-025-03053-6&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.nature.com/articles/s41380-025-03053-6"/></entry><entry><id>https://news.ycombinator.com/item?id=45153636</id><title>C++26: Erroneous Behaviour</title><updated>2025-09-07T00:50:41.879336+00:00</updated><content>&lt;doc fingerprint="8a739e9222032fdc"&gt;
  &lt;main&gt;
    &lt;p&gt;If you pick a random talk at a C++ conference these days, there is a fair chance that the speaker will mention safety at least a couple of times. It’s probably fine like that. The committee and the community must think about improving both the safety situation and the reputation of C++.&lt;/p&gt;
    &lt;p&gt;If you follow what’s going on in this space, you are probably aware that people have different perspectives on safety. I think almost everybody finds it important, but they would solve the problem in their own way.&lt;/p&gt;
    &lt;p&gt;A big source of issues is certain manifestations of undefined behaviour. It affects both the safety and the stability of software. I remember that a few years ago when I was working on some services which had to support a 10x growth, one of the important points was to eliminate undefined behaviour as much as possible. One main point for us was to remove uninitialized variables which often lead to crashing services.&lt;/p&gt;
    &lt;p&gt;Thanks to P2795R5 by Thomas Köppe, uninitialized reads won’t be undefined behaviour anymore - starting from C++26. Instead, they will get a new behaviour called “erroneous behaviour”.&lt;/p&gt;
    &lt;p&gt;The great advantage of erroneous behaviour is that it will work just by recompiling existing code. It will diagnose where you forgot to initialize variables. You don’t have to systematically go through your code and let’s say declare everything as &lt;code&gt;auto&lt;/code&gt; to make sure that every variable has an initialized value. Which you probably wouldn’t do anyway.&lt;/p&gt;
    &lt;p&gt;But what is this new behaviour that on C++ Reference is even listed on the page of undefined behaviour? It’s well-defined, yet incorrect behaviour that compilers are recommended to diagnose. Is recommended enough?! Well, with the growing focus on safety, you can rest assured that an implementation that wouldn’t diagnose erroneous behaviour would be soon out of the game.&lt;/p&gt;
    &lt;p&gt;Some compilers can already identify uninitialized reads - what nowadays falls under undefined behaviour. For example, clang and gcc with &lt;code&gt;-ftrivial-auto-var-init=zero&lt;/code&gt; have already offered default initialization of variables with automatic storage duration. This means that the technique to identify these variables is already there. The only thing that makes this approach not practical is that you will not know which variables you failed to initialize.&lt;/p&gt;
    &lt;p&gt;Instead of default initialization, with erroneous behaviour, an uninitialized object will be initialized to an implementation-specific value. Reading such a value is a conceptual error that is recommended and encouraged to be diagnosed by the compiler. That might happen through warnings, run-time errors, etc.&lt;/p&gt;
    &lt;code&gt;
      &lt;table&gt;
        &lt;tr&gt;
          &lt;td&gt;
            &lt;quote&gt;1 2 3 4 &lt;/quote&gt;
          &lt;/td&gt;
          &lt;td&gt;
            &lt;quote&gt;void foo() { int d; // d has an erroneous value bar(d); // that's erroneous behaviour! } &lt;/quote&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
      &lt;/table&gt;
    &lt;/code&gt;
    &lt;p&gt;So looking at the above example, ideally &lt;code&gt;int d;&lt;/code&gt; should be already diagnosed at compile-time as a warning. If it’s ignored, at some point, &lt;code&gt;bar(d);&lt;/code&gt; will have an effect during program execution, but it should be well-defined, unlike undefined behaviour where anything can happen.&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;It’s worth noting that undefined behaviour and having erroneous values is not possible in constant expressions. In other words,&lt;/p&gt;&lt;code&gt;constexpr&lt;/code&gt;protects from it.&lt;/quote&gt;
    &lt;p&gt;Initializing an object to anything has a cost. What if you really want to avoid it and initialize the object later? Will you be able to still do it without getting the diagnostics? Sure! You just have to be deliberate about that. You cannot just leave values uninitialized by accident, you must mark them with C++26’s new attribute, &lt;code&gt;[[indeterminiate]]&lt;/code&gt;.&lt;/p&gt;
    &lt;code&gt;
      &lt;table&gt;
        &lt;tr&gt;
          &lt;td&gt;
            &lt;quote&gt;1 2 3 4 &lt;/quote&gt;
          &lt;/td&gt;
          &lt;td&gt;
            &lt;quote&gt;void foo() { int d [[indeterminate]]; // d has an indeterminate value bar(d); // that's undefined behaviour! } &lt;/quote&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
      &lt;/table&gt;
    &lt;/code&gt;
    &lt;p&gt;We must notice in the example, that &lt;code&gt;d&lt;/code&gt; doesn’t have an erroneous value anymore. Now its value is simply indeterminate. On the other hand, if we later use that variable still without initialization, it’s undefined behaviour!&lt;/p&gt;
    &lt;p&gt;Above, we’ve only talked about variables with automatic storage duration. That’s not the only way to have uninitialized variables. Moreover, probably it’s not even the main way, think about dynamic storage duration, think about pointers! Also, if any member is left uninitialized, the parent object’s value will be considered either indeterminate or erroneous.&lt;/p&gt;
    &lt;code&gt;
      &lt;table&gt;
        &lt;tr&gt;
          &lt;td&gt;
            &lt;quote&gt;1 2 3 4 5 6 7 8 9 10 11 12 &lt;/quote&gt;
          &lt;/td&gt;
          &lt;td&gt;
            &lt;quote&gt;struct S { S() {} int num; std::string text; }; int main() { [[indeterminate]] S s1; // indeterminate value std::cout &amp;lt;&amp;lt; s1.num &amp;lt;&amp;lt; '\n' // this is UB as s1.num is indeterminate S s2; std::cout &amp;lt;&amp;lt; s2.num &amp;lt;&amp;lt; '\n' // this is still UB, s2.num is an erroneous value } &lt;/quote&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
      &lt;/table&gt;
    &lt;/code&gt;
    &lt;p&gt;Not only variables variables but function parameters can also be marked &lt;code&gt;[[indeterminate]]&lt;/code&gt;.&lt;/p&gt;
    &lt;code&gt;
      &lt;table&gt;
        &lt;tr&gt;
          &lt;td&gt;
            &lt;quote&gt;1 2 3 4 5 6 7 8 9 10 11 &lt;/quote&gt;
          &lt;/td&gt;
          &lt;td&gt;
            &lt;quote&gt;struct S { S() {} int num; std::string text; }; void foo(S s1 [[indeterminate]], S s2) { bar(s1.num); // undefined behavior bar(s2.num); // erroneous behavior } &lt;/quote&gt;
          &lt;/td&gt;
        &lt;/tr&gt;
      &lt;/table&gt;
    &lt;/code&gt;
    &lt;p&gt;At the point of writing (January 2025), no compiler provides support for erroneous behaviour.&lt;/p&gt;
    &lt;head rend="h2"&gt;Conclusion&lt;/head&gt;
    &lt;p&gt;C++26 introduces erroneous behaviour in order to give well-defined, but incorrect behaviour for reading uninitialized values. Soon, compilers will be recommended to diagnose every occurrence of reads of uninitialized variables and function parameters.&lt;/p&gt;
    &lt;p&gt;Also, if something is not initialized at a given moment on purpose, you can mark it with the &lt;code&gt;[[indeterminate]]&lt;/code&gt; attribute following the don’t pay for what you don’t need principle.&lt;/p&gt;
    &lt;p&gt;This new behaviour is a nice step forward in terms of C++’s safety.&lt;/p&gt;
    &lt;head rend="h2"&gt;Connect deeper&lt;/head&gt;
    &lt;p&gt;If you liked this article, please&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;hit on the like button,&lt;/item&gt;
      &lt;item&gt;subscribe to my newsletter&lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.sandordargo.com/blog/2025/02/05/cpp26-erroneous-behaviour"/></entry><entry><id>https://news.ycombinator.com/item?id=45153863</id><title>Show HN: Send kind and aspirational words to a stranger who needs it</title><updated>2025-09-07T00:50:41.779718+00:00</updated><content>&lt;doc fingerprint="e35f8c8a3edfb7ec"&gt;
  &lt;main&gt;&lt;p&gt;Please review our Kindness Guidelines for more information.&lt;/p&gt;&lt;p&gt;Send kind and aspirational words to a stranger who needs it&lt;/p&gt;&lt;p&gt;Write your own heartwarming message, or let AI craft beautiful, culturally-aware messages in 14+ languages for someone going through tough times.&lt;/p&gt;&lt;p&gt;Our AI ensures your message is positive and safe, protecting both senders and receivers from harmful content.&lt;/p&gt;&lt;p&gt;A random person who signed up to receive kind words gets your message delivered to their inbox.&lt;/p&gt;&lt;p&gt;Your email will be stored and used as future random receiver, don't worry we don't spam your inbox. Max 1 email per day and you can unsubscribe.&lt;/p&gt;&lt;p&gt;Reply anonymously to messages you receive and rate them to help improve our community. Both features maintain complete privacy.&lt;/p&gt;&lt;p&gt;Join KindnessSender Discord to provide feedback, report issues, or get help from our community. We're here to support you!&lt;/p&gt;Join Discord 💬&lt;p&gt;You can contribute to other causes by donating to the creator, part of your donation will be used for planting new trees.&lt;/p&gt;Plant Trees 🌍&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://kindnesssender.com/"/></entry></feed>