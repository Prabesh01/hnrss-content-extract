<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><id>hnrss.org/frontpage</id><title>Hacker News: Front Page</title><updated>2025-10-16T21:31:54.776847+00:00</updated><link href="https://news.ycombinator.com/" rel="alternate"/><link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml" rel="self"/><generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator><subtitle>Hacker News RSS</subtitle><entry><id>https://news.ycombinator.com/item?id=45604308</id><title>Jiga (YC W21) Is Hiring Full Stacks</title><updated>2025-10-16T21:32:00.230322+00:00</updated><content>&lt;doc fingerprint="335ec57ff13aea3c"&gt;
  &lt;main&gt;
    &lt;p&gt;Jiga transforms the traditional way manufacturers do business.&lt;/p&gt;
    &lt;p&gt;We're building a digital platform that streamlines the complex, inefficient process of procuring manufactured parts directly from suppliers, making it automated, collaborative, and data-driven.&lt;/p&gt;
    &lt;p&gt;Now that I’ve got your attention with some AI cringe, read the job posting carefully before applying.&lt;/p&gt;
    &lt;p&gt;About Jiga:&lt;/p&gt;
    &lt;p&gt;We are on a mission to help engineers build physical products faster. Imagine the &lt;code&gt;npm install&lt;/code&gt; for mechanical engineers.&lt;/p&gt;
    &lt;p&gt;How we work:&lt;/p&gt;
    &lt;p&gt;Remote: We are a fully remote company with team members from over 5 countries.&lt;/p&gt;
    &lt;p&gt;Culture: We never count hours and measure team members by performance and communication only. We hate micro-management and we 100% trust team members to perform tasks and to be honest with each other.&lt;/p&gt;
    &lt;p&gt;We play online games weekly together, encourage people to ask the hard questions, and we fly everyone once per year for our annual offsite in a beautiful place in the nature.&lt;/p&gt;
    &lt;p&gt;Meetings: We have a no-BS-meeting policy. We will have one weekly with the whole company and another one with the dev team. That's it.&lt;/p&gt;
    &lt;p&gt;Engineering Values:&lt;/p&gt;
    &lt;p&gt;Funding: Fully funded with significant, growing revenue. We are transparent about our runway.&lt;/p&gt;
    &lt;p&gt;You should apply if&lt;/p&gt;
    &lt;p&gt;Requirements:&lt;/p&gt;
    &lt;p&gt;Benefits&lt;/p&gt;
    &lt;p&gt;No, we don’t have Friday happy hours or a fridge packed with 10 different flavors of ice cream in our office. In fact, we don’t have an office.&lt;/p&gt;
    &lt;p&gt;We do offer:&lt;/p&gt;
    &lt;p&gt;How to apply&lt;/p&gt;
    &lt;p&gt;Please send a short blurb about yourself and your favorite ice cream flavor (mine is cookies)&lt;/p&gt;
    &lt;p&gt;.&lt;/p&gt;
    &lt;p&gt;fulltimeUS / Remote (US)Full stack$13+ years&lt;/p&gt;
    &lt;p&gt;fulltimeRemoteFull stack3+ years&lt;/p&gt;
    &lt;p&gt;fulltimeIL / Remote (IL)3+ years&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.workatastartup.com/jobs/44310"/><published>2025-10-16T12:00:45+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45604451</id><title>A stateful browser agent using self-healing DOM maps</title><updated>2025-10-16T21:32:00.003705+00:00</updated><link href="https://100x.bot/a/a-stateful-browser-agent-using-self-healing-dom-maps"/><published>2025-10-16T12:21:36+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45604673</id><title>Hyperflask – Full stack Flask and Htmx framework</title><updated>2025-10-16T21:31:59.768830+00:00</updated><content>&lt;doc fingerprint="fa8a766ea56e588d"&gt;
  &lt;main&gt;
    &lt;head rend="h2"&gt;Backend-driven interactive apps&lt;/head&gt;
    &lt;p&gt;Hyperflask is built on top of Flask, a popular Python web framework. It is easy to use and master. Backend-driven apps ensure straighforward state management and limit a lot of footguns from frontend-heavy apps. Combined with HTMX and a component system, creating interactive apps is easier than ever.&lt;/p&gt;
    &lt;head rend="h2"&gt;A powerful component system&lt;/head&gt;
    &lt;p&gt;Hyperflask introduces component-driven architecture to Flask apps. Seamlessly create frontend (web components, react, etc...) and backend components and use them in your jinja templates. Use HTMX to create server-backed interactive components.&lt;/p&gt;
    &lt;head rend="h2"&gt;File-based routing&lt;/head&gt;
    &lt;p&gt;Hyperflask extends Flask with many powerful features, notably file-based routing using a new file format that combines python code and a jinja template (inspired by Astro pages).&lt;/p&gt;
    &lt;head rend="h2"&gt;Build beautiful UIs&lt;/head&gt;
    &lt;p&gt;Hyperflask includes beautiful components provided by daisyUI and icons by Bootstrap Icons. Use Tailwind to customize styling. Create beautiful UIs in minutes without any CSS.&lt;/p&gt;
    &lt;head rend="h2"&gt;Batteries included&lt;/head&gt;
    &lt;p&gt; Send emails using MJML, run background jobs, send push events using SSE, translations, authentication, content streaming, optimized images, ... &lt;lb/&gt;Everything you need to build a product ! &lt;/p&gt;
    &lt;head rend="h2"&gt;Content driven when needed&lt;/head&gt;
    &lt;p&gt;Hyperflask can be used to generate static web sites. It can also run in an hybrid mode where the server is accessed only for dynamic requests.&lt;/p&gt;
    &lt;head rend="h2"&gt;No messing around with your environment&lt;/head&gt;
    &lt;p&gt;Dev and prod environment are standardized on containers. With a tight integration with VS Code, everything is easy to setup and run. Easily deploy to VPS and various cloud services.&lt;/p&gt;
    &lt;head rend="h2"&gt;Ensuring a thriving ecosystem&lt;/head&gt;
    &lt;p&gt;The Hyperflask framework itself is a small code base. It combines many Flask extensions in a seamless manner. All extensions and related projects are developed independently of the framework under the Hyperflask organization. Feel free to pick and choose the part you prefer from Hyperflask and use them in your own projects.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://hyperflask.dev/"/><published>2025-10-16T12:46:28+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45604700</id><title>Show HN: Inkeep (YC W23) – Agent Builder to create agents in code or visually</title><updated>2025-10-16T21:31:59.270900+00:00</updated><content>&lt;doc fingerprint="85708f8bb901b03a"&gt;
  &lt;main&gt;
    &lt;p&gt;With Inkeep, you can build and ship AI Agents with a No-Code Visual Builder or TypeScript SDK. Agents can be edited in code or no-code with full 2-way sync, so technical and non-technical teams can create and manage their Agents in a single platform. To get started, see the docs.&lt;/p&gt;
    &lt;p&gt;A no-code drag-and-drop canvas designed to allow any team to create and manage teams of Agents visually.&lt;/p&gt;
    &lt;p&gt;A code-first approach for building and managing multi-agent systems. Engineering teams to build with the tools and developer experience they expect.&lt;/p&gt;
    &lt;code&gt;import { agent, subAgent } from "@inkeep/agents-sdk";

const helloAgent = subAgent({
  id: "hello-agent",
  name: "Hello Agent",
  description: "Says hello",
  prompt: 'Only reply with the word "hello", but you may do it in different variations like h3110, h3110w0rld, h3110w0rld! etc...',
});

export const basicAgent = agent({
  id: "basic-agent",
  name: "Basic Agent",
  description: "A basic agent",
  defaultSubAgent: helloAgent,
  subAgents: () =&amp;gt; [helloAgent],
});&lt;/code&gt;
    &lt;p&gt;The Visual Builder and TypeScript SDK are fully interoperable: your technical and non-technical teams can edit and manage Agents in either format and switch or collaborate with others at any time.&lt;/p&gt;
    &lt;p&gt;Inkeep Agents can operate as real-time AI Chat Assistants, for example:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;a customer experience agent for customer support, technical docs, or in-app product copilot&lt;/item&gt;
      &lt;item&gt;an internal copilot to assist your support, sales, marketing, ops, and other teams&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Agents can also be used for AI workflow automation like:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Creating and updating knowledge bases, documentation, and blogs&lt;/item&gt;
      &lt;item&gt;Updating CRMs, triaging helpdesk tickets, and streamlining repetitive tasks&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Inkeep Open Source includes:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;A Visual Builder &amp;amp; TypeScript SDK with 2-way sync&lt;/item&gt;
      &lt;item&gt;Multi-agent architecture to support teams of agents&lt;/item&gt;
      &lt;item&gt;MCP Tools with credentials management&lt;/item&gt;
      &lt;item&gt;A UI component library for dynamic chat experiences&lt;/item&gt;
      &lt;item&gt;Triggering Agents via MCP, A2A, &amp;amp; Vercel SDK APIs&lt;/item&gt;
      &lt;item&gt;Observability via a Traces UI &amp;amp; OpenTelemetry&lt;/item&gt;
      &lt;item&gt;Easy deployment to Vercel and using Docker&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;For a full overview, see the Concepts guide.&lt;/p&gt;
    &lt;p&gt;The Inkeep Agent Platform is composed of several key services and libraries that work together:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;agents-manage-api: An API that handles configuration of Agents, Sub Agents, MCP Servers, Credentials, and Projects with a REST API.&lt;/item&gt;
      &lt;item&gt;agents-manage-ui: Visual Builder web interface for creating and managing Agents. Writes to the &lt;code&gt;agents-manage-api&lt;/code&gt;.&lt;/item&gt;
      &lt;item&gt;agents-sdk: TypeScript SDK (&lt;code&gt;@inkeep/agents-sdk&lt;/code&gt;) for declaratively defining Agents and custom tools in code. Writes to&lt;code&gt;agents-manage-api&lt;/code&gt;.&lt;/item&gt;
      &lt;item&gt;agents-cli: Includes various handy utilities, including &lt;code&gt;inkeep push&lt;/code&gt;and&lt;code&gt;inkeep pull&lt;/code&gt;which sync your TypeScript SDK code with the Visual Builder.&lt;/item&gt;
      &lt;item&gt;agents-run-api: The Runtime API that exposes Agents as APIs and executes Agent conversations. Keeps conversation state and emits OTEL traces.&lt;/item&gt;
      &lt;item&gt;agents-ui: A UI component library of chat interfaces for embedding rich, dynamic Agent conversational experiences in web apps.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Underneath the hood, the framework uses the Vercel AI SDK for interfacing with LLM providers. The &lt;code&gt;agents-sdk&lt;/code&gt;/ &lt;code&gt;agents-manage-api&lt;/code&gt; share many concepts with Vercel's &lt;code&gt;ai&lt;/code&gt; SDK, and &lt;code&gt;agents-run-api&lt;/code&gt; outputs a data stream compatible with Vercel's &lt;code&gt;useChat&lt;/code&gt; and AI Elements primitives for custom UIs.&lt;/p&gt;
    &lt;p&gt;The Inkeep Agent Framework is licensed under the Elastic License 2.0 (ELv2) subject to Inkeep's Supplemental Terms (SUPPLEMENTAL_TERMS.md). This is a fair-code, source-available license that allows broad usage while protecting against certain competitive uses.&lt;/p&gt;
    &lt;p&gt;Inkeep is designed to be extensible and open: you can use the LLM provider of your choice, use Agents via standard protocols, and easily deploy and self-host Agents in your own infra.&lt;/p&gt;
    &lt;p&gt;If you'd like to contribute, follow our contribution guide.&lt;/p&gt;
    &lt;p&gt;Follow us to stay up to date, get help, and share feedback.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/inkeep/agents"/><published>2025-10-16T12:50:08+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45604779</id><title>Electricity can heal wounds three times as fast (2023)</title><updated>2025-10-16T21:31:58.130062+00:00</updated><content>&lt;doc fingerprint="fedd408029bd4e42"&gt;
  &lt;main&gt;
    &lt;p&gt;Chronic wounds are a major health problem for diabetic patients and the elderly – in extreme cases they can even lead to amputation. Using electric stimulation, researchers in a project at Chalmers University of Technology, Sweden, and the University of Freiburg, Germany, have developed a method that speeds up the healing process, making wounds heal three times faster.&lt;/p&gt;
    &lt;p&gt;There is an old Swedish saying that one should never neglect a small wound or a friend in need. For most people, a small wound does not lead to any serious complications, but many common diagnoses make wound healing far more difficult. People with diabetes, spinal injuries or poor blood circulation have impaired wound healing ability. This means a greater risk of infection and chronic wounds – which in the long run can lead to such serious consequences as amputation.&lt;/p&gt;
    &lt;p&gt;Now a group of researchers at Chalmers and the University of Freiburg have developed a method using electric stimulation to speed up the healing process.&lt;/p&gt;
    &lt;p&gt;“Chronic wounds are a huge societal problem that we don’t hear a lot about. Our discovery of a method that may heal wounds up to three times faster can be a game changer for diabetic and elderly people, among others, who often suffer greatly from wounds that won’t heal,” says Maria Asplund, Professor of Bioelectronics at Chalmers University of Technology and head of research on the project.&lt;/p&gt;
    &lt;head rend="h3"&gt;&lt;lb/&gt;Electric guidance of cells for faster healing&lt;/head&gt;
    &lt;p&gt;The researchers worked from an old hypothesis that electric stimulation of damaged skin can be used to heal wounds. The idea is that skin cells are electrotactic, which means that they directionally ‘migrate’ in electric fields. This means that if an electric field is placed in a petri dish with skin cells, the cells stop moving randomly and start moving in the same direction. The researchers investigated how this principle can be used to electrically guide the cells in order to make wounds heal faster. Using a tiny engineered chip, the researchers were able to compare wound healing in artificial skin, stimulating one wound with electricity and letting one heal without electricity. The differences were striking.&lt;/p&gt;
    &lt;p&gt;“We were able to show that the old hypothesis about electric stimulation can be used to make wounds heal significantly faster. In order to study exactly how this works for wounds, we developed a kind of biochip on which we cultured skin cells, which we then made tiny wounds in. Then we stimulated one wound with an electric field, which clearly led to it healing three times as fast as the wound that healed without electric stimulation,” Asplund says.&lt;/p&gt;
    &lt;head rend="h3"&gt;Hope for diabetes patients&lt;/head&gt;
    &lt;p&gt;In the study, the researchers also focused on wound healing in connection with diabetes, a growing health problem worldwide. One in 11 adults today has some form of diabetes according to the World Health Organization (WHO) and the International Diabetes Federation.&lt;/p&gt;
    &lt;p&gt;“We’ve looked at diabetes models of wounds and investigated whether our method could be effective even in those cases. We saw that when we mimic diabetes in the cells, the wounds on the chip heal very slowly. However, with electric stimulation we can increase the speed of healing so that the diabetes-affected cells almost correspond to healthy skin cells,” Asplund says.&lt;/p&gt;
    &lt;head rend="h3"&gt;Individualised treatment the next step&lt;/head&gt;
    &lt;p&gt;The Chalmers researchers recently received a large grant which will allow them to continue their research in the field, and in the long run enable the development of wound healing products for consumers on the market. Similar products have come out before, but more basic research is required to develop effective products that generate enough electric field strength and stimulate in the right way for each individual. This is where Asplund and her colleagues come into the picture:&lt;/p&gt;
    &lt;p&gt;“We are now looking at how different skin cells interact during stimulation, to take a step closer to a realistic wound. We want to develop a concept to be able to ‘scan’ wounds and adapt the stimulation based on the individual wound. We are convinced that this is the key to effectively helping individuals with slow-healing wounds in the future,” Asplund says.&lt;/p&gt;
    &lt;head rend="h3"&gt;More about the study:&lt;/head&gt;
    &lt;p&gt;• “Bioelectronic microfluidic wound healing: a platform for investigating direct current stimulation of injured cell collectives” was published in the journal Lab on a Chip. The article was written by Sebastian Shaner, Anna Savelyeva, Anja Kvartuh, Nicole Jedrusik, Lukas Matter, José Leal and Maria Asplund. The researchers work at the University of Freiburg in Germany and Chalmers University of Technology. &lt;lb/&gt;• In their study, the researchers showed that wound healing on artificial skin stimulated with electric current was three times faster than on the skin that healed naturally. The electric field was low, about 200 mV/mm, and did not have a negative impact on the cells. &lt;lb/&gt;• The method the researchers developed is based on a microfluidic biochip on which artificial skin can be grown, stimulated with an electric current and studied in an effective and controlled manner. The concept allows researchers to conduct multiple experiments in parallel on the same chip. &lt;lb/&gt;• The research project began in 2018 and is funded by the European Research Council (ERC). The project was recently granted new funding so the research can get to market and benefit patients.&lt;/p&gt;
    &lt;head rend="h3"&gt;For more information, please contact:&lt;/head&gt;
    &lt;p&gt;Maria Asplund, Professor of Bioelectronics, Department of Microtechnology and Nanoscience at Chalmers University of Technology, Sweden&lt;lb/&gt;maria.asplund@chalmers.se, +46 31 772 41 14&lt;/p&gt;
    &lt;p&gt;Sebastian Shaner, PhD Candidate, Department of Microsystems Engineering at the University of Freiburg, Germany&lt;lb/&gt;sebastian.shaner@blbt.uni-freiburg.de&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Professor, Electronics Material and Systems, Microtechnology and Nanoscience&lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.chalmers.se/en/current/news/mc2-how-electricity-can-heal-wounds-three-times-as-fast/"/><published>2025-10-16T12:59:08+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45605153</id><title>Lace: A New Kind of Cellular Automata Where Links Matter</title><updated>2025-10-16T21:31:57.750821+00:00</updated><content>&lt;doc fingerprint="ea85981ebb574771"&gt;
  &lt;main&gt;
    &lt;p&gt;This article is about a new kind of simple computational rule (“LACE rules” running on LACE, the Link Automata Computing Engine platform) which, when applied locally on a grid of cells, demonstrates fascinating emergent “artificial life” behavior. &lt;lb/&gt;For readers familiar with the Game of Life (GOL), this is a next-level class of cellular automata that utilizes neighborhood topology — the state of the grid is a function of both cell states and their connectivity (links).&lt;lb/&gt;To quickly get a sense of what LACE does – scroll down in this post to the video Gallery section and take a look at (a) the Game of Life, with links, and then as a comparison, check out (b) the “Amazing Dragons” LACE rule, and the many other “Realm of LACE” (ROL) rules that fully utilize topology.&lt;/p&gt;
    &lt;head rend="h2"&gt;Preamble&lt;/head&gt;
    &lt;p&gt;I have been thinking about cellular automata ever since I read a fascinating and important book, Three Scientists and Their Gods, during the summer of my sophomore year of college. This book changed my life. &lt;lb/&gt;After reading this book ferociously on the drive home from Oberlin college to Boston, for summer vacation, I became obsessed with the idea of digital physics – and particularly with the work of Ed Fredkin, (and later Stephen Wolfram as well). &lt;/p&gt;
    &lt;p&gt;And so I decided I had to find a way to get into Ed Fredkin’s lab at MIT. This became my mission in life&lt;/p&gt;
    &lt;p&gt;Finally, after many attempts, I did managed to finagle a summer internship in his lab at MIT, thanks to the kindness of Professors Norman Margolus and Tommaso Toffolli, two of the great minds in the field. They had authored an MIT Press book that I had found and read countless times, Cellular Automata Machines, which at the time was the bible in the field.&lt;/p&gt;
    &lt;p&gt;In their lab they had built a specialized supercomputer, CAM-6, for digital physics simulations. I spent every minute of that summer in their lab on CAM-6, exploring the computational universe. &lt;lb/&gt;For years after that internship, I filled dozens of journals with detailed ideas and theories about digital physics. I wrote code, I tested ideas, I learned and explored. But nothing really came close to the richness and complexity of the vision I had experienced, or our actual natural world. &lt;lb/&gt;These digital models were lacking something, but I wasn’t sure what. &lt;lb/&gt;Then, years later, it became more clear. &lt;lb/&gt;The topology of spacetime is not merely a fixed set of locations and states, it’s a graph. The links between things are important. (Note: As Stephen Wolfram would later point out to me, this idea harkens back to the dialectical debate between the views of Newton and Leibniz).&lt;/p&gt;
    &lt;p&gt;I needed a new kind of model, one where the shape of space could evolve, one where the shape of space could affect matter, and where matter could affect the shape of space, because after all, according to Einstein, they are really the same thing.&lt;/p&gt;
    &lt;p&gt;And from this insight I then undertook decades of exploration into the idea of a new kind of cellular automata — one in which the cells had links to each other, which could also figure into their states. Both the cell states and link states could interact, forming complex topologies and geometries. &lt;lb/&gt;Decades went by, along with many experiments that did not bear fruit. &lt;lb/&gt;But last year, I actually built something that demonstrates this new class of CA rather nicely. &lt;lb/&gt;Now I’m finally getting around to posting it…&lt;/p&gt;
    &lt;head rend="h2"&gt;Introducing LACE: The Link Automata Computing Engine&lt;/head&gt;
    &lt;p&gt;LACE is a new experimental platform written in python, for exploring a class of cellular automata in which both the states of cells and their connections (links) to each other are subject to the rules.&lt;lb/&gt;In LACE, the state of a cell is a function of both its neighbors AND the links it has to them, and link states in turn are a function of the cells they connect.&lt;lb/&gt;LACE rules can use topological properties of cells and neighborhoods, such as number of connections, neighbor degree, and other metrics.&lt;/p&gt;
    &lt;p&gt;This enables rules in which virtual neighborhood topology (the links) affects neighborhood states — rules in which topology can both evolve and shape the behavior of the system, and in which the behavior of the system can shape topology.&lt;lb/&gt;The added topological dimension enables rules that can have more interesting behavior than traditional “cells-only” CA rules, opening up a fascinating new computational vista (within Wolfram’s, Ruliad) of new kinds of rules that generate new species of stable patterns – oscillators – gliders, puffers, and more.&lt;/p&gt;
    &lt;p&gt;LACE rules range from link-aware variants of Conway’s famous Game of Life, but where edges have varying degrees of influence, to completely new kinds of “Realm of LACE” rules that use topological metrics in their computations. In theory, these rules could even be utilized to simulate neural networks.&lt;/p&gt;
    &lt;p&gt;What is fascinating about these new link-aware “Realm of LACE rules” is that they exhibit amazing new forms of stability and periodic structure. They produce new kinds of periodic gliders, oscillators, puffers, and other kinds of phenomena. Some of them even have behaviors that resemble forms of “artificial life.”&lt;lb/&gt;For more details on how these rules work, get the repo and open various rules in the rule editor, where all their parameters are explained. There are many new classes of rules to experiment with.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Code&lt;/head&gt;
    &lt;p&gt;You can read more about LACE here.&lt;/p&gt;
    &lt;p&gt;You can get the LACE python code repo here.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Gallery&lt;/head&gt;
    &lt;p&gt;(NOTE – click on the videos and use the settings icon to set quality to 1080p for best visuals)&lt;/p&gt;
    &lt;p&gt;First, let’s take a look at Conway’s Game of Life, but with links visible. This demonstration simply shows the links and their states, but in this example, the links do not affect the states of cells. This shows that LACE can run traditional 2D cellular automata rules, with the links visible, but without the links changing rule behavior.&lt;lb/&gt;In more sophisticated LACE rules (scroll down), we will actually modify the behavior of the Life rule based on the links&lt;/p&gt;
    &lt;p&gt;And here are some Life gliders, doing their thing, with links visible…&lt;/p&gt;
    &lt;p&gt;And here is a stable pattern in Life… with links….&lt;/p&gt;
    &lt;p&gt;Now, here is a version of Life, where edges influence rule behavior…&lt;/p&gt;
    &lt;p&gt;Here’s a variant of Life where edges play even more of a role. &lt;lb/&gt;In LACE we can adjust the influence that links have on rule behavior – from none (links are merely decorative), to strong influence (links condition cell states).&lt;/p&gt;
    &lt;p&gt;Above, we looked at some traditional Life rule cellular automata. These examples illustrated varying levels of link-awareness in rules. But they are still not showing the full capabilities of the LACE platform.&lt;lb/&gt;Next, we turn to more advanced LACE rules that fully utilize the capabilities of the system…&lt;/p&gt;
    &lt;head rend="h2"&gt;The Realm of LACE: LACE Rules&lt;/head&gt;
    &lt;p&gt;Now, take a look at the “Amazing Dragons” rule in the Realm of LACE (ROL), one of the more interesting rules in this universe.&lt;/p&gt;
    &lt;p&gt;This is not a life rule – it’s a LACE rule – a fully topological rule.&lt;/p&gt;
    &lt;p&gt;Here links and neighborhood topology play a major role in the behavior of cell states and cell states modify the states of links as well.&lt;lb/&gt;(Here’s a little more detail on how rules work – see this and this and a longer explanation here)&lt;/p&gt;
    &lt;p&gt;…and look what happens!&lt;/p&gt;
    &lt;p&gt;LACE also supports an optional high-performance, GPU-accelerated mode using Taichi, for large-scale simulations…&lt;/p&gt;
    &lt;p&gt;And here’s another interesting LACE rule…&lt;/p&gt;
    &lt;p&gt;and check this out…&lt;/p&gt;
    &lt;p&gt;and this one….&lt;/p&gt;
    &lt;p&gt;And now a gallery of many other interesting LACE rules…&lt;/p&gt;
    &lt;p&gt;This has been a preview of the Realm of LACE … an incredible new class of cellular automata rules, where links matter and topology evolves.&lt;lb/&gt;Learn more by playing with the repo, and please share your discoveries 🙂&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.novaspivack.com/science/introducing-lace-a-new-kind-of-cellular-automata"/><published>2025-10-16T13:33:45+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45605291</id><title>Why I Chose Elixir Phoenix over Rails, Laravel, and Next.js</title><updated>2025-10-16T21:31:57.670753+00:00</updated><content>&lt;doc fingerprint="b7d4d06b17b5be94"&gt;
  &lt;main&gt;
    &lt;p&gt;October 16, 2025 · by Akarsh&lt;/p&gt;
    &lt;p&gt;First things first, why do we code? To solve problems in the most optimal way possible.&lt;/p&gt;
    &lt;p&gt;For me, the number one factor is speed: both application speed and development speed. That’s exactly what led me to Phoenix LiveView.&lt;/p&gt;
    &lt;p&gt;If I had chosen React or Next.js with Laravel, or even Inertia.js with Laravel, I would have had to maintain both sides of the stack, frontend and backend. As a solo developer, I didn’t have the time to manage state in two different places. I needed a solid monolithic solution that could handle everything together.&lt;/p&gt;
    &lt;p&gt;So I looked into Laravel Livewire and Rails Hotwire. Both are great tools that simplify frontend work without depending too much on JavaScript. I even thought about going full JavaScript with Next.js, but I’ve never been a big fan of using JS on the backend.&lt;/p&gt;
    &lt;p&gt;Rails Hotwire really caught my attention, especially because of how fast you can build an MVP with Rails. But I still needed background jobs, real-time updates, and two-way communication that just works. Those things are possible in Rails and Laravel, but they take a bit more effort to set up.&lt;/p&gt;
    &lt;p&gt;Then I came across Elixir and its framework Phoenix. It had all the elegance of Ruby on Rails, but with far better performance. It came with built-in background jobs through Oban, a familiar and clean syntax, and something truly special called LiveView.&lt;/p&gt;
    &lt;p&gt;LiveView feels like the perfect balance between traditional server-rendered apps and frontend-heavy frameworks. It’s way ahead of both Rails Hotwire and Laravel Livewire. LiveView communicates through WebSockets, which means real-time two-way updates without sending new requests every time something changes. You can still use Alpine.js or any JavaScript library you want through hooks when needed.&lt;/p&gt;
    &lt;p&gt;Phoenix also comes with Oban jobs built in. You can declare background jobs easily, and when something fails, it automatically restarts without breaking the app. That’s the beauty of Elixir. It’s a compiled language built on top of Erlang, which powers highly concurrent systems like WhatsApp and Discord.&lt;/p&gt;
    &lt;p&gt;I’m not saying Phoenix is better than Laravel, Rails, or Next.js. All of these are excellent frameworks, and I’ve personally used them to build applications. Phoenix just turned out to be the best fit for my specific use case. This is my project - Hyperzoned.com&lt;/p&gt;
    &lt;p&gt;I don’t know who needs to hear this, but try exploring beyond what you already know. You might find a better and more efficient way to solve your next problem. After all, never stop learning.&lt;/p&gt;
    &lt;p&gt;Thanks for reading! You can find me on X or Hyperzoned.com.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://akarshc.com/post/phoenix-for-my-project.html"/><published>2025-10-16T13:48:33+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45605501</id><title>DoorDash and Waymo launch autonomous delivery service in Phoenix</title><updated>2025-10-16T21:31:57.466791+00:00</updated><content>&lt;doc fingerprint="f98ba259b3b2bde5"&gt;
  &lt;main&gt;
    &lt;p&gt;Today, DoorDash announced a new partnership with Waymo to launch an autonomous delivery service in Metro Phoenix and introduce a limited-time $10 Waymo promotion for DashPass members in Los Angeles, San Francisco, and Phoenix.&lt;/p&gt;
    &lt;p&gt;From now through the end of the year, DashPass members in these three cities can receive $10 off one Waymo ride per month.* A new promotion code will be issued at the start of each month through December 31, 2025.&lt;/p&gt;
    &lt;p&gt;Testing of the new autonomous delivery service in Metro Phoenix is now underway, with plans to launch broader commercial operations later this year. DoorDash consumers in the area may be matched with a fully autonomous Waymo vehicle for deliveries from participating merchants using DoorDash’s Autonomous Delivery Platform, the system that helps orchestrate different types of delivery methods together at scale, whether that’s Dashers, robots, drones, or Waymo. The service will begin with deliveries from DashMart, DoorDash’s owned and operated convenience, grocery, and retail store that also powers DashMart Fulfillment Services, with plans to expand over time.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;“DashPass is designed to give consumers consistent value, convenience, and access to the best of their communities, and our partnership with Waymo builds on that promise,” said David Richter, Vice President of Business and Corporate Development at DoorDash. “Together, we’re giving members access to, and savings on, a new and delightful experience, while advancing our vision for a multi-modal autonomous future of local commerce.”&lt;/p&gt;
    &lt;/quote&gt;
    &lt;quote&gt;
      &lt;p&gt;“We are excited to make everyday errands easier with the Waymo Driver, offering the added peace of mind that comes with our safe and reliable technology. Through our partnership with DoorDash, we leverage our proven delivery experience to provide customers with a seamless, contact-free way to get items they need, whether it’s groceries or a quick bite,” said Nicole Gavel, Head of Business Development and Strategic Partnerships at Waymo.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;DashPass offers exclusive deals, member-only benefits, and $0 delivery fees and reduced service fees on eligible orders from thousands of restaurants, grocery stores, and retailers. On average, DashPass members save $5 per eligible order and have collectively saved more than $10 billion globally since the program launched in 2018.&lt;/p&gt;
    &lt;p&gt;*On weekday rides booked between 2 a.m. and 2 p.m. Terms apply.&lt;/p&gt;
    &lt;p&gt;Forward-Looking Statements&lt;lb/&gt;This communication contains forward-looking statements within the meaning of Section 27A of the Securities Act of 1933, as amended, and Section 21E of the Securities Exchange Act of 1934, as amended. Forward-looking statements generally relate to future events, and such statements in this communication include, but are not limited to, expectations regarding the opportunity and expected benefits of the partnership between DoorDash and Waymo. Expectations and beliefs regarding these matters may not materialize, and actual results in future periods are subject to risks and uncertainties that could cause actual results to differ materially from those projected. For information on potential risks and uncertainties that could cause actual results to differ from any results predicted, please see DoorDash’s most recent Annual Report on Form 10-K and subsequent Quarterly Reports on Form 10-Q, each filed with the Securities and Exchange Commission.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://about.doordash.com/en-us/news/waymo"/><published>2025-10-16T14:04:18+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45606698</id><title>Codex Is Live in Zed</title><updated>2025-10-16T21:31:57.258431+00:00</updated><content>&lt;doc fingerprint="b44ddc5f080cb81d"&gt;
  &lt;main&gt;
    &lt;p&gt;When we introduced the Agent Client Protocol (ACP) in collaboration with Google's Gemini CLI team, we did not anticipate how much pent-up demand there was for a protocol like this!&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;First we saw a wave of requests for Anthropic's Claude Code&lt;/item&gt;
      &lt;item&gt;Then we saw a bunch of other clients and agents adopting ACP, most recently JetBrains&lt;/item&gt;
      &lt;item&gt;Now we've seen a fresh wave of requests for OpenAI's Codex:&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;As of today, Zed supports Codex out-the-box via ACP. You can select it from the New Thread menu, just like Claude Code or Gemini CLI:&lt;/p&gt;
    &lt;p&gt;Like our other ACP integrations, Codex via ACP is strictly about improving UI and keeping you in flow in your IDE of choice; the billing and legal/terms arrangement is directly between you and OpenAI. Zed does not charge for use of external agents like Codex, nor do prompts and code sent via Codex-ACP to OpenAI touch Zed's servers! We've also separately open-sourced the codex-acp adapter so you can use it outside of Zed as well.&lt;/p&gt;
    &lt;head rend="h2"&gt;Learning from Different Agents&lt;/head&gt;
    &lt;p&gt;Every model behaves a bit differently than the others, and the same is true of agents. For example, some agents support switching models in the middle of a conversation, whereas others require sticking with the same model throughout. Some support viewing and resuming past conversations, whereas others have no concept of conversation persistence. ACP is designed to be flexible enough to work with a variety of agent capabilities, but the experience of using them still varies based on the agent's implementation details.&lt;/p&gt;
    &lt;p&gt;A detail that came up when we were building the Codex ACP adapter was that the Codex agent runs terminal commands in its own process, and then streams output bytes from that terminal process to the client. In the past, we've had this reversed: the agent would send the client a request to run a terminal command (e.g. &lt;code&gt;mkdir examples&lt;/code&gt;) and then the client would manage
the actual running of that command.&lt;/p&gt;
    &lt;p&gt;Naturally, we want to keep the look and feel consistent no matter which agent you're using, but this design difference between Codex and other agents makes certain details unavoidably different. For example, for other agents we can spawn terminals in pseudoterminal (PTY) mode. This means you can actually interact with the terminal right in the Agent Panel if the agent launches an interactive process, and it also means things like colorful terminal output tend to be enabled by default.&lt;/p&gt;
    &lt;p&gt;On the other hand, being in PTY mode means that an agent can get stuck. A classic example of this is when an agent tries to run &lt;code&gt;git rebase --continue&lt;/code&gt; and the terminal pops up the configured editor, then waits for the programmer to make any
edits (if desired) to the commit message. This can be nice for a human, but for an agent that's waiting for the command to
finish, it creates a deadlock. The process won't proceed without interaction, and the agent won't interact until the process
completes! Having terminals work in non-PTY mode might result in fewer colors and less interactivity, but it also results in
fewer cases of agents getting stuck.&lt;/p&gt;
    &lt;p&gt;Now that we've integrated agents that both enable and disable PTY mode, we can compare how the experience feels in both cases, and use that to inform our recommendations for future ACP integrations.&lt;/p&gt;
    &lt;head rend="h2"&gt;Which ACP Integration is Next?&lt;/head&gt;
    &lt;p&gt;In addition to Codex, we have already added support to Zed for Claude Code, Gemini CLI, and other agents, all via ACP. Since ACP is not specific to Zed, we've also seen it be adopted by editors like Neovim, Emacs, and now the JetBrains family of IDEs.&lt;/p&gt;
    &lt;p&gt;Now that the protocol has picked up enough adoption on its own, we're happy to shift our focus to working with the community on the future of the protocol—as opposed to building ACP adapters ourselves like we did with Codex and Claude Code. We're excited to see what amazing ACP integrations the community cooks up!&lt;/p&gt;
    &lt;head rend="h3"&gt;Looking for a better editor?&lt;/head&gt;
    &lt;p&gt;You can try Zed today on macOS, Windows, or Linux. Download now!&lt;/p&gt;
    &lt;head rend="h3"&gt;We are hiring!&lt;/head&gt;
    &lt;p&gt;If you're passionate about the topics we cover on our blog, please consider joining our team to help us ship the future of software development.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://zed.dev/blog/codex-is-live-in-zed"/><published>2025-10-16T15:36:39+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45607117</id><title>Claude Skills</title><updated>2025-10-16T21:31:57.058747+00:00</updated><content>&lt;doc fingerprint="9e4c2e7f2f779869"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Introducing Claude Skills&lt;/head&gt;
    &lt;p&gt;Claude can now use Skills to improve how it performs specific tasks. Skills are folders that include instructions, scripts, and resources that Claude can load when needed.&lt;/p&gt;
    &lt;p&gt;Claude will only access a skill when it's relevant to the task at hand. When used, skills make Claude better at specialized tasks like working with Excel or following your organization's brand guidelines.&lt;/p&gt;
    &lt;p&gt;You've already seen Skills at work in Claude apps, where Claude uses them to create files like spreadsheets and presentations. Now, you can build your own skills and use them across Claude apps, Claude Code, and our API.&lt;/p&gt;
    &lt;head rend="h2"&gt;How Skills work&lt;/head&gt;
    &lt;p&gt;While working on tasks, Claude scans available skills to find relevant matches. When one matches, it loads only the minimal information and files needed—keeping Claude fast while accessing specialized expertise.&lt;/p&gt;
    &lt;p&gt;Skills are:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Composable: Skills stack together. Claude automatically identifies which skills are needed and coordinates their use.&lt;/item&gt;
      &lt;item&gt;Portable: Skills use the same format everywhere. Build once, use across Claude apps, Claude Code, and API.&lt;/item&gt;
      &lt;item&gt;Efficient: Only loads what's needed, when it's needed.&lt;/item&gt;
      &lt;item&gt;Powerful: Skills can include executable code for tasks where traditional programming is more reliable than token generation.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Think of Skills as custom onboarding materials that let you package expertise, making Claude a specialist on what matters most to you. For a technical deep-dive on the Agent Skills design pattern, architecture, and development best practices, read our engineering blog.&lt;/p&gt;
    &lt;head rend="h2"&gt;Skills work with every Claude product&lt;/head&gt;
    &lt;head rend="h3"&gt;Claude apps&lt;/head&gt;
    &lt;p&gt;Skills are available to Pro, Max, Team and Enterprise users. We provide skills for common tasks like document creation, examples you can customize, and the ability to create your own custom skills.&lt;/p&gt;
    &lt;p&gt;Claude automatically invokes relevant skills based on your task—no manual selection needed. You'll even see skills in Claude's chain of thought as it works.&lt;lb/&gt;Creating skills is simple. The "skill-creator" skill provides interactive guidance: Claude asks about your workflow, generates the folder structure, formats the SKILL.md file, and bundles the resources you need. No manual file editing required. &lt;/p&gt;
    &lt;p&gt;Enable Skills in Settings. For Team and Enterprise users, admins must first enable Skills organization-wide.&lt;/p&gt;
    &lt;head rend="h3"&gt;Claude Developer Platform (API)&lt;/head&gt;
    &lt;p&gt;Agent Skills, which we often refer to simply as Skills, can now be added to Messages API requests and the new &lt;code&gt;/v1/skills&lt;/code&gt; endpoint gives developers programmatic control over custom skill versioning and management. Skills require the Code Execution Tool beta, which provides the secure environment they need to run.&lt;/p&gt;
    &lt;p&gt;Use Anthropic-created skills to have Claude read and generate professional Excel spreadsheets with formulas, PowerPoint presentations, Word documents, and fillable PDFs. Developers can create custom Skills to extend Claude's capabilities for their specific use cases.&lt;/p&gt;
    &lt;p&gt;Developers can also easily create, view, and upgrade skill versions through the Claude Console.&lt;/p&gt;
    &lt;p&gt;Explore the documentation or Anthropic Academy to learn more.&lt;/p&gt;
    &lt;quote&gt;Skills teaches Claude how to work with Box content. Users can transform stored files into PowerPoint presentations, Excel spreadsheets, and Word documents that follow their organization's standards—saving hours of effort.&lt;/quote&gt;
    &lt;quote&gt;With Skills, Claude works seamlessly with Notion - taking users from questions to action faster. Less prompt wrangling on complex tasks, more predictable results.&lt;/quote&gt;
    &lt;quote&gt;Canva plans to leverage Skills to customize agents and expand what they can do. This unlocks new ways to bring Canva deeper into agentic workflows—helping teams capture their unique context and create stunning, high-quality designs effortlessly.&lt;/quote&gt;
    &lt;quote&gt;Skills streamline our management accounting and finance workflows. Claude processes multiple spreadsheets, catches critical anomalies, and generates reports using our procedures. What once took a day, we can now accomplish in an hour.&lt;/quote&gt;
    &lt;head rend="h3"&gt;Claude Code&lt;/head&gt;
    &lt;p&gt;Skills extend Claude Code with your team's expertise and workflows. Install skills via plugins from the anthropics/skills marketplace. Claude loads them automatically when relevant. Share skills through version control with your team. You can also manually install skills by adding them to &lt;code&gt;~/.claude/skills&lt;/code&gt;. The Claude Agent SDK provides the same Agent Skills support for building custom agents. &lt;/p&gt;
    &lt;head rend="h2"&gt;Getting started&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Claude apps: User Guide &amp;amp; Help Center&lt;/item&gt;
      &lt;item&gt;API developers: Documentation&lt;/item&gt;
      &lt;item&gt;Claude Code: Documentation&lt;/item&gt;
      &lt;item&gt;Example Skills to customize: GitHub repository&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;What's next&lt;/head&gt;
    &lt;p&gt;We're working toward simplified skill creation workflows and enterprise-wide deployment capabilities, making it easier for organizations to distribute skills across teams.&lt;/p&gt;
    &lt;p&gt;Keep in mind, this feature gives Claude access to execute code. While powerful, it means being mindful about which skills you use—stick to trusted sources to keep your data safe. Learn more.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.anthropic.com/news/skills"/><published>2025-10-16T16:05:47+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45607758</id><title>Gemini 3.0 spotted in the wild through A/B testing</title><updated>2025-10-16T21:31:56.932536+00:00</updated><content>&lt;doc fingerprint="ef53a5961b3a9e93"&gt;
  &lt;main&gt;
    &lt;p&gt;So I kept reading rumors that Gemini 3.0 is accessible through Google AI Studio through A/B testing and the SVGs folks were posting (of Xbox controllers in particular) made me think that they might be right.&lt;/p&gt;
    &lt;p&gt;Gemini 3.0 is one of the most anticipated releases in AI at the moment because of the expected advances in coding performance.&lt;/p&gt;
    &lt;p&gt;Evaluating models is a difficult task, but surprisingly the SVG generation task seems to be a very efficient proxy for gauging model quality as @simonw has shown us using his “pelican riding a bicycle” test.&lt;/p&gt;
    &lt;p&gt;Lo and behold, after trying a couple of times I got the A/B screen and got an SVG image of an Xbox 360 controller that looked VERY impressive compared to the rest of the frontier.&lt;/p&gt;
    &lt;p&gt;The exact prompt I used:&lt;/p&gt;
    &lt;code&gt;Create an SVG image of an Xbox 360 controller. Output it in a Markdown multi-line code block.
Like this:
```svg
...
```
&lt;/code&gt;
    &lt;p&gt;For what it’s worth the model ID for “Gemini 3.0” was &lt;code&gt;ecpt50a2y6mpgkcn&lt;/code&gt; which doesn’t really help understand which version of the model it is. Perhaps since I user selected Gemini 2.5 Pro it is actually Gemini 3.0 Pro that it is pitted against, as comparing Gemini 3.0 Flash to Gemini 2.5 Pro in an A/B test makes less sense to me. Also, it had about 24s higher TTFT and output length was about 40% longer (this includes reasoning tokens AFAICT), but that doesn’t say much other than it’s likely not a “GPT-5 Pro” type answer that uses significant test time compute.&lt;/p&gt;
    &lt;head rend="h2"&gt;Appendix&lt;/head&gt;
    &lt;p&gt;“Gemini 3.0” A/B result versus the Gemini 2.5 Pro model:&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://ricklamers.io/posts/gemini-3-spotted-in-the-wild/"/><published>2025-10-16T16:54:26+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45607822</id><title>SWE-Grep and SWE-Grep-Mini: RL for Fast Multi-Turn Context Retrieval</title><updated>2025-10-16T21:31:56.827983+00:00</updated><content>&lt;doc fingerprint="655e27db2dfa194a"&gt;
  &lt;main&gt;&lt;p&gt;TL;DR: We trained SWE-grep and SWE-grep-mini, fast agentic models specialized in highly parallel context retrieval. They match the retrieval capabilities of frontier coding models, while taking an order of magnitude less time. Available now in Windsurf’s new Fast Context subagent, and our new SWE-grep demo playground!&lt;/p&gt;&lt;p&gt;Modern coding agents face a fundamental tradeoff between speed and intelligence. Frontier models can solve complex tasks, but it can take minutes of searching before they edit a single file, breaking your flow. In Windsurf and Devin, we observed that our agent trajectories were often spending &amp;gt;60% of their first turn just retrieving context.&lt;/p&gt;&lt;p&gt;Context retrieval has been historically done in 2 ways:&lt;/p&gt;&lt;p&gt;This speed-intelligence tradeoff seemed inescapable until: We trained SWE-grep and SWE-grep-mini: models which match the retrieval capabilities of frontier coding models, while taking an order of magnitude less time. These models now power Fast Context, a subagent that helps you stay in flow.&lt;/p&gt;&lt;p&gt;We will be rolling Fast Context out progressively to Windsurf users, starting from the latest release. There is no required UI or command to try it - just use Windsurf Cascade as per normal. When you make a query that requires code search, Fast Context will trigger (you can also force it to trigger by submitting the query with &lt;code&gt;Cmd+Enter&lt;/code&gt;).&lt;/p&gt;&lt;p&gt;Check out how Fast Context reduces the time it takes to understand large codebases:&lt;/p&gt;&lt;p&gt;You can try Fast Context yourself in our new playground: https://playground.cognition.ai/.&lt;/p&gt;&lt;p&gt;Since we are offering direct comparisons between our agent and alternative agents, we should mention what is going on here and our attempts to make it a fair comparison. We host all 3 agents - a Fast Context Agent stripped out of Windsurf, stock Claude Code, and stock Cursor CLI - in their own Modal containers and pipe the inputs/outputs through stdin/stdout. This is meant to reflect the experience of using each agent locally. This is not meant to be an extremely rigorous benchmark, just a demo experience we cooked up on the side to answer the obvious question of “how does Fast Context compare to what I’m used to outside of Windsurf?” You should run these tests in your own environment (with Fast Context in Windsurf) for best fidelity to your actual experience.&lt;/p&gt;&lt;p&gt;There are a few reasons why we think that context retrieval is a uniquely suited task for a custom subagent:&lt;/p&gt;&lt;code&gt;SWE-grep&lt;/code&gt; fast?&lt;p&gt;A few things were key to unlocking this level of intelligence at blazing-fast speeds:&lt;/p&gt;&lt;p&gt;Most coding agents take so long to fetch context because they only issue one (or a few) tool calls at a time. Each turn of tool calls incurs an additional prefill, an extra network roundtrip, and decoding overhead: to explore codebases as efficiently as possible, search subagents should be doing many tool calls in parallel.&lt;/p&gt;&lt;p&gt;While many models technically support parallel tool calls, it’s difficult to get them to use them effectively. Models are getting better than this—Sonnet in particular has improved greatly from 3.6 to 4.5—but we felt that models didn’t exploit them optimally. Here is a rough sketch of the model design space that we targeted for &lt;code&gt;SWE-grep&lt;/code&gt;:&lt;/p&gt;&lt;p&gt;Increasing parallelism also lets us use fewer tool calls. Across our ablations, we discovered that, by increasing the amount of parallelism from 4 to 8 searches per turn, we could reduce the number of turns spent searching from 6 to 4 while retaining the same performance.&lt;/p&gt;&lt;p&gt;We thus trained the &lt;code&gt;SWE-grep&lt;/code&gt; models to natively issue up to 8 parallel tool calls per turn in a maximum of 4 turns (3 turns of exploration and 1 turn for the answer). The SWE-grep models are given a restricted set of tool calls (&lt;code&gt;grep&lt;/code&gt;, &lt;code&gt;read&lt;/code&gt;, &lt;code&gt;glob&lt;/code&gt;, ...) to ensure cross-platform compatibility (we have loads of Windows users!) and guarantee safety.&lt;/p&gt;&lt;p&gt;We train &lt;code&gt;SWE-grep&lt;/code&gt; directly with multi-turn reinforcement learning. Then we distill &lt;code&gt;SWE-grep&lt;/code&gt; into &lt;code&gt;SWE-grep-mini&lt;/code&gt; and perform additional reinforcement learning to boost the model’s performance on the task. Our reward function is an average of weighted F1 scores over file retrieval and line retrieval tasks, with respect to our ground truth dataset. This objective was sufficient for &lt;code&gt;SWE-grep&lt;/code&gt; to naturally learn to make more tool calls to its advantage over the course of training, without us explicitly incentivizing this behavior:&lt;/p&gt;&lt;p&gt;We’ll explain some details about our training algorithm, a modified version of the policy gradient, and some tweaks that helped us keep training stable.&lt;/p&gt;&lt;p&gt;Given an LLM policy and outcome reward R, the policy gradient is given by&lt;/p&gt;&lt;p&gt;where the sum is over the tokens in a single trajectory. If we are able to sample from the training policy, we can use a simple Monte Carlo estimate for the gradient, which is unbiased when the data is on-policy. However, standard training and inference libraries have different numerics, which effectively turns the sampled data into off-policy data. This is amplified when using low-precision rollouts, a common optimization in RL frameworks. The solution is to apply importance sampling. Recent works have proposed using per-token importance sampling ratios. Per-token ratios, though, do not fully remove the bias. Indeed, at step t we have an action-choice mismatch, a state-distribution mismatch, and a reward-signal mismatch. A per-token ratio corrects only the action-choice mismatch. To derive an unbiased estimate, we apply per-sequence importance sampling&lt;/p&gt;&lt;p&gt;We expand at the token-level, subtract a leave-one-out baseline to reduce the variance, and rescale by a constant factor (absorbed in the learning rate), obtaining a surrogate loss (for a given prompt) that gives the correct gradient estimation (the notation []_∇ denotes a stop gradient):&lt;/p&gt;&lt;p&gt;where we sample g completions from the same prompt for the Monte Carlo estimate, Aⱼ = Rⱼ - mean(R₁, ... ,R₉) and T_max is the maximum number of sampled tokens allowed during training (like Dr. GRPO).&lt;/p&gt;&lt;p&gt;A large number of parallel tool calls over multiple turns introduces a lot of tokens from the environment in the trajectories. These tokens are not generated by the model, leading to instabilities, especially when training small models. We found the following techniques to be helpful in stabilizing these runs:&lt;/p&gt;&lt;p&gt;To train SWE-grep and evaluate models on the context retrieval task, we used an internal dataset consisting of real-world repositories, user queries, and a labeled ground truth of relevant files and line ranges, drawn from our hardest bug reports and internal tests. We call this the Cognition CodeSearch Eval.&lt;/p&gt;&lt;p&gt;When evaluating models for context retrieval, we care about two metrics:&lt;/p&gt;&lt;p&gt;We use a weighted F1 score, where precision is prioritized over recall, precisely because we found that context pollution matters. We found that polluting the context of the main agent was more detrimental than leaving some context out, as the agent is typically only a few searches away to recover any remaining context. To evaluate models, we allow each model 4 turns of up to 8 parallel tool calls (searches, reads, etc.), and benchmark them on the above metrics.&lt;/p&gt;&lt;p&gt;Our results on our evaluation set demonstrate that SWE-grep and SWE-grep-mini are an order of magnitude faster than frontier models, while matching or outperforming them at context retrieval.&lt;/p&gt;&lt;p&gt;We also evaluated how well the SWE-grep models work when used as a subagent in larger agent pipelines.&lt;/p&gt;&lt;p&gt;Coding tasks. To evaluate how well it works in Windsurf’s Cascade agent, we use an randomly selected subset of difficult SWE-Bench Verified tasks. When using the Fast Context subagent, the agent (using Sonnet 4.5 as the main model) accomplishes the same number of tasks in significantly lower end-to-end time.&lt;/p&gt;&lt;p&gt;*on internal runners&lt;/p&gt;&lt;p&gt;**search file steps include greps, file reads, glob searches, etc.&lt;/p&gt;&lt;p&gt;Codebase Q&amp;amp;A. We show the end-to-end latency on some example queries over open-source repositories. As with our playground setup, we benchmark the Fast Context agent—as it would be used in Windsurf—against Claude Code and Cursor CLI by measuring end-to-end latency.&lt;/p&gt;&lt;p&gt;The Fast Context subagent in Windsurf is our first stepping stone on our roadmap for Fast Agents. The &lt;code&gt;SWE-grep&lt;/code&gt; models will be deployed in DeepWiki, Devin, Windsurf Tab and future products as we validate and tune for those use cases - future directions we want to explore include much more variable turn length, even higher intelligence, and tools speed optimizations.&lt;/p&gt;&lt;p&gt;End-to-end latency is a moderately non-consensus dimension of research for agent labs. In a world where coding agents grab headlines for having 2-30 hours of autonomy, the marketing incentive is to make agents slower, not faster. But we think the pendulum will swing the other way soon — simply because we have the unfair advantage of seeing actual user behavior across sync and async code agents at massive scale.&lt;/p&gt;&lt;p&gt;The goal of Windsurf is to keep you in flow, which Mihaly Csikszentmihalyi defines as “a state of complete absorption in an activity”. Roughly, we estimate that your P(breaking flow) geometrically increases 10% every second that passes while you wait for agent response, with the exact threshold varying based on perceived complexity of the request. The arbitrary “flow window” we hold ourselves to is 5 seconds.&lt;/p&gt;&lt;p&gt;Our ultimate goal at the combined Cognition+Windsurf is to maximize your software engineering productivity, and we are simultaneously researching both the directions of pushing the frontier of coding agent autonomy -AND- making them faster given a “good enough” bar. The best mental model we’ve found is the one we’ve arrived at below - avoid the Semi-Async Valley of Death at all costs!&lt;/p&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://cognition.ai/blog/swe-grep"/><published>2025-10-16T16:59:30+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45608285</id><title>Mysterious Intrigue Around an x86 "Corporate Entity Other Than Intel/AMD"</title><updated>2025-10-16T21:31:56.541025+00:00</updated><content>&lt;doc fingerprint="7a5835c61a25b0f6"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Mysterious Intrigue Around An x86 "Corporate Entity Other Than Intel/AMD"&lt;/head&gt;
    &lt;p&gt; Posted to the Linux kernel mailing list and GNU Binutils mailing list today is an intriguing message from a longtime x86/x86_64 expert around a "a corporate entity other than Intel/AMD" using some x86 opcodes not used by AMD or Intel processors. &lt;lb/&gt;Longtime x86 expert Christian Ludloff posted a cryptic message to the LKML and Binutils mailing lists. An anonymous Phoronix reader in turn relayed the interesting occurrence to me. Christian Ludloff has worked for Google, AMD, TI, and others over the years as an x86 architecture expert as well as being known for his sandpile.org x86 CPU information site.&lt;lb/&gt;The subject for the mailing list posts by Christian Ludloff was x86 opcode/CPUID/MSR allocations and simply said:&lt;lb/&gt;These x86 opcodes and CPUs and MSR ranges now "in active use by a corporate entity other than Intel/AMD" makes this rather intriguing... And that it's a "corporate" entity rather than noting a research organization, hobbyist project, etc. And how said corporate entity has the legal ability to even work on a new x86-based implementation is interesting. For Christian Ludloff to be involved does give it additional weight.&lt;lb/&gt;As pointed out in the Phoronix Forums, it could be Zhaoxin. But as they have contributed GCC patches, Glibc patches, Linux kernel patches, etc, over the years it's not clear why they would go unnamed or have to relay the message via Ludloff rather than their prior direct mailing list posts.&lt;lb/&gt;For now that's all I know but rather interesting seeing this message from Ludloff today on the public mailing lists.&lt;/p&gt;
    &lt;p&gt;Longtime x86 expert Christian Ludloff posted a cryptic message to the LKML and Binutils mailing lists. An anonymous Phoronix reader in turn relayed the interesting occurrence to me. Christian Ludloff has worked for Google, AMD, TI, and others over the years as an x86 architecture expert as well as being known for his sandpile.org x86 CPU information site.&lt;/p&gt;
    &lt;p&gt;The subject for the mailing list posts by Christian Ludloff was x86 opcode/CPUID/MSR allocations and simply said:&lt;/p&gt;
    &lt;quote&gt;"If x86 opcode/CPUID/MSR allocations are not of your concern, then you can stop reading.&lt;lb/&gt;-------------------- 8&amp;lt; -------------------&lt;lb/&gt;I was asked to relay this to binutils/LKML.&lt;lb/&gt;As of 2025, the following are in active use by a corporate entity other than Intel/AMD.&lt;lb/&gt;Any collisions with them should be avoided.&lt;lb/&gt;- opcode 0Eh in PM64 - x86 PUSH CS that got removed by x86-64 in 2002; not used since&lt;lb/&gt;- opcode 0Fh,36h and opcode 0Fh,3Eh - there is a historic collision with Cyrix RDSHR, but that is not considered to be an issue&lt;lb/&gt;- opcode 0Fh,3Ah,E0h...EFh in classic, VEX, EVEX, Map3, and Map7 encodings, without a prefix, or CS/SS/DS/ES/FS/GS, LOCK, REPE/REPNE, or ASIZE/OSIZE/REX (but not REX2!) prefixes - a historic collision with K10M VCVTFXPNTPD2DQ (at MVEX opcode E6h prefix F2) exists but is not considered an issue&lt;lb/&gt;- opcode 0Fh,1Eh,/0 - a "hinting NOP" group&lt;lb/&gt;- CPUID range E000_xxxxh - unspecified leaf return values at this particular time&lt;lb/&gt;- MSR range E000_xxxxh - unspecified values after RESET - unchanged values after INIT&lt;lb/&gt;I have documented them at www.sandpile.org.&lt;lb/&gt;-------------------- 8&amp;lt; -------------------&lt;lb/&gt;--&lt;lb/&gt;C."&lt;/quote&gt;
    &lt;p&gt;These x86 opcodes and CPUs and MSR ranges now "in active use by a corporate entity other than Intel/AMD" makes this rather intriguing... And that it's a "corporate" entity rather than noting a research organization, hobbyist project, etc. And how said corporate entity has the legal ability to even work on a new x86-based implementation is interesting. For Christian Ludloff to be involved does give it additional weight.&lt;/p&gt;
    &lt;p&gt;As pointed out in the Phoronix Forums, it could be Zhaoxin. But as they have contributed GCC patches, Glibc patches, Linux kernel patches, etc, over the years it's not clear why they would go unnamed or have to relay the message via Ludloff rather than their prior direct mailing list posts.&lt;/p&gt;
    &lt;p&gt;For now that's all I know but rather interesting seeing this message from Ludloff today on the public mailing lists.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.phoronix.com/news/x86-Opcodes-Not-AMD-Or-Intel"/><published>2025-10-16T17:36:18+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45608456</id><title>Talent</title><updated>2025-10-16T21:31:56.284533+00:00</updated><content>&lt;doc fingerprint="7e1591173be606bd"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;On Talent&lt;/head&gt;
    &lt;p&gt;Quantity has a quality of its very own. Some writers are good - and they write all the time. The holy trinity of newsletter writers (Matt Levine, Byrne Hobart and Patrick McKenzie) write up to 700k words a year - so 2,000 words a day. I think Matt Levine’s schedule looks a little bit like waking up and doing 4000 words early in the morning about three times a week, then hitting send on his newsletter. Marc Rubinstein (another pretty prolific writer!) recently shared this Bloomberg profile of Jason Goldberg - “a Barclays analyst who has been writing a daily briefing note for 20 years”. It’s not just newsletter writers - for instance, Philip Kerr managed to write 42 books in 29 years by just working obsessively, writing on birthdays and Christmas. Paul Erdös had an even more insane work schedule:&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;“Erdös first did mathematics at the age of three, but for the last twenty-five years of his life, since the death of his mother, he put in nineteen-hour days, keeping himself fortified with 10 to 20 milligrams of Benzedrine or Ritalin, strong espresso, and caffeine tablets. "A mathematician," Erdös was fond of saying, "is a machine for turning coffee into theorems." When friends urged him to slow down, he always had the same response: "There'll be plenty of time to rest in the grave."&lt;/p&gt;&lt;p&gt;Erdös would let nothing stand in the way of mathematical progress. When the name of a colleague in California came up at breakfast in New Jersey, Erdös remembered a mathematical result he wanted to share with him. He headed toward the phone and started to dial. His host interrupted him, pointing out that it was 5:00 A.M. on the West Coast. "Good," Erdös said, "that means he'll be home."&lt;/p&gt;&lt;lb/&gt;…&lt;lb/&gt;Like all of Erdös's friends, Graham was concerned about his drug-taking. In 1979, Graham bet Erdös $500 that he couldn't stop taking amphetamines for a month. Erdös accepted the challenge, and went cold turkey for thirty days. After Graham paid up--and wrote the $500 off as a business expense--Erdös said, "You've showed me I'm not an addict. But I didn't get any work done. I'd get up in the morning and stare at a blank piece of paper. I'd have no ideas, just like an ordinary person. You've set mathematics back a month." He promptly resumed taking pills, and mathematics was the better for it.&lt;/quote&gt;
    &lt;p&gt; Looking at these guys, one feels a bit inadequate. How do they do it? Why aren’t you doing it? What did you get done this week?&lt;lb/&gt; One answer to this question is Scott Alexander’s essay is The Parable of the Talents. In the essay, he’s basically trying to square a circle: to reconcile the ideas that 1. natural talent exists and 2. everyone is morally equivalent. Alexander puts a lot of effort into proving point 1, and I think he does a great job. Here are the relevant sections. I agree with all of this, which is why I’m not trying to put it into my own words. But I’m particularly interested in his point that talent is a real thing, and some people are just better at things than others. He takes this really seriously. &lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;“Consider for a moment Srinivasa Ramanujan, one of the greatest mathematicians of all time. He grew up in poverty in a one-room house in small-town India. He taught himself mathematics by borrowing books from local college students and working through the problems on his own until he reached the end of the solveable ones and had nowhere else to go but inventing ways to solve the unsolveable ones.&lt;/p&gt;&lt;p&gt;There are a lot of poor people in the United States today whose life circumstances prevented their parents from reading books to them as a child, prevented them from getting into the best schools, prevented them from attending college, et cetera. And pretty much all of those people still got more educational opportunities than Ramanujan did.&lt;/p&gt;&lt;p&gt;And from there we can go in one of two directions. First, we can say that a lot of intelligence is innate, that Ramanujan was a genius, and that we mortals cannot be expected to replicate his accomplishments.&lt;/p&gt;&lt;p&gt;Or second, we can say those poor people are just not trying hard enough.&lt;/p&gt;&lt;p&gt;…&lt;/p&gt;&lt;lb/&gt;In high school English, I got A++s in all my classes, Principal’s Gold Medals, 100%s on tests, first prize in various state-wide essay contests, etc. In Math, I just barely by the skin of my teeth scraped together a pass in Calculus with a C-.&lt;p&gt;Every time I won some kind of prize in English my parents would praise me and say I was good and should feel good. My teachers would hold me up as an example and say other kids should try to be more like me. Meanwhile, when I would bring home a report card with a C- in math, my parents would have concerned faces and tell me they were disappointed and I wasn’t living up to my potential and I needed to work harder et cetera.&lt;/p&gt;&lt;p&gt;And I don’t know which part bothered me more.&lt;/p&gt;&lt;p&gt;Every time I was held up as an example in English class, I wanted to crawl under a rock and die. I didn’t do it! I didn’t study at all, half the time I did the homework in the car on the way to school, those essays for the statewide competition were thrown together on a lark without a trace of real effort. To praise me for any of it seemed and still seems utterly unjust.&lt;/p&gt;&lt;p&gt;On the other hand, to this day I believe I deserve a fricking statue for getting a C- in Calculus I. It should be in the center of the schoolyard, and have a plaque saying something like “Scott Alexander, who by making a herculean effort managed to pass Calculus I, even though they kept throwing random things after the little curly S sign and pretending it made sense.”&lt;/p&gt;&lt;p&gt;And without some notion of innate ability, I don’t know what to do with this experience. I don’t want to have to accept the blame for being a lazy person who just didn’t try hard enough in Math. But I really don’t want to have to accept the credit for being a virtuous and studious English student who worked harder than his peers.&lt;/p&gt;&lt;lb/&gt;…&lt;p&gt;When I was 6 and my brother was 4, our mom decided that as an Overachieving Jewish Mother she was contractually obligated to make both of us learn to play piano. She enrolled me in a Yamaha introductory piano class, and my younger brother in a Yamaha ‘cute little kids bang on the keyboard’ class.&lt;/p&gt;&lt;p&gt;A little while later, I noticed that my brother was now with me in my Introductory Piano class.&lt;/p&gt;&lt;p&gt;A little while later, I noticed that my brother was now by far the best student in my Introductory Piano Class, even though he had just started and was two or three years younger than anyone else there.&lt;/p&gt;&lt;p&gt;A little while later, Yamaha USA flew him to Japan to show him off before the Yamaha corporate honchos there.&lt;/p&gt;&lt;p&gt;Well, one thing led to another, and my brother won several international piano competitions, got a professorship in music at age 25, and now routinely gets news articles written about him calling him “among the top musicians of his generation”.&lt;/p&gt;&lt;p&gt;Meanwhile, I was always a mediocre student at Yamaha. When the time came to try an instrument in elementary school, I went with the violin to see if maybe I’d find it more to my tastes than the piano. I was quickly sorted into the remedial class because I couldn’t figure out how to make my instrument stop sounding like a wounded cat. After a year or so of this, I decided to switch to fulfilling my music requirement through a choir, and everyone who’d had to listen to me breathed a sigh of relief.&lt;/p&gt;&lt;p&gt;Every so often I wonder if somewhere deep inside me there is the potential to be “among the top musicians of my generation.” I try to recollect whether my brother practiced harder than I did. My memories are hazy, but I don’t think he practiced much harder until well after his career as a child prodigy had taken off.&lt;/p&gt;&lt;p&gt;…&lt;/p&gt;&lt;p&gt;I dunno. But I don’t think of myself as working hard at any of the things I am good at, in the sense of “exerting vast willpower to force myself kicking and screaming to do them”. It’s possible I do work hard, and that an outside observer would accuse me of eliding how hard I work, but it’s not a conscious elision and I don’t feel that way from the inside.&lt;/p&gt;&lt;p&gt;…&lt;/p&gt;&lt;p&gt;But I still feel like there’s something going on here where the solution to me being bad at math and piano isn’t just “sweat blood and push through your brain’s aversion to these subjects until you make it stick”. When I read biographies of Ramanujan and other famous mathematicians, there’s no sense that they ever had to do that with math. When I talk to my brother, I never get a sense that he had to do that with piano. And if I am good enough at writing to qualify to have an opinion on being good at things, then I don’t feel like I ever went through that process myself.&lt;/p&gt;&lt;lb/&gt;So this too is part of my deal with myself. I’ll try to do my best at things, but if there’s something I really hate, something where I have to go uphill every step of the way, then it’s okay to admit mediocrity. I won’t beat myself up for not forcing myself kicking and screaming to practice piano. And in return I won’t become too cocky about practicing writing a lot.”&lt;/quote&gt;
    &lt;p&gt;Here’s a related piece - his Apologia pro vita sua.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;“I have had a really busy few months. I think it will be letting up soon, but I’m not sure. And I’ve told a lot of people who needed things from me, for one reason or another, “I’m sorry, I’m too busy to take care of this right now.”&lt;/p&gt;
      &lt;p&gt;And I worry that some of those people read my blog and think “Wait, if you have enough time to write blog posts nearly every day, some of which are up to six thousand words long, why don’t you have enough time to do a couple of hours work for me?”&lt;/p&gt;
      &lt;p&gt;And the answer is – you fancy doctors with your mathematics and subtraction might say that I could just take a couple of hours away from blogging and use those free hours to write that one thing or analyze that one study or whatever, but you’re not going to fool me.&lt;/p&gt;
      &lt;p&gt;Just as drugs mysteriously find their own non-fungible money, enjoyable activities mysteriously find their own non-fungible time. If I had to explain it, I’d say the resource bottleneck isn’t time but energy/willpower, and that these look similar because working hard saps energy/willpower and relaxing for a while restores it, so when I have less time I also have less energy/willpower. But some things don’t require energy/willpower and so are essentially free. Writing this is my addiction, so it’s free. Doesn’t mean anything else is.”&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Erdös’s genius, then, was that his 19 hour workdays were “essentially free”. He didn’t sweat blood and push though his brain’s aversion to doing maths - it must have come pretty naturally to him. So it’s really important to do things that come naturally to you.&lt;/p&gt;
    &lt;p&gt;Here’s Jim Donovan talking about his SLA with clients while working as an investment banker:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;“When I started at Goldman Sachs … I would say to clients, you can leave me a voicemail, any time, unless I’m dead or asleep, I check it every ten seconds… And I don’t sleep very long either.”&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;I suspect that for Donovan, this didn’t feel like sweating blood - it was just how he was wired. Some people (not me!) are slow repliers, some people hate always being available, and those people are going to be terrible investment bankers and Jim Donovan is going to take their clients. Because for him, this stuff came naturally. He’s a 99.999th percentile voicemail replier. He was born to do it - and what’s awesome is that he found a way to turn his natural talent into loads of money.&lt;/p&gt;
    &lt;p&gt;I know professional writers that hear about Matt Levine and Scott Alexander’s work routine, and shake their heads. They produce a book every few years; they need to waste a few hours to get in the mindset to do anything. The can’t just jot down a paragraph here and there in their breaks. And yet even though they can’t hold themselves to that standard, they’re still professional writers. I mean, look how Hunter S. Thompson lived (yes, I know it’s not real):&lt;/p&gt;
    &lt;p&gt;My writing process doesn’t look much like Levine’s. I don’t have his consistency. The general pattern is that I spend weeks or months stewing on something, and then take a few hours and write it all down in one go, with minimal editing. That’s in contrast to a friend who told me recently that he spent two years writing 52 essays - one every two weeks, with metronomic consistency.&lt;/p&gt;
    &lt;p&gt;Here’s an example from my finals. I had a coursework essay due at 12pm, and the night before, I went for dinner with my two best friends. At about 5am I had maybe the introduction written - and I felt my life flashing before my eyes. Was this going to be the moment I failed my finals? But because I’d spent six months thinking about the question on and off, over the next few hours I managed to write 2,000 words on the subject of “Only God, not Man, makes an heir”: to what extent did Henry II’s legal reforms strengthen God’s hand?”, and got a 78 for my troubles - my best mark across all my papers.&lt;/p&gt;
    &lt;p&gt;Honestly, that was super fun - it wasn’t a sustainable or consistent way to get work done, but I enjoyed the pressure, I enjoyed the challenge, and I definitely enjoyed the 78. Writing seems to come to me in these spurts, which implies that I’m going to struggle to work with the consistency that Matt Levine achieves; ergo, I should not become a professional newsletter writer.&lt;/p&gt;
    &lt;p&gt; If you read enough finance books you start to pick up anecdotes about what makes a good trader. Lots of my friends are traders - there’s an archetype of “British Indian, studied economics at Cambridge, grew up in northwest London” that seems particularly successful - and so I’ve had feedback on these ideas. These guys say that they see themselves in these quotes.&lt;lb/&gt; One useful trait is an extreme ability for self-control and rational thinking under pressure:&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;"Bill [Gross] was to a large extent a trend follower, but he had a unique ability to know when it was time to lean against that trend and take a contrary position. There were numerous occasions where everyone else was scared shitless, and Bill put on his seat belt."&lt;/p&gt;&lt;p&gt;Pimco partner Ben Trosky, quoted in The Bond King&lt;/p&gt;&lt;lb/&gt;"When the financial stakes were high, though, [Steve] Cohen demonstrated an almost inhuman ability to stay calm and make rational trading decisions.&lt;lb/&gt;…&lt;lb/&gt;It was practically a genetic anomaly, this ability to behave like a reptile when he was trading, as opposed to a human being prone to fear and self-doubt. When he interviewed new hires he tried to test for this quality as best he could."&lt;p&gt;Sheelah Kolhatkar, Black Edge&lt;/p&gt;&lt;/quote&gt;
    &lt;p&gt;Another is being inscrutable. For example, people talked about John Meriwether from LTCM like this:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;“John has a steel-trap mind. You have no clue what he's thinking.”&lt;/p&gt;
      &lt;p&gt;William McIntosh (who hired Meriwether into Salomon Brothers), quoted in When Genius Failed&lt;/p&gt;
      &lt;p&gt;“He wore the same blank half-tense expression when he won as he did when he lost. He had, I think, a profound ability to control the two emotions that commonly destroy traders - fear and greed - and it made him as noble as a man who pursues his own interest so fiercely can be."&lt;/p&gt;
      &lt;p&gt;Michael Lewis, writing about Meriwether’s time at Salomon in Liar’s Poker&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Mostly, though, the key is to be an obsessive:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;“My interview with the company - that is, with [Thomas] Peterffy - was memorable. It took place it his apartment in Greenwich, where his butler (his butler!) served us drinks. I made an offhand joke about programming, and he chided me for not having respect for the practice. He told me: 'To be successful in this business, you have to think about it all the time. Lots of people in this business are very smart, but not everyone can think about it all the time.' These words - you have to think about it all the time - made a deep impression on me. Peterffy's phrase has pretty much become my motto - at least, it's one of them. At the time, I was struck by how simple and obvious it was. In fact, it was exactly what I did when I was faced with a complex programming challenge.”&lt;/p&gt;
      &lt;p&gt;Igor Tulchinsky, talking about how he came to work at Timber Hill (a Connecticut prop trading firm) in The Unrules&lt;/p&gt;
      &lt;p&gt;"Intentionally isolated, he said, 'a quiet oasis of serenity.'&lt;/p&gt;
      &lt;p&gt;Serene for him, maybe, but his personality mangled whatever peace the rest of them could have enjoyed. The place was suffused with Gross's clinical insecurity that someone might catch up, that someone might threaten Pimco's dominance.&lt;/p&gt;
      &lt;p&gt;No moment wasted, no dollar left unsqueezed. This was the dominant culture, trickled down from the trade floor: Gross's 'Pimbots' ground their teeth in their sleep and woke up screaming: their marriages and livers disintegrated. It was precisely that they were so intensely obsessive, going beyond what everyone else did, that made them so great, they had to convince themselves...&lt;/p&gt;
      &lt;p&gt;Failure to deliver wasn't tolerated. Pimco would sniff out anyone's weakness."&lt;/p&gt;
      &lt;p&gt;Mary Childs discussing Bill Gross’s decision to locate Pimco in Newport Beach, in The Bond King&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;&lt;lb/&gt; And finally, a quote that hits the nail on the head - even though it doesn’t come from a trader:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;"A man has to live and sleep with his business if he wants to make a go of it. You have to take it home with you at night, so you can lie there in the darkness and figure out what you can do to improve it. In fact, you have to become sort of a 'nut' about it, so that you become so enthused that you will bore your friends talking about it. You have to be a one-man crusade."&lt;/p&gt;
      &lt;p&gt;George Mecherle’s answer to the question, “what is the secret of your success?”, in The Farmer from Merna&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Nassim Taleb once said, "unless you're a trader, don't trade. Unless you're a baker, don't bake. Unless you're a dynamite maker, don't make dynamite." I think unless you can see yourself in at least some of those quotes, you probably shouldn’t be a trader.&lt;/p&gt;
    &lt;p&gt;I once spent a huge amount of effort on something in which I had zero natural talent.&lt;/p&gt;
    &lt;p&gt;I started playing rugby at seven years old. I was always pretty useless, but I always tried really hard. I remember deciding age 12 that I wanted to be better, so one day, at my (boarding) prep school, I woke up early, got a tackle bag, and started doing tackle practice - on my own, at 7am. A teacher walked by, and said ‘what are you doing?’ Slightly sheepishly, I packed up the bag and went back inside. I didn’t get picked to go on the rugby tour, and never played for the U13 A team. When I went to secondary school, I was, again, rubbish - I think at one point I played for the U14 D team. And then, in October 2014, Bath, my favourite rugby union team, signed Sam Burgess: the Yorkshire-born Australian rugby league star. I watched his documentary on YouTube, and it changed my life. The Russell Crowe narration at the start made a huge impression on me:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;“Now I have this theory about a certain kind of player. Like a Ron Coote, a Steve Menzies, a Gorden Tallis. I call it the Sparkly-Eyed Man. He’s a man who can be as vicious as he needs to be over the course of eighty minutes to get a result for his team. And the moment that final whistle is blown he’s a completely different person. He’s able to laugh easily, he’s good with kids, respectful to women, and he appreciates life. Which is why he’s the Sparkly-Eyed Man. He has that thing built within him to never quit, and if you’re going to do something, you do it to the absolute utmost of your ability. Those sparkly-eyed men, they carve their names deep in Rugby League.”&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Sam Burgess won the 2014 NRL Grand Final with South Sydney, just before he left for Bath. He broke his cheekbone in the opening tackle of the game, was man of the match, and won the Bunnies their first premiership in 43 years.&lt;/p&gt;
    &lt;p&gt;This blew my mind. I wanted to be that guy. As a teenager, I absorbed all the sports motivational videos on YouTube. I watched this one, I watched this one, and this one above all. This stuff is burned into the back of my skull. I watched these things over and over again. I tried to figure out how to set them as an alarm.&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;“When you immerse yourself in your craft, you not studying to get a grade, you’re not playing to score points, you immerse yourself in it, so you become it, you gon’ go to another level.&lt;/p&gt;&lt;lb/&gt;The most important thing is this: to be able to sacrifice yourself at any moment, to sacrifice what you are, for what you will become. Listen to me. Pain is temporary. It may last for a minute, or an hour, or a day, or even a year, but eventually it will subside. And something else will take its place. You ain’t gon’ die. At the end of pain is success! You’re not gon’ die because you’re feeling a little pain! I dare you to take a little pain. I dare you.&lt;lb/&gt;Your life is in your hand. You are the captain of your ship. You could have, you could be, you could do whatever you want to do, remember boy, if it was easy, everybody would do it. It’s what they eat, it’s what they sleep, it’s what they drink, it possesses them.”&lt;/quote&gt;
    &lt;p&gt; So I decided I was going to play for the school first XV. I had about two and a half years to get ready. Let’s be honest, there wasn’t that much pain involved in that process - not like the pain Ray Lewis, who’s quoted in the speech above, had growing up. But this was the most difficult a quest I could find. A lot of people told me I couldn’t do it - my tutor, the U16A coach, told me I’d never play for the first XV.&lt;lb/&gt; I ate so much food I vomited. I drank a gallon of milk a day. I did squats until my nose bled. Here’s me, age 16, pulling 180 at Villain Strength in Mill Hill; and age 17, squatting 140x5 in my South Sydney jersey.&lt;/p&gt;
    &lt;p&gt;And ultimately, it worked. I played a few games for the XV. I proved the doubters wrong. I achieved my goal. And I was still actually pretty useless at rugby.&lt;/p&gt;
    &lt;p&gt; I knew what it felt like to be effortlessly good at something, because I had that academically; when it came to maths tests, spelling bees, quizzes - I just had it. “Do you know how easy this is for me? Do you have any fucking idea how easy this is? This is a fucking joke! And I'm sorry you can't do this, I really am because I wouldn't have to fucking sit here and watch you fumble around and fuck it up.” In the classroom, I was Will Hunting; on the rugby pitch, I fumbled around and fucked it up. &lt;lb/&gt; It didn’t matter that I’d spent three years getting bigger and stronger and fitter and faster - I still wasn’t anywhere near the level of the players with actual talent. They could see the game, they knew how to be in the right place at the right time, they could throw the final pass - and I had spent enough time trying to be like that that I knew I never could. I spent 8 years at school with a guy who’s probably going to be an Olympic hurdler this year; he had talent. And so it didn’t matter how many Tri-Nations games I watched or how many pushups I did, because I’d never get it like they did. I had worked as hard as I could, and it wasn’t ever going to be good enough.&lt;lb/&gt; That was my Scott Alexander sweating blood experience. I learned what it felt like to stick with something. But my learning from that experience was that next time I should make sure I sweated blood working on a strength. Do more of what comes naturally.&lt;/p&gt;
    &lt;p&gt; I’ve spent the last few years trying to figure out what that is. I studied linear algebra, I read Marsilius of Padua, I wrote essays, I wrote SQL, I managed ad campaigns, I travelled the world selling software, I hired and fired a team, I tried to respond to messages in 10 seconds, I networked my way into industries and learned what makes them tick, and I raised some venture capital. Some of that felt natural; some of it didn’t. I’m still looking for what comes next. &lt;lb/&gt; I was in LA last week, on a mission to meet great people. The best person I met was the World’s Strongest Man, Martins Licis, at his gym in El Segundo. It was a complete accident; I didn’t know he was there, and I didn’t expect to work out that day. But the reason I was able to walk in and learn strongman from the best in the world was all those hours spent under a bar, squatting until my nose bled. &lt;lb/&gt; So I guess it’s ok to bake bread even if you’re not a baker - we’re all allowed hobbies. Just don’t make it your full-time job. &lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.felixstocker.com/blog/talent"/><published>2025-10-16T17:47:19+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45608795</id><title>test-ipv6.com will stay online</title><updated>2025-10-16T21:31:55.915072+00:00</updated><content>&lt;doc fingerprint="6e39dbdd18ab35e0"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Update: test-ipv6.com will stay online!&lt;/head&gt;
    &lt;p&gt;After announcing its retirement, many generous people and organizations offered help - thank you! The project is now transitioning to an RIR (Regional Internet Registry), which will continue running the site in the public interest. I'll share updates as things progress.&lt;/p&gt;
    &lt;head&gt;Click to see the previous message&lt;/head&gt;
    &lt;head rend="h2"&gt;Previous message&lt;/head&gt;
    &lt;p&gt;TL;DR: I will retire test-ipv6.com in December 2025.&lt;/p&gt;
    &lt;p&gt;I have provided test-ipv6.com to the public since 2010. I've sunk significant resources - engineering, support, equipment, and hosting fees - into what is a revenue-free product.&lt;/p&gt;
    &lt;p&gt;Without going into details: I feel now is the time for me to refocus my resources within the family.&lt;lb/&gt; I hope people will understand, and respect this decision.&lt;/p&gt;
    &lt;p&gt;I am shutting the site down, with a target of "during winter break" (December) 2025.&lt;/p&gt;
    &lt;p&gt;Mirror operators: Should you wish to keep your mirrors up, they will stop getting updates in December.&lt;/p&gt;
    &lt;p&gt;Service providers: If you have runbooks for your support team based on this site, or based on RIPE-631, you'll need to update those.&lt;/p&gt;
    &lt;p&gt;FAQ:&lt;/p&gt;
    &lt;p&gt;Q: Will I (jfesler) transfer the source?&lt;/p&gt;
    &lt;p&gt;A: These portions are already public.&lt;/p&gt;
    &lt;p&gt;These are already public.&lt;lb/&gt; http://github.com/falling-sky/source&lt;lb/&gt; https://github.com/falling-sky/fsbuilder - used to build what's in source&lt;lb/&gt; https://github.com/falling-sky/mod_ip - the /ip/ handler for Apache&lt;lb/&gt; https://github.com/falling-sky/mtu1280d - the synthetic MTU180 netfilter daemon.&lt;/p&gt;
    &lt;p&gt;The remaining parts, such as geolocation and service provider lookups, I am contractually unable to release. Please do not ask.&lt;/p&gt;
    &lt;p&gt;Q: What about monitoring and validation?&lt;/p&gt;
    &lt;p&gt;Delan Azabani has shared with me https://codeberg.org/shuppy/fallen-sky, which includes a standalone validator.&lt;/p&gt;
    &lt;p&gt;Q: Will I (jfesler) transfer the domain?&lt;/p&gt;
    &lt;p&gt;A: I'd consider a reputable RIR or NIC organization serving the public interest taking things over.&lt;/p&gt;
    &lt;p&gt;Q: Should mirrors be retired?&lt;/p&gt;
    &lt;p&gt;A: I would suggest it. Once the primary site is retired, I will stop monitoring the functionality of your mirror, and stop providing geolocation and service provider lookups.&lt;/p&gt;
    &lt;p&gt;Q: I have more questions or comments!&lt;/p&gt;
    &lt;p&gt;A: If we ever meet for coffee or beer, ask me then.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://status.test-ipv6.com"/><published>2025-10-16T18:13:21+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45608887</id><title>A conspiracy to kill IE6 (2019)</title><updated>2025-10-16T21:31:55.773236+00:00</updated><content>&lt;doc fingerprint="37659024b9a457cb"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;A Conspiracy To Kill IE6&lt;/head&gt;
    &lt;p&gt;The bittersweet consequence of YouTube’s incredible growth is that so many stories will be lost underneath all of the layers of new paint. This is why I wanted to tell the story of how, ten years ago, a small team of web developers conspired to kill IE6 from inside YouTube and got away with it.&lt;/p&gt;
    &lt;p&gt;I do not recall the exact triggering event that led to our web development team laying out plans to kill IE6 over lunch in the YouTube cafeteria. Perhaps it was the time I pushed out a CSS stylesheet that included an attribute selector on a semi-supported HTML element. Any reasonable web developer would expect this to be ignored by browsers not up to the task. This was not the case with older flavors of IE. Under very specific conditions, an attribute selector on an unsupported HTML element in IE would create an internal recursion that would at best, cause the browser to crash and at worst, trigger a blue screen of death. Or perhaps it was the hundredth time one of our software engineers had innocently pushed out an &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag with an empty src attribute. Nobody joining the team could be expected to know that in early versions of IE, the browser would load the root path “/” for empty src attributes. The &lt;code&gt;&amp;lt;img&amp;gt;&lt;/code&gt; tag would suddenly behave like an &lt;code&gt;&amp;lt;iframe&amp;gt;&lt;/code&gt;, loading our homepage and all of its dependent resources in what could become an exponentially expanding recursive loop. Whenever an empty image tag found its way on to the homepage, it was all-hands-on-deck emergency to locate and replace the offending code before we melted our servers into paperweights.&lt;/p&gt;
    &lt;p&gt;Regardless of whatever the event at that time was, it had been brutal and it had been IE6 related. IE6 had been the bane of our web development team’s existence. At least one to two weeks every major sprint cycle had to be dedicated to fixing new UI that was breaking in IE6. Despite this pain, we were told we had to continue supporting IE6 because our users might be unable to upgrade or might be working at companies that were locked in. IE6 users represented around 18% of our user base at that point. We understood that we could not just drop support for it. However, sitting in that cafeteria, having only slept about a few hours each in the previous days, our compassion for these users had completely eroded away. We began collectively fantasizing about how we could exact our revenge on IE6. One idea rose to the surface that quickly captured everyone’s attention. Instead of outright dropping IE6 support, what if we just threatened to? How would users react? Would they revolt against YouTube? Would they mail death threats to our team like had happened in the past? Or would they suddenly become loud advocates of modern browsers? We openly daydreamed about cubicle workers around the world suddenly inventing creative “business” reasons for needing upgraded browsers. Grandparents would hold their technically savvy grand-kids hostage, demanding they fix their “YouTubes”. What had begun as a team therapy session started to materialize into an actual plan, a plan we quickly realized we were uniquely positioned to execute on.&lt;/p&gt;
    &lt;p&gt;The plan was very simple. We would put a small banner above the video player that would only show up for IE6 users. It would read “We will be phasing out support for your browser soon. Please upgrade to one of these more modern browsers.” Next to the text would be links to the current versions of the major browsers, including Chrome, Firefox, IE8 and eventually, Opera. The text was intentionally vague and the timeline left completely undefined. We hoped that it was threatening enough to motivate end users to upgrade without forcing us to commit to any actual deprecation plan. Users would have the ability to close out this warning if they wanted to ignore it or deal with it later. The code was designed to be as subtle as possible so that it would not catch the attention of anyone monitoring our checkins. Nobody except the web development team used IE6 with any real regularity, so we knew it was unlikely anyone would notice our banner appear in the staging environment. We even delayed having the text translated for international users so that a translator asking for additional context could not inadvertently surface what we were doing. Next, we just needed a way to slip the code into production without anyone catching on.&lt;/p&gt;
    &lt;p&gt;It turned out that a handful of us had entered YouTube at an interesting time… several months after YouTube had been acquired by Google but before Google had begun deeply integrating YouTube into their larger organization. The early YouTube engineers were rightfully territorial and initially hesitant to adapt to Google’s infrastructure and norms. With their penchants for gray-hat hacking, fast cars, and hard whiskey and an uncommon number of piercings, tattoos, and minor arrest records, many had been rejected during previous Google interviews. Ending up at YouTube instead, they found themselves breaking their backs to stay ahead of exponentially growing traffic while having to constantly defend against critics explaining how Google Video would imminently kill them. By the time they were acquired into Google, many of these engineers had come to view their outcast identity as a critical component of their eventual success.&lt;/p&gt;
    &lt;p&gt;To cement their authority over the YouTube codebase during the integration into Google, the early engineers created a specialized permission set called “OldTuber”. OldTuber granted you the ability to completely bypass the new Google-oriented code enforcement policies, enabling anyone holding it to commit code directly to the YouTube codebase, with only the most glancing of code reviews from anyone. No need for code readability. No need for exhaustive tests. No need for maintaining code coverage. If you broke the site by improperly wielding OldTuber status, it was on your head and you would lose the privilege immediately, if not your job. So you just had to be a good citizen and never break the site. Our boss, an early YouTube engineer himself, had gone out of his way to ingratiate the web development team with the rest of the early YouTube engineers. Through his efforts, a couple of us eventually found ourselves in possession of OldTuber status, despite never having been a part of the original team. It was like we were just walking down the street when someone mistook us for valets and handed us the keys to their Ferrari. For better or for worse, we were not exactly the types to just hand the keys back and walk away. We saw an opportunity in front of us to permanently cripple IE6 that we might never get again. If this went at all wrong, a number of us would surely be fired. Our most renegade web developer, an otherwise soft-spoken Croatian guy, insisted on checking in the code under his name, as a badge of personal honor, and the rest of us leveraged our OldTuber status to approve the code review. The code merged into production and our banner went live a few days later.&lt;/p&gt;
    &lt;p&gt;The first person to come by our desks was the PR team lead. He was a smart, dapper man who was always bubbling with energy and enthusiasm. Except this time. This time he was uncharacteristically prickly. He had come in on an otherwise normal day to find email from every major tech news publication asking why the second largest website on the planet was threatening to cut off access to nearly a fifth of its user base. Fortunately for us, the publications had already settled on a narrative that this was a major benefit to the Internet. By their call, YouTube was leading the charge towards making the web a faster, safer experience for all of its users. The entire PR team had Macs running Chrome and could not even see what we had done, let alone issue comments to the press on any of it. They were caught completely unaware. We eagerly told them everything about what we had launched and helped them craft the necessary talking points to expand on the narrative already established by the media. Satisfied that he could get back in front of the story, the PR team lead turned and warned us to never do anything like this without telling him first. He did not want to let great public relations opportunities like this slip by ever again.&lt;/p&gt;
    &lt;p&gt;Next came the lawyers. Two senior lawyers sprinted over to our desks in a state of buttoned-down panic. They immediately demanded that we remove the banner. We explained how we would need the SREs to do an emergency push and that it would take at least a few hours to do. Frustrated, one of the lawyers asked “Why did you have to put Chrome first?” Confused, I explained that we did not give any priority to Chrome. Our boss, in on the conspiracy with us, had thoughtfully recommended that we randomize the order of the browsers listed and then cookie the random seed for each visitor so that the UI would not jump around between pages, which we had done. As luck would have it, these two lawyers still used IE6 to access certain legacy systems and had both ended up with random seeds that placed Chrome in the first position. Their fear was that by showing preferential treatment to Chrome, we might prick the ears of European regulators already on the lookout for any anti-competitive behavior. While the lawyers conceded that nothing we had done would have likely risen to that level of offense, it had happened on their watch and they did not appreciate that. I repeatedly cleared the cookies in my copy of IE6 and showed the browsers reshuffling with each refresh. Content with the demonstration, the lawyers quickly retreated back to their desks without any further concerns.&lt;/p&gt;
    &lt;p&gt;I expected the next people to be the engineering managers and that they would be the angriest given how clearly we had abused our OldTuber status. Suspiciously, nobody came by that day. The next day, a handful of engineers stopped by to congratulate us on the launch of the banner after reading articles around the Internet, but that was it. I asked my boss if he was getting any blowback and he shrugged, indicating that nobody had pulled him aside yet. It seemed that for the moment we were in the clear. Surprised and unable to make sense of this, I probed one of the managers about what he thought about the banner launching. He responded “Oh, I just figured you guys copied the banner that Google Docs had put up.” I was confused. How could Google Docs have beaten us to the punch on this? I opened up Google Docs in IE6 and sure enough, a banner very much like ours was showing at the top. It implored their users to upgrade to avoid breaking features in terms similarly vague to ours.&lt;/p&gt;
    &lt;p&gt;I had met a few engineers on the Google Docs team while working on some shared Javascript libraries. I reached out to one and asked how they had arrived at the decision to launch their own banner. He explained to me that they had been wanting to deprecate IE6 support for a long time but their managers would not let them for the same reasons we had always heard. One of their engineers testing in IE6 had noticed the YouTube banner pretty shortly after it went live and immediately took it to their manager as evidence as to why they should do the same. Shortly thereafter, the Google Docs engineers whipped up their own IE6 banner and pushed it into production, presumably under the mistaken assumption that we had done our diligence and had received all of the necessary approvals. The first time many Googlers heard chatter about IE6 banners was from email threads where other teams had begun asking if they could deprecate IE6 like Google Docs had. Luck would have it that this had included many of our managers. Amazingly, we had somehow bypassed detection as the originators of the IE6 banner inside of Google.&lt;/p&gt;
    &lt;p&gt;Eventually the YouTube engineering management did ask themselves how the decision to deprecate IE6 was ultimately made, given it happened so quickly and seemed conspicuously premature for a media site of our scale and with such a wide user base. Once they realized what had happened, they cornered our boss for details, grappled with the consequences of our actions and begrudgingly arrived at the conclusion that the ends had justified the means. Between YouTube, Google Docs, and several other Google properties posting IE6 banners, Google had given permission to every other site on the web to add their own. IE6 banners suddenly started appearing everywhere. Within one month, our YouTube IE6 user base was cut in half and over 10% of global IE6 traffic had dropped off while all other browsers increased in corresponding amounts. The results were better than our web development team had ever intended.&lt;/p&gt;
    &lt;p&gt;We somehow got away with our plan to kill IE6 without facing any meaningful corrective action. Few people even knew we were involved at all and those that did, did not want to bring attention to it or risk encouraging similar behavior. At a beer garden in San Francisco, our boss, winking his hardest, made us swear to never do anything like this again. We agreed, toasted IE6 falling into single digit percentages, and never snuck anything into production again.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://blog.chriszacharias.com/a-conspiracy-to-kill-ie6"/><published>2025-10-16T18:22:08+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45609922</id><title>Benjie's Humanoid Olympic Games</title><updated>2025-10-16T21:31:55.676001+00:00</updated><content/><link href="https://generalrobots.substack.com/p/benjies-humanoid-olympic-games"/><published>2025-10-16T19:51:47+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45610226</id><title>I Bypassed Amazon's Kindle Web DRM Because Their App Sucked</title><updated>2025-10-16T21:31:55.441435+00:00</updated><content>&lt;doc fingerprint="b6b0633189a2d7dd"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;How I Bypassed Amazon's Kindle Web DRM Because Their App Sucked&lt;/head&gt;
    &lt;p&gt;As it turns out they don't actually want you to do this (and have some interesting ways to stop you)&lt;/p&gt;
    &lt;head rend="h2"&gt;TL;DR&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;I bought my first ebook from amazon&lt;/item&gt;
      &lt;item&gt;Amazon's Kindle Android app was really buggy and crashed a bunch&lt;/item&gt;
      &lt;item&gt;Tried to download my book to use with a functioning reader app&lt;/item&gt;
      &lt;item&gt;Realized Amazon no longer lets you do that&lt;/item&gt;
      &lt;item&gt;Decided to reverse engineer their DRM system out of spite&lt;/item&gt;
      &lt;item&gt;Discovered multiple layers of protection including randomized alphabets&lt;/item&gt;
      &lt;item&gt;Defeated all of them with font matching wizardry&lt;/item&gt;
      &lt;item&gt;You can now download the books you own books with my code&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Part 1: Amazon Made This Personal&lt;/head&gt;
    &lt;head rend="h3"&gt;The One Time I Tried To Do Things The Right Way&lt;/head&gt;
    &lt;p&gt;I've been "obtaining" ebooks for years. But this ONE time, I thought: "Let's support the author."&lt;/p&gt;
    &lt;p&gt;Download Kindle app on Android. Open book.&lt;/p&gt;
    &lt;p&gt;Crash.&lt;/p&gt;
    &lt;head rend="h3"&gt;I Just Wanted To Read My Book&lt;/head&gt;
    &lt;p&gt;App crashes. Fine, I'll use the web reader.&lt;/p&gt;
    &lt;p&gt;Oh wait, can't download it for offline reading. What if I'm on a plane?&lt;/p&gt;
    &lt;p&gt;Hold on, I can't even export it to Calibre? Where I keep ALL my other books?&lt;/p&gt;
    &lt;p&gt;So let me get this straight:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;I paid money for this book&lt;/item&gt;
      &lt;item&gt;I can only read it in Amazon's broken app&lt;/item&gt;
      &lt;item&gt;I can't download it&lt;/item&gt;
      &lt;item&gt;I can't back it up&lt;/item&gt;
      &lt;item&gt;I don't actually own it&lt;/item&gt;
      &lt;item&gt;Amazon can delete it whenever they want&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This is a rental, not a purchase.&lt;/p&gt;
    &lt;head rend="h3"&gt;It Becomes Personal&lt;/head&gt;
    &lt;p&gt;I could've refunded and pirated it in 30 seconds. Would've been easier.&lt;/p&gt;
    &lt;p&gt;But that's not the point.&lt;/p&gt;
    &lt;p&gt;The point is I PAID FOR THIS BOOK. It's mine. And I'm going to read it in Calibre with the rest of my library even if I have to reverse engineer their web client to do it.&lt;/p&gt;
    &lt;head rend="h3"&gt;Reversal Time&lt;/head&gt;
    &lt;p&gt;Kindle Cloud Reader (the web version) actually works. While looking through the network requests, I spotted this:&lt;/p&gt;
    &lt;code&gt;https://read.amazon.com/renderer/render
&lt;/code&gt;
    &lt;p&gt;To download anything, you need:&lt;/p&gt;
    &lt;p&gt;1. Session cookies - standard Amazon login&lt;/p&gt;
    &lt;p&gt;2. Rendering token - from the startReading API call&lt;/p&gt;
    &lt;p&gt;3. ADP session token - extra auth layer&lt;/p&gt;
    &lt;p&gt;Sending the same headers and cookies the browser does returns a TAR file.&lt;/p&gt;
    &lt;head rend="h3"&gt;What's Inside The TAR?&lt;/head&gt;
    &lt;code&gt;page_data_0_4.json   # The "text" (spoiler: it's not text)
glyphs.json          # SVG definitions for every character
toc.json             # Table of contents
metadata.json        # Book info
location_map.json    # Position mappings&lt;/code&gt;
    &lt;head rend="h2"&gt;Part 3: Amazon's Obfuscation Layers of Ebook Hell&lt;/head&gt;
    &lt;p&gt;Downloaded the first few pages, expected to see text. Got this instead:&lt;/p&gt;
    &lt;code&gt;{
  "type": "TextRun",
  "glyphs": [24, 25, 74, 123, 91, 18, 19, 30, 4, ...],
  "style": "paragraph"
}&lt;/code&gt;
    &lt;p&gt;These aren't letters. They're glyph IDs. Character 'T' isn't Unicode 84, it's glyph 24.&lt;/p&gt;
    &lt;p&gt;And glyph 24 is just a series of numbers that define a stroke path, its just an image of a letter.&lt;/p&gt;
    &lt;p&gt;It's a substitution cipher! Each character maps to a non-sequential glyph ID.&lt;/p&gt;
    &lt;head rend="h3"&gt;The Alphabet Changes Every. Five. Pages.&lt;/head&gt;
    &lt;p&gt;Downloaded the next batch of pages. Same letter 'T' is now glyph 87.&lt;/p&gt;
    &lt;p&gt;Next batch? Glyph 142.&lt;/p&gt;
    &lt;p&gt;They randomize the entire alphabet on EVERY request.&lt;/p&gt;
    &lt;p&gt;This means:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;You can only get 5 pages at a time (API hard limit)&lt;/item&gt;
      &lt;item&gt;Each request gets completely new glyph mappings&lt;/item&gt;
      &lt;item&gt;Glyph IDs are meaningless across requests&lt;/item&gt;
      &lt;item&gt;You can't build one mapping table for the whole book&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;Let Me Show You How Bad This Is&lt;/head&gt;
    &lt;p&gt;For my 920-page book:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;184 separate API requests needed&lt;/item&gt;
      &lt;item&gt;184 different random alphabets to crack&lt;/item&gt;
      &lt;item&gt;361 unique glyphs discovered (a-z, A-Z, punctuation, ligatures)&lt;/item&gt;
      &lt;item&gt;1,051,745 total glyphs to decode&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;Fake Font Hints (They're Getting Sneaky)&lt;/head&gt;
    &lt;p&gt;Some SVG paths contained this garbage:&lt;/p&gt;
    &lt;code&gt;M695.068,0 L697.51,-27.954 m3,1 m1,6 m-4,-7 L699.951,-55.908 ...&lt;/code&gt;
    &lt;p&gt;Those tiny &lt;code&gt;m3,1 m1,6 m-4,-7&lt;/code&gt; commands? They're micro-MoveTo operations.&lt;/p&gt;
    &lt;p&gt;Why this is evil:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Browsers handle them fine (native Path2D)&lt;/item&gt;
      &lt;item&gt;Python SVG libraries create spurious connecting lines&lt;/item&gt;
      &lt;item&gt;Makes glyphs look corrupted when rendered naively&lt;/item&gt;
      &lt;item&gt;Breaks path-sampling approaches&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This is deliberate anti-scraping. The glyphs render perfectly in browser but make it so we cant just compare paths in our parser.&lt;/p&gt;
    &lt;p&gt;Take a look&lt;/p&gt;
    &lt;p&gt;Eventually I figured out that filling in the complete path mitigated this.&lt;/p&gt;
    &lt;head rend="h3"&gt;Multiple Font Variants&lt;/head&gt;
    &lt;p&gt;Not just one font. FOUR variants:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;bookerly_normal (99% of glyphs)&lt;/item&gt;
      &lt;item&gt;bookerly_italic (emphasis)&lt;/item&gt;
      &lt;item&gt;bookerly_bold (headings)&lt;/item&gt;
      &lt;item&gt;bookerly_bolditalic (emphasized headings)&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Plus special ligatures: ff, fi, fl, ffi, ffl&lt;/p&gt;
    &lt;p&gt;More variations = more unique glyphs to crack = more pain.&lt;/p&gt;
    &lt;head rend="h3"&gt;OCR Is Mid (My Failed Attempt)&lt;/head&gt;
    &lt;p&gt;Tried running OCR on rendered glyphs. Results:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;178/348 glyphs recognized (51%)&lt;/item&gt;
      &lt;item&gt;170 glyphs failed completely&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;OCR just sucks at single characters without context. Confused 'l' with 'I' with '1'. Couldn't handle punctuation. Gave up on ligatures entirely.&lt;/p&gt;
    &lt;p&gt;OCR needs words and sentences to work well. Single characters? Might as well flip a coin.&lt;/p&gt;
    &lt;head rend="h2"&gt;Part 4: The Solution That Actually Worked&lt;/head&gt;
    &lt;p&gt;Every request includes `glyphs.json` with SVG path definitions:&lt;/p&gt;
    &lt;code&gt;{
  "24": {
    "path": "M 450 1480 L 820 1480 L 820 0 L 1050 0 L 1050 1480 ...",
    "fontFamily": "bookerly_normal"
  },
  "87": {
    "path": "M 450 1480 L 820 1480 L 820 0 L 1050 0 L 1050 1480 ...",
    "fontFamily": "bookerly_normal"
  }
}&lt;/code&gt;
    &lt;p&gt;Glyph IDs change, but SVG shapes don't.&lt;/p&gt;
    &lt;head rend="h3"&gt;Why Direct SVG Comparison Failed&lt;/head&gt;
    &lt;p&gt;First attempt: normalize and compare SVG path coordinates.&lt;/p&gt;
    &lt;p&gt;Failed because:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Coordinates vary slightly&lt;/item&gt;
      &lt;item&gt;Path commands represented differently&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;Pixel-Perfect Matching&lt;/head&gt;
    &lt;p&gt;Screw coordinate comparison. Let's just render everything and compare pixels.&lt;/p&gt;
    &lt;p&gt;1. Render every SVG as an image&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Use cairosvg (lets us handle those fake font hints correctly)&lt;/item&gt;
      &lt;item&gt;Render at 512 x 512px for accuracy&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;2. Generate perceptual hashes&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Hash each rendered image&lt;/item&gt;
      &lt;item&gt;The hash becomes the unique identifier&lt;/item&gt;
      &lt;item&gt;Same shape = same hash, regardless of glyph ID&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;3. Build normalized glyph space&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Map all 184 random alphabets to hash-based IDs&lt;/item&gt;
      &lt;item&gt;Now glyph "a1b2c3d4..." always means letter 'T'&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;4. Match to actual characters&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Download Bookerly TTF fonts&lt;/item&gt;
      &lt;item&gt;Render every character (A-Z, a-z, 0-9, punctuation)&lt;/item&gt;
      &lt;item&gt;Use SSIM (Structural Similarity Index) to match&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;Why SSIM Is Perfect For This&lt;/head&gt;
    &lt;p&gt;SSIM compares image structure, not pixels directly. It handles:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Slight rendering differences&lt;/item&gt;
      &lt;item&gt;Anti-aliasing variations&lt;/item&gt;
      &lt;item&gt;Minor scaling issues&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;For each unknown glyph, find the TTF character with highest SSIM score. That's your letter.&lt;/p&gt;
    &lt;head rend="h3"&gt;Handling The Edge Cases&lt;/head&gt;
    &lt;p&gt;Ligatures: ff, fi, fl, ffi, ffl&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;These are single glyphs for multiple characters&lt;/item&gt;
      &lt;item&gt;Had to add them to TTF library manually&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Special characters: em-dash, quotes, bullets&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Extended character set beyond basic ASCII&lt;/item&gt;
      &lt;item&gt;Matched against full Unicode range in Bookerly&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Font variants: Bold, italic, bold-italic&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Built separate libraries for each variant&lt;/item&gt;
      &lt;item&gt;Match against all libraries, pick best score&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Part 5: The Moment It All Worked&lt;/head&gt;
    &lt;head rend="h3"&gt;Final Statistics&lt;/head&gt;
    &lt;code&gt;=== NORMALIZATION PHASE ===
Total batches processed: 184
Unique glyphs found: 361
Total glyphs in book: 1,051,745

=== MATCHING PHASE ===
Successfully matched 361/361 unique glyphs (100.00%)
Failed to match: 0 glyphs
Average SSIM score: 0.9527

=== DECODED OUTPUT ===
Total characters: 5,623,847
Pages: 920&lt;/code&gt;
    &lt;p&gt;Perfect. Every single character decoded correctly.&lt;/p&gt;
    &lt;head rend="h3"&gt;EPUB Reconstruction With Perfect Formatting&lt;/head&gt;
    &lt;p&gt;The JSON includes positioning for every text run:&lt;/p&gt;
    &lt;code&gt;{
  "glyphs": [24, 25, 74],
  "rect": {"left": 100, "top": 200, "right": 850, "bottom": 220},
  "fontStyle": "italic",
  "fontWeight": 700,
  "fontSize": 12.5,
  "link": {"positionId": 7539}
}&lt;/code&gt;
    &lt;p&gt;I used this to preserve:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Paragraph breaks (Y-coordinate changes)&lt;/item&gt;
      &lt;item&gt;Text alignment (X-coordinate patterns)&lt;/item&gt;
      &lt;item&gt;Bold/italic styling&lt;/item&gt;
      &lt;item&gt;Font sizes&lt;/item&gt;
      &lt;item&gt;Internal links&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The final EPUB is near indistinguishable from the original!&lt;/p&gt;
    &lt;head rend="h2"&gt;The Real Conclusion&lt;/head&gt;
    &lt;p&gt;Amazon put real effort into their web DRM.&lt;/p&gt;
    &lt;head rend="h3"&gt;Was It Worth It?&lt;/head&gt;
    &lt;p&gt;To read one book? No.&lt;/p&gt;
    &lt;p&gt;To prove a point? Absolutely.&lt;/p&gt;
    &lt;p&gt;To learn about SVG rendering, perceptual hashing, and font metrics? Probably yes.&lt;/p&gt;
    &lt;head rend="h3"&gt;Use This Knowledge Responsibly&lt;/head&gt;
    &lt;p&gt;This is for backing up books YOU PURCHASED.&lt;/p&gt;
    &lt;p&gt;Don't get me sued into oblivion thanks.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://blog.pixelmelt.dev/kindle-web-drm/"/><published>2025-10-16T20:22:48+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45610523</id><title>Cloudflare Sandbox SDK</title><updated>2025-10-16T21:31:55.237696+00:00</updated><link href="https://sandbox.cloudflare.com/"/><published>2025-10-16T20:51:27+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45610620</id><title>Hacker News – The Good Parts</title><updated>2025-10-16T21:31:55.068888+00:00</updated><content>&lt;doc fingerprint="f6251b930d3dc386"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Hacker News - The Good Parts&lt;/head&gt;
    &lt;p&gt;The other day, my twelve-year-old daughter asked me what platform I spend most of my time on when I'm on my phone or computer. She intuitively noticed that it must be some kind of nerd stuff since it looks so odd and doesn't resemble Instagram, TikTok, Snapchat, etc., which she knows but luckily refrains from using herself — yet.&lt;/p&gt;
    &lt;p&gt;For those of you who are curious, here is my explanation of what Hacker News is, why I like it, and what sets it apart from the others. I deliberately left out the negative aspects for a different article, so be warned that this is a one-sided view only1.&lt;/p&gt;
    &lt;head rend="h2"&gt;Explanation&lt;/head&gt;
    &lt;p&gt;HN is a website where any registered user can submit links to other websites. Each link is given a single-line title, which is usually the title of the original resource. Other users can vote up such submissions or comment on them. Highly upvoted submissions are listed on the front page. The same holds true for comments: Users can vote on them (and now also downvote) or comment on them. There are some minor nuances, but this is the core functionality.&lt;/p&gt;
    &lt;p&gt;The HN Guidelines are concise and to the point — there isn't much to add.&lt;/p&gt;
    &lt;p&gt;However, I would like to share what I find most notable about the concept and the result.&lt;/p&gt;
    &lt;head rend="h3"&gt;Content shall satisfy "intellectual curiosity"&lt;/head&gt;
    &lt;p&gt;The majority of submissions are in the broad category of information technology. When it comes to different disciplines, you will find submissions on very general, high-level topics and foundational and basic material. You will also find very detailed, in-depth, and niche content, which definitely qualifies as one interpretation of the term "hacker," referring to someone with an in-depth knowledge of a specific technical topic. However, there are also interesting finds from philosophy, business, history, archaeology, biology, mathematics, literature, and linguistics, which cover the full range of content depth. The best part? No politics, trivia, or spam. Mainstream media news is rare and only included if it provides a long-term perspective on a governing topic from any of the aforementioned fields.&lt;/p&gt;
    &lt;p&gt;Side note: Death notices of notable people in the above field may result in a black banner. It is not uncommon to see comments from past acquaintances of the deceased, which serve as a special form of obituary.&lt;/p&gt;
    &lt;p&gt;Niche and mainstream topics are covered as long as they stimulate intellectual curiosity. The benefit of this spectrum is that you are neither siloed in an obscure filter bubble nor bored by common mainstream conformity.&lt;/p&gt;
    &lt;head rend="h3"&gt;Moderation&lt;/head&gt;
    &lt;p&gt;Two dedicated human moderators, dang and tomhow, take care of the platform — and it shows. When a post is down-voted or flagged, a self-cleaning procedure is triggered by other users, so quality posts and comments tend to float to the top.&lt;/p&gt;
    &lt;head rend="h3"&gt;Reach&lt;/head&gt;
    &lt;p&gt;Although the platform is based in Silicon Valley, the discussions ripple through the Western tech world. California, USA and the rest of the world. Rare finds from exotic locations around the world pop up from time to time, provided they are in English.&lt;/p&gt;
    &lt;p&gt;There are many heavy users who have gained fame both inside and outside of HN. Many tech-related CEOs and founders are present and contribute if their product is mentioned. More importantly, almost any submitted topic has experts who share their knowledge or experience in an unpretentious way.&lt;/p&gt;
    &lt;head rend="h3"&gt;Inspiration and Surprise&lt;/head&gt;
    &lt;p&gt;There is always an interesting link available. The comments are often more valuable because they guide you through complex topics, offer alternatives, keep facts straight, and challenge opinions. Real information is conveyed when it contains surprises, and there are plenty to be found in most threads.&lt;/p&gt;
    &lt;head rend="h3"&gt;Humility&lt;/head&gt;
    &lt;p&gt;The username is the sole representation of one's ego. Users can provide more information in their "About" section, but this does not hinder a good discussion and is probably not even clicked on by most readers. HN is also text-only. There is no multimedia or distractions. The platform and the mindset of most users are focused on signal, not noise. You can read about ego defaults in some comments, but any unsubstantial contribution is either downvoted or flagged so as not to spoil the reading experience, or balanced by a quality argument.&lt;/p&gt;
    &lt;head rend="h2"&gt;The good, the true and the beauty&lt;/head&gt;
    &lt;p&gt;In conclusion, HN is a great space for discovering things, following interesting discussions, learning, and exchanging ideas with others, whether they are like-minded or opposed.&lt;/p&gt;
    &lt;p&gt;As far as I know, it is the only "social network" that allows you to grow intellectually through participation. This is probably the highest compliment an internet platform can receive in 2025.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Of course, there are some very specific negative opinions and points of criticism about the site. However, I am postponing my personal opinion on this topic until another article to steer any discussions in a positive direction for the time being. The positive aspects are so predominant that they deserve to be explained first.↩&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://smartmic.bearblog.dev/why-hacker-news/"/><published>2025-10-16T21:02:11+00:00</published></entry></feed>