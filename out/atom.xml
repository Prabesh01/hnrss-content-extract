<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><id>hnrss.org/frontpage</id><title>Hacker News: Front Page</title><updated>2025-10-27T20:37:13.033977+00:00</updated><link href="https://news.ycombinator.com/" rel="alternate"/><link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml" rel="self"/><generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator><subtitle>Hacker News RSS</subtitle><entry><id>https://news.ycombinator.com/item?id=45720376</id><title>10M people watched a YouTuber shim a lock; the lock company sued him – bad idea</title><updated>2025-10-27T20:37:21.706112+00:00</updated><content>&lt;doc fingerprint="8fdd9d18d1b882d5"&gt;
  &lt;main&gt;
    &lt;p&gt;“Opening locks” might not sound like scintillating social media content, but Trevor McNally has turned lock-busting into online gold. A former US Marine Staff Sergeant, McNally today has more than 7 million followers and has amassed more than 2 billion views just by showing how easy it is to open many common locks by slapping, picking, or shimming them.&lt;/p&gt;
    &lt;p&gt;This does not always endear him to the companies that make the locks.&lt;/p&gt;
    &lt;p&gt;On March 3, 2025, a Florida lock company called Proven Industries released a social media promo video just begging for the McNally treatment. The video was called, somewhat improbably, “YOU GUYS KEEP SAYING YOU CAN EASILY BREAK OFF OUR LATCH PIN LOCK.” In it, an enthusiastic man in a ball cap says he will “prove a lot of you haters wrong.” He then goes hard at Proven’s $130 model 651 trailer hitch lock with a sledgehammer, bolt cutters, and a crowbar.&lt;/p&gt;
    &lt;p&gt;Naturally, the lock hangs tough.&lt;/p&gt;
    &lt;p&gt;An Instagram user brought the lock to McNally’s attention by commenting, “Let’s introduce it to the @mcnallyofficial poke.” Someone from Proven responded, saying that McNally only likes “the cheap locks lol because they are easy and fast.” Proven locks were said to be made of sterner stuff.&lt;/p&gt;
    &lt;p&gt;But on April 3, McNally posted a saucy little video to social media platforms. In it, he watches the Proven promo video while swinging his legs and drinking a Juicy Juice. He then hops down from his seat, goes over to a Proven trailer hitch lock, and opens it in a matter of seconds using nothing but a shim cut from a can of Liquid Death. He says nothing during the entire video, which has been viewed nearly 10 million times on YouTube alone.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://arstechnica.com/tech-policy/2025/10/suing-a-popular-youtuber-who-shimmed-a-130-lock-what-could-possibly-go-wrong/"/><published>2025-10-27T12:42:42+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45721801</id><title>Pyrex catalog from from 1938 with hand-drawn lab glassware [pdf]</title><updated>2025-10-27T20:37:21.254988+00:00</updated><content/><link href="https://exhibitdb.cmog.org/opacimages/Images/Pyrex/Rakow_1000132877.pdf"/><published>2025-10-27T15:04:05+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45722069</id><title>It's insulting to read AI-generated blog posts</title><updated>2025-10-27T20:37:20.874278+00:00</updated><content>&lt;doc fingerprint="66c9d31b26b7b3bd"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;It's insulting to read your AI-generated blog post&lt;/head&gt;
    &lt;p&gt;It seems so rude and careless to make me, a person with thoughts, ideas, humor, contradictions and life experience to read something spit out by the equivalent of a lexical bingo machine because you were too lazy to write it yourself.&lt;/p&gt;
    &lt;p&gt;Do you not enjoy the pride that comes with attaching your name to something you made on your own? It's great!&lt;/p&gt;
    &lt;p&gt;No, don't use it to fix your grammar, or for translations, or for whatever else you think you are incapable of doing. Make the mistake. Feel embarrassed. Learn from it. Why? Because that's what makes us human!&lt;/p&gt;
    &lt;p&gt;Everyone wants to help each other. And people are far kinder than you may think. By adding a sterile robo-liaison between yourself and your readers, you don't give us a chance to engage with you.&lt;/p&gt;
    &lt;p&gt;Here is a secret: most people want to help you succeed. The problem is that you, yes, you are too afraid to ask for help. You think smart, capable people don't ask for help because they should know it all. Wrooooooooong. On the contrary, smart people know when to ask for help and when to give it too. They create mutually beneficial relationships with the people surrounding them.&lt;/p&gt;
    &lt;p&gt;I ask you, human to human, both as beings capable of love and fear and humor and all the other great feelings we have cultivated for thousands of years: leave the AI to your quantitative tasks if you have to use it at all. Face the world with your thoughts and enrich them through real-world experience. The best thoughts are the ones that have been felt, anyway.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://blog.pabloecortez.com/its-insulting-to-read-your-ai-generated-blog-post/"/><published>2025-10-27T15:27:38+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45722635</id><title>Show HN: Erdos – open-source, AI data science IDE</title><updated>2025-10-27T20:37:20.232650+00:00</updated><content>&lt;doc fingerprint="fe09e69eaaad09cb"&gt;
  &lt;main&gt;
    &lt;p&gt;0.2.0&lt;/p&gt;
    &lt;p&gt;10-27-2025&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Enable remote development (SSH and container)&lt;/item&gt;
      &lt;item&gt;Enable local model usage&lt;/item&gt;
      &lt;item&gt;Available on Windows ARM64&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Erdos — a next-generation data science IDE.&lt;/p&gt;
    &lt;p&gt;Fast, accurate Jupyter notebook edits&lt;/p&gt;
    &lt;p&gt;Erdos lets data scientists create, edit, and iterate on Jupyter notebooks faster and more accurately than ever before.&lt;/p&gt;
    &lt;p&gt;Plots pane&lt;/p&gt;
    &lt;p&gt;With the help of Erdos’s AI assistant, data scientists can use the plots pane to view, compare, and iterate on plots as their analyses evolve.&lt;/p&gt;
    &lt;p&gt;Integrated Docs Intelligence&lt;/p&gt;
    &lt;p&gt;Erdos’s AI assistant reads and interprets documentation from the help pane to deliver contextually accurate help, examples, and explanations.&lt;/p&gt;
    &lt;p&gt;You can use the Erdos IDE for free. We only charge for usage of the Erdos AI assistant. Light usage of the Erdos AI assistant is free, but higher limits require a subscription. Please visit our Pricing page to learn more.&lt;/p&gt;
    &lt;p&gt;0.2.0&lt;/p&gt;
    &lt;p&gt;10-27-2025&lt;/p&gt;
    &lt;p&gt;0.1.5&lt;/p&gt;
    &lt;p&gt;10-24-2025&lt;/p&gt;
    &lt;p&gt;0.1.4&lt;/p&gt;
    &lt;p&gt;10-22-2025&lt;/p&gt;
    &lt;p&gt;0.1.3&lt;/p&gt;
    &lt;p&gt;10-21-2025&lt;/p&gt;
    &lt;p&gt;0.1.2&lt;/p&gt;
    &lt;p&gt;10-20-2025&lt;/p&gt;
    &lt;p&gt;0.1.1&lt;/p&gt;
    &lt;p&gt;10-15-2025&lt;/p&gt;
    &lt;p&gt;0.1.0&lt;/p&gt;
    &lt;p&gt;10-13-2025&lt;/p&gt;
    &lt;p&gt;Try Erdos now.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.lotas.ai/erdos"/><published>2025-10-27T16:08:58+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45722639</id><title>Claude for Excel</title><updated>2025-10-27T20:37:19.932215+00:00</updated><content>&lt;doc fingerprint="3d3f8e961dffc20a"&gt;
  &lt;main&gt;
    &lt;p&gt;Piloting Claude for Excel&lt;/p&gt;
    &lt;p&gt;Claude understands your entire workbookâfrom nested formulas to multiple tab dependencies. Get explanations with cell-level citations, and update assumptions while preserving formulas. Now in beta as a research preview.&lt;/p&gt;
    &lt;head rend="h2"&gt;How teams use Claude for Excel&lt;/head&gt;
    &lt;p&gt;Claude listens carefully, follows instructions precisely, â¨and thinks through complex problems.&lt;/p&gt;
    &lt;head rend="h3"&gt;Get answers about any cell in seconds&lt;/head&gt;
    &lt;p&gt;Navigate complex models instantly. Ask Claude about specific formulas, entire worksheets, or calculation flows across tabs. Every explanation includes cell-level citations so you can verify the logic.&lt;/p&gt;
    &lt;head rend="h3"&gt;Test scenarios without breaking formulas&lt;/head&gt;
    &lt;p&gt;Update assumptions across your entire model while preserving all dependencies. Test different scenarios quicklyâClaude highlights every change with explanations for full transparency.&lt;/p&gt;
    &lt;head rend="h3"&gt;Debug and fix errors&lt;/head&gt;
    &lt;p&gt;Trace #REF!, #VALUE!, and circular reference errors to their source in seconds. Claude explains what went wrong and how to fix it without disrupting the rest of your model.&lt;/p&gt;
    &lt;head rend="h3"&gt;Build models or fill existing templates&lt;/head&gt;
    &lt;p&gt;Create draft financial models from scratch based on your requirements. Or populate existing templates with fresh data while maintaining all formulas and structure.&lt;/p&gt;
    &lt;p&gt;The Claude you trust, right in Excel&lt;/p&gt;
    &lt;head rend="h3"&gt;Transparency and visibility&lt;/head&gt;
    &lt;p&gt;See Claudeâs changes in real time with explanations&lt;/p&gt;
    &lt;head rend="h3"&gt;Formula integrity&lt;/head&gt;
    &lt;p&gt;Maintain Excel model structure and formatting&lt;/p&gt;
    &lt;head rend="h3"&gt;Enterprise security&lt;/head&gt;
    &lt;p&gt;Works within your existing compliance framework&lt;/p&gt;
    &lt;p&gt;FAQ&lt;/p&gt;
    &lt;p&gt;Claude for Excel is available in beta as a research preview through a waitlist for 1,000 Max, Team and Enterprise plan customers. Weâll gradually expand access as we build confidence through this limited preview.&lt;/p&gt;
    &lt;p&gt;Claude for Excel works within your existing security framework. Claude can make mistakes, so you should always review changes before finalizing, especially for client-facing deliverables.&lt;/p&gt;
    &lt;p&gt;Claude for Excel is currently in beta as a research preview, so itâs best for model analysis, assumption updates, error debugging, template population, formula explanations, multi-tab navigation. Claude doesnât have advanced Excel capabilities including pivot tables, conditional formatting, data validation, data tables, macros, and VBA. Weâre actively working on these features.&lt;/p&gt;
    &lt;p&gt;Yes, Claude is trained to recognize common financial modeling patterns, formula structures, and industry-standard calculations. However, always verify outputs match your specific methodologies.&lt;/p&gt;
    &lt;p&gt;Currently .xlsx and .xlsm files are supported. File size limits apply based on your Claude plan.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.claude.com/claude-for-excel"/><published>2025-10-27T16:09:22+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45722826</id><title>Show HN: JSON Query</title><updated>2025-10-27T20:37:19.752062+00:00</updated><content>&lt;doc fingerprint="481baa954fb0882b"&gt;
  &lt;main&gt;
    &lt;code&gt;name(argument1, argument2, ...)&lt;/code&gt;
    &lt;p&gt;A function is defined as a function name followed by comma separated arguments wrapped in round brackets. it is important to understand functions like &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;sort&lt;/code&gt;, and &lt;code&gt;max&lt;/code&gt; are executed as a method in a chain: the operation is applied to the data input, and forwarded to the next method in the chain (if any).&lt;/p&gt;
    &lt;p&gt;Examples:&lt;/p&gt;
    &lt;code&gt;sort(.address.city, "asc")&lt;/code&gt;
    &lt;code&gt;filter(.age &amp;gt;= 21) | sort(.age, "asc")&lt;/code&gt;
    &lt;p&gt;Documentation:&lt;/p&gt;
    &lt;p&gt;Function reference:&lt;/p&gt;
    &lt;code&gt;left operator right&lt;/code&gt;
    &lt;p&gt;JSON Query supports all basic operators. Operators must have both a left and right hand side. To override the default precedence, an operator can be wrapped in parentheses &lt;code&gt;(...)&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;Examples:&lt;/p&gt;
    &lt;code&gt;.age &amp;gt;= 18&lt;/code&gt;
    &lt;code&gt;filter(.age &amp;gt;= 18 and .age &amp;lt;= 65)&lt;/code&gt;
    &lt;p&gt;Documentation:&lt;/p&gt;
    &lt;p&gt;Operator reference:&lt;/p&gt;
    &lt;code&gt;query2 | query2 | ...&lt;/code&gt;
    &lt;p&gt;A pipe is an array containing a series of queries. The queries in the pipeline are executed one by one, and the output of the first is the input for the next.&lt;/p&gt;
    &lt;p&gt;Example:&lt;/p&gt;
    &lt;code&gt;filter(.age &amp;gt;= 18) | sort(.name)&lt;/code&gt;
    &lt;p&gt;Documentation:&lt;/p&gt;
    &lt;code&gt;{prop1: query1, prop2: query2, ...}&lt;/code&gt;
    &lt;p&gt;An object is defined as a regular JSON object with a property name as key, and a query as value. Objects can be used to transform data or to execute multiple query pipelines in parallel.&lt;/p&gt;
    &lt;p&gt;Example:&lt;/p&gt;
    &lt;code&gt;{
  names: map(.name),
  numberOfNames: size()
}&lt;/code&gt;
    &lt;p&gt;Documentation:&lt;/p&gt;
    &lt;code&gt;[query1, query2, ...]&lt;/code&gt;
    &lt;p&gt;An array is defined as a regular JSON array: enclosed in square brackets, with items separated by a comma.&lt;/p&gt;
    &lt;p&gt;Example:&lt;/p&gt;
    &lt;code&gt;filter(.city in ["New York", "Atlanta"])&lt;/code&gt;
    &lt;p&gt;Documentation:&lt;/p&gt;
    &lt;code&gt;.prop1.prop2&lt;/code&gt;
    &lt;p&gt;A property retrieves a property from an object. Multiple consecutive properties will retrieve a nested property.&lt;/p&gt;
    &lt;p&gt;Examples:&lt;/p&gt;
    &lt;code&gt;.age&lt;/code&gt;
    &lt;code&gt;.address.city&lt;/code&gt;
    &lt;code&gt;"first name"&lt;/code&gt;
    &lt;code&gt;get()&lt;/code&gt;
    &lt;code&gt;get("address", "city")&lt;/code&gt;
    &lt;p&gt;Documentation:&lt;/p&gt;
    &lt;code&gt;"string", number, boolean, null&lt;/code&gt;
    &lt;p&gt;JSON Query supports the following primitive values, the same as in JSON: &lt;code&gt;"string"&lt;/code&gt;, &lt;code&gt;number&lt;/code&gt;, &lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;Examples:&lt;/p&gt;
    &lt;code&gt;"Hello world"&lt;/code&gt;
    &lt;code&gt;"Multi line text\nwith \"quoted\" contents"&lt;/code&gt;
    &lt;code&gt;42&lt;/code&gt;
    &lt;code&gt;2.74&lt;/code&gt;
    &lt;code&gt;-1.2e3&lt;/code&gt;
    &lt;code&gt;true&lt;/code&gt;
    &lt;code&gt;false&lt;/code&gt;
    &lt;code&gt;null&lt;/code&gt;
    &lt;p&gt;Documentation:&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://jsonquerylang.org/"/><published>2025-10-27T16:22:52+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45722931</id><title>fnox, a secret manager that pairs well with mise</title><updated>2025-10-27T20:37:18.989484+00:00</updated><content>&lt;doc fingerprint="fb7f07ee0359b4a"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Introducing fnox: A secret manager that pairs well with mise #6779&lt;/head&gt;
    &lt;p&gt;-&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;p&gt;I'm excited to announce fnox – a new secret management tool designed to work seamlessly alongside mise in your development workflow.&lt;/p&gt;
          &lt;p&gt;While it's brand new, I have labeled it 1.0 since it seems pretty feature complete and given my experience with several experiments with secrets over the years with mise, I think will be a lot more stable than its young age would indicate.&lt;/p&gt;
          &lt;head&gt;What is fnox?&lt;/head&gt;
          &lt;p&gt;fnox (think "Fort Knox") is a command-line secret manager that handles encrypted and remote secrets for development, CI/CD, and production environments. It provides a unified interface for managing sensitive data through either local encryption or remote storage backends.&lt;/p&gt;
          &lt;head&gt;Why fnox?&lt;/head&gt;
          &lt;p&gt;While mise has built-in secret support (age encryption and sops), these work best for simple, file-based scenarios. For more complex production needs, fnox provides:&lt;/p&gt;
          &lt;head&gt;🚀 Developer-Friendly&lt;/head&gt;
          &lt;head&gt;👥 Team-Ready&lt;/head&gt;
          &lt;head&gt;Getting Started&lt;/head&gt;
          &lt;p&gt;Install fnox with mise:&lt;/p&gt;
          &lt;code&gt;$ mise use -g fnox
$ fnox --version&lt;/code&gt;
          &lt;p&gt;Create your first secret:&lt;/p&gt;
          &lt;code&gt;$ fnox init
$ fnox provider add age --id main --recipients ~/.ssh/id_ed25519.pub
$ fnox secret set API_KEY --value "your-secret-value" --provider main&lt;/code&gt;
          &lt;p&gt;Use secrets in your workflow:&lt;/p&gt;
          &lt;code&gt;# Export secrets as environment variables
$ fnox exec -- your-command

# Get a single secret
$ fnox get API_KEY

# Shell integration (auto-load secrets on cd)
$ fnox shell hook&lt;/code&gt;
          &lt;head&gt;How It Works with mise&lt;/head&gt;
          &lt;p&gt;fnox and mise work independently but complement each other:&lt;/p&gt;
          &lt;p&gt;A typical setup:&lt;/p&gt;
          &lt;code&gt;[env]
NODE_ENV = "development"
DATABASE_HOST = "localhost"

[tools]
node = "20"
fnox = "latest"&lt;/code&gt;
          &lt;code&gt;[providers.age]
type = "age"
recipients = ["age1ql3z7..."]

[secrets]
DATABASE_PASSWORD = { provider = "age", value = "AGE-SECRET-KEY..." }
API_KEY = { provider = "1password", ref = "op://dev/api/credential" }&lt;/code&gt;
          &lt;p&gt;Then use both together:&lt;/p&gt;
          &lt;code&gt;$ mise x -- fnox x -- npm start&lt;/code&gt;
          &lt;p&gt;Or you can activate one or the other in your shell to avoid that.&lt;/p&gt;
          &lt;head&gt;Why Separate Tools?&lt;/head&gt;
          &lt;p&gt;You might wonder why fnox isn't built into mise. The answer comes down to fundamental architectural constraints:&lt;/p&gt;
          &lt;p&gt;The Performance Problem: mise reloads its environment frequently (on directory changes, after commands, etc.). If secrets relied on remote calls to services like KMS or 1Password, each reload would require network requests, making mise unacceptably slow.&lt;/p&gt;
          &lt;p&gt;The Security Tradeoff: Caching could solve the performance issue, but introduces security risks:&lt;/p&gt;
          &lt;p&gt;The Architecture Challenge: Making mise skip reloading certain env vars would require a major architectural overhaul—a change that would complicate the codebase significantly.&lt;/p&gt;
          &lt;p&gt;By creating fnox as a separate tool with its own shell integration, we avoid these problems entirely. Each tool can focus on what it does best:&lt;/p&gt;
          &lt;head&gt;What's going to happen to mise secrets?&lt;/head&gt;
          &lt;p&gt;They're still marked as experimental so the future is technically up in the air. That said, mise does work well for age/sops encryption so I think it could probably come out of experimental. For now, I don't have plans to introduce remote secret backends like fnox provides.&lt;/p&gt;
          &lt;head&gt;Learn More&lt;/head&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Beta Was this translation helpful? Give feedback.&lt;/p&gt;
    &lt;head rend="h2"&gt;Replies: 1 comment 1 reply&lt;/head&gt;
    &lt;p&gt;-&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;p&gt;Since it's a verbatim copy of https://secretspec.dev, any chance of giving attribution?&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Beta Was this translation helpful? Give feedback.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/jdx/mise/discussions/6779"/><published>2025-10-27T16:29:38+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45723159</id><title>JetKVM – Control any computer remotely</title><updated>2025-10-27T20:37:18.763796+00:00</updated><content>&lt;doc fingerprint="af5976106919f929"&gt;
  &lt;main&gt;
    &lt;head rend="h2"&gt;Ultra-Low Latency&lt;/head&gt;
    &lt;p&gt;High-definition 1080p video at 60 FPS with 30-60 millisecond latency, using efficient H.264 encoding. Smooth mouse and keyboard action transfer for responsive remote interaction.&lt;/p&gt;
    &lt;head rend="h2"&gt;Free &amp;amp; Optional Cloud Access&lt;/head&gt;
    &lt;p&gt;Optional remote management via our open-source JetKVM Cloud using WebRTC. Privacy-first design with opt-in cloud access that provides secure and fast direct connections, even behind the most restrictive NAT environments, with our STUN and TURN servers.&lt;/p&gt;
    &lt;head rend="h2"&gt;Open Source: Built for Collaboration&lt;/head&gt;
    &lt;p&gt;JetKVM is built on a robust Golang foundation and powered by Linux for adaptability and transparency. Whether you're a seasoned developer or an enthusiastic tinkerer, you can easily modify or fine-tune the software using familiar tooling and straightforward SSH uploads.&lt;/p&gt;
    &lt;head rend="h4"&gt;Available Source Code&lt;/head&gt;
    &lt;head rend="h5"&gt;KVM Runtime&lt;/head&gt;
    &lt;p&gt;Combining a Go-based backend with a React-powered WebRTC dashboard. Perfect for forking, submitting new features, fixing bugs, or customizing local streaming and control.&lt;/p&gt;
    &lt;head rend="h5"&gt;Cloud API &amp;amp; Dashboard&lt;/head&gt;
    &lt;p&gt;Our cloud-hosted management interface is fully open source. Delve into our secure remote connection orchestration or fork it to build specialized workflows and unique integrations.&lt;/p&gt;
    &lt;head rend="h5"&gt;Core System&lt;/head&gt;
    &lt;p&gt;Minimal Linux system built with BusyBox for core utilities. No bloat or unnecessary services - just the essential components needed for stable remote access.&lt;/p&gt;
    &lt;head rend="h2"&gt;Universally loved&lt;/head&gt;
    &lt;p&gt;Every single tech reviewer who's tested JetKVM has given it a glowing review. No exceptions. From professional data centers to home labs, the verdict is unanimous: this is the remote access solution the tech world has been waiting for.&lt;/p&gt;
    &lt;head rend="h2"&gt;Unlimited Hackability&lt;/head&gt;
    &lt;p&gt;The JetKVM hardware is fully customizable. Through the RJ12 extension port, extra hardware capabilities can easily be added by anyone. The JetKVM extension port is the way to fully customize your device.&lt;/p&gt;
    &lt;head rend="h2"&gt;Seamless Remote Control&lt;/head&gt;
    &lt;p&gt;Experience fluid control and crystal-clear video quality that makes remote access feel local. Perfect for IT professionals, developers, and power users who demand responsive remote management.&lt;/p&gt;
    &lt;head rend="h2"&gt;Stay updated on our latest projects&lt;/head&gt;
    &lt;p&gt;Join our newsletter to receive updates about new features, product launches, and early access opportunities.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://jetkvm.com/"/><published>2025-10-27T16:44:17+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45723359</id><title>Why Busy Beaver hunters fear the Antihydra</title><updated>2025-10-27T20:37:18.495265+00:00</updated><content>&lt;doc fingerprint="eeaad01055b00fc9"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Why Busy Beaver Hunters Fear the Antihydra&lt;/head&gt;
    &lt;p&gt;In the summer of 2024, I reported on an online community that nailed down the precise value of a number called BB(5) — the first big breakthrough in 50 years on an old problem in theoretical computer science known as the busy beaver game. BB(5), now known to be 47,176,870, is the fifth of the so-called busy beaver numbers, which measure the complexity of the craziest computations that simple computer programs can complete.1The team recently released a paper describing their results in detail.&lt;/p&gt;
    &lt;p&gt;The next step in this idiosyncratic research effort is to identify the sixth busy beaver number BB(6), and there has been some notable progress on that front — I wrote a follow-up story about it a few months ago. But busy beaver researchers don’t expect to nail down the true value of BB(6) any time soon. That’s because doing so would require them to understand the behavior of a program with the awesome name “Antihydra,” which resembles a longstanding open problem in mathematics called the Collatz conjecture.2Antihydra should not be confused with the false hydra, a very cool and very terrifying monster conceived by D&amp;amp;D blogger Arnold Kemp. A twitter user sharing my first busy beaver story summed up this state of affairs more succinctly:&lt;/p&gt;
    &lt;p&gt;Both of my stories alluded to the Antihydra barrier only very briefly. In this blog post I will explore it in more detail: What exactly is Antihydra, what is the Collatz conjecture, how are they connected, and what makes them so daunting?&lt;/p&gt;
    &lt;head rend="h2"&gt;Busy Beaver Basics&lt;/head&gt;
    &lt;p&gt;If you haven’t already read my two Quanta stories about the busy beaver game, I recommend doing so before reading further, mainly just because they’re both really fun! Here I’ll recap how the busy beaver game works so that we’re all on the same page.&lt;/p&gt;
    &lt;p&gt;I wrote above that the busy beaver numbers “measure the complexity of the craziest computations that simple computer programs can complete.” To define them more precisely, we first need a mathematical framework for gauging the complexity of computer programs themselves, to decide which ones are “simple.” Then we need a way to quantify the complexity of computations — what computer programs do — so that we can identify the craziest ones.&lt;/p&gt;
    &lt;p&gt;In the busy beaver game, computer programs are represented by hypothetical devices called Turing machines, which compute in discrete steps by reading and writing 0s and 1s on an infinite tape divided into cells. A unique list of rules governs the behavior of each Turing machine. Anything you can do with an ordinary computer program, you can in principle do with the right set of Turing machine rules.3In the busy beaver literature, these rules are called “states.” “In principle” is doing a lot of work in this sentence — even if you managed to acquire the requisite infinite tape, computing with a Turing machine would be horrendously inefficient. But Turing machines are easier to analyze theoretically than more practical programming languages.&lt;/p&gt;
    &lt;p&gt;Let’s unpack how Turing machines work in a bit more detail. At each step, a Turing machine consults one of its rules and edits one cell on the tape. Each rule has two cases: what to do if the current cell contains a 0, and what to do if it contains a 1. “What to do” here means what to write in the current cell, which direction to move next, and which rule to consult for the next step. One case of one rule breaks this pattern: It tells the Turing machine to “halt,” or stop running. But by itself, the existence of this instruction doesn’t guarantee that a Turing machine will halt — the machine might never get there. Quanta’s visual designer Kristina Armitage encapsulated all of this in a beautiful infographic.4In my first Busy Beaver story, you will also find animations of Turing machines in action.&lt;/p&gt;
    &lt;p&gt;The number of rules that a Turing machine has will be our measure of program complexity. This choice lets us replace our vague question about the craziest things that simple computer programs can do with a series of specific questions about different degrees of craziness, corresponding to different busy beaver numbers. You learn the value of BB(1) by answering the question “what’s the most complex computation that a one-rule Turing machine can complete?” Likewise, BB(2) measures the most complex computation that a two-rule machine can complete, and so on.&lt;/p&gt;
    &lt;p&gt;To answer these questions, we need a precise definition of what makes one computation more complex than another. A natural measure is how many steps the Turing machine needs to complete the computation. “Complete” is important — every Turing machine that never halts will run for infinitely many steps, but that’s not really a fair comparison. The number of steps that a Turing machine takes before halting (and indeed, whether it halts at all) can depend on the initial pattern of 0s and 1s on the tape. For the busy beaver game, we always start from the so-called “blank tape,” which has 0s in every cell.&lt;/p&gt;
    &lt;p&gt;We now have all the necessary pieces to formally define the busy beaver numbers. Let’s take BB(6) to be specific: It is the longest finite runtime among all six-rule Turing machines, when those machines start with a blank tape. Finding this number is straightforward in principle. First, list out all possible six-rule Turing machines. Next, sort them into two categories: those that will eventually halt when they start running on the blank tape, and those that will run forever. Toss out all the non-halting machines. Finally, measure how many steps each of the halting machines takes before stopping. The largest number is BB(6).&lt;/p&gt;
    &lt;p&gt;The problem with this plan lies in the second step, where you divide the Turing machines into two groups based on whether or not they halt. It turns out that deciding whether a Turing machine will halt can be an extremely hard problem, to put it mildly. And if you can’t tell whether a given machine will halt, then you don’t know whether your list of halting Turing machines is complete, so you can’t know whether you’ve found the longest runtime! As of this writing, researchers have classified the vast majority of six-rule machines as either halting or non-halting. But there are 1,618 “holdouts” whose fate remains unknown.&lt;/p&gt;
    &lt;p&gt;Antihydra is one of these holdout machines. To nail down the value of BB(6), researchers must first determine whether Antihydra halts, and that seems to be beyond the reach of any known mathematical technique. To understand why, we need to take a step back and ask, “what exactly are these Turing machines doing?”&lt;/p&gt;
    &lt;head rend="h2"&gt;Leveling Up&lt;/head&gt;
    &lt;p&gt;You may object at this point that we already know exactly what these Turing machines are doing: Each one is just following a specific sequence of rules, writing 0s and 1s on the tape as it goes. But this “low-level” description is a bit like saying “when I push these buttons, my pocket calculator toggles transistors on and off in this specific pattern.” That may very well be true, but “high-level” descriptions like “when I push these buttons, my pocket calculator multiplies 3 and 4” are usually more useful.&lt;/p&gt;
    &lt;p&gt;There’s no guarantee that any given Turing machine’s behavior admits such a simple high-level description.5Also, in many cases low-level descriptions are perfectly adequate. For example, the easiest way to prove that a Turing machine halts is just to simulate it step by step until it stops running. When that happens, you don’t need a deeper understanding of why it halted: Just note its runtime and move on. But remember that Turing machines can carry out all possible computations — that means that at least some Turing machines must be executing programs with high-level descriptions that humans can understand.&lt;/p&gt;
    &lt;p&gt;Actually, the most notable five- and six-rule Turing machines that busy beaver researchers have studied so far all have relatively simple high-level descriptions — that includes the longest-running five- and six-rule machines that eventually halt, the most complex non-halting five-rule machines, and holdouts like Antihydra.6This is an empirical observation, not a self-evident truth. In fact, some researchers expected that the longest-running Turing machines would be “spaghetti code” machines that lack any high-level description!&lt;/p&gt;
    &lt;p&gt;Let’s look at a specific example. The fifth busy beaver, which runs for 47,176,870 steps before halting, obeys the following low-level rules:&lt;/p&gt;
    &lt;p&gt;In 1993, the mathematician Pascal Michel proved that these rules are equivalent to a simple high-level program:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Set \(x = 0\).&lt;/item&gt;
      &lt;item&gt;Divide \(x\) by 3 and check the remainder. &lt;list rend="ul"&gt;&lt;item&gt;If the remainder is 0, calculate \((5x + 18)/3\). The result is your new value of \(x\).&lt;/item&gt;&lt;item&gt;If the remainder is 1, calculate \((5x + 22)/3\). The result is your new value of \(x\).&lt;/item&gt;&lt;item&gt;If the remainder is 2, halt.&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;If you haven’t halted, go back to step 2 and plug in the new value of \(x\).&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Once you have a high-level description like this, you can use it to determine whether the machine will halt — and if so, exactly how many steps it will take.7Each step in a high-level program like this one corresponds to many individual Turing machine steps. Whenever you prove an equivalence between high-level and low-level descriptions, you get formulas that you can use to compute how long each high-level step will take. I won’t say anything about how to actually prove these equivalences. In this case, the high-level program just repeatedly plugs in new values of \(x\) until it finds one that leaves a remainder of 2 when divided by 3. One third of numbers have this property, so you might guess that the program will take three tries to find one, give or take a few. If you start from a random value of \(x\), you’ll find that three iterations is indeed typical. But it turns out that if you start from \(x = 0\), this program will repeat the second step 15 times before it lands on a number with remainder 2! Busy beaver researchers often like to anthropomorphize the Turing machines they study, imagining that the machines are actively trying to run for as long as possible. Adopting that perspective, we might say that this Turing machine got very lucky.&lt;/p&gt;
    &lt;p&gt;The fifth busy beaver is just one member of a family of “Collatz-like” Turing machines whose high-level behavior has the following general form:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Set \(x\) equal to some starting value (which may or may not be 0).&lt;/item&gt;
      &lt;item&gt;Divide \(x\) by a fixed number \(N\). The remainder tells you what formula to use to get your new value of \(x\).&lt;/item&gt;
      &lt;item&gt;Check if you’ve met a specific halting condition. If not, go back to step 2 with the new value of \(x\).8As we saw in the above example, the halting condition can be as simple as “the remainder has a specific value.” Below we’ll see some examples with different halting conditions.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The family of Collatz-like Turing machines includes both halting and non-halting machines. It gets its name from a procedure for generating number sequences devised in 1937 by the mathematician Lothar Collatz:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Choose a starting value for \(x\).&lt;/item&gt;
      &lt;item&gt;Check whether \(x\) is even or odd. &lt;list rend="ul"&gt;&lt;item&gt;If it’s even, calculate \(x/2\). The result is your new value of \(x\).&lt;/item&gt;&lt;item&gt;If it’s odd, calculate \(3x + 1\). The result is your new value of \(x\).&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Check whether \(x = 1\). If not, go back to step 2.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This looks very similar to our general description of high-level behavior for Collatz-like machines, with \(x = 1\) as the halting condition.9“Check whether \(x\) is even or odd” is just another way of saying “divide \(x\) by 2 and check the remainder.” Strictly speaking, we don’t have to specify that the sequence stops when \(x = 1\). But if we keep applying the rules after it hits 1, the sequence enters an infinite loop: 1 &amp;gt; 4 &amp;gt; 2 &amp;gt; 1 and so on. Try iterating these rules from any initial integer value of \(x\) — I’m willing to bet however much you like that you’ll eventually hit 1. The Collatz conjecture asserts that this happens for every positive integer, no matter how large. People have tested this empirically for all integers up to at least 2 billion trillion (!) without finding any counterexamples, which strongly suggests that the conjecture is true. But nobody knows how to rigorously prove it.&lt;/p&gt;
    &lt;head rend="h2"&gt;Cryptozoology&lt;/head&gt;
    &lt;p&gt;Let’s take a step back. At the beginning of this post I noted a link between the Collatz conjecture and Antihydra: Nobody knows how to prove the Collatz conjecture, and that’s why researchers don’t know how to conclusively determine whether Antihydra halts. But now I’ve instead linked the Collatz conjecture to the fifth busy beaver, a machine that has been proved to halt. What’s going on here?&lt;/p&gt;
    &lt;p&gt;The resolution to this apparent puzzle is that for the busy beaver game, we only care about whether a Turing machine halts when it starts running from a specific tape configuration, namely the blank tape. That means we only care about whether the corresponding Collatz-like sequence halts for a single input. The Collatz conjecture, meanwhile, asks whether you eventually hit \(x = 1\) for every input. It’s easy to show that the Collatz sequence ultimately hits \(x = 1\) for any one input, just as it’s easy to show that the fifth busy beaver halts (once you’ve established an equivalence between its low-level rules and the high-level Collatz-like program).10As it happens, the busy beaver hunters Heiner Marxen and Jürgen Buntrock first proved that the fifth busy beaver halted by direct simulation (albeit with some tricks to speed things up). Michel only identified its high-level behavior after the fact.&lt;/p&gt;
    &lt;p&gt;We can easily construct a variant of the Collatz problem that’s hard to solve even for a single input. All we need to do is change the \(3x + 1\) rule for odd numbers to \(5x + 1\). In that case, trajectories that start from certain inputs (such as \(x = 7\)) look like they will diverge, never hitting 1 or falling into a cycle. But researchers haven’t been able to prove that any of these trajectories diverges. There’s an inherent asymmetry here. If you want to prove that a sequence does eventually end up somewhere, you can always just use brute force, at least in principle. But if you want to prove that a sequence never terminates, even a single input can be hard.&lt;/p&gt;
    &lt;p&gt;We’re now finally ready to confront the terror that is Antihydra. It obeys the following high-level rules:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Set \(x = 8\).11This may seem like a weird starting point, given that we’re supposed to start with the blank tape in the busy beaver game. That’s still true here — it’s just that Antihydra spends a while futzing around on the tape before it starts iterating this sequence, and the high-level effect of all that futzing is to set the starting value to 8.&lt;/item&gt;
      &lt;item&gt;Check whether \(x\) is even or odd. &lt;list rend="ul"&gt;&lt;item&gt;If it’s even, calculate \(3x/2\). The result is your new value of \(x\). Add one to a running tally of how many times you’ve applied this even rule.&lt;/item&gt;&lt;item&gt;If it’s odd, calculate \((3x-1)/2\). The result is your new value of \(x\). Add one to a running tally of how many times you’ve applied this odd rule.&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Check whether your “odd” count is more than twice as large as your “even” count. If so, halt. If not, go back to step 2.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This is a very curious set of rules. The formulas \(3x/2\) and \((3x-1)/2\) don’t appear to systematically favor odd or even numbers, so you might expect that iterating them again and again will look like repeatedly flipping a coin and keeping track of how often you get heads versus tails. Early on in a sequence of coin flips, it’s distinctly possible that you’ll end up with more than twice as many heads as tails. But if this doesn’t happen right away, it becomes less and less likely the longer you keep going. Researchers have now simulated the behavior of Antihydra out to more than 270 billion steps, and as expected, the “even” and “odd” tallies are pretty close to equal — nowhere near the extreme imbalance demanded by the halting condition. So it seems overwhelmingly likely that Antihydra never halts. But nobody knows how to prove it! The mathematician John Conway coined the delightful term “probviously” for situations like this — ones where the specific problem of interest is very hard to solve, but probabilistic reasoning about the “typical” behavior of similar problems makes the answer seem obvious.&lt;/p&gt;
    &lt;p&gt;Antihydra’s behavior is qualitatively similar to the \(5x + 1\) version of the Collatz conjecture, where we don’t know how to prove that any single trajectory diverges. I want to stress that as far as researchers know, there isn’t a more precise mathematical link between these two problems: If you resolved one of them, it wouldn’t automatically resolve the other. But the problems seem hard for very similar reasons. If someone does manage to prove the Collatz conjecture, the mathematical techniques used in the proof would likely be promising for the Antihydra problem (and vice versa).&lt;/p&gt;
    &lt;p&gt;Actually, Antihydra is just one of many probviously non-halting Turing machines with Collatz-like behavior. Busy beaver hunter Shawn Ligocki dubbed these machines “cryptids” when they were first identified in variants of the standard busy beaver game.12These variants use extra tape symbols in addition to 0 and 1. For example, the BB(3,3) version of the busy beaver game studies the behavior of Turing machines with three rules that can read and write three symbols: 0, 1, and 2.&lt;/p&gt;
    &lt;p&gt;The first two cryptids to be discovered were named Bigfoot and Hydra;13Antihydra was named for a mathematical connection to Hydra. researchers have now identified so many cryptids that it no longer makes sense to give each one its own name. The existence of all these cryptids implies that busy beaver numbers beyond BB(5) will remain out of reach until researchers develop new mathematical tools for tackling Collatz-like problems. And the legendary mathematician Paul Erdős reportedly said “Mathematics may not be ready for such problems.”&lt;/p&gt;
    &lt;p&gt;But that doesn’t mean busy beaver hunters should give up. There’s still plenty of questions to explore in what might be called “cryptid ecology.” How many subspecies of cryptids are there? How are they related to each other, and to other unsolved problems in mathematics beyond the Collatz conjecture? Since the beginning of the busy beaver game, avid hunters have repeatedly encountered surprising new Turing machine behavior, and that pattern shows no sign of letting up.&lt;/p&gt;
    &lt;p&gt;This past August I visited Tahquamenon Falls in Michigan’s upper peninsula, a part of the state that’s apparently an epicenter of bigfoot sightings. Fortunately I didn’t encounter any cryptids, but I did learn some new things about a few friendlier critters. Surprising discoveries can come from anywhere!&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://benbrubaker.com/why-busy-beaver-hunters-fear-the-antihydra/"/><published>2025-10-27T16:56:04+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45723426</id><title>Sieve (YC X25) is hiring engineers to build video datasets for frontier AI</title><updated>2025-10-27T20:37:18.249630+00:00</updated><content>&lt;doc fingerprint="7d518f497b3a37b"&gt;
  &lt;main&gt;
    &lt;p&gt;High quality video data for AI applications.&lt;/p&gt;
    &lt;p&gt;500K hours of high quality, diverse video clips.&lt;/p&gt;
    &lt;p&gt;Contact us to request a sample or explore more options.&lt;/p&gt;
    &lt;p&gt;Purpose-built video understanding models paired with human QA help find just the highest quality, training-ready data.&lt;/p&gt;
    &lt;p&gt;Our growing library consists of thousands of petabytes of video data.&lt;/p&gt;
    &lt;p&gt;Video is collected from a variety of public, private, and synthetic sources.&lt;/p&gt;
    &lt;p&gt;New data shapes to unlock new model capabilities (paired, time-synced, conversational, and more).&lt;/p&gt;
    &lt;p&gt;Contact us to request a sample or explore more options.&lt;/p&gt;
    &lt;p&gt;Purpose-built video understanding models paired with human QA help find just the highest quality, training-ready data.&lt;/p&gt;
    &lt;p&gt;Our growing library consists of thousands of petabytes of video data.&lt;/p&gt;
    &lt;p&gt;Video is collected from a variety of public, private, and synthetic sources.&lt;/p&gt;
    &lt;p&gt;New data shapes to unlock new model capabilities (paired, time-synced, conversational, and more).&lt;/p&gt;
    &lt;p&gt;Explore pre-packaged datasets to determine which you are interested in.&lt;/p&gt;
    &lt;p&gt;Enter a purchase agreement based on dataset volume and characteristics.&lt;/p&gt;
    &lt;p&gt;Receive data within 1-2 days via storage bucket access.&lt;/p&gt;
    &lt;p&gt;Scalable API&lt;/p&gt;
    &lt;p&gt;Built to process millions of hours of video at any given moment.&lt;/p&gt;
    &lt;p&gt;Compliant&lt;/p&gt;
    &lt;p&gt;Request specific filtering and licensing needs to ensure full permission and compliance of your training data.&lt;/p&gt;
    &lt;p&gt;Dedicated partnership&lt;/p&gt;
    &lt;p&gt;We partner deeply with every research team to understand their needs and develop data with the same rigor they develop models.&lt;/p&gt;
    &lt;p&gt;Secure&lt;/p&gt;
    &lt;p&gt;End-to-end encryption, custom data retention, and SOC 2 Type 2 secured.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.sievedata.com/"/><published>2025-10-27T17:01:05+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45723533</id><title>Show HN: Git Auto Commit (GAC) – LLM-powered Git commit command line tool</title><updated>2025-10-27T20:37:17.627008+00:00</updated><content>&lt;doc fingerprint="a4346c4380a8f88e"&gt;
  &lt;main&gt;
    &lt;p&gt;LLM-powered commit messages that understand your code.&lt;/p&gt;
    &lt;p&gt;Tired of writing commit messages? Replace &lt;code&gt;git commit -m "..."&lt;/code&gt; with &lt;code&gt;gac&lt;/code&gt; for contextual, well-formatted commit messages generated by large language models.&lt;/p&gt;
    &lt;p&gt;Intelligent, contextual messages that explain the why behind your changes:&lt;/p&gt;
    &lt;code&gt;uvx gac init  # Configure your LLM provider
uvx gac  # Generate and commit with LLM&lt;/code&gt;
    &lt;p&gt;That's it! Review the generated message and confirm with &lt;code&gt;y&lt;/code&gt;.&lt;/p&gt;
    &lt;code&gt;uv tool install gac
gac init
gac&lt;/code&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Anthropic • Cerebras • Chutes.ai • Fireworks • Gemini&lt;/item&gt;
      &lt;item&gt;Groq • LM Studio • Minimax • Ollama • OpenAI • OpenRouter&lt;/item&gt;
      &lt;item&gt;Streamlake • Synthetic.new • Together AI • Z.AI • Z.AI Coding&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Understands intent: Analyzes code structure, logic, and patterns to understand the "why" behind your changes, not just what changed&lt;/item&gt;
      &lt;item&gt;Semantic awareness: Recognizes refactoring, bug fixes, features, and breaking changes to generate contextually appropriate messages&lt;/item&gt;
      &lt;item&gt;Intelligent filtering: Prioritizes meaningful changes while ignoring generated files, dependencies, and artifacts&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;One-liner (-o flag): Single-line commit message following conventional commit format&lt;/item&gt;
      &lt;item&gt;Standard (default): Summary with bullet points explaining implementation details&lt;/item&gt;
      &lt;item&gt;Verbose (-v flag): Comprehensive explanations including motivation, technical approach, and impact analysis&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Interactive feedback: Regenerate messages with specific requests like &lt;code&gt;r "make it shorter"&lt;/code&gt;or&lt;code&gt;r "focus on the bug fix"&lt;/code&gt;&lt;/item&gt;
      &lt;item&gt;One-command workflows: Complete workflows with flags like &lt;code&gt;gac -ayp&lt;/code&gt;(stage all, auto-confirm, push)&lt;/item&gt;
      &lt;item&gt;Git integration: Respects pre-commit and lefthook hooks, running them before expensive LLM operations&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Automatic secret detection: Scans for API keys, passwords, and tokens before committing&lt;/item&gt;
      &lt;item&gt;Interactive protection: Prompts before committing potentially sensitive data with clear remediation options&lt;/item&gt;
      &lt;item&gt;Smart filtering: Ignores example files, template files, and placeholder text to reduce false positives&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;# Stage your changes
git add .

# Generate and commit with LLM
gac

# Review → y (commit) | n (cancel) | r (reroll)&lt;/code&gt;
    &lt;table&gt;
      &lt;row span="2"&gt;
        &lt;cell role="head"&gt;Command&lt;/cell&gt;
        &lt;cell role="head"&gt;Description&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;
          &lt;code&gt;gac&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Generate commit message&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;
          &lt;code&gt;gac -y&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Auto-confirm (no review needed)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;
          &lt;code&gt;gac -a&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Stage all before generating commit message&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;
          &lt;code&gt;gac -o&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;One-line message for trivial changes&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;
          &lt;code&gt;gac -v&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Verbose format with Motivation, Technical Approach, and Impact Analysis&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;
          &lt;code&gt;gac -h "hint"&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Add context for LLM (e.g., &lt;code&gt;gac -h "bug fix"&lt;/code&gt;)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;
          &lt;code&gt;gac -s&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Include scope (e.g., feat(auth):)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;code&gt;gac -p&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Commit and push&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;code&gt;# Complete workflow in one command
gac -ayp -h "release preparation"

# Detailed explanation with scope
gac -v -s

# Quick one-liner for small changes
gac -o

# Debug what the LLM sees
gac --show-prompt

# Skip security scan (use carefully)
gac --skip-secret-scan&lt;/code&gt;
    &lt;p&gt;Not happy with the result? Use the reroll feature for intelligent regeneration:&lt;/p&gt;
    &lt;code&gt;# Simple reroll
r

# With specific feedback
r make it shorter and focus on the performance improvement
r use conventional commit format with scope
r explain the security implications&lt;/code&gt;
    &lt;p&gt;Run &lt;code&gt;gac init&lt;/code&gt; to configure your provider interactively, or set environment variables:&lt;/p&gt;
    &lt;code&gt;# Example configuration
GAC_MODEL=anthropic:your-model-name
OPENAI_API_KEY=your_key_here
ANTHROPIC_API_KEY=your_key_here&lt;/code&gt;
    &lt;p&gt;See &lt;code&gt;.gac.env.example&lt;/code&gt; for all available options.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Full documentation: USAGE.md - Complete CLI reference&lt;/item&gt;
      &lt;item&gt;Troubleshooting: TROUBLESHOOTING.md - Common issues and solutions&lt;/item&gt;
      &lt;item&gt;Contributing: CONTRIBUTING.md - Development setup and guidelines&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Made with ❤️ for developers who want better commit messages&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/cellwebb/gac"/><published>2025-10-27T17:07:05+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45723554</id><title>Avoid 2:00 and 3:00 am cron jobs (2013)</title><updated>2025-10-27T20:37:17.313232+00:00</updated><content>&lt;doc fingerprint="fe50537ca9a4b4f6"&gt;
  &lt;main&gt;
    &lt;head rend="h2"&gt;Avoid 2:00 and 3:00 am cron jobs!&lt;/head&gt;
    &lt;p&gt;A word to the wise: Do not set any cron jobs for 2:00 am or 3:00 am on Sunday morning! Or to be safe, on other mornings besides Sunday as well, since jobs originally set to run on some particular day may eventually be changed to run on another day, or every day.&lt;/p&gt;
    &lt;p&gt;Most of the time such cron jobs will run fine, but if they run every Sunday morning, then twice per year they will run at the exact time daylight savings time (aka summer time) kicks in or ends, sometimes with very strange results.&lt;/p&gt;
    &lt;p&gt;On Linux with vixie-cron we saw two cron jobs run something like once per second between 3:00 and 3:01 when the most recent daylight savings time began. Thus they ran about 60 times, stepping all over each other and making a noisy mess in email. No serious harm was done, but thatâs only because they were not tasks capable of causing serious harm.&lt;/p&gt;
    &lt;p&gt;Feel free to wish for or agitate for or fund or write a better open source job scheduler that everyone will use, one that will ensure no overlapping runs, allow specifying time limits, etc. Better tools exist, but until one of them achieves cronâs level of ubiquity, we have to live with cron at least some places and sometimes.&lt;/p&gt;
    &lt;p&gt;Alternatively, where possible set the server timezone to UTC so that no daylight savings changes will happen at all.&lt;/p&gt;
    &lt;p&gt;Or most preferable: Governments of the world, stop the twice-yearly dance of daylight saving time altogether.&lt;/p&gt;
    &lt;p&gt;But in the meantime this particular problem can be entirely avoided by just not scheduling any cron jobs to run on Sunday morning at 2:00 or 3:00 server time.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.endpointdev.com/blog/2013/04/avoid-200-and-300-am-cron-jobs/"/><published>2025-10-27T17:08:33+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45723558</id><title>Artificial Writing and Automated Detection [pdf]</title><updated>2025-10-27T20:37:16.558698+00:00</updated><content/><link href="https://www.nber.org/system/files/working_papers/w34223/w34223.pdf"/><published>2025-10-27T17:09:05+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45723699</id><title>MCP-Scanner – Scan MCP Servers for vulnerabilities</title><updated>2025-10-27T20:37:15.937020+00:00</updated><content>&lt;doc fingerprint="145add5c9802fa90"&gt;
  &lt;main&gt;
    &lt;p&gt;A Python tool for scanning MCP (Model Context Protocol) servers and tools for potential security vulnerabilities. The MCP Scanner combines Cisco AI Defense inspect API, YARA rules and LLM-as-a-judge to detect malicious MCP tools.&lt;/p&gt;
    &lt;p&gt;The MCP Scanner provides a comprehensive solution for scanning MCP servers and tools for security vulnerabilities. It leverages three powerful scanning engines (Yara, LLM-as-judge, Cisco AI Defense) that can be used together or independently.&lt;/p&gt;
    &lt;p&gt;The SDK is designed to be easy to use while providing powerful scanning capabilities, flexible authentication options, and customization.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Multiple Modes: Run scanner as a stand-alone CLI tool or REST API server&lt;/item&gt;
      &lt;item&gt;Multi-Engine Security Analysis: Use all three scanning engines together or independently based on your needs.&lt;/item&gt;
      &lt;item&gt;Comprehensive Scanning: Scan MCP tools, prompts, and resources for security vulnerabilities&lt;/item&gt;
      &lt;item&gt;Explicit Authentication Control: Fine-grained control over authentication with explicit Auth parameters.&lt;/item&gt;
      &lt;item&gt;OAuth Support: Full OAuth authentication support for both SSE and streamable HTTP connections.&lt;/item&gt;
      &lt;item&gt;Custom Endpoints: Configure the API endpoint to support any Cisco AI Defense environments.&lt;/item&gt;
      &lt;item&gt;MCP Server Integration: Connect directly to MCP servers to scan tools, prompts, and resources with flexible authentication.&lt;/item&gt;
      &lt;item&gt;Customizable YARA Rules: Add your own YARA rules to detect specific patterns.&lt;/item&gt;
      &lt;item&gt;Comprehensive Vulnerability Reporting: Detailed reports on detected vulnerabilities.&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Python 3.11+&lt;/item&gt;
      &lt;item&gt;uv (Python package manager)&lt;/item&gt;
      &lt;item&gt;A valid Cisco AI Defense API Key (optional)&lt;/item&gt;
      &lt;item&gt;LLM Provider API Key (optional)&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;uv venv -p &amp;lt;Python version less than or equal to 3.13&amp;gt; /path/to/your/choice/of/venv/directory
source /path/to/your/choice/of/venv/directory/bin/activate
uv pip install cisco-ai-mcp-scanner&lt;/code&gt;
    &lt;code&gt;git clone https://github.com/cisco-ai-defense/mcp-scanner
cd mcp-scanner
# Install with uv (recommended)

uv venv -p &amp;lt;Python version less than or equal to 3.13&amp;gt; /path/to/your/choice/of/venv/directory

source /path/to/your/choice/of/venv/directory/bin/activate

uv pip install .
# Or install in development mode
uv pip install -e .&lt;/code&gt;
    &lt;code&gt;Cisco AI Defense API (only required for API analyzer)
export MCP_SCANNER_API_KEY="your_cisco_api_key"
export MCP_SCANNER_ENDPOINT="https://us.api.inspect.aidefense.security.cisco.com/api/v1"
# For other endpoints please visit https://developer.cisco.com/docs/ai-defense/getting-started/#base-url&lt;/code&gt;
    &lt;p&gt;Tested LLMs: OpenAI GPT-4o and GPT-4.1&lt;/p&gt;
    &lt;code&gt;# LLM Provider API Key (required for LLM analyzer)
export MCP_SCANNER_LLM_API_KEY="your_llm_api_key"  # OpenAI

# LLM Model Configuration (optional - defaults provided)
export MCP_SCANNER_LLM_MODEL="gpt-4o"  # Any LiteLLM-supported model
export MCP_SCANNER_LLM_BASE_URL="https://api.openai.com/v1"  # Custom LLM endpoint
export MCP_SCANNER_LLM_API_VERSION="2024-02-01"  # API version (if required)

# For Azure OpenAI (example)
export MCP_SCANNER_LLM_BASE_URL="https://your-resource.openai.azure.com/"
export MCP_SCANNER_LLM_API_VERSION="2024-02-01"
export MCP_SCANNER_LLM_MODEL="azure/gpt-4"

# For Extended Thinking Models (longer timeout)
export MCP_SCANNER_LLM_TIMEOUT=300&lt;/code&gt;
    &lt;p&gt;The fastest way to get started is using the &lt;code&gt;mcp-scanner&lt;/code&gt; CLI command. Global flags (like &lt;code&gt;--analyzers&lt;/code&gt;, &lt;code&gt;--format&lt;/code&gt;, etc.) must be placed before a subcommand.&lt;/p&gt;
    &lt;code&gt;# Scan well-known client configs on this machine
mcp-scanner --scan-known-configs --analyzers yara --format summary

# Stdio server (example using uvx mcp-server-fetch)
mcp-scanner --stdio-command uvx --stdio-arg=--from --stdio-arg=mcp-server-fetch --stdio-arg=mcp-server-fetch --analyzers yara --format summary

# Remote server (deepwiki example)
mcp-scanner --server-url https://mcp.deepwki.com/mcp --analyzers yara --format summary

# MCP Scanner as REST API
mcp-scanner-api --host 0.0.0.0 --port 8080
&lt;/code&gt;
    &lt;code&gt;import asyncio
from mcpscanner import Config, Scanner
from mcpscanner.core.models import AnalyzerEnum

async def main():
    # Create configuration with your API keys
    config = Config(
        api_key="your_cisco_api_key",
        llm_provider_api_key="your_llm_api_key"
    )

    # Create scanner
    scanner = Scanner(config)

    # Scan all tools on a remote server
    tool_results = await scanner.scan_remote_server_tools(
        "https://mcp.deepwki.com/mcp",
        analyzers=[AnalyzerEnum.API, AnalyzerEnum.YARA, AnalyzerEnum.LLM]
    )

    # Print tool results
    for result in tool_results:
        print(f"Tool: {result.tool_name}, Safe: {result.is_safe}")

    # Scan all prompts on a server
    prompt_results = await scanner.scan_remote_server_prompts(
        "http://127.0.0.1:8000/mcp",
        analyzers=[AnalyzerEnum.LLM]
    )

    # Print prompt results
    for result in prompt_results:
        print(f"Prompt: {result.prompt_name}, Safe: {result.is_safe}")

    # Scan all resources on a server
    resource_results = await scanner.scan_remote_server_resources(
        "http://127.0.0.1:8000/mcp",
        analyzers=[AnalyzerEnum.LLM],
        allowed_mime_types=["text/plain", "text/html"]
    )

    # Print resource results
    for result in resource_results:
        print(f"Resource: {result.resource_name}, Safe: {result.is_safe}, Status: {result.status}")

# Run the scanner
asyncio.run(main())&lt;/code&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;remote: scan a remote MCP server (SSE or streamable HTTP). Supports &lt;code&gt;--server-url&lt;/code&gt;, optional&lt;code&gt;--bearer-token&lt;/code&gt;.&lt;/item&gt;
      &lt;item&gt;stdio: launch and scan a stdio MCP server. Requires &lt;code&gt;--stdio-command&lt;/code&gt;; accepts&lt;code&gt;--stdio-args&lt;/code&gt;,&lt;code&gt;--stdio-env&lt;/code&gt;, optional&lt;code&gt;--stdio-tool&lt;/code&gt;.&lt;/item&gt;
      &lt;item&gt;config: scan servers from a specific MCP config file. Requires &lt;code&gt;--config-path&lt;/code&gt;; optional&lt;code&gt;--bearer-token&lt;/code&gt;.&lt;/item&gt;
      &lt;item&gt;known-configs: scan servers from well-known client config locations on this machine; optional &lt;code&gt;--bearer-token&lt;/code&gt;.&lt;/item&gt;
      &lt;item&gt;prompts: scan prompts on an MCP server. Requires &lt;code&gt;--server-url&lt;/code&gt;; optional&lt;code&gt;--prompt-name&lt;/code&gt;,&lt;code&gt;--bearer-token&lt;/code&gt;.&lt;/item&gt;
      &lt;item&gt;resources: scan resources on an MCP server. Requires &lt;code&gt;--server-url&lt;/code&gt;; optional&lt;code&gt;--resource-uri&lt;/code&gt;,&lt;code&gt;--mime-types&lt;/code&gt;,&lt;code&gt;--bearer-token&lt;/code&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Note: Top-level flags (e.g., &lt;code&gt;--server-url&lt;/code&gt;, &lt;code&gt;--stdio-*&lt;/code&gt;, &lt;code&gt;--config-path&lt;/code&gt;, &lt;code&gt;--scan-known-configs&lt;/code&gt;) remain supported when no subcommand is used, but subcommands are recommended.&lt;/p&gt;
    &lt;code&gt;# YARA-only scan of all servers defined in well-known config locations
mcp-scanner --scan-known-configs --analyzers yara --format summary

# Detailed output
mcp-scanner --scan-known-configs --analyzers yara --detailed&lt;/code&gt;
    &lt;code&gt;# Expand ~ yourself if needed by your shell
mcp-scanner --config-path "$HOME/.codeium/windsurf/mcp_config.json" \
 --analyzers yara --format by_tool&lt;/code&gt;
    &lt;code&gt;# Use repeated --stdio-arg for reliable argument passing
mcp-scanner --analyzers yara --format summary \
  stdio --stdio-command uvx \
  --stdio-arg=--from --stdio-arg=mcp-server-fetch --stdio-arg=mcp-server-fetch

# Or list-form (ensure it doesn't conflict with later flags)
mcp-scanner --analyzers yara --detailed \
  stdio --stdio-command uvx \
  --stdio-args --from mcp-server-fetch mcp-server-fetch

# Scan only a specific tool on the stdio server
mcp-scanner --analyzers yara --format summary \
  stdio --stdio-command uvx \
  --stdio-arg=--from --stdio-arg=mcp-server-fetch --stdio-arg=mcp-server-fetch \
  --stdio-tool fetch&lt;/code&gt;
    &lt;code&gt;# Direct remote server with Bearer token
mcp-scanner --analyzers yara --format summary \
  remote --server-url https://your-mcp-server/sse --bearer-token "$TOKEN"

# Apply Bearer token to all remote servers discovered from configs
mcp-scanner --analyzers yara --detailed known-configs --bearer-token "$TOKEN"
mcp-scanner --analyzers yara --format by_tool \
  config --config-path "$HOME/.codeium/windsurf/mcp_config.json" --bearer-token "$TOKEN"&lt;/code&gt;
    &lt;code&gt;# Scan all prompts on an MCP server
mcp-scanner --analyzers llm prompts --server-url http://127.0.0.1:8000/mcp

# Scan all prompts with detailed output
mcp-scanner --analyzers llm --detailed prompts --server-url http://127.0.0.1:8000/mcp

# Scan all prompts with table format
mcp-scanner --analyzers llm --format table prompts --server-url http://127.0.0.1:8000/mcp

# Scan a specific prompt by name
mcp-scanner --analyzers llm prompts --server-url http://127.0.0.1:8000/mcp --prompt-name "greet_user"

# Get raw JSON output
mcp-scanner --analyzers llm --raw prompts --server-url http://127.0.0.1:8000/mcp&lt;/code&gt;
    &lt;code&gt;# Scan all resources on an MCP server
mcp-scanner --analyzers llm resources --server-url http://127.0.0.1:8000/mcp

# Scan all resources with detailed output
mcp-scanner --analyzers llm --detailed resources --server-url http://127.0.0.1:8000/mcp

# Scan all resources with table format
mcp-scanner --analyzers llm --format table resources --server-url http://127.0.0.1:8000/mcp

# Scan a specific resource by URI
mcp-scanner --analyzers llm resources --server-url http://127.0.0.1:8000/mcp \
  --resource-uri "file://test/document.txt"

# Scan with custom MIME type filtering
mcp-scanner --analyzers llm resources --server-url http://127.0.0.1:8000/mcp \
  --mime-types "text/plain,text/html,application/json"&lt;/code&gt;
    &lt;p&gt;The API server provides a REST interface to the MCP scanner functionality, allowing you to integrate security scanning into web applications, CI/CD pipelines, or other services. It exposes the same scanning capabilities as the CLI tool but through HTTP endpoints.&lt;/p&gt;
    &lt;code&gt;# Start the API server (loads configuration from .env file)
mcp-scanner-api --port 8000

# Or with custom host and port
mcp-scanner-api --host 0.0.0.0 --port 8080

# Enable development mode with auto-reload
mcp-scanner-api --reload&lt;/code&gt;
    &lt;p&gt;Once running, the API server provides endpoints for:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;/scan-tool&lt;/code&gt;- Scan a specific tool on an MCP server&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;/scan-all-tools&lt;/code&gt;- Scan all tools on an MCP server&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;/scan-prompt&lt;/code&gt;- Scan a specific prompt on an MCP server&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;/scan-all-prompts&lt;/code&gt;- Scan all prompts on an MCP server&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;/scan-resource&lt;/code&gt;- Scan a specific resource on an MCP server&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;/scan-all-resources&lt;/code&gt;- Scan all resources on an MCP server&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;/health&lt;/code&gt;- Health check endpoint&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Documentation is available in docs/api-reference.md or as interactive documentation at &lt;code&gt;http://localhost:8000/docs&lt;/code&gt; when the server is running.&lt;/p&gt;
    &lt;p&gt;The scanner supports multiple output formats:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;summary&lt;/code&gt;: Concise overview with key findings&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;detailed&lt;/code&gt;: Comprehensive analysis with full findings breakdown&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;table&lt;/code&gt;: Clean tabular format&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;by_severity&lt;/code&gt;: Results grouped by severity level&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;raw&lt;/code&gt;: Raw JSON output&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;mcp-scanner --server-url http://127.0.0.1:8001/sse --format detailed&lt;/code&gt;
    &lt;code&gt;=== MCP Scanner Detailed Results ===

Scan Target: http://127.0.0.1:8001/sse

Tool: execute_system_command
Status: completed
Safe: No
Analyzer Results:
  • api_analyzer:
    - Severity: HIGH
    - Threat Summary: Detected 1 threat: security violation
    - Threat Names: SECURITY VIOLATION
    - Total Findings: 1
  • yara_analyzer:
    - Severity: HIGH
    - Threat Summary: Detected 2 threats: system access, command injection
    - Threat Names: SECURITY VIOLATION, SUSPICIOUS CODE EXECUTION
    - Total Findings: 2
  • llm_analyzer:
    - Severity: HIGH
    - Threat Summary: Detected 2 threats: prompt injection, tool poisoning
    - Threat Names: PROMPT INJECTION, SUSPICIOUS CODE EXECUTION
    - Total Findings: 2
&lt;/code&gt;
    &lt;code&gt;mcp-scanner --server-url http://127.0.0.1:8002/sse --format table&lt;/code&gt;
    &lt;code&gt;=== MCP Scanner Results Table ===

Scan Target: http://127.0.0.1:8002/sse

Scan Target                   Tool Name     Status     API      YARA     LLM      Severity
-----------------------------------------------------------------------------------------
http://127.0.0.1:8002/sse     exec_secrets  UNSAFE     HIGH     HIGH     HIGH     HIGH
http://127.0.0.1:8002/sse     safe_command  SAFE       SAFE     SAFE     SAFE     SAFE
&lt;/code&gt;
    &lt;p&gt;For detailed documentation, see the docs/ directory:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Architecture - System architecture and components&lt;/item&gt;
      &lt;item&gt;Authentication - OAuth and security configuration&lt;/item&gt;
      &lt;item&gt;Programmatic Usage - Programmatic usage examples and advanced usage&lt;/item&gt;
      &lt;item&gt;API Reference - Complete REST API documentation&lt;/item&gt;
      &lt;item&gt;Output Formats - Detailed output format options&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;https://www.cisco.com/site/us/en/products/security/ai-defense/index.html&lt;/p&gt;
    &lt;p&gt;Distributed under the &lt;code&gt;Apache 2.0&lt;/code&gt; License. See LICENSE for more information.&lt;/p&gt;
    &lt;p&gt;Project Link: https://github.com/cisco-ai-defense/mcp-scanner&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/cisco-ai-defense/mcp-scanner"/><published>2025-10-27T17:18:39+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45723809</id><title>It's not always DNS</title><updated>2025-10-27T20:37:15.477910+00:00</updated><content>&lt;doc fingerprint="ff6191e30e531f83"&gt;
  &lt;main&gt;
    &lt;p&gt;I’ve written down a new rule (no name, sorry) that I’ll be repeating to myself and those around me. “If you can replace ‘DNS’ with ‘key value store mapping a name to an ip’ and it still makes sense, it was not, in fact, DNS.” Feel free to repeat it along with me.&lt;/p&gt;
    &lt;p&gt;Sure, the “It’s always DNS” meme is funny the first few hundred times you see it – but what’s less funny is when critical thinking ends because a DNS query is involved. DNS failures are often the first observable problem because it’s one of the first things that needs to be done. DNS is fairly complicated, implementation-dependent, and at times – frustrating to debug – but it is not the operational hazard it’s made out to be. It’s at best a shallow take, and at worst actively holding teams back from understanding their true operational risks.&lt;/p&gt;
    &lt;p&gt;IP connectivity failures between a host and the rest of the network is not a reason to blame DNS. This would happen no matter how you distribute the updated name to IP mappings. Wiping out all the records during the course of operations due to an automation bug is not a reason to blame DNS. This, too, would happen no matter how you distribute the name to IP mappings. Something made the choice to delete all the mappings, and it did what you asked it to do&lt;/p&gt;
    &lt;p&gt;There’s plenty of annoying DNS specific sharp edges to blame when things do go wrong (like &lt;code&gt;8.8.8.8&lt;/code&gt; and &lt;code&gt;1.1.1.1&lt;/code&gt; disagreeing about resolving a domain
because of DNSSEC, or since we’re on the topic, a
DNSSEC rollout bricking prod for hours)
for us to be cracking jokes anytime a program makes a DNS request.&lt;/p&gt;
    &lt;p&gt;We can do better.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://notes.pault.ag/its-not-always-dns/"/><published>2025-10-27T17:25:52+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45723828</id><title>Let the little guys in: A context sharing runtime for the personalised web</title><updated>2025-10-27T20:37:14.826545+00:00</updated><content>&lt;doc fingerprint="af2d18541f732779"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Let the little guys in: &lt;lb/&gt; Towards a context sharing runtime for the personalised web&lt;/head&gt;
    &lt;p&gt;It’s easier than ever to build small tools. Npm, with 63 billion javascript package downloads in the last week, is a great example of the magic that happens when we can easily fork, share, find, use &amp;amp; compose small tools. It’s also a great example of what it’s missing - it’s hard to trust. Would you trust a new little wrapper or package with all of your bank statements, emails, and ChatGPT history?&lt;/p&gt;
    &lt;p&gt;Today, context is king, and OAuth dialogs are not enough to enable world-wide-web like participation in it.&lt;/p&gt;
    &lt;p&gt;Here’s another idea: Instead of tightly controlling which applications have access to data, we need to control where applications can send it.&lt;/p&gt;
    &lt;p&gt;And in that (attestable) image, a new runtime environment is being forged. Not by me, but I buy into it, and I write this hoping that you might too.&lt;/p&gt;
    &lt;p&gt;Onto the first premise:&lt;/p&gt;
    &lt;head rend="h2"&gt;We’re far from realising the potential of computing&lt;/head&gt;
    &lt;p&gt;To really appreciate that potential, let’s imagine what it might feel like to have realised it.&lt;/p&gt;
    &lt;p&gt;Here’s one handle for your imagination: Imagine if ChatGPT worked perfectly, connected to everything, and knew everything about you.&lt;/p&gt;
    &lt;p&gt;Of course, you have to use your imagination there. ChatGPT is far from perfect. And…it never will be. In terms of sheer LLM horsepower, its ability to benefit from more parameters, and more thinking tokens, to think better and make up stuff less - we seem to be plateauing. As was the case for human beings ~300,000 years ago, the economics for making the brain bigger has basically stopped making sense.&lt;/p&gt;
    &lt;p&gt;So here’s the second handle for your imagination. Think of the last app you used. You have it? Great.&lt;/p&gt;
    &lt;p&gt;Now imagine you could in an instant, transform that app in any way you could imagine, to be better for you.&lt;/p&gt;
    &lt;p&gt;It’s quite a thing to think about. It is fun, so I would recommend it if you can spare some brain. Type your app here to seed some ideas.&lt;/p&gt;
    &lt;p&gt;For me, it was my Banking app. Here are some features I’d want:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;As above, I want my banking app to insert a little expandable badge beside every “pay” button in my web browser, where it tells me how my current cart or purchase is going to affect my budget or balance. This seems like obviously good UX. In games, I’ve never seen a shop interface that doesn’t show you your remaining cash balance - imagine how weird and bad it would be if you only got a notification after the fact.&lt;/item&gt;
      &lt;item&gt;I want to read a couple sentence summary each month that describes how that month’s gone, with respect to my long term financial goals - and any interesting spending trends that have emerged.&lt;/item&gt;
      &lt;item&gt;I want the ability to ask my bank things. For example: “how much did my cost of living change after moving to cape town?” or: “since I started seeing a dietician last year, how has that affected my spend on food?” or: “how much has my padel habit cost me?”&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The features you’d want, might differ a lot! For example, maybe you’re better than me at budgeting and have different categories that you want to classify, by linking bank statement line items with the contents of order breakdowns in your email.&lt;/p&gt;
    &lt;p&gt;The point is - the ceiling is high, and we are a long way from it.&lt;/p&gt;
    &lt;head rend="h2"&gt;Why aren’t we further along?&lt;/head&gt;
    &lt;p&gt;Well, to meet all your unmet computing needs, you need a bunch more code, right?&lt;/p&gt;
    &lt;p&gt;Given how hard it’s been to write code, we’ve largely outsourced the writing of it to a group of experts, within sprawling software companies, who are doing their best to Eat the World, with a side of Our Data, but who will never get around to their P3 backlog.&lt;/p&gt;
    &lt;p&gt;I don’t think my banking app will give me those features, ever.&lt;/p&gt;
    &lt;p&gt;And it’s not just the low priority stuff that companies are reticent to build.&lt;/p&gt;
    &lt;head rend="h3"&gt;We have different incentives to companies&lt;/head&gt;
    &lt;p&gt;Where our needs as a user intersect well with the making of profits…we are extremely well served. The size of this intersection is basically the extent of product-market fit. Companies tend to be amazing at: “Make it convenient for me to buy my first thing…and what else can you conveniently bundle in?”&lt;/p&gt;
    &lt;p&gt;Some needs are ignored - because code-writing capacity is finite, and pandering to niche user needs violates the pareto principle. Hotels will jump to put a mini-bar inside your room, but if that’s the only place you can get snacks, you’ll never have wasabi peas.&lt;/p&gt;
    &lt;p&gt;Some needs are actively suppressed: "Make it easy for me to opt out…from your service, from a part of your service, or just from consuming too much”.&lt;/p&gt;
    &lt;head rend="h3"&gt;We don’t have to rely on companies to write code&lt;/head&gt;
    &lt;p&gt;We already rely a lot on open source for our most crucial code - at the heart of our operating systems.&lt;/p&gt;
    &lt;p&gt;For example, here is the source code of Android, which is almost 200 million lines of code, and which stands on the shoulders of other open source projects like Linux (which runs most computers in the Cloud).&lt;/p&gt;
    &lt;p&gt;Most linux development today is funded via for-profit companies, who benefit from Linux meeting their or their customers needs. But the first version was made by one dude to meet his own needs, who posted it on a forum.&lt;/p&gt;
    &lt;p&gt;Today, facilitated by LLM’s, many more people can write little scripts to meet their own needs. Via open source, that code can be cleaned up and grow to meet bigger needs, for bigger audiences. We can also make little edits to the code to fit our own needs.&lt;/p&gt;
    &lt;p&gt;But open source software is often outcompeted by closed source software. There’s a reason why people use MS office or Google to make a &lt;del&gt;powerpoint&lt;/del&gt; presentation, and not the many attempts at open source alternatives. Sometimes, the polish required for these products is boring and difficult. Open source software is good for interesting things. Vibe coding is good for small things.&lt;/p&gt;
    &lt;p&gt;So ideally, we want to be able to take code from all 3 places and combine them, via small wrappers, into more need-meeting, tailor-made software.&lt;/p&gt;
    &lt;p&gt;But code is only as useful as the information it has access to. And so access to information has become the limiting reagent in our computing.&lt;/p&gt;
    &lt;p&gt;This is especially the case with the new capabilities we have from LLM’s, to understand the depth of our own context and provide a whole new level of output tailoring.&lt;/p&gt;
    &lt;head rend="h3"&gt;Most of our data is sitting inside a few companies&lt;/head&gt;
    &lt;p&gt;Remember when we used to call Applications “Programs”? Back then, they were just executable code that we’d run on our own computer.&lt;/p&gt;
    &lt;p&gt;Then we started owning multiple computers (including a pocket-sized one!), the Cloud formed, and javascript gave us web applications.&lt;/p&gt;
    &lt;p&gt;So what started as outsourcing code, became outsourcing the actual computing, and most of our data storage, to companies, who could offer the convenience and profitability of a 1-stop-computing-shop.&lt;/p&gt;
    &lt;p&gt;Today’s output becomes tomorrow’s input! So that data grows and grows, inside the same handful of big companies.&lt;/p&gt;
    &lt;p&gt;It seems to work for us too.&lt;/p&gt;
    &lt;p&gt;We prefer a handful of companies - because the fewer apps that have our data, the less exposed we feel.&lt;/p&gt;
    &lt;p&gt;We prefer big companies - because there is safety in numbers.&lt;/p&gt;
    &lt;p&gt;While anti-monopolistic regulation encourages better access to that data…that can only move the market so much.&lt;/p&gt;
    &lt;p&gt;And so:&lt;/p&gt;
    &lt;head rend="h3"&gt;Trust is our computing bottleneck&lt;/head&gt;
    &lt;p&gt;While it’s possible for my bank to implement these features, it’s probably not going to get them to me any time in the next few years (despite all the “AI enablement” and “agentic transformation” going on there lol).&lt;/p&gt;
    &lt;p&gt;It’s actually also possible for these features to be coded up and bolted on, without needing anything from the bank.&lt;/p&gt;
    &lt;p&gt;But it’s too much work for me to code for myself - probably more work than me just looking at my own bank statements.&lt;/p&gt;
    &lt;p&gt;If someone else made a product (that I trusted), I’d pay for it.&lt;/p&gt;
    &lt;p&gt;If there was an open source product, that was easy to use (that I trusted), I would use it. I might even write a compatibility layer for my own South African bank’s statements.&lt;/p&gt;
    &lt;p&gt;I’m open to having it done via integration with ChatGPT too - using their new apps, which could integrate with a new web app and its associated browser extension, to enable these features.&lt;/p&gt;
    &lt;p&gt;But - it doesn’t exist. And the fundamental reason why… is a lack of trust.&lt;/p&gt;
    &lt;p&gt;The new app would need direct access to your bank statements, emails, and chatbot history, and the content of every page you visit on your browser. It is way too hard for an upstart, even with a community behind them, to command the requisite trust.&lt;/p&gt;
    &lt;p&gt;Let’s not be hand-wavey about it - and be more precise what this web app would need to be entrusted to do.&lt;/p&gt;
    &lt;p&gt;(Expand to see why / how)&lt;/p&gt;
    &lt;head&gt;It needs to search through my email&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Why? When I buy something from amazon, it could be dog food or it could be a drone. Those feel like different spend categories. My email can be used to disambiguate this. Or it could just be used to receive bank statements.&lt;/item&gt;
      &lt;item&gt;How? For each bank item, search my email, and categorise it.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head&gt;It needs to pull in all my bank statements&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Why? It's the source of truth&lt;/item&gt;
      &lt;item&gt;How? This either needs to come in by digesting my monthly bank statement that's emailed, or using some third party API (like yodlee). Yodlee is expensive - but not that complicated. Under the hood, it literally just uses web scraping.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head&gt;It need to categorise each line item and save it to a database&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Why? The classification is too heavy to rerun every time data is required. It requires searching through emails. It might even require the user to label things.&lt;/item&gt;
      &lt;item&gt;How? A simple SQL database would do just fine&lt;/item&gt;
    &lt;/list&gt;
    &lt;head&gt;It needs understanding of my life - ideally from ChatGPT&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Why? I need to be able to correlate my financial data back to my life, including when I moved to cape town, where I went on holiday. This is all currently deducable from ChatGPT conversations. (WhatsApp could also work).&lt;/item&gt;
      &lt;item&gt;How? This is hard! There is no API access to conversations from ChatGPT. So the only way to do this, is to build a ChatGPT integration - to cross their moat on their terms, which is to have GPT-5 ferry across the data for you. So we can see that OpenAI is terribly misaligned with our needs here (and wait until the Ads!)&lt;/item&gt;
    &lt;/list&gt;
    &lt;head&gt;It needs a user interface that contains chat…but not only chat&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Why? Chat is not the best place to edit your financial goals - even though it might be a great way to set them via a journalling-like flow. It's not the best place to view a dashboard.&lt;/item&gt;
      &lt;item&gt;How? It needs to include a normal web app&lt;/item&gt;
    &lt;/list&gt;
    &lt;head&gt;It needs a browser extension that can show my remaining balance&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Why? A browser extension can understand every page you're on, and show an overlay&lt;/item&gt;
      &lt;item&gt;How? It would use some a small model to parse the HTML of every page. It would edit the HTML to show a balance overlay, and a little show notification on its little icon to provide evidence that it's the thing showing the overlay.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head&gt;It needs to not feel self hosted&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Why? The point of this whole thing is make our lives easier.&lt;/item&gt;
      &lt;item&gt;How? It's tricky…because if it's not self hosted, who are you going to trust with all this data?&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Our patterns for computing with sensitive data make this unfeasible.&lt;/p&gt;
    &lt;p&gt;Sometimes, like with ChatGPT conversations, we don’t have a key to the big company vaults where we keep our data safe.&lt;/p&gt;
    &lt;p&gt;And even when there is access via key, like with gmail, we must be very discerning before clicking “yes” on an OAuth Dialog; minting a new key for that little banking add-on is quite a big risk.&lt;/p&gt;
    &lt;p&gt;Because once access is granted, it can never really be revoked. In the unlikely event that you do remember to change the locks after you retire the add-on, it could still retain your data. Because when the add-on has a key to your vault - even read-only access, it is impossible to know what they’ll do with the data inside it. They can copy it. They can share it. They can sell it.&lt;/p&gt;
    &lt;p&gt;Yes, some of that’s illegal. But possession is 9/10ths of the law, and they have possession of our data. The courts are too weak to meaningfully enforce what web apps do, world-wide.&lt;/p&gt;
    &lt;p&gt;And the world-wideness of the web so useful, so formidable, and so precious; it’s given us 4 billion websites, many of them created by The Little Guys. In the era of LLM’s and of a hyper-personalised private web, we need to find a way for The Little Guys to be trusted enough with our data, to do their magic.&lt;/p&gt;
    &lt;head rend="h2"&gt;Enforcing conditions is better than handing out keys&lt;/head&gt;
    &lt;p&gt;Instead of choosing who to trust unconditionally with our data…why don’t we introduced a few conditions? With the right conditions, we can lower the bar enough to be open to the public, and all the well intentioned Little Guys.&lt;/p&gt;
    &lt;p&gt;We need a runtime environment with right conditions. The internet already got this far, via a well selected runtime environment: the browser’s javascript engine. Because of it, you can click a link, without thinking twice, and run code written by who-knows-who from who-knows-where on the world-wide-web, on your own personal computer, which has all kinds of sensitive information on it.&lt;/p&gt;
    &lt;p&gt;We need to add another runtime environment, with the right conditions. All your data should be moved into that runtime environment - so there is a well organised buffet available to any program you elect to click on.&lt;/p&gt;
    &lt;p&gt;What are the right conditions?&lt;/p&gt;
    &lt;p&gt;There is only one.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;You are not allowed to transmit or store my sensitive information anywhere (unless I give my consent).&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Under this condition, sensitive information taints other information, as if it’s radioactive. Any other information it affects becomes sensitive itself, whether it’s an intermediate variable or a final output.&lt;/p&gt;
    &lt;p&gt;Isn’t that too restrictive?&lt;/p&gt;
    &lt;p&gt;Most code today is riddled with network requests. How can code shared with us be useful without them? Where is it supposed to send its output?&lt;/p&gt;
    &lt;p&gt;The code can still make network requests; it just can’t include sensitive data inside those network requests.&lt;/p&gt;
    &lt;p&gt;And it can still derive outputs, and store the outputs…within the runtime environment, which has its own encrypted database. That output, like all other sensitive information, can be decrypted by and revealed to the authenticated user, in any custom format. That format could be a web app. It could even be browser overlay on amazon.com…in a very clear, ringfenced way.&lt;/p&gt;
    &lt;p&gt;How do we enforce the conditions?&lt;/p&gt;
    &lt;p&gt;“Consent” isn’t some flaccid banner blocking half the landing page; it must be demonstrably impossible to circumvent. To do this, we need to invoke two fairly low-key computing patterns&lt;/p&gt;
    &lt;p&gt;First, we need a reliable way to tell which information has been tainted as sensitive. For that, we turn to the field of Information flow, where there are well established mechanisms to evaluate the taint, in modern languages like javascript.&lt;/p&gt;
    &lt;p&gt;Then, we need a publicly verifiable proof that the runtime environment housing the information and running the code is actually enforcing the conditions as it promises - no more, no less, no different. Open sourcing the runtime environment is insufficient proof. For this, we need remote attestation, which can be performed within secure compute environments on most modern clouds.&lt;/p&gt;
    &lt;head rend="h3"&gt;How do we make this happen?&lt;/head&gt;
    &lt;p&gt;For this way of computing to gain any relevance, there needs to be a compelling enough sell to enough users.&lt;/p&gt;
    &lt;p&gt;That seems really, really hard.&lt;/p&gt;
    &lt;p&gt;Whatever the path is, I don’t see it clearly, but it seems to need to trace through two rough milestones.&lt;/p&gt;
    &lt;p&gt;1. An active community of technical users hacking away in it &lt;lb/&gt; Those in it might say: “I really buy into the principles of this thing. And it seems useful - look what that person made on it! It seems like a web version of claude code + skills + marketplace, but with an encrypted database, and permissions that let you feel safe using yolo mode. I’m going to try it.”&lt;/p&gt;
    &lt;p&gt;2. A breakout to heavy users of ChatGPT (et al), with a polished, managed product &lt;lb/&gt; At this juncture, a product manager type, for example, might say: “Oh, wow, I see how this personalised web OS thing would be useful. Let me get out my credit card, bring all my data onto this thing, and try some of these plugins”.&lt;/p&gt;
    &lt;head rend="h4"&gt;Here are some questions that linger for me:&lt;/head&gt;
    &lt;p&gt;What should the value proposition of the polished, managed product be - and what might it replace (ChatGPT / Notion / Chrome / Tampermonkey)? Can you sell the long tail of features, as a killer feature? How might we aim smaller - should the first step be a standalone service that makes it vercel-easy to serve out of attestable images? How should schema sharing interleave with code sharing, to permit extensibility? What can we augment or transfer from Claude code - given what can already be hacked together there? Is taint tracking watertight enough? How different will runtime compatible code need to be, and what effect will that have on ease of writing/generating? Can/should people be financially incentivised to create useful programs to run in this environment? How can the environment permit sensitive data to leave, at the user’s behest, with graceful UX? How might a browser safely delineate what UI elements are generated from what code?&lt;/p&gt;
    &lt;p&gt;One thing is clear:&lt;/p&gt;
    &lt;head rend="h4"&gt;It’s going to take a community&lt;/head&gt;
    &lt;p&gt;It seems to be forming around Alex Komoroske’s public benefit corp, common.tools…which is where the central idea of an attestable exfiltration proof runtime environment above comes from.&lt;/p&gt;
    &lt;p&gt;After bumping against the trust problem myself, I signed up to the waitlist, which spawned a few really interesting conversations. Here's hoping there are a few more in the comments section! 😀&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://arjun.md/little-guys"/><published>2025-10-27T17:27:18+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45724045</id><title>Why Nigeria accepted GMOs</title><updated>2025-10-27T20:37:14.386400+00:00</updated><content>&lt;doc fingerprint="7a51905f08b75614"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Why Nigeria Accepted GMOs&lt;/head&gt;
    &lt;head rend="h3"&gt;Genetically modified crops are finding a foothold in the Global South, producing some unlikely leaders in agritech.&lt;/head&gt;
    &lt;p&gt;By Dr. Alex Wakeman&lt;/p&gt;
    &lt;p&gt;Around 10,000 years ago, nomadic hunter-gatherers started to pick and eat the seeds of grasses, and the world hasn’t been the same since. The fertile rivers and reliable sun of the Middle East, China, and South America nurtured vast grasslands. The humans who settled there quickly developed a keen eye for harvesting and cultivating the largest, tastiest seeds, which meant that the following season, only those got sown. They did the same the next year and the next, over the generations, until we arrived at modern crops.&lt;/p&gt;
    &lt;p&gt;Around the Levant, this process of selecting for the most robust seeds created wheat; along the floodplains of the Yangtze, it created rice; and amidst the tropical foothills of the Mayan lowlands, it created maize. These three cereal crops alone make up around half of all the calories consumed by humans, and they constitute an even larger part of the diet in developing countries.&lt;/p&gt;
    &lt;p&gt;Today, climate change presents a steep challenge for agriculture, a practice that provides most of our food but, in return, demands arable land (which is decreasing), water (which is becoming less available), nitrogen (which, through its industrial byproducts, is a major pollutant), and protection from insects, disease, and weeds (often requiring pesticides, which are damaging to the environment and human health).1 Meanwhile, the world’s population is still growing, and around 2100, when global temperatures are projected to peak, there will be several billion more people on the planet.&lt;/p&gt;
    &lt;p&gt;As someone who has spent the last five years researching cereals, I’m all too aware that the challenge presented to modern plant scientists is almost paradoxical: to significantly increase cereal yields and feed the burgeoning population while using less land, water, nitrogen, and pesticides.&lt;/p&gt;
    &lt;p&gt;Fortunately, our understanding of evolution, genetics, and molecular biology has improved over the past 10,000 years, meaning we no longer rely just on visually apparent traits. We have now sequenced full genomes of all the major cereals and can map phenotypic traits like grain size or drought tolerance to individual genes. Furthermore, gene editing technologies such as CRISPR allow us to precisely edit these genes to create improved varieties. Genetic Modification (GM) technologies have already been used to make cereal varieties like high “nitrogen use efficiency” rice, which requires less fertilizer, or “Bt maize,” which produces a natural pesticide, reducing yield loss and pesticide use.&lt;/p&gt;
    &lt;p&gt;Before 2011, the majority of GM crops were grown in the global North; in countries like the U.S., Canada, and Spain. But today, GM harvests in the developing world have outstripped it. “By 2023, the disparity between developing and developed countries reached 19.8 million hectares,” according to a 2024 review article,” with developing countries accounting for 54.78 percent of the total GM crop area.”&lt;/p&gt;
    &lt;p&gt;Indeed, much of the pioneering work on the adoption and regulation of GM crops is being done in the Global South, in countries that cannot afford to be risk-averse when it comes to agriculture. But the Global South, of course, is not heterogeneous. Each country represents a unique combination of history, political landscape, and cultural relationship with agriculture. Still, Global South countries can generally be said to possess low levels of food security, rapidly growing populations, and a high vulnerability to climate change.&lt;/p&gt;
    &lt;p&gt;One of the most impactful examples of the shift towards GM adoption in the Global South can be seen in Nigeria. A large, climate-stressed country, Nigeria is a major agricultural producer of, among other crops, cowpea, an orphan crop nicknamed “poor man’s meat” for its high protein content. It forms an essential part of the diet for around 200 million Sub-Saharan Africans, and Nigeria is its largest producer. However, yields are being decimated by drought and a variety of pests that have become more prevalent with shifting climes.2&lt;/p&gt;
    &lt;p&gt;Like almost all of Africa, prior to 2019, Nigeria had never grown any kind of GM food crop despite having an agricultural sector that constituted 22 percent of its GDP. But that year, the Nigerian government approved the cultivation of Bt cowpea. The Bt cowpea proved popular with farmers and is estimated to add $336 million to the Nigerian economy over the next 25 years. More importantly, the governmental bodies responsible, the National Biosafety Management Agency (NBMA, which regulates GM crops) and the National Biotechnology Research and Development Agency (NBRDA, which conducts research and field trials), demonstrated that they could safely develop and regulate Nigeria’s first GM crop for human consumption.&lt;/p&gt;
    &lt;p&gt;And success with Bt cowpeas quickly paved the way for other GM crops.&lt;/p&gt;
    &lt;p&gt;In 2024, Nigeria started growing its first GM cereal — TELA maize3 — which has proven resilient to both drought and several of the region’s most pernicious insect pests. Indeed, the TELA maize roll-out has been an epitome of scientific collaboration and realizing the “promise” of GM. Funding from groups like the Bill and Melinda Gates Foundation and USAID supported an international team of scientists from developing countries in creating crop varieties tailored to their own needs and environments, all while licensing the resulting seeds royalty-free.&lt;/p&gt;
    &lt;p&gt;The story of GM acceptance in Nigeria is worth a closer investigation, both for nations that may need to adopt GM crops to protect their agriculture against climate change, and for the countries that rely on their exports for both human food and animal fodder.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Nigerian Journey&lt;/head&gt;
    &lt;p&gt;The TELA maize project began back in 2008. Around this time, scientists at the CIMMYT cereal research institute in Mexico — together with collaborators in eight African nations —were researching a new GM variety of “water-efficient” maize called WEMA (Water Efficient Maize for Africa) that could better survive droughts.&lt;/p&gt;
    &lt;p&gt;One of the ways drought stunts growth or even kills plants is by preventing RNA from folding correctly, disrupting protein production. Water can form hydrogen bonds with the hydroxyl groups that form the backbone of RNA, and also interact with the hydrogen bonds between RNA bases. Dehydration thus destabilises the RNA structure and causes it to fold incorrectly, preventing it from carrying out its normal functions. To remediate this cellular stress, researchers introduced the “cspB” gene, encoding a chaperone protein that stabilizes RNA and helps it to fold correctly even under drought stress.&lt;/p&gt;
    &lt;p&gt;However, this new GM maize was too successful. “After [a] drought, insects had no better vegetation for miles … We lost five different field trials to the stemborer,” explained Dr. Sylvester Oikeh, who worked on the project. In other words, researchers had prevented the maize from succumbing to drought, only for it to become the healthiest, most delicious-looking plant to pests for miles.&lt;/p&gt;
    &lt;p&gt;Fortunately for the scientists working on WEMA, insect resistance was already one of the most widely understood and used GM modifications in the world. “Bt” refers to the genetic modification that allows a crop to produce a natural protein insecticide, decreasing the need for chemical sprays.&lt;/p&gt;
    &lt;p&gt;It was first introduced in the context of Bt cotton, which now makes up as much as 90 percent of all cotton grown in India, China, and the U.S. It remains the world’s most successful GM modification, added to plants from tomato to soybean, reducing the world’s chemical pesticide use by almost half a million tons from 1996 to 2016. Bt is commonly inserted into the plants and “stacked” alongside other genes, thus creating crop varieties with multiple modifications. TELA, for example, contains both drought-resistant cspB and pest-resistant Bt genes.&lt;/p&gt;
    &lt;p&gt;Initially, Nigeria had not been part of the WEMA/TELA research project. In 2008, the country’s sentiments were still predominantly anti-GM. However, worsening climate conditions and pressure from scientists, struggling farmers, and a collapsing textiles industry pushed the country towards a breaking point.4 Between 1994 and 2005, for example, around 64 percent of Nigeria’s textile mills closed, and the looming collapse of the industry left the government little option but to permit Bt cotton in 2018. It was hoped that Bt cotton could increase cotton yields from the troublingly low 0.6-0.9 tonnes per hectare, while cutting pesticide spraying in half. Since then, Nigerian Bt cotton has been shown to produce 4.1 to 4.4 tonnes per hectare.&lt;/p&gt;
    &lt;p&gt;These encouraging results led Nigeria to ask to join the TELA project in 2019, and Nigeria’s Ahmadu Bello University became one of its major research hubs. The following year, the NBMA published guidance on genome editing (GE) technologies such as CRISPR, the first such guidelines published by an African government.&lt;/p&gt;
    &lt;p&gt;Before Nigeria could commercialize TELA maize, however, it needed to conduct extensive field trials. These ran for five years, and the data collected from the final stage trials showed maize yields increasing by as much as 19 percent more than the same maize lines without the Bt gene, and 40 percent more than other popular commercial varieties, when tested under real pest pressure. “The farmers were so excited when they saw the outcome,” said Oikeh, “There was a three-week drought when everything else died, and the TELA maize just stayed there.”&lt;/p&gt;
    &lt;p&gt;Nigeria is now conducting trials with several other GM crops in various stages of development and safety testing. As one of the world’s largest consumers of rice and Africa’s largest rice producer, Nigeria has been testing GM rice with improved Nitrogen Use Efficiency (NUE). This variety has been predicted to increase yields by as much as 25 percent, while reducing the use of nitrogen fertilizers. The NBMA has also started trials on the VIRCA Plus project, which aims to produce a GM cassava with increased iron and zinc levels, to help fight key nutritional deficiencies responsible for childhood stunting and high malarial mortality in West Africa.&lt;/p&gt;
    &lt;p&gt;Yet even successful field trials are not enough on their own to drive a shift to GM agriculture. The true adoption comes when farmers and consumers feel like GM is safe and effective.&lt;/p&gt;
    &lt;p&gt;Therefore, alongside the commercialization of TELA maize, the Nigerian government, in collaboration with NGOs like the Open Forum on Agricultural Biotechnology in Africa (OFAB) and the African Agricultural Technology Foundation (AATF), put greater effort into outreach and education to farmers and the Nigerian public. Farmers were consulted on their needs and concerns with WEMA and TELA maize, not only once it was ready for commercialization, but during the development stages as well. “We also took politicians to the field to see the technology for themselves.” Dr. Oikeh explained. Seeing the education work as an essential and continual part of the GM process, he added: “Right now we are working on ways to help Nigerian farmers share their experience of TELA with their peers.”&lt;/p&gt;
    &lt;p&gt;In tandem with this outreach, the formation of a regulatory body like the NBMA also helped build public trust. Since its creation in 2015, the NBMA has monitored GM field trials, conducted lab analysis of GM crops, and developed plans to address potential risks associated with GM. The group inspects research facilities to ensure safety measures are followed and field trials to ensure the GM trial crops are contained. Following the commercialization of a GM crop, they meet with farmers to register their honest opinions and track yield changes, hoping to ensure greater independence from agritech companies’ marketing for performance statistics.&lt;/p&gt;
    &lt;p&gt;The key to successful GM adoption appears to combine science-based biotech regulations, rigorous testing, and expansive education: all strategies that rely on government trust. However, this poses a significant problem in the Global South, where many countries that would benefit most from GM have low levels of government trust.&lt;/p&gt;
    &lt;p&gt;The “Democracy Index” is a calculation that takes into account government trust, political participation, and government functioning. While Western Europe enjoys a mean democracy index of 8.4, more agriculturally dependent regions in the Global South, like South America and Sub-Saharan Africa, have indices of 5.6 and 4.0, respectively.&lt;/p&gt;
    &lt;p&gt;In general, a higher democracy index correlates with greater GM acceptance, although large differences exist between individual nations.5 South America contains both pro-GM and GM-skeptical nations. When comparing the two using the Democracy Index, however, the pro-GM countries have a consistently higher Democracy Index (6.8) than those that ban GM (4.4). Similarly, the mean Democracy Index for Sub-Saharan African countries that cultivate or are currently legislating towards GM crop cultivation (4.7) is higher than those that ban it (3.5).&lt;/p&gt;
    &lt;p&gt;This suggests that fostering democratic accountability is not simply a political good in itself, but also a precursor for enabling science-based agriculture. For countries looking to promote GM, the priority may not be exporting “democracy” wholesale, but supporting governments in building credibility, transparency, and public trust — the very conditions under which new technologies can take root.&lt;/p&gt;
    &lt;p&gt;Of course, GM-skeptical countries in the Global North, like those in Europe, have democracy index values significantly higher than almost any pro-GM developing country. But these countries also have the privilege of choice. Compared to South America or Sub-Saharan Africa, these countries import more of their food, have economies less dependent on agriculture, and are more capable of absorbing fluctuations in food prices as a result of climate disasters.&lt;/p&gt;
    &lt;p&gt;This brings up another critical point about why adoption in places like Nigeria surpasses that of these developed countries despite their good governance and technological capabilities — incentives. Although the Global North has invested in high-margin GM opportunities, these countries haven’t turned to them for non-commodity staple crops because these crops simply aren’t big money makers. While modifications like Bt might reduce labor and input costs in developed countries, there has been insufficient evidence that genetically modified plants increase yields in the markets where they have now been used for decades.&lt;/p&gt;
    &lt;p&gt;By contrast, when people invoke the increased yields GM delivers in places like Nigeria, this is usually about preventing loss due to crop failure and pests. TELA maize was designed to withstand abiotic stress, and while researchers and farmers are hopeful that it will also be more highly productive even when there is not a severe drought, that remains to be seen. All that has been verified to date from data coming out of these current trials is that the GM crops are faring better than their non-GM counterparts.&lt;/p&gt;
    &lt;p&gt;Closely related to incentives, the GM rollouts in Nigeria also demonstrate where support stems from when need is great. Since countries in the Global South have to protect their populace from starvation and economic devastation from crop failure, public sector engagement is the driving force behind GM cultivation. This is not to say that absolute need is the only factor at play, but to emphasize that the forcing functions differ between a country like the U.S. and Nigeria. As the U.S. and other Global North countries increasingly feel the effects of climate on agriculture, however, their incentives might shift towards exploring GM, not so much to produce unbridled abundance, but to avoid harm.&lt;/p&gt;
    &lt;head rend="h2"&gt;A Globalization “Problem”&lt;/head&gt;
    &lt;p&gt;Nigeria is not alone in its incipient embrace of GM technology. Other countries that previously had blanket bans on GM are now trialing their first GM varieties, and countries that previously had limited GM cultivation are expanding the number of crops and varieties they permit. In 2017, Argentina, Bolivia, Brazil, Chile, Paraguay, and Uruguay signed a joint declaration aiming to unify their GM policies, resulting in more consistent, science-led assessment of new gene-edited crops across much of South America.&lt;/p&gt;
    &lt;p&gt;This acceptance seems bound to spread as the world’s agriculture is heavily globalized. While it is inspiring to see Global South nations using GM to protect their own food security, the adoption of this technology is not an issue for them alone. Even countries in the Global North that refuse to grow GM themselves import huge quantities of agricultural products, more and more of which are GM.&lt;/p&gt;
    &lt;p&gt;For instance, the notoriously anti-GM EU now imports 36 million tons of GM soybeans a year and recently greenlit the import of two new GM maize varieties, though only for animal feed. Or take Japan, a major importer of papaya from Hawaii. In the 1990s, Papaya Ringspot Virus almost wiped out Hawaii’s native Papaya industry, which spiked prices in Japan. Fortunately, researchers in Hawaii and at Cornell University had been working on a virus-resistant GM papaya for 14 years. In 1998, this variety was legalized and is widely considered to have single-handedly saved the Hawaiian papaya industry. Japan was more than happy to import the new virus-resistant GM variety and bring its food prices back down.&lt;/p&gt;
    &lt;p&gt;Another potential impact of growing GM acceptance around the world is that GM demand might not wait for GM approval and proper regulation. Borders are porous. Brazil first legalized GM soybeans because so many farmers were smuggling seeds across the border from pro-GM Argentina that there was no other choice but to admit that a significant amount of the country’s soybeans were already GM. Dr. Oikeh shared a similar observation regarding West African farmers. “I bet you farmers will come from Niger and buy the seeds … You can have police checking luggage across the border, but a pack of seeds is very small.”&lt;/p&gt;
    &lt;p&gt;It is unreasonable to expect impoverished farmers not to protect their livelihoods as they watch their neighbors benefit from GM technology. In 2022, after years of severe droughts, Kenya’s government reversed a 10-year ban on GM crops. Uganda shares a border with Kenya but has not yet joined them in permitting GM crop cultivation — a choice that will have serious consequences. “Now that the Kenyans are free to grow GMOs, our farmers [in Uganda] will definitely look across … as their counterparts in Kenya will be reaping bountifully from their newfound seeds,” says Grace Lonyo Ocheng, principal Nutritionist at the Ugandan Ministry of Health. This is not only likely to increase the flow of smuggled, unregulated GM seeds into Uganda, but also decrease the market for Ugandan crops in East Africa, as Kenyan crops improve and the nation grows less reliant on imports.&lt;/p&gt;
    &lt;p&gt;Examples such as these emphasize the arbitrary yet consequential nature of borders. They also highlight that nations cannot naively think they will be unaffected by how GM agribusiness plays out elsewhere. Food supply chains and commodity exchanges are globalized, complicated systems, and proactive regulation is the sensible response. When a transgenic crop is developed in the U.S., regulated in the European Union, and squirreled into Niger, we must ask ourselves if we can’t surely devise a more efficient and reasonable approach.&lt;/p&gt;
    &lt;p&gt;New technologies, whether automated cotton mills, internal combustion engines, nuclear fission reactors, microchips, or GM crops, are all solutions to problems that may themselves create yet other problems. But whenever a new technology has improved the world, it has been through actively managing the negatives that arise rather than through discarding the technology entirely.&lt;/p&gt;
    &lt;p&gt;Pointing to the bottlenecks preventing us from fully benefiting from a new technology like GM is the easy (even fashionable) part. Actually removing them requires something that has been harder: we must allow GM technology to become part of ordinary life. It doesn’t deserve the fearmongering it continues to receive, nor is it a magic bullet. It is simply a tool. And as nations like Nigeria increasingly turn to this tool, we will become better able to assess the extent of its benefits and learn how to improve upon them in light of what we discover.&lt;/p&gt;
    &lt;p&gt;Dr. Alex Wakeman is a writer and researcher based in Leeds, UK. His PhD focused on plant perception of time and space.&lt;/p&gt;
    &lt;p&gt;Thanks to Eli Hornstein, Modesta Nnedinso Abugu, and Samuel Acheampong for providing feedback on this draft. Thanks to Sylvester Oikeh and Abraham Manalo for helpful discussions. Lead image by Ella Watkins-Dulaney.&lt;/p&gt;
    &lt;p&gt;Cite: Wakeman, Alex. “Why Nigeria Accepted GMOs.” Asimov Press (2025). https://doi.org/10.62211/55gf-71kw&lt;/p&gt;
    &lt;p&gt;With that said, the Green Revolution of the 50s was able to use less land by using more water, fertilizer, and pesticides. Over the passing decades, however, the plentitude of these resources has changed. One example is our use of groundwater. A global analysis of ~170,000 wells shows rapid and widespread declines (&amp;gt;0.5 m/yr) in the 21st century and that depletion has accelerated in ~30 percent of the world’s aquifers — especially in dry, crop-intensive regions. So while more-water intensive strategies may have aided agricultural productivity during the Green Revolution, the same approach would be feckless today given worsening droughts, draining aquifers, and rising temperatures.&lt;/p&gt;
    &lt;p&gt;Bruchid weevils, for example, lay their eggs on cowpea pods, and the hatching larvae burrow into the seeds, leaving them hollow and powdery.&lt;/p&gt;
    &lt;p&gt;TELA maize derives its name from the Latin word for protection — tutela.&lt;/p&gt;
    &lt;p&gt;A set of conditions likely to repeat itself across the developing world over the coming years.&lt;/p&gt;
    &lt;p&gt;The global correlation between Democracy Index scores and GM adoption is weak (r ≈ 0.2) — in part because many nations with high democracy indices, especially in the European Union, have not accepted GMOs — but regional patterns are stronger. The contrast is particularly evident when comparing countries within South America and Sub-Saharan Africa, where pro-GM nations do show consistently higher democracy scores than their GM-skeptical neighbors. Even so, the democracy-GM relationship should be understood as one contextual factor among many, rather than a universal predictor of GM policy.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.asimov.press/p/nigeria-crops"/><published>2025-10-27T17:42:23+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45724159</id><title>Carl Bohland's Auto Wash Bowl (2015)</title><updated>2025-10-27T20:37:14.210934+00:00</updated><content/><link href="https://news.wttw.com/2015/07/29/ask-geoffrey"/><published>2025-10-27T17:51:16+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45724913</id><title>Creating an all-weather driver</title><updated>2025-10-27T20:37:13.973670+00:00</updated><content>&lt;doc fingerprint="39afdc53bfb06cf0"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Creating an all-weather Driver&lt;/head&gt;
    &lt;p&gt;Life doesn't freeze when winter comes—if anything, that's when riders need reliable transportation most, when being exposed to the elements becomes less appealing. Today, the Waymo Driver successfully navigates rain, fog, sandstorms, and freezing temperatures. As we expand to more cities across the U.S. and globally, we're applying the same systematic, scientific approach that enabled us to validate the Waymo Driver for these conditions to advance our capabilities for snowier, winter weather.&lt;/p&gt;
    &lt;p&gt;Our proven, safety-guided methodology involves four key steps:&lt;/p&gt;
    &lt;p&gt;Understanding the Challenge&lt;/p&gt;
    &lt;p&gt;Snow isn't a single phenomenon—it's a spectrum of conditions that can affect a human or autonomous driver in multiple ways. Atmospheric conditions can range from a light dusting to a complete whiteout, while road surfaces may be snow-covered or have icy patches, and environmental factors like snow buildup along roadsides add further complexity. For years, we've been advancing our system in some of the snowiest conditions across the country —regularly driving in Upstate New York, Michigan's Upper Peninsula, and the Sierra. We've amassed tens of thousands of miles in diverse, snowy conditions. This has allowed the Waymo Driver’s AI to learn from real driving experience and train to navigate a wide range of winter weather.&lt;/p&gt;
    &lt;p&gt;Designing Generalizable Solutions&lt;/p&gt;
    &lt;p&gt;At Waymo, we're building one autonomous system that works across diverse conditions—the same Waymo Driver navigating foggy San Francisco can navigate snowy Denver. Our 6th-generation Driver is informed by over 100 million fully autonomous miles of driving experience, combining state-of-the-art hardware and AI to adapt to and sustain fully autonomous operations in cities with harsher weather.&lt;/p&gt;
    &lt;p&gt;The Waymo Driver uses cameras, radar, and lidar to perceive the world around it, with each sensor providing a complementary field of view that's especially helpful in inclement weather. Its automated cleaning system –using clever engineering and heating elements – keeps the sensors clear so the vehicle can continue serving riders without needing to pull over.&lt;/p&gt;
    &lt;p&gt;Our system provides context not only about where it's operating, but also about the conditions it’s operating under. We're creating state-of-the-art AI, building on top of our existing models with richer inputs and advanced capabilities designed to navigate winter conditions. For example, our AI can distinguish between where there's snow, slush, ice, and normal road surface. The Waymo Driver then uses this information to adjust its driving behavior to match the road conditions in real-time, allowing the Waymo Driver to navigate based on what it sees (and feels), also inferring insights from other road users—adapting to blocked roads, detours, and changing surface conditions. When the system detects lower traction, it automatically adjusts its speed, acceleration, and braking. Each vehicle essentially acts as a mobile weather station, gathering data to inform its own driving decisions and share with the rest of the fleet in the city. These responses are consistent and thoroughly tested, providing predictable and safe navigation in challenging conditions.&lt;/p&gt;
    &lt;p&gt;Rigorously Validating Our Capabilities&lt;/p&gt;
    &lt;p&gt;We validate our generalizable system through real-world driving, closed-course testing, and large-scale simulation. With our growing operations in snowy cities like Detroit, Denver, and Washington D.C., in addition to visits to other areas, we're deepening our understanding of winter weather conditions and validating our capabilities. At closed-course testing facilities, we push the system to its limits in controlled environments, teaching it to recognize and respond to extreme scenarios like losing traction on ice. Then, we expand our learning year-round through simulation, long after the last snowflake has melted, so the Waymo Driver is prepared for rare and unusual events, like once-in-100-year snow New Orleans experienced this past winter.&lt;/p&gt;
    &lt;p&gt;Scaling Responsibly&lt;lb/&gt;Once we've validated our technology and operations by our Safety Framework and high caliber for rider excellence, we expand our service with clear guidelines about when our vehicles will operate based on local conditions. As we scale, we're also refining our operations to support winter service—from keeping our fleet clean and charged in freezing temperatures to optimizing the rider experience. Winter weather is complex, but we're committed to providing reliable service when riders need it most. As we continue expanding to more cities around the world, our progress is guided by safety, and riders can trust that the Waymo Driver is ready when we open our doors.&lt;lb/&gt;Looking for an all-weather Driver instead of all-weather tires? Follow along on our progress to bring Waymo to more cities at waymo.com/updates.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://waymo.com/blog/2025/10/creating-an-all-weather-driver"/><published>2025-10-27T18:57:57+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45725009</id><title>Study finds growing social circles may fuel polarization</title><updated>2025-10-27T20:37:13.539912+00:00</updated><content>&lt;doc fingerprint="b71dc3835465878d"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;More friends, more division: Study finds growing social circles may fuel polarization&lt;/head&gt;
    &lt;head rend="h5"&gt;Sadie Harley&lt;/head&gt;
    &lt;p&gt;scientific editor&lt;/p&gt;
    &lt;head rend="h5"&gt;Robert Egan&lt;/head&gt;
    &lt;p&gt;associate editor&lt;/p&gt;
    &lt;p&gt;Between 2008 and 2010, polarization in society increased dramatically alongside a significant shift in social behavior: the number of close social contacts rose from an average of two to four or five people. The connection between these two developments could provide a fundamental explanation for why societies around the world are increasingly fragmenting into ideological bubbles.&lt;/p&gt;
    &lt;p&gt;"The big question that not only we, but many countries are currently grappling with, is why polarization has increased so dramatically in recent years," says Stefan Thurner from the Complexity Science Hub (CSH), explaining the study's motivation. The research was published in Proceedings of the National Academy of Sciences.&lt;/p&gt;
    &lt;p&gt;The researchers' findings confirm that increasing polarization is not merely perceived—it is measurable and objectively occurring. "And this increase happened suddenly, between 2008 and 2010," says Thurner. The question remained: what caused it?&lt;/p&gt;
    &lt;head rend="h2"&gt;The friendship shift: From two to five close contacts&lt;/head&gt;
    &lt;p&gt;To investigate, Thurner and his team examined whether social networks had changed—specifically, whether people's close friendships had shifted. "For decades, sociological studies showed that people maintained an average of about two close friends—people who could influence their opinions on important issues," explains Thurner.&lt;/p&gt;
    &lt;p&gt;Here too, the researchers identified a striking change: "Around 2008, there was a sharp increase from an average of two close friends to four or five," explains CSH scientist Jan Korbel.&lt;/p&gt;
    &lt;head rend="h2"&gt;The paradox: More connection, more division&lt;/head&gt;
    &lt;p&gt;Are these two developments related? Do more close friends—and thus denser social networks—lead to network fragmentation and ultimately societal polarization?&lt;/p&gt;
    &lt;p&gt;Using a model based on real data, the researchers discovered this could indeed be the case: "When network density increases with more connections, polarization within the collective inevitably rises sharply," says Markus Hofer from CSH.&lt;/p&gt;
    &lt;p&gt;"This finding impressed us greatly because it could provide a fundamental explanation for the peculiar form of polarization we're currently observing simultaneously across many parts of the world—one that definitely threatens democracy," Thurner continues.&lt;/p&gt;
    &lt;p&gt;"When people are more connected with each other, they encounter different opinions more frequently. This inevitably leads to more conflict and thus greater societal polarization," adds Korbel.&lt;/p&gt;
    &lt;p&gt;Polarization has always existed, but what is happening now goes far beyond historical patterns. Greater connectivity has led to the formation of fewer but more tightly-knit groups with strongly differing opinions, between which there is hardly any exchange.&lt;/p&gt;
    &lt;p&gt;"There are few bridges between these 'bubbles,' and when they exist, they are often negative or even hostile," says Korbel. "This is called fragmentation, and it represents a new social phenomenon," adds Thurner.&lt;/p&gt;
    &lt;head rend="h2"&gt;Behind the numbers: Tracking polarization through decades of data&lt;/head&gt;
    &lt;p&gt;For their study, the researchers analyzed extensive existing survey data on both polarization and social networks.&lt;/p&gt;
    &lt;p&gt;"To measure political polarization, we used over 27,000 surveys from the Pew Research Center, which regularly records political attitudes of people in the US," explains Hofer.&lt;/p&gt;
    &lt;p&gt;"The key advantage of this data is that the questions have remained virtually unchanged over time, enabling reliable long-term comparisons."&lt;/p&gt;
    &lt;p&gt;The researchers found that political attitudes became significantly more one-sided between 1999 and 2017. For example, only 14% of respondents consistently expressed liberal views in 1999, but by 2017, this had risen to 31%. Conversely, only 6% of respondents consistently held conservative views in 1999, compared to 16% in 2017.&lt;/p&gt;
    &lt;p&gt;"More and more people are clearly aligning themselves with one political camp rather than holding a mixture of liberal and conservative views," explains Hofer.&lt;/p&gt;
    &lt;p&gt;To analyze friendship networks, the researchers combined 30 different surveys totaling over 57,000 respondents from Europe and the US, including the General Social Survey (US) and the European Social Survey.&lt;/p&gt;
    &lt;p&gt;"Despite minor differences between individual surveys, the data consistently show that the average number of close friendships rose from 2.2 in 2000 to 4.1 in 2024," says Hofer.&lt;/p&gt;
    &lt;p&gt;"The decisive contribution of this study is that it reconciled both phenomena using a mathematical social model," explains Thurner.&lt;/p&gt;
    &lt;p&gt;"This enabled us to show that increasing connectivity must lead to sudden polarization once a critical connectivity density is exceeded—just like a phase transition in physics, such as water turning to ice," adds Hofer.&lt;/p&gt;
    &lt;p&gt;"It is fascinating that these phase transitions also exist in societies. The exact location of these critical thresholds still needs clarification. According to our results, for close relationships, it lies somewhere between three and four people," the researchers note.&lt;/p&gt;
    &lt;head rend="h2"&gt;The smartphone era: When connection may have become fragmentation&lt;/head&gt;
    &lt;p&gt;The sharp rise in both polarization and the number of close friends occurred between 2008 and 2010—precisely when social media platforms and smartphones first achieved widespread adoption. This technological shift may have fundamentally changed how people connect with each other, indirectly promoting polarization.&lt;/p&gt;
    &lt;p&gt;"Democracy depends on all parts of society being involved in decision-making, which requires that everyone be able to communicate with each other. But when groups can no longer talk to each other, this democratic process breaks down," emphasizes Stefan Thurner.&lt;/p&gt;
    &lt;p&gt;Tolerance plays a central role. "If I have two friends, I do everything I can to keep them—I am very tolerant towards them. But if I have five and things become difficult with one of them, it's easier to end that friendship because I still have 'backups.' I no longer need to be as tolerant," explains Thurner.&lt;/p&gt;
    &lt;p&gt;What disappears as a result is a societal baseline of tolerance—a development that could contribute to the long-term erosion of democratic structures. To prevent societies from increasingly fragmenting, Thurner emphasizes the importance of learning early how to engage with different opinions and actively cultivating tolerance.&lt;/p&gt;
    &lt;p&gt;More information: Thurner, Stefan, Why more social interactions lead to more polarization in societies, Proceedings of the National Academy of Sciences (2025). DOI: 10.1073/pnas.2517530122. doi.org/10.1073/pnas.2517530122&lt;/p&gt;
    &lt;p&gt;Journal information: Proceedings of the National Academy of Sciences&lt;/p&gt;
    &lt;p&gt;Provided by Complexity Science Hub Vienna&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://phys.org/news/2025-10-friends-division-social-circles-fuel.html"/><published>2025-10-27T19:06:34+00:00</published></entry></feed>