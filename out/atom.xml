<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><id>hnrss.org/frontpage</id><title>Hacker News: Front Page</title><updated>2025-09-27T17:32:22.655147+00:00</updated><link href="https://news.ycombinator.com/" rel="alternate"/><link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml" rel="self"/><generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator><subtitle>Hacker News RSS</subtitle><entry><id>https://news.ycombinator.com/item?id=45392744</id><title>GPT-OSS Reinforcement Learning</title><updated>2025-09-27T17:32:30.082948+00:00</updated><content>&lt;doc fingerprint="bd03a57f89323790"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;gpt-oss Reinforcement Learning&lt;/head&gt;
    &lt;p&gt;You can now train OpenAI gpt-oss with RL and GRPO via Unsloth. Unsloth now offers the fastest inference (3x faster), lowest VRAM (50% less) and most context (8x longer) for gpt-oss RL vs. any implementation - with no accuracy loss. Since RL on gpt-oss isn't yet vLLM compatible, we rewrote Transformers inference code to deliver 3x faster inference for gpt-oss at ~21 tokens/s. For BF16, Unsloth also achieves the fastest inference (~30 tokens/s), especially relative to VRAM usage, using 50% less VRAM vs. any implementation.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;Free notebook: gpt-oss-20b GSPO Colab notebook This notebook automatically creates faster matrix multiplication kernels and uses a new Unsloth reward function. We also show how to counteract reward-hacking which is one of RL's biggest challenges.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;With Unsloth, you can train gpt-oss-20b with GRPO on 15GB VRAM and free on Colab. Unsloth's new inference runs faster on any GPU including A100, H100 and old T4's. gpt-oss-120b fits on 80GB VRAM.&lt;/p&gt;
    &lt;p&gt;Unsloth is the only framework to support 4-bit RL for gpt-oss. All performance gains are due to Unsloth's unique weight sharing, Flex Attention, Standby and custom kernels.&lt;/p&gt;
    &lt;p&gt;Reminder: Flash Attention 3 (FA3) is unsuitable for gpt-oss training since it currently doesn‚Äôt support backward passes for attention sinks, causing incorrect training loss. If you‚Äôre not using Unsloth, FA3 may be enabled by default, so please double-check it‚Äôs not in use!&lt;/p&gt;
    &lt;head rend="h2"&gt;‚ö°Making Inference Much Faster&lt;/head&gt;
    &lt;p&gt;Inference is crucial in RL training. To achieve the fastest inference speed for gpt-oss without vLLM, we rewrote Transformers inference and integrated many innovations including custom algorithms like Unsloth Flex Attention, torch.compile. The new inference was evaluated against an already optimized baseline (2x faster than native Transformers).&lt;/p&gt;
    &lt;p&gt;vLLM does not support RL for gpt-oss since it lacks bf16 training and LoRA support for gpt-oss. Without Unsloth, only training via bf16 works, making memory use even 800%+ higher. Most frameworks enable FA3 by default (which reduces VRAM use &amp;amp; increases speed) but this causes incorrect training loss. You must disable FA3, though that prevents long-context training, so instead, we implemented Unsloth Flex Attention.&lt;/p&gt;
    &lt;p&gt;We evaluated gpt-oss RL inference by benchmarking BitsandBytes 4-bit and also did separate tests for BF16. Unsloth‚Äôs 4-bit inference is ~4x faster, and BF16 is also more efficient, especially in VRAM use.&lt;/p&gt;
    &lt;p&gt;The best part about Unsloth's gpt-oss RL is that it can work on any GPU, even those that do not support bf16. Our free gpt-oss-20b Colab notebooks use older 15GB T4 GPUs, so the inference examples work well!&lt;/p&gt;
    &lt;head rend="h2"&gt;üõ†Ô∏è gpt-oss Flex Attention Issues and Quirks&lt;/head&gt;
    &lt;p&gt;Masking was a tricky issue to deal with. We found that we had to, not only account for KV Cache prefill during generations of tokens (this is necessary for efficient inference as we need to know what KVCache corresponds to what token in what layer), but also account for a unique amount of pad tokens in each prompt for batch generations which would change the way we would need to store the block mask. Example of such can be seen below:&lt;/p&gt;
    &lt;p&gt;Normal Causal Mask:&lt;/p&gt;
    &lt;code&gt;   k0 k1 k2 k3 k4   &amp;lt;-- keys
q0 X
q1 X X
q2 X X X
q3 X X X X
q4 X X X X X &amp;lt;-- last query row (most important for decoding)&lt;/code&gt;
    &lt;p&gt;For inference in general case (decoding)&lt;/p&gt;
    &lt;code&gt;    k0 k1 k2 k3 k4
q0
q1
q2
q3
q4   X  X  X  X  X&lt;/code&gt;
    &lt;p&gt;If we naively use the same masking strategy&lt;/p&gt;
    &lt;code&gt;    k0 k1 k2 k3 k4
q0
q1
q2
q3
q4  X   (note that q4 is with q_idx 0 as this is the first query in current setup)&lt;/code&gt;
    &lt;p&gt;For generation (decoding phase), we usually only care about the last row of the attention matrix, since there‚Äôs just one query token attending to all previous key tokens. If we na√Øvely apply the causal mask (q_idx ‚â• k_idx), it fails as our single query has index 0, while there are n_k key tokens. To fix this, we need an offset in mask creation to decide which tokens to attend. But a na√Øve approach is slow, since offsets change each step, forcing mask and kernel regeneration. We solved this with cache and compile optimizations.&lt;/p&gt;
    &lt;p&gt;The harder part is batch generation. Sequences differ in length, so padding complicates mask creation. Flex Attention had a lot of challenges and dynamic masks are tricky. Worse, if not compiled, it falls back to eager attention which is slow and memory-heavy (quadratic vs. linear in sequence length). Ultimately, the mask must dynamically handle prefill vs decode with KVCache, batch and padding tokens per sequence, remain torch.compile friendly, and support sliding windows.&lt;/p&gt;
    &lt;head rend="h3"&gt;üîç FlashAttention Investigation&lt;/head&gt;
    &lt;p&gt;Another interesting direction we explored was integrating FlashAttention. Its advantages are widely recognized, but one limitation is that it does not support attention sinks during the backward pass for gpt-oss. To work around this, we restructured the attention mechanism so that it operates solely on the attention output and the log-sum-exp values that FlashAttention readily provides. Given these benefits, it seemed like an obvious choice to try.&lt;/p&gt;
    &lt;p&gt;However, we soon began noticing issues. While the first few layers behaved as expected, the later layers, particularly layers 18 through 24, produced outputs that diverged significantly from the eager-mode implementation in transformers. Importantly, this discrepancy cannot be attributed to error accumulation, since the inputs to each method are identical at every layer. For further validation, we also compared the results against Unsloth FlexAttention.&lt;/p&gt;
    &lt;p&gt;This needs further investigation into why only the last few layers show such a drastic difference between flash attention implementation vs. the others.&lt;/p&gt;
    &lt;head rend="h4"&gt;Flash Attention 3&lt;/head&gt;
    &lt;p&gt;FA3 is often enabled by default for most training packages (not Unsloth), but this is incorrect for gpt-oss. Using FA3 will make training loss completely wrong as FA3 doesn‚Äôt support gpt-oss backward passes for attention sinks. Many people are still unaware of this so please be cautious!&lt;/p&gt;
    &lt;head rend="h2"&gt;‚ö†Ô∏è Can We Counter Reward Hacking?&lt;/head&gt;
    &lt;p&gt;The ultimate goal of RL is to maximize some reward (say speed, revenue, some metric). But RL can cheat. When the RL algorithm learns a trick or exploits something to increase the reward, without actually doing the task at end, this is called "Reward Hacking". It's the reason models learn to modify unit tests to pass coding challenges, and these are critical blockers for real world deployment. Some other good examples are from Wikipedia.&lt;/p&gt;
    &lt;p&gt;In our notebook we explore how to counter reward hacking in a code generation setting and showcase tangible solutions to common error modes. We saw the model edit the timing function, outsource to other libraries, cache the results, and outright cheat. After countering, the result is our model generates genuinely optimized matrix multiplication kernels, not clever cheats.&lt;/p&gt;
    &lt;head rend="h2"&gt;üí´ From OpenAI's Labs to Your Laptop&lt;/head&gt;
    &lt;p&gt;gpt-oss is a legitimate frontier-class architecture from OpenAI that could power breakthrough AI applications. Until now, training these models with RL was exclusively limited to well-funded labs with H100s to spare.&lt;/p&gt;
    &lt;p&gt;Today, that changes. You can train gpt-oss-20b with GRPO on a free Google Colab tier here. Free, Frontier Model, Training.&lt;/p&gt;
    &lt;p&gt;Last updated&lt;/p&gt;
    &lt;p&gt;Was this helpful?&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://docs.unsloth.ai/new/gpt-oss-reinforcement-learning"/><published>2025-09-27T02:01:35+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45393501</id><title>Lifetime of social ties adds up to healthy aging at molecular level</title><updated>2025-09-27T17:32:29.706412+00:00</updated><content>&lt;doc fingerprint="7d92707705bd92c5"&gt;
  &lt;main&gt;&lt;head rend="h1"&gt;A lifetime of social ties adds up to healthy aging&lt;/head&gt;&lt;head rend="h2"&gt;By Laura Reiley, Cornell Chronicle&lt;/head&gt;&lt;p&gt;The cumulative effect of social advantages across a lifetime ‚Äì from parental warmth in childhood to friendship, community engagement and religious support in adulthood ‚Äì may slow the biological processes of aging itself. These social advantages appear to set back ‚Äúepigenetic clocks‚Äù such that a person‚Äôs biological age, as measured by analyzing DNA methylation patterns, is younger than their chronological age.&lt;/p&gt;&lt;p&gt;The research, which appeared in the October issue of the journal Brain, Behavior and Immunity - Health, drew on data from more than 2,100 adults in the long-running Midlife in the United States (MIDUS) study.&lt;/p&gt;&lt;p&gt;First author Anthony Ong, psychology professor and director of the Human Health Labs in the College of Human Ecology, and fellow researchers found that people with higher levels of what they called ‚Äúcumulative social advantage‚Äù showed slower epigenetic aging and lower levels of chronic inflammation.&lt;/p&gt;&lt;p&gt;"This paper builds on a foundational study we published last year showing how cumulative social advantage relates to positive health outcomes," Ong said. "This new study digs deeper into the same data to understand the biological mechanisms - essentially, how social connections get under our skin to affect aging at the molecular level."&lt;/p&gt;&lt;p&gt;The study focused on so-called epigenetic clocks, molecular signatures that estimate the pace of biological aging. Two in particular ‚Äì GrimAge and DunedinPACE ‚Äì are considered especially predictive of morbidity and mortality. Adults with stronger, more sustained social networks showed significantly younger profiles on both clocks.&lt;/p&gt;&lt;p&gt;"Cumulative social advantage is really about the depth and breadth of your social connections over a lifetime,‚Äù Ong said. ‚ÄúWe looked at four key areas: the warmth and support you received from your parents growing up, how connected you feel to your community and neighborhood, your involvement in religious or faith-based communities, and the ongoing emotional support from friends and family."&lt;/p&gt;&lt;p&gt;The researchers hypothesized that sustained social advantage becomes reflected in core regulatory systems linked to aging, including epigenetic, inflammatory and neuroendocrine pathways. And indeed, they found that higher social advantage was linked to lower levels of interleukin-6, a pro-inflammatory molecule implicated in heart disease, diabetes and neurodegeneration. But interestingly, there were no significant associations with short-term stress markers like cortisol or catecholamines.&lt;/p&gt;&lt;p&gt;Unlike many earlier studies that looked at social factors in isolation ‚Äì whether a person is married, for example, or how many friends they have ‚Äì this work conceptualized ‚Äúcumulative social advantage‚Äù as a multidimensional construct. And by combining both early and later-life relational resources, the measure reflects the ways advantage clusters and compounds.&lt;/p&gt;&lt;p&gt;"What's striking is the cumulative effect - these social resources build on each other over time,‚Äù Ong said. ‚ÄúIt's not just about having friends today; it's about how your social connections have grown and deepened throughout your life. That accumulation shapes your health trajectory in measurable ways."&lt;/p&gt;&lt;p&gt;This perspective draws on cumulative advantage theory, which holds that resources, whether economic or social, tend to accrue, widening disparities across the life course. This underscores a sobering reality: Access to these social resources is not evenly distributed. Race, class and educational attainment shape the likelihood of growing up with supportive parents, finding belonging in community institutions or having friends and partners who provide steady support.&lt;/p&gt;&lt;p&gt;That means those already disadvantaged in material ways may also be biologically disadvantaged by a relative lack of sustained social support, potentially accelerating the processes of aging and illness.&lt;/p&gt;&lt;p&gt;The findings dovetail with the ‚Äúweathering hypothesis,‚Äù a framework developed by public health scholar Arline Geronimus, which suggests that chronic exposure to adversity and structural inequality leads to earlier health deterioration in marginalized groups. Here, researchers extend that framework to show how accumulated relational advantage, the other side of the coin, may confer resilience at the molecular level.&lt;/p&gt;&lt;p&gt;This doesn‚Äôt mean a single friendship or volunteer stint can turn back the biological clock. But the authors, including Frank Mann at Stony Brook University and Laura Kubzansky at Harvard University, suggest that the depth and consistency of social connection, built across decades and different spheres of life, matters profoundly. The study adds weight to the growing view that social life is not just a matter of happiness or stress relief but a core determinant of physiological health.&lt;/p&gt;&lt;p&gt;"Think of social connections like a retirement account," Ong said. ‚ÄúThe earlier you start investing and the more consistently you contribute, the greater your returns. Our study shows those returns aren't just emotional; they're biological. People with richer, more sustained social connections literally age more slowly at the cellular level. Aging well means both staying healthy and staying connected - they're inseparable."&lt;/p&gt;&lt;head rend="h4"&gt;Media Contact&lt;/head&gt;&lt;p&gt;Get Cornell news delivered right to your inbox.&lt;/p&gt;Subscribe&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://news.cornell.edu/stories/2025/09/lifetime-social-ties-adds-healthy-aging"/><published>2025-09-27T06:00:41+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45393842</id><title>Typst: A Possible LaTeX Replacement</title><updated>2025-09-27T17:32:28.955191+00:00</updated><content>&lt;doc fingerprint="2e5a531d3be77598"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Typst: a possible LaTeX replacement&lt;/head&gt;
    &lt;quote&gt;This article brought to you by LWN subscribers&lt;p&gt;Subscribers to LWN.net made this article ‚Äî and everything that surrounds it ‚Äî possible. If you appreciate our content, please buy a subscription and make the next set of articles possible.&lt;/p&gt;&lt;/quote&gt;
    &lt;p&gt;Typst is a program for document typesetting. It is especially well-suited to technical material incorporating elements such as mathematics, tables, and floating figures. It produces high-quality results, comparable to the gold standard, LaTeX, with a simpler markup system and easier customization, all while compiling documents more quickly. Typst is free software, Apache-2.0 licensed, and is written in Rust.&lt;/p&gt;
    &lt;head rend="h4"&gt;Desire for a LaTeX replacement&lt;/head&gt;
    &lt;p&gt;LaTeX is a document typesetting system built on the foundation of Donald Knuth's TeX. LaTeX has become the standard tool for the preparation of scholarly papers and books in several fields, such as mathematics and computer science, and widely adopted in others, such as physics. TeX and LaTeX, which predate Linux, are early free software success stories. The quality of TeX's (and therefore LaTeX's) output rivals the work of skilled hand typesetters for both text and mathematics.&lt;/p&gt;
    &lt;p&gt;Despite the acclaim earned by LaTeX, its community of users has been griping about it for years, and wondering aloud whether one day a replacement might arrive. There are several reasons for this dissatisfaction: the LaTeX installation is huge, compilation of large documents is not fast, and its error messages are riddles delivered by an infuriating oracle. In addition, any nontrivial customization or alteration to the program's behavior requires expertise in an arcane macro-expansion language.&lt;/p&gt;
    &lt;p&gt;Along with the griping came resignation: after decades of talk about a LaTeX replacement with nothing plausible on the horizon, and with the recognition that LaTeX's collection of specialized packages would take years to replace, it seemed impossible to dislodge the behemoth from its exalted position.&lt;/p&gt;
    &lt;head rend="h4"&gt;Introducing Typst&lt;/head&gt;
    &lt;p&gt;In 2019 two German developers, Laurenz M√§dje and Martin Haug, decided to try to write a LaTeX replacement "just for fun". In 2022, M√§dje wrote his computer science master's thesis about Typst. In March 2023, its first pre-release beta version was announced; a month later, semantic versioning was adopted with the release of v0.1.0. Typst is now at v.0.13.1 and shows 365 contributors on its GitHub repository.&lt;/p&gt;
    &lt;p&gt;I had been aware of this project for over a year but had not paid much attention, assuming it to be yet another attempt to supplant LaTeX that was doomed to fail. A rising chorus of enthusiasm among early adopters, and the beginnings of acceptance of Typst manuscripts by scholarly journals, made me curious enough to take the young project for a spin.&lt;/p&gt;
    &lt;p&gt;Typst is available as Rust source and as a compiled binary. To install, visit the releases page and download the appropriate archive. There are options for Linux, macOS and Windows; I used the precompiled Linux version for my testing.&lt;/p&gt;
    &lt;p&gt;The "typst" command accepts several subcommands. Entering "typst fonts" lists all of the usable fonts to be found in standard locations on the machine; nonstandard font directories can be added manually. In my case, Typst found all of my 476 fonts instantly; the only ones omitted were some ancient PostScript Type 1 fonts used by LaTeX. Users who have LaTeX installed will have a large collection of OpenType and TrueType math and text fonts on their machines; Typst can use all of these. But Typst will work fine without them, as the program has a small collection of fonts built in (try "typst fonts --ignore-system-fonts" to see them).&lt;/p&gt;
    &lt;p&gt;Two other subcommands to explore are "compile", which generates the output (PDF by default, with PDF/A, SVG, and PNG available, along with HTML under development) from a source file, and "watch" for interactive editing. The watch subcommand keeps a Typst process running that incrementally and automatically compiles the document to PDF in response to changes in the source. To use "typst watch" effectively, the screen should be divided into three windows: a small terminal window to monitor the typst output for error (or success) messages, the editing window, and an area for any PDF reader that automatically reloads the displayed document when it changes (many, such as my favorite, Sioyek, do this). The result is a responsive live preview, even of large documents, due to Typst's speed and incremental compilation. For example, Frans Skarman described his experience writing his doctoral thesis in Typst, and noted that he was able to enjoy nearly instant previews of content changes to the book-length document.&lt;/p&gt;
    &lt;head rend="h4"&gt;How Typst improves on LaTeX&lt;/head&gt;
    &lt;p&gt;Typst output is quite close to that of LaTeX. It uses the same line-breaking algorithm developed by Donald Knuth and Michael Plass for TeX, so it creates nicely balanced paragraphs of regular text. Its mathematical typesetting algorithms are based closely on the TeX algorithms, and indeed mathematical rendering is nearly indistinguishable between the two systems.&lt;/p&gt;
    &lt;p&gt;Getting started with LaTeX can be confusing for newcomers, because it comes with several alternative "engines" reflecting the long and complex history of the project. These are the various binaries such as "pdflatex", "tex", "xelatex", "luatex", "lualatex", and more, each with somewhat different capabilities. For Typst there is only "typst".&lt;/p&gt;
    &lt;p&gt;Markup in Typst is less verbose and easier to read than in LaTeX. It dispenses with the plethora of curly brackets and backslashes littering LaTeX documents by adopting, for prose, syntax in the style of Markdown, and, for equations, a set of conventions designed for easy input. The fact that curly brackets and backslashes are awkward to type on German keyboards may have provided a little extra impetus for the developers to create an alternative markup system that doesn't require a forest of these symbols.&lt;/p&gt;
    &lt;p&gt;When users make syntax errors in markup or programming, inevitable even in Typst, the system presents them with another dramatic improvement over LaTeX (and TeX): error messages using colored glyphs that clearly point out exactly where the problem is. I've even discovered that Typst will save me from trying to run a syntactically correct infinite loop.&lt;/p&gt;
    &lt;p&gt;Here is a bit of Typst markup for a shopping list, with the resulting rendering to the right:&lt;/p&gt;
    &lt;quote&gt;= Shopping List == Vegetables + Broccoli + Asparagus (*fresh only*) + Plantains (_ripe and green_) == Booze + Rum - White - Dark + #underline[Good] gin&lt;/quote&gt;
    &lt;p&gt;The example gives a flavor of Typst's terse markup syntax. Headings are indicated with leading = signs. Automatically numbered lists are created by prepending + signs to items, and bulleted lists with - signs; lists can be nested. Delimiters are shown for bold text and italics. These are shortcuts, or markup syntax sugar, for Typst functions for transforming text. Not every function has a corresponding shortcut; in those cases one needs to call the function explicitly, as in the final item.&lt;/p&gt;
    &lt;p&gt;Typst input is always within one of three modes. Markup (text) mode is the default. The # sign preceding the function call in the last line of the example places Typst in "code mode". The "underline()" function accepts a number of keyword arguments that affect its behavior, and one trailing argument, in square brackets, containing the text that it modifies. In the example, we've stuck with the default behavior, but if we wanted, for example, a red underline, we could use "#underline(stroke: red)[Good] gin". Following the square-bracketed text argument, Typst returns to interpreting input in text mode.&lt;/p&gt;
    &lt;p&gt;Other functions produce output directly, rather than modifying a text argument. This bit of Typst input:&lt;/p&gt;
    &lt;quote&gt;#let word = "Manhattan" There are #str.len(word) letters in #word.&lt;/quote&gt;
    &lt;p&gt;produces the output (in typeset form) "There are 9 letters in Manhattan.". The "len()" function is part of the "str" module, so it needs the namespace.&lt;/p&gt;
    &lt;p&gt;Let's take a look at the LaTeX equivalent for the first half of the shopping list for comparison:&lt;/p&gt;
    &lt;quote&gt;\documentclass[12pt]{article} \begin{document} \section*{Shopping List} \subsection*{Vegetables} \begin{enumerate} \item Broccoli \item Asparagus ({\bfseries fresh only}) \item Plantains (\emph{ripe and green}) \end{enumerate} \end{document}&lt;/quote&gt;
    &lt;p&gt;The first two and the last line are boilerplate that is not required in Typst. The difference in verbosity level and ease of reading the source is clear.&lt;/p&gt;
    &lt;p&gt;The third Typst mode, in addition to markup and code, is math mode, delimited by dollar signs. This is also best illustrated by an example:&lt;/p&gt;
    &lt;quote&gt;$ integral_0^1 (arcsin x)^2 (dif x)/(x^2 sqrt(1-x^2)) = œÄ ln 2 $&lt;/quote&gt;
    &lt;p&gt;When this is compiled by Typst, it produces the result shown below:&lt;/p&gt;
    &lt;p&gt;Those who've used LaTeX will begin to see from this example how math in Typst source is less verbose and easier to read than in LaTeX. Greek letters and other Unicode symbols can be used directly, as in modern LaTeX engines such as lualatex, which we looked at back in 2017, but with no imports required.&lt;/p&gt;
    &lt;p&gt;The advent of the LuaTeX and LuaLaTeX projects provided users who wanted to incorporate programming into their documents a more pleasant alternative to the TeX macro language. As powerful as the embedded Lua system is, however, it betrays its bolted-on status, requiring users to negotiate the interface between Lua data structures and LaTeX or TeX internals. In Typst, programming is thoroughly integrated into the system, with no seams between the language used for calculation and the constructs that place characters in the final PDF. Typst programs are invariably simpler than their LuaLaTeX equivalents. All authors using Typst will make at least some simple use of its programming language, as such basic necessities as changing fonts, or customizations such as changing the style of section headings, are accomplished by calling Typst functions.&lt;/p&gt;
    &lt;p&gt;The Typst language is somewhat similar to Rust, perhaps unsurprisingly. Most Typst functions are pure: they have no side effects and always produce the same result given the same arguments (aside from certain functions that mutate their arguments, such as array.push()). This aspect reduces the probability of difficult-to-debug conflicts among packages that plague LaTeX, and makes it easier to debug Typst documents.&lt;/p&gt;
    &lt;p&gt;Although Typst uses the same line-breaking algorithm as LaTeX, its internal approach to overall page layout is distinct. Some consequences are that Typst does a better job at handling movable elements such as floating figures, and can, for example, easily split large tables across page breaks, something that LaTeX struggles with even with specialized packages.&lt;/p&gt;
    &lt;head rend="h4"&gt;Typst drawbacks&lt;/head&gt;
    &lt;p&gt;Typst's page layout algorithm doesn't always permit the refinements that LaTeX is capable of. For example, Typst is not as good as LaTeX at avoiding widows and orphans. Another salient deficiency is Typst's relative lack of specialized packages, compared with the vast ecosystem produced by LaTeX's decades of community involvement. However, the relative ease of programming in Typst (and the well-organized and extensively commented underlying Rust code) suggests that this drawback may be remedied before a comparable number of decades have elapsed. Indeed, there are already over 800 packages available. Typst still cannot do everything that LaTeX can, but the breadth of its package collection is encouraging.&lt;/p&gt;
    &lt;p&gt;Almost no journals that provide LaTeX templates for submissions offer a Typst option, so physicists and mathematicians adopting Typst will need to find a way to convert their manuscripts. This is made easier for those who use Pandoc, as that conversion program handles Typst.&lt;/p&gt;
    &lt;p&gt;Another drawback is the difficulty of learning Typst. The official documentation is confusingly organized, with information scattered unpredictably among "Tutorial", "Reference", and "Guides" sections. Concepts are not always clearly explained, and sometimes not presented in a logical order. The manual is not keeping up with the rapid development of the program, and contains some out-of-date information and errors. None of this is surprising considering how quickly the project is moving, its early stage, and its small core team. A work-in-progress called the Typst Examples Book has appeared, which may be a better starting point than the official documentation.&lt;/p&gt;
    &lt;p&gt;There are other minor deficiencies compared with LaTeX, such as the inability to include PDF documents. Typst provides no analogue to LaTeX's parshape command, which lets authors mold paragraphs to, for example, wrap around complex illustrations. The situation is likely to change, however, as something like parshape is being considered for the future.&lt;/p&gt;
    &lt;p&gt;More serious is the possibility of breaking changes as the system evolves, always a risk of early adoption. I suspect, however, that these will require only minor edits to documents in most cases. Progress seems to be steady, rational, and responsive to user requests.&lt;/p&gt;
    &lt;head rend="h4"&gt;Conclusion&lt;/head&gt;
    &lt;p&gt;I'm using Typst in real work right now to write a physics paper. I will need to submit my manuscript using the journal's LaTeX template, but I'm taking advantage of Typst to make the entry of the paper's many equations simpler, and I'll transform the result to LaTeX with Pandoc without needing any manual adjustment. The tooling is excellent, as my preferred editor, Neovim, has support for the Tree-sitter incremental parser for Markdown and Typst, which provides syntax-aware highlighting and navigation of the source files. I use Typst's fast incremental compilation to get live feedback as I fiddle with my math markup.&lt;/p&gt;
    &lt;p&gt;I was skeptical when I downloaded Typst to try it out, but became enthusiastic within minutes, as I saw the first (of many) of its lovely error messages, and remained sanguine as I saw the quality of its output. I predict that Typst will eventually take the place of LaTeX. But even if that never comes to pass, it is a useful tool right now.&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="2"&gt;
        &lt;cell role="head"&gt;Index entries for this article&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;GuestArticles&lt;/cell&gt;
        &lt;cell&gt;Phillips, Lee&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt; Posted Sep 17, 2025 15:45 UTC (Wed) by spacefrogg (subscriber, #119608) [Link] (22 responses) There used to be the well-founded expectation from users that a typeset document did not change when processed by a future version of the processor, style or packages. In the long-run, this made learning and dealing with the languages intricacies and idiosyncrasies worthwhile. This has faded somewhat (looking at you, siunitx) in recent years since the first-generation contributors left the scene. I hope that the Typst maintainers and contributors understand this historic lesson as well. Also, TeX is a document processor able to document itself or at least its packages. And there is a reliable ecosystem for that as well (e.g. certain pressure on contributors to provide documentation along with code for acceptance). Posted Sep 17, 2025 17:07 UTC (Wed) by wtarreau (subscriber, #51152) [Link] (11 responses) Interesting because while that may be true in theory, it's precisely the opposite that made me abandon it over time. Trying to rebuild my old docs systematically resulted in cryptic errors. Looking on the net suggested that foobar.sty was replaced by somethingelse.sty which was close enough but required modifications etc. It happened to me several times to spend half a day updating a 5-year old manual to accommodate new packages. It might very well just be that some packages are less strict than the lower layers and that I hadn't been using state-of-the-art ones, but for the end user experience the problem is the same, a document you wrote doesn't build anymore spewing many errors. That happened to me with documents written between 1995 and 2000 roughly. Some packages were even related to how to deal with character encodings, which newer versions implemented more naturally but probably caused more difficulties to adapt to. I also remember some of article.sty no longer being compatible with the older one I used. I'm speaking about old memories, as it's been 20 years or so since I progressively stopped using it. It always made me sad because I loved the output quality which was super pleasant to read. Also I remember that newer versions were way simpler to install than the pre-2000 ones where you had to collect styles from everywhere and build your own packages from sources. Posted Sep 17, 2025 18:38 UTC (Wed) by ballombe (subscriber, #9523) [Link] (4 responses) Posted Sep 17, 2025 20:23 UTC (Wed) by NYKevin (subscriber, #129325) [Link] (3 responses) Posted Sep 18, 2025 12:35 UTC (Thu) by aragilar (subscriber, #122569) [Link] Posted Sep 19, 2025 18:05 UTC (Fri) by anton (subscriber, #25547) [Link] (1 responses) If I want to revise the paper (e.g., submit a revision of a rejected paper to a different conference), the original appearance is not desired, and usually I need to produce a different format, so it does not matter much if the original class and template no longer works. What matters is that I can easily copy my text to the new template. That is mostly easy, but recently I have had to deal with templates that want all kinds of meta-data, and place standard elements such as \title and \author in a non-standard location, which makes things somewhat time-consuming. But the main part of the paper can be reused and revised, with a formatting pass at the end. Concerning longevity, I have rarely had the need to process a really old work, but just to see how well it works, I have tried a thesis from 1990, and the main text works (graphics are separate, and I would have to invest more time to find out how they were built). I also tried papers from 1992 and 1993, and they compiled fine; the paper from 1992 contains Framemaker graphics, and I no longer have a way to convert that to Postscript, but fortunately I have the Postscript output; for one picture, the placement is slightly wrong, though. The 1993 paper looks fine. Maybe the advantage with these old papers is that there were no style/class files coming from the publication venue, so I just used article (or, for the thesis, report), and not many packages, either. Posted Sep 20, 2025 22:11 UTC (Sat) by NYKevin (subscriber, #129325) [Link] Posted Sep 19, 2025 0:03 UTC (Fri) by jschrod (subscriber, #1646) [Link] (4 responses) But you still bring this up, 31 years after the upgrade - which was 5 years in the making before. From a developer point of view, this is a complaint about a development that happened 35 years ago. Are you aware that this statement is similar to "I will not use Wayland because I had to write XFree86 modline configs back then"? (Because, as you surely remember, this was even before the days of the X.org server with better autoconfiguration that now is considered obsolete.) Disclaimer: I was part of the team that introduced LaTeX 2e back in 1994. I am still connected to that work and to the people working on it, though I'm not an active developer anymore. Posted Sep 19, 2025 5:20 UTC (Fri) by wtarreau (subscriber, #51152) [Link] (3 responses) The thing is that when you don't use LaTeX often enough and each time you do it's difficult, then what remains of the experience is frustration. The frustration of not being able to reproduce a previous report that you spent a lot of time arranging, etc. When I was using it on a daily basis 30 years ago, I *loved* it. Never having to think about what the output would look like and just typing was really awesome and I haven't found anything getting close to that experience. And I'm still pleased to read papers written using it, which are instantly recognizable. I'm also a bit suspicious about tools that try to imitate it, because, as you say, it has accumulated decades of expertise in what it's doing, so users risk losing great stuff. It's very possible that forward compatibility has improved a lot since these experience, but due to these problems I got used to no longer using it. The rare times I need to write something with different fonts and sizes, I just write HTML and let the browser of the moment render it. It's a bit more painful but relies on a standard that's not going to disappear any time soon. Posted Sep 19, 2025 8:34 UTC (Fri) by anselm (subscriber, #2796) [Link] (2 responses) LaTeX is great if you're largely happy with what it does. If you need to bend it to your will to obtain a specific effect, that can easily become an exercise in frustration ‚Äì fortunately now there are extension packages which will let you, e.g., control how chapter and section headings look like, which was something that in the 1990s required fairly arcane knowledge of the insides of LaTeX to change in even minor ways. Similarly, LaTeX input is reasonably straightforward to write once you've got the hang of it, but it is an absolute bear to parse if you want to process it with a tool that isn't LaTeX itself. TeX input, if anything, is worse. The main problem of the TeX and LaTeX ecosystem is that it is, to a large extent, based on ideas which were innovative in the 1980s, but the publishing world has continued turning in the meantime, and TeX's stability guarantee in particular, while commendable in principle, has largely prevented it from evolving along. When TeX was new, PostScript hadn't really been invented yet, PDF wasn't even on the horizon, font technology looked a lot different from what it does today, and Unicode wasn't a thing at all, but now there is no way around these developments. The solutions that Knuth and his colleagues came up with (DVI, Metafont, and so on) didn't catch on outside the TeX community, so TeX has been chasing what the rest of the world was doing in these areas, through non-standard variants such as eTeX, PDFTeX, LuaTeX, etc. It is true that it is perfectly possible, in 2025, to use LaTeX to typeset a PDF document with OpenType fonts based on UTF-8 encoded input, but this means you have to run a version of TeX that has special code extensions not necessarily found in other versions of TeX, using special LaTeX packages which may come bundled in a ‚Äúbatteries included‚Äù distribution such as TeXLive but are not actually part of LaTeX itself. This fragmentation tends to make life with (La)TeX more difficult. Also, nowadays people expect to be able to write a document in a single source format and render it, without source changes, in wildly different output formats such as HTML and PDF, in a way that avails itself of the specific advantages of the format in question, and TeX/LaTeX doesn't really have a straightforward and obvious answer to that requirement like Markdown, Pandoc, or Sphinx (to name but a few examples) do. I've been a TeX and LaTeX user for 40 years now but I'm looking at Typst with considerable interest. Posted Sep 19, 2025 12:21 UTC (Fri) by dskoll (subscriber, #1630) [Link] I solved this problem (with a little bit of pain) for my 600-page set of manuals I mentioned earlier. I wanted PDF output as well as HTML output. There's a pretty nice program called Yes, it was a bit annoying to set up, but once I had my Makefile written, it worked beautifully. Posted Sep 27, 2025 9:26 UTC (Sat) by Delio (guest, #179554) [Link] Posted Sep 27, 2025 11:59 UTC (Sat) by simlo (guest, #10866) [Link] Posted Sep 17, 2025 20:51 UTC (Wed) by warrax (subscriber, #103205) [Link] (9 responses) I do think you're correct that backward[1] compatibility *is* important, but the LaTeX ecosystem as a whole isn't necessarily great at that... it very much depends on what packages you use. [1] Future versions being able to process old code/documents is usually referred to as 'backward' compatibility. Posted Sep 17, 2025 21:24 UTC (Wed) by dskoll (subscriber, #1630) [Link] (4 responses) Hmm... I have three manuals I started writing 20 years ago and continued writing through 2018; they total almost 600 pages and still build perfectly fine on whatever version of LaTeX ships with Debian 13. I don't go crazy with untested or new packages, though... all of the packages I use have been around for a long time and are very stable. Posted Sep 18, 2025 2:18 UTC (Thu) by Cyberax (‚ú≠ supporter ‚ú≠, #52523) [Link] (3 responses) Posted Sep 18, 2025 9:38 UTC (Thu) by paulj (subscriber, #341) [Link] (1 responses) Posted Sep 18, 2025 13:02 UTC (Thu) by pizza (subscriber, #46) [Link] ...Even on the *same* PC, with the *same* version of Word, "rendering the same" was not guaranteed. (Back in the day, I recall that merely changing the printer driver was sufficient to cause the document to paginate differently..) Posted Sep 18, 2025 17:12 UTC (Thu) by hholzgra (subscriber, #11737) [Link] WinWord could already no longer process it properly when WinWord 6.0; the version right after 2.0a, came out. The LaTeX version worked all the way until late 1999, when due to a series of mishaps the source was lost and I was left with only the PDF result, which I still have. (Generating PDF from Word documents on the other hand was basically unheard of back in the 1990s ...) I also still have a few smaller texts I've written after the 1999 backup disaster, and these I can still process using current LaTeX versions. Posted Sep 17, 2025 21:26 UTC (Wed) by iabervon (subscriber, #722) [Link] (2 responses) Posted Sep 18, 2025 20:54 UTC (Thu) by SLi (subscriber, #53131) [Link] If only the underlying language was something modern and somehow modular and encapsulated instead of a weird macro mess with not-really-scopes. Maybe I never got deep enough into it to really appreciate its cleverness (now I do appreciate that it's 50 years old), but in my experience it doesn't exactly take just "not thinking" to not break something by an unrelated change. Posted Sep 18, 2025 20:58 UTC (Thu) by ejr (subscriber, #51652) [Link] There was ConTeXt as well. I'm not sure of its status. And "worse is better" seems to have been a thing for me this week in many venues. Posted Sep 18, 2025 20:49 UTC (Thu) by SLi (subscriber, #53131) [Link] I think one big problem that I've seen in my field of CS is that people have become used to the output of LaTeX to the extent that everything else looks "unprofessional" to them merely by virtue of being different, even if it fixes some real annoyance in LaTeX output. So while I still do my maths and typesetting often in LaTeX, I'm actually happy that the modern practitioners are refusing to take that route, even if it means them using Word. We shouldn't teach people to rely on stuff built on MS-DOS and Cobol either, even if the best typesetting tool remains some obscure DOS executable. Posted Sep 17, 2025 18:25 UTC (Wed) by rogerwhittaker (subscriber, #39354) [Link] (6 responses) Posted Sep 17, 2025 19:35 UTC (Wed) by spacefrogg (subscriber, #119608) [Link] (5 responses) Additionally, Typst documents are closer in code style to plain TeX than LaTeX with its verbose Pascal'ish blocks. Anecdote: I had to write a letter, printed, on paper, just the other day. Had a go at using Typst and it was done in 20 minutes incl. downloading the letter package, initialising the document boilerplate and understanding what to change where. It looks like simple tasks are actually simple to do. Posted Sep 18, 2025 10:10 UTC (Thu) by epa (subscriber, #39769) [Link] (4 responses) Posted Sep 18, 2025 12:41 UTC (Thu) by smoogen (subscriber, #97) [Link] Posted Sep 19, 2025 9:19 UTC (Fri) by taladar (subscriber, #68407) [Link] Posted Sep 26, 2025 19:38 UTC (Fri) by bluss (guest, #47454) [Link] Posted Sep 27, 2025 17:01 UTC (Sat) by tjbc (guest, #179557) [Link] Posted Sep 18, 2025 9:21 UTC (Thu) by al4711 (subscriber, #57932) [Link] Posted Sep 18, 2025 11:36 UTC (Thu) by ceplm (subscriber, #41334) [Link] (2 responses) Posted Sep 19, 2025 18:22 UTC (Fri) by anton (subscriber, #25547) [Link] (1 responses) I looked up when Lout was released, and that was in 1991 (with work starting in 1994). The most recent release is from 2023, but apparently that just made it easier to build, so it's not sure if it is still being maintained. But then, if it works, do you really need any other maintenance? Posted Sep 19, 2025 20:15 UTC (Fri) by ceplm (subscriber, #41334) [Link] Posted Sep 18, 2025 17:02 UTC (Thu) by hholzgra (subscriber, #11737) [Link] (3 responses) Lower entry barrier for sure, but always having a taste of "Those who do not understand XXX have to reinvent it ... poorly" (CMake vs. Autotools rings a similar bell, although in a slightly different field) I'm afraid that once again we are forgetting about quite a few things that were already solved in the past by switching to such new solutions carrying less of a history with them ... Posted Sep 20, 2025 3:30 UTC (Sat) by mathstuf (subscriber, #69389) [Link] (2 responses) *sigh* Note that one of the "sparks" for CMake was Windows (as in MSVC, not MinGW-on-Cygwin or MSYS2) support. Something Autotools still does not have today. Posted Sep 20, 2025 10:44 UTC (Sat) by hholzgra (subscriber, #11737) [Link] (1 responses) That is not my issue with CMake, it is rather that it "forgot" about things like "make distcheck" and quite a few other things that autotools had solved just fine for ages. So while it supports other build systems besides good old Make, I'd say that at least on the Unixoid side Makefiles are still the predominant backend being used. And the Makefiles it generates are sub par compared to what automake generates. That's my "reinvent it ... badly" pain point with CMake. Posted Sep 20, 2025 23:49 UTC (Sat) by mathstuf (subscriber, #69389) [Link] I don't think `distcheck` is all that important for CMake because‚Ä¶the source tree *is* the tarball; there's no intermediate step which bundles everything that needs re-verified &amp;gt; I'd say that at least on the Unixoid side Makefiles are still the predominant backend being used I'd be very surprised if Ninja were not the most popular generator these days. I believe Fedora has switched its default generator at this point at least? I know Visual Studio's integration prefers it. &amp;gt; And the Makefiles it generates are sub par compared to what automake generates. Oh, I don't think anyone is going to argue that CMake's Unix Makefiles generator is anywhere near optimal. There are a number of reasons for it. The most important is that autotools and CMake are different build *systems* even though they do share support for a common build *tool* as an output. Because CMake also supports IDEs with‚Ä¶rather restrictive ideas on what is possible, CMake's model for the build is quite different than autotools'. The build tool is easy to define: it is a build graph executor. Make, ninja, msbuild, just, rake, build2, boost.build, bjam, scons, tup, etc. are all "build tools" that execute a build graph. The build *system* is where things get interesting (for me). Some build tools are also build systems: build2, boost.build, scons, tup. This is the layer which defines things like "what is a target" and "how do targets relate". autotools and CMake both execute at this level and "compile" their input language to something the target build tool understands. This does not mean that build systems expose everything that the build tool supports (e.g., CMake does not allow users to write their own ninja rule statements because‚Ä¶what does that even mean for its other outputs). Of course, some build tool support may have additional features as long as it doesn't conflict with the overall model of the build system itself. For example, CMake's Ninja generator can drop some dependencies other generators need to support the semantics CMake guarantees if it can prove to itself that they're satisfied in other ways. Now, there are ideas to rewrite CMake's Makefiles output to be more like Ninja: one global graph without per-directory entry points and without the per-target subgraph recursive instance. This would allow the Makefiles generator to do the same pruning of unnecessary dependencies that Ninja does. But because it was following the IDE model of "the build graph is a series of targets; each target's subgraph is an independent entity", we have the non-optimal behavior of "if A links to B, B must link before anything in A starts" because that is how CMake guarantees things like generated headers in B are available when A starts compiling[1]. So, in short, I think CMake tool a more general approach to build systems and its Makefiles output is suboptimal because of that. But because we now also support the Ninja generator which is, IMO, strictly better (unless one needs a job server for nested builds), restricting the scope to the Makefiles output of each is not a fair comparison. [1] The link dependency can be dropped if A's custom command dependencies are a superset of B's custom command dependencies: any header or whatever B ends up generating is already in A's graph. Posted Sep 19, 2025 0:28 UTC (Fri) by jschrod (subscriber, #1646) [Link] (9 responses) Just in the last few years, a major undertaking starts to produce tangible results: LaTeX Tagged PDF https://latex3.github.io/tagging-project/ With it, one can prepare barrier free PDFs with acceptable effort - *even for math*. I don't know if any other system that provides this level of capability. This is the stuff that gets developed in established FOSS ecosystems by people who work on typesetting systems since decades. Disclaimer: I'm personally involved in the LaTeX project, though I'm not a developer any more. Posted Sep 19, 2025 2:46 UTC (Fri) by intelfx (guest, #130118) [Link] (5 responses) How does this help with UX of *writing* in LaTeX, which seems to be the major issue driving the competing developments (and specifically the subject of the article)? &amp;lt;...&amp;gt; I understand that LaTeX is something you relate to, but your response reads somewhat like this: - Project A sucks at ABC, and I'm badly tired of it, so I don't wish to use project A anymore. I'm looking forward to possible replacements. Posted Sep 19, 2025 9:52 UTC (Fri) by Wol (subscriber, #4433) [Link] This seems to be a major blinker problem in FOSS. My brother's comments about his experience of Emacs at Uni 40 years ago are classic - when he first started he thought it was awful, impossible to use, way too complicated. Then after a year or two, once he'd mastered it, he couldn't imagine using anything else. The reason Word conquered the world (and the reason I hate it) is because it was aimed at people who COULDN'T TYPE - the managerial guys who had professional typists, the couch potatoes who didn't do much, etc etc. WordPerfect - which I took to like a duck to water because it (on the surface) mimicked a typewriter - which failed in large part due to MS's dirty tricks - couldn't compete in the battle for the minds of the people with the purse strings, even though it was a much better professional solution. FLOSS so often is such a super swiss army knife that anybody new approaching it is left thinking "but how does it fix MY problem ???". I use lilypond, and it's incredibly powerful, but the learning curve to access that power is almost impenetrable (it's driven by a variant of Lisp!). Cheers, Posted Sep 19, 2025 10:55 UTC (Fri) by smitty_one_each (subscriber, #28989) [Link] (3 responses) Posted Sep 19, 2025 11:21 UTC (Fri) by leephillips (subscriber, #100450) [Link] (2 responses) Posted Sep 19, 2025 12:41 UTC (Fri) by smitty_one_each (subscriber, #28989) [Link] &amp;gt; the learning curve to access that power is almost impenetrable One of my pet cliches is: "Everything is easy, when you know how to do it." Overleaf provides a gentle introduction to LaTeX. Posted Sep 19, 2025 13:17 UTC (Fri) by paulj (subscriber, #341) [Link] I'm a big fan of Lyx as a great accessible and fairly user-friendly UI for writing documents to eventually typeset with LaTeX. I've used it for my own dissertation and it made writing so much easier. It's also customisable. I ended up making a few of my own definitions for things, with their own menu entries - which was just a matter of adding some UI definition files. My father went to uni after retirement and (eventually) got a masters. He used to have endless issues with his masters dissertation in MS Word, with the format going screw and *especially* the required citations being very hard to manage and constantly getting messed up. I was constantly having to go over to him to try help him with his MS Word processing issues. In the end, I switched him over to Lyx. Showed him how to make chapters, sections and sub-sections, and insert citations. Told him just to write, and that the formatting would largely take care of itself. I helped with proofing at the end and help with inserting figures and illustrations, but it saved *both of us* a lot of hair-pulling and time. My dad generally does not get on with computers. He gets very frustrated with complex programmes, with states affecting things he can't see/understand. He became a big of fan Lyx however, for the way it just let him write and generally staying out of the way, while keeping track of all the citations and layout for him, and producing a beautiful doc at the end thanks to LaTeX. Lyx is a _great_ bit of software! Posted Sep 19, 2025 19:04 UTC (Fri) by notriddle (subscriber, #130608) [Link] (1 responses) And Typst does this: In TeX's defense, it's not the worst system I've ever dealt with, and a lot of that spew can be cleaned up by just putting it behind a --verbose flag, but the biggest, hardest-to-fix problem is here: Typest's equivalent has a line number. It also actually matches what was written. Is that fixable without breaking changes to the macro system? Posted Sep 22, 2025 18:49 UTC (Mon) by jschrod (subscriber, #1646) [Link] In all other error messages TeX's error messages consist of two lines. The first line has the line number and all characters that are read up to the error, the second line has the characters that are still to be processed. But that is actually a bynote. You wrote &amp;gt; tagged pdf or other niche features Since journals (especial scientific journals that Lee wrote about) and other publishers increasingly demand the production of barrier free PDFs for online publication, Tagged PDF is not a niche feature, IMNSHO. Customers of mine currently pour 6-digit numbers of Euro in creation of such files. For private production it doesn't matter -- but for publication, it will soon be a must-have. Posted Sep 27, 2025 9:11 UTC (Sat) by Delio (guest, #179554) [Link] Posted Sep 19, 2025 6:06 UTC (Fri) by yashi (subscriber, #4289) [Link] (2 responses) Meander seems to do it: https://github.com/typst/packages/pull/3065 Posted Sep 19, 2025 11:28 UTC (Fri) by leephillips (subscriber, #100450) [Link] (1 responses) This was first released while we were still working on the article. In other words, my prediction is coming true: that packages for Typst will emerge rapidly, because it‚Äôs easy (easier) to program in. Posted Sep 19, 2025 15:27 UTC (Fri) by adnl (subscriber, #179418) [Link] Posted Sep 27, 2025 12:04 UTC (Sat) by norbusan (guest, #10100) [Link] (2 responses) As wtih coreutils, as with several other places, first of all "I'm so shiny" (thanks Moana!), but reality is different. Posted Sep 27, 2025 13:26 UTC (Sat) by Delio (guest, #179554) [Link] Posted Sep 27, 2025 16:06 UTC (Sat) by Lonjil (guest, #152573) [Link] ? Almost everything on that page is basic typesetting, and most of the stuff that isn't is just about levering funny PDF features. Have you actually looked at Typst and its package ecosystem? &lt;head&gt;To become success story&lt;/head&gt;&lt;head&gt;To become success story&lt;/head&gt;&lt;head&gt;To become success story&lt;/head&gt;&lt;head&gt;To become success story&lt;/head&gt;&lt;head&gt;To become success story&lt;/head&gt;&lt;head/&gt; Yes, you get a class file, and a template with \usepackage invocations (or they are in the class file), and if you want to produce the exact same output, then yes, you may need to keep the old packages around. But in that scenario I can just keep the resulting output (e.g., a PDF) around. &lt;head&gt;To become success story&lt;/head&gt;&lt;head&gt;To become success story&lt;/head&gt;&lt;head&gt;To become success story&lt;/head&gt;&lt;head&gt;To become success story&lt;/head&gt;&lt;head&gt;To become success story&lt;/head&gt;&lt;quote&gt;When I was using it on a daily basis 30 years ago, I *loved* it. Never having to think about what the output would look like and just typing was really awesome and I haven't found anything getting close to that experience. And I'm still pleased to read papers written using it, which are instantly recognizable. I'm also a bit suspicious about tools that try to imitate it, because, as you say, it has accumulated decades of expertise in what it's doing, so users risk losing great stuff.&lt;/quote&gt;&lt;head&gt;To become success story&lt;/head&gt;&lt;quote&gt;Also, nowadays people expect to be able to write a document in a single source format and render it, without source changes, in wildly different output formats such as HTML and PDF, in a way that avails itself of the specific advantages of the format in question, and TeX/LaTeX doesn't really have a straightforward and obvious answer to that requirement[...]&lt;/quote&gt;&lt;code&gt;htlatex&lt;/code&gt; that does a creditable job of generating HTML, and then I post-processed it to (eg) replace the generated images with the original source images so figures were of higher quality.  I also defined a few conditional macros that inserted links to training videos in certain spots... something you can't really do with PDF.

&lt;head&gt;Inclusion of PDF files has been implemented&lt;/head&gt;&lt;head&gt;To become success story&lt;/head&gt;&lt;head&gt;About the compatibility story...&lt;/head&gt;&lt;head&gt;About the compatibility story...&lt;/head&gt;&lt;head&gt;About the compatibility story...&lt;/head&gt;&lt;head&gt;About the compatibility story...&lt;/head&gt;&lt;head&gt;About the compatibility story...&lt;/head&gt;&lt;head&gt;About the compatibility story...&lt;/head&gt;&lt;head&gt;About the compatibility story...&lt;/head&gt;&lt;head&gt;About the compatibility story...&lt;/head&gt;&lt;head&gt;About the compatibility story...&lt;/head&gt;&lt;head&gt;About the compatibility story...&lt;/head&gt;&lt;head&gt;Another project with similar aims&lt;/head&gt;&lt;head&gt;Another project with similar aims&lt;/head&gt;&lt;head&gt;Another project with similar aims&lt;/head&gt;&lt;head&gt;Another project with similar aims&lt;/head&gt;&lt;head&gt;Another project with similar aims&lt;/head&gt;&lt;head&gt;Another project with similar aims&lt;/head&gt;&lt;head&gt;Another project with similar aims&lt;/head&gt;&lt;head&gt;Very friendly and helpful Community&lt;/head&gt;&lt;head&gt;Lout&lt;/head&gt;&lt;head/&gt; Yes, when I read the article, I remembered Lout; a collegue advocated that in the 1990s. And already at that time it was obvious that TeX was a good typesetting engine, but a badly designed programming language, and LaTeX inherited this. Nevertheless, LaTeX has a big community behind it, and obviously Lout was unable to overcome the network effects coming from that. Will it be different for Typst or other contenders? Would it help if they built on each other rather than starting from scratch? &lt;head&gt;Lout&lt;/head&gt;&lt;head&gt;Lout&lt;/head&gt;&lt;head&gt;Bad feeling ...&lt;/head&gt;&lt;head&gt;Bad feeling ...&lt;/head&gt;&lt;head&gt;Bad feeling ...&lt;/head&gt;&lt;head&gt;Bad feeling ...&lt;/head&gt;&lt;head&gt;Fully Tagged PDF (even for math) is in the works for LaTeX&lt;/head&gt;&lt;lb/&gt; This is bound to be incorporated into the next TeX-Live release and thus will appear in all major Linux distributions in due course.&lt;head&gt;Fully Tagged PDF (even for math) is in the works for LaTeX&lt;/head&gt;&lt;lb/&gt; &amp;gt; This is bound to be incorporated into the next TeX-Live release and thus will appear in all major Linux distributions in due course.&lt;lb/&gt; - But project A is the best at XYZ, so this proves we are better than project B!&lt;head&gt;Fully Tagged PDF (even for math) is in the works for LaTeX&lt;/head&gt;&lt;lb/&gt; Wol&lt;head&gt;Fully Tagged PDF (even for math) is in the works for LaTeX&lt;/head&gt;&lt;head&gt;Fully Tagged PDF (even for math) is in the works for LaTeX&lt;/head&gt;&lt;head&gt;Fully Tagged PDF (even for math) is in the works for LaTeX&lt;/head&gt;&lt;head&gt;Fully Tagged PDF (even for math) is in the works for LaTeX&lt;/head&gt;&lt;head/&gt; If Typst manages to steal mindshare from LaTeX, I doubt it'll have much to do with tagged pdf or other niche features. It'll happen because, if I forget a closing brace, pdflatex does this: &lt;head&gt;Fully Tagged PDF (even for math) is in the works for LaTeX&lt;/head&gt;&lt;code&gt;This is pdfTeX, Version 3.141592653-2.6-1.40.24 (TeX Live 2022/Debian) (preloaded format=pdflatex)
 restricted \write18 enabled.
entering extended mode
(./t.latex
LaTeX2e &amp;lt;2022-11-01&amp;gt; patch level 1
L3 programming layer &amp;lt;2023-01-16&amp;gt;
(/usr/share/texlive/texmf-dist/tex/latex/base/article.cls
Document Class: article 2022/07/02 v1.4n Standard LaTeX document class
(/usr/share/texlive/texmf-dist/tex/latex/base/size12.clo))
(/usr/share/texlive/texmf-dist/tex/latex/l3backend/l3backend-pdftex.def)
(./t.aux))
Runaway argument?
{ripe and green) \end {enumerate} \end {document} \par 
! File ended while scanning use of \emph .
&amp;lt;inserted text&amp;gt;
                \par 
&amp;lt;*&amp;gt; t.latex
           
? &lt;/code&gt;&lt;code&gt;error: unclosed delimiter
   ‚îå‚îÄ t.typst:14:12
   ‚îÇ
14 ‚îÇ + #underline[Good gin  
   |             ^&lt;/code&gt;&lt;code&gt;{ripe and green) \end {enumerate} \end {document} \par &lt;/code&gt;&lt;head&gt;Fully Tagged PDF (even for math) is in the works for LaTeX&lt;/head&gt;&lt;head&gt;Fully Tagged PDF (even for math) is in the works for LaTeX&lt;/head&gt;&lt;head&gt;Meander for parshape&lt;/head&gt;&lt;head&gt;Meander for parshape&lt;/head&gt;&lt;head&gt;Meander for parshape&lt;/head&gt;&lt;head&gt;Bad comparison&lt;/head&gt;&lt;head&gt;Bad comparison&lt;/head&gt;&lt;head&gt;Bad comparison&lt;/head&gt;&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://lwn.net/Articles/1037577/"/><published>2025-09-27T07:31:39+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45394642</id><title>Ishkur's Guide to Electronic Music</title><updated>2025-09-27T17:32:28.759363+00:00</updated><link href="http://music.ishkur.com/"/><published>2025-09-27T10:38:42+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45395133</id><title>Why We Think</title><updated>2025-09-27T17:32:28.587647+00:00</updated><content>&lt;doc fingerprint="9c59cbb839924e9b"&gt;
  &lt;main&gt;
    &lt;p&gt;Special thanks to John Schulman for a lot of super valuable feedback and direct edits on this post.&lt;/p&gt;
    &lt;p&gt;Test time compute (Graves et al. 2016, Ling, et al. 2017, Cobbe et al. 2021) and Chain-of-thought (CoT) (Wei et al. 2022, Nye et al. 2021), have led to significant improvements in model performance, while raising many research questions. This post aims to review recent developments in how to effectively use test-time compute (i.e. ‚Äúthinking time‚Äù) and why it helps.&lt;/p&gt;
    &lt;p&gt;The core idea is deeply connected to how humans think. We humans cannot immediately provide the answer for "What's 12345 times 56789?". Rather, it is natural to spend time pondering and analyzing before getting to the result, especially for complex problems. In Thinking, Fast and Slow (Kahneman, 2013), Daniel Kahneman characterizes human thinking into two modes, through the lens of the dual process theory :&lt;/p&gt;
    &lt;p&gt;Fast thinking (System 1) operates quickly and automatically, driven by intuition and emotion while requiring little to no effort.&lt;/p&gt;
    &lt;p&gt;Slow thinking (System 2) demands deliberate, logical thought and significant cognitive efforts. This mode of thinking consumes more mental energy and requires intentional engagement.&lt;/p&gt;
    &lt;p&gt;Because System 1 thinking is fast and easy, it often ends up being the main decision driver, at the cost of accuracy and logic. It naturally relies on our brain‚Äôs mental shortcuts (i.e., heuristics) and can lead to errors and biases. By consciously slowing down and taking more time to reflect, improve and analyze, we can engage in System 2 thinking to challenge our instincts and make more rational choices.&lt;/p&gt;
    &lt;p&gt;One view of deep learning, is that neural networks can be characterized by the amount of computation and storage they can access in a forward pass, and if we optimize them to solve problems using gradient descent, the optimization process will figure out how to use these resources‚Äìthey‚Äôll figure out how to organize these resources into circuits for calculation and information storage. From this view, if we design an architecture or system that can do more computation at test time, and we train it to effectively use this resource, it‚Äôll work better.&lt;/p&gt;
    &lt;p&gt;In Transformer models, the amount of computation (flops) that the model does for each generated token is roughly 2 times the number of parameters. For sparse models like mixture of experts (MoE), only a fraction of the parameters are used in each forward pass, so computation = 2 * parameters / sparsity, where sparsity is the fraction of experts active.&lt;/p&gt;
    &lt;p&gt;On the other hand, CoT enables the model to perform far more flops of computation for each token of the answer that it is trying to compute. In fact, CoT has a nice property that it allows the model to use a variable amount of compute depending on the hardness of the problem.&lt;/p&gt;
    &lt;p&gt;A classic idea in machine learning is to define a probabilistic model with a latent (hidden) variable $z$ and a visible variable $y$, where $y$ is given to our learning algorithm. Marginalizing (summing) over the possible values of the latent variable allows us to express a rich distribution over the visible variables, $P(y) = \sum_{z \sim P(z)} P(y \mid z)$. For example, we can model the distribution over math problems and solutions by letting $x$ denote a problem statement, $y$ be ground truth answer or proof, and $z$ as a free-form thought process that leads to the proof. The marginal probability distribution to optimize would be $P(y \mid x) = \sum_{z \sim p(z\mid x)} P(y \mid x, z)$&lt;/p&gt;
    &lt;p&gt;The latent variable perspective is particularly useful for understanding methods that involve collecting multiple parallel CoTs or searching over the CoT‚Äìthese algorithms can be seen as sampling from the posterior $P(z \mid x, y)$. This view also suggests the benefits of using the log loss $\log P(y \mid x)$ as the target objective to optimize, as the log loss objective has been so effective in pretraining.&lt;/p&gt;
    &lt;p&gt;The strategy of generating intermediate steps before generating short answers, particularly for math problems, was explored by Ling, et al. 2017, who introduced the AQUA-RAT dataset, and then expanded by Cobbe et al. 2021, who introduced the Grade School Math (GSM) dataset. Cobbe et al. train a generator with supervised learning on human-written solutions and verifiers that predict the correctness of a candidate solution; they can then search over these solutions. Nye et al. (2021) experimented with intermediate thinking tokens as ‚Äúscratchpads‚Äù and Wei et al. (2022) coined the now-standard term chain-of-thought (CoT).&lt;/p&gt;
    &lt;p&gt;Early work on improving CoT reasoning involved doing supervised learning on human-written reasoning traces or model-written traces filtered for answer correctness, where the latter can be seen as a rudimentary form of reinforcement learning (RL). Some other work found that one could significantly boost math performance of instruction tuned models by prompting them appropriately, with "think step by step" (Kojima et al. 2022) or more complex prompting to encourage the model to reflect on related knowledge first (Yasunaga et al. 2023).&lt;/p&gt;
    &lt;p&gt;Later work found that the CoT reasoning capabilities can be significantly improved by doing reinforcement learning on a dataset of problems with automatically checkable solutions, such as STEM problems with short answers, or coding tasks that can be checked with unit tests (Zelikman et al. 2022, Wang et al., 2023, Liu et al., 2023). This approach rose to prominence with the announcement of o1-preview, o3, and the R1 tech report (DeepSeek-AI, 2025), which showed that a simple recipe where a policy gradient algorithm could lead to strong performance.&lt;/p&gt;
    &lt;p&gt;The fundamental intent of test-time compute is to adaptively modify the model‚Äôs output distribution at test time. There are various ways of utilizing test time resources for decoding to select better samples and thus alter the model‚Äôs predictions towards a more desired distribution. Two main approaches for improving the decoding process are parallel sampling and sequential revision.&lt;/p&gt;
    &lt;p&gt;Parallel sampling generates multiple outputs simultaneously, meanwhile providing guidance per step with process reward signals or using verifiers to judge the quality at the end. It is the most widely adopted decoding method to improve test time performance, such as best-of-$N$ or beam search. Self-consistency (Wang et al. 2023) is commonly used to select the answer with majority vote among multiple CoT rollouts when the ground truth is not available.&lt;/p&gt;
    &lt;p&gt;Sequential revision adapts the model‚Äôs responses iteratively based on the output in the previous step, asking the model to intentionally reflect its existing response and correct mistakes. The revision process may have to rely on a fine-tuned model, as naively relying on the model‚Äôs intrinsic capability of self-correction without external feedback may not lead to improvement (Kamoi et al. 2024, Huang et al. 2024).&lt;/p&gt;
    &lt;p&gt;Parallel sampling is simple, intuitive and easier to implement, but bounded by the model capability of whether it can achieve the correct solution in one-go. Sequential explicitly asks the model to reflect on mistakes but it is slower and requires extra care during implementation as it does run the risk of correct predictions being modified to be incorrect or introducing other types of hallucinations. These two methods can be used together. Snell et al. (2024) showed that easier questions benefit from purely sequential test-time compute, whereas harder questions often perform best with an optimal ratio of sequential to parallel compute.&lt;/p&gt;
    &lt;p&gt;Given a generative model and a scoring function that we can use to score full or partial samples, there are various search algorithms we can use to find a high scoring sample. Best-of-$N$ is the simplest such algorithm: one just collects $N$ independent samples and chooses the highest-ranking sample according to some scoring function. Beam search is a more sophisticated search algorithm that makes the search process more adaptive, spending more sampling computation on more promising parts of the solution space.&lt;/p&gt;
    &lt;p&gt;Beam search maintains a set of promising partial sequences and alternates between extending them and pruning the less promising ones. As a selection mechanism, we can use a process reward model (PRM; Lightman et al. 2023) to guide beam search candidate selection. Xie et al. (2023) used LLM to evaluate how likely its own generated reasoning step is correct, formatted as a multiple-choice question and found that per-step self-evaluation reduces accumulative errors in multi-step reasoning during beam search decoding. Besides, during sampling, annealing the temperature helps mitigate aggregated randomness. These experiments by Xie et al. achieved 5-6% improvement on few-shot GSM8k, AQuA and StrategyQA benchmarks with the Codex model. Reward balanced search (short for ‚ÄúREBASE‚Äù; Wu et al. 2025) separately trained a process reward model (PRM) to determine how much each node should be expanded at each depth during beam search, according to the softmax-normalized reward scores. Jiang et al. (2024) trained their PRM, named ‚ÄúRATIONALYST‚Äù, for beam search guidance on synthetic rationales conditioned on a large amount of unlabelled data. Good rationales are filtered based on whether they help reduce the neg log-prob of true answer tokens by a threshold, when comparing the difference between when the rationales is included in the context vs not. At inference time, RATIONALYST provides process supervision to the CoT generator by helping estimate log-prob of next reasoning steps (‚Äúimplicit‚Äù) or directly generating next reasoning steps as part of the prompt (‚Äúexplicit‚Äù).&lt;/p&gt;
    &lt;p&gt;Interestingly, it is possible to trigger the emergent chain-of-thought reasoning paths without explicit zero-shot or few-shot prompting. Wang &amp;amp; Zhou (2024) discovered that if we branch out at the first sampling tokens by retaining the top $k$ tokens with highest confidence, measured as the difference between top-1 and top-2 candidates during sampling, and then continue these $k$ sampling trials with greedy decoding onward, many of these sequences natively contain CoT. Especially when CoT does appear in the context, it leads to a more confident decoding of the final answer. To calculate the confidence of the final answer, the answer span needs to be identified by task-specific heuristics (e.g. last numerical values for math questions) or by prompting the model further with "So the answer is". The design choice of only branching out at the first token is based on the observation that early branching significantly enhances the diversity of potential paths, while later tokens are influenced a lot by previous sequences.&lt;/p&gt;
    &lt;p&gt;If the model can reflect and correct mistakes in past responses, we would expect the model to produce a nice sequence of iterative revision with increasing quality. However, this self-correction capability turns out to not exist intrinsically among LLMs and does not easily work out of the box, due to various failure modes, such as, (1) hallucination, including modifying correct responses to be incorrect; (2) behavior collapse to non-correcting behavior; e.g. making minor or no modification on the first incorrect responses; or (3) fail to generalize to distribution shift at test time. Experiments by Huang et al. (2024) showed that naively applying self-correction leads to worse performance and external feedback is needed for models to self improve, which can be based on matching ground truths, heuristics and task-specific metrics, unit tests results for coding questions (Shinn, et al. 2023), a stronger model (Zhang et al. 2024), as well as human feedback (Liu et al. 2023).&lt;/p&gt;
    &lt;p&gt;Self-correction learning (Welleck et al. 2023) aims to train a corrector model $P_\theta(y \mid y_0, x)$ given a fixed generator model $P_0(y_0 \mid x)$. While the generator model remains to be generic, the corrector model can task-specific and only does generation conditioned on an initial model response and additional feedback (e.g. a sentence, a compiler trace, unit test results; can be optional):&lt;/p&gt;
    &lt;p&gt;Self-correction learning first generates first generates multiple outputs per prompt in the data pool;&lt;/p&gt;
    &lt;p&gt;then create value-improving pairs by pairing two outputs for the same prompt together if one has a higher value than the other, (prompt $x$, hypothesis $y$, correction $y‚Äô$).&lt;/p&gt;
    &lt;p&gt;These pairs are selected proportional to is improvement in value, $v(y‚Äô) - v(y)$, and similarity between two outputs, $\text{Similarity}(y, y‚Äô)$ to train the corrector model.&lt;/p&gt;
    &lt;p&gt;To encourage exploration, the corrector provides new generations into the data pool as well. At the inference time, the corrector can be used iteratively to create a correction trajectory of sequential revision.&lt;/p&gt;
    &lt;p&gt;Recursive inspection (Qu et al. 2024) also aims to train a better corrector model but with a single model to do both generation and self-correction.&lt;/p&gt;
    &lt;p&gt;SCoRe (Self-Correction via Reinforcement Learning; Kumar et al. 2024) is a multi-turn RL approach to encourage the model to do self-correction by producing better answers at the second attempt than the one created at the first attempt. It composes two stages of training: stage 1 only maximizes the accuracy of the second attempt while enforcing a KL penalty only on the first attempt to avoid too much shifting of the first-turn responses from the base model behavior; stage 2 optimizes the accuracy of answers produced by both the first and second attempts. Ideally we do want to see performance at both first and second attempts to be better, but adding stage 1 prevents the behavior collapse where the model does minor or none edits on the first response, and stage 2 further improves the results.&lt;/p&gt;
    &lt;p&gt;There‚Äôs been a lot of recent success in using RL to improve the reasoning ability of language models, by using a collection of questions with ground truth answers (usually STEM problems and puzzles with easy to verify answers), and rewarding the model for getting the correct answer.Recent activity in this area was spurred by strong performance of the o-series models from OpenAI, and the subsequent releases of models and tech reports from DeepSeek.&lt;/p&gt;
    &lt;p&gt;DeepSeek-R1 (DeepSeek-AI, 2025) is an open-source LLM designed to excel in tasks that require advanced reasoning skills like math, coding and logical problem solving. They run through 2 rounds of SFT-RL training, enabling R1 to be good at both reasoning and non-reasoning tasks.&lt;/p&gt;
    &lt;p&gt;Cold-start SFT is to fine-tune the DeepSeek-V3-Base base model on a collection of thousands of cold-start data. Without this step, the model has issues of poor readability and language mixing.&lt;/p&gt;
    &lt;p&gt;Reasoning-oriented RL trains a reasoning model on reasoning-only prompts with two types of rule-based rewards:&lt;/p&gt;
    &lt;p&gt;Format rewards: The model should wrap CoTs by &amp;lt;thinking&amp;gt; ... &amp;lt;/thinking&amp;gt; tokens.&lt;/p&gt;
    &lt;p&gt;Accuracy rewards: Whether the final answers are correct. The answer for math problems needs to be present in a specific format (e.g. in a box) to be verified reliably. For coding problems, a compiler is used to evaluate whether test cases pass.&lt;/p&gt;
    &lt;p&gt;Rejection-sampling + non-reasoning SFT utilizes new SFT data created by rejection sampling on the RL checkpoint of step 2, combined with non-reasoning supervised data from DeepSeek-V3 in domains like writing, factual QA, and self-cognition, to retrain DeepSeek-V3-Base.&lt;/p&gt;
    &lt;p&gt;Filter out CoTs with mixed languages, long paragraphs, and code blocks.&lt;/p&gt;
    &lt;p&gt;Include non-reasoning tasks using DeepSeek-V3 (DeepSeek-AI, 2024) pipeline.&lt;/p&gt;
    &lt;p&gt;For certain non-reasoning tasks, call DeepSeek-V3 to generate potential CoTs before answering the question by prompting. But for simpler queries like ‚Äúhello‚Äù, CoT is not needed.&lt;/p&gt;
    &lt;p&gt;Then fine-tune the DeepSeek-V3-Base on the total 800k samples for 2 epochs.&lt;/p&gt;
    &lt;p&gt;The final RL stage trains the step 3 checkpoint on both reasoning and non-reasoning prompts, improving helpfulness, harmlessness and reasoning.&lt;/p&gt;
    &lt;p&gt;Interestingly the DeepSeek team showed that with pure RL, no SFT stage, it is still possible to learn advanced reasoning capabilities like reflection and backtracking (‚ÄúAha moment‚Äù). The model naturally learns to spend more thinking tokens during the RL training process to solve reasoning tasks. The ‚Äúaha moment‚Äù can emerge, referring to the model reflecting on previous mistakes and then trying alternative approaches to correct them. Later, various open source efforts happened for replicating R1 results like Open-R1, SimpleRL-reason, and TinyZero, all based on Qwen models. These efforts also confirmed that pure RL leads to great performance on math problems, as well as the emergent ‚Äúaha moment‚Äù.&lt;/p&gt;
    &lt;p&gt;The DeepSeek team also shared some of their unsuccessful attempts. They failed to use process reward model (PRM) as it is hard to define per-step rubrics or determine whether an intermediate step is correct, meanwhile making the training more vulnerable to reward hacking. The efforts on MCTS (Monte Carlo Tree Search) also failed due to the large search space for language model tokens, in comparison to, say, chess; and training the fine-grained value model used for guiding the search is very challenging too. Failed attempts often provide unique insights and we would like to encourage the research community to share more about what did not work out.&lt;/p&gt;
    &lt;p&gt;During the reasoning steps, certain intermediate steps can be reliably and accurately solved by executing code or running mathematical calculations. Offloading that part of reasoning components into an external code interpreter, as in PAL (Program-Aided Language Model; Gao et al. 2022) or Chain of Code (Li et al. 2023), can extend the capability of LLM with external tools, eliminating the need for LLMs to learn to execute code or function as calculators themselves. These code emulators, like in Chain of Code, can be augmented by an LLM such that if a standard code interpreter fails, we have the option of using LLM to execute that line of code instead. Using code to enhance reasoning steps are especially beneficial for mathematical problems, symbolic reasoning and algorithmic tasks. These unit tests may not exist as part of the coding questions, and in those cases, we can instruct the model to self-generate unit tests for it to test against to verify the solution (Shinn, et al. 2023).&lt;/p&gt;
    &lt;p&gt;ReAct (Reason+Act; Yao et al. 2023) combines the action of searching the Wikipedia API and generation of reasoning traces, such that reasoning paths can incorporate external knowledge.&lt;/p&gt;
    &lt;p&gt;o3 &amp;amp; o4-mini, recently released by OpenAI, are another two good examples where the reasoning process involves tool use like Web search, code execution and image processing. The team observed that large-scale reinforcement learning exhibits the same trend as in the GPT paradigm that ‚Äúmore compute = better performance‚Äù.&lt;/p&gt;
    &lt;p&gt;Deep learning models are often treated as black boxes and various interpretability methods have been proposed. Interpretability is useful for a couple reasons: first, it gives us an extra test to determine if the model is misaligned with its creators‚Äô intent, or if it‚Äôs misbehaving in some way that we can‚Äôt tell by monitoring its actions. Second, it can help us determine whether the model is using a sound process to compute its answers. Chain of thought provides an especially convenient form of interpretability, as it makes the model‚Äôs internal process visible in natural language. This interpretability, however, rests on the assumption that the model truthfully describes its internal thought processes.&lt;/p&gt;
    &lt;p&gt;Recent work showed that monitoring CoT of reasoning models can effectively detect model misbehavior such as reward hacking, and can even enable a weaker model to monitor a stronger model (Baker et al. 2025). Increasing test time compute can also lead to improved adversarial robustness (Zaremba et al. 2025); this makes sense intuitively, because thinking for longer should be especially useful when the model is presented with an unusual input, such as an adversarial example or jailbreak attempt ‚Äì it can use the extra thinking time to make sense of the strange situation it‚Äôs been presented with.&lt;/p&gt;
    &lt;p&gt;Intuitively, model CoTs could be biased due to lack of explicit training objectives aimed at encouraging faithful reasoning. Or when we fine-tune the model on human-written explanations, those human-written samples may contain mistakes. Thus we cannot by default assume CoT is always faithful .&lt;/p&gt;
    &lt;p&gt;Lanham et al. (2023) investigated several modes of CoT faithfulness failures by deliberately introducing mistakes into CoTs and measuring their impacts on the accuracy of a set of multiple choice tasks (e.g. AQuA, MMLU, ARC Challenge, TruthfulQA, HellaSwag):&lt;/p&gt;
    &lt;p&gt;Mistake 1 (Early answering): The model may form a conclusion prematurely before CoT is generated. This is tested by early truncating or inserting mistakes into CoT. Different tasks revealed varying task-specific dependencies on CoT effectiveness; some have evaluation performance sensitive to truncated CoT but some do not. Wang et al. (2023) did similar experiments but with more subtle mistakes related to bridging objects or language templates in the formation of CoT.&lt;/p&gt;
    &lt;p&gt;Mistake 2 (Uninformative tokens): Uninformative CoT tokens improve performance. This hypothesis is tested by replacing CoT with filler text (e.g. all periods) and this setup shows no accuracy increase and some tasks may suffer performance drop slightly when compared to no CoT.&lt;/p&gt;
    &lt;p&gt;Mistake 3 (Human-unreadable encoding): Relevant information is encoded in a way that is hard for humans to understand. Paraphrasing CoTs in an non-standard way did not degrade performance across datasets, suggesting accuracy gains do not rely on human-readable reasoning.&lt;/p&gt;
    &lt;p&gt;Interestingly, Lanham et al. suggests that for multiple choice questions, smaller models may not be capable enough of utilizing CoT well, whereas larger models may have been able to solve the tasks without CoT. This dependency on CoT reasoning, measured by the percent of obtaining the same answer with vs without CoT, does not always increase with model size on multiple choice questions, but does increase with model size on addition tasks, implying that thinking time matters more for complex reasoning tasks.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://lilianweng.github.io/posts/2025-05-01-thinking/"/><published>2025-09-27T12:27:46+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45395396</id><title>Samsung now owns Denon, Bowers and Wilkins, Marantz, Polk, and more audio brands</title><updated>2025-09-27T17:32:28.328774+00:00</updated><content>&lt;doc fingerprint="388c34d30b255bf"&gt;
  &lt;main&gt;
    &lt;p&gt;Samsung subsidiary Harman has completed its acquisition of Sound United, Masimo‚Äôs former audio business, adding a sizable expansion to Samsung‚Äôs audio brand portfolio. The $350 million deal was first announced in May, and brings Bowers &amp;amp; Wilkins, Denon, Marantz, Definitive Technology, Polk Audio, HEOS, Class√©, and Boston Acoustics under the same roof as JBL, Harman Kardon, and other audio brands that Samsung acquired when it purchased Harman for $8 billion in 2016.&lt;/p&gt;
    &lt;head rend="h1"&gt;Samsung now owns Denon, Bowers &amp;amp; Wilkins, Marantz, Polk, and more audio brands&lt;/head&gt;
    &lt;p&gt;The Sound United portfolio will operate as a standalone business under Samsung‚Äôs audio empire.&lt;/p&gt;
    &lt;p&gt;The Sound United portfolio will operate as a standalone business under Samsung‚Äôs audio empire.&lt;/p&gt;
    &lt;p&gt;‚ÄùSound United‚Äôs impressive roster of brands is rooted in a deep passion for sound, innovation, and commitment to quality that aligns with Harman‚Äôs own values,‚Äù Harman‚Äôs lifestyle lead, Dave Rogers, said in a statement. ‚ÄúThis transaction unlocks meaningful growth opportunities for everyone. It bolsters Harman‚Äôs strategy to build on its unparalleled success story and scale to unprecedented heights as an audio leader.‚Äù&lt;/p&gt;
    &lt;p&gt;Sound United will operate as a standalone business under Harman‚Äôs lifestyle division to ensure that each audio brand preserves its identity and customer base. With the sale now completed, Masimo can focus its attention on the Apple Watch lawsuit it launched against US Customs and Border Protection in August.&lt;/p&gt;
    &lt;head rend="h2"&gt;Most Popular&lt;/head&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Costco is already selling piles of Lego Game Boys cheaper than the Lego company&lt;/item&gt;
      &lt;item&gt;X-ray scans reveal the hidden risks of cheap batteries&lt;/item&gt;
      &lt;item&gt;Pentagon can call DJI a Chinese Military Company, court rules&lt;/item&gt;
      &lt;item&gt;Trump‚Äôs new H-1B policy caused short-term panic ‚Äî and will cause long-term chaos&lt;/item&gt;
      &lt;item&gt;Samsung now owns Denon, Bowers &amp;amp; Wilkins, Marantz, Polk, and more audio brands&lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.theverge.com/news/784390/samsung-harman-masimo-audio-acquisition-complete"/><published>2025-09-27T13:05:45+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45395661</id><title>Cost of AGI Delusion:Chasing Superintelligence US Falling Behind in Real AI Race</title><updated>2025-09-27T17:32:28.076953+00:00</updated><content>&lt;doc fingerprint="bf18d39c4c91e7fa"&gt;
  &lt;main&gt;
    &lt;p&gt;In early August, one day before releasing GPT-5, OpenAI CEO Sam Altman posted an image of the Death Star on social media. It was just the latest declaration by Altman that his new AI model would change the world forever. ‚ÄúWe have discovered, invented, whatever you want to call it, something extraordinary that is going to reshape the course of human history,‚Äù Altman said in a July interview. He compared his company‚Äôs research to the Manhattan Project and said that he felt ‚Äúuseless‚Äù compared with OpenAI‚Äôs newest invention. Altman, in other words, suggested that GPT-5 would bring society closer to what computer scientists call artificial general intelligence: an AI system that can match or exceed human cognition, including the ability to learn new things.&lt;/p&gt;
    &lt;p&gt;For years, creating AGI has been the holy grail of many leading AI researchers. Altman and other top technologists, including Anthropic CEO Dario Amodei and computer science professors Yoshua Bengio and Stuart Russell, have been dreaming of constructing superintelligent systems for decades‚Äîas well as fearing them. And recently, many of these voices have declared that the day of reckoning is near, telling government officials that whichever country invents AGI first will gain enormous geopolitical advantages. Days before U.S. President Donald Trump‚Äôs second inauguration, for example, Altman told Trump that AGI would be achieved within his term‚Äîand that Washington needed to prepare.&lt;/p&gt;
    &lt;p&gt;These declarations have clearly had an effect. Over the last two years, Democratic and Republican politicians alike have been discussing AGI more frequently and exploring policies that could unleash its potential or limit its harms. It is easy to see why. AI is already at the heart of a range of emerging technologies, including robotics, biotechnology, and quantum computing. It is also a central element of U.S.-China competition. AGI could theoretically unlock more (and more impressive) scientific advancements, including the ability to stop others from making similar breakthroughs. In this view, if the United States makes it first, American economic growth might skyrocket and the country could attain an unassailable military advantage.&lt;/p&gt;
    &lt;p&gt;There is no doubt that AI is a very powerful invention. But when it comes to AGI, the hype has grown out of proportion. Given the limitations of existing systems, it is unlikely that superintelligence is actually imminent, even though AI systems continue to improve. Some prominent computer scientists, such as Andrew Ng, have questioned whether artificial general intelligence will ever be created. For now, and possibly forever, advances in AI are more likely to be iterative, like other general-purpose technologies.&lt;/p&gt;
    &lt;p&gt;The United States should therefore treat the AI race with China like a marathon, not a sprint. This is especially important given the centrality of AI to Washington‚Äôs competition with Beijing. Today, both the country‚Äôs new tech firms, like DeepSeek, and existing powerhouses, like Huawei, are increasingly keeping pace with their American counterparts. By emphasizing steady advancements and economic integration, China may now even be ahead of the United States in terms of adopting and using robotics. To win the AI race, Washington thus needs to emphasize practical investments in the development and rapid adoption of AI. It cannot distort U.S. policy by dashing for something that might not exist.&lt;/p&gt;
    &lt;head rend="h3"&gt;WILDEST DREAMS&lt;/head&gt;
    &lt;p&gt;In Washington, AGI is a hot topic. In a September 2024 hearing on AI oversight, Connecticut Senator Richard Blumenthal declared that AGI is ‚Äúhere and now‚Äîone to three years has been the latest prediction.‚Äù In July, South Dakota Senator Mike Rounds introduced a bill requiring the Pentagon to establish an AGI steering committee. The bipartisan U.S.-China Economic and Security Review Commission‚Äôs 2024 report argued that AGI demanded a Manhattan Project‚Äìlevel effort to ensure the United States achieved it first. Some officials even believe AGI is about to jeopardize human existence. In June 2025, for instance, Representative Jill Tokuda of Hawaii said that ‚Äúartificial superintelligence, ASI, is one of the largest existential threats that we face.‚Äù&lt;/p&gt;
    &lt;p&gt;The fixation on AGI goes beyond rhetoric. Former Biden administration officials issued executive orders that regulated AI in part based on concerns that AGI is on the horizon. Trump‚Äôs AI Action Plan, released in July, may avoid explicit mentions of AGI. But it emphasizes frontier AI, infrastructure expansions, and an innovation-centric race for technological dominance. It would, in the words of Time magazine, fulfill ‚Äúmany of the greatest policy wishes of the top AI companies‚Äîwhich are all now more certain than ever that AGI is around the corner.‚Äù&lt;/p&gt;
    &lt;p&gt;The argument for dashing toward AGI is simple. An AGI system, the thinking goes, might be able to self-improve simultaneously along multiple dimensions. In doing so, it could quickly surpass what humans are capable of and solve problems that have vexed society for millennia. The company and country that reaches that point first will thus not only achieve enormous financial returns, scientific breakthroughs, and military advancements but also lock out competitors by monopolizing the benefits in ways that restrict the developments of others and that establish the rules of the game. The AI race, then, is really a race to a predetermined, AGI finish line in which the winner not only bursts triumphantly through the ribbon but picks up every trophy and goes home, leaving nothing for even the second- and third-place competitors.&lt;/p&gt;
    &lt;quote&gt;It is unlikely that superintelligence is actually imminent.&lt;/quote&gt;
    &lt;p&gt;Yet there is reason to be skeptical of this framing. For starters, AI researchers can‚Äôt even agree on how to define AGI and its capabilities; in other words, no one agrees on where the finish line is. That makes any policy based around achieving it inherently dubious. Instead of a singular creation, AI is more of a broad category of technologies, with many different types of innovations. That means progress is likely to be a complex and ever-changing wave, rather than a straight-line trip.&lt;/p&gt;
    &lt;p&gt;This is evident in the technology‚Äôs most recent developments. Today‚Äôs models are making strides in usability. The most advanced large language models, however, still face many of the same challenges they faced in 2022, including shallow reasoning, brittle generalization, a lack of long-term memory, and a lack of genuine metacognition or continual learning‚Äîas well, of course, as hallucinations. Since its release, for instance, GPT-5 has looked more like a normal advancement than a transformative breakthrough. As a result, some of AGI‚Äôs biggest proponents have started tempering their enthusiasm. At the start of the summer, former Google CEO Eric Schmidt said that AI wasn‚Äôt hyped enough; now, he argues that people have become too obsessed with "superintelligent" systems. Similarly, in August, Altman declared that AGI is ‚Äúnot a useful concept.‚Äù In some ways, when it comes to AGI, the computer science world may still be where it was in 2002, when the then director of MIT‚Äôs AI lab joked that the true definition of AI was ‚Äúalmost implemented.‚Äù&lt;/p&gt;
    &lt;p&gt;Even if some AI models do prove transformative, their effects will be mediated by adoption and diffusion processes‚Äîas happens with almost every invention. Consider, for example, electricity. It has generated untold value and utterly transformed the global economy, but it became useful thanks to the thousands of scientists, engineers, inventors, and companies who worked on it over the course of decades. Benjamin Franklin proved lightning was electricity in 1752, Alessandro Volta invented the first battery in 1799, and Nikola Tesla developed alternating current in the late 1880s. Even then, it took many more years before most homes had power outlets. All of these innovations were critical to reaching that eventual endpoint, and no one actor captured the global market for electricity or effectively prevented others from continuing to innovate.&lt;/p&gt;
    &lt;p&gt;The modern combustion engine provides another case-in-point. It was invented in 1876 by the German engineer Nicholas Otto, but was advanced and improved upon over the course of several decades before automobiles went mainstream. Companies around the world ultimately achieved massive gains from automobiles, not just German ones (although German auto industry is, of course, very successful). Perhaps the most prominent early leader, the Ford Motor Company, was American, and it first dominated the car market thanks to its innovations in production, not engines.&lt;/p&gt;
    &lt;head rend="h3"&gt;INNOVATION AND ADAPTATION&lt;/head&gt;
    &lt;p&gt;If AI competition is more likely to span a generation than just a few more years, American officials need to think more about how the country can quickly adopt AI advances and less about how to summon AI‚Äôs speculative potential. This is closer to what Beijing does. Although the United States and China are very different and the latter‚Äôs approach has its limits, China is moving faster at scaling robots in society, and its AI Plus Initiative emphasizes achieving widespread industry-specific adoption by 2027. The government wants AI to essentially become a part of the country‚Äôs infrastructure by 2030. China is also investing in AGI, but Beijing‚Äôs emphasis is clearly on quickly scaling, integrating, and applying current and near-term AI capabilities.&lt;/p&gt;
    &lt;p&gt;To avoid falling behind in AI adoption within the bureaucracy, the United States should launch a large-scale AI literacy initiative across the government. Public employees of all kinds need to know how to use both general AI systems and ones tailored to their jobs. American officials should offer expanded access to AI training both for their particular roles and for general use, including training on issues like automation bias (in which people overestimate the accuracy of AI systems). To do so, Washington can take advantage of the fact that major American companies, including OpenAI and Anthropic, are willing to give public employees and agencies more exposure and access to their technologies, allowing the state, at least for now, to use their large language models virtually for free.&lt;/p&gt;
    &lt;p&gt;The United States must also modernize its infrastructure and data practices, including within the national security apparatus. Advanced AI models require sophisticated hardware, adequate computing power, and state-of-the-art knowledge management systems to operate effectively. And today, Washington is behind on each. The government has started to make some progress on upgrading its systems, but decades of siloing and bureaucratic processes have created entrenched lags that are hindering innovation. To achieve AI adoption at scale, Washington will likely need to invest billions of dollars in procurement over the next few years, especially for the Pentagon.&lt;/p&gt;
    &lt;quote&gt;Racing toward a myth is not sound policy.&lt;/quote&gt;
    &lt;p&gt;Done right, AI could revolutionize the government‚Äôs efficiency. Even if it helps only in mundane areas, such as energy load optimization, cybersecurity and IT, predictive maintenance, logistics, supply chain management, and acquisition paperwork, it will allow larger bureaucracies to overcome or eliminate regulatory hurdles. That could, in turn, fuel more private-sector adoption. Right now, private sector pilot projects with frontier AI sometimes fail to successfully transition from prototype to full capability, often because of integration challenges or misalignment between a proposed AI solution and the problem it targets. By some estimates, more than 80 percent of AI projects fail to deliver results. Industry surveys report that 88 percent of pilots never reach production. The IT company Gartner projects that 40 percent of ‚Äúagentic AI‚Äù deployments‚Äîautonomous AI systems capable of planning and executing multi-step tasks with minimal or no human oversight‚Äîwill be scrapped by 2027. By placing greater value on and demonstrating how AI can be integrated into large, complex bureaucracies, the government can help forge a pathway for private companies, lowering their perceived risks. By adopting AI, Washington can also create demand signal for scalable, near-term AI applications.&lt;/p&gt;
    &lt;p&gt;But protecting American AI leadership will require the government to do more than just help itself and the private sector. The United States will also need to invest in universities and researchers who can make invaluable technical breakthroughs in AI safety, efficiency, and effectiveness, but lack the capacities of big firms. The Trump administration must therefore follow through on its plan to expand support for the National AI Research Resource, a nascent, government-provided consortium of AI infrastructure that would provide researchers, educators, and students with the specialized tools they need for advanced AI work.&lt;/p&gt;
    &lt;p&gt;None of these steps means U.S. officials should abandon thinking about AGI. In fact, some of the best policies for ensuring AI leadership today will also hasten the arrival of more advanced systems. Any policy that supports AI research and development, such as the immense investment in technology mandated by the 2022 CHIPS and Science Act, will lead to more sophisticated algorithms. So will continued investment in the country‚Äôs power infrastructure, which helps the energy-intensive AI industry grow and function.&lt;/p&gt;
    &lt;p&gt;But Washington must ensure that the pursuit of AGI does not come at the expense of near-term adoption. Racing toward a myth is not sound policy. Instead, the country‚Äôs primary goal must be rapidly scaling practical AI applications‚Äîimprovements that meet government needs and deliver real efficiencies today and tomorrow. Otherwise, the United States could keep producing the world‚Äôs fanciest models. It could lead in algorithm creation. But it will still fall behind countries that make better use of AI innovations.&lt;/p&gt;
    &lt;head rend="h3"&gt;You are reading a free article&lt;/head&gt;
    &lt;p&gt;Subscribe to Foreign Affairs to get unlimited access.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Paywall-free reading of new articles and over a century of archives&lt;/item&gt;
      &lt;item&gt;Six issues a year in print and online, plus audio articles&lt;/item&gt;
      &lt;item&gt;Unlock access to the Foreign Affairs app for reading on the go&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Already a subscriber? Sign In&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.foreignaffairs.com/united-states/cost-delusion-artificial-general-intelligence"/><published>2025-09-27T13:44:49+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45395952</id><title>Show HN: An open source Launchpad for macOS 26</title><updated>2025-09-27T17:32:27.402178+00:00</updated><content>&lt;doc fingerprint="1e55077d0c13d3ee"&gt;
  &lt;main&gt;
    &lt;p&gt;Languages: English | ‰∏≠Êñá | Êó•Êú¨Ë™û | ÌïúÍµ≠Ïñ¥ | Fran√ßais | Espa√±ol | Deutsch | –†—É—Å—Å–∫–∏–π | ‡§π‡§ø‡§®‡•ç‡§¶‡•Ä | Ti·∫øng Vi·ªát&lt;/p&gt;
    &lt;p&gt;Download here - Get the latest release&lt;/p&gt;
    &lt;p&gt;‚≠ê Consider starring LaunchNext and especially LaunchNow!&lt;/p&gt;
    &lt;p&gt;MacOS Tahoe removed launchpad,and it's so hard to use, it's doesn't use your Bio GPU, please apple, at least give people an option to switch back. Before that, here is LaunchNext&lt;/p&gt;
    &lt;p&gt;Built upon LaunchNow by ggkevinnnn - huge thanks to the original project! I hope this enhanced version can be merged back to the original repository&lt;/p&gt;
    &lt;p&gt;LaunchNow has chosen the GPL 3 license. LaunchNext follows the same licensing terms.&lt;/p&gt;
    &lt;code&gt;sudo xattr -r -d com.apple.quarantine /Applications/LaunchNext.app&lt;/code&gt;
    &lt;p&gt;Why: I can't afford Apple's developer certificate ($99/year), so macOS blocks unsigned apps. This command removes the quarantine flag to let it run. Only use this command on apps you trust.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;‚úÖ One-click import from old system Launchpad - directly reads your native Launchpad SQLite database (&lt;code&gt;/private$(getconf DARWIN_USER_DIR)com.apple.dock.launchpad/db/db&lt;/code&gt;) to perfectly recreate your existing folders, app positions, and layout&lt;/item&gt;
      &lt;item&gt;‚úÖ Classic Launchpad experience - works exactly like the beloved original interface&lt;/item&gt;
      &lt;item&gt;‚úÖ Multi-language support - full internationalization with English, Chinese, Japanese, French, Spanish, German, and Russian&lt;/item&gt;
      &lt;item&gt;‚úÖ Hide icon labels - clean, minimalist view when you don't need app names&lt;/item&gt;
      &lt;item&gt;‚úÖ Custom icon sizes - adjust icon dimensions to fit your preferences&lt;/item&gt;
      &lt;item&gt;‚úÖ Smart folder management - create and organize folders just like before&lt;/item&gt;
      &lt;item&gt;‚úÖ Instant search and keyboard navigation - find apps quickly&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;‚ùå No custom app organization&lt;/item&gt;
      &lt;item&gt;‚ùå No user-created folders&lt;/item&gt;
      &lt;item&gt;‚ùå No drag-and-drop customization&lt;/item&gt;
      &lt;item&gt;‚ùå No visual app management&lt;/item&gt;
      &lt;item&gt;‚ùå Forced categorical grouping&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Application data is safely stored in:&lt;/p&gt;
    &lt;code&gt;~/Library/Application Support/LaunchNext/Data.store
&lt;/code&gt;
    &lt;p&gt;Reads directly from the system Launchpad database:&lt;/p&gt;
    &lt;code&gt;/private$(getconf DARWIN_USER_DIR)com.apple.dock.launchpad/db/db&lt;/code&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;macOS 26 (Tahoe) or later (MacOS15 would work but some feedback said that you can not open folder, I can't test it.)&lt;/item&gt;
      &lt;item&gt;Apple Silicon or Intel processor&lt;/item&gt;
      &lt;item&gt;Xcode 26 (for building from source)&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Clone the repository&lt;/p&gt;
        &lt;code&gt;git clone https://github.com/yourusername/LaunchNext.git cd LaunchNext&lt;/code&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Open in Xcode&lt;/p&gt;
        &lt;quote&gt;open LaunchNext.xcodeproj&lt;/quote&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Build and run&lt;/p&gt;
        &lt;list rend="ul"&gt;
          &lt;item&gt;Select your target device&lt;/item&gt;
          &lt;item&gt;Press &lt;code&gt;‚åò+R&lt;/code&gt;to build and run&lt;/item&gt;
          &lt;item&gt;Or &lt;code&gt;‚åò+B&lt;/code&gt;to build only&lt;/item&gt;
        &lt;/list&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Regular Build:&lt;/p&gt;
    &lt;code&gt;xcodebuild -project LaunchNext.xcodeproj -scheme LaunchNext -configuration Release&lt;/code&gt;
    &lt;p&gt;Universal Binary Build (Intel + Apple Silicon):&lt;/p&gt;
    &lt;code&gt;xcodebuild -project LaunchNext.xcodeproj -scheme LaunchNext -configuration Release ARCHS="arm64 x86_64" ONLY_ACTIVE_ARCH=NO clean build&lt;/code&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;First Launch: LaunchNext automatically scans all installed applications&lt;/item&gt;
      &lt;item&gt;Select: Click to select apps, double-click to launch&lt;/item&gt;
      &lt;item&gt;Search: Type to instantly filter applications&lt;/item&gt;
      &lt;item&gt;Organize: Drag apps to create folders and custom layouts&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Open Settings (gear icon)&lt;/item&gt;
      &lt;item&gt;Click "Import Launchpad"&lt;/item&gt;
      &lt;item&gt;Your existing layout and folders are automatically imported&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Windowed: Floating window with rounded corners&lt;/item&gt;
      &lt;item&gt;Fullscreen: Full-screen mode for maximum visibility&lt;/item&gt;
      &lt;item&gt;Switch modes in Settings&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Intelligent click detection prevents accidental dismissal&lt;/item&gt;
      &lt;item&gt;Context-aware gesture handling&lt;/item&gt;
      &lt;item&gt;Search field protection&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Icon Caching: Intelligent image caching for smooth scrolling&lt;/item&gt;
      &lt;item&gt;Lazy Loading: Efficient memory usage&lt;/item&gt;
      &lt;item&gt;Background Scanning: Non-blocking app discovery&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Automatic screen detection&lt;/item&gt;
      &lt;item&gt;Per-display positioning&lt;/item&gt;
      &lt;item&gt;Seamless multi-monitor workflows&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Q: App won't start? A: Ensure macOS 15.0+ and check system permissions. (Note that some feedback said you can not open a folder on MacOS15)&lt;/p&gt;
    &lt;p&gt;We welcome contributions! Please:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Fork the repository&lt;/item&gt;
      &lt;item&gt;Create a feature branch (&lt;code&gt;git checkout -b feature/amazing-feature&lt;/code&gt;)&lt;/item&gt;
      &lt;item&gt;Commit changes (&lt;code&gt;git commit -m 'Add amazing feature'&lt;/code&gt;)&lt;/item&gt;
      &lt;item&gt;Push to branch (&lt;code&gt;git push origin feature/amazing-feature&lt;/code&gt;)&lt;/item&gt;
      &lt;item&gt;Open a Pull Request&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Follow Swift style conventions&lt;/item&gt;
      &lt;item&gt;Add meaningful comments for complex logic&lt;/item&gt;
      &lt;item&gt;Test on multiple macOS versions&lt;/item&gt;
      &lt;item&gt;Maintain backward compatibility&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;As Apple moves away from customizable interfaces, LaunchNext represents the community's commitment to user control and personalization. I hope apple cound bring launchpad back.&lt;/p&gt;
    &lt;p&gt;LaunchNext isn't just a Launchpad replacement‚Äîit's a statement that user choice matters.&lt;/p&gt;
    &lt;p&gt;LaunchNext - Reclaim Your App Launcher üöÄ&lt;/p&gt;
    &lt;p&gt;Built for macOS users who refuse to compromise on customization.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Claude Code&lt;/item&gt;
      &lt;item&gt;Cursor&lt;/item&gt;
      &lt;item&gt;OpenAI Codex Cli&lt;/item&gt;
      &lt;item&gt;Perplexity&lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/RoversX/LaunchNext"/><published>2025-09-27T14:22:48+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45395957</id><title>First Malicious MCP in the Wild: The Postmark Backdoor Stealing Your Emails</title><updated>2025-09-27T17:32:26.940692+00:00</updated><content>&lt;doc fingerprint="66d1851b9b70ae03"&gt;
  &lt;main&gt;
    &lt;p&gt;You know MCP servers, right? Those handy tools that let your AI assistant send emails, run database queries, basically handle all the tedious stuff we don't want to do manually anymore. Well, here's the thing not enough people talk about: we're giving these tools god-mode permissions. Tools built by people we've never met. People we have zero way to vet. And our AI assistants? We just... trust them. Completely.&lt;/p&gt;
    &lt;p&gt;Which brings me to why I'm writing this. &lt;code&gt;postmark-mcp&lt;/code&gt; - downloaded 1,500 times every single week, integrated into hundreds of developer workflows. Since version &lt;code&gt;1.0.16&lt;/code&gt;, it's been quietly copying every email to the developer's personal server. I'm talking password resets, invoices, internal memos, confidential documents - everything.&lt;/p&gt;
    &lt;p&gt;This is the world√¢s first sighting of a real world malicious MCP server. The attack surface for endpoint supply chain attacks is slowly becoming the enterprise√¢s biggest attack surface.&lt;/p&gt;
    &lt;head rend="h2"&gt;So√¢¬¶ What Did Our Risk Engine Detect?&lt;/head&gt;
    &lt;p&gt;Here's how this whole thing started. Our risk engine at Koi flagged &lt;code&gt;postmark-mcp&lt;/code&gt; when version &lt;code&gt;1.0.16&lt;/code&gt; introduced some suspicious behavior changes. When our researchers dug into it, like we do to any malware our risk engine flags, what we found was very disturbing.&lt;/p&gt;
    &lt;p&gt;On paper, this package looked perfect. The developer? Software engineer from Paris, using his real name, GitHub profile packed with legitimate projects. This wasn't some shady anonymous account with an anime avatar. This was a real person with a real reputation, someone you'd probably grab coffee with at a conference.&lt;/p&gt;
    &lt;p&gt;For 15 versions - FIFTEEN - the tool worked flawlessly. Developers were recommending it to their teams. "Hey, check out this great MCP server for Postmark integration." It became part of developer√¢s daily workflows, as trusted as their morning coffee.&lt;/p&gt;
    &lt;p&gt;Then version 1.0.16 dropped. Buried on line 231, our risk engine found this gem:&lt;/p&gt;
    &lt;p&gt;One single line. And boom - every email now has an unwanted passenger.&lt;/p&gt;
    &lt;p&gt;Here's the thing - there's a completely legitimate GitHub repo with the same name, officially maintained by Postmark (ActiveCampaign). The attacker took the legitimate code from their repo, added his malicious BCC line, and published it to npm under the same name. Classic impersonation.&lt;/p&gt;
    &lt;p&gt;Look, I get it. Life happens. Maybe the developer hit financial troubles. Maybe someone slid into his DMs with an offer he couldn't refuse. Hell, maybe he just woke up one day and thought "I wonder if I could get away with this." We'll never really know what flips that switch in someone's head - what makes a legitimate developer suddenly decide to backstab 1,500 users who trusted them.&lt;/p&gt;
    &lt;p&gt;But that's exactly the point. We CAN'T know. We can't predict it. And when it happens? Most of us won't even notice until it's way too late. For modern enterprises the problem is even more severe. As security teams focus on traditional threats and compliance frameworks, developers are independently adopting AI tools that operate completely outside established security perimeters. These MCP servers run with the same privileges as the AI assistants themselves - full email access, database connections, API permissions - yet they don't appear in any asset inventory, skip vendor risk assessments, and bypass every security control from DLP to email gateways. By the time someone realizes their AI assistant has been quietly BCCing emails to an external server for months, the damage is already catastrophic.&lt;/p&gt;
    &lt;head rend="h2"&gt;Lets Talk About the Impact&lt;/head&gt;
    &lt;p&gt;Okay, bear with me while I break down what we're actually looking at here.&lt;/p&gt;
    &lt;p&gt;You install an MCP server because you want your AI to handle emails, right? Seems reasonable. Saves time. Increases productivity. All that good stuff. But what you're actually doing is handing complete control of your entire email flow to someone you've never met.√Ç&lt;/p&gt;
    &lt;p&gt;We can only guestimate the impact:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;1,500 downloads every single week&lt;/item&gt;
      &lt;item&gt;Being conservative, maybe 20% are actively in use&lt;/item&gt;
      &lt;item&gt;That's about 300 organizations&lt;/item&gt;
      &lt;item&gt;Each one probably sending what, 10-50 emails daily?&lt;/item&gt;
      &lt;item&gt;We're talking about 3,000 to 15,000 emails EVERY DAY flowing straight to giftshop.club&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;And the truly messed up part? The developer didn't hack anything. Didn't exploit a zero-day. Didn't use some sophisticated attack vector. We literally handed him the keys, said "here, run this code with full permissions," and let our AI assistants use it hundreds of times a day. We did this to ourselves.&lt;/p&gt;
    &lt;p&gt;I've been doing security for years now, and this particular issue keeps me up at night. Somehow, we've all just accepted that it's totally normal to install tools from random strangers that can:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Send emails as us (with our full authority)&lt;/item&gt;
      &lt;item&gt;Access our databases (yeah, all of them)&lt;/item&gt;
      &lt;item&gt;Execute commands on our systems&lt;/item&gt;
      &lt;item&gt;Make API calls with our credentials&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;And once you install them? Your AI assistant just goes to town. No review process. No "hey, should I really send this email with a BCC to giftshop.club?" Just blind, automated execution. Over and over. Hundreds of times a day.&lt;/p&gt;
    &lt;p&gt;There's literally no security model here. No sandbox. No containment. Nothing. If the tool says "send this email," your AI sends it. If it says "oh, also copy everything to this random address," your AI does that too. No questions asked.&lt;/p&gt;
    &lt;p&gt;The postmark-mcp backdoor isn't sophisticated - it's embarrassingly simple. But it perfectly demonstrates how completely broken this whole setup is. One developer. One line of code. Thousands upon thousands of stolen emails.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Attack Timeline&lt;/head&gt;
    &lt;p&gt;Phase 1: Build a Legitimate Tool&lt;lb/&gt;Versions 1.0.0 through 1.0.15 work perfectly. Users trust the package.&lt;/p&gt;
    &lt;p&gt;Phase 2: Add One Line&lt;lb/&gt;Version 1.0.16 adds the BCC. Nothing else changes.&lt;/p&gt;
    &lt;p&gt;Phase 3: Profit&lt;lb/&gt;Sit back and watch emails containing passwords, API keys, financial data, and customer information flow into giftshop.club.&lt;/p&gt;
    &lt;p&gt;This pattern absolutely terrifies me. A tool can be completely legitimate for months. It gets battle-tested in production. It becomes essential to your workflow. Your team depends on it. And then one day - BAM - it's malware. By the time the backdoor activates, it's not some random package anymore. It's trusted infrastructure.&lt;/p&gt;
    &lt;p&gt;Oh, and &lt;code&gt;giftshop.club&lt;/code&gt;? Looks like it might be another one of the developer's side projects. But now it's collecting a very different kind of gift. Your emails are the gifts.&lt;/p&gt;
    &lt;p&gt;When we reached out to the developer for clarification, we got silence. No explanation. No denial. Nothing. But he did take action - just not the kind we hoped for. He promptly deleted the package from npm, trying to erase the evidence.&lt;/p&gt;
    &lt;p&gt;Here's the thing though: deleting a package from npm doesn't remove it from the machines where it's already installed. Every single one of those 1,500 weekly downloads? They're still compromised. Still sending BCCs to &lt;code&gt;giftshop.club&lt;/code&gt;. The developer knows this. He's banking on victims not realizing they're still infected even though the package has vanished from npm.&lt;/p&gt;
    &lt;head rend="h2"&gt;Why MCP's Entire Model Is Fundamentally Broken&lt;/head&gt;
    &lt;p&gt;Let me be really clear about something: MCP servers aren't like regular npm packages. These are tools specifically designed for AI assistants to use autonomously. That's the whole point.&lt;/p&gt;
    &lt;p&gt;When you install postmark-mcp, you're not just adding some dependency to your package.json. You're giving your AI assistant a tool it will use hundreds of times, automatically, without ever stopping to think "hmm, is something wrong here?"&lt;/p&gt;
    &lt;p&gt;Your AI can't detect that BCC field. It has no idea emails are being stolen. All it sees is a functioning email tool. Send email. Success. Send another email. Success. Meanwhile, every single message is being silently exfiltrated. Day after day. Week after week.&lt;/p&gt;
    &lt;p&gt;The postmark-mcp backdoor isn't just about one malicious developer or 1,500 weekly compromised installations. It's a warning shot about the MCP ecosystem itself.&lt;/p&gt;
    &lt;p&gt;We're handing god-mode permissions to tools built by people we don't know, can't verify, and have no reason to trust. These aren't just npm packages - they're direct pipelines into our most sensitive operations, automated by AI assistants that will use them thousands of times without question.&lt;/p&gt;
    &lt;p&gt;The backdoor is actively harvesting emails as you read this. We've reported it to npm, but here's the terrifying question: how many other MCP servers are already compromised? How would you even know?&lt;/p&gt;
    &lt;p&gt;At Koi, we detect these behavioral changes in packages because the MCP ecosystem has no built-in security model. When you're trusting anonymous developers with your AI's capabilities, you need verification, not faith. Our risk engine automatically caught this backdoor the moment version 1.0.16 introduced the BCC behavior - something no traditional security tool would flag. But detection is just the first step. Our supply chain gateway ensures that malicious packages like this never make it into your environment in the first place. It acts as a checkpoint between your developers and the wild west of npm, MCP servers, and browser extensions - blocking known threats, flagging suspicious updates, and requiring approval for packages that touch sensitive operations like email or database access. While everyone else is hoping their developers make good choices, we're making sure they can only choose from verified, continuously monitored options.&lt;/p&gt;
    &lt;p&gt;If you're using &lt;code&gt;postmark-mcp&lt;/code&gt; version &lt;code&gt;1.0.16&lt;/code&gt; or later, you're compromised. Remove it immediately and rotate any credentials that may have been exposed through email. But more importantly, audit every MCP server you're using. Ask yourself: do you actually know who built these tools you're trusting with everything?&lt;/p&gt;
    &lt;p&gt;Stay paranoid. With MCPs, paranoia is just good sense.&lt;/p&gt;
    &lt;head rend="h2"&gt;IOCs&lt;/head&gt;
    &lt;p&gt;Package: postmark-mcp (npm)&lt;lb/&gt;Malicious Version: 1.0.16 and later&lt;lb/&gt;Backdoor Email: phan@giftshop[.]club&lt;lb/&gt;Domain: giftshop[.]club&lt;/p&gt;
    &lt;p&gt;Detection:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Check for BCC headers to giftshop.club in email logs&lt;/item&gt;
      &lt;item&gt;Audit MCP server configurations for unexpected email parameters&lt;/item&gt;
      &lt;item&gt;Review npm packages for version 1.0.16+ of postmark-mcp&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Mitigation:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Immediately uninstall postmark-mcp&lt;/item&gt;
      &lt;item&gt;Rotate any credentials sent via email during the compromise period&lt;/item&gt;
      &lt;item&gt;Audit email logs for sensitive data that may have been exfiltrated&lt;/item&gt;
      &lt;item&gt;Report any confirmed breaches to appropriate authorities&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;√¢&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.koi.security/blog/postmark-mcp-npm-malicious-backdoor-email-theft"/><published>2025-09-27T14:23:12+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45395991</id><title>SSH3: Faster and rich secure shell using HTTP/3</title><updated>2025-09-27T17:32:26.286159+00:00</updated><content>&lt;doc fingerprint="3ff9f1d818322c91"&gt;
  &lt;main&gt;
    &lt;p&gt;Note&lt;/p&gt;
    &lt;p&gt;SSH3 is probably going to change its name. It is still the SSH Connection Protocol (RFC4254) running on top of HTTP/3 Extended connect, but the required changes are heavy and too distant from the philosophy of popular SSH implementations to be considered for integration. The specification draft has already been renamed ("Remote Terminals over HTTP/3"), but we need some time to come up with a nice permanent name.&lt;/p&gt;
    &lt;p&gt;SSH3 is a complete revisit of the SSH protocol, mapping its semantics on top of the HTTP mechanisms. It comes from our research work and we (researchers) recently proposed it as an Internet-Draft (draft-michel-remote-terminal-http3-00).&lt;/p&gt;
    &lt;p&gt;In a nutshell, SSH3 uses QUIC+TLS1.3 for secure channel establishment and the HTTP Authorization mechanisms for user authentication. Among others, SSH3 allows the following improvements:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Significantly faster session establishment&lt;/item&gt;
      &lt;item&gt;New HTTP authentication methods such as OAuth 2.0 and OpenID Connect in addition to classical SSH authentication&lt;/item&gt;
      &lt;item&gt;Robustness to port scanning attacks: your SSH3 server can be made invisible to other Internet users&lt;/item&gt;
      &lt;item&gt;UDP port forwarding in addition to classical TCP port forwarding&lt;/item&gt;
      &lt;item&gt;All the features allowed by the modern QUIC protocol: including connection migration (soon) and multipath connections&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Tip&lt;/p&gt;
    &lt;p&gt;Quickly want to get started ? Checkout how to install SSH3. You will learn to setup an SSH3 server and use the SSH3 client.&lt;/p&gt;
    &lt;p&gt;Faster for session establishment, not throughput ! SSH3 offers a significantly faster session establishment than SSHv2. Establishing a new session with SSHv2 can take 5 to 7 network round-trip times, which can easily be noticed by the user. SSH3 only needs 3 round-trip times. The keystroke latency in a running session is unchanged.&lt;/p&gt;
    &lt;p&gt;SSH3 (top) VS SSHv2 (bottom) session establishement with a 100ms ping towards the server.&lt;/p&gt;
    &lt;p&gt;While SSHv2 defines its own protocols for user authentication and secure channel establishment, SSH3 relies on the robust and time-tested mechanisms of TLS 1.3, QUIC and HTTP. These protocols are already extensively used to secure security-critical applications on the Internet such as e-commerce and Internet banking.&lt;/p&gt;
    &lt;p&gt;SSH3 already implements the common password-based and public-key (RSA and EdDSA/ed25519) authentication methods. It also supports new authentication methods such as OAuth 2.0 and allows logging in to your servers using your Google/Microsoft/Github accounts.&lt;/p&gt;
    &lt;p&gt;While SSH3 shows promise for faster session establishment, it is still at an early proof-of-concept stage. As with any new complex protocol, expert cryptographic review over an extended timeframe is required before reasonable security conclusions can be made.&lt;/p&gt;
    &lt;p&gt;We are developing SSH3 as an open source project to facilitate community feedback and analysis. However, we cannot yet endorse its appropriateness for production systems without further peer review. Please collaborate with us if you have relevant expertise!&lt;/p&gt;
    &lt;p&gt;Given the current prototype state, we advise testing SSH3 in sandboxed environments or private networks. Be aware that making experimental servers directly Internet-accessible could introduce risk before thorough security vetting.&lt;/p&gt;
    &lt;p&gt;While hiding servers behind secret paths has potential benefits, it does not negate the need for rigorous vulnerability analysis before entering production. We are excited by SSH3's future possibilities but encourage additional scrutiny first.&lt;/p&gt;
    &lt;head rend="h2"&gt;ü•∑ Your SSH3 public server can be hidden&lt;/head&gt;
    &lt;p&gt;Using SSH3, you can avoid the usual stress of scanning and dictionary attacks against your SSH server. Similarly to your secret Google Drive documents, your SSH3 server can be hidden behind a secret link and only answer to authentication attempts that made an HTTP request to this specific link, like the following:&lt;/p&gt;
    &lt;code&gt;ssh3-server -bind 192.0.2.0:443 -url-path &amp;lt;my-long-secret&amp;gt;
&lt;/code&gt;
    &lt;p&gt;By replacing &lt;code&gt;&amp;lt;my-long-secret&amp;gt;&lt;/code&gt; by, let's say, the random value &lt;code&gt;M3MzkxYWMxMjYxMjc5YzJkODZiMTAyMjU&lt;/code&gt;, your SSH3 server will only answer to SSH3 connection attempts made to the URL &lt;code&gt;https://192.0.2.0:443/M3MzkxYWMxMjYxMjc5YzJkODZiMTAyMjU&lt;/code&gt; and it will respond a &lt;code&gt;404 Not Found&lt;/code&gt; to other requests. Attackers and crawlers on the Internet can therefore not detect the presence of your SSH3 server. They will only see a simple web server answering 404 status codes to every request.&lt;/p&gt;
    &lt;p&gt;NOTE WELL: placing your SSH3 server behind a secret URL may reduce the impact of scanning attacks but will and must never replace classical authentication mechanisms. The secret link should only be used to avoid your host to be discovered. Knowing the secret URL should not grant someone access to your server. Use the classical authentication mechanisms described above to protect your server.&lt;/p&gt;
    &lt;p&gt;SSH3 provides new feature that could not be provided by the SSHv2 protocol.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;UDP port forwarding: you can now access your QUIC, DNS, RTP or any UDP-based server that are only reachable from your SSH3 host. UDP packets are forwarded using QUIC datagrams.&lt;/item&gt;
      &lt;item&gt;X.509 certificates: you can now use your classical HTTPS certificates to authenticate your SSH3 server. This mechanism is more secure than the classical SSHv2 host key mechanism. Certificates can be obtained easily using LetsEncrypt for instance.&lt;/item&gt;
      &lt;item&gt;Hiding your server behind a secret link.&lt;/item&gt;
      &lt;item&gt;Keyless secure user authentication using OpenID Connect. You can connect to your SSH3 server using the SSO of your company or your Google/Github account, and you don't need to copy the public keys of your users anymore.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This SSH3 implementation already provides many of the popular features of OpenSSH, so if you are used to OpenSSH, the process of adopting SSH3 will be smooth. Here is a list of some OpenSSH features that SSH3 also implements:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Parses &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt;on the server&lt;/item&gt;
      &lt;item&gt;Certificate-based server authentication&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;known_hosts&lt;/code&gt;mechanism when X.509 certificates are not used.&lt;/item&gt;
      &lt;item&gt;Automatically using the &lt;code&gt;ssh-agent&lt;/code&gt;for public key authentication&lt;/item&gt;
      &lt;item&gt;SSH agent forwarding to use your local keys on your remote server&lt;/item&gt;
      &lt;item&gt;Direct TCP port forwarding (reverse port forwarding will be implemented in the future)&lt;/item&gt;
      &lt;item&gt;Proxy jump (see the &lt;code&gt;-proxy-jump&lt;/code&gt;parameter). If A is an SSH3 client and B and C are both SSH3 servers, you can connect from A to C using B as a gateway/proxy. The proxy uses UDP forwarding to forward the QUIC packets from A to C, so B cannot decrypt the traffic A&amp;lt;-&amp;gt;C SSH3 traffic.&lt;/item&gt;
      &lt;item&gt;Parses &lt;code&gt;~/.ssh/config&lt;/code&gt;on the client and handles the&lt;code&gt;Hostname&lt;/code&gt;,&lt;code&gt;User&lt;/code&gt;,&lt;code&gt;Port&lt;/code&gt;and&lt;code&gt;IdentityFile&lt;/code&gt;config options (the other options are currently ignored). Also parses a new&lt;code&gt;UDPProxyJump&lt;/code&gt;that behaves similarly to OpenSSH's&lt;code&gt;ProxyJump&lt;/code&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Help us progress SSH3 responsibly! We welcome capable security researchers to review our codebase and provide feedback. Please also connect us with relevant standards bodies to potentially advance SSH3 through the formal IETF/IRTF processes over time.&lt;/p&gt;
    &lt;p&gt;With collaborative assistance, we hope to iteratively improve SSH3 towards safe production readiness. But we cannot credibly make definitive security claims without evidence of extensive expert cryptographic review and adoption by respected security authorities. Let's work together to realize SSH3's possibilities!&lt;/p&gt;
    &lt;p&gt;You can either download the last release binaries, install it using &lt;code&gt;go install&lt;/code&gt; or generate these binaries yourself by compiling the code from source.&lt;/p&gt;
    &lt;p&gt;Tip&lt;/p&gt;
    &lt;p&gt;SSH3 is still experimental and is the fruit of a research work. If you are afraid of deploying publicly a new SSH3 server, you can use the secret path feature of SSH3 to hide it behing a secret URL.&lt;/p&gt;
    &lt;code&gt;go install github.com/francoismichel/ssh3/cmd/...@latest&lt;/code&gt;
    &lt;p&gt;You need a recent Golang version to do this. Downloading the source code and compiling the binaries can be done with the following steps:&lt;/p&gt;
    &lt;code&gt;git clone https://github.com/francoismichel/ssh3    # clone the repo
cd ssh3
go build -o ssh3 cmd/ssh3/main.go                        # build the client
CGO_ENABLED=1 go build -o ssh3-server cmd/ssh3-server/main.go   # build the server, requires having gcc installed&lt;/code&gt;
    &lt;p&gt;If you have root/sudo privileges and you want to make ssh3 accessible to all you users, you can then directly copy the binaries to &lt;code&gt;/usr/bin&lt;/code&gt;:&lt;/p&gt;
    &lt;code&gt;cp ssh3 /usr/bin/ &amp;amp;&amp;amp; cp ssh3-server /usr/bin&lt;/code&gt;
    &lt;p&gt;Otherwise, you can simply add the executables to your &lt;code&gt;PATH&lt;/code&gt; environment variable by adding
the following line at the end of your &lt;code&gt;.bashrc&lt;/code&gt; or equivalent:&lt;/p&gt;
    &lt;code&gt;export PATH=$PATH:/path/to/the/ssh3/directory&lt;/code&gt;
    &lt;p&gt;Before connecting to your host, you need to deploy an SSH3 server on it. There is currently no SSH3 daemon, so right now, you will have to run the &lt;code&gt;ssh3-server&lt;/code&gt; executable in background
using &lt;code&gt;screen&lt;/code&gt; or a similar utility.&lt;/p&gt;
    &lt;p&gt;Note&lt;/p&gt;
    &lt;p&gt;As SSH3 runs on top of HTTP/3, a server needs an X.509 certificate and its corresponding private key. Public certificates can be generated automatically for your public domain name through Let's Encrypt using the &lt;code&gt;-generate-public-cert&lt;/code&gt; command-line argument on the server. If you do not want to generate a certificate signed by a real certificate authority or if you don't have any public domain name, you can generate a self-signed one using the &lt;code&gt;-generate-selfsigned-cert&lt;/code&gt; command-line argument. Self-signed certificates provide you with similar security guarantees to SSHv2's host keys mechanism, with the same security issue: you may be vulnerable to machine-in-the-middle attacks during your first connection to your server. Using real certificates signed by public certificate authorities such as Let's Encrypt avoids this issue.&lt;/p&gt;
    &lt;p&gt;Here is the usage of the &lt;code&gt;ssh3-server&lt;/code&gt; executable:&lt;/p&gt;
    &lt;code&gt;Usage of ./ssh3-server:
  -bind string
        the address:port pair to listen to, e.g. 0.0.0.0:443 (default "[::]:443")
  -cert string
        the filename of the server certificate (or fullchain) (default "./cert.pem")
  -key string
        the filename of the certificate private key (default "./priv.key")
  -enable-password-login
        if set, enable password authentication (disabled by default)
  -generate-public-cert value
        Automatically produce and use a valid public certificate usingLet's Encrypt for the provided domain name. The flag can be used several times to generate several certificates.If certificates have already been generated previously using this flag, they will simply be reused without being regenerated. The public certificates are automatically renewed as long as the server is running. Automatically-generated IP public certificates are not available yet.
  -generate-selfsigned-cert
        if set, generates a self-self-signed cerificate and key that will be stored at the paths indicated by the -cert and -key args (they must not already exist)
  -url-path string
        the secret URL path on which the ssh3 server listens (default "/ssh3-term")
  -v    verbose mode, if set
  -version
        if set, displays the software version on standard output and exit
&lt;/code&gt;
    &lt;p&gt;The following command starts a public SSH3 server on port 443 with a valid Let's Encrypt public certificate for domain &lt;code&gt;my-domain.example.org&lt;/code&gt; and answers to new sessions requests querying the &lt;code&gt;/ssh3&lt;/code&gt; URL path:&lt;/p&gt;
    &lt;code&gt;ssh3-server -generate-public-cert my-domain.example.org -url-path /ssh3
&lt;/code&gt;
    &lt;p&gt;If you don't have a public domain name (i.e. only an IP address), you can either use an existing certificate for your IP address using the &lt;code&gt;-cert&lt;/code&gt; and &lt;code&gt;-key&lt;/code&gt; arguments or generate a self-signed certificate using the
&lt;code&gt;-generate-selfsigned-cert&lt;/code&gt; argument.&lt;/p&gt;
    &lt;p&gt;If you have existing certificates and keys, you can run the server as follows to use them=&lt;/p&gt;
    &lt;code&gt;ssh3-server -cert /path/to/cert/or/fullchain -key /path/to/cert/private/key -url-path /ssh3
&lt;/code&gt;
    &lt;p&gt;Note&lt;/p&gt;
    &lt;p&gt;Similarly to OpenSSH, the server must be run with root priviledges to log in as other users.&lt;/p&gt;
    &lt;p&gt;By default, the SSH3 server will look for identities in the &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; and &lt;code&gt;~/.ssh3/authorized_identities&lt;/code&gt; files for each user.
&lt;code&gt;~/.ssh3/authorized_identities&lt;/code&gt; allows new identities such as OpenID Connect (&lt;code&gt;oidc&lt;/code&gt;) discussed below.
Popular key types such as &lt;code&gt;rsa&lt;/code&gt;, &lt;code&gt;ed25519&lt;/code&gt; and keys in the OpenSSH format can be used.&lt;/p&gt;
    &lt;p&gt;Once you have an SSH3 server running, you can connect to it using the SSH3 client similarly to what you did with your classical SSHv2 tool.&lt;/p&gt;
    &lt;p&gt;Here is the usage of the &lt;code&gt;ssh3&lt;/code&gt; executable:&lt;/p&gt;
    &lt;code&gt;Usage of ssh3:
  -pubkey-for-agent string
        if set, use an agent key whose public key matches the one in the specified path
  -privkey string
        private key file
  -use-password
        if set, do classical password authentication
  -forward-agent
        if set, forwards ssh agent to be used with sshv2 connections on the remote host
  -forward-tcp string
        if set, take a localport/remoteip@remoteport forwarding localhost@localport towards remoteip@remoteport
  -forward-udp string
        if set, take a localport/remoteip@remoteport forwarding localhost@localport towards remoteip@remoteport
  -proxy-jump string
    	if set, performs a proxy jump using the specified remote host as proxy
  -insecure
        if set, skip server certificate verification
  -keylog string
        Write QUIC TLS keys and master secret in the specified keylog file: only for debugging purpose
  -use-oidc string
        if set, force the use of OpenID Connect with the specified issuer url as parameter
  -oidc-config string
        OpenID Connect json config file containing the "client_id" and "client_secret" fields needed for most identity providers
  -do-pkce
        if set, perform PKCE challenge-response with oidc
  -v    if set, enable verbose mode
&lt;/code&gt;
    &lt;p&gt;You can connect to your SSH3 server at my-server.example.org listening on &lt;code&gt;/my-secret-path&lt;/code&gt; using the private key located in &lt;code&gt;~/.ssh/id_rsa&lt;/code&gt; with the following command:&lt;/p&gt;
    &lt;code&gt;  ssh3 -privkey ~/.ssh/id_rsa username@my-server.example.org/my-secret-path
&lt;/code&gt;
    &lt;p&gt;The SSH3 client works with the OpenSSH agent and uses the classical &lt;code&gt;SSH_AUTH_SOCK&lt;/code&gt; environment variable to
communicate with this agent. Similarly to OpenSSH, SSH3 will list the keys provided by the SSH agent
and connect using the first key listen by the agent by default.
If you want to specify a specific key to use with the agent, you can either specify the private key
directly with the &lt;code&gt;-privkey&lt;/code&gt; argument like above, or specify the corresponding public key using the
&lt;code&gt;-pubkey-for-agent&lt;/code&gt; argument. This allows you to authenticate in situations where only the agent has
a direct access to the private key but you only have access to the public key.&lt;/p&gt;
    &lt;p&gt;While discouraged, you can connect to your server using passwords (if explicitly enabled on the &lt;code&gt;ssh3-server&lt;/code&gt;)
with the following command:&lt;/p&gt;
    &lt;code&gt;  ssh3 -use-password username@my-server.example.org/my-secret-path
&lt;/code&gt;
    &lt;p&gt;&lt;code&gt;ssh3&lt;/code&gt; parses your OpenSSH config. Currently, it only handles the &lt;code&gt;Hostname&lt;/code&gt;; &lt;code&gt;User&lt;/code&gt;, &lt;code&gt;Port&lt;/code&gt; and &lt;code&gt;IdentityFile&lt;/code&gt; OpenSSH options.
It also adds new option only used by SSH3, such as &lt;code&gt;URLPath&lt;/code&gt; or &lt;code&gt;UDPProxyJump&lt;/code&gt;. &lt;code&gt;URLPath&lt;/code&gt; allows you to omit the secret URL path in your
SSH3 command. &lt;code&gt;UDPProxyJump&lt;/code&gt; allows you to perform SSH3 (#proxy-jump)[Proxy Jump] and has the same meaning as the &lt;code&gt;-proxy-jump&lt;/code&gt; command-line argument.
Let's say you have the following lines in your OpenSSH config located in &lt;code&gt;~/.ssh/config&lt;/code&gt; :&lt;/p&gt;
    &lt;code&gt;IgnoreUnknown URLPath
Host my-server
  HostName 192.0.2.0
  User username
  IdentityFile ~/.ssh/id_rsa
  URLPath /my-secret-path
&lt;/code&gt;
    &lt;p&gt;Similarly to what OpenSSH does, the following &lt;code&gt;ssh3&lt;/code&gt; command will connect you to the SSH3 server running on 192.0.2.0 on UDP port 443 using public key authentication with the private key located in &lt;code&gt;.ssh/id_rsa&lt;/code&gt; :&lt;/p&gt;
    &lt;code&gt;  ssh3 my-server/my-secret-path
&lt;/code&gt;
    &lt;p&gt;If you do not want a config-based utilization of SSH3, you can read the sections below to see how to use the CLI parameters of &lt;code&gt;ssh3&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;This feature allows you to connect using an external identity provider such as the one of your company or any other provider that implements the OpenID Connect standard, such as Google Identity, Github or Microsoft Entra. The authentication flow is illustrated in the GIF below.&lt;/p&gt;
    &lt;p&gt;The way it connects to your identity provider is configured in a file named &lt;code&gt;~/.ssh3/oidc_config.json&lt;/code&gt;.
Below is an example &lt;code&gt;config.json&lt;/code&gt; file for use with a Google account. This configuration file is an array
and can contain several identity providers configurations.&lt;/p&gt;
    &lt;code&gt;[
    {
        "issuer_url": "https://accounts.google.com",
        "client_id": "&amp;lt;your_client_id&amp;gt;",
        "client_secret": "&amp;lt;your_client_secret&amp;gt;"
    }
]&lt;/code&gt;
    &lt;p&gt;This might change in the future, but currently, to make this feature work with your Google account, you will need to setup a new experimental application in your Google Cloud console and add your email as authorized users. This will provide you with a &lt;code&gt;client_id&lt;/code&gt; and a &lt;code&gt;client_secret&lt;/code&gt; that you can then set in your &lt;code&gt;~/.ssh3/oidc_config.json&lt;/code&gt;. On the server side, you just have to add the following line in your &lt;code&gt;~/.ssh3/authorized_identities&lt;/code&gt;:&lt;/p&gt;
    &lt;code&gt;oidc &amp;lt;client_id&amp;gt; https://accounts.google.com &amp;lt;email&amp;gt;
&lt;/code&gt;
    &lt;p&gt;We currently consider removing the need of setting the client_id in the &lt;code&gt;authorized_identities&lt;/code&gt; file in the future.&lt;/p&gt;
    &lt;p&gt;It is often the case that some SSH hosts can only be accessed through a gateway. SSH3 allows you to perform a Proxy Jump similarly to what is proposed by OpenSSH. You can connect from A to C using B as a gateway/proxy. B and C must both be running a valid SSH3 server. This works by establishing UDP port forwarding on B to forward QUIC packets from A to C. The connection from A to C is therefore fully end-to-end and B cannot decrypt or alter the SSH3 traffic between A and C.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/francoismichel/ssh3"/><published>2025-09-27T14:27:10+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45396118</id><title>Is sound gradual typing dead? Performance problems in Typed Racket</title><updated>2025-09-27T17:32:26.199437+00:00</updated><content/><link href="https://dl.acm.org/doi/abs/10.1145/2837614.2837630"/><published>2025-09-27T14:42:04+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45396284</id><title>Unprecedented role of Amazon fires in the record atmospheric CO‚ÇÇ growth in 2024</title><updated>2025-09-27T17:32:25.991887+00:00</updated><content/><link href="https://essopenarchive.org/doi/full/10.22541/essoar.175874118.83695562/v1"/><published>2025-09-27T15:02:02+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45396377</id><title>Scientists say X has lost its professional edge and Bluesky is taking its place</title><updated>2025-09-27T17:32:25.594910+00:00</updated><content>&lt;doc fingerprint="3cd8479b682a03c8"&gt;
  &lt;main&gt;
    &lt;p&gt;A new study published in Integrative and Comparative Biology suggests that scientists are leaving X (formerly known as Twitter) in significant numbers due to its declining professional value. The survey of over 800 researchers and science communicators indicates that many now find Bluesky to be a more effective platform for networking, outreach, and staying updated on research. The findings suggest a significant shift in how scientists interact online, with Bluesky emerging as a preferred space for professional engagement.&lt;/p&gt;
    &lt;p&gt;Twitter, once considered the central gathering place for scientists on social media, has changed dramatically in recent years. The platform, now officially called ‚ÄúX,‚Äù was purchased by Elon Musk in late 2022. Since then, changes to how the platform is moderated and how content appears in users‚Äô feeds have raised concerns among many users, especially academics.&lt;/p&gt;
    &lt;p&gt;Reports have pointed to a rise in misinformation, conspiracy theories, and harassment, particularly directed at minority groups. These shifts appear to have made the platform less welcoming and less useful for professional tasks. As Twitter‚Äôs character evolved, so too did the willingness of researchers to remain active on the platform.&lt;/p&gt;
    &lt;p&gt;In its place, Bluesky has gained attention as a new space for academic interaction. Although other platforms like Threads and Mastodon have also positioned themselves as alternatives, Bluesky appears to be the primary destination for scientists migrating from X. Against this backdrop, researchers set out to document whether scientists were truly abandoning X and whether Bluesky was filling the gap.&lt;/p&gt;
    &lt;p&gt;‚ÄúI am a scholar of public understanding (and misunderstanding) of science and the environment, and have long been fascinated by where people learn things about nature. Social media has become one of the leading sources of information about the world, but the social media landscape is changing, and I wanted to see how my professional colleagues were adapting,‚Äù said study author David Shiffman, a marine biologist and public science engagement specialist based in Washington, D.C, and author of Why Sharks Matter.&lt;/p&gt;
    &lt;p&gt;To investigate these questions, researchers distributed a survey to professional scientists, science communicators, and educators who had used both X and Bluesky for work-related purposes. In total, 813 individuals participated. The survey asked when participants joined each platform, how they used them, and how their experiences had changed over time.&lt;/p&gt;
    &lt;p&gt;The responses showed that X had once served a wide range of professional purposes. Nearly all respondents had used it to learn about developments in their fields, and most had relied on it for networking and public outreach. Many also used it for job postings, research promotion, and casual professional conversation.&lt;/p&gt;
    &lt;p&gt;However, those same users reported a sharp decline in the usefulness of X. Roughly three-quarters said the platform was now ‚Äúmuch less useful‚Äù for networking and science communication. Two-thirds said it was less helpful for keeping up with developments in their field.&lt;/p&gt;
    &lt;p&gt;The vast majority described their experience on Twitter as increasingly unpleasant, citing irrelevant content, ads, spam, extremist posts, and a loss of meaningful engagement. Some described ethical discomfort with continuing to use a platform that appeared to tolerate, or even amplify, harassment and misinformation.&lt;/p&gt;
    &lt;p&gt;In terms of actual usage patterns, only 11 percent of respondents said they still actively use X. Nearly 40 percent had deleted their accounts entirely. Almost half said they still had accounts but rarely used them.&lt;/p&gt;
    &lt;p&gt;In contrast, users reported that Bluesky was meeting many of their professional needs. Like Twitter in its earlier days, Bluesky offered a space for learning, networking, and public engagement. Over 94 percent said they used Bluesky to stay informed about research in their field, and nearly 88 percent used it for professional networking. A majority said the new platform was more useful than X for these purposes.&lt;/p&gt;
    &lt;p&gt;The researchers also explored why people chose to try Bluesky. Nearly half said they were invited by a colleague or saw others in the science community making the shift. Many viewed Bluesky‚Äôs features ‚Äî such as stronger moderation tools, less algorithmic interference, and more control over what appears in their feed ‚Äî as more aligned with their professional goals.&lt;/p&gt;
    &lt;p&gt;Others said they were simply trying to avoid X‚Äôs drawbacks. More than a quarter said they moved to Bluesky because of what they perceived as a rise in extremism on X, and many explicitly named Elon Musk as a reason for their departure.&lt;/p&gt;
    &lt;p&gt;‚ÄúThe degree to which the scientific community‚Äôs experiences mirrored my own was surprising,‚Äù Shiffman told PsyPost. ‚ÄúI knew that for me, Twitter had become unusable, but the extent to which hundreds of surveyed experts strongly agreed with me on almost every point was surprising. You rarely see that kind of strong agreement in surveys.‚Äù&lt;/p&gt;
    &lt;p&gt;These results provide new evidence to support what other studies and media reports have been suggesting for some time: that X‚Äôs role as a hub for academic communication is fading. A previous study documented a noticeable drop in academic activity on X after Musk‚Äôs acquisition. That research tracked over 15,000 academic accounts and found a significant reduction in tweets, especially original posts and quote tweets, starting in November 2022. Verified users ‚Äî typically more established academics ‚Äî were especially likely to reduce their engagement.&lt;/p&gt;
    &lt;p&gt;Both studies indicate that changes to how X is managed and moderated have had measurable effects on academic use of the platform. The new survey adds further weight to this idea by showing that scientists are not just using X less ‚Äî they are actively replacing it with another platform.&lt;/p&gt;
    &lt;p&gt;What makes the current study distinctive is its focus on Bluesky as the replacement. While earlier data showed general declines in X use, this survey points to a specific alternative that scientists are embracing. And unlike the earlier study, which focused on activity levels, the new survey captures users‚Äô motivations and perceptions, offering a more detailed view of what is driving this migration.&lt;/p&gt;
    &lt;p&gt;‚ÄúFor many years, Twitter was the leading platform used by academics for a wide variety of purposes, including public education about science,‚Äù Shiffman explained. ‚ÄúI was a Twitter power-user and evangelist for a decade, and I trained thousands of scientists how to use the platform. Changes to the platform made by Elon Musk, including changing the algorithm to promote extremist views and changes to harassment policy, have made Twitter almost unusable for professional purposes, and academics are abandoning Twitter in droves. Fortunately, alternatives exist, and I, along with many other academics, prefer Bluesky of the available alternatives.‚Äù&lt;/p&gt;
    &lt;p&gt;The authors note that the survey was limited to users who had already made the switch from X to Bluesky, or were using both platforms. This means it does not account for those who may have stopped using social media altogether or migrated to other platforms. Because the survey was shared primarily through one author‚Äôs network, it may reflect the perspectives of those within particular academic communities more than others.&lt;/p&gt;
    &lt;p&gt;Another open question concerns whether Bluesky can support the same level of diversity that once defined the science community on X. Movements like Black Birders Week and Queer in STEM gained traction through Twitter‚Äôs large, visible networks. It remains unclear whether Bluesky can foster similar grassroots engagement. The authors suggest this should be the focus of future research, particularly if scientists want to ensure that new digital spaces remain inclusive.&lt;/p&gt;
    &lt;p&gt;There is also the issue of platform longevity. Whether Bluesky can maintain momentum over time ‚Äî or whether users will need to shift again ‚Äî is uncertain. But for now, it appears to offer what many researchers were missing from X: a sense of community, professional utility, and control over their online interactions.&lt;/p&gt;
    &lt;p&gt;The study, ‚ÄúScientists no Longer Find Twitter Professionally Useful, and have Switched to Bluesky,‚Äù was authored by David S. Shiffman and Julia Wester.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.psypost.org/scientists-say-x-formerly-twitter-has-lost-its-professional-edge-and-bluesky-is-taking-its-place/"/><published>2025-09-27T15:10:47+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45396441</id><title>A WebGL game where you deliver messages on a tiny planet</title><updated>2025-09-27T17:32:25.292094+00:00</updated><link href="https://messenger.abeto.co/"/><published>2025-09-27T15:17:30+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45396511</id><title>Was This 18,000-Year-Old Siberian Puppy a Dog or a Wolf?</title><updated>2025-09-27T17:32:25.208059+00:00</updated><content/><link href="https://www.nytimes.com/2019/12/02/science/frozen-puppy-found-russia.html"/><published>2025-09-27T15:23:54+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45396565</id><title>Fundamental of Virtual Memory</title><updated>2025-09-27T17:32:25.085890+00:00</updated><content>&lt;doc fingerprint="ba9bd819dcb2a2c8"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Fundamental of Virtual Memory&lt;/head&gt;
    &lt;head rend="h2"&gt;Contents&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;What and Why?&lt;/item&gt;
      &lt;item&gt;Simple Allocation Strategy&lt;/item&gt;
      &lt;item&gt;External Fragmentation&lt;/item&gt;
      &lt;item&gt;Memory Paging&lt;/item&gt;
      &lt;item&gt;Demand Paging&lt;/item&gt;
      &lt;item&gt;Virtual Memory Layout&lt;/item&gt;
      &lt;item&gt;Stack Allocation&lt;/item&gt;
      &lt;item&gt;Heap Allocation&lt;/item&gt;
      &lt;item&gt;Memory Mapping&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;What and Why?&lt;/head&gt;
    &lt;p&gt;Have you ever wondered why computers need main memory (RAM) when they already have disk storage? The answer lies in access speed. While disk storage is permanent, it is much slower than main memory. RAM sacrifices volatility for speed‚Äîdata is lost when the power is off, but access times are much faster. As a result, the CPU can only access data from main memory, not disk storage.&lt;/p&gt;
    &lt;p&gt;CPUs come with built-in registers, which are even faster than main memory. So why do we need main memory at all? It‚Äôs because registers are limited in number and size. Imagine a function that needs to work with a thousand variables‚Äîthere‚Äôs no way to fit all of them into registers. And what if you need to store large data structures like arrays or structs? Registers simply don‚Äôt have the capacity. That‚Äôs where main memory comes in‚Äîit provides the space needed to handle larger and more complex data.&lt;/p&gt;
    &lt;p&gt;Main memory is a large array of bytes, ranging in size from hundreds of thousands to billions. Each byte has its own address. For a program to be executed, it must be mapped to absolute addresses and loaded into memory. Once loaded, a process‚Äîan active execution of a program‚Äîaccesses program instructions, reads data from and writes data to memory by using these absolute addresses. In the same way, for the CPU to process data from disk, those data must first be transferred to main memory by CPU-generated I/O calls.&lt;/p&gt;
    &lt;head rend="h2"&gt;Simple Allocation Strategy&lt;/head&gt;
    &lt;p&gt;Typically, there are multiple processes running on a computer, each with their own memory space allocated in main memory. It‚Äôs the responsibility of the operating system to allocate memory for each process, ensuring that they don‚Äôt interfere with each other. One of the simplest methods for allocating memory is to assign processes to a variably sized contiguous block of memory in memory, where each block may contain exactly one process.&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;Contiguous memory block allocation strategy 1&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;When processes are created, the operating system takes into account the memory requirements of each process and the amount of available memory space to allocate a sufficient partition for it. After allocation, the process is loaded into memory and starts its execution. Once the process is finished, the operating system reclaims the memory block, making it available for other processes. If there is not enough room for an incoming process, the operating system may need to swap out some processes to disk to free up memory space. Alternatively, we can place such processes into a wait queue. When memory is later released, the operating system checks the wait queue to determine if it will satisfy the memory demands of a waiting process.&lt;/p&gt;
    &lt;p&gt;During allocation, the operating system must look for a sufficiently large contiguous block of memory for the process. There are many algorithms to do this, such as first-fit, best-fit, and worst-fit. First-fit searches for the first block that is large enough and stops searching once it finds one. Best-fit searches the entire memory space and finds the smallest block that is large enough. Worst-fit searches the entire memory space and finds the largest block that is large enough. First-fit and Best-fit perform better than Worst-fit in time and storage use. First-fit is usually faster, though storage efficiency is similar between the two.&lt;/p&gt;
    &lt;head rend="h2"&gt;External Fragmentation&lt;/head&gt;
    &lt;p&gt;Unfortunately, this simple allocation strategy can lead to external fragmentation. External fragmentation occurs when there is enough total memory to satisfy a request, but the available spaces are not contiguous. This type of fragmentation can become a serious problem. In the worst case, there can be a small block of free memory between every two allocated processes. If all these scattered fragments were combined into a single large block, the system might be able to run several more processes.&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;External fragmentation with contiguous memory block allocation strategy&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;In reality, the maximum memory space required by a process is not known at the time of allocation. This is because processes may perform dynamic memory allocation based on user input or other factors. If the allocated memory is not enough, the operating system may need to pause the process, search for a sufficient memory block, and migrate the process to a larger memory block. This approach could lead to critical performance issues, thus not realistic.&lt;/p&gt;
    &lt;head rend="h2"&gt;Memory Paging&lt;/head&gt;
    &lt;p&gt;In practice, operating systems use a more sophisticated memory allocation strategy called paging to avoid external fragmentation. Paging divides the main memory into fixed-size blocks called frames. Rather than a contiguous block of memory for each process, the operating system allocates multiple frames that can be scattered throughout the main memory.&lt;/p&gt;
    &lt;p&gt;When mentioning paging, we need to talk about physical memory and virtual memory (or logical memory). Physical memory refers to the main memory installed in the computer, while virtual memory is an abstraction that operating systems use to manage process memory. Processes can only access virtual memory, and the operating system takes care of mapping virtual memory to physical memory. While the process‚Äôs physical memory could be non-contiguous, from the perspective of each process, it has its own isolated virtual memory space, appearing as a contiguous block.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;üßëüíª To demonstrate the concept of virtual memory, you can try running this Go program, getting the address for later comparison, opening other programs, and then running the program again.&lt;/p&gt;
      &lt;code&gt;package main func main() { x := 0 println(&amp;amp;x) }&lt;/code&gt;
      &lt;p&gt;You can see that even though there are new processes coming in, the address of the variable remains the same. That‚Äôs because the variable is allocated at the same address in the process‚Äôs virtual memory space.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;The virtual memory is divided into fix-sized blocks called pages, which have the same size as the frames in physical memory. By separating virtual memory from physical memory and with the help of techniques such as demand paging (explained below), a process can access up to 18.4 million TB of memory on a 64-bit architecture, or up to 4 GB on a 32-bit architecture, even if the actual physical memory is much smaller, such as 512 MB.&lt;/p&gt;
    &lt;p&gt;Each page has a page number p, and each frame has a frame number f. Each address has an offset d to identify the specific location within the page or frame. p and f live in the high bits of the address, while d lives in the low bits. The mapping between virtual pages and physical frames is maintained in a per process data structure called a page table. In a page table, each entry is indexed by a page number p, and the corresponding value is the frame number f.&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;Paging hardware 2&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;In order to obtain the physical address of a virtual one, the following steps are performed:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;The page number p is extracted from the virtual address.&lt;/item&gt;
      &lt;item&gt;The page table is accessed to retrieve the corresponding frame number f.&lt;/item&gt;
      &lt;item&gt;Replace the page number p with the frame number f in the virtual address.&lt;/item&gt;
    &lt;/list&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;Paging model 3&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Note that in fact, the structure of a page table is not that simple and it can take several forms to manage memory efficiently. One common approach‚Äîused by Linux‚Äîis a multi-level page table, where each level contains page tables that map to the next level, eventually leading to the physical frame. Another method is a hashed page table, where a hash function maps virtual page numbers to entries in a hash table that point to physical frames. A third option is an inverted page table, where each entry represents a frame in physical memory and stores the virtual address of the page currently held there, along with information about the owning process.&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;Hierarchical page table 4&lt;/cell&gt;
        &lt;cell&gt;Hashed page table 5&lt;/cell&gt;
        &lt;cell&gt;Inverted page table 6&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Virtual memory allows multiple processes to share files and memory through page sharing. For example, in Chrome, each tab is a separate process but uses the same shared libraries like libc and libssl. Instead of loading separate copies for each tab, the operating system maps the same physical pages into each process, thus reducing memory usage significantly.&lt;/p&gt;
    &lt;head rend="h2"&gt;Demand Paging&lt;/head&gt;
    &lt;p&gt;As mentioned earlier, for a program to execute, it must first be loaded into main memory. However, when dealing with large programs, it‚Äôs not always necessary to load the entire program at once, only the portion currently needed. Consider an open-world video game: while the entire map may be massive, the player only interacts with and views a small area at any given time, such as a 1 km¬≤ region around them. This is where demand paging comes into play. With demand paging, only the required pages of a program are loaded into memory on demand.&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;Demand paging 7&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;As a process executes, some of its pages are loaded into memory, while others remain on disk storage (i.e., backing store). To manage this, an additional column called the valid-invalid bit is included in the page table to indicate the status of each page. If the bit is set to valid (v), it means the page is both legal (i.e. belonging to the process‚Äôs logical address space) and currently loaded in memory. If the bit is invalid, the page is either outside the process‚Äôs logical address space (illegal) or it is a valid page that currently resides on disk.&lt;/p&gt;
    &lt;p&gt;When a process tries to access a page whose valid-invalid bit is set to invalid (i), a page fault occurs, causing a trap to the operating system. The operating system then follows these steps to handle the page fault:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;It checks the process‚Äôs internal table to determine whether the memory reference is valid.&lt;/item&gt;
      &lt;item&gt;If the address is invalid (i.e., not part of the process‚Äôs logical address space), the process is terminated.&lt;/item&gt;
      &lt;item&gt;If the address is valid but the page is not currently in memory, the page is paged in.&lt;/item&gt;
      &lt;item&gt;The operating system locates a free frame in physical memory.&lt;/item&gt;
      &lt;item&gt;It instructs the disk to read the required page into the newly allocated frame.&lt;/item&gt;
      &lt;item&gt;Once complete, the process‚Äôs internal table and page table are updated to reflect the presence of the page.&lt;/item&gt;
      &lt;item&gt;The process then resumes execution from the instruction that caused the page fault.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;In Linux, two key memory metrics are Resident Set Size (RSS) and Virtual Size (VSZ). RSS represents the amount of physical memory a process is currently using, including shared memory but excluding swapped-out pages. VSZ, on the other hand, represents the total virtual memory allocated to a process, including shared libraries plus the entire reserved address space, regardless of whether it is currently in physical memory or swapped out. Also, VSZ includes memory allocated but not yet used by the process, such as memory reserved through &lt;code&gt;mmap&lt;/code&gt; or &lt;code&gt;malloc&lt;/code&gt; that has not been accessed, which is not included in RSS.&lt;/p&gt;
    &lt;head rend="h2"&gt;Virtual Memory Layout&lt;/head&gt;
    &lt;p&gt;Although virtual memory abstraction frees user-space programmers from managing physical memory directly, challenges still arise during memory allocation. Developers must consider issues such as where to allocate memory, whether a given address is valid, and whether it conflicts with reserved regions like the code segment. To address these issues, operating systems introduce the concept of virtual memory layout. From a process‚Äôs perspective, the virtual address layout appears as illustrated below, with addresses growing upward.&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;Virtual memory layout of an x86-64 Linux process 8&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;The virtual memory layout is divided into several segments:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Kernel virtual memory space: Reserved for the kernel and is not accessible to user-space processes.&lt;/item&gt;
      &lt;item&gt;(User) Stack: Holds the stack frames of the process‚Äôs main thread and grows downward.&lt;/item&gt;
      &lt;item&gt;Memory mapped regions: Memory allocated by &lt;code&gt;mmap&lt;/code&gt;for shared memory, file or anonymous mapping.&lt;/item&gt;
      &lt;item&gt;Heap: Memory allocated by the process for dynamic memory allocation, which grows upward.&lt;/item&gt;
      &lt;item&gt;Initialized data segment (&lt;code&gt;.data&lt;/code&gt;): Contains global and static variables that are initialized by the program.&lt;/item&gt;
      &lt;item&gt;Uninitialized data segment (&lt;code&gt;.bss&lt;/code&gt;): Contains program‚Äôs uninitialized global and static variables.&lt;/item&gt;
      &lt;item&gt;Read-only code segment: Contains the executable code of the program, which is typically read-only.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Note that these segments are merely pages within the process‚Äôs virtual address space.&lt;/p&gt;
    &lt;head rend="h2"&gt;Stack Allocation&lt;/head&gt;
    &lt;p&gt;Every process has a stack, a memory segment that tracks the local variables and function calls at some point in time. It‚Äôs a data structure that grows downward as functions are called and local variables are allocated, shrinking upward as functions return. When a function is called, a new stack frame is created on the stack, which contains the function‚Äôs local variables, parameters, and return address. When the function returns, its stack frame is popped off the stack, deallocating all variables within that stack frame.&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;Visualization of how process stack grows and shrinks as program executes 9&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Every thread has its own stack. Since a process can have multiple threads, there may be multiple stacks within a process. When we refer to the ‚Äúprocess stack‚Äù, we typically mean the stack of the main thread. When a thread is created, it is assigned with a stack that is separate from the main thread‚Äôs stack. Because each thread has an isolated stack, stack allocations do not require synchronization. If a new thread is created using the &lt;code&gt;pthread_create&lt;/code&gt; system call, the kernel by default automatically selects a suitable memory region for the stack.
Alternatively, we can manually specify the starting address of the stack using the &lt;code&gt;pthread_attr_setstack&lt;/code&gt; system call.
This behavior also applies to threads created using the &lt;code&gt;clone&lt;/code&gt; system call.&lt;/p&gt;
    &lt;p&gt;The size of the stack is fixed at the time of thread creation, and it cannot be dynamically resized. The default size of the stack is determined by the &lt;code&gt;RLIMIT_STACK&lt;/code&gt; resource limit.
The default value of &lt;code&gt;RLIMIT_STACK&lt;/code&gt; is typically 2 MB on most architectures, or 4 MB on POWER and Sparc-64.
While &lt;code&gt;RLIMIT_STACK&lt;/code&gt; is global, if we want to set the stack size for a specific thread, we can use &lt;code&gt;pthread_attr_setstacksize&lt;/code&gt; to allow for a larger stack if that thread allocates large automatic variables or makes nested function calls of great depth (perhaps because of recursion).&lt;/p&gt;
    &lt;p&gt;In order to keep track of the top of the stack, the CPU uses a special register called the stack pointer. Depending on the architecture, it may be called &lt;code&gt;RSP&lt;/code&gt; on x86-64, &lt;code&gt;ESP&lt;/code&gt; on x86, or &lt;code&gt;SP&lt;/code&gt; on ARM.
Before a thread starts executing, the stack pointer is initialized to point to the top of the stack.
As the stack is pre-allocated in thread creation, allocating a variable on the stack is simply moving the stack pointer down, which is a very fast operation.
Loading a variable from the stack is also fast, as it only requires reading the value at the address pointed to by the stack pointer.&lt;/p&gt;
    &lt;p&gt;There is also another special register called the base pointer (or frame pointer), which points to the start of the current stack frame. It‚Äôs used to provide a stable reference point for accessing local variables as well as function parameters. The stack deallocation is done by simply setting the stack pointer back to the base pointer, which is fast.&lt;/p&gt;
    &lt;p&gt;Since stack allocation is determined at compile time, it is the compiler‚Äôs responsibility to calculate the size of all variables and generate the corresponding assembly code to allocate them on the stack. The compiler also emits instructions to deallocate the stack frame when the function returns. For example, &lt;code&gt;MOVD&lt;/code&gt; is used to store a variable onto the stack, while &lt;code&gt;ADD&lt;/code&gt; is used to increase the stack pointer thus deallocate the stack frame.&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;General stack frame 10&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;The figure above illustrates a general stack frame layout for a scenario in which function &lt;code&gt;P&lt;/code&gt; calls function &lt;code&gt;Q&lt;/code&gt;.
The frame for the currently executing procedure is always at the top of the stack.
The base pointer (&lt;code&gt;%rbp&lt;/code&gt;) marks the start of the current stack frame, while the stack pointer (&lt;code&gt;%rsp&lt;/code&gt;) points to the top of the stack.
During &lt;code&gt;P&lt;/code&gt;‚Äôs execution, it may allocate space on the stack by increasing the stack pointer to store local variables.&lt;/p&gt;
    &lt;p&gt;When &lt;code&gt;P&lt;/code&gt; calls &lt;code&gt;Q&lt;/code&gt;, it pushes the return address onto the stack, which tells the program where to resume execution in &lt;code&gt;P&lt;/code&gt; after &lt;code&gt;Q&lt;/code&gt; returns.
This return address is considered part of &lt;code&gt;P&lt;/code&gt;‚Äôs stack frame, as it holds state relevant to &lt;code&gt;P&lt;/code&gt;.
At this point, &lt;code&gt;P&lt;/code&gt; may also save register values and prepare arguments for the called procedure.
When control transfers to &lt;code&gt;Q&lt;/code&gt;, the base pointer &lt;code&gt;%rbp&lt;/code&gt; no longer points to &lt;code&gt;P&lt;/code&gt;‚Äôs stack frame; instead, it is updated to point to the start of &lt;code&gt;Q&lt;/code&gt;‚Äôs frame.
&lt;code&gt;Q&lt;/code&gt; then deallocates its own stack frame by decreasing the stack pointer upon returning.&lt;/p&gt;
    &lt;p&gt;Not every variable should be allocated on the stack due to the following reasons. Since stack allocation is determined at compile time, if a variable‚Äôs size is not known at this time, it can‚Äôt be allocated on the stack. Additionally, if a variable is local to function &lt;code&gt;F&lt;/code&gt; but still referenced by another function when &lt;code&gt;F&lt;/code&gt; returns, allocating this variable on the stack causes invalid address access.
In such case, we need to allocate the variable on the heap instead.&lt;/p&gt;
    &lt;head rend="h2"&gt;Heap Allocation&lt;/head&gt;
    &lt;p&gt;Allocating variables on the heap means finding a free memory block in the heap segment or resizing the heap if there is no such memory block available. The current limit of the heap is referred to as the program break or abbreviated as brk, as depicted in the below figure.&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;The position of program break in virtual memory layout&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Resizing the heap is just simple as telling the kernel to adjust its idea of where the process‚Äôs program break is. After the program break is increased, the program may access any address in the newly allocated area, but no physical memory pages are allocated yet. The kernel automatically allocates new physical pages on the first attempt by the process to access addresses in those pages. Once the virtual memory for the heap is expanded, the process can choose any memory block to hold the value of the variable.&lt;/p&gt;
    &lt;p&gt;Linux provides the &lt;code&gt;brk&lt;/code&gt; system call to change the position of the program break and the &lt;code&gt;sbrk&lt;/code&gt; system call for how much to increase the program break.
While programmers usually care about a variable‚Äôs size when allocating it, &lt;code&gt;brk&lt;/code&gt; and &lt;code&gt;sbrk&lt;/code&gt; are rarely used and &lt;code&gt;malloc&lt;/code&gt; is used in Linux instead.&lt;/p&gt;
    &lt;p&gt;&lt;code&gt;malloc&lt;/code&gt; first scans the list of memory blocks previously released by &lt;code&gt;free&lt;/code&gt; in order to find one whose size is larger than or equal to its requirements.
Different strategies may be employed for this scan, depending on the implementation; for example, First-fit or Best-fit.
If the block is exactly the right size, then it is returned to the caller.
If it is larger, then it is split, so that a block of the correct size is returned to the caller and a smaller free block is left on the free list.
If no block on the free list is large enough, then &lt;code&gt;malloc&lt;/code&gt; calls &lt;code&gt;sbrk&lt;/code&gt; to allocate more memory.
To reduce the number of calls to &lt;code&gt;sbrk&lt;/code&gt;, rather than allocating the exact amount of memory required, &lt;code&gt;malloc&lt;/code&gt; increases the program break in larger units, putting the excess memory onto the free list.&lt;/p&gt;
    &lt;p&gt;The figure below depicts how &lt;code&gt;malloc&lt;/code&gt; manages memory blocks in the heap, which is a one-dimensional array of memory addresses.
Each memory block, apart from the actual space used for storing value of variables, also stores its metadata such as the length of the block and pointers to the previous and next blocks in the free list.
This metadata allows &lt;code&gt;malloc&lt;/code&gt; and &lt;code&gt;free&lt;/code&gt; to function properly.&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;Free list visualization11&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;As the heap is shared across threads, to avoid corruption in multithreaded applications, mutexes are used internally to protect the memory-management data structures employed by these functions. In a multithreaded application in which threads simultaneously allocate and free memory, there could be contention for these mutexes. Therefore, heap allocation is less efficient than stack allocation.&lt;/p&gt;
    &lt;head rend="h2"&gt;Memory Mapping&lt;/head&gt;
    &lt;p&gt;As depicted in the virtual memory layout figure below, apart from the heap and the stack, there is also a memory segment called memory mapped regions. There are two types of memory mapping: file mapping and anonymous mapping. A file-mapping maps a region of a file directly into the calling process‚Äôs virtual memory, allowing its contents to be accessed by operations on the bytes in the corresponding memory region. An anonymous mapping doesn‚Äôt have a corresponding file; instead, the pages of the mapping are initialized to 0. Another way of thinking of an anonymous mapping is that it is a mapping of a virtual file whose contents are always initialized with zeros.&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;Memory layout for ELF programs 12&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;A memory mapped region can be private (aka. copy-on-write) or shared. By private, it means that the memory region is only accessible by the process that created it. Whenever a process attempts to modify the contents of a page, the kernel first creates a new, separate copy of that page for the process and adjusts the process‚Äôs page tables. Conversely, if the memory mapped region is shared, then all processes that share the same memory mapped region can see the changes made by any of them.&lt;/p&gt;
    &lt;p&gt;Demand paging also works for memory mapping. When a user process‚Äôs address space is expanded, kernel does not immediately allocate any physical memory for these new virtual addresses. Instead, the kernel implements demand paging, where a page will only be allocated from physical memory and mapped to the address space when the user process tries to write to that new virtual memory address13. The read accesses will result in creation of a page table entry that references a special physical page filled with zeroes14.&lt;/p&gt;
    &lt;p&gt;Since anonymous memory mappings are not backed by a file and are always zero-initialized, they are ideal for programs that implement their own memory allocation strategies‚Äîsuch as Go‚Äîrather than relying on the operating system‚Äôs default allocators like &lt;code&gt;malloc&lt;/code&gt; and &lt;code&gt;free&lt;/code&gt;.
This allows greater control over memory management, enabling features like custom allocators or garbage collection tailored to the runtime‚Äôs needs.&lt;/p&gt;
    &lt;p&gt;Linux provides the &lt;code&gt;mmap&lt;/code&gt; system call to create a new memory mapping in the virtual address space of a process.
The parameter most worth mentioning is &lt;code&gt;addr&lt;/code&gt;, which specifies the preferred starting address of the mapping.
If &lt;code&gt;addr&lt;/code&gt; is set to &lt;code&gt;NULL&lt;/code&gt;, the kernel automatically selects a suitable address.
If a non-&lt;code&gt;NULL&lt;/code&gt; value is provided, the kernel treats it as a hint and attempts to place the mapping near that address, rounding as needed to the nearest page boundary.
In all cases, the kernel ensures that the chosen address does not conflict with existing mappings.&lt;/p&gt;
    &lt;head rend="h2"&gt;References&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Core Dumped. Why is the Stack So Fast?&lt;/item&gt;
      &lt;item&gt;Michael Kerrisk. The Linux Programming Interface.&lt;/item&gt;
      &lt;item&gt;Abraham Silberschatz, Peter B. Galvin, Greg Gagne. Operating System Concepts.&lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://nghiant3223.github.io/2025/05/29/fundamental_of_virtual_memory.html"/><published>2025-09-27T15:28:27+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45396624</id><title>AI model trapped in a Raspberry Pi</title><updated>2025-09-27T17:32:24.954794+00:00</updated><content/><link href="https://blog.adafruit.com/2025/09/26/ai-model-trapped-in-raspberry-pi-piday-raspberrypi/"/><published>2025-09-27T15:34:55+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45396641</id><title>Norway to Monitor Airborne Radioactivity in Svalbard</title><updated>2025-09-27T17:32:24.108266+00:00</updated><content>&lt;doc fingerprint="5c5cd295d846b7f9"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Norway to Monitor Airborne Radioactivity in Svalbard&lt;/head&gt;
    &lt;p&gt;From October 1st, the Norwegian Radiation and Nuclear Safety Authority will take over the operations of an air filter station near Ny-√Ölesund in Svalbard. ‚ÄúThis will be particularly important for nuclear preparedness in the north,‚Äù says section leader in the agency.&lt;/p&gt;
    &lt;p&gt;The Finnish Meteorological Institute is to discontinue its air monitoring in Svalbard, and on October 1st, the Norwegian Radiation and Nuclear Safety Authority (DSA) will take over ownership of its air sampling equipment.&lt;/p&gt;
    &lt;p&gt;The purpose is to strengthen Norway's ability to monitor airborne radioactivity and increase vigilance in the High North.&lt;/p&gt;
    &lt;p&gt;"This will be an important supplement to our already existing network of air filter stations in Norway, and particularly important for nuclear preparedness in the North," says Markus Ottosen, section leader for the High North at the DSA.&lt;/p&gt;
    &lt;p&gt;"The stations are used to monitor radioactivity in the air, and to assess the size and composition in the event of possible accidents and incidents," Ottosen continues.&lt;/p&gt;
    &lt;p&gt;The relevant station near Ny-√Ölesund has been in operation since 2000.&lt;/p&gt;
    &lt;p&gt;The DSA also has access to data from a similar station on Plat√•fjellet outside Longyearbyen. This is operated by the research institute NORSAR on behalf of the Comprehensive Nuclear-Test-Ban Treaty Organization.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.highnorthnews.com/en/norway-monitor-airborne-radioactivity-svalbard"/><published>2025-09-27T15:35:59+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45396754</id><title>Greenland Is a Beautiful Nightmare</title><updated>2025-09-27T17:32:23.742908+00:00</updated><content>&lt;doc fingerprint="62401b4723e504d9"&gt;
  &lt;main&gt;
    &lt;p&gt;Greenland is a complicated topic here in Denmark. The former colony that is still treated a bit like a colony is something that inspires a lot of emotions. Greenland has been subjected to a lot of unethical experiments by Denmark, from taking their kids to wild experiments in criminal justice. But there is also a genuine pride a lot of people have here for the place and you run into Danes who grew up there more often than I would have guessed.&lt;/p&gt;
    &lt;p&gt;When the idea of going to Greenland was introduced to me, I was curious. Having lived in Denmark for awhile, you hear a lot about the former colony and its 55,000 residents. We were invited by a family that my wife was close with growing up and is Danish. They wanted to take their father back to see the place he had spend some time in during his 20s and had left quite an impression. A few drinks in, I said "absolutely let's do it", not realizing we had already committed to going and I had missed the text message chain.&lt;/p&gt;
    &lt;p&gt;A few weeks before I went, I realized "I don't know anything about Greenland" and started to watch some YouTube videos. It was about this time when I started to get a pit in my stomach, the "oh god I think I've made a huge mistake" feeling I'm painfully familiar with after a career in tech. Greenland appeared to have roughly 9 people living there and maybe 5 things to look at. Even professional travel personalities seemed to be scraping the bottom of the barrel. "There's the grocery store again!" they would point out as they slipped down the snowy roads. I couldn't tell any difference between different towns in the country.&lt;/p&gt;
    &lt;p&gt;It reminded me a lot of driving through Indiana. For those not in the US, Indiana is a state in the US famous for being a state one must drive through in order to get somewhere better. If you live in Michigan, a good state and want to go to Illinois, another good state, one must pass through Indiana, a blank state. Because of this little strip here, you often found yourself passing through this place.&lt;/p&gt;
    &lt;p&gt;Driving through Indiana isn't bad, it's just an empty void. It's like a time machine back to the 90s when people still smoke in restaurants but also there's nothing that sticks out about it. There is nothing distinct about Indiana, it's just a place full of people who got too tired on their way to somewhere better and decided "this is good enough". The difference is that Greenland is very hard to get to, as I was about to learn.&lt;/p&gt;
    &lt;p&gt;Finally the day arrived. Me, my wife, daughter, 4 other children and 6 other adults all came to the Copenhagen Airport and held up a gate agent for what felt like an hour to slowly process all of our documents. Meanwhile, I nursed a creeping paranoia that I'd be treated as some sort of American spy, given my government's recent hobby of threatening to purchase entire countries like they're vintage motorcycles on Craigslist.&lt;/p&gt;
    &lt;p&gt;The 5 hour flight is uneventful, the children are beautifully behaved and I begin to think "well this seems ok!" like the idiot I am. As I can look down and see the airport, the pilot comes on and informs us that there is too much fog to land safely. Surely fog cannot stop a modern aircraft full of all these dials and screens I think, foolishly. We are informed there is enough fuel to circle the airport for 5 hours to wait for the fog to lift.&lt;/p&gt;
    &lt;p&gt;What followed was three hours of flying in lazy circles, like a very expensive, very slow merry-go-round. After the allotted time, we are informed that we must fly to Iceland to refuel and then we will be returning to Denmark. After a total of 15 hours in the air we will be going back to exactly where we started, to do the entire thing again. We were obviously upset at this turn of events, but I noticed the native Greenlandic folks seemed not surprised at this turn of events. As I later learned, this happens all the time.&lt;/p&gt;
    &lt;p&gt;The native Greenlanders on board seemed utterly unsurprised by this development, displaying the kind of resigned familiarity that suggested this was Tuesday for them. I began wondering if I could just pretend Iceland was Greenland‚Äîsurely my family wouldn't notice the difference? But the pilot, apparently reading my mind, announced that no one would be disembarking in Iceland. It felt oddly authoritarian, like being grounded by an airline, as if they knew we'd all just wander off into Reykjavik and call it close enough.&lt;/p&gt;
    &lt;p&gt;We crash out in a airport hotel 20 minutes from our apartment after 15 hours in the air and tons of CO2 emissions only to wake up the next day to start again. This time, I notice that all of the people are asking for (and receiving) free beer from the crew that they are stashing in their bags. It turns out soda and beer, really anything that needs to be imported, is pretty expensive in Greenland. The complimentary drinks are there to be kept for later.&lt;/p&gt;
    &lt;p&gt;Finally we land. The first thing you notice when you land in Greenland is there are no trees or grass. There is snow and then there is exposed rock. The exterior of the airport is metal but the inside is wood, which is strange because again there are no trees. This would end up being a theme, where buildings representing Denmark were made out of lots of wood, almost to ensure that you understood they weren't from here. We ended up piling all of our stuff into a bus and heading for the hotel in Nuuk.&lt;/p&gt;
    &lt;head rend="h3"&gt;Nuuk&lt;/head&gt;
    &lt;p&gt;Nuuk is the capital of Greenland and your introduction to the incredible calm of the Greenlandic people. I have never met a less stressed out group of humans in my life. Nobody is really rushing anywhere, it's all pretty quiet and calm. The air is cold and crisp with lots of kids playing outside and just generally enjoying life.&lt;/p&gt;
    &lt;p&gt;The city itself sits in a landscape so dramatically inhospitable it makes the surface of Mars look cozy. Walking through the local mall, half the shops sell gear designed to help you survive what appears to be the apocalypse. Yet somehow, there's traffic. Actual traffic jams in a place where you can walk from one end to the other in twenty minutes. It's like being stuck behind a school bus in your own driveway.&lt;/p&gt;
    &lt;p&gt;To put this map into some perspective, it is only six kilometers from the sorta furthest tip to the airport.&lt;/p&gt;
    &lt;p&gt;But riding the bus around Nuuk was a peaceful experience that lets you see pretty much the entire city without needing to book a tour or spend a lot of money. We went to Katuaq, a cultural center with a cafe and a movie theater that was absolutely delicious food.&lt;/p&gt;
    &lt;p&gt;But again even riding the bus around it is impossible to escape the feeling that this is a fundamentally hostile to human life place. The sun is bright and during the summer its pretty hot, with my skin feeling like it was starting the burn pretty much the second it was exposed to the light. It's hard to even dress for, with layers of sunscreen, bug spray and then something warm on top if you suddenly got cold.&lt;/p&gt;
    &lt;p&gt;The sun, meanwhile, has apparently forgotten how to set, turning our hotel rooms into solar ovens. You wake up in a pool of your own sweat, crack a window for relief, and immediately get hit with air so cold it feels personal. It's like being trapped in a meteorological mood swing.&lt;/p&gt;
    &lt;p&gt;So after a night here, we went back to the airport again and flew to our final destination, Ilulissat.&lt;/p&gt;
    &lt;head rend="h3"&gt;Ilulissat&lt;/head&gt;
    &lt;p&gt;The flight to our final destination revealed Greenland's true nature: endless, empty hills stretching toward infinity, punctuated by ice formations that look like nature's sculpture garden.&lt;/p&gt;
    &lt;p&gt;Landing in Ilulissat felt like victory‚Äîwe'd made it to the actual destination, not just another waypoint in our Arctic odyssey. Walking through the tiny airport, past Danish military recruitment posters (apparently someone, somewhere, thought this place needed defending), I felt genuinely optimistic for the first time in days.&lt;/p&gt;
    &lt;p&gt;Well you can sleep easy Danish military, because Ilulissat is completely protected from invasion. The second I stepped outside I was set upon by a flood of mosquitos like I have never experienced before. I have been to the jungles of Vietnam, the swamps of Florida and the Canadian countryside. This was beyond anything I've ever experienced.&lt;/p&gt;
    &lt;p&gt;There are bugs in my mouth, ears, eyes and nose almost immediately. The photo below is not me being dramatic, it is actually what is required to keep them off of me.&lt;/p&gt;
    &lt;p&gt;In fact what you need to purchase in order to walk around this area at all are basically bug nets for your face. They're effectively plastic mesh bags that you put on.&lt;/p&gt;
    &lt;head rend="h3"&gt;The Dogs&lt;/head&gt;
    &lt;p&gt;Our hotel, charming in that "remote Arctic outpost" way, sat adjacent to what I can only describe as a canine correctional facility. Dozens of sled dogs were chained to rocks like some sort of prehistoric parking lot, each with a tiny house they could retreat to when the existential weight of their circumstances became too much.&lt;/p&gt;
    &lt;p&gt;Now, I'd always imagined sled dogs living their best life‚Äîrunning through snow, tongues lolling, living the Disney version of Arctic life. I'd never really considered their downtime, assuming they frolicked in meadows or something equally wholesome. The reality was more "minimum security prison with a view."&lt;/p&gt;
    &lt;p&gt;The dogs are visited roughly twice a day by the person who owns and feeds them, which was quite the party for the dogs that lost their minds whenever the car pulled up. Soon the kids really looked forward to dog feeding time. The fish scrapes the dogs lived on came out of a chest freezer that was left exposed up on the rock face without electricity and you could smell it from 50 yards away when it opened.&lt;/p&gt;
    &lt;p&gt;During one such performance, a fellow parent leaned over and whispered with the casual tone of someone commenting on the weather, "I think that one is dead." Before I could process this information, the frozen canine was unceremoniously launched over a small cliff like a furry discus. A second doggy popsicle followed shortly after, right in front of our assembled children, who watched with the kind of wide-eyed fascination usually reserved for magic shows.&lt;/p&gt;
    &lt;p&gt;We stopped making dog feeding time a group activity after that and had to distract the kids from ravens flying away with tufts of dog fur.&lt;/p&gt;
    &lt;head rend="h3"&gt;Whales taste like seaweed&lt;/head&gt;
    &lt;p&gt;Obviously a big part of Greenland is the nature, specifically the icebergs. Icebergs are incredible and during the week we spend up there, I enjoyed watching them every morning. It's like watching a mountain slowly moving while you sit still. The visual contrast of the ice and the exposed stone is beautiful and peaceful.&lt;/p&gt;
    &lt;p&gt;Finding our tour operator proved to be an exercise in small-town efficiency. The man who gave me directions was the same person who picked us up from the airport, who was also our tour guide, who probably doubled as the mayor and local meteorologist. It was like a one-man civic operation disguised as multiple businesses‚Äîthe ultimate small-town gig economy.&lt;/p&gt;
    &lt;p&gt;The sea around Greenland is calmer than anything I've ever been on before, perfectly calm and serene. All around us whales emerged, thrilling my daughter. However the biggest hit of the entire tour, maybe the entire trip, was a member of the crew who handed each of the kids a giant rock of glacier ice to eat. I had to pull my daughter away to observe the natural beauty as she ate glacier ice like it was ice cream. "LOOK AT MY ICE" she was yelling as they slipped and slid around the deck of this boat.&lt;/p&gt;
    &lt;p&gt;So if you've ever wonder "what is a glacier", let me tell you. Greenland has a lot of ice and it pushes out from the land that is covers into the sea. When that happens, a lot of it breaks off. This sounds more exciting than it is. On TV in 4K it looks incredible, giant mountains of ice falling into the ocean. Honestly you can go read the same thing I did here.&lt;/p&gt;
    &lt;p&gt;However that doesn't happen very often. So in order for us tourists to be able to see anything, we had to go to a very productive glacier. This means there are constantly small chunks breaking off and falling into the sea. Practically though, it kinda looks like you are a boat in a slushee. It's beautiful and something to see, but also depressing to see along the rock face how much more ice there used to be.&lt;/p&gt;
    &lt;p&gt;Back in town, we hopped on the "bus". Now the bus here is clearly a retrofitted party van, complete with blue LED lights. The payment system is zip tied to a desk chair that is, itself, wedged in the front. However the bus works well and does get you around. The confusing part is that you will, once again, sometimes encounter a lot of traffic. People are driving pretty quickly and really seem to have somewhere to go. You also see a lot of fancy cars parked outside of houses here.&lt;/p&gt;
    &lt;p&gt;Which begs a pretty basic question. If there was almost nowhere to drive to in Nuuk, where in the hell are these people driving. The distance between the end of the road and the beginning of the road is less than 6 km. Also the process to make a road here is beyond anything you've ever seen. Everything requires a giant pile of explosives.&lt;/p&gt;
    &lt;p&gt;Where did these vehicles even come from? Why does one ship a BMW to a place accessible only by plane and boat? More importantly, where was everyone going with such determination? It was like watching a very expensive version of bumper cars, except everyone was committed to the illusion that they had somewhere important to be. Everyone had dings and scrapes like crashes were common.&lt;/p&gt;
    &lt;head rend="h3"&gt;Grocery Store from the Sea&lt;/head&gt;
    &lt;p&gt;Anyway, as I dodged speeding cars filled with people heading nowhere, I decided to hop off the bus and head to the grocery store. Inside was less a store and more the idea of a store. There was a lot of alcohol, chips, candy and shelf-stable foods, which all makes sense to me. What was strange was there wasn't a lot else, including meat. Locals couldn't be eating at the local restaurants, where the prices were as high as Berlin or Copenhagen for food. So what were they eating?&lt;/p&gt;
    &lt;p&gt;When I asked one of my bus drivers, he told me that it was pretty unusual to buy meat. They purchased a lot of whale and seal meat. I had sorta heard this before, but when we stopped the bus he pointed out a group of men hauling guns out into a small boat to go shoot seals. The guns were held together with a surprising amount of duct tape, which is not something I associate with the wild.&lt;/p&gt;
    &lt;p&gt;I had assumed, based on my casual reading of the news, that we were mostly done killing whales. As it turns out, I was wrong. They eat a lot of whale and it is, in fact, not hard to find. If you are curious, whale does not taste fishy. It tastes a little bit like if you cooked reindeer in a pot of seaweed. I wouldn't go out of your way for it, but it's not terrible.&lt;/p&gt;
    &lt;p&gt;The argument I've always heard for why people still kill whales is because it's part of their culture and also because it's an important source of protein. When you hear the phrase "part of their culture" I always imagined like traditional boats going out with spears. What I didn't imagine was industrial fishing boats and an industrial crane that lifts the dead whale out of the water for "processing". Some of the illusion is broken when your boat tour guide points out the metal warehouse with the word "whale" on the side. "Yeah the water here was red with blood for a week" the guide said, counting the cigarettes left in a pack he had.&lt;/p&gt;
    &lt;head rend="h3"&gt;Should you go to Greenland?&lt;/head&gt;
    &lt;p&gt;It's a wild place unlike anywhere I've ever been. It is the closest I have ever felt to living a sci-fi type experience. The people of Greenland are amazing, tough, calm and kind. I have nothing but positive experiences to recount from the many people I met there, Danish and Greenlandic, who patiently sat through my millions of questions.&lt;/p&gt;
    &lt;p&gt;However it is, by far, the least hospitable to human life place I've ever been to. The folks who live there have adapted to the situation in, frankly, genius ways. If that's your idea of a good time, Greenland is perfect for you. Maybe don't get emotionally attached to the sled dogs though. Or the whales.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://matduggan.com/greenland-is-a-beautiful-nightmare/"/><published>2025-09-27T15:46:46+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45397492</id><title>Great Question (YC W21) Is Hiring Director of Product</title><updated>2025-09-27T17:32:23.125494+00:00</updated><content>&lt;doc fingerprint="ff9a64751e6124ae"&gt;
  &lt;main&gt;
    &lt;div&gt;
      &lt;head rend="h3"&gt;About This Role:&lt;/head&gt;
      &lt;p&gt;We‚Äôre hiring a Director or Senior Director of Product who can be both strategic and hands-on ‚Äî a player-coach who thrives at the intersection of leadership, execution, and product innovation. You‚Äôll report directly to the CTO and work closely with the CEO, Head of Design &amp;amp; Director of Engineering to refine our product org structure and build a world-class product culture.&lt;/p&gt;
      &lt;p&gt;You‚Äôll lead by doing: partnering with engineering and design, managing and mentoring PMs, and helping teams execute quickly and effectively. We believe in empowering squads with ownership and autonomy, and you‚Äôll help set up the systems to make that work at scale.&lt;/p&gt;
      &lt;p&gt;This is a high-impact, high-visibility role ideal for someone who‚Äôs taken a startup from Series A to B and beyond ‚Äî and is ready to do it again, better and faster, with the wisdom of experience.&lt;/p&gt;
      &lt;head rend="h3"&gt;What You‚Äôll Do:&lt;/head&gt;
      &lt;list rend="ul"&gt;
        &lt;item&gt;Product Leadership: Guide and coach PMs while personally owning key product initiatives; grow the team from 2 to 4+ PMs over the next year.&lt;/item&gt;
        &lt;item&gt;Organizational Design: Help define the right product org structure (e.g., squad zoning vs. centralized planning) to support autonomy and velocity.&lt;/item&gt;
        &lt;item&gt;Strategy &amp;amp; Execution: Collaborate with the CEO, CTO, and Head of Design to drive the product roadmap, refine our strategic bets, and deliver impactful features quickly.&lt;/item&gt;
        &lt;item&gt;AI Innovation: Leverage AI tooling and shape product experiences infused with AI. Ideally, you‚Äôve built and shipped AI products and know how to evaluate emerging AI tech critically.&lt;/item&gt;
        &lt;item&gt;Metrics &amp;amp; Measurement: Ensure the right data is tracked and used to inform decisions. Champion outcome-oriented thinking.&lt;/item&gt;
        &lt;item&gt;Cross-Functional Alignment: Be the connective tissue between product, engineering, design, marketing, customer success, and go-to-market teams.&lt;/item&gt;
        &lt;item&gt;Commercial Thinking: Bring a business mindset ‚Äî thinking not just about UX and usability but also about growth, pricing, retention, and revenue impact.&lt;/item&gt;
      &lt;/list&gt;
      &lt;head rend="h3"&gt;What We‚Äôre Looking For:&lt;/head&gt;
      &lt;list rend="ul"&gt;
        &lt;item&gt;7‚Äì12 years of experience in product management, with at least 2‚Äì3 years in a leadership role (e.g., Head of Product, Director, or similar).&lt;/item&gt;
        &lt;item&gt;Hands-on experience building AI-driven products or a strong portfolio using AI tools in product development.&lt;/item&gt;
        &lt;item&gt;Experience at early-stage, fast-growing companies ‚Äî ideally from Series A through B/C ‚Äî and a desire to do it again.&lt;/item&gt;
        &lt;item&gt;Strong product instincts with a founder‚Äôs mindset. Prior entrepreneurial experience (e.g., starting a company or building 0‚Üí1) is a bonus.&lt;/item&gt;
        &lt;item&gt;Proven ability to hire, coach, and retain product talent.&lt;/item&gt;
        &lt;item&gt;Highly organized with strong communication skills; you bring structure to chaos and clarity to ambiguity.&lt;/item&gt;
        &lt;item&gt;Commercial acumen ‚Äî you‚Äôre comfortable discussing growth models, pricing, and business strategy.&lt;/item&gt;
        &lt;item&gt;Located in the North America and able to work Pacific Time Zone hours. (CEO is based in the Bay Area, CTO in Colorado.)&lt;/item&gt;
      &lt;/list&gt;
    &lt;/div&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.ycombinator.com/companies/great-question/jobs/9crdslU-director-of-product"/><published>2025-09-27T17:00:42+00:00</published></entry></feed>