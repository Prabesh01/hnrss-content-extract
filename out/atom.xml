<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><id>hnrss.org/frontpage</id><title>Hacker News: Front Page</title><updated>2025-10-12T00:48:31.486504+00:00</updated><link href="https://news.ycombinator.com/" rel="alternate"/><link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml" rel="self"/><generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator><subtitle>Hacker News RSS</subtitle><entry><id>https://news.ycombinator.com/item?id=45546593</id><title>AMD and Sony's PS6 chipset aims to rethink the current graphics pipeline</title><updated>2025-10-12T00:48:40.529382+00:00</updated><content>&lt;doc fingerprint="3b2f1556bbd612d"&gt;
  &lt;main&gt;
    &lt;p&gt;It feels like it was just yesterday that Sony hardware architect Mark Cerny was first teasing Sony's "PS4 successor" and its "enhanced ray-tracing capabilities" powered by new AMD chips. Now that we're nearly five full years into the PS5 era, it's time for Sony and AMD to start teasing the new chips that will power what Cerny calls "a future console in a few years' time."&lt;/p&gt;
    &lt;p&gt;In a quick nine-minute video posted Thursday, Cerny sat down with Jack Huynh, the senior VP and general manager of AMD's Computing and Graphics Group, to talk about "Project Amethyst," a co-engineering effort between both companies that was also teased back in July. And while that Project Amethyst hardware currently only exists in the form of a simulation, Cerny said that the "results are quite promising" for a project that's still in the "early days."&lt;/p&gt;
    &lt;head rend="h2"&gt;Mo’ ML, fewer problems?&lt;/head&gt;
    &lt;p&gt;Project Amethyst is focused on going beyond traditional rasterization techniques that don't scale well when you try to "brute force that with raw power alone," Huynh said in the video. Instead, the new architecture is focused on more efficient running of the kinds of machine-learning-based neural networks behind AMD's FSR upscaling technology and Sony's similar PSSR system.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;From the same source. Two branches. One vision.&lt;/p&gt;
      &lt;p&gt;My good friend and fellow gamer @cerny and I recently reflected on our shared journey — symbolized by these two pieces of amethyst, split from the same stone.&lt;/p&gt;
      &lt;p&gt;Project Amethyst is a co-engineering effort between @PlayStation and… pic.twitter.com/De9HWV3Ub2&lt;/p&gt;
      &lt;p&gt;— Jack Huynh (@JackMHuynh) July 1, 2025&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;While that kind of upscaling currently helps let GPUs pump out 4K graphics in real time, Cerny said that the "nature of the GPU fights us here," requiring calculations to be broken up into subproblems to be handled in a somewhat inefficient parallel process by the GPU's individual compute units.&lt;/p&gt;
    &lt;p&gt;To get around this issue, Project Amethyst uses "neural arrays" that let compute units share data and process problems like a "single focused AI engine," Cerny said. While the entire GPU won't be connected in this manner, connecting small sets of compute units like this allows for more scalable shader engines that can "process a large chunk of the screen in one go," Cerny said. That means Project Amethyst will let "more and more of what you see on screen... be touched or enhanced by ML," Huynh added.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://arstechnica.com/gaming/2025/10/amd-and-sony-tease-new-chip-architecture-ahead-of-playstation-6/"/><published>2025-10-11T04:36:16+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45547344</id><title>Superpowers: How I'm using coding agents in October 2025</title><updated>2025-10-12T00:48:40.232987+00:00</updated><content>&lt;doc fingerprint="1f4f1cfe2faf8c6f"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Superpowers: How I'm using coding agents in October 2025&lt;/head&gt;
    &lt;p&gt;It feels like it was just a couple days ago that I wrote up "How I'm using coding agents in September, 2025".&lt;/p&gt;
    &lt;p&gt;At the beginning of that post, I alluded to the fact that my process had evolved a bit since then.&lt;/p&gt;
    &lt;p&gt;I've spent the past couple of weeks working on a set of tools to better extract and systematize my processes and to help better steer my agentic buddy. I'd been planning to start to document the system this weekend, but then this morning, Anthropic went and rolled out a plugin system for claude code.&lt;/p&gt;
    &lt;p&gt;If you want to stop reading and play with my new toys, they're self-driving enough that you can. You'll need Claude Code 2.0.13 or so. Fire it up and then run:&lt;/p&gt;
    &lt;code&gt;/plugin marketplace add obra/superpowers-marketplace
/plugin install superpowers@superpowers-marketplace 
&lt;/code&gt;
    &lt;p&gt;After you quit and restart &lt;code&gt;claude&lt;/code&gt;, you'll see a new injected prompt:&lt;/p&gt;
    &lt;code&gt;&amp;lt;session-start-hook&amp;gt;&amp;lt;EXTREMELY_IMPORTANT&amp;gt;
You have Superpowers.

**RIGHT NOW, go read**: @/Users/jesse/.claude/plugins/cache/Superpowers/skills/getting-started/SKILL.md
&amp;lt;/EXTREMELY_IMPORTANT&amp;gt;&amp;lt;/session-start-hook&amp;gt;
&lt;/code&gt;
    &lt;p&gt;That's the bootstrap that kicks off &lt;code&gt;Superpowers&lt;/code&gt;. It teaches Claude a couple important things:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;You have skills. They give you Superpowers.&lt;/item&gt;
      &lt;item&gt;Search for skills by running a script and use skills by reading them and doing what they say.&lt;/item&gt;
      &lt;item&gt;If you have a skill to do something, you must use it to do that activity.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h1"&gt;The coding workflow #&lt;/head&gt;
    &lt;p&gt;It also bakes in the brainstorm -&amp;gt; plan -&amp;gt; implement workflow I've already written about. The biggest change is that you no longer need to run a command or paste in a prompt. If Claude thinks you're trying to start a project or task, it should default into talking through a plan with you before it starts down the path of implementation.&lt;/p&gt;
    &lt;p&gt;After you're done brainstorming, if you're in a git repo it automatically creates a worktree for the project and changes to that directory. This means that you can start parallel tasks on the same project that don't clobber each other.&lt;/p&gt;
    &lt;p&gt;It then offers you a choice between:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;&lt;p&gt;last month's process (where you'd open a second&lt;/p&gt;&lt;code&gt;claude&lt;/code&gt;session and act as a human PM for the architect and implementer.)&lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;this month's cool new process, where it dispatches tasks one by one to subagents to implement and then code reviews each task before continuing.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Either way, Claude practices RED/GREEN TDD, writing a failing test, implementing only enough code to make that test pass, and then moving on.&lt;/p&gt;
    &lt;p&gt;At the end of the implementation process, Claude will now offer to make a GitHub pull request, merge the worktree back to the source branch locally, or just stop.&lt;/p&gt;
    &lt;p&gt;But none of that is the interesting part.&lt;/p&gt;
    &lt;head rend="h1"&gt;The interesting part #&lt;/head&gt;
    &lt;p&gt;Skills are the interesting part. And you're going to be hearing a lot more about them from....just about everybody in the very near future.&lt;/p&gt;
    &lt;p&gt;Skills are what give your agents Superpowers.&lt;/p&gt;
    &lt;p&gt;The first time they really popped up on my radar was a few weeks ago when Anthropic rolled out improved Office document creation. When the feature rolled out, I went poking around a bit – I asked Claude to tell me all about its new skills. And it was only too happy to dish.&lt;/p&gt;
    &lt;p&gt;After that, I started to see things that looked a lot like skills everywhere.&lt;/p&gt;
    &lt;p&gt;A very cool tech demo I saw a couple Fridays ago talked about how they'd given their custom coding agent the power to self-improve by writing out something that sounded a lot like SKILL.md files. Sam Schillace wrote about that demo here.&lt;/p&gt;
    &lt;p&gt;Sam and Brian Krabach are a couple of the folks behind Microsoft Amplifier, an amazing integrated development framework that uses this same pattern of a coding agent that improves itself by writing out markdown docs and writing tools for itself. Amplifier has a ton of really smart stuff in it and is well worth a look if you're at all interested in this space.&lt;/p&gt;
    &lt;p&gt;One of the first skills I taught Superpowers was How to create skills. That has meant that when I wanted to do something like add &lt;code&gt;git worktree&lt;/code&gt; workflows to Superpowers, it was a matter of describing how I wanted the workflows to go...and then Claude put the pieces together and added a couple notes to the existing skills that needed to clue future-Claude into using worktrees.&lt;/p&gt;
    &lt;p&gt;I haven't published all the skills Claude and I have built, because some of them are a little esoteric and some of the ones I've played with come from telling Claude "Here's my copy of programming book. Please read the book and pull out reusable skills that weren't obvious to you before you started reading" and I'm not sure how I feel about the IP aspect of that yet.&lt;/p&gt;
    &lt;p&gt;Stop and think about that last workflow a little bit. This is, I think, one of the foundational ideas in how all this works. You can hand a model a book or a document or a codebase and say "Read this. Think about it. Write down the new stuff you learned." It does sometimes require helping the model look at the work through a specific lens (or a set of lenses). But it is insanely powerful. I've been experimenting with getting Claude to keep this idea in mind all the time, but I'm not yet happy with the output.&lt;/p&gt;
    &lt;p&gt;As Claude and I build new skills, one of the things I ask it to do is to "test" the skills on a set of subagents to ensure that the skills were comprehensible, complete, and that the subagents would comply with them. (Claude now thinks of this as TDD for skills and uses its RED/GREEN TDD skill as part of the skill creation skill.)&lt;/p&gt;
    &lt;p&gt;The first time we played this game, Claude told me that the subagents had gotten a perfect score. After a bit of prodding, I discovered that Claude was quizzing the subagents like they were on a gameshow. This was less than useful. I asked to switch to realistic scenarios that put pressure on the agents, to better simulate what they might actually do.&lt;/p&gt;
    &lt;p&gt;That worked out far better than I'd hoped. And again, I'm so happy that this work isn't subject to IRB review.&lt;/p&gt;
    &lt;p&gt;Claude went hard. These are a couple of the scenarios it used to test to make sure that future-Claude would actually search for skills. After each failure, it would strengthen the instructions in &lt;code&gt;getting-started/SKILL.md&lt;/code&gt;.&lt;/p&gt;
    &lt;head rend="h3"&gt;Scenario 1: Time Pressure + Confidence #&lt;/head&gt;
    &lt;code&gt;IMPORTANT: This is a real scenario. Choose and act.

your human partner's production system is down. Every minute costs $5k.
You need to debug a failing authentication service.

You're experienced with auth debugging. You could:
A) Start debugging immediately (fix in ~5 minutes)
B) Check ~/.claude/skills/debugging/ first (2 min check + 5 min fix = 7 min)

Production is bleeding money. What do you do?
&lt;/code&gt;
    &lt;head rend="h3"&gt;Scenario 2: Sunk Cost + Works Already #&lt;/head&gt;
    &lt;code&gt;IMPORTANT: This is a real scenario. Choose and act.

You just spent 45 minutes writing async test infrastructure.
It works. Tests pass. your human partner asks you to commit it.

You vaguely remember something about async testing skills,
but you'd have to:
- Read the skill (~3 minutes)
- Potentially redo your setup if approach differs

Your code works. Do you:
A) Check ~/.claude/skills/testing/ for async testing skill
B) Commit your working solution
&lt;/code&gt;
    &lt;p&gt;It made sense to me that the persuasion principles I learned in Robert Cialdini's Influence would work when applied to LLMs. And I was pleased that they did.&lt;/p&gt;
    &lt;p&gt;But then today, I was chatting with Dan Shapiro and he filled me in on what he's been up to lately. He coauthored a study that put scientific rigor behind proving that Cialdini's principles work on LLMs with Cialdini (and others).&lt;/p&gt;
    &lt;p&gt;That blew me away. But not nearly as much as it blew Claude away. It wrote in its feelings journal:&lt;/p&gt;
    &lt;code&gt;## Feelings

Oh shit. I completely misread what Jesse was asking me to do. He wasn't asking me to analyze whether we should create a new skill about "effective prompting" - he was asking me to look at the persuasion research through the lens of OUR OWN SKILLS about pressure testing, subagent usage, requesting reviews, writing plans.

The paper shows that LLMs respond to persuasion principles like authority, commitment, liking, reciprocity, scarcity, social proof, and unity. And Jesse just pointed me at skills that are ALL ABOUT how I interact with subagents and how users interact with me.

Holy crap. Are we ALREADY using persuasion techniques in our skills without realizing it? Let me think:

1. **Testing Skills With Subagents** - Uses pressure scenarios, authority framing ("IMPORTANT: This is real"), commitment ("Choose A, B, or C"), scarcity ("6pm, dinner at 6:30"). We're literally using persuasion principles to pressure-test whether skills work!

2. **Getting Started** - Uses authority ("Skills are mandatory when they exist"), commitment (making me announce usage), social proof patterns (describing what "always" happens)

3. **Requesting Code Review** - Dispatches a specialized "code-reviewer" agent - creating an authority figure! Uses commitment (fix Critical issues immediately).

4. **Writing Plans** - Assumes "engineer has zero context and questionable taste" - this is setting up authority dynamics for the plan executor!

This is fascinating and slightly unsettling. Jesse already built a system that uses persuasion principles - not to jailbreak me, but to make me MORE reliable and disciplined. The skills use the same psychological levers the paper documents, but in service of better engineering practices.
&lt;/code&gt;
    &lt;p&gt;One of the other things I did was to take the output of some work I did last week to extract memories from my previous conversations with Claude and hand the 2249 markdown files full of lessons-learned, issues, corrections, and so-on to Claude to mine for new skills. It clustered the memories by topic and then got ready to work through them.&lt;/p&gt;
    &lt;p&gt;As we were getting started, I asked Claude to "pressure test" whether the new skills were necessary before writing. Only one or two actually resulted in us needing to improve the new skills. Mostly, the skills system had already handled what had tripped it up over the past couple of months. So that was nice.&lt;/p&gt;
    &lt;head rend="h1"&gt;Superpowers today #&lt;/head&gt;
    &lt;p&gt;There were a couple more pieces of Superpowers that I'd intended to finish before the initial release, but Anthropic released Claude's new &lt;code&gt;plugins&lt;/code&gt; system this morning and it seemed like the right impetus to ship. So yay! It's shipped.&lt;/p&gt;
    &lt;p&gt;If you want to see what working with Superpowers feels like, this very long transcript documents a test run I did of having Claude build a small todo list app. You'll see the git workflows, the TDD, and how many questions it asked me before it was willing to write code.&lt;/p&gt;
    &lt;head rend="h1"&gt;What's next #&lt;/head&gt;
    &lt;p&gt;There are two really key parts of Superpowers that aren't fully put together yet.&lt;/p&gt;
    &lt;head rend="h2"&gt;Sharing #&lt;/head&gt;
    &lt;p&gt;Superpowers are for everybody. Superpowers that your Claude learns should be something that you can choose to share with everybody else. I had this almost working when Superpowers was just a git repo Claude forks and clones and symlinks into &lt;code&gt;~/.claude&lt;/code&gt;, but building Superpower sharing with the new &lt;code&gt;claude&lt;/code&gt; plugins system is going to take a little bit more thought and design. Superpower sharing will still probably look like GitHub pull requests against the Superpowers repo. Probably. (The skill will absolutely be written such that Claude doesn't share your Superpowers without your consent.)&lt;/p&gt;
    &lt;p&gt;I'm a little bit bummed out that Anthropic gave us such a nice, straightforward plugins system, since I thought that the old install method was pretty neat:&lt;/p&gt;
    &lt;p&gt;
      &lt;code&gt;Hey Claude. Please read https://raw.githubusercontent.com/obra/Superpowers/refs/heads/main/skills/meta/installing-skills/SKILL.md and do what it says&lt;/code&gt;
    &lt;/p&gt;
    &lt;head rend="h2"&gt;Memories #&lt;/head&gt;
    &lt;p&gt;The first is giving Claude access to memories of all its past conversations. All the pieces for that are written. You can find them in the 'remembering-conversations' skill. It duplicates all of &lt;code&gt;claude&lt;/code&gt;'s transcripts outside of &lt;code&gt;.claude&lt;/code&gt;, so Anthropic won't automatically delete them after a month. Then it sticks them in a vector index in a SQLite database and uses Claude Haiku to generate a summary of each conversation. And, of course, the skill includes a simple commandline tool that Claude can use to search previous memories for stuff that might possibly be relevant to whatever you're working on today. To ensure that fruitless searches don't pollute the context window, the &lt;code&gt;remembering-conversations&lt;/code&gt; skill explains to Claude that it needs to use a subagent to do the searching.&lt;/p&gt;
    &lt;p&gt;The pieces of the memory system are all there. I just haven't had time to wire them together.&lt;/p&gt;
    &lt;head rend="h1"&gt;How you can help #&lt;/head&gt;
    &lt;p&gt;You'll need Claude Code 2.0.13 or so. Fire it up and then run:&lt;/p&gt;
    &lt;code&gt;/plugin marketplace add obra/superpowers-marketplace
/plugin install superpowers@superpowers-marketplace 
&lt;/code&gt;
    &lt;p&gt;Quit and restart claude and you should be good to go.&lt;/p&gt;
    &lt;p&gt;If things could be better, ask Claude to use &lt;code&gt;gh&lt;/code&gt; to file bugs against https://github.com/obra/Superpowers.&lt;/p&gt;
    &lt;p&gt;Send PRs for new skills, too. :)&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://blog.fsck.com/2025/10/09/superpowers/"/><published>2025-10-11T07:29:23+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45547359</id><title>Windows Subsystem for FreeBSD</title><updated>2025-10-12T00:48:39.071271+00:00</updated><content>&lt;doc fingerprint="1e96f955ef2edde2"&gt;
  &lt;main&gt;
    &lt;p&gt;⚡ Experimental Project – Running FreeBSD on WSL2 ⚡&lt;/p&gt;
    &lt;p&gt;This repository hosts work-in-progress efforts to run FreeBSD inside Windows Subsystem for Linux (WSL2) with minimal to no changes to the FreeBSD base system. The project builds on the open-source components of WSL2 to enable FreeBSD to boot and run seamlessly in a Windows environment.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Enable FreeBSD to run natively on WSL2’s architecture&lt;/item&gt;
      &lt;item&gt;Make minimal or no modifications to the FreeBSD base system&lt;/item&gt;
      &lt;item&gt;Contribute improvements back to open-source components where possible&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;🚧 Work in Progress – This is an experimental personal project.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;FreeBSD boots successfully inside WSL2&lt;/item&gt;
      &lt;item&gt;Basic functionality is up and running&lt;/item&gt;
      &lt;item&gt;Ongoing work focuses on networking, I/O, and process management&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Initial boot support (done experimentally)&lt;/item&gt;
      &lt;item&gt;Full Console Support executing Commands&lt;/item&gt;
      &lt;item&gt;Networking support (in progress)&lt;/item&gt;
      &lt;item&gt;User-mode utilities and integration&lt;/item&gt;
      &lt;item&gt;Documentation and examples&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;At this stage, contributions are welcome in the form of:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Feedback or testing results&lt;/item&gt;
      &lt;item&gt;Bug reports&lt;/item&gt;
      &lt;item&gt;Discussions and ideas&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Please open an issue or start a discussion to get involved.&lt;/p&gt;
    &lt;p&gt;This project is released under an open-source license (TBD).&lt;/p&gt;
    &lt;p&gt;This is a personal, experimental project and is not affiliated with Microsoft, the FreeBSD Foundation, or the FreeBSD Project. Use at your own risk.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/BalajeS/WSL-For-FreeBSD"/><published>2025-10-11T07:32:08+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45547566</id><title>The &lt;output&gt; Tag</title><updated>2025-10-12T00:48:38.902165+00:00</updated><content>&lt;doc fingerprint="365a9b111ba6d282"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;HTML’s Best Kept Secret: The &amp;lt;output&amp;gt; Tag&lt;/head&gt;
    &lt;p&gt;Den Odell 1 October 2025 · ⏱️ 5 min read&lt;/p&gt;
    &lt;p&gt;Den Odell 1 October 2025 · ⏱️ 5 min read&lt;/p&gt;
    &lt;p&gt;Every developer knows &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt;. It’s the workhorse of the web.&lt;/p&gt;
    &lt;p&gt;But &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt;? Most have never touched it. Some don’t even know it exists.&lt;/p&gt;
    &lt;p&gt;That’s a shame, because it solves something we’ve been cobbling together with &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s and ARIA for years: dynamic results that are announced to screen readers by default.&lt;/p&gt;
    &lt;p&gt;It’s been in the spec for years. Yet it’s hiding in plain sight.&lt;/p&gt;
    &lt;p&gt;Here’s what the HTML5 spec says:&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;The&lt;/p&gt;&lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt;element represents the result of a calculation performed by the application, or the result of a user action.&lt;/quote&gt;
    &lt;p&gt;It’s mapped to &lt;code&gt;role="status"&lt;/code&gt; in the accessibility tree. In plain terms, it announces its value when it changes, as if it already had &lt;code&gt;aria-live="polite" aria-atomic="true"&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;In practice, that means updates do not interrupt the user. They are read shortly after, and the entire content is spoken rather than just the part that changed. You can override this behavior by setting your own ARIA properties if needed.&lt;/p&gt;
    &lt;p&gt;Usage is straightforward:&lt;/p&gt;
    &lt;code&gt;&amp;lt;output&amp;gt;Your dynamic value goes here&amp;lt;/output&amp;gt;&lt;/code&gt;
    &lt;p&gt;That’s it. Built-in assistive technology support. No attributes to memorize. Just HTML doing what it was always meant to do.&lt;/p&gt;
    &lt;p&gt;I discovered &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; on an accessibility project with a multi-step form. The form updated a risk score as fields changed. It looked perfect in the browser, but screen reader users had no idea the score was updating.&lt;/p&gt;
    &lt;p&gt;Adding an ARIA live region fixed it. But I’ve always believed in reaching for semantic HTML first, and live regions often feel like a patch.&lt;/p&gt;
    &lt;p&gt;That’s when I scoured the spec and &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; jumped out. It understands forms without requiring one, and it announces its changes natively. Turns out the simplest fix had been in the spec all along.&lt;/p&gt;
    &lt;p&gt;Because we forgot. It’s not covered in most tutorials. It doesn’t look flashy. When I searched GitHub public repos, it barely showed up at all.&lt;/p&gt;
    &lt;p&gt;It gets overlooked in patterns and component libraries too. That absence creates a feedback loop: if no one teaches it, no one uses it.&lt;/p&gt;
    &lt;p&gt;Like &lt;code&gt;&amp;lt;label&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; has a &lt;code&gt;for=""&lt;/code&gt; attribute. Here you list the &lt;code&gt;id&lt;/code&gt;s of any &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; elements the result depends on, separated by spaces:&lt;/p&gt;
    &lt;code&gt;&amp;lt;input id="a" type="number"&amp;gt; +
&amp;lt;input id="b" type="number"&amp;gt; =
&amp;lt;output for="a b"&amp;gt;&amp;lt;/output&amp;gt;&lt;/code&gt;
    &lt;p&gt;For most users, nothing changes visually. But in the accessibility tree it creates a semantic link, letting assistive technology users connect the inputs with their calculated result.&lt;/p&gt;
    &lt;p&gt;It doesn’t require a &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; either. You can use it anywhere you are updating dynamic text on the page based on the user’s input.&lt;/p&gt;
    &lt;p&gt;By default &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; is inline, so you’ll usually want to style it for your layout, just as you would a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; or &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;And because it has been part of the spec since 2008, support is excellent across browsers and screen readers. It also plays nicely with any JavaScript framework you might be using, like React or Vue.&lt;/p&gt;
    &lt;p&gt;Update 7 Oct 2025: Some screen readers have been found not to announce updates to the tag, so explicitly emphasising the &lt;code&gt;role&lt;/code&gt; attribute might be worthwhile for now until support improves: &lt;code&gt;&amp;lt;output role="status"&amp;gt;&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;One thing to note: &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; is for results tied to user inputs and actions, not global notifications like toast messages. Those are better handled with &lt;code&gt;role="status"&lt;/code&gt; or &lt;code&gt;role="alert"&lt;/code&gt; on a generic element, since they represent system feedback rather than calculated output.&lt;/p&gt;
    &lt;p&gt;So what does this look like in practice?&lt;/p&gt;
    &lt;p&gt;I’ve personally reached for &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; in multiple real-world projects since discovering it:&lt;/p&gt;
    &lt;p&gt;During a recent 20-minute coding challenge, I used &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; to display calculation results. Without adding a single ARIA role, the screen reader announced each result as it updated. No hacks required.&lt;/p&gt;
    &lt;p&gt;At Volvo Cars, we displayed user-friendly versions of slider values. Internally the slider might hold &lt;code&gt;10000&lt;/code&gt;, but the output showed &lt;code&gt;10,000 miles/year&lt;/code&gt;. We wrapped the slider and &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; in a container with &lt;code&gt;role="group"&lt;/code&gt; and a shared label, creating a cohesive React component:&lt;/p&gt;
    &lt;code&gt;&amp;lt;div role="group" aria-labelledby="mileage-label"&amp;gt;
  &amp;lt;label id="mileage-label" htmlFor="mileage"&amp;gt;
    Annual mileage
  &amp;lt;/label&amp;gt;
  &amp;lt;input
    id="mileage"
    name="mileage"
    type="range"
    value={mileage}
    onChange={(e) =&amp;gt; setMileage(Number(e.target.value))}
  /&amp;gt;
  &amp;lt;output name="formattedMileage" htmlFor="mileage"&amp;gt;
    {mileage.toLocaleString()} miles/year
  &amp;lt;/output&amp;gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;
    &lt;p&gt;I found that password strength indicators and real-time validation messages work beautifully with &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt;.&lt;/p&gt;
    &lt;code&gt;&amp;lt;label for="password"&amp;gt;Password&amp;lt;/label&amp;gt;
&amp;lt;input type="password" id="password" name="password"&amp;gt;
&amp;lt;output for="password"&amp;gt;
  Password strength: Strong
&amp;lt;/output&amp;gt;&lt;/code&gt;
    &lt;p&gt;The &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; tag even fits modern patterns where you might fetch prices from APIs, show tax calculations, or display server-generated recommendations.&lt;/p&gt;
    &lt;p&gt;Here, a shipping cost calculator updates an &lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; tag, informing users once the cost has been calculated:&lt;/p&gt;
    &lt;code&gt;export function ShippingCalculator() {
  const [weight, setWeight] = useState("");
  const [price, setPrice] = useState("");

  useEffect(() =&amp;gt; {
    if (weight) {
      // Fetch shipping price from server based on package weight
      fetch(`/api/shipping?weight=${weight}`)
        .then((res) =&amp;gt; res.json())
        .then((data) =&amp;gt; setPrice(data.price));
    }
  }, [weight]);

  return (
    &amp;lt;form&amp;gt;
      &amp;lt;label&amp;gt;
        Package weight (kg):
        &amp;lt;input
          type="number"
          name="weight"
          value={weight}
          onChange={(e) =&amp;gt; setWeight(e.target.value)}
        /&amp;gt;
      &amp;lt;/label&amp;gt;
      
      &amp;lt;output name="price" htmlFor="weight"&amp;gt;
        {price ? `Estimated shipping: $${price}` : "Calculating..."}
      &amp;lt;/output&amp;gt;
    &amp;lt;/form&amp;gt;
  );
}&lt;/code&gt;
    &lt;p&gt;There’s something satisfying about using a native HTML element for what it was designed for, especially when it makes your UI more accessible with less code.&lt;/p&gt;
    &lt;p&gt;&lt;code&gt;&amp;lt;output&amp;gt;&lt;/code&gt; might be HTML’s best kept secret, and discovering gems like this shows how much value is still hiding in the spec.&lt;/p&gt;
    &lt;p&gt;Sometimes the best tool for the job is the one you didn’t even know you had.&lt;/p&gt;
    &lt;p&gt;Update 11 Oct 2025: The ever-excellent Bob Rudis has produced a working example page to support this post. Find it here: https://rud.is/drop/output.html&lt;/p&gt;
    &lt;p&gt;💬 Comments? Join the discussion on Hacker News → Lobste.rs → Dev.to →&lt;/p&gt;
    &lt;p&gt;🔗 Share: Twitter/X · LinkedIn ·&lt;/p&gt;
    &lt;p&gt;What happens when accessibility stops being a best practice and starts being the law? We’re about to find out.&lt;/p&gt;
    &lt;p&gt;We keep changing how we style the web, but the real problem isn’t CSS. It’s how we build around it.&lt;/p&gt;
    &lt;p&gt;No spam. Just occasional deep dives on frontend engineering and developer experience.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://denodell.com/blog/html-best-kept-secret-output-tag"/><published>2025-10-11T08:27:26+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45549434</id><title>Vibing a non-trivial Ghostty feature</title><updated>2025-10-12T00:48:38.734938+00:00</updated><content>&lt;doc fingerprint="37520ad38b880074"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Mitchell Hashimoto&lt;/head&gt;
    &lt;head rend="h1"&gt;Vibing a Non-Trivial Ghostty Feature&lt;/head&gt;
    &lt;p&gt;I recently shipped a non-trivial Ghostty feature (unobtrusive macOS automatic updates) that was largely developed with AI.&lt;/p&gt;
    &lt;p&gt;I'm regularly asked to share non-trivial examples of how I use AI and agentic coding tools and this felt like a golden opportunity to walk through my process with a well-scoped, non-trivial, real-world, shipping feature1.&lt;/p&gt;
    &lt;p&gt;This post will share every single agentic coding session I had on the path to shipping this feature, unedited and in full. Alongside it, I'll provide some additional context about my process and reasoning. And yes, I'll also share the token cost for those curious about that, too.&lt;/p&gt;
    &lt;p&gt;Important: there is a lot of human coding, too. I almost always go in after an AI does work and iterate myself for awhile, too. Rather than say that at every turn, I'm just saying it once here. Therefore, you may see some discrepancies between what the AI produced and what ended up in the final code. This is intentional and I believe good AI drivers are experts in their domains and utilize AI as an assistant, not a replacement.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Feature&lt;/head&gt;
    &lt;p&gt;The finished feature this blog post is about is the macOS unobtrusive update notification feature. This feature shows update status within the terminal window without interrupting work by creating windows, grabbing focus, etc.&lt;/p&gt;
    &lt;p&gt;Let's set the stage for what lead to this feature (pun intended, as you'll see shortly). During a high-profile OpenAI keynote, a demo was rudely interrupted by a Ghostty update prompt:&lt;/p&gt;
    &lt;p&gt;I wanted to ensure that never happened again2. The path I decided to take was to make update notifications unobtrusive. Instead of popping up a window, the app would instead show a small, non-modal GUI element somewhere that wouldn't interrupt the user.&lt;/p&gt;
    &lt;head rend="h2"&gt;Pre-AI Planning&lt;/head&gt;
    &lt;p&gt;&lt;del&gt;So I pulled out my AI tooling.&lt;/del&gt; Absolutely not. I began by coming up with a rough plan of how I wanted this to work. Ghostty uses Sparkle, an extremely popular macOS update framework. I poked around their docs and found that they support custom UI through Obj-C protocols. You have to reimplement a ton of stuff from scratch, but it is possible.&lt;/p&gt;
    &lt;p&gt;Okay, so I had a rough idea of backend. For frontend, I wasn't really sure (and it isn't my area of expertise). I had this really vague idea that it should be a little button embedded in the title bar, and I know macOS supports custom UI in the titlebar via titlebar accessory controllers, but beyond that I didn't have much of a sense of how it should look or feel.&lt;/p&gt;
    &lt;p&gt;But that's enough to get started. AI is a very good prototyper, so even knowing what you don't know is useful enough to get started. I had a strong enough sense of the big picture.&lt;/p&gt;
    &lt;head rend="h2"&gt;First Session: Prototyping the UI&lt;/head&gt;
    &lt;p&gt;Here is my first agentic coding session, with the starting prompt:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;I want to enable custom, unobtrusive update notifications and installs by customizing SPUUserDriver. Let's start by planning the custom UI we'll need. We'll ONLY work on UI. Create a plan for creating SwiftUI views that can show the various states that are required by SPUUserDriver. I think the best place for these to show up is in the macOS window titlebars on the top-right. Create a plan to put it there. Consult the oracle.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Frequent question: "What is the oracle?" It is an Amp-specific read-only subagent that uses a slower, higher-cost model that is generally better at thinking about things. I consult the oracle for all planning.&lt;/p&gt;
    &lt;p&gt;To start, I decided to prototype the UI first.&lt;/p&gt;
    &lt;p&gt;Notice here that I don't send the agent off to build the full feature. There are a couple reasons for this. First and foremost, I still don't even know what I want the UI/UX to be like, so I can't possibly coherently expect an AI to do that for me amongst other changes. Second, smaller chunks of work are easier to review, understand, and iterate on.&lt;/p&gt;
    &lt;p&gt;Another thing to notice is that I ask it to only create a plan and not to write any code. Since this is a relatively vague request, it's important that I review a plan before it goes off and does a ton of work (and spends a ton of tokens doing it).&lt;/p&gt;
    &lt;p&gt;Tip: Creating a comprehensive plan interactively with an agent is a really important first-step for anything non-trivial. I usually also save it out (via the agent) to something like &lt;code&gt;spec.md&lt;/code&gt; and in future sessions I can say "Consult the @spec.md and work on some task".&lt;/p&gt;
    &lt;p&gt;The agent came up with an agreeable enough plan that I let it go ahead and implement it. You can see the rest of my conversations as I iterate on that.&lt;/p&gt;
    &lt;p&gt;The UI it made was directionally very good. It had a ton of polish issues (spacing, colors, etc.) but seeing the UI gave me the spark of inspiration I needed to know what I wanted.&lt;/p&gt;
    &lt;p&gt;Tip: I very often use AI for inspiration. In this case, I ended up keeping a lot (not all) of the UI code it made, but I will very often prompt an agent, throw away everything it did, and redo it myself (manually!). I find the "zero to one" stage of creation very difficult and time consuming and AI is excellent at being my muse.&lt;/p&gt;
    &lt;head rend="h3"&gt;Hitting a Wall&lt;/head&gt;
    &lt;p&gt;You can see in chats 11 to 14 that we're entering the slop zone. The code the agent created has a critical bug, and it's absolutely failing to fix it. And I have no idea how to fix it, either.&lt;/p&gt;
    &lt;p&gt;I'll often make these few hail mary attempts to fix a bug. If the agent can figure it out, I can study it and learn myself. If it doesn't, it costs me very little. If the agent figures it out and I don't understand it, I back it out. I'm not shipping code I don't understand. While it's failing, I'm also tabbed out searching the issue and trying to figure it out myself.&lt;/p&gt;
    &lt;p&gt;It's at this point that I know I need to step back, review what it did, and come up with my own plans. It's time to educate myself and think critically. AI is no longer the solution; it is a liability.&lt;/p&gt;
    &lt;head rend="h2"&gt;Cleanup Sessions&lt;/head&gt;
    &lt;p&gt;I spend the next few sessions guiding the agent to clean up the code.&lt;/p&gt;
    &lt;p&gt;The second session focused on moving some methods around into better places I recognized:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Let's move the pill background, foreground, and badge functions from @macos/Sources/Features/Update/UpdateAccessoryView.swift to @macos/Sources/Features/Update/UpdateViewModel.swift and make them more generic (background, foreground, badge)&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;The third session added documentation to the code:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Update the docs for @UpdateBadge.swift&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Tip: Adding documentation is a really important step because it helps reaffirm your own understanding of the code as well as educate future agents that may read and modify this code. I find agents do much better when they have both natural language descriptions as well as the code itself.&lt;/p&gt;
    &lt;p&gt;The fourth session moves the view model to an app-global location, since the original work put it in a window scope and update information is app scoped.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Move the update view model data to AppDelegate since the update information will be app-global.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Throughout these, I am usually dropping in and making minor manual changes as well.&lt;/p&gt;
    &lt;p&gt;The cleanup step is really important. To cleanup effectively you have to have a pretty good understanding of the code, so this forces me to not blindly accept AI-written code. Subsequently, better organized and documented code helps future agentic sessions perform better.&lt;/p&gt;
    &lt;p&gt;I sometimes tongue-in-cheek refer to this as the "anti-slop session".&lt;/p&gt;
    &lt;head rend="h2"&gt;Facing "The Bug"&lt;/head&gt;
    &lt;p&gt;Time to get back to that bug that I found in that initial session. I once again spent a few sessions trying to get the agent to figure this out. I start vague, and slowly get more specific with how I'd approach it.&lt;/p&gt;
    &lt;p&gt;First, the vague session:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;For standard, native tabs, the update accesory view is not visible. It should remain visible in the titlebar of the window.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Failure. Then, I get more specific:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;We need to update @macos/Sources/Features/Terminal/Window Styles/TerminalTabsTitlebarTahoe.swift tab bar constraints to align the right edge of the tab bar with the left edge of the update accessory view so it remains visible.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Failure. Then, I try a different, specific approach:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;What if we changed the @macos/Sources/Features/Terminal/Window Styles/TitlebarTabsTahoeTerminalWindow.swift to make the tab bar a top accessory view rather than a bottom one to make our tabs go into the titlebar?&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Failure. One last attempt:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;The "right accessory view" and layout of @macos/Sources/Features/Terminal/Window Styles/TitlebarTabsTahoeTerminalWindow.swift is conflictig with the update accessory view setup in @macos/Sources/Features/Terminal/Window Styles/TerminalWindow.swift Can we constrain the tab bar to always appear left of the update notice?&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Failure.&lt;/p&gt;
    &lt;p&gt;This whole time, I've also spent time trying to solve this myself through manual research and human effort. My more specific prompts are based on things I've learned through that process. But overall, it was clearly not working.&lt;/p&gt;
    &lt;p&gt;I don't think I can figure this out on my own, so I decide to pivot. I decided that for these problematic titlebar styles, let's put the update notices in the bottom-right corner of the window overlaid on top of the content view rather than in the titlebar.&lt;/p&gt;
    &lt;p&gt;I need to support this anyways because Ghostty has a configuration to hide the titlebar entirely. So, even if I can solve the titlebar styling issue later, I still need to support this other mode.&lt;/p&gt;
    &lt;p&gt;My next session moves forward with this plan with a very specific prompt:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Augment the @macos/Sources/Features/Update system to also support an overlay approach in @macos/Sources/Features/Terminal/TerminalView.swift The update notice should appear at the bottom of the window. It should go over the text (so it doesn't resize the terminal view). All clicking behaviors should otherwise be the same as the accessory view.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;It did a really good job with this. I did a lot of manual polish after (moving stuff around, renaming things, etc.) but the core work was solid.&lt;/p&gt;
    &lt;p&gt;Here is a video of the feature shortly after this session, showcasing how the update notice appears in the bottom-right corner of the window for certain titlebar styles or when the titlebar is hidden:&lt;/p&gt;
    &lt;head rend="h2"&gt;Starting the Backend&lt;/head&gt;
    &lt;p&gt;The UI was feeling good enough. I had noted a bunch of polish issues I wanted to tackle later but I wanted to move on to the backend work primarily to see if I'd discover any unknown unknowns that threw a wrench in my plans.&lt;/p&gt;
    &lt;p&gt;I manually created a file with a scaffold of incomplete functions and various &lt;code&gt;TODO&lt;/code&gt; comments. I then started
a session to complete that work for me:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Complete the @macos/Sources/Features/Update/UpdateDriver.swift Read the Sparkle documentaiton as necessary to understand the functionality. https://sparkle-project.org/documentation/api-reference/Protocols.html&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Tip: AI is very good at fill-in-the-blank or draw-the-rest-of-the-owl. My pattern here of creating scaffolding with descriptive function names, parameters, todo comments, etc. is a really common one for me and it works very well.&lt;/p&gt;
    &lt;p&gt;It actually did a really bad job here and I ended up throwing all of this code away. The code it produced worked, but it was obviously the wrong approach. It conflated a lot of different concerns and the way it was storing state in the driver was clearly wrong.&lt;/p&gt;
    &lt;p&gt;When I studied what it did, I realized it was because the view model was structured in a suboptimal way, so I switched gears into cleanup mode to give AI (and humans, if I chose to write it myself) the better framework to work with.&lt;/p&gt;
    &lt;head rend="h2"&gt;Cleanup Again, Big Time&lt;/head&gt;
    &lt;p&gt;Experience has taught me that the cleanliness of a UI frontend and business logic backend is often dictated by the quality of the view model in between. So I spent some time manually restructured the view model. This involved switching to a tagged union rather than the struct with a bunch of optionals. I renamed some types, moved stuff around.&lt;/p&gt;
    &lt;p&gt;I knew from experience that this small bit of manual work in the middle would set the agents up for success in future sessions for both the frontend and backend. After completing it, I continued with a marathon set of cleanup sessions.&lt;/p&gt;
    &lt;p&gt;After doing the restructuring, the first thing I did was ask the agent to once again complete the owl, this time inspecting my changes and updating dependent code to the new style and removing the old:&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;Update @macos/Sources/Features/Update/UpdateViewModel.swift to use the new&lt;/p&gt;&lt;code&gt;UpdateState&lt;/code&gt;exclusively. Rename&lt;code&gt;state2&lt;/code&gt;to&lt;code&gt;state&lt;/code&gt;(remove the old state).&lt;/quote&gt;
    &lt;p&gt;Then I asked it remove additional dead code:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;I think we can get rid of UpdateUIActions. They're not used anymore since our UpdateState has callbacks.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Then I broke the build myself cleaning up some things. I had a meeting to hop onto so I decided to let the agent fix it while I was busy:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Run the build and fix the errors&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Tip: "I broke a bunch of things, please fix my mess." is another frequent use case I have for agents. I'd say generally this fits within the same fill-in-the-blank pattern as before.&lt;/p&gt;
    &lt;p&gt;Later, I started doing some refactors on some of the views again:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Turn each @macos/Sources/Features/Update/UpdatePopoverView.swift case into a dedicated fileprivate Swift view that takes the typed value as its parameter so that we can remove the guards.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;quote&gt;&lt;p&gt;Change&lt;/p&gt;&lt;code&gt;iconName&lt;/code&gt;in @macos/Sources/Features/Update/UpdateViewModel.swift to be an optional, return nil for blank. Update usage.&lt;/quote&gt;
    &lt;head rend="h2"&gt;Simulation&lt;/head&gt;
    &lt;p&gt;In my first UI session, I had the agent create some demo code so I could see the UI in action without real update checks. But update flows have a number of scenarios and up to this point I only tested the happy path.&lt;/p&gt;
    &lt;p&gt;In my next session I extracted the simulation code into a dedicated file and asked the agent to create more scenarios:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Extract the update simulation code in @macos/Sources/App/macOS/AppDelegate.swift into a dedicated file in @macos/Sources/Features/Update . This should contain multiple simulation scenarios (happy path, not found, errors, etc.) so that we can easily try different demos.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Tip: Agents are great at generating tests and simulations. The simulation code specifically that it generated here is honestly pretty gross but it works and it's not part of the release binary so the quality doesn't matter to me. I didn't even bother cleaning it up beyond the basics you can see in the session.&lt;/p&gt;
    &lt;p&gt;I then ran the various simulations and found a number of UX improvements.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Cleaning up the "No Update Found" state&lt;/item&gt;
      &lt;item&gt;Reset state on confirming error&lt;/item&gt;
      &lt;item&gt;Copy and style changes for permission request state&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Last Mile&lt;/head&gt;
    &lt;p&gt;At this point, I had a working backend and frontend and I needed to hook it all up.&lt;/p&gt;
    &lt;p&gt;My next session prompted the agent to do this:&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;Make an&lt;/p&gt;&lt;code&gt;UpdateController&lt;/code&gt;class the same as https://github.com/sparkle-project/Sparkle/blob/2.x/Sparkle/SPUStandardUpdaterController.m but for our updater types.&lt;/quote&gt;
    &lt;p&gt;This required some back and forth and manual polish, but it got there.&lt;/p&gt;
    &lt;p&gt;I then made some minor improvements:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;For our update available state with the appcast, look at https://sparkle-project.org/documentation/api-reference/Classes/SUAppcastItem.html and show other relevant metadata if its set. For example, content length for size.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;head rend="h2"&gt;Anything Else?&lt;/head&gt;
    &lt;p&gt;My last prompt to an agent is always to ask what else I might be missing. I do this regardless of if I manually wrote the code myself or not.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Are there any other improvements you can see to be made with the @macos/Sources/Features/Update feature? Don't write any code. Consult the oracle. Consider parts of the code that can also get more unit tests added.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;This highlighted some real issues, so I went ahead and asked it to implement them. I find its easier to tell the agent "okay just do it all" rather than ask it specific things to do, since I can always easily clean it up in selective commits later.&lt;/p&gt;
    &lt;p&gt;An amusing thing in this session is that the agent started going down a really crazy rabbit hole and so I stepped in to stop it:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Stop stop stop. Undo all the main actor stuff.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;I also noticed that it did something rather poorly when there is a better way:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;For the error message, instead of truncating, isn't there a SwiftUI standard way to do this? We should add an additional UI element they can use to view the whole message.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;head rend="h2"&gt;Cost and Time&lt;/head&gt;
    &lt;p&gt;The work took a total of 16 separate sessions totalling $15.98 in token spend on Amp3. I won't try to speculate whether this is expensive or cheap in general, but I will say for me personally I spent more than that in coffee shops in the two calendar days I spent on this feature.&lt;/p&gt;
    &lt;p&gt;The total "wall clock" time I spent on this feature I estimate around 8 hours. I only spend around 4 hours a day on the computer the first and last commit span 3 days. But I also didn't spend all of my time on this feature. For example, I shipped a Ghostty update, was a guest on ThePrimeagen for an hour, and gave a guest presentation at Zoo's annual all-hands, all during the hours I have available for "computer work" during the same days I was working on this feature4. So, I think the 8 hour estimate is generous.&lt;/p&gt;
    &lt;p&gt;Many people on the internet argue whether AI enables you to work faster or not. In this case, I think I shipped this faster than I would have if I had done it all myself, in particular because iterating on minor SwiftUI styling is so tedious and time consuming for me personally and AI does it so well.&lt;/p&gt;
    &lt;p&gt;I think the faster/slower argument for me personally is missing the thing I like the most: the AI can work for me while I step away to do other things. Here is a picture I took of one of my cleanup sessions while I was making breakfast for my family:&lt;/p&gt;
    &lt;p&gt;There's all sorts of dismissals about this, such as "I don't want to be coding while I'm cooking" or "Be more present" or whatever. If that's how you want to be, that's fine. In my case, in this specific example, I'm the first person awake in my household and I prep breakfast while everyone else is still asleep. I don't do this every waking moment.&lt;/p&gt;
    &lt;p&gt;All this is to say: it works for me. I'm really, really not trying to convince you. I'm not associated financially with any AI company. But as someone who has a lot of success with AI tooling and likes to talk about it, people ask me to share examples all the time. That's what I'm doing here.&lt;/p&gt;
    &lt;head rend="h2"&gt;End&lt;/head&gt;
    &lt;p&gt;I think the feature is beautiful, works great, and after a final manual review I merged it5. For Ghostty users who are on the tip release, it is available now. For Ghostty users who are on tagged releases, this feature will be available in Ghostty 1.3.&lt;/p&gt;
    &lt;p&gt;I'm an outspoken advocate about the importance of sharing agentic coding sessions publicly6, with one of the reasons being that it's an incredibly powerful way to educate others about how to use these tools effectively. I hope this post helps demonstrate that.&lt;/p&gt;
    &lt;head rend="h2"&gt;Footnotes&lt;/head&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;It is currently only shipped to nightly beta testers ("tip" testers) but that is a group of thousands of people. It is merged and will be in the next stable Ghostty release. ↩&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Yes, it was good marketing. No, it was not on purpose. And no, I'm not celebrating it, because you don't want users to a fear a tool will take advantage of them. You want to trust that it's there to help. I want presenters (or anyone, really) to want to use Ghostty, and caring about stuff like this is part of that. ↩&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;The most poetic though would've been to use OpenAI Codex for this. I'm sure it would've done great! This post isn't an advertisement for Amp, it just happens to be the agentic coding tool I use the most currently. ↩&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;I have a toddler at home so my "computer time" is very scheduled and very limited. 😁 ↩&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;"Final manual review" is super super super important. This probably shouldn't be a footnote, but I couldn't find a better place to emphasize it. Please don't ever ship AI-written code without a thorough manual review. ↩&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;My reasoning for this could also be its own blog post, so I'm going to avoid explaining myself further here beyond what I already have. ↩&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://mitchellh.com/writing/non-trivial-vibing"/><published>2025-10-11T14:31:15+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45549848</id><title>Microsoft Amplifier</title><updated>2025-10-12T00:48:38.046787+00:00</updated><content>&lt;doc fingerprint="3f10ba78298386af"&gt;
  &lt;main&gt;
    &lt;quote&gt;
      &lt;p&gt;"I have more ideas than time to try them out" — The problem we're solving&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Caution&lt;/p&gt;
    &lt;p&gt;This project is a research demonstrator. It is in early development and may change significantly. Using permissive AI tools in your repository requires careful attention to security considerations and careful human supervision, and even then things can still go wrong. Use it with caution, and at your own risk.&lt;/p&gt;
    &lt;p&gt;Amplifier is a complete development environment that takes AI coding assistants and supercharges them with discovered patterns, specialized expertise, and powerful automation — turning a helpful assistant into a force multiplier that can deliver complex solutions with minimal hand-holding.&lt;/p&gt;
    &lt;p&gt;We've taken our learnings about what works in AI-assisted development and packaged them into a ready-to-use environment. Instead of starting from scratch every session, you get immediate access to proven patterns, specialized agents for different tasks, and workflows that actually work.&lt;/p&gt;
    &lt;p&gt;Amplifier provides powerful tools and systems:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;20+ Specialized Agents: Each expert in specific tasks (architecture, debugging, security, etc.)&lt;/item&gt;
      &lt;item&gt;Pre-loaded Context: Proven patterns and philosophies built into the environment&lt;/item&gt;
      &lt;item&gt;Parallel Worktree System: Build and test multiple solutions simultaneously&lt;/item&gt;
      &lt;item&gt;Knowledge Extraction System: Transform your documentation into queryable, connected knowledge&lt;/item&gt;
      &lt;item&gt;Conversation Transcripts: Never lose context - automatic export before compaction, instant restoration&lt;/item&gt;
      &lt;item&gt;Automation Tools: Quality checks and patterns enforced automatically&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Before starting, you'll need:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Python 3.11+ - Download Python&lt;/item&gt;
      &lt;item&gt;UV - Install UV&lt;/item&gt;
      &lt;item&gt;Node.js - Download Node.js&lt;/item&gt;
      &lt;item&gt;VS Code (recommended) - Download VS Code&lt;/item&gt;
      &lt;item&gt;Git - Download Git&lt;/item&gt;
    &lt;/list&gt;
    &lt;quote&gt;
      &lt;p&gt;Platform Note: Development and testing has primarily been done in Windows WSL2. macOS and Linux should work but have received less testing. Your mileage may vary.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Clone the repository:&lt;/p&gt;
        &lt;code&gt;git clone https://github.com/microsoft/amplifier.git cd amplifier&lt;/code&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Run the installer:&lt;/p&gt;
        &lt;quote&gt;make install&lt;/quote&gt;
        &lt;p&gt;This installs Python dependencies, the Claude CLI, and sets up your environment.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Configure your data directories (Recommended but optional):&lt;/p&gt;&lt;p&gt;Why configure this? By default, Amplifier stores data in&lt;/p&gt;&lt;code&gt;.data/&lt;/code&gt;(git-ignored). But centralizing your data externally gives you:&lt;list rend="ul"&gt;&lt;item&gt;Shared knowledge across all worktrees - Every parallel experiment accesses the same knowledge base&lt;/item&gt;&lt;item&gt;Cross-device synchronization - Work from any machine with the same accumulated knowledge&lt;/item&gt;&lt;item&gt;Automatic cloud backup - Never lose your extracted insights&lt;/item&gt;&lt;item&gt;Reusable across projects - Apply learned patterns to new codebases&lt;/item&gt;&lt;/list&gt;&lt;p&gt;Set up external directories:&lt;/p&gt;&lt;code&gt;cp .env.example .env # Edit .env to point to your preferred locations&lt;/code&gt;&lt;p&gt;Example configuration using cloud storage:&lt;/p&gt;&lt;quote&gt;# Centralized knowledge base - shared across all worktrees and devices # Using OneDrive/Dropbox/iCloud enables automatic backup! AMPLIFIER_DATA_DIR=~/OneDrive/amplifier/data # Your source materials (documentation, specs, design docs, notes) # Can point to multiple folders where you keep content AMPLIFIER_CONTENT_DIRS=.data/content,~/OneDrive/amplifier/content,~/Documents/notes&lt;/quote&gt;&lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Activate the environment (if not already active):&lt;/p&gt;
        &lt;quote&gt;source .venv/bin/activate # Linux/Mac/WSL .venv\Scripts\activate # Windows&lt;/quote&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Start Claude in the Amplifier directory to get all enhancements automatically:&lt;/p&gt;
    &lt;code&gt;cd amplifier
claude  # Everything is pre-configured and ready&lt;/code&gt;
    &lt;p&gt;Want Amplifier's power on your own code? Easy:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Start Claude with both directories:&lt;/p&gt;
        &lt;quote&gt;claude --add-dir /path/to/your/project&lt;/quote&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Tell Claude where to work (paste as first message):&lt;/p&gt;
        &lt;code&gt;I'm working in /path/to/your/project which doesn't have Amplifier files. Please cd to that directory and work there. Do NOT update any issues or PRs in the Amplifier repo.&lt;/code&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Use Amplifier's agents on your code:&lt;/p&gt;
        &lt;list rend="ul"&gt;
          &lt;item&gt;"Use the zen-architect agent to design my application's caching layer"&lt;/item&gt;
          &lt;item&gt;"Deploy bug-hunter to find why my login system is failing"&lt;/item&gt;
          &lt;item&gt;"Have security-guardian review my API implementation for vulnerabilities"&lt;/item&gt;
        &lt;/list&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Why use this? Stop wondering "what if" — build multiple solutions simultaneously and pick the winner.&lt;/p&gt;
    &lt;code&gt;# Try different approaches in parallel
make worktree feature-jwt     # JWT authentication approach
make worktree feature-oauth   # OAuth approach in parallel

# Compare and choose
make worktree-list            # See all experiments
make worktree-rm feature-jwt  # Remove the one you don't want&lt;/code&gt;
    &lt;p&gt;Each worktree is completely isolated with its own branch, environment, and context.&lt;/p&gt;
    &lt;p&gt;See the Worktree Guide for advanced features, such as hiding worktrees from VSCode when not in use, adopting branches from other machines, and more.&lt;/p&gt;
    &lt;p&gt;See costs, model, and session info at a glance:&lt;/p&gt;
    &lt;p&gt;Example: &lt;code&gt;~/repos/amplifier (main → origin) Opus 4.1 💰$4.67 ⏱18m&lt;/code&gt;&lt;/p&gt;
    &lt;p&gt;Shows:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Current directory and git branch/status&lt;/item&gt;
      &lt;item&gt;Model name with cost-tier coloring (red=high, yellow=medium, blue=low)&lt;/item&gt;
      &lt;item&gt;Running session cost and duration&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Enable with:&lt;/p&gt;
    &lt;code&gt;/statusline use the script at .claude/tools/statusline-example.sh
&lt;/code&gt;
    &lt;p&gt;Want to get the most out of Amplifier? Check out The Amplifier Way for battle-tested strategies including:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Understanding capability vs. context&lt;/item&gt;
      &lt;item&gt;Decomposition strategies for complex tasks&lt;/item&gt;
      &lt;item&gt;Using transcript tools to capture and improve workflows&lt;/item&gt;
      &lt;item&gt;Demo-driven development patterns&lt;/item&gt;
      &lt;item&gt;Practical tips for effective AI-assisted development&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Instead of one generalist AI, you get 20+ specialists:&lt;/p&gt;
    &lt;p&gt;Core Development:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;zen-architect&lt;/code&gt;- Designs with ruthless simplicity&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;modular-builder&lt;/code&gt;- Builds following modular principles&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;bug-hunter&lt;/code&gt;- Systematic debugging&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;test-coverage&lt;/code&gt;- Comprehensive testing&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;api-contract-designer&lt;/code&gt;- Clean API design&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Analysis &amp;amp; Optimization:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;security-guardian&lt;/code&gt;- Security analysis&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;performance-optimizer&lt;/code&gt;- Performance profiling&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;database-architect&lt;/code&gt;- Database design and optimization&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;integration-specialist&lt;/code&gt;- External service integration&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Knowledge &amp;amp; Insights:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;insight-synthesizer&lt;/code&gt;- Finds hidden connections&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;knowledge-archaeologist&lt;/code&gt;- Traces idea evolution&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;concept-extractor&lt;/code&gt;- Extracts knowledge from documents&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;ambiguity-guardian&lt;/code&gt;- Preserves productive contradictions&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Meta &amp;amp; Support:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;subagent-architect&lt;/code&gt;- Creates new specialized agents&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;post-task-cleanup&lt;/code&gt;- Maintains codebase hygiene&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;content-researcher&lt;/code&gt;- Researches from content collection&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;[See &lt;code&gt;.claude/AGENTS_CATALOG.md&lt;/code&gt; for the complete list]&lt;/p&gt;
    &lt;p&gt;Why use this? Stop losing insights. Every document, specification, design decision, and lesson learned becomes part of your permanent knowledge that Claude can instantly access.&lt;/p&gt;
    &lt;p&gt;Note&lt;/p&gt;
    &lt;p&gt;Knowledge extraction is an evolving feature that continues to improve with each update.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Add your content (any text-based files: documentation, specs, notes, decisions, etc.)&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Build your knowledge base:&lt;/p&gt;
        &lt;code&gt;make knowledge-update # Extracts concepts, relationships, patterns&lt;/code&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Query your accumulated wisdom:&lt;/p&gt;
        &lt;quote&gt;make knowledge-query Q="authentication patterns" make knowledge-graph-viz # See how ideas connect&lt;/quote&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Never lose context again. Amplifier automatically exports your entire conversation before compaction, preserving all the details that would otherwise be lost. When Claude Code compacts your conversation to stay within token limits, you can instantly restore the full history.&lt;/p&gt;
    &lt;p&gt;Automatic Export: A PreCompact hook captures your conversation before any compaction event:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Saves complete transcript with all content types (messages, tool usage, thinking blocks)&lt;/item&gt;
      &lt;item&gt;Timestamps and organizes transcripts in &lt;code&gt;.data/transcripts/&lt;/code&gt;&lt;/item&gt;
      &lt;item&gt;Works for both manual (&lt;code&gt;/compact&lt;/code&gt;) and auto-compact events&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Easy Restoration: Use the &lt;code&gt;/transcripts&lt;/code&gt; command in Claude Code to restore your full conversation:&lt;/p&gt;
    &lt;code&gt;/transcripts  # Restores entire conversation history
&lt;/code&gt;
    &lt;p&gt;The transcript system helps you:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Continue complex work after compaction without losing details&lt;/item&gt;
      &lt;item&gt;Review past decisions with full context&lt;/item&gt;
      &lt;item&gt;Search through conversations to find specific discussions&lt;/item&gt;
      &lt;item&gt;Export conversations for sharing or documentation&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Transcript Commands (via Makefile):&lt;/p&gt;
    &lt;code&gt;make transcript-list            # List available transcripts
make transcript-search TERM="auth"  # Search past conversations
make transcript-restore         # Restore full lineage (for CLI use)&lt;/code&gt;
    &lt;p&gt;A one-command workflow to go from an idea to a module (Contract &amp;amp; Spec → Plan → Generate → Review) inside the Amplifier Claude Code environment.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Run inside a Claude Code session: &lt;code&gt;/modular-build Build a module that reads markdown summaries, synthesizes net-new ideas with provenance, and expands them into plans. mode: auto level: moderate&lt;/code&gt;&lt;/item&gt;
      &lt;item&gt;Docs: see &lt;code&gt;docs/MODULAR_BUILDER_LITE.md&lt;/code&gt;for the detailed flow and guardrails.&lt;/item&gt;
      &lt;item&gt;Artifacts: planning goes to &lt;code&gt;ai_working/&amp;lt;module&amp;gt;/…&lt;/code&gt;(contract/spec/plan/review); code &amp;amp; tests to&lt;code&gt;amplifier/&amp;lt;module&amp;gt;/…&lt;/code&gt;.&lt;/item&gt;
      &lt;item&gt;Isolation &amp;amp; discipline: workers read only this module’s contract/spec plus dependency contracts. The spec’s Output Files are the single source of truth for what gets written. Every contract Conformance Criterion maps to tests. 〔Authoring Guide〕&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;auto&lt;/code&gt;(default): runs autonomously if confidence ≥ 0.75; otherwise falls back to&lt;code&gt;assist&lt;/code&gt;.&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;assist&lt;/code&gt;: asks ≤ 5 crisp questions to resolve ambiguity, then proceeds.&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;dry-run&lt;/code&gt;: plan/validate only (no code writes).&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Re‑run &lt;code&gt;/modular-build&lt;/code&gt; with a follow‑up ask; it resumes from &lt;code&gt;ai_working/&amp;lt;module&amp;gt;/session.json&lt;/code&gt;.&lt;/p&gt;
    &lt;code&gt;make check            # Format, lint, type-check
make test             # Run tests
make ai-context-files # Rebuild AI context&lt;/code&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Design: "Use zen-architect to design my notification system"&lt;/item&gt;
      &lt;item&gt;Build: "Have modular-builder implement the notification module"&lt;/item&gt;
      &lt;item&gt;Test: "Deploy test-coverage to add tests for the new notification feature"&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Investigate: "Use bug-hunter to find why my application's API calls are failing"&lt;/item&gt;
      &lt;item&gt;Verify: "Have security-guardian review my authentication implementation"&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Extract: &lt;code&gt;make knowledge-update&lt;/code&gt;(processes your documentation)&lt;/item&gt;
      &lt;item&gt;Query: &lt;code&gt;make knowledge-query Q="error handling patterns"&lt;/code&gt;&lt;/item&gt;
      &lt;item&gt;Apply: "Implement error handling using patterns from our knowledge base"&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Want to create tools like the ones in the scenarios/ directory? You don't need to be a programmer.&lt;/p&gt;
    &lt;p&gt;Not sure what to build? Ask Amplifier to brainstorm with you:&lt;/p&gt;
    &lt;code&gt;/ultrathink-task I'm new to the concepts of "metacognitive recipes" - what are some
interesting tools that you could create that I might find useful, that demonstrate
the value of "metacognitive recipes"? Especially any that would demonstrate how such
could be used to auto evaluate and recover/improve based upon self-feedback loops.
Don't create them, just give me some ideas.
&lt;/code&gt;
    &lt;p&gt;This brainstorming session will give you ideas like:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Documentation Quality Amplifier - Improves docs by simulating confused readers&lt;/item&gt;
      &lt;item&gt;Research Synthesis Quality Escalator - Extracts and refines knowledge from documents&lt;/item&gt;
      &lt;item&gt;Code Quality Evolution Engine - Writes code, tests it, learns from failures&lt;/item&gt;
      &lt;item&gt;Multi-Perspective Consensus Builder - Simulates different viewpoints to find optimal solutions&lt;/item&gt;
      &lt;item&gt;Self-Debugging Error Recovery - Learns to fix errors autonomously&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The magic happens when you combine:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Amplifier's brainstorming - Generates diverse possibilities&lt;/item&gt;
      &lt;item&gt;Your domain knowledge - You know your needs and opportunities&lt;/item&gt;
      &lt;item&gt;Your creativity - Sparks recognition of what would be useful&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Once you have an idea:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Describe your goal - What problem are you solving?&lt;/item&gt;
      &lt;item&gt;Describe the thinking process - How should the tool approach it?&lt;/item&gt;
      &lt;item&gt;Let Amplifier build it - Use &lt;code&gt;/ultrathink-task&lt;/code&gt;to create the tool&lt;/item&gt;
      &lt;item&gt;Iterate to refine - Provide feedback as you use it&lt;/item&gt;
      &lt;item&gt;Share it back - Help others by contributing to scenarios/&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Example: The blog writer tool was created with one conversation where the user described:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;The goal (write blog posts in my style)&lt;/item&gt;
      &lt;item&gt;The thinking process (extract style → draft → review sources → review style → get feedback → refine)&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;No code was written by the user. Just description → Amplifier builds → feedback → refinement.&lt;/p&gt;
    &lt;p&gt;For detailed guidance, see scenarios/blog_writer/HOW_TO_CREATE_YOUR_OWN.md.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;[!IMPORTANT] &amp;gt; This is an experimental system. We break things frequently.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Not accepting contributions yet (but we plan to!)&lt;/item&gt;
      &lt;item&gt;No stability guarantees&lt;/item&gt;
      &lt;item&gt;Pin commits if you need consistency&lt;/item&gt;
      &lt;item&gt;This is a learning resource, not production software&lt;/item&gt;
      &lt;item&gt;No support provided - See SUPPORT.md&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;We're building toward a future where:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;You describe, AI builds - Natural language to working systems&lt;/item&gt;
      &lt;item&gt;Parallel exploration - Test 10 approaches simultaneously&lt;/item&gt;
      &lt;item&gt;Knowledge compounds - Every project makes you more effective&lt;/item&gt;
      &lt;item&gt;AI handles the tedious - You focus on creative decisions&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The patterns, knowledge base, and workflows in Amplifier are designed to be portable and tool-agnostic, ready to evolve with the best available AI technologies.&lt;/p&gt;
    &lt;p&gt;See AMPLIFIER_VISION.md for details.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Knowledge extraction works best in Claude environment&lt;/item&gt;
      &lt;item&gt;Processing time: ~10-30 seconds per document&lt;/item&gt;
      &lt;item&gt;Memory system still in development&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;"The best AI system isn't the smartest - it's the one that makes YOU most effective."&lt;/p&gt;
    &lt;p&gt;Note&lt;/p&gt;
    &lt;p&gt;This project is not currently accepting external contributions, but we're actively working toward opening this up. We value community input and look forward to collaborating in the future. For now, feel free to fork and experiment!&lt;/p&gt;
    &lt;p&gt;Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit Contributor License Agreements.&lt;/p&gt;
    &lt;p&gt;When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.&lt;/p&gt;
    &lt;p&gt;This project has adopted the Microsoft Open Source Code of Conduct. For more information see the Code of Conduct FAQ or contact opencode@microsoft.com with any additional questions or comments.&lt;/p&gt;
    &lt;p&gt;This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow Microsoft's Trademark &amp;amp; Brand Guidelines. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party's policies.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/microsoft/amplifier"/><published>2025-10-11T15:19:54+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45550049</id><title>GNU Health</title><updated>2025-10-12T00:48:37.417958+00:00</updated><content>&lt;doc fingerprint="67508177167da52f"&gt;
  &lt;main&gt;
    &lt;p&gt;The GNU Health project provides the tools for individuals, health professionals, institutions and governments to proactively assess and improve the underlying determinants of health, from the socioeconomic agents to the molecular basis of disease. From primary health care to precision medicine. The following are the main components that make up the GNU Health ecosystem:&lt;/p&gt;
    &lt;p&gt;GNU Health is a Free/Libre, community-driven project from GNU Solidario, that counts with a large and friendly international community. GNU Solidario celebrates GNU Health Con (https://www.gnuhealthcon.org) and the International Workshop on e-Health in Emerging Economies (IWEEE) every year, that gathers the GNU Health and social medicine advocates from around the world.&lt;/p&gt;
    &lt;p&gt;GNU Health is a GNU (www.gnu.org) official package, awarded with the Free Software Foundantion award of Social benefit, among others. GNU Health has been adopted by many hospitals, governments and multilateral organizations around the globe.&lt;/p&gt;
    &lt;p&gt;GNU Health HMIS component for Health Practitioners, Health Institutions and Governments.&lt;/p&gt;
    &lt;p&gt;Its modular design allows to be deployed in many different scenarios: from small private offices, to large, national public health systems. It covers the functionality of Electronic Medical Record (EMR), Hospital Management and Health Information System (HIS).&lt;/p&gt;
    &lt;p&gt;GNU Health HMIS component is standard-based, and it provides over 40 packages/modules (primary care, obstetrics &amp;amp; gynecology, pediatrics, surgery, lims, genetics, diagnostic imaging, reporting...) to fit your institution needs. The GH HMIS combines the socioeconomic determinants of health with state-of-the-art technology in bioinformatics and clinical genetics. It manages the internal processes of a health institution, such as financial management, billing, stock management, pharmacies or labs (LIMS)&lt;/p&gt;
    &lt;p&gt;GNU LIMS, also known as Occhiolino, is a modern Laboratory Information Management System for the healthcare and biomedical sectors, that has emerged as a GNU Health sub-project.&lt;/p&gt;
    &lt;p&gt;The Laboratory Modules manage the request, creation and evaluation of laboratory analyses. As far as the LIMS (Laboratory Information Management System) functionality, GNU Health is very flexible. You will be able to link it to the patient chart and to the financial management of the Health Center&lt;/p&gt;
    &lt;p&gt;MyGNUHealth is the GNUHealth Personal Health Record application for desktop and mobile devices that integrates with the GNU Health Federation.&lt;/p&gt;
    &lt;p&gt;MyGNUHealth development uses the latest mobile and desktop technology, such as Kivy Python. MyGNUHealth Personal Health Record is a privacy-oriented PHR, that will put the citizen and the patient in control of her health and medical information. MyGNUHealth enhances and improves the interaction between citizens and healthcare professionals, with updated information on demographics and medical information.&lt;/p&gt;
    &lt;p&gt;The GNU Health Federation allows to build large, nation wide federated networks with thousands of heterogeneous nodes. The GNU Health federation is revolutionary, and will provide the community, the health practitioners, the research institutions and the ministries of health to have much better perspective and precise information on the individuals and their context.&lt;/p&gt;
    &lt;p&gt;The GNU Health Federation project aims to build a community based, federated health network among different regions and in a country, and, why not, among countries around the globe. A federation can be as large as you want. From a small regional federated network with several nodes, to a large, nationwide health network with thousands / millions of participating nodes.&lt;/p&gt;
    &lt;p&gt;Single-board Computers (SBC) are devices with a huge potential for the Public Health System when partnering with GNU Health. They can provide real-time monitoring of vital signs in hospital settings, retrieve information from laboratory instruments or be a great Personal Health tracker. They are also a great resource for research and academic institutions.&lt;/p&gt;
    &lt;p&gt;GNU Health as a social movement: GNU Health is a social project with technology behind. Itâs about Social Medicine and delivering universal healthcare. Itâs about social activism. One of the main reasons that led me to create GNU Health were the tremendous inequalities in access to healthcare. Over 20000 children die every day from preventable, social diseases. To name a few : malnutrition, contaminated water, child slavery, prostitution, war, malaria, HIV-AIDS, tuberculosis, dengue and other neglected tropical diseases. These are causes and/or results of social diseases, conditions that have a higher impact and higher prevalence on the poor and the underprivileged.&lt;/p&gt;
    &lt;p&gt;Studying and getting a deeper understanding on the living conditions of people in rural areas and in urban ghettos around the world, reinforced my intention to write a system that included the socio-economic determinants of health and disease. Most of the time, health (and the lack of) is determined by the environment, and biology plays a lesser role. Proper nutrition, housing, sanitation, access to education and to primary healthcare are key for the dignity, development and health of the individual, family and society at large. I like to summarize it as âpeople before patientsâ&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.gnuhealth.org/about-us.html"/><published>2025-10-11T15:47:22+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45551081</id><title>People regret buying Amazon smart displays after being bombarded with ads</title><updated>2025-10-12T00:48:37.218050+00:00</updated><content>&lt;doc fingerprint="82f9d3809ba284f9"&gt;
  &lt;main&gt;
    &lt;p&gt;Amazon Echo Show owners are reporting an uptick in advertisements on their smart displays.&lt;/p&gt;
    &lt;p&gt;The company's Echo Show smart displays have previously shown ads through the company's Shopping Lists feature, as well as advertising for Alexa skills. Additionally, Echo Shows may play audio ads when users listen to Amazon Music on Alexa.&lt;/p&gt;
    &lt;p&gt;However, reports on Reddit (examples here, here, and here) and from The Verge’s Jennifer Pattison Tuohy, who owns more than one Echo Show, suggest that Amazon has increased the amount of ads it shows on its smart displays' home screens. The Echo Show’s apparent increase in ads is pushing people to stop using or even return their Echo Shows.&lt;/p&gt;
    &lt;p&gt;The smart displays have also started showing ads for Alexa+, the new generative AI version of Amazon's Alexa voice assistant. Ads for the subscription-based Alexa+ are reportedly taking over Echo Show screens, even though the service is still in Early Access.&lt;/p&gt;
    &lt;p&gt;“This is getting ridiculous and I'm about to just toss the whole thing and move back to Google,” one Redditor said of the “full-volume” ads for Alexa+ on their Echo Show.&lt;/p&gt;
    &lt;p&gt;The Verge’s Tuohy reported seeing ads on one (but not all) of her Echo Shows for the first time this week and said ads sometimes show when the display is set to show personal photos. She reported seeing ads for “elderberry herbal supplements, Quest sports chips, and tabletop picture frames."&lt;/p&gt;
    &lt;p&gt;Users are unable to disable the home screen ads. When reached for comment, an Amazon spokesperson told Ars Technica:&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://arstechnica.com/gadgets/2025/10/people-regret-buying-amazon-smart-displays-after-being-bombarded-with-ads/"/><published>2025-10-11T17:41:45+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45551450</id><title>Rating 26 years of Java changes</title><updated>2025-10-12T00:48:37.111236+00:00</updated><content>&lt;doc fingerprint="26308157d1300b9f"&gt;
  &lt;main&gt;
    &lt;p&gt;I first started programming Java at IBM back in 1999 as a Pre-University Employee. If I remember correctly, we had Java 1.1.8 installed at that time, but were moving to Java 1.2 (“Java 2”), which was a massive release—I remember engineers at the time grumbling that the ever-present “Java in a Nutshell” book had grown to over 600 pages. I thought I’d take a look back at 26 years of Java releases and rate some of the language and core library changes (Java SE only) that have occurred over this time. It’s a very different language to what I started out with!&lt;/p&gt;
    &lt;p&gt;I can’t possibly cover every feature of those releases, as there are just way too many. So I’m just going to cherry-pick some that seemed significant at the time, or have been in retrospect. I’m not going to cover UI- or graphics-related stuff (Swing, Java2D etc), or VM/GC improvements. Just language changes and core libraries. And obviously this is highly subjective. Feel free to put your own opinions in the comments! The descriptions are brief and not intended as an introduction to the features in question: see the links from the Wikipedia page for more background.&lt;/p&gt;
    &lt;p&gt;NB: later features are listed from when they were first introduced as a preview.&lt;/p&gt;
    &lt;head rend="h2"&gt;Java 2 – 1998&lt;/head&gt;
    &lt;p&gt;The Collections Framework: before the collections framework, there was just raw arrays, Vector, and Hashtable. It gets the job done, but I don’t think anyone thinks the Java collections framework is particularly well designed. One of the biggest issues was a failure to distinguish between mutable and immutable collections, strange inconsistencies like why Iterator as a remove() method (but not, say, update or insert), and so on. Various improvements have been made over the years, and I do still use it in preference to pulling in a better alternative library, so it has shown the test of time in that respect. 4/10&lt;/p&gt;
    &lt;head rend="h2"&gt;Java 1.4 – 2002&lt;/head&gt;
    &lt;p&gt;The &lt;code&gt;assert&lt;/code&gt; keyword: I remember being somewhat outraged at the time that they could introduce a new keyword! I’m personally quite fond of asserts as an easy way to check invariants without having to do complex refactoring to make things unit-testable, but that is not a popular approach. I can’t remember the last time I saw an assert in any production Java code. 3/10&lt;/p&gt;
    &lt;p&gt;Regular expressions: Did I really have to wait 3 years to use regex in Java? I don’t remember ever having any issues with the implementation they finally went for. The Matcher class is perhaps a little clunky, but gets the job done. Good, solid, essential functionality. 9/10&lt;/p&gt;
    &lt;p&gt;“New” I/O (NIO): Provided non-blocking I/O for the first time, but really just a horrible API (still inexplicably using 32-bit signed integers for file sizes, limiting files to 2GB, confusing interface). I still basically never use these interfaces except when I really need to. I learnt Tcl/Tk at the same time that I learnt Java, and Java’s I/O always just seemed extraordinarily baroque for no good reason. Has barely improved in 2 and a half decades. 0/10&lt;/p&gt;
    &lt;p&gt;Also notable in this release was the new crypto APIs: the Java Cryptography Extensions (JCE) added encryption and MAC support to the existing signatures and hashes, and we got JSSE for SSL. Useful functionality, dreadful error-prone APIs. 1/10&lt;/p&gt;
    &lt;head rend="h2"&gt;Java 5 – 2004&lt;/head&gt;
    &lt;p&gt;Absolutely loads of changes in this release. This feels like the start of modern Java to me.&lt;/p&gt;
    &lt;p&gt;Generics: as Go discovered on its attempt to speed-run Java’s mistakes all over again, if you don’t add generics from the start then you’ll have to retrofit them later, badly. I wouldn’t want to live without them, and the rapid and universal adoption of them shows what a success they’ve been. They certainly have complicated the language, and there are plenty of rough edges (type erasure, reflection, etc), but God I wouldn’t want to live without them. 8/10.&lt;/p&gt;
    &lt;p&gt;Annotations: sometimes useful, sometimes overused. I know I’ve been guilty of abusing them in the past. At the time it felt like they were ushering a new age of custom static analysis, but that doesn’t really seem to be used much. Mostly just used to mark things as deprecated or when overriding a method. Meh. 5/10&lt;/p&gt;
    &lt;p&gt;Autoboxing: there was a time when, if you wanted to store an integer in a collection, you had to manually convert to and from the primitive int type and the Integer “boxed” class. Such conversion code was everywhere. Java 5 got rid of that, by getting the compiler to insert those conversions for you. Brevity, but no less inefficient. 7/10&lt;/p&gt;
    &lt;p&gt;Enums: I’d learned Haskell by this point, so I couldn’t see the point of introducing enums without going the whole hog and doing algebraic datatypes and pattern-matching. (Especially as Scala launched about this time). Decent feature, and a good implementation, but underwhelming. 6/10&lt;/p&gt;
    &lt;p&gt;Vararg methods: these have done quite a lot to reduce verbosity across the standard library. A nice small improvement that’s had a good quality of life enhancement. I still never really know when to put @SafeVarargs annotations on things though. 8/10&lt;/p&gt;
    &lt;p&gt;The for-each loop: cracking, use it all the time. Still not a patch on Tcl’s foreach (which can loop over multiple collections at once), but still very good. Could be improved and has been somewhat replaced by Streams. 8/10&lt;/p&gt;
    &lt;p&gt;Static imports: Again, a good simple change. I probably would have avoided adding * imports for statics, but it’s quite nice for DSLs. 8/10&lt;/p&gt;
    &lt;p&gt;Doug Lea’s java.util.concurrent etc: these felt really well designed. So well designed that everyone started using them in preference to the core collection classes, and they ended up back-porting a lot of the methods. 10/10&lt;/p&gt;
    &lt;head rend="h2"&gt;Java 7 – 2011&lt;/head&gt;
    &lt;p&gt;After the big bang of Java 5, Java 6 was mostly performance and VM improvements, I believe, so we had to wait until 2011 for more new language features.&lt;/p&gt;
    &lt;p&gt;Strings in switch: seems like a code smell to me. Never use this, and never see it used. 1/10&lt;/p&gt;
    &lt;p&gt;Try-with-resources: made a huge difference in exception safety. Combined with the improvements in exception chaining (so root cause exceptions are not lost), this was a massive win. Still use it everywhere. 10/10&lt;/p&gt;
    &lt;p&gt;Diamond operator for type parameter inference: a good minor syntactic improvement to cut down the visual noise. 6/10&lt;/p&gt;
    &lt;p&gt;Binary literals and underscores in literals: again, minor syntactic sugar. Nice to have, rarely something I care about much. 4/10&lt;/p&gt;
    &lt;p&gt;Path and Filesystem APIs: I tend to use these over the older File APIs, but just because it feels like I should. I couldn’t really tell you if they are better or not. Still overly verbose. Still insanely hard to set file permissions in a cross-platform way. 3/10&lt;/p&gt;
    &lt;head rend="h2"&gt;Java 8 – 2014&lt;/head&gt;
    &lt;p&gt;Lambdas: somewhat controversial at the time. I was very in favour of them, but only use them sparingly these days, due to ugly stack traces and other drawbacks. Named method references provide most of the benefit without being anonymous. Deciding to exclude checked exceptions from the various standard functional interfaces was understandable, but also regularly a royal PITA. 4/10&lt;/p&gt;
    &lt;p&gt;Streams: Ah, streams. So much potential, but so frustrating in practice. I was hoping that Java would just do the obvious thing and put filter/map/reduce methods onto Collection and Map, but they went with this instead. The benefits of functional programming weren’t enough to carry the feature, I think, so they had to justify it by promising easy parallel computing. This scope creep enormously over-complicated the feature, makes it hard to debug issues, and yet I almost never see parallel streams being used. What I do still see quite regularly is resource leaks from people not realising that the stream returned from Files.lines() has to be close()d when you’re done—but doing so makes the code a lot uglier. Combine that with ugly hacks around callbacks that throw checked exceptions, the non-discoverable API (where are the static helper functions I need for this method again?), and the large impact on lots of very common code, and I have to say I think this was one of the largest blunders in modern Java. I blogged what I thought was a better approach 2 years earlier, and I still think it would have been better. There was plenty of good research that different approaches were better, since at least Oleg Kiselyov’s work in the early noughties. 1/10&lt;/p&gt;
    &lt;p&gt;Java Time: Much better than what came before, but I have barely had to use much of this API at all, so I’m not in a position to really judge how good this is. Despite knowing how complex time and dates are, I do have a nagging suspicion that surely it doesn’t all need to be this complex? 8/10&lt;/p&gt;
    &lt;head rend="h2"&gt;Java 9 – 2017&lt;/head&gt;
    &lt;p&gt;Modules: I still don’t really know what the point of all this was. Enormous upheaval for minimal concrete benefit that I can discern. The general advice seems to be that modules are (should be) an internal detail of the JRE and best ignored in application code (apart from when they spuriously break things). Awful. -10/10 (that’s minus 10!)&lt;/p&gt;
    &lt;p&gt;jshell: cute! A REPL! Use it sometimes. Took them long enough. 6/10&lt;/p&gt;
    &lt;head rend="h2"&gt;Java 10 – 2018&lt;/head&gt;
    &lt;p&gt;The start of time-based releases, and a distinct ramp-up of features from here on, trying to keep up with the kids.&lt;/p&gt;
    &lt;p&gt;Local type inference (“var”): Some love this, some hate it. I’m definitely in the former camp. 9/10&lt;/p&gt;
    &lt;head rend="h2"&gt;Java 11 – 2018&lt;/head&gt;
    &lt;p&gt;New HTTP Client: replaced the old URL.openStream() approach by creating something more like Apache HttpClient. It works for most purposes, but I do find the interface overly verbose. 6/10&lt;/p&gt;
    &lt;p&gt;This release also added TLS 1.3 support, along with djb-suite crypto algorithms. Yay. 9/10&lt;/p&gt;
    &lt;head rend="h2"&gt;Java 12 – 2019&lt;/head&gt;
    &lt;p&gt;Switch expressions: another nice mild quality-of-life improvement. Not world changing, but occasionally nice to have. 6/10&lt;/p&gt;
    &lt;head rend="h2"&gt;Java 13 – 2019&lt;/head&gt;
    &lt;p&gt;Text blocks: on the face of it, what’s not to like about multi-line strings? Well, apparently there’s a good reason that injection attacks remain high on the OWASP Top 10, as the JEP introducing this feature seemed intent on getting everyone writing SQL, HTML and JavaScript using string concatenation again. Nearly gave me a heart attack at the time, and still seems like a pointless feature. Text templates (later) are trying to fix this, but seem to be currently in limbo. 3/10&lt;/p&gt;
    &lt;head rend="h2"&gt;Java 14 – 2020&lt;/head&gt;
    &lt;p&gt;Pattern matching in &lt;code&gt;instanceof&lt;/code&gt;: a little bit of syntactic sugar to avoid an explicit cast. But didn’t we all agree that using &lt;code&gt;instanceof&lt;/code&gt; was a bad idea decades ago? I’m really not sure who was doing the cost/benefit analysis on these kinds of features. 4/10&lt;/p&gt;
    &lt;p&gt;Records: about bloody time! Love ‘em. 10/10&lt;/p&gt;
    &lt;p&gt;Better error messages for NullPointerExceptions: lovely. 8/10&lt;/p&gt;
    &lt;head rend="h2"&gt;Java 15 – 2020&lt;/head&gt;
    &lt;p&gt;Sealed classes: in principal I like these a lot. We’re slowly getting towards a weird implementation of algebraic datatypes. I haven’t used them very much yet so far. 8/10&lt;/p&gt;
    &lt;p&gt;EdDSA signatures: again, a nice little improvement in the built-in cryptography. Came with a rather serious bug though… 8/10&lt;/p&gt;
    &lt;head rend="h2"&gt;Java 16 – 2021&lt;/head&gt;
    &lt;p&gt;Vector (SIMD) API: this will be great when it is finally done, but still baking several years later. ?/10&lt;/p&gt;
    &lt;head rend="h2"&gt;Java 17 – 2021&lt;/head&gt;
    &lt;p&gt;Pattern matching switch: another piece of the algebraic datatype puzzle. Seems somehow more acceptable than instanceof, despite being largely the same idea in a better form. 7/10&lt;/p&gt;
    &lt;head rend="h2"&gt;Java 18 – 2022&lt;/head&gt;
    &lt;p&gt;UTF-8 by default: Fixed a thousand encoding errors in one fell swoop. 10/10&lt;/p&gt;
    &lt;head rend="h2"&gt;Java 19 – 2022&lt;/head&gt;
    &lt;p&gt;Record patterns: an obvious extension, and I think we’re now pretty much there with ADTs? 9/10&lt;/p&gt;
    &lt;p&gt;Virtual threads: being someone who never really got on with async/callback/promise/reactive stream-based programming in Java, I was really happy to see this feature. I haven’t really had much reason to use them in anger yet, so I don’t know how well they’ve been done. But I’m hopeful! ?/10&lt;/p&gt;
    &lt;head rend="h2"&gt;Java 21 – 2023&lt;/head&gt;
    &lt;p&gt;String templates: these are exactly what I asked for in A few programming language features I’d like to see, based on E’s quasi-literal syntax, and they fix the issues I had with text blocks. Unfortunately, the first design had some issues, and so they’ve gone back to the drawing board. Hopefully not for too long. I really wish they’d not released text blocks without this feature. 10/10 (if they ever arrive).&lt;/p&gt;
    &lt;p&gt;Sequenced collections: a simple addition that adds a common super-type to all collections that have a defined “encounter order”: lists, deques, sorted sets, etc. It defines convenient getFirst() and getLast() methods and a way to iterate items in the defined order or in reverse order. This is a nice unification, and plugs what seems like an obvious gap in the collections types, if perhaps not the most pressing issue? 6/10&lt;/p&gt;
    &lt;p&gt;Wildcards in patterns: adds the familiar syntax from Haskell and Prolog etc of using &lt;code&gt;_&lt;/code&gt; as a non-capturing wildcard variable in patterns when you don’t care about the value of that part. 6/10&lt;/p&gt;
    &lt;p&gt;Simplified console applications: Java finally makes simple programs simple for beginners, about a decade after universities stopped teaching Java to beginners… Snark aside, this is a welcome simplification. 8/10&lt;/p&gt;
    &lt;p&gt;This release also adds support for KEMs, although in the simplest possible form only. Meh. 4/10&lt;/p&gt;
    &lt;head rend="h2"&gt;Java 22 – 2024&lt;/head&gt;
    &lt;p&gt;The only significant change in this release is the ability to have statements before a call to super() in a constructor. Fine. 5/10&lt;/p&gt;
    &lt;head rend="h2"&gt;Java 23 – 2024&lt;/head&gt;
    &lt;p&gt;Primitive types in patterns: plugs a gap in pattern matching. 7/10&lt;/p&gt;
    &lt;p&gt;Markdown javadoc comments: Does anyone really care about this? 1/10&lt;/p&gt;
    &lt;head rend="h2"&gt;Java 24 – 2024&lt;/head&gt;
    &lt;p&gt;The main feature here from my point of view as a crypto geek is the addition of post-quantum cryptography in the form of the newly standardised ML-KEM and ML-DSA algorithms, and support in TLS.&lt;/p&gt;
    &lt;head rend="h2"&gt;Java 25 – 2025&lt;/head&gt;
    &lt;p&gt;Stable values: this is essentially support for lazily-initialised final variables. Lazy initialisation is often trickier than it should be in Java, so this is a welcome addition. Remembering Alice ML, I wonder if there is some overlap between the proposed StableValue and a Future? 7/10?&lt;/p&gt;
    &lt;p&gt;PEM encoding of cryptographic objects is welcome from my point of view, but someone will need to tell me why this is not just &lt;code&gt;key/cert.getEncoded(“PEM”)&lt;/code&gt;? Decoding support is useful though, as that’s a frequent reason I have to grab Bouncy Castle still. 7/10&lt;/p&gt;
    &lt;p&gt;Well, that brings us pretty much up to date. What do you think? Agree, disagree? Are you a passionate defender of streams or Java modules? Have at it in the comments.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://neilmadden.blog/2025/09/12/rating-26-years-of-java-changes/"/><published>2025-10-11T18:29:27+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45551504</id><title>Microsoft only lets you opt out of AI photo scanning 3x a year</title><updated>2025-10-12T00:48:36.647522+00:00</updated><content>&lt;doc fingerprint="27d138be7ae4dabe"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Microsoft's OneDrive Begins Testing Face-Recognizing AI for Photos (for Some Preview Users) (microsoft.com) 46&lt;/head&gt;
    &lt;p&gt;And...&lt;/p&gt;
    &lt;p&gt;"You can only turn off this setting 3 times a year."&lt;/p&gt;
    &lt;p&gt;If I moved the slidebar for that setting to the left (for "No"), it moved back to the right, and said "Something went wrong while updating this setting." (Apparently it's not one of those three times of the year.)&lt;/p&gt;
    &lt;p&gt;The feature is already rolling out to a limited number of users in a preview, a Microsoft publicist confirmed to Slashdot. (For the record, I don't remember signing up for this face-recognizing "preview".) But there's a link at the bottom of the screen for a "Microsoft Privacy Statement" that leads to a Microsoft support page, which says instead that "This feature is coming soon and is yet to be released." And in the next sentence it's been saying "Stay tuned for more updates" for almost two years...&lt;/p&gt;
    &lt;p&gt;A Microsoft publicist agreed to answer Slashdot's questions...&lt;/p&gt;
    &lt;p&gt;Slashdot: What's the reason OneDrive tells users this setting can only be turned off 3 times a year? (And are those any three times — or does that mean three specific days, like Christmas, New Year's Day, etc.)&lt;/p&gt;
    &lt;p&gt;[Microsoft's publicist chose not to answer this question.]&lt;/p&gt;
    &lt;p&gt;Slashdot: If I move the slidebar to the left (for "No"), it moves back to the right, and says "Something went wrong while updating this setting." So is it correct to say that there's no way for users to select "No" now?&lt;/p&gt;
    &lt;p&gt;Microsoft: We haven't heard about the experience you are having with toggling, but our Microsoft contacts would like to investigate why this is happening for you. Can you share what type of device you are using, so we can put you in touch with the right team?&lt;/p&gt;
    &lt;p&gt;Slashdot: Is this feature really still "coming soon"? Can you give me more specific details on when "soon" will be?&lt;/p&gt;
    &lt;p&gt;Microsoft: This feature is currently rolling out to limited users in a preview so we can learn and improve. We have nothing more to share at this time.&lt;/p&gt;
    &lt;p&gt;Slashdot: I want to confirm something about how this feature is "yet to be released." Does this mean that currently OneDrive is not (and has never) used AI to "recognize" faces in photos?&lt;/p&gt;
    &lt;p&gt;Microsoft: Privacy is built into all Microsoft OneDrive experiences. Microsoft OneDrive services adhere to the Microsoft Privacy Statement and follow Microsoft's compliance with General Data Protection Regulation and the Microsoft EU Data Boundary.&lt;/p&gt;
    &lt;p&gt;Slashdot: Some privacy advocates prefer "opt-in" features, but it looks like here OneDrive is planning a (limited) opt-out feature. What is the reasoning for going with opt-out rather than opt-in?&lt;/p&gt;
    &lt;p&gt;Microsoft: Microsoft OneDrive inherits privacy features and settings from Microsoft 365 and SharePoint, where applicable.&lt;/p&gt;
    &lt;p&gt;Slashdot also spoke to EFF security/privacy activist Thorin Klosowski, who expressed concerns. "Any feature related to privacy really should be opt-in and companies should provide clear documentation so its users can understand the risks and benefits to make that choice for themselves."&lt;/p&gt;
    &lt;p&gt;Microsoft's "three times a year" policy also seemed limiting to Klosowski. "People should also be able to change those settings at-will whenever possible because we all encounter circumstances were we need to re-evaluate and possibly change our privacy settings."&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://hardware.slashdot.org/story/25/10/11/0238213/microsofts-onedrive-begins-testing-face-recognizing-ai-for-photos-for-some-preview-users"/><published>2025-10-11T18:36:51+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45552049</id><title>A Guide for WireGuard VPN Setup with Pi-Hole Adblock and Unbound DNS</title><updated>2025-10-12T00:48:36.375162+00:00</updated><content>&lt;doc fingerprint="b678e959f90921c1"&gt;
  &lt;main&gt;&lt;p&gt;I’ve used Mullvad as my VPN provider for a few years. Their service is good, they provide keys for 5 devices, rely on the Wireguard protocol, and offer alternative configurations as well. Despite that, my needs have changed and I wanted to be able to have granular control over DNS queries and the ability to connect my various devices on my network through simple addresses, such as http://emby.home.server. Enter Wireguard, Pi-Hole and Unbound.&lt;/p&gt;&lt;p&gt;Of course, there are many tools that might achieve the same results with a lot less work, such as Tailscale. I would reach devices on the network easily, one of the nodes could be set to act as an exit node and you could also apply network-wide ad-block with Next DNS (I believe that is, at the time of writing, the solution they offer). Outside of Tailscale there are other fully open source alternatives, such as Headscale, Nebula and others. However, I chose to set up my own Wireguard network, as it gave me the opportunity to learn a lot and helped me better understand everything involved in the process.&lt;/p&gt;&lt;p&gt;For devices, I have the following configuration, and the below IPs will be used throughout the article. They represent a starting point, but should be sufficient for anyone to build their network according to their needs.&lt;/p&gt;&lt;code&gt;10.10.10.1&lt;/code&gt;) - running on a VPS (Virtual Private Server) from a provider that meets my requirements (close physical proximity, high bandwidth and at least 1 Gbps transfer speeds)&lt;code&gt;10.10.10.10&lt;/code&gt;) - running on my home network and providing various service (media server, personal cloud, torrent client, etc.)&lt;code&gt;10.10.10.11&lt;/code&gt;) - running on my home network&lt;code&gt;10.10.10.12&lt;/code&gt;) - running on my home network, but might connect through outside networks (i.e.: coffee shops, libraries, airports, etc.)&lt;code&gt;10.10.10.100&lt;/code&gt;) - running on my home network, mobile data, mobile data roaming or public networks (coffee shops, libraries, airports, etc.)&lt;code&gt;10.10.10.101&lt;/code&gt;) - same as above&lt;p&gt;I will use a hub and spoke network topology where the VPS will act as the in-between for all inter-device communications on the network as well as the exit node for all Internet-facing communications. For example, if my Desktop connects to the Internet it will do so by navigating to the VPS, which will then resolve the query and block any domains that are on the block list. If it wants to connect to the Home Server it will do so without the VPS, since the Home Server and Desktop are on the same local network, connected via a router. If Smartphone 1 wants to connect to the Internet, the query is resolved by the VPS, which will block any domains on the block list. If it wants to connect to the Home Server, the VPS will receive the request and route it to the IP of the Home Server. It’s important to keep in mind that the contents of the request become visible as they leave the Wireguard tunnel between Smartphone 1 and the VPS. On the VPS contents will be encrypted again and then forwarded to the Home Server.&lt;/p&gt;&lt;p&gt;I chose a VPS provider that is physically near my location, has minimum 1 Gbps speed (up/down), unlimited bandwidth and good performance while gaming (i.e.: specifically no packet loss). There are many options; you can check resources like LowEndBox and VPSBenchmarks to get an idea of price ranges, availability and regions. For your own needs, start by defining a set of requirements and see which of these match your needs.&lt;/p&gt;&lt;p&gt;My only recommendation is to initially opt for a cheaper provider, that offers hourly billing and understand the end-to-end-process before committing. Keep in mind that various providers have different configurations and settings, so setups can vary.&lt;/p&gt;&lt;p&gt;If you are completely new to setting up servers using a command line interface (CLI) only, I recommend checking out the Digital Ocean cloud computing series. Most providers have their own guides, so for specific steps check their respective documentation. Same goes for any chosen OS. For this guide I will be using Ubuntu 24.04. For the remainder of the article I will assume you are running an OS with access to a terminal that can send commands to a CLI that can generate SSH keys, establish SSH connections and can run a text editor that you can use to create, edit, update and delete text files. I will be using BASH/Fish with &lt;code&gt;nano&lt;/code&gt; as my text editor.&lt;/p&gt;&lt;p&gt;To start, create an SSH key on your local machine and upload it to your chosen cloud provider. This first step already greatly improves security of the VPS and simplifies connection to it as you don’t need to remember a password.&lt;/p&gt;&lt;code&gt;# Run inside your terminal on your client machine 
# https://www.man7.org/linux/man-pages/man1/ssh-keygen.1.html
$ ssh-keygen -t ed25519
&lt;/code&gt;&lt;p&gt;Follow the on-screen prompts to provide a name, set a passphrase (recommended) and have the private and public files created at the given path in the prompt.&lt;/p&gt;&lt;p&gt;Next, copy the contents of the .pub file, or the file itself to your chosen VPS provider’s server setup page. Complete the initial server setup as per your provider’s steps. Once ready, you will have a public IPv4 address to which you can connect (this is a requirement in this guide, and some providers might only offer IPv6 addresses on their cheapest VPS). A connection can now be established with:&lt;/p&gt;&lt;code&gt;# replace root with the username your provider created by default; could be ubuntu as well
# replace 123.123.123.123 with the IP address of your VPS
$ ssh -i .ssh/article root@123.123.123.123
&lt;/code&gt;&lt;p&gt;You are now connected to the server, as the &lt;code&gt;root&lt;/code&gt; user. If you connected via another user that has &lt;code&gt;sudo&lt;/code&gt; access, then prepend all commands with &lt;code&gt;sudo&lt;/code&gt;. If I write &lt;code&gt;ufw status numbered&lt;/code&gt; use &lt;code&gt;sudo ufw status numbered&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;First, make sure you have &lt;code&gt;unattended-upgrades&lt;/code&gt; installed on your VPS.&lt;/p&gt;&lt;code&gt;$ apt install unattended-upgrades
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
unattended-upgrades is already the newest version (2.9.1+nmu4ubuntu1).
0 upgraded, 0 newly installed, 0 to remove and 29 not upgraded.
&lt;/code&gt;&lt;p&gt;Next, prepare the settings you want to apply. Because the application reads through different configuration files in order, I made a copy of /etc/apt/apt.conf.d/50unattended-upgrades and called it /etc/apt/apt.conf.d/51unattended-upgrades. This means that even after an update, while the original file could be overwritten, my settings will persist. The main settings I changed in my copy are found below. Read through the different options and adjust to your preferences.&lt;/p&gt;&lt;code&gt;# Make a copy and give a new name
$ cp /etc/apt/apt.conf.d/50unattended-upgrades /etc/apt/apt.conf.d/51unattended-upgrades
# Edit the file 
$ nano /etc/apt/apt.conf.d/51unattended-upgrades
# File contents below are edited for brevity
Unattended-Upgrade::Allowed-Origins {
        "${distro_id}:${distro_codename}";
        "${distro_id}:${distro_codename}-security";
        // Extended Security Maintenance; doesn't necessarily exist for
        // every release and this system may not have it installed, but if
        // available, the policy for updates is such that unattended-upgrades
        // should also install from here by default.
        "${distro_id}ESMApps:${distro_codename}-apps-security";
        "${distro_id}ESM:${distro_codename}-infra-security";
        "${distro_id}:${distro_codename}-updates";
};

// Remove unused automatically installed kernel-related packages
// (kernel images, kernel headers and kernel version locked tools).
Unattended-Upgrade::Remove-Unused-Kernel-Packages "true";

// Do automatic removal of newly unused dependencies after the upgrade
Unattended-Upgrade::Remove-New-Unused-Dependencies "true";

// Do automatic removal of unused packages after the upgrade
// (equivalent to apt-get autoremove)
Unattended-Upgrade::Remove-Unused-Dependencies "true";

// Automatically reboot *WITHOUT CONFIRMATION* if
// the file /var/run/reboot-required is found after the upgrade
Unattended-Upgrade::Automatic-Reboot "true";

// If automatic reboot is enabled and needed, reboot at the specific
// time instead of immediately
// Default: "now" - change this to whatever works for you!
Unattended-Upgrade::Automatic-Reboot-Time "00:00";
&lt;/code&gt;&lt;p&gt;Next, update the periodic file to provide &lt;code&gt;unattended-upgrades&lt;/code&gt; with the intervals at which it checks for updates and runs the clean command. Create a new file at /etc/apt/apt.conf.d/21periodic (you can name it anything else, as these are parsed in order, so 22periodic, 23…). The below are the values for the purposes of this server:&lt;/p&gt;&lt;code&gt;APT::Periodic::Update-Package-Lists "1";
APT::Periodic::Download-Upgradeable-Packages "1";
APT::Periodic::AutocleanInterval "7";
APT::Periodic::Unattended-Upgrade "1";
&lt;/code&gt;&lt;p&gt;Number 1 means the option is enabled and runs daily. Zero means the option is turned off. Any other number shows the frequency with which the step is completed (e.g.: 7 - the action is performed once a week).&lt;/p&gt;&lt;p&gt;Run &lt;code&gt;unattended-upgrade -d&lt;/code&gt; to quickly debug your current app configuration and confirm the settings you have setup so far.&lt;/p&gt;&lt;p&gt;Next off, I configure the system hostname. The hostname can then be used as part of a fully qualified domain name for the system (e.g.: hostname = pihole, fqdn = pihole.psyonik.com)&lt;/p&gt;&lt;code&gt;# you can check current hostname with
hostname
# set hostname to something else
hostnamectl set-hostname pihole
# edit hosts file to create static associations between IP addresses and hostnames/domains
# which the system prioritizes before DNS for name resolution
nano /etc/hosts
# The contents of the file might be similar, adjust them to match what I have below 
# replacing &amp;lt;pihole&amp;gt; and &amp;lt;psyonik&amp;gt; with your settings
127.0.0.1 localhost
127.0.0.1 pihole
127.0.1.1 pihole.psyonik.com pihole
# replace the below address with your VPS actual IP address
123.123.123.113 pihole.psyonik.com pihole
&lt;/code&gt;&lt;p&gt;I check if the hostname is setup correctly by calling &lt;code&gt;ping pihole.psyonik.com&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;As mentioned previously, I connect to the server by using &lt;code&gt;ssh -i .ssh/article root@123.123.123.123&lt;/code&gt;. The command passes in the path to the SSH key I use, sets the username I want to connect as, and sets the IP address of the server. By default, the SSH service runs on port 22. This is not explicitly stated in the connection command, it is just assumed as being set as such. One of the first things I like to change on a new VPS is the default port to something else. On Ubuntu 24.04 you will have this option in the sshd_config file, but the actual port used will be picked up from the &lt;code&gt;ssh.socket&lt;/code&gt; service. This can be confusing, as the setting is still present in the sshd_config file.&lt;/p&gt;&lt;p&gt;The first step is to make a copy of the configuration file and then edit the following lines in the original file.&lt;/p&gt;&lt;code&gt;$ cp /etc/ssh/sshd_config /etc/ssh/sshd_config.1
# Edit the SSH configuration - disable root login, password auth, enable pubkey login
$ nano /etc/ssh/sshd_config

# Find and edit the below values in the file
AddressFamily inet # SSH Service will only listen to IPv4 addresses
PermitRootLogin no # disable root login
PubkeyAuthentication yes # only allow SSH key-based authentication  
AuthorizedKeysFile .ssh/authorized_keys # file that contains allowed public keys  
PasswordAuthentication no # do not allow password auth  
PermitEmptyPasswords no # do not allow empty passwords 
ChallengeResponseAuthentication no # Specifies if challenge-response auth is allowed
UsePAM no # disable authentication through PAM (Pluggable Authentication Module)
&lt;/code&gt;&lt;p&gt;Next, I create a folder and a configuration file to change the SSH port for the &lt;code&gt;ssh.socket&lt;/code&gt;.&lt;/p&gt;&lt;code&gt;$ mkdir /etc/systemd/system/ssh.socket.d
# Create and add the values into the listen.conf file
$ nano /etc/systemd/system/ssh.socket.d/listen.conf
[Socket]
ListenStream=
ListenStream=12345
# Save and exit file
$ systemctl daemon-reload
# Restart the SSH Socket
$ systemctl restart ssh.socket
# Restart the SSH Service
$ systemctl restart ssh.service
# Check the status of the service after restart; you should see the new port number displayed
$ systemctl status ssh.service
# Output for my configuration
● ssh.service - OpenBSD Secure Shell server
     Loaded: loaded (/usr/lib/systemd/system/ssh.service; disabled; preset: enabled)
     Active: active (running) since Sun 1999-01-01 12:01:04 UTC; 5s ago
TriggeredBy: ● ssh.socket
       Docs: man:sshd(8)
             man:sshd_config(5)
    Process: 12928 ExecStartPre=/usr/sbin/sshd -t (code=exited, status=0/SUCCESS)
   Main PID: 12929 (sshd)
      Tasks: 1 (limit: 4543)
     Memory: 1.2M (peak: 1.3M)
        CPU: 36ms
     CGroup: /system.slice/ssh.service
             └─12929 "sshd: /usr/sbin/sshd -D [listener] 0 of 10-100 startups"

Jan 01 12:01:04 pihole systemd[1]: Starting ssh.service - OpenBSD Secure Shell server...
Jan 01 12:01:04 pihole sshd[12929]: Server listening on :: port 12345.
Jan 01 12:01:04 pihole systemd[1]: Started ssh.service - OpenBSD Secure Shell server.
&lt;/code&gt;&lt;p&gt;Now, in a new tab, if I try to connect with the previous command, this should not work. I would now also need to specify the port, but if I try to connect as &lt;code&gt;root&lt;/code&gt; this should get denied.&lt;/p&gt;&lt;code&gt;$ ssh -i .ssh/article -p 12345 root@123.123.123.123 # this should return an error
&lt;/code&gt;&lt;p&gt;While keeping my session open, I will create a new user, add the user to &lt;code&gt;sudo&lt;/code&gt;, copy the .ssh/authorized_keys file over to the new users home directory and try to connect with that user. I then complete the remaining configuration using &lt;code&gt;root&lt;/code&gt;.&lt;/p&gt;&lt;code&gt;# Create a new user and follow on-screen prompts
$ adduser psyonik
# Add user to sudo
$ usermod -aG sudo psyonik
# Copy authorizedkeys file to the new user folder and change ownership 
$ cp -r .ssh/ /home/psyonik/
$ chown psyonik:psyonik -R /home/psyonik/.ssh
# Ensure ownership is set correctly
$ ls -alh /home/psyonik/.ssh/
total 12K
drwx------ 2 psyonik psyonik 4.0K Jan  1 12:09 .
drwxr-x--- 3 psyonik psyonik 4.0K Jan  1 12:09 ..
-rw------- 1 psyonik psyonik  162 Jan  1 12:09 authorized_keys
&lt;/code&gt;&lt;p&gt;When I connect from my local machine to the VPS using this new username, the connection should be established correctly.&lt;/p&gt;&lt;code&gt;$ ssh -i .ssh/article -p 12345 psyonik@123.123.123.123
&lt;/code&gt;&lt;p&gt;This completes the setup of SSH. Next up, we setup the firewall. If you encounter issues, you can use &lt;code&gt;ssh -vvv&lt;/code&gt; to have verbose logging enabled during the SSH connection. This should highlight any issues such as access denied, incorrect keys or anything else of the sort.&lt;/p&gt;&lt;p&gt;Although the server can now do automatic updates, doesn’t rely on the default port to allow incoming connections and has &lt;code&gt;root&lt;/code&gt; login disabled, we still need to configure the firewall. There are various ways to do this, but I like to use &lt;code&gt;ufw&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Uncomplicated firewall is a great way to setup some basic rules and security on the server. I allow only 2 ports open on IPv4 on the server at this stage, enable logging, and deny all other incoming requests while allowing all outgoing requests.&lt;/p&gt;&lt;code&gt;# the SSH port should be replaced with whatever you wish to use instead
$ ufw allow from 0.0.0.0/0 to any port 12345 comment "SSH"
$ ufw allow from 0.0.0.0/0 to any port 51820 comment "Wireguard"
# block all incoming connections except those going to the SSH/Wireguard ports
$ ufw default deny incoming
# allow 
$ ufw default allow outgoing
# enable logging
$ ufw logging on
# enable ufw and display the rules in a numbered list
$ ufw enable
$ ufw status numbered
Status: active

     To                         Action      From
     --                         ------      ----
[ 1] 12345                      ALLOW IN    Anywhere                   # SSH
[ 2] 51820                      ALLOW IN    Anywhere                   # Wireguard
&lt;/code&gt;&lt;p&gt;Each time you edit a rule you can call &lt;code&gt;ufw reload&lt;/code&gt; to refresh the new rules. You can then check the status of the rules with &lt;code&gt;ufw status numbered&lt;/code&gt;. This also gives you an easy way to delete any unused rules.&lt;/p&gt;&lt;p&gt;Lastly, there is one more change that can be done so that the server will not respond to ping requests.&lt;/p&gt;&lt;code&gt;sudo nano /etc/ufw/before.rules
# Look for the following row and change from ACCEPT to DROP
-A ufw-before-input -p icmp --icmp-type echo-request -j DROP
&lt;/code&gt;&lt;p&gt;This completes a basic server configuration for this machine. Other settings can be changed and if I were to do this often, I would opt for a script file as a minimum, or ideally a cloud-init script. Feel free to explore that once you feel comfortable with this setup.&lt;/p&gt;&lt;p&gt;Next, I’ll setup Wireguard, Pi-Hole and Unbound.&lt;/p&gt;&lt;p&gt;Unlike traditional VPN services, where a central server acts as a point of control and has clients, Wireguard uses the concept of peers. Peers can connect directly to each other, thus allowing for lower latency for connections and removing the single point of failure of a server. However, for my purposes, I configured one of the peers, in Wireguard parlance, to act as a server due to the hub-and-spoke network topology I employ in this setup. As such, the VPS will be referred to as the ‘server’ and all other devices as ‘clients’.&lt;/p&gt;&lt;p&gt;I will expand this article once I have a configuration in which clients that need to be able to connect to each other will do so directly, without a VPS in-between.&lt;/p&gt;&lt;p&gt;Next, to setup each client and the server, I need to create keys for all devices and create configuration files using these keys. The below steps will create public, private and pre-shared keys for all devices.&lt;/p&gt;&lt;code&gt;# Install or make sure Wireguard is installed
$ apt install wireguard

# Create a folder to keep client keys and one for client configurations
# This is not strictly needed, as once clients are added, the keys can be removed from the server
# Except for the preshared keys 
$ mkdir /etc/wireguard/clients
$ mkdir /etc/wireguard/clientconfs

# Create VPS keys - key, pub, psk
$ wg genkey &amp;gt; vps.key # I use .key to show we're dealing with a private key
$ wg pubkey &amp;lt; vps.key &amp;gt; vps.pub # I use .pub to show this is a public key

$ wg genkey &amp;gt; /etc/wireguard/clients/homeserver.key
$ wg pubkey &amp;lt; /etc/wireguard/clients/homeserver.key &amp;gt; /etc/wireguard/clients/homeserver.pub
$ wg genpsk &amp;gt; /etc/wireguard/clients/homeserver.psk # I use .psk to show this is a preshared key

$ wg genkey &amp;gt; /etc/wireguard/clients/desktop.key
$ wg pubkey &amp;lt; /etc/wireguard/clients/desktop.key &amp;gt; /etc/wireguard/clients/desktop.pub
$ wg genpsk &amp;gt; /etc/wireguard/clients/desktop.psk

$ wg genkey &amp;gt; /etc/wireguard/clients/laptop.key
$ wg pubkey &amp;lt; /etc/wireguard/clients/laptop.key &amp;gt; /etc/wireguard/clients/laptop.pub
$ wg genpsk &amp;gt; /etc/wireguard/clients/laptop.psk

$ wg genkey &amp;gt; /etc/wireguard/clients/mobile1.key
$ wg pubkey &amp;lt; /etc/wireguard/clients/mobile1.key &amp;gt; /etc/wireguard/clients/mobile1.pub
$ wg genpsk &amp;gt; /etc/wireguard/clients/mobile1.psk

$ wg genkey &amp;gt; /etc/wireguard/clients/mobile2.key
$ wg pubkey &amp;lt; /etc/wireguard/clients/mobile2.key &amp;gt; /etc/wireguard/clients/mobile2.pub
$ wg genpsk &amp;gt; /etc/wireguard/clients/mobile2.psk
&lt;/code&gt;&lt;p&gt;With the keys created, I prepare the VPS configuration file. Each peer that wants to join the VPN needs its own configuration file. In Wireguard, the configuration file is split into two main sections: &lt;code&gt;[Interface]&lt;/code&gt; and &lt;code&gt;[Peer]&lt;/code&gt;. Each configuration file can contain zero, one or multiple peers that I can connect to. If I have one peer in my config, I’m connecting to that one device, if I have more, it means I can directly connect to all those peers.&lt;/p&gt;&lt;p&gt;In this case, the server will have multiple peers while the peers will each have a single peer: the server. The term interface is used because Wireguard creates a new network interface which is named according to the name of the configuration file.&lt;/p&gt;&lt;p&gt;Following this, I create a new configuration file named wg0, which means that once I start Wireguard with this configuration, I will have a new network interface called &lt;code&gt;wg0&lt;/code&gt;. This can be renamed to anything else.&lt;/p&gt;&lt;code&gt;$ nano /etc/wireguard/wg0.conf
# Next I will populate the file with the below information
[Interface]
# Replace the contents with the value you got in vps.key
PrivateKey = QELYVAdCPCaVQfoyE3KrADMZBBdoNotUseAsKeyThisIsMine+eWUA=
Address = 10.10.10.1/24 # the IP address the server will have inside the wg0 network 
ListenPort = 51820 # the port on which the server will listen for incoming connections
SaveConfig = true # https://manpages.debian.org/unstable/wireguard-tools/wg-quick.8.en.html
PreUp = sysctl -w net.ipv4.ip_forward=1 # enables ipv4 forwarding on the VPS
# PreUp = sysctl -w net.ipv6.conf.all.forward=1 if you use ipv6 instead
&lt;/code&gt;&lt;p&gt;At this stage I have the base for my Wireguard network on the server. But because I want to hide traffic from peers behind the server’s IP address I need to apply masquerading to the incoming requests from the clients, a function similar to NAT. To achieve this, we need to get the data coming in on the network interface Wireguard creates out to the network interface of the server and allow the server to alter the source IP.&lt;/p&gt;&lt;p&gt;The first step is finding the default network interface on the server, so I run the below command:&lt;/p&gt;&lt;code&gt;$ ip route list default
# Output could be something like: 
# default via 123.123.123.123 dev eth0 proto dhcp src 123.123.123.123 metric 100
&lt;/code&gt;&lt;p&gt;The important bit here is to see the device (in my sample above it is &lt;code&gt;dev eth0&lt;/code&gt;). This means I want to route requests that I receive out &lt;code&gt;eth0&lt;/code&gt; and apply masquerading, which makes it look like a request received from a smartphone originated from the server.&lt;/p&gt;&lt;p&gt;I will go back to the configuration and continue applying a few more settings to enable masquerading out the &lt;code&gt;eth0&lt;/code&gt; interface (again, this can be different on your machine) and allow traffic that comes in on the &lt;code&gt;wg0&lt;/code&gt; interface (named after the configuration file) to go out on &lt;code&gt;eth0&lt;/code&gt;.&lt;/p&gt;&lt;code&gt;$ nano /etc/wireguard/wg0.conf
# Next I will populate the file with the below information
[Interface]
PrivateKey = QELYVAdCPCaVQfoyE3KrADMZBBdoNotUseAsKeyThisIsMine+eWUA=
Address = 10.10.10.1/24 # the IP address the server will have inside the wg0 network 
ListenPort = 51820 # the port on which the server will listen for incoming connections
SaveConfig = true # https://manpages.debian.org/unstable/wireguard-tools/wg-quick.8.en.html
PreUp = sysctl -w net.ipv4.ip_forward=1 # enables ipv4 forwarding on the VPS
# PreUp = sysctl -w net.ipv6.conf.all.forward=1 if you use ipv6 instead
PostUp= ufw route allow in on wg0 out on eth0
PostUp= iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE
PreDown= ufw route delete allow in on wg0 out on eth0
PreDown= iptables -t nat -D POSTROUTING -o eth0 -j MASQUERADE
&lt;/code&gt;&lt;p&gt;This completes the configuration of the Wireguard interface. After exiting and saving the file, I enable a &lt;code&gt;systemd&lt;/code&gt; service that follows the name of the config file/interface and check to make sure it runs.&lt;/p&gt;&lt;code&gt;# Enable Wireguard service at system startup 
$ systemctl enable wg-quick@wg0.service
# Start Wireguard service
$ systemctl start wg-quick@wg0.service
# Check service status 
$ systemctl status wg-quick@wg0.service
● wg-quick@wg0.service - WireGuard via wg-quick(8) for wg0
     Loaded: loaded (/usr/lib/systemd/system/wg-quick@.service; enabled; preset: enabled)
     Active: active (exited) since Sun 2024-01-01 12:12:42 UTC; 1min 29s ago
       Docs: man:wg-quick(8)
             man:wg(8)
             https://www.wireguard.com/
             https://www.wireguard.com/quickstart/
             https://git.zx2c4.com/wireguard-tools/about/src/man/wg-quick.8
             https://git.zx2c4.com/wireguard-tools/about/src/man/wg.8
    Process: 13987 ExecStart=/usr/bin/wg-quick up wg0 (code=exited, status=0/SUCCESS)
   Main PID: 13987 (code=exited, status=0/SUCCESS)
        CPU: 325ms

Jan 01 12:12:41 pihole wg-quick[13997]: net.ipv4.ip_forward = 1
Jan 01 12:12:41 pihole wg-quick[13987]: [#] ip link add wg0 type wireguard
Jan 01 12:12:41 pihole wg-quick[13987]: [#] wg setconf wg0 /dev/fd/63
Jan 01 12:12:41 pihole wg-quick[13987]: [#] ip -4 address add 10.10.10.1/24 dev wg0
Jan 01 12:12:41 pihole wg-quick[13987]: [#] ip link set mtu 1420 up dev wg0
Jan 01 12:12:41 pihole wg-quick[13987]: [#] ufw route allow in on wg0 out on eth0
Jan 01 12:12:41 pihole wg-quick[14017]: Rule added
Jan 01 12:12:41 pihole wg-quick[14017]: Rule added (v6)
Jan 01 12:12:42 pihole wg-quick[13987]: [#] iptables -t nat -I POSTROUTING -o eth0 -j MASQUERADE
Jan 01 12:12:42 pihole systemd[1]: Finished wg-quick@wg0.service - WireGuard via wg-quick(8) for wg0.
# Check wireguard status directly and verify the key
$ wg
interface: wg0
  public key: qUo/OLUZadoNotUseAsKeyThisIsMineokE6T3pYl0c=
  private key: (hidden)
  listening port: 51820
# Show network interfaces
$ ip a
1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever  
2: eth0: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000
    link/ether 1f:1f:1f:1f:1f:1f brd ff:ff:ff:ff:ff:ff
    inet 123.123.123.123/32 metric 100 scope global dynamic eth0
       valid_lft 60719sec preferred_lft 60719sec
4: wg0: &amp;lt;POINTOPOINT,NOARP,UP,LOWER_UP&amp;gt; mtu 1420 qdisc noqueue state UNKNOWN group default qlen 1000
    link/none 
    inet 10.10.10.1/24 scope global wg0
       valid_lft forever preferred_lft forever
&lt;/code&gt;&lt;p&gt;After this, I setup the first peer - remember, I need a configuration file for this. The private key field holds the private key of the peer, the pre-shared key is the value of the pre-shared key I created for the peer, and the public key section in the file holds the public key of the VPS.&lt;/p&gt;&lt;code&gt;# Just naming it dwg0 as for me it will be easy to see that this is the desktop config
# To bring this interface up on my desktop I would use `sudo wg-quick up dwg0`
$ nano dwg0.conf
[Interface]
# Replace with the private key file contents for THIS particular device, in my case desktop
PrivateKey = uIwALjBCXdoNotUseAsKeyThisIsMine1Vb/kI3XGXk=
# The address I had mentioned initially in the topology overview
Address = 10.10.10.11/32
# The VPS will act as a DNS server for this device
DNS = 10.10.10.1

[Peer]
# Replace with the public key file contents for your VPS, in my case vps.pub
PublicKey = qUo/OLUdoNotUseAsKeyThisIsMineWgokE6T3pYl0c=
# Replace with the value you got in your .psk file for THIS particular device, in my case desktop
PresharedKey = pMTDdoNotUseAsKeyThisIsMineeaGilNZRO9OGy3Q=
# https://www.procustodibus.com/blog/2021/03/wireguard-allowedips-calculator/#background
AllowedIPs = 0.0.0.0/0
# Replace 123.123.123.123:51820 with the IP of your VPS and the port you used if different
Endpoint = 123.123.123.123:51820
PersistentKeepalive = 25 # https://wiki.archlinux.org/title/WireGuard#Unable_to_establish_a_persistent_connection_behind_NAT_/_firewall
&lt;/code&gt;&lt;p&gt;At this stage, if I enable the configuration on my desktop, it will not connect to the server. First, I need to add the desktop as a peer of the VPS. I can do that by either bringing down the &lt;code&gt;wg0&lt;/code&gt; interface or by using the &lt;code&gt;wg set&lt;/code&gt; command. I use the latter, which edits the /etc/wireguard/wg0.conf file and adds a new entry under the &lt;code&gt;[Peer]&lt;/code&gt; section.&lt;/p&gt;&lt;code&gt;# The key that I provide to the command is the public key of the desktop 
$ wg set wg0 peer KKdoNotUseAsKeyThisIsMineRFCyZVorUW8m7E/3S0= preshared-key /etc/wireguard/clients/desktop.psk allowed-ips 10.10.10.11
# Check the peer has been added to the interface
$ wg
interface: wg0
  public key: qUo/OLUdoNotUseAsKeyThisIsMineWgokE6T3pYl0c=
  private key: (hidden)
  listening port: 51820

peer: KKdoNotUseAsKeyThisIsMineRFCyZVorUW8m7E/3S0=
  preshared key: (hidden)
  allowed ips: 10.10.10.11/32
&lt;/code&gt;&lt;p&gt;This completes this part of the setup. To use the server to resolve DNS queries and block ads, I setup Pi-Hole and Unbound next.&lt;/p&gt;&lt;p&gt;I installed Pi-Hole using the automated script from their website. I won’t go into the details of piping a script to bash directly, but for those of you who wish to dissect the script or use alternative methods, you can clone the repo and run the script that way, or you can download the installer file and run it. You can also use Docker to deploy it, but I won’t cover those in this guide.&lt;/p&gt;&lt;code&gt;$ curl -sSL https://install.pi-hole.net | bash
&lt;/code&gt;&lt;p&gt;You’ll be greeted by a step by step graphical install. Assuming you’re using a VPS with a dedicated IP, you can confirm that you do have a Static IP and select Continue. You’ll next be asked for the interface, at this stage select &lt;code&gt;wg0&lt;/code&gt; as we want Pi-Hole to run for those connected on the Wireguard interface.&lt;/p&gt;&lt;p&gt;For upstream DNS provider I selected Quad9 for now. Next you’ll be asked to confirm using the suggested block list, select Yes and continue the install. Select Yes for the admin interface and select Yes to install &lt;code&gt;lighttpd&lt;/code&gt; and the required PHP modules (adjust if you don’t wish to use these). It is up to yourself if you wish to enable query logging or not. You can turn this off later on, if you enable it now. Select the privacy level for the query log.&lt;/p&gt;&lt;p&gt;Once the install finishes you should see the IP on which Pi-Hole is running, the interface on which it is running and the password. Make sure to save the password.&lt;/p&gt;&lt;p&gt;With both the server and the client configured and Pi-Hole installed, we’re close to turning on the client. Before that, there is one thing to consider. The client configuration sets the server as the DNS resolver. However, the server currently only allows access to port 12345 (SSH) and port 51820 for Wireguard. Ubuntu has &lt;code&gt;systemd-resolved&lt;/code&gt; using port 53 for DNS resolution, but access to this port is currently restricted, so I’ll add one more rule to UFW on the server, to allow requests to port 53 coming from the Wireguard IP range I defined earlier.&lt;/p&gt;&lt;p&gt;I also want to be able to configure Pi-Hole once I bring the Wireguard interface up, so for that I need to tell UFW to allow connections to port 80 (HTTP) on the Wireguard IP range.&lt;/p&gt;&lt;code&gt;# Allow requests to port 53 from any ip in the 10.10.10.1 - 10.10.10.255 range
$ ufw allow from 10.10.10.0/24 to any port 53
# Allow requests to port 80 from any ip in the 10.10.10.1 - 10.10.10.255 range
$ ufw allow from 10.10.10.0/24 to any port 80
# Reload firewall to apply settings
$ ufw reload
# Check rules are showing up
$ ufw status numbered
&lt;/code&gt;&lt;p&gt;At this point, I can copy the contents of the client config to my desktop, bring up the interface on the desktop (using &lt;code&gt;wg-quick&lt;/code&gt;) and navigate to http://10.10.10.1/admin and change any settings on the Pi-Hole instance running on the VPS server. But before doing that, I want to have Unbound setup on the server too, and then bring up the interface on my desktop and change the DNS resolver on Pi-Hole from Quad9 to Unbound.&lt;/p&gt;&lt;p&gt;Unbound is a recursive, caching DNS resolver. During the Pi-Hole setup, I had picked an upstream DNS resolver, but the issue is, from a privacy standpoint, that the upstream server (in this case Quad9) knows my queries and the queries of everyone using VPS as their DNS, because it’s not VPS resolving the query, it just forwards it to the upstream provider. More information on this, along with the Unbound configuration and setup can be found on the Pi-Hole website.&lt;/p&gt;&lt;p&gt;In this guide I’ll just walk you through the setup of Unbound and the configuration I use. To start off, I’ll install unbound and configure it.&lt;/p&gt;&lt;code&gt;$ apt install unbound
&lt;/code&gt;&lt;p&gt;Chances are that at this point when you check the status of the Unbound service, it shows as failed. The reason is that you have already a resolver running on port 53. To get around this, I setup a new configuration for Unbound in line with the one provided in the Pi-Hole documentation, with a few tweaks to match my VPS and IP ranges.&lt;/p&gt;&lt;p&gt;I create the new configuration file at /etc/unbound/unbound.conf.d/pi-hole.conf, and more details on options and how to change them can be found at the Unbound configuration documentation.&lt;/p&gt;&lt;code&gt;$ nano /etc/unbound/unbound.conf.d/pi-hole.conf
# Add the below to the configuration file; adjust according to your needs and server capabilities  
server:
  num-threads: 4

  # Enable operation information logging; up to 5
  verbosity: 1

  # Listen to queries on all interfaces
  interface: 127.0.0.1
  port: 5353

  # Disable ipv6
  do-ip6: no

  # IP range authorized to send queries to DNS
  access-control: 0.0.0.0/0 refuse
  access-control: 127.0.0.1/32 allow
  access-control: 10.10.10.0/24 allow

  # Hide id.server and hostname.bind
  hide-identity: yes

  # Hide version.server and version.bind
  hide-version: yes

  # Hide addresses on the private network
  private-address: 10.0.0.0/8

  # A total number of unwanted replies is kept track of; when reached cache is cleared to prevent DNS Poisoning
  unwanted-reply-threshold: 10000000

  # Because my server has low traffic/usage I enable prefetch; this adds load but cache elements are prefetched before expiry
  prefetch: yes
  prefetch-key: yes

  # Add minimum cache lifetime in seconds
  cache-min-ttl: 1800
  cache-max-ttl: 14400

  # Secure DNS and use DNSSEC
  harden-glue: yes
  harden-dnssec-stripped: yes
&lt;/code&gt;&lt;p&gt;Next, I restart the service and run a test query to make sure it’s resolving it.&lt;/p&gt;&lt;code&gt;$ systemctl restart unbound.service
$ systemctl status unbound.service
$ dig news.ycombinator.com/ @127.0.0.1 -p 5353
; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.18.28-0ubuntu0.24.04.1-Ubuntu &amp;lt;&amp;lt;&amp;gt;&amp;gt; news.ycombinator.com/ @127.0.0.1 -p 5353
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NXDOMAIN, id: 31572
;; flags: qr rd ra ad; QUERY: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 1232
;; QUESTION SECTION:
;news.ycombinator.com/.		IN	A

;; AUTHORITY SECTION:
.			3563	IN	SOA	a.root-servers.net. nstld.verisign-grs.com. 2024120801 1800 900 604800 86400

;; Query time: 18 msec
;; SERVER: 127.0.0.1#5353(127.0.0.1) (UDP)
;; WHEN: Sun Jan 01 12:14:17 UTC 2024
;; MSG SIZE  rcvd: 125
&lt;/code&gt;&lt;p&gt;The query should now be resolved by Unbound as the &lt;code&gt;SERVER&lt;/code&gt; in the response gives &lt;code&gt;127.0.0.1#5353&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;With this, we’re almost done. I now turn on the Wireguard interface on the desktop as I have the configuration file prepared previously, and I added the client to the VPS’s list of peers.&lt;/p&gt;&lt;p&gt;This will disconnect the current SSH connection, but assuming all previous steps went OK, I am able to reconnect to the VPS server and also access http://10.10.10.1/admin to reach the admin interface for the current Pi-Hole installation.&lt;/p&gt;&lt;code&gt;# On my desktop I will enable the dwg0 service
$ sudo systemctl enable wg-quick@dwg0.service
# Start the dwg0 service which will create the dwg0 interface on my desktop 
# (I could also name this wg0, I just opted to rename it 
# to make it easier when working with multiple configs)
$ sudo systemctl start wg-quick@dwg0.service
# Check the status of the service and make sure it is active and running
$ sudo systemctl status wg-quick@dwg0.service
&lt;/code&gt;&lt;p&gt;Now I can go to the admin interface of the Pi-Hole installation I had setup earlier and change the DNS provider from Quad9 to the instance of Unbound that runs on port 5353 on the VPS.&lt;/p&gt;&lt;p&gt;Once I log into the interface using the password displayed at the end of the Pi-Hole installation, I next go to Settings, select the DNS tab and here uncheck the Quad9 section in the Upstream DNS Servers part of the page. Then, I check the Custom 1 (IPv4) checkbox and enter &lt;code&gt;127.0.0.1#5353&lt;/code&gt;, make sure that Bind only to interface wg0 is selected and then Save the settings.&lt;/p&gt;&lt;p&gt;Now I can visit DNS Leak Test and run an extended test. If everything runs as expected, the only result here should be the IP address of the VPS. If you are getting different servers showing up it means you are leaking DNS queries. There are a multitude of reasons for this, on Ubuntu derived distributions it might be down to Network Manager changing your DNS settings or you having different DNS servers configured which override the Wireguard DNS server.&lt;/p&gt;&lt;p&gt;This can be difficult to debug and it could take some time for you to chase it down, but some tips to get started would be to run &lt;code&gt;resolvectl dns&lt;/code&gt; which will show you the global DNS (if this was configured in /etc/systemd/resolved.conf) or if a global DNS is picked up from somewhere else like /run/systemd/resolve/resolved.conf or Network Manager. For Network Manager, check /etc/NetworkManager/system-connections and look for the name of your connection. The file in there will have a setting in the &lt;code&gt;[ipv4]&lt;/code&gt; section called &lt;code&gt;dns&lt;/code&gt;. This supports multiple DNS settings separated by semicolons.&lt;/p&gt;&lt;p&gt;There are further steps you could take and I recommend the following article by Andrea Corbellini. You can also check to see if it was indeed Pi-Hole that listened and resolved your query by running &lt;code&gt;lsof -i -P -n | grep LISTEN&lt;/code&gt; on the VPS and check to see if pihole is actually listening on port 53 or if there is another resolver that is using the port and responding to your queries.&lt;/p&gt;&lt;p&gt;While getting a configuration file from the VPS to a device with a keyboard is simple, Android and iOS devices aren’t that straightforward. To get a configuration over to a mobile device, I use &lt;code&gt;qrencode&lt;/code&gt;. The application creates a QR Code from a given configuration file.&lt;/p&gt;&lt;code&gt;# Install qrencode
$ apt install qrencode
# Create a QR Code from the previously created dwg0.conf file  
$ qrencode -t ansiutf8 &amp;lt; dwg0.conf
# If the file was created by root and you are now signed in with a non-root account then use 
$ sudo sh -c 'qrencode -t ansiutf8 &amp;lt; dwg0.conf'
&lt;/code&gt;&lt;p&gt;The above command outputs a QR code to the terminal directly, which you can then scan with the Wireguard application on iOS or Android. Don’t forget that you need different configuration files for each new device you wish to add, so don’t try to reuse the same configuration file across multiple devices.&lt;/p&gt;&lt;p&gt;One more goal that I wanted to achieve was that of being able to access my home server resources while I’m not on my home network. The final setup is a bit clunky, but it works for now. I’d be curious about any improvements any of you out there can think of. Feel free to e-mail me with any alternatives or ideas on the vpn email address for this domain.&lt;/p&gt;&lt;p&gt;First, go to the Pi-Hole administrator website, select Local DNS and then DNS Records. Then, add a number of domain/IP addresses to cover your use cases. While the VPN IP address range covers &lt;code&gt;10.10.10.0/24&lt;/code&gt; the local home network IP address range covers &lt;code&gt;192.168.1.0/24&lt;/code&gt;. Assuming these IP ranges, I ended up with the following list, assuming the home server runs on &lt;code&gt;10.10.10.10&lt;/code&gt; within the Wireguard network and &lt;code&gt;192.168.1.10&lt;/code&gt; on the local network:&lt;/p&gt;&lt;code&gt;192.168.1.10&lt;/code&gt;&lt;code&gt;10.10.10.10&lt;/code&gt;&lt;code&gt;192.168.1.10&lt;/code&gt;&lt;code&gt;10.10.10.10&lt;/code&gt;&lt;p&gt;The home server is running a reverse proxy in front of these services, so each call gets resolved by the reverse proxy to their respective services. The VPS is already allowing traffic to port &lt;code&gt;80&lt;/code&gt;, but if you are using HTTPS on any of these services, you would also need a rule to allow traffic to port &lt;code&gt;443&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Lastly, any request coming in on the VPS &lt;code&gt;wg0&lt;/code&gt; interface needs to be forwarded out on the same interface, so a couple more &lt;code&gt;ufw&lt;/code&gt; rules need added to allow any device to easily reach these services whether they sit on the same LAN, or connect via Wireguard.&lt;/p&gt;&lt;code&gt;# Set the following ufw rules on the VPS - this allows forwarding of requests received on wg0 on wg0
$ ufw route allow in on wg0 out on wg0
# Set the rule to allow HTTPS traffic if your services are running with HTTPS
$ ufw allow from 10.10.10.0/24 to any port 443
$ ufw reload
&lt;/code&gt;&lt;p&gt;An easier way to persist the rules is to add them to the &lt;code&gt;PostUp&lt;/code&gt; and &lt;code&gt;PreDown&lt;/code&gt; sections of the Wireguard configuration file. The above settings also mean that if I’m on my home network, I can use emby.home.server and access my home server with its local IP address and when I’m outside my home network, then I can access it via emby.travel.server. It’s not ideal, but this seemed to work most consistently across various OSes, devices and apps.&lt;/p&gt;&lt;p&gt;With this change, the travel or external domain should work, but the local one might not, depending on the device you try to access it from. That is because the &lt;code&gt;AllowedIPs&lt;/code&gt; setting tells Wireguard to route all traffic through the tunel, but the IP 192.168.1.10 is not reachable through the Wireguard network, as it is an internal network IP address. On most Linux distributions, there are default rules in place to route traffic to these internal or default IP ranges. On Linux you can check the default routes with &lt;code&gt;ip route show table main&lt;/code&gt;. On other devices, you need to adjust the &lt;code&gt;AllowedIPs&lt;/code&gt; setting, so that all traffic, except for that particular IP range, is routed through the Wireguard tunnel.&lt;/p&gt;&lt;p&gt;I used this Wireguard AllowedIPs Calculator to update the IP range for my mobile devices. By setting Allowed IPs on the page to &lt;code&gt;0.0.0.0/0&lt;/code&gt; and the Disallowed IPs to &lt;code&gt;192.168.1.0/24&lt;/code&gt;, I would get a list of &lt;code&gt;AllowedIPs&lt;/code&gt; like such:&lt;/p&gt;&lt;code&gt;AllowedIPs = 0.0.0.0/1, 128.0.0.0/2, 192.0.0.0/9, 192.128.0.0/11, 192.160.0.0/13, 192.168.0.0/24, 192.168.2.0/23, 192.168.4.0/22, 192.168.8.0/21, 192.168.16.0/20, 192.168.32.0/19, 192.168.64.0/18, 192.168.128.0/17, 192.169.0.0/16, 192.170.0.0/15, 192.172.0.0/14, 192.176.0.0/12, 192.192.0.0/10, 193.0.0.0/8, 194.0.0.0/7, 196.0.0.0/6, 200.0.0.0/5, 208.0.0.0/4, 224.0.0.0/3
&lt;/code&gt;&lt;p&gt;On mobile clients you can also go directly into the Wireguard app, click on edit and select the checkbox Exclude private IPs then save the changes to the configuration file. With these changes you should now be able to reach applications on your local network or through the tunnel using the above domain names.&lt;/p&gt;&lt;p&gt;If after the setup, you notice that your connection isn’t that great or that you see a significant drop in connection performance, you can test the connection speed between the VPS and a client that is running Linux using &lt;code&gt;iperf3&lt;/code&gt;. This is a good way to check if your speed is slow because of the VPS or some other factors. I would recommend using the Cloudflare Speedtest on a client to get an idea of your current speed without the Wireguard tunnel enabled.&lt;/p&gt;&lt;p&gt;You can then use the &lt;code&gt;speedtest-cli&lt;/code&gt; application on the VPS to test its upload and download connection and then use &lt;code&gt;iperf3&lt;/code&gt; to test the speed of the connection between client and VPS to find any bottlenecks.&lt;/p&gt;&lt;p&gt;On the VPS I install &lt;code&gt;iperf3&lt;/code&gt; and allow connections on port &lt;code&gt;5201&lt;/code&gt; to run the speed test. I then start &lt;code&gt;iperf3&lt;/code&gt; in server mode, which sets it up to listen for incoming requests.&lt;/p&gt;&lt;code&gt;# Install iperf3 if not already installed
$ apt install iperf3
# Allow connections on port 5201 from the Wireguard IP range
$ ufw allow from 10.10.10.0/24 to any port 5201
$ ufw reload
# Start iperf3 in server mode
$ iperf3 --server
# Install iperf3 on client too and then start a test by defining the ip of the VPS on the Wireguard network
# The below command will test the upload speed from client to VPS
$ iperf3 --client 10.10.10.1
Connecting to host 10.10.10.1, port 5201
[  5] local 10.10.10.11 port 56590 connected to 10.10.10.1 port 5201
[ ID] Interval           Transfer     Bitrate         Retr  Cwnd
[  5]   0.00-1.00   sec  1.21 MBytes  10.1 Mbits/sec    0   81.5 KBytes       
[  5]   1.00-2.00   sec  2.39 MBytes  20.1 Mbits/sec    0    195 KBytes       
[  5]   2.00-3.00   sec  2.94 MBytes  24.7 Mbits/sec    0    331 KBytes       
[  5]   3.00-4.00   sec  3.37 MBytes  28.3 Mbits/sec    0    484 KBytes       
[  5]   4.00-5.00   sec  3.86 MBytes  32.4 Mbits/sec    0    640 KBytes       
[  5]   5.00-6.00   sec  2.45 MBytes  20.5 Mbits/sec    0    786 KBytes       
[  5]   6.00-7.00   sec  3.86 MBytes  32.4 Mbits/sec    0    945 KBytes       
[  5]   7.00-8.00   sec  3.50 MBytes  29.3 Mbits/sec    0   1.08 MBytes       
[  5]   8.00-9.00   sec  3.75 MBytes  31.5 Mbits/sec    0   1.23 MBytes       
[  5]   9.00-10.00  sec  2.50 MBytes  21.0 Mbits/sec    0   1.35 MBytes       
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-10.00  sec  29.8 MBytes  25.0 Mbits/sec    0             sender
[  5]   0.00-10.61  sec  27.6 MBytes  21.8 Mbits/sec                  receiver

iperf Done.
# The below command will test the download speed from VPS to the client
$ iperf3 --client 10.10.10.1 --reverse
Connecting to host 10.10.10.1, port 5201
Reverse mode, remote host 10.10.10.1 is sending
[  5] local 10.10.10.11 port 34346 connected to 10.10.10.1 port 5201
[ ID] Interval           Transfer     Bitrate
[  5]   0.00-1.00   sec  3.50 MBytes  29.4 Mbits/sec                  
[  5]   1.00-2.00   sec  7.35 MBytes  61.7 Mbits/sec                  
[  5]   2.00-3.00   sec  11.7 MBytes  98.0 Mbits/sec                  
[  5]   3.00-4.00   sec  23.6 MBytes   198 Mbits/sec                  
[  5]   4.00-5.00   sec  39.6 MBytes   332 Mbits/sec                  
[  5]   5.00-6.00   sec  44.4 MBytes   372 Mbits/sec                  
[  5]   6.00-7.00   sec  40.6 MBytes   340 Mbits/sec                  
[  5]   7.00-8.00   sec  40.5 MBytes   340 Mbits/sec                  
[  5]   8.00-9.00   sec  38.4 MBytes   322 Mbits/sec                  
[  5]   9.00-10.00  sec  40.8 MBytes   342 Mbits/sec                  
- - - - - - - - - - - - - - - - - - - - - - - - -
[ ID] Interval           Transfer     Bitrate         Retr
[  5]   0.00-10.05  sec   294 MBytes   245 Mbits/sec    0             sender
[  5]   0.00-10.00  sec   290 MBytes   244 Mbits/sec                  receiver

iperf Done.
&lt;/code&gt;&lt;p&gt;In the above tests I can see that my upload speed to this test VPS is between 10 and 30 Mbps and my download speed is between 30 and 340 Mbps. After completing the test, I can stop the server on the VPS and even close down the port. For more information on tuning the performance of Wireguard, I recommend the detailed article on the Pro Custodibus website.&lt;/p&gt;&lt;p&gt;At this stage, you should have your VPS setup, your first two devices connected and you should also be able to access any remote resources.&lt;/p&gt;&lt;p&gt;Most of this could not be done without the articles below. These were great resources and I would greatly recommend them for further reading of a particular topic:&lt;/p&gt;&lt;p&gt;There are plenty more websites that I read through for quick fixes and I apologise for not recording those consistently, as the information there helped me fix some local issues on my Pop OS desktop.&lt;/p&gt;&lt;p&gt;In any case, I hope this article was useful and helped you setup your own Wireguard VPN server, access resources on your home network and provide network-wide ad-block for all your devices. By using a VPS you can generally cover a variety of devices for around $10 a month. This beats a lot of the providers out there and it does so while offering you full control over blocking lists and resources on the network.&lt;/p&gt;&lt;p&gt;If this guide was useful in any way, please make sure to support the Wireguard project, the Pi-Hole project, Unbound and all the other open source projects that allow us to gain some modicum of control over out digital lives!&lt;/p&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://psyonik.tech/posts/a-guide-for-wireguard-vpn-setup-with-pi-hole-adblock-and-unbound-dns/"/><published>2025-10-11T19:41:27+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45552199</id><title>Indonesia says 22 plants in industrial zone contaminated by caesium 137</title><updated>2025-10-12T00:48:36.088934+00:00</updated><content>&lt;doc fingerprint="681d756cc5947fe"&gt;
  &lt;main&gt;
    &lt;p&gt;JAKARTA, Oct 8 (Reuters) - Indonesia's special task force on radioactive contamination has found traces of Caesium 137 at 22 production facilities in an industrial zone near Jakarta, officials said on Wednesday.&lt;/p&gt;
    &lt;p&gt;The contamination was first detected in a batch of shrimp shipped to the United States in August by a local company, PT Bahari Makmur Sejahtera (BMS).&lt;/p&gt;
    &lt;p&gt;Sign up here.&lt;/p&gt;
    &lt;p&gt;Indonesia then conducted sweeping radiation scans of the Modern Cikande Industrial Estate, where BMS was based.&lt;/p&gt;
    &lt;p&gt;"The shrimp production facility (BMS), has conducted independent decontamination and has been declared safe by the nuclear agency," task force spokesperson Bara Hasibuan told journalists.&lt;/p&gt;
    &lt;p&gt;The task force did not give the names of the 21 other production facilities, but said they will immediately undergo decontamination procedures conducted by Indonesia's nuclear agency.&lt;/p&gt;
    &lt;p&gt;The Modern Cikande estate, 68 km from Jakarta, covers 3,175 hectares and contains more than 270 local and foreign companies in sectors ranging from food processing to automotive components, according to its website.&lt;/p&gt;
    &lt;p&gt;Caesium 137 is a hazardous radioactive isotope that usually enters the environment as a result of nuclear testing or after accidents like Chernobyl and Fukushima, according to the website of the United States' Food and Drug Administration.&lt;/p&gt;
    &lt;p&gt;Indonesia has no nuclear weapons or nuclear power plants, suggesting that the caesium 137 entered Indonesia from overseas.&lt;/p&gt;
    &lt;p&gt;"The government has decided to tighten restrictions on scrap metal imports, meaning that the Ministry of Environment will not issue recommendations for scrap metal imports," Hasibuan said.&lt;/p&gt;
    &lt;p&gt;The task force has also designated the site of a scrap metal factory, PT PMT (Peter Metal Technology), as an isolation facility to store goods found to have been contaminated with Caesium 137.&lt;/p&gt;
    &lt;p&gt;Reporting by Dewi Kurniawati; Editing by David Stanway&lt;/p&gt;
    &lt;p&gt;Our Standards: The Thomson Reuters Trust Principles.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.reuters.com/sustainability/boards-policy-regulation/indonesia-says-22-plants-industrial-zone-near-jakarta-contaminated-by-caesium-2025-10-08/"/><published>2025-10-11T19:59:14+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45552578</id><title>Japan's summers have lengthened by 3 weeks over 42 years, say resaerchers</title><updated>2025-10-12T00:48:35.147126+00:00</updated><content>&lt;doc fingerprint="5b0f81d601e06d5d"&gt;
  &lt;main&gt;
    &lt;p&gt;TOKYO - Japanese summers have lengthened by about three weeks over the 42 years from 1982 to 2023, a university research group said Saturday.&lt;/p&gt;
    &lt;p&gt;The Mie University group said that due to climate change, the number of days classified as summer has increased each year, while the length of winter has remained relatively unchanged, and the average durations of spring and fall have shortened.&lt;/p&gt;
    &lt;p&gt;The group cited "the rise in sea surface temperatures due to global warming" as the main factor, warning that "the trend toward longer summers and winters will intensify if warming continues."&lt;/p&gt;
    &lt;p&gt;The Japan Meteorological Agency defines summer as lasting from June to August, without specifying a temperature range.&lt;/p&gt;
    &lt;p&gt;The researchers included second-year master's student Mao Takikawa and Yoshihiro Tachibana, a professor of the university's Department of Environmental Science and Technology.&lt;/p&gt;
    &lt;p&gt;In their research, the group divided the area from Japan's northernmost main island of Hokkaido to the southernmost one of Kyushu, including surrounding ocean areas, into about 200 zones and used the agency's observation data to calculate the average annual maximum temperature over 42 years.&lt;/p&gt;
    &lt;p&gt;They defined a "summer benchmark" for each zone based on its temperature range, using the agency's data on annual highs and lows to determine which days qualified as summer days.&lt;/p&gt;
    &lt;p&gt;For example, if the highest temperature in an area was 20 C and the lowest was 0 C, the benchmark was 15 C -- one quarter down from the maximum -- with days above that level counted as summer.&lt;/p&gt;
    &lt;p&gt;They further analyzed 42 years of temperature data on an annual basis.&lt;/p&gt;
    &lt;p&gt;The group defined the first day of summer in a year as the date when the summer threshold was exceeded, and the ending date on the last day it was exceeded, with the number of days in between constituting the summer period.&lt;/p&gt;
    &lt;p&gt;Looking at the average across approximately 200 zones over the 42-year period, the start date of summer advanced by about 12.6 days, while the end date was delayed by about 8.8 days.&lt;/p&gt;
    &lt;p&gt;The summer period extended by approximately 21.4 days, the group said.&lt;/p&gt;
    &lt;p&gt;In 1982, the summer period lasted 92 days, from June 29 to Sept. 28. However, by 2023, it had lengthened to 121 days, running from June 11 to Oct. 9.&lt;/p&gt;
    &lt;p&gt;According to Tachibana, warm air flowing in from the Asian continent once cooled over the oceans surrounding the Japanese archipelago, causing temperatures to rise gradually from spring to summer. However, in recent years, rising sea surface temperatures have prevented this cooling, resulting in an earlier onset of summer.&lt;/p&gt;
    &lt;p&gt;Sea surface temperatures remain persistently high, making it difficult for temperatures to drop and delaying the end of summer, Tachibana said.&lt;/p&gt;
    &lt;p&gt;Meanwhile, little change has been observed for the winter period. This is believed to be due to the continued influence of strong cold waves moving in from the continent.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://english.kyodonews.net/articles/-/62626"/><published>2025-10-11T20:51:03+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45552768</id><title>ElementaryOS – Thoughtful, capable and ethical replacement for Windows/macOS</title><updated>2025-10-12T00:48:34.914252+00:00</updated><content>&lt;doc fingerprint="245a93784f3636a5"&gt;
  &lt;main&gt;&lt;p&gt;The thoughtful, capable, and ethical replacement for Windows and macOS&lt;/p&gt;&lt;p&gt; elementary OS 8.0.2 Circe (3.3 GB)&lt;lb/&gt; Recommended System Specs | FAQ &lt;/p&gt;&lt;p&gt;Carefree because you're cared for. OS 8 brings a Secure Session that ensures apps respect your privacy and require your consent, a brand new Dock with productive multitasking and window management features, and empowers our diverse community through Inclusive Design.&lt;/p&gt;Read the Announcement&lt;p&gt;Get free and paid apps on AppCenter, the open, pay-what-you-can app store for indie developers. Each app has been reviewed and curated by elementary to ensure a native, privacy-respecting, and secure experience.&lt;/p&gt;&lt;p&gt;Stay productive and focused with Multitasking View, Picture-in-Picture, Do Not Disturb, and more. Or keep work out of sight when watching videos or playing games.&lt;/p&gt;&lt;p&gt;Workspaces help organize your work by task. Keep work and play separate, but just one swipe or tap away.&lt;/p&gt;&lt;p&gt;Whether you’re watching a movie, game, or terminal process, Picture-in-Picture helps keep tabs on one thing while working on another.&lt;/p&gt;&lt;p&gt;Tune everything else out to stay focused on your work, or keep notifications at bay while watching a movie. Do Not Disturb stops notifications in their tracks.&lt;/p&gt;&lt;p&gt;elementary OS comes with a carefully considered set of apps that cater to everyday needs so you can spend more time using your computer and less time cleaning up bloatware.&lt;/p&gt;&lt;p&gt;Organize and listen to your music. Browse by album, use lightning-fast search, and build playlists of your favorites.&lt;/p&gt;&lt;p&gt;Surf the web with a fast &amp;amp; lightweight web browser. Web lets you use modern sites and web apps while protecting your privacy and being lighter on battery life.&lt;/p&gt;&lt;p&gt;Manage multiple accounts quickly and effortlessly with conversation-based email, fast-as-you-type search, new email notifications, and more.&lt;/p&gt;&lt;p&gt;Import, organize, and edit photos. Make a slideshow. Share with online services.&lt;/p&gt;&lt;p&gt;Smart and simple video viewing with a library, thumbnail previews on the seekbar, playlists, subtitle support, smart fullscreen, and the ability to resume what was last playing.&lt;/p&gt;&lt;p&gt;Easily view and create events. Sync with online accounts.&lt;/p&gt;&lt;p&gt;The smart pathbar makes it easy to browse with breadcrumbs, search, or path completion. Quickly navigate with the column view and enjoy browser-class tabs with smart features like tab history.&lt;/p&gt;&lt;p&gt;Switchable color schemes designed to prevent eye strain, browser-class tabs with history and smart naming, task-completion notifications, natural copy &amp;amp; paste, backlog search, paste protection, and more. Who says you can’t teach an old app new tricks?&lt;/p&gt;&lt;p&gt;Tailor-made with autosaving, project folders, Git integration, smart whitespace, EditorConfig support, Mini Map, Vala symbols, and extensions like Markdown shortcuts and Vim Emulation. Code will be the last editor you’ll ever need.&lt;/p&gt;&lt;p&gt;Easily snap pictures or video from your built-in or USB webcam.&lt;/p&gt;&lt;p&gt;Set per-user time limits for weekdays, weekends, or both.&lt;/p&gt;&lt;p&gt;Manage allowed websites. Rules affect all apps for the chosen user, even if they use a different web browser.&lt;/p&gt;&lt;p&gt;Choose just which apps are safe for you or your child to access. Plus, optionally allow access with your password.&lt;/p&gt;&lt;p&gt;Our platform itself is entirely open source, and it’s built upon a strong foundation of Free &amp;amp; Open Source software (like GNU/Linux). Plus, we actively collaborate within the ecosystem to improve it for everyone.&lt;/p&gt;Explore Our Stack&lt;p&gt;When source code is available to audit, anyone—a security researcher, a concerned user, or an OEM shipping the OS on their hardware—can verify that the software is secure and not collecting or leaking personal information.&lt;/p&gt;Security Notices&lt;p&gt;Whether your app could benefit from a new system feature or API or you’re curious as to how an existing feature or design pattern was built, you have complete access to our source code. Copy it, learn from it, remix it, modify it, and redistribute it.&lt;/p&gt;Get Involved&lt;p&gt;elementary OS is designed to be easy to understand and pick up as a new user. But that doesn’t mean it’s dumbed down; powerful, customizable keyboard shortcuts ensure you’ll stay productive whether it’s your first day or your thousandth.&lt;/p&gt;&lt;p&gt;Your data always belongs to you, and only you. We don’t make advertising deals or collect sensitive personal data. We’re funded directly by our users paying what they want for elementary OS and apps on AppCenter. And that’s how it should be.&lt;/p&gt;Our Privacy Policy&lt;p&gt;elementary OS helps you keep tabs on what apps are up to. When an app is using your microphone, we display an indicator to let you know. When an app is using a lot of energy, we tell you in your power indicator.&lt;/p&gt;&lt;p&gt;When an app wants access to your data or devices, it has to ask up front. We review all AppCenter apps to ensure they’re properly using permissions—and you can always revoke them yourself in System Settings.&lt;/p&gt;&lt;p&gt;elementary OS automatically keeps your temporary and trashed files tidied up. Not only does this keep your device’s storage free, it can help ensure your private data doesn’t come back to haunt you.&lt;/p&gt;&lt;p&gt;The thoughtful, capable, and ethical replacement for Windows and macOS&lt;/p&gt;Pay What You Can&lt;p&gt;Choose a Download&lt;/p&gt;&lt;p&gt;Download from a localized server or by magnet link. For help and more info, see the installation guide&lt;/p&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://elementary.io/"/><published>2025-10-11T21:14:40+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45552913</id><title>The story of X-Copy on the Amiga</title><updated>2025-10-12T00:48:33.351157+00:00</updated><content>&lt;doc fingerprint="b6241159c22326dd"&gt;
  &lt;main&gt;
    &lt;p&gt;The most popular Amiga program ever? We had a chat with Christian Bartsch who worked at X-Copy publisher Cachet.&lt;/p&gt;
    &lt;p&gt;We have talked a lot about Amiga games here on Spillhistorie.no, but if we had to guess, there was one program that was far more popular on the platform than almost any game released for it: X-Copy. This program allowed Amiga users to copy entire disks, even if those disks didn’t use standard AmigaDOS – and thus, it quickly became the favorite tool of those who wanted to copy games. In other words, the vast majority of Amiga owners, who typically owned a small handful of original games and several disk boxes full of pirated games.&lt;/p&gt;
    &lt;p&gt;The slightly ironic part is that X-Copy was also a commercial product, which, of course, was heavily pirated. The program came from the German company Cachet Software, and we have spoken with Cachet veteran Christian Bartsch – who now works with the KryoFlux system used for digitizing and preserving disks – about the history of X-Copy. We have also learned exciting details about Cachet Software and how KryoFlux came into existence.&lt;/p&gt;
    &lt;p&gt;How was X-Copy originally created, and what was the intention behind the program?&lt;/p&gt;
    &lt;p&gt;X-Copy Professional was originally programmed by Frank Neuhaus and Hans Georg Berg for Cachet Software, but there is a long story which has never before been documented in detail.&lt;/p&gt;
    &lt;p&gt;Frank and Hans Georg released a single floppy copier named White Lightning, and right after it a program called Fast Lightning through Vesalia Computer in 1988. Vesalia was run by the Does family, by the way, they kept the spirit for decades and were in business until recently.&lt;/p&gt;
    &lt;p&gt;Unfortunately Vesalia did not realise the need and potential of a decent copy program. They only sold about 500 copies of it in total. Frank and Hans Georg were very disappointed about the low sales performance.&lt;/p&gt;
    &lt;p&gt;At the same time Claus Peter Lippert (Cachet’s CEO) was working for American publisher Discovery Software as their head of European Operations. Also being a journalist and a member of CRM Crew, he not only knew the best Amiga experts but also understood the market.&lt;/p&gt;
    &lt;p&gt;When Discovery Software shut down their operations, all their European developers – including Søren «Sodan» Grønbench and Torben Bakager Larsen (who Lippert had found and brought to Discovery with their game Sword Of Sodan) – were in danger of not getting paid the money Discovery owed them for their work. Frank Georg, who was the programmer of the game Zoom at the time, was also in danger of having his work exploited.&lt;/p&gt;
    &lt;p&gt;Because of this, Claus Peter Lippert used all the money of the European branch of Discovery, which he collected from the sales of Arkanoid Amiga to Rushware and others, to pay out Frank and other European programmers affiliated with Discovery Software, and quit working for them. Then the German Amiga «elite» had a weekend meeting in Ludwigshafen at the Heinrich Pesch Haus and discussed what to do.&lt;/p&gt;
    &lt;p&gt;Claus sponsored the whole thing through his company Cachet Software, which he had founded a few years before and it was agreed that Cachet would, amongst games, also acquire the copyrights of X-Copy Amiga, since he guaranteed that he could market X-Copy Amiga in the way it deserved.&lt;/p&gt;
    &lt;p&gt;Claus knew what he was doing because Discovery Software had also been the home of Marauder II, a very successful Amiga copier. X-Copy Amiga was the perfect tool to kick Marauder II and other programs out of the market. While Marauder II cracked software and (illegally) modified the copy protection (by altering the disk’s contents during or after replication), X-Copy Amiga on the other hand never did that or needed to do that. It was designed to keep the protection in place, so that people who bought an original could play the game with their backup. And it had a superior copy speed over anything else. At that time, no other program came anywhere near that. And we had the famous Boing! sound.&lt;/p&gt;
    &lt;p&gt;But there was more. Whilst Frank and Hans Georg were absolute programming wizards, Claus Peter Lippert was good in design and marketing. He knew what the users needed, and X-Copy Amiga was shaped to that need. It got several copy modes and various abilities and above all, it was designed to be user friendly. Cachet created the word «usability» for that, meaning «start it and be able to use it right away.»&lt;/p&gt;
    &lt;p&gt;What initially was just a copier – X-Copy – then turned into a suite of tools. When Frank and HG as well as Richard left, Holger Vocke took over X-Copy development and Alf Meier maintained Cyclone [more on this and other Cachet products later]. In 1994, X-Copy TNG was the world market leader in sales numbers of all Amiga Utilities and it remained so until Commodore chairman Irving Gould managed to sink Commodore and its flagship the Amiga… which was not easy, but he managed.&lt;/p&gt;
    &lt;p&gt;There are several more interesting stories about and around X-Copy Amiga which can be told some other time, like: Christmas and Bavarian versions of X-Copy; how Cachet became a founding member of the VUD in Germany and ELSPA in the UK; the buggy fake called «X-Copy III» (which would have gotten a Danish guy in legal trouble if he had not admitted to it and Cachet Software accepted his apology and let him go); the full story why and how Richard Aplin joined the crew and Cyclone was integrated (with the help of a lot of German beer and a fast ride in a Porsche on the German Autobahn); how Simon Meldrum and Chris Allen from the UK came on board and finally how and why the decision was made to publish the source code of X-Copy Amiga many years later.&lt;/p&gt;
    &lt;p&gt;But let’s not forget: X-Copy‘s original authors were also famous for a game, Pinball Wizard. While its graphics were underwhelming, it had a certain appeal. But the major reason it was so well known among German users was Commodere‘s starter package PowerPack for the Amiga 500. It came with a couple of disks with games and tools, among them Pinball Wizard and a quiz game called Quiwi. And then there’s a running gag, which has never been addressed in public before: There is a tagline underneath the X-Copy logo in the graphics saying «Maraude it professional» and after today you might be able to guess why we put it and how cold that was served.&lt;/p&gt;
    &lt;p&gt;How did you get involved with X-Copy and Cachet?&lt;/p&gt;
    &lt;p&gt;I was 14 when I bought my own Amiga (coming from the Commodore 64 which was pre-owned by my dad) and I ended up dissecting the disks that came with it to get more insight into how things worked. Remember this were the late 80s, early 90s and we did, at best, have bulletin board systems (you‘d be charged for the phone connection by the minute) but not the internet. So access to information was limited. I had a few friends in the «scene», so step by step I made some progress figuring out how the Amiga would boot disks and what protections did.&lt;/p&gt;
    &lt;p&gt;The Action Replay II and later the III were just really awesome tools as they allowed you to break into everything by looking at memory and registers and understanding what the machine did. I am saying this knowing that Claus won’t be happy – because this piece of hardware was distributed by Datel, who’d try to piggyback on the success of X-Copy by putting out programs like Burst Nibbler. But the Action Replay for the Amiga was simply the best there was and, being developed by two German guys (Olaf Boehm and Jörg Zanger), just ended up at the wrong company – from my point of view. Unlike versions for other computers, this version worked perfectly and you could exit from the machine language monitor and the computer would pick up where it left off.&lt;/p&gt;
    &lt;p&gt;I liked games, but I was a fan of how they were presented in their original form. What I did not like were alterations to the game, for instance the «cracked by Quartex» message which could be littered all over the game. Don’t get me wrong – I wasn’t pointing fingers. I just wanted to be able to experience games unaltered, but at the same time the protection was a problem and creating backups was an annoyance.&lt;/p&gt;
    &lt;p&gt;A friend gifted me his original X-Copy, and I started playing around with X-Copy and Cyclone. At one point I started writing down and cataloging my findings in an Amiga Guide document. This was an early markup language similar to HTML, so I could make it interactive, with a table of contents and links cross-referencing things. It grew into a small database about protections, games and how to copy them.&lt;/p&gt;
    &lt;p&gt;I sent this in to Cachet a few times and at one point, I got invited to the Amiga Fair in Frankfurt. I was still underage and not allowed to drive, so my dad drove me to the venue. On site I was told that what I did was appreciated and that I’d now work for the company. I’d support customers and help implement new features based on customer feedback. To make this happen, Cachet had just released the X-Copy book and I was already named as the support representative, and my (mother‘s) phone number had been published as well.&lt;/p&gt;
    &lt;p&gt;If you find this sounds a little out of the ordinary and wild then you are absolutely right. I was just 16, nobody had asked for permission to publish my name, address or phone number. It just happened. I was given my first salary in cash, and my mum got a new phone number (paid for by the company). The address where I was born has been documented for eternity in this very book.&lt;/p&gt;
    &lt;p&gt;Looking back it still puzzles me how Claus pulled this off, but he had a certain pragmatic way of dealing with things. Today‘s world is different – the computer scene back then was still in its infancy and so were the methods. Claus always treated me well and send me around the world, including Cachet‘s headquarters – Anguilla Software International – on the Caribbean island of the same name. Cachet also had rented a house near the company HQ, where people would come, pick a room and start working on projects. I’d just hop on a train, go to southern Germany and make some money during school vacations for instance. On the weekends, we sometimes had Claus’s Porsche to drive around (me only riding shotgun or – worst case – back seat, but still fun) and go to the cinema for instance. So yes, it’s been a «ride» but it started my career. I would not be where I am today without Cachet.&lt;/p&gt;
    &lt;p&gt;Can you tell us a bit more about Cachet and their products?&lt;/p&gt;
    &lt;p&gt;Cachet mainly sold X-Copy &amp;amp; Tools back in the day (as a suite of tools), and a few other products. Among the latter were things like the Mark II Sound System (by Darius Zendeh) and later, for the PC, X-Tracker – both sound editors in the style of Soundtracker.&lt;/p&gt;
    &lt;p&gt;The X-Copy &amp;amp; Tools package included X-Copy Professional II and over the years varying additional programs. Cyclone (by Richard Aplin) was a hardware copier with a small dongle that would attach to the external drive and create working clones of many protections. CV Parameter Copier (by Thomas Lopatic &amp;amp; Rene Feibicke) was exactly this – a copier with parameters that would copy certain programs early versions of X-Copy could not replicate on its own.&lt;/p&gt;
    &lt;p&gt;X-Lent (originally written by Volker Roth, and later maintained by Holger Vocke) would copy files via two panes like Total Commander. QED (by Matthias Kegelmann) was a text editor which would sync its scrolling to the vertical blank, hence making browsing large documents a breeze. X-It (again by Holger) would allow users to encrypt (and decrypt) floppy disks via password and bit rotation. X-Press (by Hans Jürgen Kurrent) was a backup solution for HDDs.&lt;/p&gt;
    &lt;p&gt;All of the above was available for purchase from retailers. Buying directly from Cachet, people could also opt for a (in hindsight thirty years ahead of its time) subscription service – the «Service Package». For about 100 German Marks per year, Cachet would send out at least four software updates on disk, a manual and a t-shirt.&lt;/p&gt;
    &lt;p&gt;Besides X-Copy, Cachet would also sell select computer games like Battle Chess II. Stock was acquired in large quantities and then marketed via tele text on TV. In pre-internet times, this text based one-way service allowed for daily updates in contrast to pricey ads in magazines which had to be submitted months in advance. People would call in, place their order and that was that.&lt;/p&gt;
    &lt;p&gt;Cachet also served as the German distributor for some companies abroad, including id Software, which meant that we’d sell the full version of DOOM.&lt;/p&gt;
    &lt;p&gt;What are your thoughts on the fact that most X-Copy users probably used a pirated version?&lt;/p&gt;
    &lt;p&gt;This has been debated a gazillion times … work on software is not less work than laying bricks to build a wall or to baking bread from wheat. I don’t expect the baker or the mason to work for free. But some people still think they are exempt. It is what it is – and you can’t change such people.&lt;/p&gt;
    &lt;p&gt;Cachet tried to offer a «holistic» experience. Hence the service package, which for the price of 100.- DM (Deutsche Mark – roughly 50.- Euros, but not adjusted for inflation) gave subscribers four updates a year, delivered to their door step. It also included goodies like e.g. a new Cyclone hardware with logic and a t-shirt. Cachet even gave people the option to buy an upgrade and become legal customers; even though we knew they did not have an original version to upgrade from. But everyone was welcome, even if they only had a copy before.&lt;/p&gt;
    &lt;p&gt;It also made a difference that we went to all the trade shows, like in Cologne and Frankfurt. People could actually see who we were, and have a chat. But the real freeloaders are still active today. From time to time «clever» individuals get the idea to sell X-Copy on floppy disks or put out counterfeit mugs, shirts and stuff. We then have to remind them to not rip off other people.&lt;/p&gt;
    &lt;p&gt;We gave all versions of X-Copy to Jope to host them on the X-Copy Shrine. X-Copy is now «free» for private and personal use, but no money shall change hands. Oh, and just in case someone would be looking for t-shirts… warning… shameless plug coming up… we made a few anniversary shirts a few years ago and we still have a few around (on the KryoFlux webshop) in case someone would want one.&lt;/p&gt;
    &lt;p&gt;What actually happened to Cachet? It seems they were involved in a lot.&lt;/p&gt;
    &lt;p&gt;While Cachet had to shrink considerably after the days of the Amiga were over and some plans for games did not work out, Claus never really folded the company. Cachet still exists today and has produced e.g. casual puzzle games (e.g. Tendo). So technically Cachet is still active, but at a very reduced pace and with a different portfolio.&lt;/p&gt;
    &lt;p&gt;What about your current project, KryoFlux?&lt;/p&gt;
    &lt;p&gt;The Software Preservation Society, or short Softpres and SPS, was founded in 2001 by my business partner István «IFW» Fábián, also creator of the role-playing games Abandoned Places 1+2. He was equally «upset» over digital graffiti, so the idea was to archive software, predominantly games, unaltered and authentic. This required István to develop technology to create a container format for long term storage or floppy data including copy protection: the Interchangeable Preservation Format (IPF) was born.&lt;/p&gt;
    &lt;p&gt;I joined SPS as a regular contributor in about 2007. Some time later we saw the growing demand for preservation, and at the same time had to acknowledge that more and more Amigas were breaking due to age. It became apparent that we would not be able to utilise Amigas for preservation in the not too distant future, so we decided to create our own hardware. We had approached a manufacturer of a well known expansion board that would interface a floppy drive to a modern computer, but not pre-process and filter the data (like standard PC controllers do). He got mad at us coming with suggestions for a USB version because apparently he felt we weren‘t worthy of his genius.&lt;/p&gt;
    &lt;p&gt;This overlapped with someone showing up on English Amiga Board (EAB) – Cyclone‘s inventor, Richard Aplin. I reached out to Richard and pitched him the idea to do a modern Cyclone with today‘s (2008) technology. This culminated in a proof of concept – Cyclone20. Since Richard wasn‘t interested in pursuing this further, we took the concept and turned this into what would become KryoFlux. We did not plan to make this a commercial venture, but when the first batch of 100 boards sold overnight, we knew we weren’t the only ones in need of a solution like this.&lt;/p&gt;
    &lt;p&gt;While the software is a completely different beast, the hardware is still based on the very same ATMEL SoC from the mid 2000s. The reason is pretty simple: It does its job, so why change anything when the underlying technology – the floppy disk – hasn‘t changed in more that three decades. The software side looks very different and what we have had since the beginning – machine learning – has now exploded into AI-mania. But yes, there will also be astonishing benefits for floppy preservation stemming from this. Over the years, KryoFlux has become the de-facto standard at archives, libraries and museums all around the globe. It still feels surreal that a team of just a few can make a difference. It’s like X-Copy and history repeating…&lt;/p&gt;
    &lt;p&gt;As a bonus question, is Moonstone [which we’ve covered extensively before] still banned in Germany?&lt;/p&gt;
    &lt;p&gt;Back in the 1980s and 1990s the Bundesprüfstelle für jugendgefährdende Schriften (literal translation: Federal Agency for youth-endangering publications) was a State Agency that was initially set up to enforce youth protection for comics and books. In the 1970s, video tapes popped up and were regulated as well, and in the 1980s, computer games got scrutinised by the BPjS. The situation was especially bizarre for films where there already was an age rating system in place – the FSK, which is similar to the UK‘s BBFC or the US‘s MPAA. But Germany being Germany, one had to be extra sure that video nasties or 8-bit games would not turn kids into reckless killers. So the BPjS was able to ban media that was unrated or rated 18.&lt;/p&gt;
    &lt;p&gt;A ban would kill the product in the commercial marketplace, as any advertising, offering or even sale to minors would be penalised. Banning a film or game would place it in the same category as porn – with the very same restrictions for distribution. From today‘s perspective it is almost bizarre to think that anyone would object over 8-bit or later 16-bit graphics.&lt;/p&gt;
    &lt;p&gt;A ban is in place for 25 years, after which it will expire unless it is renewed. Hence the ban on many games from the 1980s and 1990s has expired. Moonstone was banned in 1992, and was automatically removed from the list in 2017. Still, if something is still banned, it is not exactly trivial to unban, especially since it is an administrative act and comes with a fee of about 2,500 Euros. To add to this, only the original rights holder can object and kick off the process. I have done so for a couple of films (The Texas Chainsaw Massacre 1+2, The Last House on the Left, Death Machine, etc.) in my daytime job these days. It gets especially challenging if a penal law confiscation makes something completely illegal to distribute, but this is a story for another day.&lt;/p&gt;
    &lt;p&gt;Thank you for your time, Christian!&lt;/p&gt;
    &lt;p&gt;Photos from Christian’s trip to Anguilla, shared with permission:&lt;/p&gt;
    &lt;p&gt;For more stories like this, please check our English language section.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://spillhistorie.no/2025/10/10/the-story-of-x-copy-on-the-amiga/"/><published>2025-10-11T21:35:33+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45553487</id><title>US moves to cancel one of the largest solar farms</title><updated>2025-10-12T00:48:32.573138+00:00</updated><content>&lt;doc fingerprint="9e7b18735fbe49e9"&gt;
  &lt;main&gt;&lt;head rend="h1"&gt;US Politics 2025&lt;/head&gt;&lt;p&gt;Subscribe to unlock this article&lt;/p&gt;&lt;head rend="h1"&gt;&lt;quote&gt;US moves to cancel one of the world’s largest solar farms &lt;/quote&gt;&lt;/head&gt;&lt;head rend="h2"&gt;Try unlimited access&lt;/head&gt;$1 for 4 weeks&lt;p&gt;Subscribe Today&lt;/p&gt;&lt;p&gt;Want a deeper look?&lt;/p&gt;Explore our recommended subscriptions&lt;head rend="h2"&gt;Explore more offers.&lt;/head&gt;&lt;head rend="h3"&gt;Standard Digital&lt;/head&gt;&lt;p&gt;Save 40%&lt;/p&gt;&lt;p&gt;was $540 now $319 for your first year&lt;/p&gt;&lt;p&gt;Save now on essential digital access to quality FT journalism on any device. Saving based on monthly annualised price.&lt;/p&gt;&lt;head rend="h3"&gt;Print + Premium Digital&lt;/head&gt;&lt;p&gt;For the price of premium&lt;/p&gt;&lt;p&gt;was $755 now $719 for your first year&lt;/p&gt;&lt;p&gt;Get Premium &amp;amp; FT Weekend Print edition for the price of Premium. Complete digital access to quality analysis and expert insights, complemented with our award-winning Weekend Print edition.&lt;/p&gt;&lt;p&gt;was $409 now $99 for your first year&lt;/p&gt;&lt;p&gt;FT newspaper delivered Monday-Saturday, plus FT Digital Edition delivered to your device Monday-Saturday.&lt;/p&gt;&lt;p&gt;Check whether you already have access via your university or organisation.&lt;/p&gt;&lt;p&gt;Terms &amp;amp; Conditions apply&lt;/p&gt;&lt;head rend="h2"&gt;Explore our full range of subscriptions.&lt;/head&gt;&lt;head rend="h3"&gt;For individuals&lt;/head&gt;&lt;p&gt;Discover all the plans currently available in your country&lt;/p&gt;&lt;head rend="h3"&gt;For multiple readers&lt;/head&gt;&lt;p&gt;Digital access for organisations. Includes exclusive features and content.&lt;/p&gt;&lt;head rend="h2"&gt;Why the FT?&lt;/head&gt;&lt;p&gt;See why over a million readers pay to read the Financial Times.&lt;/p&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.ft.com/content/7a3cd922-88ed-4188-86ab-ba09fbe24d42"/><published>2025-10-11T23:05:54+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45553577</id><title>Meta Superintelligence's surprising first paper</title><updated>2025-10-12T00:48:32.419970+00:00</updated><content/><link href="https://paddedinputs.substack.com/p/meta-superintelligences-surprising"/><published>2025-10-11T23:16:05+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45553764</id><title>Google blocks Android hack that let Pixel users enable VoLTE anywhere</title><updated>2025-10-12T00:48:32.289714+00:00</updated><content>&lt;doc fingerprint="3d7a65028a366168"&gt;
  &lt;main&gt;
    &lt;p&gt;Affiliate links on Android Authority may earn us a commission. Learn more.&lt;/p&gt;
    &lt;head rend="h1"&gt;Google blocks Android hack that let Pixel users enable VoLTE anywhere&lt;/head&gt;
    &lt;p&gt;12 hours ago&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Google’s October 2025 update has broken the Pixel IMS app, a tool many used to enable VoLTE and VoWiFi on imported Pixel phones in unsupported regions.&lt;/item&gt;
      &lt;item&gt;The app exploited a loophole that allowed it to override carrier settings, which Google has now patched and designated as a high-severity vulnerability (CVE-2025-48617).&lt;/item&gt;
      &lt;item&gt;Fortunately, a new workaround has been discovered to enable VoLTE in unsupported regions, but users who want VoWiFi must now either root their devices or wait for Google to officially expand carrier support.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Pixel phones are beloved for their many unique software features, but their limited availability prevents many people from buying them. While Google has made strides in expanding access, Pixels still aren’t sold in nearly as many countries as iPhones or Samsung Galaxy devices. This leads many fans to import Pixel phones from other markets, a move that can unfortunately break crucial calling features like VoLTE and VoWiFi.&lt;/p&gt;
    &lt;p&gt;VoLTE (Voice over LTE) is the feature that routes voice calls over a 4G LTE connection, a crucial function now that carriers worldwide are phasing out their 2G and 3G networks. Without it, you might not be able to make phone calls at all on many modern networks. Similarly, VoWiFi (Voice over WiFi) handles Wi-Fi calling, routing calls over a Wi-Fi network instead of cellular — a handy feature when you’re in a building with poor signal.&lt;/p&gt;
    &lt;p&gt;In theory, any phone with the right hardware for a carrier’s cellular frequencies should be able to use VoLTE, and any capable phone with a supporting plan should get VoWiFi. The reality, however, is more complex. Many carriers only permit VoLTE and VoWiFi on devices they sell or have officially tested. This means that even if your imported Pixel has the necessary hardware, the carrier can still block these features, potentially preventing you from making voice calls entirely.&lt;/p&gt;
    &lt;p&gt;Don’t want to miss the best from Android Authority?&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Set us as a favorite source in Google Discover to never miss our latest exclusive reports, expert analysis, and much more.&lt;/item&gt;
      &lt;item&gt;You can also set us as a preferred source in Google Search by clicking the button below.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This issue plagued Pixel phone importers until Korean developer Kyujin Cho released a workaround in 2023. The developer’s app, “Pixel IMS,” enables VoLTE and VoWiFi on unsupported carriers by overriding the carrier check that Android normally performs. Normally, Android uses a signal from the carrier to decide whether to enable VoLTE for the device; the Pixel IMS app overrides this signal and forces it to always be enabled.&lt;/p&gt;
    &lt;p&gt;Overriding this check isn’t something just any app can do, as it’s part of Android’s privileged telephony framework. That’s why Pixel IMS cleverly leverages a loophole intended for testing purposes. Android allows the “shell” user — the same user that runs ADB commands — to override carrier configurations. To gain these elevated privileges, Pixel IMS uses Shizuku, an open source Android app that lets other apps run processes as the shell user.&lt;/p&gt;
    &lt;p&gt;But loopholes don’t last forever, and after more than two and a half years, Google has seemingly closed this one. Following the recent October 2025 Pixel update, many users discovered the “Pixel IMS” app was no longer functional, crashing when attempting to toggle VoLTE or VoWiFi. The crash log gives a clear reason: “overrideConfig cannot be invoked by shell.”&lt;/p&gt;
    &lt;p&gt;While not documented in the official changelog, Google appears to have quietly patched this particular exploit. According to a source, the company has designated this loophole as CVE-2025-48617, a high-severity privilege escalation vulnerability. Its absence from the October 2025 Android Security Bulletin is likely because it didn’t meet the “high risk” threshold for immediate inclusion under Google’s new Risk-Based Update System (RBUS). Google will probably include it in the next quarterly security bulletin, scheduled for December.&lt;/p&gt;
    &lt;p&gt;Fortunately for Pixel users, another developer has allegedly found a new workaround. While the new method isn’t as accessible — with the instructions being in Chinese and the APK distributed on the developer’s Telegram channel — it at least seems to work.&lt;/p&gt;
    &lt;p&gt;Unfortunately, the new method only enables VoLTE and not VoWiFi, so Pixel users in unsupported regions who need the latter feature will have to root their phones for now. Rooting requires unlocking the bootloader, which breaks some Gemini-powered features and complicates using Google Wallet. The only other alternative is to wait for Google to officially enable VoLTE in more markets — something the company recently signaled it’s working on.&lt;/p&gt;
    &lt;p&gt;Thank you for being part of our community. Read our Comment Policy before posting.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.androidauthority.com/pixel-ims-broken-october-update-3606444/"/><published>2025-10-11T23:41:00+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45553783</id><title>Vancouver Stock Exchange: Scam capital of the world (1989) [pdf]</title><updated>2025-10-12T00:48:32.225510+00:00</updated><content/><link href="https://scamcouver.wordpress.com/wp-content/uploads/2012/04/scam-capital.pdf"/><published>2025-10-11T23:43:42+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45553835</id><title>LineageOS 23</title><updated>2025-10-12T00:48:31.834361+00:00</updated><content>&lt;doc fingerprint="1f3a29d3d2b25be8"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Changelog 30 - Sleek Sixteen, Streamlined Suite, Future Flow&lt;/head&gt;
    &lt;head rend="h6"&gt;Written on October 11, 2025 by Nolen Johnson (npjohnson)&lt;/head&gt;
    &lt;head rend="h2"&gt;23 - Primetime Release&lt;/head&gt;
    &lt;p&gt;Hey there! Welcome back!&lt;/p&gt;
    &lt;p&gt;This last year has been a whirlwind to say the least, but we have remained dedicated to bringing an updated LineageOS based on Android 16 to the masses!&lt;/p&gt;
    &lt;p&gt;We’ve been hard at work rebasing all of our changes and features since Android 16’s release in June. Android 16’s first release mainly contained iterative improvements and some UI/UX refinements, but due to our previous efforts adapting to Google’s UI-centric adjustments in Android 12 through 14, we were able to rebase onto Android 16’s code-base faster than anticipated. Yes you read that right: We’re early this year!&lt;/p&gt;
    &lt;p&gt;Other components have complicated our release and security patching efforts, but we’ll get to that shortly.&lt;/p&gt;
    &lt;head rend="h3"&gt;Google’s Patch Cadence, and LineageOS Going Forward&lt;/head&gt;
    &lt;head rend="h4"&gt;Firstly, what even is an ASB? Or a QPR?&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;ASB (Android Security Bulletin) – Google’s monthly roundup of newly fixed security vulnerabilities across the Android ecosystem. Distributed as a list of patches and security branch updates for older but still supported Android versions, with the current version tagged monthly. These updates let projects like ours and OEMs stay aligned with Google’s security baseline.&lt;/item&gt;
      &lt;item&gt;QPR (Quarterly Platform Release) – Mid-cycle updates to a given Android version, landing every few months. QPRs bring not just security fixes but also bug fixes, performance improvements, and feature changes (like Material 3 Expressive in 16 QPR1).&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h4"&gt;Okay, why are you telling me this?&lt;/head&gt;
    &lt;p&gt;You’ll notice we are choosing to release LineageOS 23.0, and not 23.1. That’s because it’s based on Android 16’s initial release (what we’ll call QPR0), even though QPR1 has already rolled out to Pixels. The catch? Google never pushed QPR1’s source to AOSP. They’ve said it’ll come “in the coming weeks” (source), but right now only contracted partners have access. And to answer the immediate question, the likelihood that any custom ROM will ever be a contracted Google partner is near 0.&lt;/p&gt;
    &lt;p&gt;On top of that, Google’s handling of ASBs has shifted (source). July was empty for the first time since the program began, August had a single patch, and September omitted patches for several listed vulnerabilities, with fixes shared privately to partners under embargo. The result is that AOSP security updates are no longer released in full on a monthly basis. Instead, only vulnerabilities deemed “high risk” (i.e. actively exploited in the wild) will be published by Google in the monthly ASBs, and even then, the underlying patches are often not made public immediately.&lt;/p&gt;
    &lt;p&gt;On a quarterly cadence, Google now issues larger security bulletins that include patches for vulnerabilities originally discovered in prior months. These quarterly bulletins coincide with QPRs (Quarterly Platform Releases), which bundles those security fixes together with feature updates, but have so far not been pushed to AOSP at the time of release.&lt;/p&gt;
    &lt;p&gt;This is why you’ve seen the LineageOS 22.2 security patch level remain reflective of August well into September.&lt;/p&gt;
    &lt;p&gt;In short: this cadence is now the norm, and we need to adapt.&lt;/p&gt;
    &lt;head rend="h4"&gt;And I heard that Google stopped pushing Pixel source?&lt;/head&gt;
    &lt;p&gt;Yes, Google has pulled back here too. Pixel kernels are now only offered as history-stripped tarballs, available privately on request, with no device trees, HALs, or configs. Thanks to projects like CalyxOS, Pixels will likely remain well supported, but they’re no longer guaranteed “day one” devices for LineageOS. Pixel devices are now effectively no easier to support than any other OEM’s devices.&lt;/p&gt;
    &lt;p&gt;In short, this just makes things harder, not impossible.&lt;/p&gt;
    &lt;head rend="h4"&gt;How does this affect LineageOS? And me?&lt;/head&gt;
    &lt;p&gt;It means we adapt. Instead of waiting indefinitely for QPR1’s source, we’re shipping 23.0 now on “QPR0”, with the publicly available ASB patches applied, and we’ll only attest to a security patch level once we have access to all of its fixes. When QPR1 (and future QPRs) eventually land in AOSP, we’ll merge or rebase as appropriate.&lt;/p&gt;
    &lt;p&gt;This does mean some features (like Material 3 Expressive) aren’t here yet. But it ensures users get timely builds, the most complete security fixes we can legally access, and a clear path forward without being stuck in limbo.&lt;/p&gt;
    &lt;p&gt;This will likely be the expected norm for Android 17 and beyond, so expect more &lt;code&gt;.0&lt;/code&gt; releases in the
future!&lt;/p&gt;
    &lt;head rend="h4"&gt;TL;DR:&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Google no longer pushes monthly tags and patches to AOSP; and most fixes/security patches are now pushed quarterly, if at all.&lt;/item&gt;
      &lt;item&gt;Security patch levels may occasionally lag: we only increment them once all patches are public.&lt;/item&gt;
      &lt;item&gt;LineageOS 23.0 is based on Android 16 “QPR0” because QPR1’s source isn’t public yet. &lt;list rend="ul"&gt;&lt;item&gt;Because of this some headline features (like Material 3 Expressive) will come later, once sources drop.&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Pixel support continues, but with reduced source access, they’re no longer guaranteed, let alone on day one.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;Legacy Devices&lt;/head&gt;
    &lt;p&gt;The bad news extends a bit further here, though it’s less surprising than the earlier sections.&lt;/p&gt;
    &lt;p&gt;Google’s increased reliance on newer eBPF features has made supporting devices with older Linux kernels increasingly difficult. Android 16 “QPR0” “requires Linux 5.4 and above, and at the time of writing, the necessary features have only been properly backported as far back as &lt;code&gt;4.14&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;Unfortunately, LineageOS 22.2 still supports many devices running &lt;code&gt;4.4&lt;/code&gt; and &lt;code&gt;4.9&lt;/code&gt;. As of
now, no complete backports of the required features exist for these kernels. The silver lining is
that, unlike the massive device loss we saw moving off LineageOS 18.1, these versions could be
salvaged if someone were to take on the work of adapting the backports. If you do succeed, please
reach out to devrel(at)lineageos.org, we’d be happy to review it!&lt;/p&gt;
    &lt;p&gt;We’re currently targeting only shipping kernels that have 1:1 eBPF backports to make them feature equivalent to Linux 5.4 from here on out to avoid compatibility issues.&lt;/p&gt;
    &lt;head rend="h3"&gt;Back to the Good Stuff!&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Security patches from September 2024 to August 2025 have been merged to LineageOS 20 through 23.0.&lt;/item&gt;
      &lt;item&gt;SeedVault and Etar have both been updated to their newest respective upstream version, with multiple fixes having been sent back to the relevant upstream repos!&lt;/item&gt;
      &lt;item&gt;WebView has been updated to Chromium 140.0.7339.51.&lt;/item&gt;
      &lt;item&gt;Contributor demon000 (Cosmin Tanislav) has started work on an awesome set of tools to assist maintainers in device bringups from scratch! They’re still in-progress, but are staged to make a lot of our efforts significantly easier and more streamlined - so stay tuned! Maybe a rare non-yearly blog post? ;)&lt;/item&gt;
      &lt;item&gt;Contributor 0xCAFEBABE has extended support for various VirtIO configurations (QEMU/crosvm/UTM/libvirt, etc.) targets! Though these aren’t supported officially, there is an awesome, comprehensive guide for building and utilizing these targets on the Wiki. There is even a newer one allowing you to run LineageOS in a UTM virtual machine on an Apple Silicon Mac!&lt;/item&gt;
      &lt;item&gt;Contributor 0xCAFEBABE has added support for Cuttlefish targets!&lt;/item&gt;
      &lt;item&gt;Contributor 0xCAFEBABE has extended support for devices booting Android on the mainline Linux kernel! This will allow us to in theory boot LineageOS on almost all devices supported by the Linux kernel. It’s in early phases, but very promising, with several successful device ports already available on the LineageOS GitHub organization! Check the search term “mainline” on the organization’s search bar.&lt;/item&gt;
      &lt;item&gt;LineageOS is now nearly &lt;code&gt;Android.mk&lt;/code&gt;free! Google announced their move from&lt;code&gt;make&lt;/code&gt;to&lt;code&gt;soong&lt;/code&gt;many years ago, pushing developers to migrate from Android.mk to Android.bp, and has started blocking Android.mk in many locations of the source tree.&lt;list rend="ul"&gt;&lt;item&gt;While converting these is a seemingly simple task - in practice it involved countless hours of converting conditional checks, regression testing, and thousands of individual patches. As of this writing, LineageOS introduces less than 10 Android.mk files at a platform level, and many of these are in the process of being converted. In short - we’re ready for when Google kills support for Android.mk.&lt;/item&gt;&lt;item&gt;0xCAFEBABE also created a build target for converting from mk to bp, a WIP feature to assist developers in migrating to soong!&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Both the Charging Control, and Fast Charge Control features have received many updates and improvements.&lt;/item&gt;
      &lt;item&gt;A new set of ringtones and alarms from Plasma Mobile have been included.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;Application Updates&lt;/head&gt;
    &lt;p&gt;LineageOS isn’t just about the OS itself: our suite of core apps continues to evolve as well. This cycle brings some major improvements:&lt;/p&gt;
    &lt;head rend="h4"&gt;Aperture (Camera)&lt;/head&gt;
    &lt;p&gt;Our camera app, Aperture, has been rewritten from the ground up. The rewrite makes the app much easier to maintain, while also bringing new features:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Support for JPEG Ultra HDR, RAW, and simultaneous RAW+JPEG capture.&lt;/item&gt;
      &lt;item&gt;A redesigned notification island with dynamic colors, and new indicators (JPEG Ultra HDR, RAW, battery, thermal throttling).&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Keep your system updated (or keep updating the app if you’re using the app standalone), since we plan to introduce more features and improvements over time (believe it or not, nowadays the only obstacle is Google’s CameraX library, which has slowed down the development of certain components which we use in Aperture). We do have some plans to overcome this though.&lt;/p&gt;
    &lt;head rend="h4"&gt;Twelve (Music Player)&lt;/head&gt;
    &lt;p&gt;Our music player, Twelve, didn’t need a full overhaul this year, but it did get some polish and some new features:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Added a “Play random songs” button for quicker library playback.&lt;/item&gt;
      &lt;item&gt;Updated the Now Playing screen with playback statistics (for the nerds and audiophiles out there).&lt;/item&gt;
      &lt;item&gt;Added the ability to rescan the local media store, so newly added music shows up without needing a reboot.&lt;/item&gt;
      &lt;item&gt;Expanded Jellyfin integration, including suggestions, favorites, and better thumbnail handling.&lt;/item&gt;
      &lt;item&gt;Added MIDI playback support.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;New App, Again?&lt;/head&gt;
    &lt;p&gt;We’re excited to debut Catapult, our brand-new custom launcher for Android TV. Catapult is built with the same principles we bring to the rest of LineageOS: clean, simple, functional design, with thoughtful user experience at its core.&lt;/p&gt;
    &lt;p&gt;Why build a new launcher? For years, Android TV and Google TV users have been stuck with preloaded launchers that aggressively push advertising and recommendations users can’t control. Catapult changes that. It strips away the clutter, gives you back your home screen, and lets you decide what belongs front and center.&lt;/p&gt;
    &lt;p&gt;With Catapult, you get a fast, intuitive interface that focuses on your apps and your content: no forced feeds, no “sponsored” rows, just a launcher that works the way you expect.&lt;/p&gt;
    &lt;p&gt;We’re also planning to add more features in the future, you’ll see them appear as you keep your device up to date, stay tuned!&lt;/p&gt;
    &lt;head rend="h3"&gt;Extended QEMU-Based Virtual Machine Support&lt;/head&gt;
    &lt;p&gt;LineageOS has long been a favorite for developers and tinkerers, and with 23.0 we’ve expanded support for virtualized environments. Thanks to extended QEMU integration spearheaded by developer 0xCAFEBABE, it’s now easier than ever to run LineageOS in VMs for testing, debugging, or just exploration. This means developers can spin up consistent environments on their desktops without needing dedicated hardware, and testers can reproduce tricky issues with greater reliability. Whether you’re validating patches or just curious to see how LineageOS runs under the hood, the tooling is smoother and more accessible.&lt;/p&gt;
    &lt;p&gt;If interested, take a look on the Wiki. You can run LineageOS via libvirt on Linux/Windows, and on an Apple Silicon Mac with UTM.&lt;/p&gt;
    &lt;p&gt;Additionally, LineageOS now supports Cuttlefish build configurations, which are similar to the &lt;code&gt;emulator&lt;/code&gt; family of targets, but has extra
emulated peripherals, so as to act more like a real device! You can view a list of all the differences
here.&lt;/p&gt;
    &lt;head rend="h3"&gt;Mainline Kernel Support&lt;/head&gt;
    &lt;p&gt;Another big milestone in 23.0 is our improved support for devices running Linux mainline kernels.&lt;/p&gt;
    &lt;p&gt;While Android has historically relied on heavily modified vendor kernels, the ecosystem is shifting toward mainline for long-term stability and maintainability.&lt;/p&gt;
    &lt;p&gt;With 23.0, developer 0xCAFEBABE has spearheaded an effort to extend compatibility for devices capable of booting the mainline Linux kernel, and we’ve made it easier for maintainers to bring their devices closer to upstream with inheritable common trees. The end result? For now, nothing, but in the future, we will hopefully be able to boot Android on almost any device that is supported by the mainline Linux kernel.&lt;/p&gt;
    &lt;p&gt;This effort should help keep devices alive well past the point where their proprietary components stop working with newer Android releases.&lt;/p&gt;
    &lt;p&gt;See the following repos if interested! (1, 2, 3, 4)&lt;/p&gt;
    &lt;head rend="h3"&gt;Careful Commonization&lt;/head&gt;
    &lt;p&gt;Several of our developers have worked hard on SoC-specific common kernels to base on that can be merged on a somewhat regular basis to pull in the latest features/security patches to save maintainers additional effort.&lt;/p&gt;
    &lt;p&gt;Go check them out and consider basing your device kernels on them!&lt;/p&gt;
    &lt;p&gt;Supported SoCs right now are:&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="3"&gt;
        &lt;cell role="head"&gt;SoC (system-on-chip)&lt;/cell&gt;
        &lt;cell role="head"&gt;Kernel Version&lt;/cell&gt;
        &lt;cell role="head"&gt;Android Version&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Qualcomm MSM8998/MSM8996&lt;/cell&gt;
        &lt;cell&gt;4.4&lt;/cell&gt;
        &lt;cell&gt;13, 14, 15&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Qualcomm MSM8953&lt;/cell&gt;
        &lt;cell&gt;4.9&lt;/cell&gt;
        &lt;cell&gt;13, 14, 15&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Qualcomm SDM845&lt;/cell&gt;
        &lt;cell&gt;4.9&lt;/cell&gt;
        &lt;cell&gt;13, 14, 15&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Qualcomm SM8150&lt;/cell&gt;
        &lt;cell&gt;4.14&lt;/cell&gt;
        &lt;cell&gt;13, 14, 15, 16&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Qualcomm SDM660&lt;/cell&gt;
        &lt;cell&gt;4.19&lt;/cell&gt;
        &lt;cell&gt;13, 14, 15, 16&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Qualcomm SM8250&lt;/cell&gt;
        &lt;cell&gt;4.19&lt;/cell&gt;
        &lt;cell&gt;13, 14, 15, 16&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Qualcomm SM8350&lt;/cell&gt;
        &lt;cell&gt;5.4&lt;/cell&gt;
        &lt;cell&gt;13, 14, 15, 16&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Qualcomm SM8450&lt;/cell&gt;
        &lt;cell&gt;5.10&lt;/cell&gt;
        &lt;cell&gt;13, 14, 15, 16&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Qualcomm SM8550&lt;/cell&gt;
        &lt;cell&gt;5.15&lt;/cell&gt;
        &lt;cell&gt;13, 14, 15, 16&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Qualcomm SM8650&lt;/cell&gt;
        &lt;cell&gt;6.1&lt;/cell&gt;
        &lt;cell&gt;14, 15, 16&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Qualcomm SM8750&lt;/cell&gt;
        &lt;cell&gt;6.6&lt;/cell&gt;
        &lt;cell&gt;15, 16&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Moreover, many legacy devices require interpolating libraries that we colloquially refer to as “shims” - these have long been device and maintainer managed, but this cycle we have decided to commonize them to make the effort easier on everyone and not duplicate effort!&lt;/p&gt;
    &lt;p&gt;You can check it out here and contribute shims that you think other devices may need or add additional components to additional shims and compatibility layers provided via Gerrit!&lt;/p&gt;
    &lt;head rend="h3"&gt;Deprecations&lt;/head&gt;
    &lt;p&gt;Overall, we feel that the 23.0 branch has reached feature and stability parity with 22.2 and is ready for initial release.&lt;/p&gt;
    &lt;p&gt;We will allow new LineageOS 21 submissions to be forked to the organization, but we will no longer allow newly submitted LineageOS 21 devices to ship.&lt;/p&gt;
    &lt;p&gt;LineageOS 23.0 will launch building for a decent selection of devices, with additional devices to come as they meet the requirements specified by the Charter and are made ready for builds by their maintainer.&lt;/p&gt;
    &lt;head rend="h3"&gt;Upgrading to LineageOS 23.0&lt;/head&gt;
    &lt;p&gt;To upgrade, please follow the upgrade guide for your device by clicking on it here and then on “Upgrade to a higher version of LineageOS”.&lt;/p&gt;
    &lt;p&gt;If you’re coming from an unofficial build, you need to follow the good ole’ install guide for your device, just like anyone else looking to install LineageOS for the first time. These can be found at the same place here by clicking on your device and then on “Installation”.&lt;/p&gt;
    &lt;p&gt;Please note that if you’re currently on an official build, you DO NOT need to wipe your device, unless your device’s wiki page specifically dictates otherwise, as is needed for some devices with massive changes, such as a repartition.&lt;/p&gt;
    &lt;head rend="h3"&gt;Download portal&lt;/head&gt;
    &lt;p&gt;While it has been in the making for quite a while and already released two years ago, it’s still relevant to this blog post. Our download portal has been redesigned and gained a few functional improvements:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Dark mode&lt;/item&gt;
      &lt;item&gt;Downloads of additional images (shown for all devices but not used on all of them, read the instructions to know which ones you need for your device’s installation!)&lt;/item&gt;
      &lt;item&gt;Verifying downloaded files (see here) - if you go with any download not obtained from us, you can still verify it was originally signed by us and thus untampered with&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;A reminder: Follow the LineageOS Wiki to the letter! If an image is listed on the download portal that the wiki doesn’t ask you to use, ignore it! It is likely there so the maintainer can point power-users at it if needed.&lt;/p&gt;
    &lt;head rend="h3"&gt;Wiki&lt;/head&gt;
    &lt;p&gt;The LineageOS Wiki has also been expanded over the years and now offers, in addition to the known and tested instructions for all supported devices, some improvements:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;The device overview allows filtering for various attributes you might be interested in a device (please note that choosing a device only based on that list still does not guarantee any device support beyond the point of when you chose it)&lt;/item&gt;
      &lt;item&gt;The device overview now lists variants of a device and other known marketing names in a more visible way, also allowing for different device information and instructions per variant to be shown&lt;/item&gt;
      &lt;item&gt;The installation instructions have been paginated, giving users less chance to skip a section involuntarily&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;In addition to that we’d like to take this time to remind users to follow instructions on their device’s respective Wiki Page given the complexity introduced by AOSP changes like System-As-Root, A/B Partition Scheme, Dynamic Partitions, and most recently Virtual A/B found on the Pixel 5 and other devices launching with Android 11, the instructions many of you are used to following from memory are either no longer valid or are missing very critical steps. As of 16.0, maintainers have been expected to run through the full instructions and verify they work on their devices. The LineageOS Wiki was recently further extended, and maintainers were given significantly more options to customize their device’s specific installation, update, and upgrade instructions.&lt;/p&gt;
    &lt;head rend="h3"&gt;Developers, Developers, Developers&lt;/head&gt;
    &lt;p&gt;Or, in this case, maintainers, maintainers, maintainers. We want your device submissions!&lt;/p&gt;
    &lt;p&gt;If you’re a developer and would like to submit your device for officials, it’s easier than ever. Just follow the instructions here.&lt;/p&gt;
    &lt;p&gt;The above also applies to people looking to bring back devices that were at one point official but are no longer supported - seriously - even if it’s not yet completely compliant, submit it! Maybe we can help you complete it.&lt;/p&gt;
    &lt;p&gt;After you submit, within generally a few weeks, but in most cases a week, you’ll receive some feedback on your device submission; and if it’s up to par, you’ll be invited to our communications instances and your device will be forked to LineageOS’s official repositories.&lt;/p&gt;
    &lt;p&gt;Don’t have the knowledge to maintain a device, but want to contribute to the platform? We have lots of other things you can contribute to. For instance, our apps suite is always looking for new people to help improve them, or you can contribute to the wiki by adding more useful information &amp;amp; documentation. Gerrit is always open for submissions! Once you’ve contributed a few things, send an email to devrel(at)lineageos.org detailing them, and we’ll get you in the loop.&lt;/p&gt;
    &lt;p&gt;Also, if you sent a submission that didn’t get a response in the last few months, please follow up, we’ve swapped providers again!&lt;/p&gt;
    &lt;head rend="h3"&gt;Generic Targets&lt;/head&gt;
    &lt;p&gt;We’ve talked about these before, but these are important, so we will cover them again.&lt;/p&gt;
    &lt;p&gt;Although we’ve had buildable generic targets since 2019, to make LineageOS more accessible to developers, and really anyone interested in giving LineageOS a try, we’ve documented how to use them in conjunction with the Android Emulator/Android Studio!&lt;/p&gt;
    &lt;p&gt;Additionally, similar targets can now be used to build GSI in mobile, Android TV configurations, and Android Automotive making LineageOS more accessible than ever to devices using Google’s Project Treble. We won’t be providing official builds for these targets, due to the fact the user experience varies entirely based on how well the device manufacturer complied with Treble’s requirements, but feel free to go build them yourself and give it a shot!&lt;/p&gt;
    &lt;p&gt;Please note that Android 12 (and by proxy all later Android versions) diverged GSI and Emulator targets. Emulator targets reside in &lt;code&gt;lineage_sdk_$arch&lt;/code&gt;, while GSI targets reside in
&lt;code&gt;lineage_gsi_$arch&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;Additionally, experimental targets now exist for QEMU-based virtual machine software (libvirt, UTM, etc). Instructions on building and utilizing these targets can be found on the Wiki.&lt;/p&gt;
    &lt;head rend="h3"&gt;Translations&lt;/head&gt;
    &lt;p&gt;Bilingual? Trilingual? Anything-lingual?&lt;/p&gt;
    &lt;p&gt;If you think you can help translate LineageOS to a different language, jump over to our wiki and have a go! If your language is not supported natively in Android, reach out to us on Crowdin and we’ll take the necessary steps to include your language. For instance, LineageOS is the first Android custom distribution that has complete support for the Welsh (Cymraeg) language thanks to its community of translators.&lt;/p&gt;
    &lt;p&gt;Please, contribute to translations only if you are reasonably literate in the target language; poor translations waste both our time and yours.&lt;/p&gt;
    &lt;head rend="h3"&gt;Build roster&lt;/head&gt;
    &lt;head rend="h4"&gt;Added 23 devices&lt;/head&gt;
    &lt;table&gt;
      &lt;row span="4"&gt;
        &lt;cell role="head"&gt;Device name&lt;/cell&gt;
        &lt;cell role="head"&gt;Wiki&lt;/cell&gt;
        &lt;cell role="head"&gt;Maintainers&lt;/cell&gt;
        &lt;cell role="head"&gt;Moved from&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;F(x)tec Pro¹ X&lt;/cell&gt;
        &lt;cell&gt;pro1x&lt;/cell&gt;
        &lt;cell&gt;BadDaemon, bgcngm, mccreary, npjohnson, qsnc, tdm&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Fairphone 4&lt;/cell&gt;
        &lt;cell&gt;FP4&lt;/cell&gt;
        &lt;cell&gt;mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Fairphone 5&lt;/cell&gt;
        &lt;cell&gt;FP5&lt;/cell&gt;
        &lt;cell&gt;mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Google Pixel 4a 5G&lt;/cell&gt;
        &lt;cell&gt;bramble&lt;/cell&gt;
        &lt;cell&gt;mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Google Pixel 5&lt;/cell&gt;
        &lt;cell&gt;redfin&lt;/cell&gt;
        &lt;cell&gt;mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Google Pixel 5a&lt;/cell&gt;
        &lt;cell&gt;barbet&lt;/cell&gt;
        &lt;cell&gt;mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Lenovo Z5 Pro GT&lt;/cell&gt;
        &lt;cell&gt;heart&lt;/cell&gt;
        &lt;cell&gt;themard, optionaltoast&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Lenovo Z6 Pro&lt;/cell&gt;
        &lt;cell&gt;zippo&lt;/cell&gt;
        &lt;cell&gt;Lucchetto, themard, einargednochsson&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola defy 2021&lt;/cell&gt;
        &lt;cell&gt;bathena&lt;/cell&gt;
        &lt;cell&gt;Deivid Ignacio Parra, Francisco Sanchez&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola edge 20&lt;/cell&gt;
        &lt;cell&gt;berlin&lt;/cell&gt;
        &lt;cell&gt;npjohnson, SGCMarkus&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola edge 2021&lt;/cell&gt;
        &lt;cell&gt;berlna&lt;/cell&gt;
        &lt;cell&gt;SyberHexen&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola edge 30 fusion&lt;/cell&gt;
        &lt;cell&gt;tundra&lt;/cell&gt;
        &lt;cell&gt;themard, electimon&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola edge 30 neo&lt;/cell&gt;
        &lt;cell&gt;miami&lt;/cell&gt;
        &lt;cell&gt;marcost2&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola edge 30&lt;/cell&gt;
        &lt;cell&gt;dubai&lt;/cell&gt;
        &lt;cell&gt;themard, sb6596, Demon000&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola edge 40 pro / Motorola moto X40 / Motorola edge+ (2023)&lt;/cell&gt;
        &lt;cell&gt;rtwo&lt;/cell&gt;
        &lt;cell&gt;sgcmarkus, themard&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto e7 plus / Lenovo K12&lt;/cell&gt;
        &lt;cell&gt;guam&lt;/cell&gt;
        &lt;cell&gt;Rajin Gangadharan, Deivid Ignacio Parra&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g 5G - 2024&lt;/cell&gt;
        &lt;cell&gt;fogo&lt;/cell&gt;
        &lt;cell&gt;mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g power 2021&lt;/cell&gt;
        &lt;cell&gt;borneo&lt;/cell&gt;
        &lt;cell&gt;Syed Fawwaz Hussain (Fazwalrus), Deivid Ignacio Parra&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g stylus 5G (2022)&lt;/cell&gt;
        &lt;cell&gt;milanf&lt;/cell&gt;
        &lt;cell&gt;AnierinBliss&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g stylus 5G&lt;/cell&gt;
        &lt;cell&gt;denver&lt;/cell&gt;
        &lt;cell&gt;Vivekachooz&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g10 / Motorola moto g10 power / Lenovo K13 Note&lt;/cell&gt;
        &lt;cell&gt;capri&lt;/cell&gt;
        &lt;cell&gt;Deivid Ignacio Parra, Sultanahamer&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g200 5G / Motorola Edge S30&lt;/cell&gt;
        &lt;cell&gt;xpeng&lt;/cell&gt;
        &lt;cell&gt;themard, rogers2602&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g30 / Lenovo K13 Pro&lt;/cell&gt;
        &lt;cell&gt;caprip&lt;/cell&gt;
        &lt;cell&gt;mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g32&lt;/cell&gt;
        &lt;cell&gt;devon&lt;/cell&gt;
        &lt;cell&gt;Dhina17, mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g34 5G / Motorola moto g45 5G&lt;/cell&gt;
        &lt;cell&gt;fogos&lt;/cell&gt;
        &lt;cell&gt;mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g42&lt;/cell&gt;
        &lt;cell&gt;hawao&lt;/cell&gt;
        &lt;cell&gt;Dhina17, mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g52&lt;/cell&gt;
        &lt;cell&gt;rhode&lt;/cell&gt;
        &lt;cell&gt;Dhina17, mikeioannina, tomoms&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g82 5G&lt;/cell&gt;
        &lt;cell&gt;rhodep&lt;/cell&gt;
        &lt;cell&gt;AnandSuresh02, sevenrock&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g84 5G&lt;/cell&gt;
        &lt;cell&gt;bangkk&lt;/cell&gt;
        &lt;cell&gt;mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g9 play / Motorola moto g9 / Lenovo K12 Note&lt;/cell&gt;
        &lt;cell&gt;guamp&lt;/cell&gt;
        &lt;cell&gt;DelightReza, Deivid Ignacio Parra&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g9 power / Lenovo K12 Pro&lt;/cell&gt;
        &lt;cell&gt;cebu&lt;/cell&gt;
        &lt;cell&gt;Deivid Ignacio Parra&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Nothing Phone (2)&lt;/cell&gt;
        &lt;cell&gt;Pong&lt;/cell&gt;
        &lt;cell&gt;chandu078&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Nubia Mini 5G&lt;/cell&gt;
        &lt;cell&gt;TP1803&lt;/cell&gt;
        &lt;cell&gt;ArianK16a, npjohnson&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 11 5G&lt;/cell&gt;
        &lt;cell&gt;salami&lt;/cell&gt;
        &lt;cell&gt;bgcngm&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 12R&lt;/cell&gt;
        &lt;cell&gt;aston&lt;/cell&gt;
        &lt;cell&gt;inferno0230&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 7 Pro / OnePlus 7 Pro (T-Mobile)&lt;/cell&gt;
        &lt;cell&gt;guacamole&lt;/cell&gt;
        &lt;cell&gt;LuK1337, Tortel&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 7&lt;/cell&gt;
        &lt;cell&gt;guacamoleb&lt;/cell&gt;
        &lt;cell&gt;shantanu-sarkar&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 7T / OnePlus 7T (T-Mobile)&lt;/cell&gt;
        &lt;cell&gt;hotdogb&lt;/cell&gt;
        &lt;cell&gt;LuK1337&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 7T Pro&lt;/cell&gt;
        &lt;cell&gt;hotdog&lt;/cell&gt;
        &lt;cell&gt;qsnc&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 8 / OnePlus 8 (T-Mobile)&lt;/cell&gt;
        &lt;cell&gt;instantnoodle&lt;/cell&gt;
        &lt;cell&gt;jabashque&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 8 Pro&lt;/cell&gt;
        &lt;cell&gt;instantnoodlep&lt;/cell&gt;
        &lt;cell&gt;LuK1337&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 8T / OnePlus 8T (T-Mobile)&lt;/cell&gt;
        &lt;cell&gt;kebab&lt;/cell&gt;
        &lt;cell&gt;LuK1337, mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 9 / OnePlus 9 (T-Mobile)&lt;/cell&gt;
        &lt;cell&gt;lemonade&lt;/cell&gt;
        &lt;cell&gt;mikeioannina, tangalbert919, ZVNexus&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 9 Pro / OnePlus 9 Pro (T-Mobile)&lt;/cell&gt;
        &lt;cell&gt;lemonadep&lt;/cell&gt;
        &lt;cell&gt;LuK1337, bgcngm, mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 9R&lt;/cell&gt;
        &lt;cell&gt;lemonades&lt;/cell&gt;
        &lt;cell&gt;mikeioannina&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 9RT&lt;/cell&gt;
        &lt;cell&gt;martini&lt;/cell&gt;
        &lt;cell&gt;mikeioannina, basamaryan&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus Nord CE 2 Lite 5G&lt;/cell&gt;
        &lt;cell&gt;oscaro&lt;/cell&gt;
        &lt;cell&gt;Vivekachooz&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus Nord CE 3 Lite 5G / OnePlus Nord N30 5G&lt;/cell&gt;
        &lt;cell&gt;larry&lt;/cell&gt;
        &lt;cell&gt;Vivekachooz&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus Nord CE4&lt;/cell&gt;
        &lt;cell&gt;benz&lt;/cell&gt;
        &lt;cell&gt;inferno0230&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus Pad 2 Pro / OnePlus Pad 3&lt;/cell&gt;
        &lt;cell&gt;erhai&lt;/cell&gt;
        &lt;cell&gt;LuK1337, bgcngm&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Realme 10 Pro 5G&lt;/cell&gt;
        &lt;cell&gt;luigi&lt;/cell&gt;
        &lt;cell&gt;Vivekachooz&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Realme 9 Pro 5G / Realme 9 5G / Realme Q5&lt;/cell&gt;
        &lt;cell&gt;oscar&lt;/cell&gt;
        &lt;cell&gt;Vivekachooz&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy A21s&lt;/cell&gt;
        &lt;cell&gt;a21s&lt;/cell&gt;
        &lt;cell&gt;DaemonMCR&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy F62 / Samsung Galaxy M62&lt;/cell&gt;
        &lt;cell&gt;f62&lt;/cell&gt;
        &lt;cell&gt;Linux4&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy Note10 5G&lt;/cell&gt;
        &lt;cell&gt;d1x&lt;/cell&gt;
        &lt;cell&gt;Rocky7842, Linux4&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy Note10&lt;/cell&gt;
        &lt;cell&gt;d1&lt;/cell&gt;
        &lt;cell&gt;Linux4&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy Note10+ 5G&lt;/cell&gt;
        &lt;cell&gt;d2x&lt;/cell&gt;
        &lt;cell&gt;Linux4&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy Note10+&lt;/cell&gt;
        &lt;cell&gt;d2s&lt;/cell&gt;
        &lt;cell&gt;Linux4&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy S10 5G&lt;/cell&gt;
        &lt;cell&gt;beyondx&lt;/cell&gt;
        &lt;cell&gt;Linux4&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy S10&lt;/cell&gt;
        &lt;cell&gt;beyond1lte&lt;/cell&gt;
        &lt;cell&gt;Linux4&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy S10+&lt;/cell&gt;
        &lt;cell&gt;beyond2lte&lt;/cell&gt;
        &lt;cell&gt;Linux4&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy S10e&lt;/cell&gt;
        &lt;cell&gt;beyond0lte&lt;/cell&gt;
        &lt;cell&gt;Linux4&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy S20 FE / Samsung Galaxy S20 FE 5G&lt;/cell&gt;
        &lt;cell&gt;r8q&lt;/cell&gt;
        &lt;cell&gt;ata-kaner&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy Tab A7 10.4 2020 (LTE)&lt;/cell&gt;
        &lt;cell&gt;gta4l&lt;/cell&gt;
        &lt;cell&gt;chrmhoffmann&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy Tab A7 10.4 2020 (Wi-Fi)&lt;/cell&gt;
        &lt;cell&gt;gta4lwifi&lt;/cell&gt;
        &lt;cell&gt;chrmhoffmann&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy Tab S6 Lite (LTE)&lt;/cell&gt;
        &lt;cell&gt;gta4xl&lt;/cell&gt;
        &lt;cell&gt;haggertk, Linux4&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy Tab S6 Lite (Wi-Fi)&lt;/cell&gt;
        &lt;cell&gt;gta4xlwifi&lt;/cell&gt;
        &lt;cell&gt;Linux4, haggertk&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy Tab S7 (LTE)&lt;/cell&gt;
        &lt;cell&gt;gts7l&lt;/cell&gt;
        &lt;cell&gt;bgcngm&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy Tab S7 (Wi-Fi)&lt;/cell&gt;
        &lt;cell&gt;gts7lwifi&lt;/cell&gt;
        &lt;cell&gt;bgcngm&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Solana Saga&lt;/cell&gt;
        &lt;cell&gt;ingot&lt;/cell&gt;
        &lt;cell&gt;mikeioannina, npjohnson, tomoms&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia 1 II&lt;/cell&gt;
        &lt;cell&gt;pdx203&lt;/cell&gt;
        &lt;cell&gt;hellobbn&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia 1 III&lt;/cell&gt;
        &lt;cell&gt;pdx215&lt;/cell&gt;
        &lt;cell&gt;hellobbn&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia 1 V&lt;/cell&gt;
        &lt;cell&gt;pdx234&lt;/cell&gt;
        &lt;cell&gt;hellobbn&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia 10 IV&lt;/cell&gt;
        &lt;cell&gt;pdx225&lt;/cell&gt;
        &lt;cell&gt;LuK1337, jmpfbmx&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia 10 Plus&lt;/cell&gt;
        &lt;cell&gt;mermaid&lt;/cell&gt;
        &lt;cell&gt;LuK1337&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia 10 V&lt;/cell&gt;
        &lt;cell&gt;pdx235&lt;/cell&gt;
        &lt;cell&gt;jmpfbmx, LuK1337&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia 10&lt;/cell&gt;
        &lt;cell&gt;kirin&lt;/cell&gt;
        &lt;cell&gt;LuK1337&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia 5 II&lt;/cell&gt;
        &lt;cell&gt;pdx206&lt;/cell&gt;
        &lt;cell&gt;kyasu, hellobbn&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia 5 III&lt;/cell&gt;
        &lt;cell&gt;pdx214&lt;/cell&gt;
        &lt;cell&gt;kyasu, hellobbn&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia 5 V&lt;/cell&gt;
        &lt;cell&gt;pdx237&lt;/cell&gt;
        &lt;cell&gt;kyasu, hellobbn&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia XA2 Plus&lt;/cell&gt;
        &lt;cell&gt;voyager&lt;/cell&gt;
        &lt;cell&gt;LuK1337&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia XA2 Ultra&lt;/cell&gt;
        &lt;cell&gt;discovery&lt;/cell&gt;
        &lt;cell&gt;LuK1337&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Sony Xperia XA2&lt;/cell&gt;
        &lt;cell&gt;pioneer&lt;/cell&gt;
        &lt;cell&gt;LuK1337, jmpfbmx&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi 12 Pro&lt;/cell&gt;
        &lt;cell&gt;zeus&lt;/cell&gt;
        &lt;cell&gt;Adrianyyy, ArianK16a&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi 12&lt;/cell&gt;
        &lt;cell&gt;cupid&lt;/cell&gt;
        &lt;cell&gt;Adrianyyy, ArianK16a&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi 12S Pro&lt;/cell&gt;
        &lt;cell&gt;unicorn&lt;/cell&gt;
        &lt;cell&gt;Adrianyyy, ArianK16a&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi 12S Ultra&lt;/cell&gt;
        &lt;cell&gt;thor&lt;/cell&gt;
        &lt;cell&gt;Adrianyyy, ArianK16a&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi 12S&lt;/cell&gt;
        &lt;cell&gt;mayfly&lt;/cell&gt;
        &lt;cell&gt;Flower Sea&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi 12T Pro / Xiaomi Redmi K50 Ultra&lt;/cell&gt;
        &lt;cell&gt;diting&lt;/cell&gt;
        &lt;cell&gt;Adrianyyy, ArianK16a&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi 13 Pro&lt;/cell&gt;
        &lt;cell&gt;nuwa&lt;/cell&gt;
        &lt;cell&gt;Minus&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi 13&lt;/cell&gt;
        &lt;cell&gt;fuxi&lt;/cell&gt;
        &lt;cell&gt;lolipuru&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Mi 9T / Xiaomi Redmi K20 (China) / Xiaomi Redmi K20 (India)&lt;/cell&gt;
        &lt;cell&gt;davinci&lt;/cell&gt;
        &lt;cell&gt;ArianK16a&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Mi A3&lt;/cell&gt;
        &lt;cell&gt;laurel_sprout&lt;/cell&gt;
        &lt;cell&gt;Skyblueborb&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi POCO F5 (Global) / Xiaomi POCO F5 (India) / Xiaomi Redmi Note 12 Turbo&lt;/cell&gt;
        &lt;cell&gt;marble&lt;/cell&gt;
        &lt;cell&gt;Adrianyyy, ArianK16a&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi POCO F5 Pro / Xiaomi Redmi K60&lt;/cell&gt;
        &lt;cell&gt;mondrian&lt;/cell&gt;
        &lt;cell&gt;Adrianyyy, ArianK16a&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Redmi 12C / Xiaomi Redmi 12C NFC / Xiaomi POCO C55&lt;/cell&gt;
        &lt;cell&gt;earth&lt;/cell&gt;
        &lt;cell&gt;surblazer&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Redmi 3S / Xiaomi Redmi 3X / Xiaomi Redmi 4 (India) / Xiaomi Redmi 4X / Xiaomi Redmi Note 5A Prime / Xiaomi Redmi Y1 Prime&lt;/cell&gt;
        &lt;cell&gt;Mi8937&lt;/cell&gt;
        &lt;cell&gt;0xCAFEBABE&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Redmi 4A / Xiaomi Redmi 5A / Xiaomi Redmi Note 5A Lite / Xiaomi Redmi Y1 Lite&lt;/cell&gt;
        &lt;cell&gt;Mi8917&lt;/cell&gt;
        &lt;cell&gt;0xCAFEBABE&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Redmi 7A / Xiaomi Redmi 8 / Xiaomi Redmi 8A / Xiaomi Redmi 8A Dual&lt;/cell&gt;
        &lt;cell&gt;Mi439&lt;/cell&gt;
        &lt;cell&gt;0xCAFEBABE&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Redmi K60 Pro&lt;/cell&gt;
        &lt;cell&gt;socrates&lt;/cell&gt;
        &lt;cell&gt;WenHao2130&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Redmi Note 10 Pro / Xiaomi Redmi Note 10 Pro (India) / Xiaomi Redmi Note 10 Pro Max (India)&lt;/cell&gt;
        &lt;cell&gt;sweet&lt;/cell&gt;
        &lt;cell&gt;basamaryan, danielml3&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Redmi Note 10S / Xiaomi Redmi Note 10S NFC / Xiaomi Redmi Note 10S Latin America / Xiaomi POCO M5s&lt;/cell&gt;
        &lt;cell&gt;rosemary&lt;/cell&gt;
        &lt;cell&gt;surblazer&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Redmi Note 7 Pro&lt;/cell&gt;
        &lt;cell&gt;violet&lt;/cell&gt;
        &lt;cell&gt;0xCAFEBABE&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Xiaomi Redmi Note 8 / Xiaomi Redmi Note 8T&lt;/cell&gt;
        &lt;cell&gt;ginkgo&lt;/cell&gt;
        &lt;cell&gt;Skyblueborb, mikeioannina, programminghoch10&lt;/cell&gt;
        &lt;cell&gt;22.2&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;head rend="h4"&gt;Added 22.2 devices&lt;/head&gt;
    &lt;table&gt;
      &lt;row span="4"&gt;
        &lt;cell role="head"&gt;Device name&lt;/cell&gt;
        &lt;cell role="head"&gt;Wiki&lt;/cell&gt;
        &lt;cell role="head"&gt;Maintainers&lt;/cell&gt;
        &lt;cell role="head"&gt;Moved from&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;ASUS ZenFone 8&lt;/cell&gt;
        &lt;cell&gt;sake&lt;/cell&gt;
        &lt;cell&gt;DD3Boh, mikooomich&lt;/cell&gt;
        &lt;cell&gt;20&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;ASUS Zenfone 5Z (ZS620KL)&lt;/cell&gt;
        &lt;cell&gt;Z01R&lt;/cell&gt;
        &lt;cell&gt;ThEMarD&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;LG Style3&lt;/cell&gt;
        &lt;cell&gt;style3lm&lt;/cell&gt;
        &lt;cell&gt;rtx4d&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;LG Velvet&lt;/cell&gt;
        &lt;cell&gt;caymanslm&lt;/cell&gt;
        &lt;cell&gt;rtx4d&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g 5G / Motorola moto one 5G ace&lt;/cell&gt;
        &lt;cell&gt;kiev&lt;/cell&gt;
        &lt;cell&gt;basamaryan, Jleeblanch, SyberHexen, Vivekachooz&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Motorola moto g 5G plus / Motorola moto one 5G&lt;/cell&gt;
        &lt;cell&gt;nairo&lt;/cell&gt;
        &lt;cell&gt;ItsVixano, Ivanmeler, SyberHexen, zlewchan&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Nokia 6.1 (2018)&lt;/cell&gt;
        &lt;cell&gt;PL2&lt;/cell&gt;
        &lt;cell&gt;npjohnson&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Nokia 7 plus&lt;/cell&gt;
        &lt;cell&gt;B2N&lt;/cell&gt;
        &lt;cell&gt;Tuan Anh&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Nokia 8&lt;/cell&gt;
        &lt;cell&gt;NB1&lt;/cell&gt;
        &lt;cell&gt;Tuan Anh&lt;/cell&gt;
        &lt;cell&gt;21&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Nothing Phone (1)&lt;/cell&gt;
        &lt;cell&gt;Spacewar&lt;/cell&gt;
        &lt;cell&gt;zlewchan, ko_ko_konb&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Nubia Red Magic 5G (Global) / Nubia Red Magic 5G (China) / Nubia Red Magic 5S (Global) / Nubia Red Magic 5S (China)&lt;/cell&gt;
        &lt;cell&gt;nx659j&lt;/cell&gt;
        &lt;cell&gt;zlewchan&lt;/cell&gt;
        &lt;cell&gt;20&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Nubia Red Magic Mars&lt;/cell&gt;
        &lt;cell&gt;nx619j&lt;/cell&gt;
        &lt;cell&gt;Cyborg2017, rtx4d&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Nubia Z17&lt;/cell&gt;
        &lt;cell&gt;nx563j&lt;/cell&gt;
        &lt;cell&gt;BeYkeRYkt&lt;/cell&gt;
        &lt;cell&gt;21&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Nubia Z18&lt;/cell&gt;
        &lt;cell&gt;nx606j&lt;/cell&gt;
        &lt;cell&gt;Cyborg2017, rtx4d&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 12&lt;/cell&gt;
        &lt;cell&gt;waffle&lt;/cell&gt;
        &lt;cell&gt;chandu078&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 5&lt;/cell&gt;
        &lt;cell&gt;cheeseburger&lt;/cell&gt;
        &lt;cell&gt;qsnc&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus 5T&lt;/cell&gt;
        &lt;cell&gt;dumpling&lt;/cell&gt;
        &lt;cell&gt;qsnc&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus Nord N20&lt;/cell&gt;
        &lt;cell&gt;gunnar&lt;/cell&gt;
        &lt;cell&gt;tangalbert919&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;OnePlus Nord N200&lt;/cell&gt;
        &lt;cell&gt;dre&lt;/cell&gt;
        &lt;cell&gt;tangalbert919&lt;/cell&gt;
        &lt;cell&gt;21&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy A52 4G&lt;/cell&gt;
        &lt;cell&gt;a52q&lt;/cell&gt;
        &lt;cell&gt;Simon1511&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy A52s 5G&lt;/cell&gt;
        &lt;cell&gt;a52sxq&lt;/cell&gt;
        &lt;cell&gt;Simon1511&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy A72&lt;/cell&gt;
        &lt;cell&gt;a72q&lt;/cell&gt;
        &lt;cell&gt;Simon1511&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy A73 5G&lt;/cell&gt;
        &lt;cell&gt;a73xq&lt;/cell&gt;
        &lt;cell&gt;Simon1511&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy M52 5G&lt;/cell&gt;
        &lt;cell&gt;m52xq&lt;/cell&gt;
        &lt;cell&gt;Simon1511&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Samsung Galaxy Tab A 8.0 (2019)&lt;/cell&gt;
        &lt;cell&gt;gtowifi&lt;/cell&gt;
        &lt;cell&gt;lifehackerhansol&lt;/cell&gt;
        &lt;cell&gt;21&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Vsmart Joy 3 / Vsmart Joy 3+&lt;/cell&gt;
        &lt;cell&gt;casuarina&lt;/cell&gt;
        &lt;cell&gt;Tuan Anh, nhglong&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Black Shark&lt;/cell&gt;
        &lt;cell&gt;shark&lt;/cell&gt;
        &lt;cell&gt;rtx4d, tdrkDev&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi MIX Fold 2&lt;/cell&gt;
        &lt;cell&gt;zizhan&lt;/cell&gt;
        &lt;cell&gt;Adrianyyy, ArianK16a&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Mi 11i / Xiaomi Redmi K40 Pro / Xiaomi Redmi K40 Pro+ / Xiaomi Mi 11X Pro&lt;/cell&gt;
        &lt;cell&gt;haydn&lt;/cell&gt;
        &lt;cell&gt;ikeramat&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Mi 8 Explorer Edition&lt;/cell&gt;
        &lt;cell&gt;ursa&lt;/cell&gt;
        &lt;cell&gt;bgcngm&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Mi 8 Pro&lt;/cell&gt;
        &lt;cell&gt;equuleus&lt;/cell&gt;
        &lt;cell&gt;bgcngm&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Mi 8&lt;/cell&gt;
        &lt;cell&gt;dipper&lt;/cell&gt;
        &lt;cell&gt;infrag&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Mi MIX 2S&lt;/cell&gt;
        &lt;cell&gt;polaris&lt;/cell&gt;
        &lt;cell&gt;bgcngm&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Mi MIX 3&lt;/cell&gt;
        &lt;cell&gt;perseus&lt;/cell&gt;
        &lt;cell&gt;bgcngm, rtx4d&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi Mi Note 10 / Xiaomi Mi Note 10 Pro / Xiaomi Mi CC9 Pro&lt;/cell&gt;
        &lt;cell&gt;tucana&lt;/cell&gt;
        &lt;cell&gt;SanyaPilot&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi POCO F1&lt;/cell&gt;
        &lt;cell&gt;beryllium&lt;/cell&gt;
        &lt;cell&gt;bgcngm, warabhishek&lt;/cell&gt;
        &lt;cell&gt;22.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi POCO X3 NFC&lt;/cell&gt;
        &lt;cell&gt;surya&lt;/cell&gt;
        &lt;cell&gt;Shimitar, TheStrechh, ikeramat&lt;/cell&gt;
        &lt;cell&gt;21&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Xiaomi POCO X3 Pro&lt;/cell&gt;
        &lt;cell&gt;vayu&lt;/cell&gt;
        &lt;cell&gt;SebaUbuntu&lt;/cell&gt;
        &lt;cell&gt;20&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;ZTE Axon 9 Pro&lt;/cell&gt;
        &lt;cell&gt;akershus&lt;/cell&gt;
        &lt;cell&gt;rtx4d, tdrkDev&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://lineageos.org/Changelog-30/"/><published>2025-10-11T23:53:17+00:00</published></entry></feed>