<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><id>hnrss.org/frontpage</id><title>Hacker News: Front Page</title><updated>2025-09-17T11:08:03.874050+00:00</updated><link href="https://news.ycombinator.com/" rel="alternate"/><link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml" rel="self"/><generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator><subtitle>Hacker News RSS</subtitle><entry><id>https://news.ycombinator.com/item?id=45264340</id><title>Bertrand Russell to Oswald Mosley (1962)</title><updated>2025-09-17T11:08:15.448554+00:00</updated><content>&lt;doc fingerprint="13ab5aceef327fdf"&gt;
  &lt;main&gt;
    &lt;p&gt;Bertrand Russell, one of the great intellectuals of his generation, was known by most as the founder of analytic philosophy, but he was actually a man of many talents: a pioneering mathematician, an accomplished logician, a tireless activist, a respected historian, and a Nobel Prize-winning writer, to name but a handful. When he wrote this principled letter at the beginning of 1962, Russell was 89 years old and clearly still a man of morals who stood firm in his beliefs. Its recipient was Sir Oswald Mosley, a man most famous for founding, in 1932, the British Union of Fascists.&lt;/p&gt;
    &lt;p&gt;Transcript follows.&lt;/p&gt;
    &lt;p&gt;(Sign up for the free Letters of Note newsletter to receive these letters in your inbox. This particular letter can also be found in the bestselling book, More Letters of Note.)&lt;/p&gt;
    &lt;p&gt;22 January 1962&lt;/p&gt;
    &lt;p&gt;Sir Oswald Mosley,&lt;lb/&gt;5, Lowndes Court,&lt;lb/&gt;Lowndes Square,&lt;lb/&gt;London, S.W.1.&lt;/p&gt;
    &lt;p&gt;Dear Sir Oswald,&lt;/p&gt;
    &lt;p&gt;Thank you for your letter and for your enclosures. I have given some thought to our recent correspondence. It is always difficult to decide on how to respond to people whose ethos is so alien and, in fact, repellent to one’s own. It is not that I take exception to the general points made by you but that every ounce of my energy has been devoted to an active opposition to cruel bigotry, compulsive violence, and the sadistic persecution which has characterised the philosophy and practice of fascism.&lt;/p&gt;
    &lt;p&gt;I feel obliged to say that the emotional universes we inhabit are so distinct, and in deepest ways opposed, that nothing fruitful or sincere could ever emerge from association between us.&lt;/p&gt;
    &lt;p&gt;I should like you to understand the intensity of this conviction on my part. It is not out of any attempt to be rude that I say this but because of all that I value in human experience and human achievement.&lt;/p&gt;
    &lt;p&gt;Yours sincerely,&lt;/p&gt;
    &lt;p&gt;Bertrand Russell&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://lettersofnote.com/2016/02/02/every-ounce-of-my-energy/"/><published>2025-09-16T16:22:40+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45264562</id><title>Waymo has received our pilot permit allowing for commercial operations at SFO</title><updated>2025-09-17T11:08:14.905361+00:00</updated><content>&lt;doc fingerprint="db87b0168e9549f1"&gt;
  &lt;main&gt;
    &lt;div&gt;
      &lt;p&gt;All systems go at SFO! Waymo has received our pilot permit allowing for commercial operations at San Francisco International Airport.&lt;/p&gt;
      &lt;p&gt;We’ll partner with SFO to prepare our operations at the airport in phases, beginning with employee testing soon ahead of welcoming Bay Area riders. Pickups and dropoffs will initially start at SFO’s Kiss &amp;amp; Fly area – a short AirTrain ride from the terminals – with the intention to explore other locations at the airport in the future.&lt;/p&gt;
      &lt;p&gt;This is a major milestone that strengthens Waymo’s impact on the region and offers residents and visitors an innovative way to travel. With years of experience serving riders at Phoenix Sky Harbor (PHX) and operations beginning soon at San Jose Mineta International Airport (SJC), we’re accelerating our efforts to serve more airports in more cities as we scale.&lt;/p&gt;
      &lt;p&gt;“Across San Francisco, we are expanding safe, reliable, and modern transportation options—supporting our city’s economic comeback, boosting our tourism industry, and connecting residents and visitors to everything our city has to offer,” said Mayor Lurie. “We announced in March that we wanted visitors to be able to ride in a Waymo as soon as they arrived in San Francisco, and today, we are taking another important step to get there.”&lt;/p&gt;
      &lt;p&gt;“Bringing the Waymo experience to San Francisco International Airport is about more than just a ride—it’s about providing a safe, reliable, magical way for Bay Area residents and global visitors to connect with the places and people that matter most,” said Tekedra Mawakana, co-CEO, Waymo. “We’re grateful for the partnership with SFO and the vision of Mayor Lurie in making this a reality.”&lt;/p&gt;
    &lt;/div&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://waymo.com/blog/#short-all-systems-go-at-sfo-waymo-has-received-our-pilot-permit"/><published>2025-09-16T16:38:08+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45265745</id><title>Denmark close to wiping out cancer-causing HPV strains after vaccine roll-out</title><updated>2025-09-17T11:08:14.657703+00:00</updated><content>&lt;doc fingerprint="2714216008bd02a0"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Denmark close to wiping out leading cancer-causing HPV strains after vaccine roll-out&lt;/head&gt;
    &lt;p&gt;A nationwide study suggests infections with human papillomavirus (HPV) types 16 and 18 have been virtually eliminated since vaccination began in 2008 – protecting even unvaccinated women.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;2 September 2025&lt;/item&gt;
      &lt;item&gt;3 min read&lt;/item&gt;
      &lt;item&gt;by Linda Geddes&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Denmark has effectively eliminated infections with the two biggest cancer-causing strains of human papillomavirus (HPV) since the vaccine was introduced in 2008, data suggests.&lt;/p&gt;
    &lt;p&gt;The research, published in Eurosurveillance, could have implications for how vaccinated populations are screened in the coming years – particularly as people increasingly receive vaccines that protect against multiple high-risk types of HPV virus.&lt;/p&gt;
    &lt;head rend="h3"&gt;Deadly cancer&lt;/head&gt;
    &lt;p&gt;After breast cancer, cervical cancer is the most common type of cancer among women aged 15 to 44 years in Europe, and human papillomavirus (HPV) is the leading cause.&lt;/p&gt;
    &lt;p&gt;At least 14 high-risk types of the virus have been identified, and before Denmark introduced the HPV vaccine in 2008, HPV types 16 and 18 accounted for around three quarters (74%) of cervical cancers in the country.&lt;/p&gt;
    &lt;p&gt;Initially, girls were offered a vaccine that protected against four types of HPV: 16, 18, plus the lower risk types 6 and 11. However, since 2017, Danish girls have been offered a vaccine that protects against nine types of HPV – including those accounting for approximately 90% of cervical cancers.&lt;/p&gt;
    &lt;head rend="h4"&gt;Have you read?&lt;/head&gt;
    &lt;p&gt;To better understand the impact that these vaccination programmes have had on HPV prevalence as vaccinated girls reach cervical screening age (23 to 64 years in Denmark), Dr Mette Hartmann Nonboe at Zealand University Hospital in Nykøbing Falster and colleagues analysed up to three consecutive cervical cell samples collected from Danish women between 2017 and 2024, when they were 22 to 30 years of age.&lt;/p&gt;
    &lt;p&gt;“In 2017, one of the first birth cohorts of women in Denmark who were HPV-vaccinated as teenage girls in 2008 reached the screening age of 23 years,” Nonboe explained.&lt;/p&gt;
    &lt;p&gt;“Compared with previous generations, these women are expected to have a considerably lower risk of cervical cancer, and it is pertinent to assess [their] future need for screening.”&lt;/p&gt;
    &lt;head rend="h3"&gt;High-risk HPV elimination&lt;/head&gt;
    &lt;p&gt;The research found that infection with the high-risk HPV types (HPV16/18) covered by the vaccine has been almost eliminated.&lt;/p&gt;
    &lt;p&gt;“Before vaccination, the prevalence of HPV16/18 was between 15 and 17%, which has decreased in vaccinated women to less than one percent by 2021,” the researchers said.&lt;/p&gt;
    &lt;p&gt;In addition, prevalence of HPV types 16 and 18 in women who had not been vaccinated against HPV was five percent. This strongly suggests that the vaccine has reduced the circulation of these HPV types in general population, to the extent that even unvaccinated women are now less likely to be infected with them – so called “population immunity” – the researchers said.&lt;/p&gt;
    &lt;p&gt;Despite this good news, roughly one third of women screened during the study period still had infection with high-risk HPV types not covered by the original vaccines – and new infections with these types were more frequent among vaccinated women, compared to unvaccinated ones.&lt;/p&gt;
    &lt;p&gt;This is expected to fall once girls who received the more recent ‘nine-valent’ vaccine reach screening age. At this point, the screening guidelines should potentially be reconsidered, Nonboe and colleagues said.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://www.gavi.org/vaccineswork/denmark-close-wiping-out-leading-cancer-causing-hpv-strains-after-vaccine-roll-out"/><published>2025-09-16T18:12:29+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45266039</id><title>How to make the Framework Desktop run even quieter</title><updated>2025-09-17T11:08:12.768091+00:00</updated><content>&lt;doc fingerprint="1dfb18b60853d5bb"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;How to make the Framework Desktop run even quieter&lt;/head&gt;
    &lt;head rend="h2"&gt;How to make the Framework Desktop run even quieter&lt;/head&gt;
    &lt;p&gt;Not so long ago, the compact, small form factor PC segment witnessed a significant refreshment with the launch of the Framework desktop PC. If you've missed it and are wondering why this mini-PC is considered so special, it's because it was the first desktop PC to utilise the AMD Ryzen AI Max APU, a processor previously exclusive to laptops.&lt;/p&gt;
    &lt;p&gt;The AMD Ryzen AI Max processor stands out for its exceptional speed and integrated graphics performance, frequently surprising users with its gaming capabilities, even on demanding titles. Users often highlight its powerful integrated GPU, which can leverage a massive memory pool (up to 96GB for AI tasks), allowing it to efficiently handle complex AI and deep learning workloads. The raw performance delivered by this chip makes it a worthwhile choice for intensive tasks and creative workflows.&lt;/p&gt;
    &lt;p&gt;As a collaborator and partner on the Framework Desktop mini-PC project, our first steps involved integrating our NF-A12x25 fan and a fan duct. This way, we could significantly reduce system noise levels while ensuring safe operating temperatures – you can read more about this here. But can the Framework Desktop be made even quieter? We wanted to leave no stone unturned to find out, so we took it a step further by trying to integrate our signature Noctua fan grill design that debuted on the Seasonic Prime TX-1600 Noctua Edition power supply.&lt;/p&gt;
    &lt;p&gt;It must be noted that customer safety and EMC requirements for the mini PC, a standalone electrical item, differ from those for hardware components (such as the PSU) designed to be inside a PC case. The safety standard suggests that ventilation openings on case side panels need to be less than 5mm in diameter. To comply with safety regulations, we created an updated version of the original fan grille as implemented on the Seasonic Prime TX 1600 Noctua Edition power supply featuring more struts and a smaller opening size, ensuring full adherence to these standards. To complement the new grille design, we have also designed a custom, funnel shaped fan duct that makes maximum use of the outermost openings of the custom side panel.&lt;/p&gt;
    &lt;p&gt;In combination, the custom side panel and duct design provided a massive noise reduction compared to the stock configuration, particularly in lower fan speed ranges. We have measured around 7 dB(A) lower noise levels at around 50% fan speed, and up to 5 dB(A) lower at higher fan speeds, when compared at the same APU operating temperature.&lt;/p&gt;
    &lt;p&gt;While the custom side panel with our signature Noctua grill as well as the custom fan duct are not slated for mass production at this point, we are more than happy to share the 3D CAD files for everyone who is looking to make their Framework Desktop run even quieter.&lt;/p&gt;
    &lt;p&gt;Both the custom side panel and the customised fan ductare available to download at Printables.com for you to 3D-print at home:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Custom side panel with Noctua-style fan grill&lt;/item&gt;
      &lt;item&gt;Custom fan duct to make best use of the custom side panel&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Fortunately, the quality of 3D printing technologies has advanced so much that you can end up with a nice, clean side panel, which will additionally optimise the sound profile, or bring your APU temperatures down significantly.&lt;/p&gt;
    &lt;p&gt;In addition to redesigning and testing the Noctua fan grill, we also evaluated various other scenarios. These included replacing the NF-A12x25 with its G2 variant and incorporating an additional 8cm fan for exhaust purposes. The findings of these tests may prove surprising. The additional NF-A8 PWM fan, which was added as an exhaust fan at the front of the case, yielded slightly lower temperatures, but at the expense of extra noise emission, so it’s not a setup that we would recommend from a performance-to-noise efficiency point of view.&lt;/p&gt;
    &lt;p&gt;While upgrading to an NF-A12x25 G2 does provide some acoustical benefits compared to the stock setup (around 1 to 1.5 dB(A) lower noise levels at the same temperatures), its maximum speed is limited to 1800 RPM, so it cannot match the performance headroom of the 2400 RPM HS-PWM version of the NF-A12x25 that is supplied with the Framework Desktop PC. This high-speed version of the „G1“ fan is a safeguard that ensures the system can maintain full performance in worst-case conditions with high ambient temperatures. In other words, we would only recommend upgrading to the NF-A12x25 G2 if you seek to lower noise levels as much as possible and if you are willing to sacrifice the maximum performance headroom in worst-case scenarios that the G1 HS-PWM fan provides.&lt;/p&gt;
    &lt;p&gt;In summary, after a lot of simulation, experimenting and testing, we can conclude that not all tweaks to the Framework Desktop’s cooling setup make sense. However, if you have access to a 3D printer, swapping the stock side panel and fan duct for the custom designed ones can help to make your unit run significantly quieter.&lt;/p&gt;
    &lt;p&gt;Related products:&lt;/p&gt;
    &lt;p&gt;Your opinion matters!&lt;/p&gt;
    &lt;p&gt;We are excited to invite you to participate in our short website survey. It will only take 5 minutes of your time!&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://noctua.at/en/how-to-make-the-framework-desktop-run-even-quieter"/><published>2025-09-16T18:33:21+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45266771</id><title>DataTables CDN Outage – post incident review</title><updated>2025-09-17T11:08:12.521704+00:00</updated><content>&lt;doc fingerprint="a50a085124e2b495"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Outage - post incident review&lt;/head&gt;
    &lt;p&gt;On 29th July 2025, the DataTables.net site had a major outage as a result of an attack. This took out the main site with its examples and documentation, the support forum, and the sub-domains, including, most importantly, the DataTables CDN.&lt;/p&gt;
    &lt;p&gt;Digging into such an event, when something has gone so wrong, is not a fun thing to do, but it is important for me to do so I can learn what I can do better in future, for you so you can understand what happened and the challenges faced, and for the community so we can try to stop this sort of thing happening in future.&lt;/p&gt;
    &lt;head rend="h2"&gt;Domain hijacking&lt;/head&gt;
    &lt;p&gt;Any website has a large surface which needs to be protected against hacking attempts - the application software, the HTTP server, the actual server the site resides on, DNS, and of course, the domain registration itself. The attack yesterday came on the domain name, whereby the attacker managed to move the domain out of the account I have with the domain registrar I use, into another controlled by the attacker, at which point they were able to change the name servers, pointing the domain at a different server.&lt;/p&gt;
    &lt;p&gt;To be clear, any account information you have on DataTables.net is safe - the server was never breached. The content on the DataTables server is safe. The DataTables source code is safe. Services are now all normal, but this was a major disruption for the site and anyone using its services, with some caching issues persisting at the time of writing.&lt;/p&gt;
    &lt;head rend="h3"&gt;How?!&lt;/head&gt;
    &lt;p&gt;So how did the attacker manage to execute this domain takeover? Around mid-June, I started receiving an extraordinary amount of email to one of my old email addresses. It was sign-ups for just about every list imaginable - three per minute, which went on continuously. I created a filter and assigned everything from that email address to a folder.&lt;/p&gt;
    &lt;p&gt;The attacker's next step was to create an account with the same registrar &lt;code&gt;datatables.net&lt;/code&gt; is registered with and request a transfer of the domain to their account. They used an email address intentionally crafted to look like it could be mine and submitted a fake driver's license and utility bill with information that could only have been from leaked WHOIS data. The registrar accepted this as proof of identity and started the transfer process. That included sending an email to me to confirm the transfer, an email which I never saw due to the flood of emails (which it is now easy to say was the start of the attack).&lt;/p&gt;
    &lt;p&gt;At the end of a five day period with no reply from me about the transfer, the registrar defaulted to accepting the transfer and the domain was moved to a different account. At no point were any of my accounts or email compromised - the attacker managed to socially engineer the registrar into making the transfer.&lt;/p&gt;
    &lt;head rend="h2"&gt;Events on the day&lt;/head&gt;
    &lt;p&gt;Once the domain was under the attacker's control, events unfolded as follows on 29th July:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;02:57 - The name servers for &lt;code&gt;datatables.net&lt;/code&gt;were changed to point at different CloudFlare name servers. CloudFlare blocked all traffic to the new target with a 1000 error. Some users are still able to load CDN resources due to local cache.&lt;/item&gt;
      &lt;item&gt;07:10 - I read monitoring emails saying DataTables.net when I woke. Dashed to a computer.&lt;/item&gt;
      &lt;item&gt;07:21 - I contacted the registrar, having realised that the domain was no longer under my account.&lt;/item&gt;
      &lt;item&gt;08:45 - While replying to emails and messages saying the site was offline, I realised I could create a mirror domain of the CDN.&lt;/item&gt;
      &lt;item&gt;09:42 - &lt;code&gt;datatables-cdn.com&lt;/code&gt;was deployed as a mirror, allowing those affected to change just the domain - the script paths would still work.&lt;/item&gt;
      &lt;item&gt;11:05 - Submitted evidence that I was the rightful owner to the registrar.&lt;/item&gt;
      &lt;item&gt;12:10 - Submitted further evidence to the registrar (pro-tip, make sure your WHOIS information is up-to-date).&lt;/item&gt;
      &lt;item&gt;13:11 - Domain transferred back to my account - name servers reassigned to what they should be, and services start recovering.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Unfortunately, while the &lt;code&gt;datatables.net&lt;/code&gt; server was fully ready at this point, DNS propagation is not instant, and many routers will cache DNS lookups. The DataTables TTL for DNS is all set to 5 minutes ("Auto" in CloudFlare's DNS management), which should allow for reasonably fast propagation, however, many routers appear to incorrectly hold their cache much longer and as a result many users continued to have problems loading resources from the CDN (in some cases this is still the case at the time of writing).&lt;/p&gt;
    &lt;head rend="h2"&gt;CDN&lt;/head&gt;
    &lt;p&gt;Normally if a site like DataTables were to go down, it would be irritating, but we can all survive without documentation for a software library for a day. However, the impact in this case was significant due to the DataTables CDN.&lt;/p&gt;
    &lt;p&gt;DataTables and its extensions (minus Editor, due to its commercial license) are MIT open source software, and to make it easily accessible for developers, it can be obtained in a number of ways - NPM, download for self hosting, or via the DataTables CDN server. Many choose to use the CDN - I provide it for free and it is fast and convenient. I use CloudFlare as a caching service, which makes it super fast and reliable (as long as it has a domain pointing at it!).&lt;/p&gt;
    &lt;p&gt;The image above shows the gap in the requests to DataTables during the attack. The CDN has around 55TB of data transferred per month. At approximately 3'440 million requests, that is a lot of Javascript and CSS! It will also give you an idea of the impact that a disruption to the CDN will have around the web, and what makes DataTables a valuable target for an attack of this type.&lt;/p&gt;
    &lt;head rend="h2"&gt;Credit where it is due&lt;/head&gt;
    &lt;p&gt;I'd like to extend a big thank you to my domain registrar for resolving this issue. It could have been difficult, but they made the process clear, straightforward and explained actions to me along the way.&lt;/p&gt;
    &lt;p&gt;CloudFlare, they blocked requests during the outage with a 1000 error, which could otherwise have been served maliciously.&lt;/p&gt;
    &lt;p&gt;Finally, to you, the DataTables community. I fully recognise how taxing it will have been for many of you trying to work out why the CDN wasn't working yesterday and the impact on your own businesses. Not once did I have people virtually yelling at me once I communicated the issue, I was almost universally wished well while I got on with trying to fix it.&lt;/p&gt;
    &lt;head rend="h3"&gt;And contempt where it belongs&lt;/head&gt;
    &lt;p&gt;The fact that someone would attack an open source product such as DataTables sickens me. I release by far the majority of my work as free open source software, host a free to use CDN, and support the software. I'm not just trying to make the world that little bit better; I really enjoy what I do as well. This attack was an attack on all of the work I've done, and given how it was executed, the attacker doesn't appear to have got out of it other than proof that they could, and to damage my reputation.&lt;/p&gt;
    &lt;head rend="h2"&gt;Learning process&lt;/head&gt;
    &lt;p&gt;In online security, it is not a question of if one is going to be attacked; it is a question of when. For me, it was over the last month, culminating in the events of yesterday. It was an attack vector that I had not expected - no compromised accounts, but rather social engineering against the registrar.&lt;/p&gt;
    &lt;p&gt;Immediate actions I've taken:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;All email from my domain registrar is now marked as high priority and will never skip the inbox.&lt;/item&gt;
      &lt;item&gt;Put forward my opinion that having the default timeout action of a domain transfer request to accept it is wrong.&lt;/item&gt;
      &lt;item&gt;Added DNS monitoring for DataTables.net (HTTP and ping were already monitored along with various other automated security scanners).&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Further actions:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;I will make the CDN server available for anyone to spin a new one up with checkout from GitHub.&lt;/item&gt;
      &lt;item&gt;Continue to improve my security monitoring of all domains I manage.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Actions you can take:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Use sub-resource integrity for all external Javascript and CSS you load. Since February this year, the DataTables download builder will automatically calculate the SRI for the resources selected. Use it! It makes sure that what you want to load is what actually gets loaded.&lt;/item&gt;
      &lt;item&gt;Consider if you want to download and host the files yourself, rather than loading them from an external CDN.&lt;/item&gt;
      &lt;item&gt;If you ever get a flood of sign up emails - consider that it is to hide something!&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Moving on&lt;/head&gt;
    &lt;p&gt;My plan for yesterday had been to continue work on Editor 2.5 and ColumnControl 1.1. Once the dust has fully settled, I will be back on the case - expect to hear more about them in August.&lt;/p&gt;
    &lt;p&gt;Stay safe out there everyone.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://datatables.net/blog/2025/july-29-outage"/><published>2025-09-16T19:27:40+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45266854</id><title>Should we drain the Everglades?</title><updated>2025-09-17T11:08:12.458097+00:00</updated><content/><link href="https://rabbitcavern.substack.com/p/should-we-drain-the-everglades"/><published>2025-09-16T19:33:35+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45268269</id><title>Doom crash after 2.5 years of real-world runtime confirmed on real hardware</title><updated>2025-09-17T11:08:11.764297+00:00</updated><content>&lt;doc fingerprint="dc4f80d558235299"&gt;
  &lt;main&gt;
    &lt;p&gt;Two and a half years ago, I started my now longest real-world software experiment. I had read an article about how DOOMs engine works and noticed how a variable for tracking the demo kept being incremented even after the next demo started. This variable was compared with a second one storing its previous value. The issue here being, each incrementation would cause the variable to slowly get closer to an overflow, realistically this would never happen in a normal scenario, although it got me curious on just how long it would take until the game would crash due to this.&lt;lb/&gt; I did a few calculations, I don't remember the specifics of it sadly as it has been over two years since that point and I sadly did not document it back then (or I did, but on a partition I no longer have access to) but I remember having gotten roughly 2 1/2 years of possible runtime before an overflow. Obviously, I wanted to know if this would actually happen in the real game on real hardware.&lt;lb/&gt; So I set up DOOM on a small PDA, powered through a DIY 18650 based UPS which itself was connected to the USB port of my router for a constant 5V supply. I left the system running and mostly forgot about it.&lt;lb/&gt; ... Until today when I noticed a pop-up appearing on the device, not long ago from posting this to the board. The game had crashed, only hours after the two and a half year mark, proving that the variable did indeed overflow and cause the expected hard crash of the game: &lt;/p&gt;
    &lt;head rend="h2"&gt;DOOM crash after 2.5 years of real-world runtime confirmed on real hardware&lt;/head&gt;
    &lt;head rend="h3"&gt;DOOM crash after 2.5 years of real-world runtime confirmed on real hardware&lt;/head&gt;
    &lt;p&gt;~-~-~ MSD - Making your old devices useful again since 2022! ~-~-~&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://lenowo.org/viewtopic.php?t=31"/><published>2025-09-16T21:24:23+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45270087</id><title>AMD Open Source Driver for Vulkan project is discontinued</title><updated>2025-09-17T11:08:11.133054+00:00</updated><content>&lt;doc fingerprint="8fdbcb577bc7b5ab"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;AMDVLK open-source project is discontinued #416&lt;/head&gt;
    &lt;p&gt;-&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;p&gt;In a move to streamline development and strengthen our commitment to the open-source community, AMD is unifying its Linux Vulkan driver strategy and has decided to discontinue the AMDVLK open-source project, throwing our full support behind the RADV driver as the officially supported open-source Vulkan driver for Radeon™ graphics adapters.&lt;/p&gt;
          &lt;p&gt;This consolidation allows us to focus our resources on a single, high-performance codebase that benefits from the incredible work of the entire open-source community. We invite developers and users alike to utilize the RADV driver and contribute to its future.&lt;/p&gt;
          &lt;p&gt;We are excited about this focused path forward and are committed to the continued success of open-source Vulkan on Radeon.&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Beta Was this translation helpful? Give feedback.&lt;/p&gt;
    &lt;head rend="h2"&gt;Replies: 6 comments 8 replies&lt;/head&gt;
    &lt;p&gt;-&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;p&gt;What does this mean for AMDPAL and in particular ROCm on Windows?&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Beta Was this translation helpful? Give feedback.&lt;/p&gt;
    &lt;p&gt;-&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;p&gt;To clarify, does this mean that AMD will be allocating more engineering resources towards RADV?&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Beta Was this translation helpful? Give feedback.&lt;/p&gt;
    &lt;p&gt;-&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;p&gt;Why pal also got archieved?&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Beta Was this translation helpful? Give feedback.&lt;/p&gt;
    &lt;p&gt;-&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;p&gt;Hi all. that is, AMDVLK is no more? and then which Vulkan driver should I use?&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Beta Was this translation helpful? Give feedback.&lt;/p&gt;
    &lt;p&gt;-&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;p&gt;Is this a sign that RADV might come to Windows in the future? The Vulkan driver for Windows is based on AMDVLK...&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Beta Was this translation helpful? Give feedback.&lt;/p&gt;
    &lt;p&gt;-&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;p&gt;How about the pro vulkan driver?&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Beta Was this translation helpful? Give feedback.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/GPUOpen-Drivers/AMDVLK/discussions/416"/><published>2025-09-17T00:31:04+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45270108</id><title>About the security content of iOS 15.8.5 and iPadOS 15.8.5</title><updated>2025-09-17T11:08:11.070414+00:00</updated><content>&lt;doc fingerprint="b746dd2c1066535e"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;About the security content of iOS 15.8.5 and iPadOS 15.8.5&lt;/head&gt;
    &lt;p&gt;This document describes the security content of iOS 15.8.5 and iPadOS 15.8.5.&lt;/p&gt;
    &lt;head rend="h2"&gt;About Apple security updates&lt;/head&gt;
    &lt;p&gt;For our customers' protection, Apple doesn't disclose, discuss, or confirm security issues until an investigation has occurred and patches or releases are available. Recent releases are listed on the Apple security releases page.&lt;/p&gt;
    &lt;p&gt;Apple security documents reference vulnerabilities by CVE-ID when possible.&lt;/p&gt;
    &lt;p&gt;For more information about security, see the Apple Product Security page.&lt;/p&gt;
    &lt;head rend="h2"&gt;iOS 15.8.5 and iPadOS 15.8.5&lt;/head&gt;
    &lt;p&gt;Released September 15, 2025&lt;/p&gt;
    &lt;head rend="h3"&gt;ImageIO&lt;/head&gt;
    &lt;p&gt;Available for: iPhone 6s (all models), iPhone 7 (all models), iPhone SE (1st generation), iPad Air 2, iPad mini (4th generation), and iPod touch (7th generation)&lt;/p&gt;
    &lt;p&gt;Impact: Processing a malicious image file may result in memory corruption. Apple is aware of a report that this issue may have been exploited in an extremely sophisticated attack against specific targeted individuals.&lt;/p&gt;
    &lt;p&gt;Description: An out-of-bounds write issue was addressed with improved bounds checking.&lt;/p&gt;
    &lt;p&gt;CVE-2025-43300: Apple&lt;/p&gt;
    &lt;p&gt;Information about products not manufactured by Apple, or independent websites not controlled or tested by Apple, is provided without recommendation or endorsement. Apple assumes no responsibility with regard to the selection, performance, or use of third-party websites or products. Apple makes no representations regarding third-party website accuracy or reliability. for additional information.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://support.apple.com/en-us/125142"/><published>2025-09-17T00:34:02+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45270649</id><title>I got the highest score on ARC-AGI again swapping Python for English</title><updated>2025-09-17T11:08:11.015577+00:00</updated><content/><link href="https://jeremyberman.substack.com/p/how-i-got-the-highest-score-on-arc-agi-again"/><published>2025-09-17T01:53:47+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45271481</id><title>GNU Midnight Commander</title><updated>2025-09-17T11:08:10.788760+00:00</updated><content>&lt;doc fingerprint="cc41321c83a3eac7"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Welcome to Midnight Commander&lt;/head&gt;
    &lt;p&gt;GNU Midnight Commander (or &lt;code&gt;mc&lt;/code&gt;) is a visual, dual-pane file manager. It is released under the GNU General Public License and therefore qualifies as Free Software.&lt;/p&gt;
    &lt;p&gt;Midnight Commander is a feature-rich, full-screen, text-mode application that allows you to copy, move, and delete files and entire directory trees, search for files, and execute commands in the subshell. Internal viewer, editor and diff viewer are included.&lt;/p&gt;
    &lt;p&gt;&lt;code&gt;mc&lt;/code&gt; uses versatile text interface libraries such as ncurses or S-Lang, which allows it to work on a regular console, inside an X Window terminal, over &lt;code&gt;ssh&lt;/code&gt; connections, and in all kinds of remote shells.&lt;/p&gt;
    &lt;head rend="h2"&gt;Installation&lt;/head&gt;
    &lt;p&gt;The easiest way to install &lt;code&gt;mc&lt;/code&gt; is to use your system package manager:&lt;/p&gt;
    &lt;code&gt;# apt-get install mc
&lt;/code&gt;
    &lt;code&gt;# dnf install mc
&lt;/code&gt;
    &lt;code&gt;# pkg install mc
&lt;/code&gt;
    &lt;code&gt;% brew install midnight-commander
&lt;/code&gt;
    &lt;p&gt;Our source releases are kindly mirrored by OSU OSL. Our canonical repository is hosted on GitHub. See the Source code page for details.&lt;/p&gt;
    &lt;head rend="h2"&gt;Documentation&lt;/head&gt;
    &lt;p&gt;The primary way to learn about &lt;code&gt;mc&lt;/code&gt; is to use the context-sensitive online help available via F1.&lt;/p&gt;
    &lt;p&gt;We also have extensive manual pages, which are the primary source of official documentation:&lt;/p&gt;
    &lt;code&gt;$ man mc
&lt;/code&gt;
    &lt;p&gt;... or read the latest development version online.&lt;/p&gt;
    &lt;code&gt;$ man mcedit
&lt;/code&gt;
    &lt;p&gt;... or read the latest development version online.&lt;/p&gt;
    &lt;code&gt;$ man mcview
&lt;/code&gt;
    &lt;p&gt;... or read the latest development version online.&lt;/p&gt;
    &lt;code&gt;$ man mcdiff
&lt;/code&gt;
    &lt;p&gt;... or read the latest development version online.&lt;/p&gt;
    &lt;head rend="h2"&gt;Color schemes&lt;/head&gt;
    &lt;p&gt;Midnight Commander supports theming! Check out the skins that come with the distribution or develop your own:&lt;/p&gt;
    &lt;head rend="h2"&gt;Contributing &amp;amp; support&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;For support, see the Communication page.&lt;/item&gt;
      &lt;item&gt;To contribute to &lt;code&gt;mc&lt;/code&gt;, proceed to the "Development" section.&lt;/item&gt;
      &lt;item&gt;Release notes for the development version are collected on the wiki.&lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://midnight-commander.org/"/><published>2025-09-17T03:54:06+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45271484</id><title>The Asus Gaming Laptop ACPI Firmware Bug: A Deep Technical Investigation</title><updated>2025-09-17T11:08:10.059432+00:00</updated><content>&lt;doc fingerprint="a41ebc5c01b4858a"&gt;
  &lt;main&gt;
    &lt;p&gt;You own a high-end ASUS ROG laptop perhaps a Strix, Scar, or Zephyrus. It's specifications are impressive: an RTX 30/40 series GPU, a top-tier Intel processor, and plenty of RAM. Yet, it stutters during basic tasks like watching a YouTube video, audio crackles and pops on Discord calls, the mouse cursor freezes for a split second, just long enough to be infuriating.&lt;/p&gt;
    &lt;p&gt;You've likely tried all the conventional fixes:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Updating every driver imaginable, multiple times.&lt;/item&gt;
      &lt;item&gt;Performing a "clean" reinstallation of Windows.&lt;/item&gt;
      &lt;item&gt;Disabling every conceivable power-saving option.&lt;/item&gt;
      &lt;item&gt;Manually tweaking processor interrupt affinities.&lt;/item&gt;
      &lt;item&gt;Following convoluted multi-step guides from Reddit threads.&lt;/item&gt;
      &lt;item&gt;Even installing Linux, only to find the problem persists.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;If none of that worked, it's because the issue isn't with the operating system or a driver. The problem is far deeper, embedded in the machine's firmware, the BIOS.&lt;/p&gt;
    &lt;p&gt;The first tool in any performance investigator's toolkit for these symptoms is LatencyMon. It acts as a canary in the coal mine for system-wide latency issues. On an affected ASUS Zephyrus M16, the results are immediate and damning:&lt;/p&gt;
    &lt;code&gt;CONCLUSION
Your system appears to be having trouble handling real-time audio and other tasks. 
You are likely to experience buffer underruns appearing as drop outs, clicks or pops.

HIGHEST MEASURED INTERRUPT TO PROCESS LATENCY
Highest measured interrupt to process latency (μs):   65,816.60
Average measured interrupt to process latency (μs):   23.29

HIGHEST REPORTED ISR ROUTINE EXECUTION TIME
Highest ISR routine execution time (μs):              536.80
Driver with highest ISR routine execution time:       ACPI.sys

HIGHEST REPORTED DPC ROUTINE EXECUTION TIME  
Highest DPC routine execution time (μs):              5,998.83
Driver with highest DPC routine execution time:       ACPI.sys
&lt;/code&gt;
    &lt;p&gt;The data clearly implicates &lt;code&gt;ACPI.sys&lt;/code&gt;. However, the per-CPU data reveals a more specific pattern:&lt;/p&gt;
    &lt;code&gt;CPU 0 Interrupt cycle time (s):                       208.470124
CPU 0 ISR highest execution time (μs):                536.804674
CPU 0 DPC highest execution time (μs):                5,998.834725
CPU 0 DPC total execution time (s):                   90.558238
&lt;/code&gt;
    &lt;p&gt;CPU 0 is taking the brunt of the impact, spending over 90 seconds processing interrupts while other cores remain largely unaffected. This isn't a failure of load balancing; it's a process locked to a single core.&lt;/p&gt;
    &lt;p&gt;A similar test on a Scar 15 from 2022 shows the exact same culprit: high DPC latency originating from &lt;code&gt;ACPI.sys&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;It's easy to blame a Windows driver, but &lt;code&gt;ACPI.sys&lt;/code&gt; is not a typical driver. It primarily functions as an interpreter for ACPI Machine Language (AML), the code provided by the laptop's firmware (BIOS). If &lt;code&gt;ACPI.sys&lt;/code&gt; is slow, it's because the firmware is feeding it inefficient or flawed AML code to execute. These slowdowns are often triggered by General Purpose Events (GPEs) and traffic from the Embedded Controller (EC). To find the true source, we must dig deeper.&lt;/p&gt;
    &lt;p&gt;To understand what &lt;code&gt;ACPI.sys&lt;/code&gt; is doing during these latency spikes, we can use Event Tracing for Windows (ETW) to capture detailed logs from the ACPI providers.&lt;/p&gt;
    &lt;code&gt;# Find the relevant ACPI ETW providers
logman query providers | findstr /i acpi
# This returns two key providers:
# Microsoft-Windows-Kernel-Acpi {C514638F-7723-485B-BCFC-96565D735D4A}
# Microsoft-ACPI-Provider {DAB01D4D-2D48-477D-B1C3-DAAD0CE6F06B}

# Start a comprehensive trace session
logman start ACPITrace -p {DAB01D4D-2D48-477D-B1C3-DAAD0CE6F06B} 0xFFFFFFFF 5 -o C:\Temp\acpi.etl -ets
logman update ACPITrace -p {C514638F-7723-485B-BCFC-96565D735D4A} 0xFFFFFFFF 5 -ets

# Then once we're done we can stop the trace and check the etl file and save the data in csv format aswell.
logman stop ACPITrace -ets
tracerpt C:\Temp\acpi_providers.etl -o C:\Temp\acpi_events.csv -of CSV&lt;/code&gt;
    &lt;p&gt;Analyzing the resulting trace file in the Windows Performance Analyzer reveals a crucial insight. The spikes aren't random; they are periodic, occurring like clockwork every 30 to 60 seconds.&lt;/p&gt;
    &lt;p&gt;Random interruptions often suggest hardware faults or thermal throttling. A perfectly repeating pattern points to a systemic issue, a timer or a scheduled event baked into the system's logic.&lt;/p&gt;
    &lt;p&gt;The raw event data confirms this pattern:&lt;/p&gt;
    &lt;code&gt;Clock-Time (100ns),        Event,                      Kernel(ms), CPU
134024027290917802,       _GPE._L02 started,          13.613820,  0
134024027290927629,       _SB...BAT0._STA started,    0.000000,   4
134024027290932512,       _GPE._L02 finished,         -,          6
&lt;/code&gt;
    &lt;p&gt;The first event, &lt;code&gt;_GPE._L02&lt;/code&gt;, is an interrupt handler that takes 13.6 milliseconds to execute. For a high-priority interrupt, this is an eternity and is catastrophic for real-time system performance.&lt;/p&gt;
    &lt;p&gt;Deeper in the trace, another bizarre behavior emerges; the system repeatedly attempts to power the discrete GPU on and off, even when it's supposed to be permanently active.&lt;/p&gt;
    &lt;code&gt;Clock-Time,                Event,                    Duration
134024027315051227,       _SB.PC00.GFX0._PS0 start, 278μs     # GPU Power On
134024027315155404,       _SB.PC00.GFX0._DOS start, 894μs     # Display Output Switch
134024027330733719,       _SB.PC00.GFX0._PS3 start, 1364μs    # GPU Power Off
[~15 seconds later]
134024027607550064,       _SB.PC00.GFX0._PS0 start, 439μs     # Power On Again!
134024027607657368,       _SB.PC00.GFX0._DOS start, 1079μs    # Display Output Switch
134024027623134006,       _SB.PC00.GFX0._PS3 start, 394μs     # Power Off Again!
...
&lt;/code&gt;
    &lt;p&gt;This power cycling is nonsensical because the laptop is configured for a scenario where it is impossible: The system is in Ultimate Mode (via a MUX switch) with an external display connected.&lt;/p&gt;
    &lt;p&gt;In this mode:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;The discrete NVIDIA GPU (dGPU) is the only active graphics processor.&lt;/item&gt;
      &lt;item&gt;The integrated Intel GPU (iGPU) is completely powered down and bypassed.&lt;/item&gt;
      &lt;item&gt;The dGPU is wired directly to the internal and external displays.&lt;/item&gt;
      &lt;item&gt;There is no mechanism for switching between GPUs.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Yet, the firmware is relentlessly trying to power cycle the dGPU every 15-30 seconds. The dGPU in mux mode isn't just "preferred" - it's the ONLY path to the display. There's no fallback, and no alternative. When the firmware sends &lt;code&gt;_PS3&lt;/code&gt; (power off), it's attempting something architecturally impossible.&lt;/p&gt;
    &lt;p&gt;Most of the time, hardware sanity checks refuse these nonsensical commands, but even failed attempts introduce latency spikes causing audio dropouts, input lag, and accumulating performance degradation. Games freeze mid-session, videos buffer indefinitely, system responsiveness deteriorates until restart.&lt;/p&gt;
    &lt;p&gt;Sometimes, under specific thermal conditions or race conditions, the power-down actually succeeds. When the firmware manages to power down the GPU that's driving the display, the sequence is predictable and catastrophic:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Firmware executes &lt;code&gt;_PS3&lt;/code&gt;- GPU power off command&lt;/item&gt;
      &lt;item&gt;Hardware complies - safety checks fail or timing aligns&lt;/item&gt;
      &lt;item&gt;Display signal cuts - monitors go black&lt;/item&gt;
      &lt;item&gt;User input triggers wake - mouse/keyboard activity&lt;/item&gt;
      &lt;item&gt;Windows calls &lt;code&gt;PowerOnMonitor()&lt;/code&gt;- attempt display recovery&lt;/item&gt;
      &lt;item&gt;NVIDIA driver executes &lt;code&gt;_PS0&lt;/code&gt;- GPU power on command&lt;/item&gt;
      &lt;item&gt;GPU enters impossible state - firmware insists OFF, Windows needs ON&lt;/item&gt;
      &lt;item&gt;Driver thread blocks indefinitely - waiting for GPU response&lt;/item&gt;
      &lt;item&gt;30-second watchdog expires - Windows gives up&lt;/item&gt;
      &lt;item&gt;System crashes with BSOD&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;5: kd&amp;gt; !analyze -v
*******************************************************************************
*                                                                             *
*                        Bugcheck Analysis                                    *
*                                                                             *
*******************************************************************************

WIN32K_POWER_WATCHDOG_TIMEOUT (19c)
Win32k did not turn the monitor on in a timely manner.
Arguments:
Arg1: 0000000000000050, Calling monitor driver to power on.
Arg2: ffff8685b1463080, Pointer to the power request worker thread.
Arg3: 0000000000000000
Arg4: 0000000000000000
...
STACK_TEXT:  
fffff685`3a767130 fffff800`94767be0     : 00000000`00000047 00000000`00000000 00000000`00000000 00000000`00000000 : nt!KiSwapContext+0x76
fffff685`3a767270 fffff800`94726051     : ffff8685`b1463080 00000027`00008b94 fffff685`3a767458 fffff800`00000000 : nt!KiSwapThread+0x6a0
fffff685`3a767340 fffff800`94724ed3     : fffff685`00000000 00000000`00000043 00000000`00000002 0000008a`fbf50968 : nt!KiCommitThreadWait+0x271
fffff685`3a7673e0 fffff800`9471baf2     : fffff685`3a7675d0 02000000`0000001b 00000000`00000000 fffff800`94724500 : nt!KeWaitForSingleObject+0x773
fffff685`3a7674d0 fffff800`9471b7d5     : ffff8685`9cbec810 fffff685`3a7675b8 00000000`00010224 fffff800`00000003 : nt!ExpWaitForFastResource+0x92
fffff685`3a767580 fffff800`9471b49d     : 00000000`00000000 ffff8685`9cbec850 ffff8685`b1463080 00000000`00000000 : nt!ExpAcquireFastResourceExclusiveSlow+0x1e5
fffff685`3a767630 fffff800`28faca9b     : fffff800`262ee9c8 00000000`00000003 ffff8685`9cbec810 02000000`00000065 : nt!ExAcquireFastResourceExclusive+0x1bd
fffff685`3a767690 fffff800`28facbe5     : ffff8685`b31de000 00000000`00000000 ffffd31d`9a05244f 00000000`00000000 : win32kbase!&amp;lt;lambda_63b61c2369133a205197eda5bd671ee7&amp;gt;::&amp;lt;lambda_invoker_cdecl&amp;gt;+0x2b
fffff685`3a7676c0 fffff800`28e5f864     : ffffad0c`94d10878 fffff685`3a767769 ffffad0c`94d10830 ffff8685`b31de000 : win32kbase!UserCritInternal::`anonymous namespace'::EnterCritInternalEx+0x4d
fffff685`3a7676f0 fffff800`28e5f4ef     : 00000000`00000000 00000000`00000000 fffff800`262ee9c8 00000000`00000000 : win32kbase!DrvSetWddmDeviceMonitorPowerState+0x354
fffff685`3a7677d0 fffff800`28e2abab     : ffff8685`b31de000 00000000`00000000 ffff8685`b31de000 00000000`00000000 : win32kbase!DrvSetMonitorPowerState+0x2f
fffff685`3a767800 fffff800`28ef22fa     : 00000000`00000000 fffff685`3a7678d9 00000000`00000001 00000000`00000001 : win32kbase!PowerOnMonitor+0x19b
fffff685`3a767870 fffff800`28ef13dd     : ffff8685`94a40700 ffff8685`a2eb31d0 00000000`00000001 00000000`00000020 : win32kbase!xxxUserPowerEventCalloutWorker+0xaaa
fffff685`3a767940 fffff800`4bab21c2     : ffff8685`b1463080 fffff685`3a767aa0 00000000`00000000 00000000`00000020 : win32kbase!xxxUserPowerCalloutWorker+0x13d
fffff685`3a7679c0 fffff800`26217f3a     : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : win32kfull!NtUserUserPowerCalloutWorker+0x22
fffff685`3a7679f0 fffff800`94ab8d55     : 00000000`000005bc 00000000`00000104 ffff8685`b1463080 00000000`00000000 : win32k!NtUserUserPowerCalloutWorker+0x2e
fffff685`3a767a20 00007ff8`ee71ca24     : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : nt!KiSystemServiceCopyEnd+0x25
000000cc`d11ffbc8 00000000`00000000     : 00000000`00000000 00000000`00000000 00000000`00000000 00000000`00000000 : 0x00007ff8`ee71ca24

...
&lt;/code&gt;
    &lt;p&gt;The crash dump confirms the thread is stuck in &lt;code&gt;win32kbase!DrvSetWddmDeviceMonitorPowerState&lt;/code&gt;, waiting for the NVIDIA driver to respond. It can't because it's caught between a confused power state, windows wanting to turn on the GPU while the firmware is arming the GPU cut off.&lt;/p&gt;
    &lt;p&gt;GPEs are the firmware's mechanism for signaling hardware events to the operating system. They are essentially hardware interrupts that trigger the execution of ACPI code. The trace data points squarely at &lt;code&gt;_GPE._L02&lt;/code&gt; as the source of our latency.&lt;/p&gt;
    &lt;p&gt;A closer look at the timing reveals a consistent and problematic pattern:&lt;/p&gt;
    &lt;code&gt;_GPE._L02 Event Analysis from ROG Strix Trace:

Event 1 @ Clock 134024027290917802
  Duration: 13,613,820 ns (13.61ms)
  Triggered: Battery and AC adapter status checks

Event 2 @ Clock 134024027654496591  
  Duration: 13,647,255 ns (13.65ms)
  Triggered: Battery and AC adapter status checks
  
Event 3 @ Clock 134024028048493318
  Duration: 13,684,515 ns (13.68ms)  
  Triggered: Battery and AC adapter status checks

Interval between events: ~36-39 seconds
Consistency: The duration is remarkably stable and the interval is periodic.
&lt;/code&gt;
    &lt;p&gt;Every single time the lengthy &lt;code&gt;_GPE._L02&lt;/code&gt; event fires, it triggers the exact same sequence of ACPI method calls.&lt;/p&gt;
    &lt;p&gt;The pattern is undeniable:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;A hardware interrupt fires &lt;code&gt;_GPE._L02&lt;/code&gt;.&lt;/item&gt;
      &lt;item&gt;The handler executes methods to check battery status.&lt;/item&gt;
      &lt;item&gt;Shortly thereafter, the firmware attempts to change the GPU's power state.&lt;/item&gt;
      &lt;item&gt;The system runs normally for about 30-60 seconds.&lt;/item&gt;
      &lt;item&gt;The cycle repeats.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;To analyze the code responsible for this behavior, we must extract and decompile the ACPI tables provided by the BIOS to the operating system.&lt;/p&gt;
    &lt;code&gt;# Extract all ACPI tables into binary .dat files
acpidump -b

# Output includes:
# DSDT.dat - The main Differentiated System Description Table
# SSDT1.dat ... SSDT17.dat - Secondary System Description Tables

# Decompile the main table into human-readable ACPI Source Language (.dsl)
iasl -d DSDT.dsl&lt;/code&gt;
    &lt;p&gt;This decompiled ASL provides a direct view into the firmware's executable logic. It is a precise representation of the exact instructions that the ACPI.sys driver is fed by the firmware and executes at the highest privilege level within the Windows kernel. Any logical flaws found in this code are the direct cause of the system's behavior.&lt;/p&gt;
    &lt;p&gt;Searching the decompiled &lt;code&gt;DSDT.dsl&lt;/code&gt; file, we find the definition for our problematic GPE handler:&lt;/p&gt;
    &lt;code&gt;Scope (_GPE)
{
    Method (_L02, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
    {
        \_SB.PC00.LPCB.ECLV ()
    }
}&lt;/code&gt;
    &lt;p&gt;This code is simple: when the &lt;code&gt;_L02&lt;/code&gt; interrupt occurs, it calls a single method, &lt;code&gt;ECLV&lt;/code&gt;. The "L" prefix in &lt;code&gt;_L02&lt;/code&gt; signifies that this is a level-triggered interrupt, meaning it will continue to fire as long as the underlying hardware condition is active. This is a critical detail.&lt;/p&gt;
    &lt;p&gt;Following the call to &lt;code&gt;ECLV()&lt;/code&gt;, we uncover a deeply flawed implementation that is the direct cause of the system-wide stuttering.&lt;/p&gt;
    &lt;code&gt;Method (ECLV, 0, NotSerialized)  // Starting at line 099244
{
    // Main loop - continues while events exist OR sleep events are pending
    // AND we haven't exceeded our time budget (TI3S &amp;lt; 0x78)
    While (((CKEV() != Zero) || (SLEC != Zero)) &amp;amp;&amp;amp; (TI3S &amp;lt; 0x78))
    {
        Local1 = One
        While (Local1 != Zero)
        {
            Local1 = GEVT()    // Get next event from queue
            LEVN (Local1)      // Process the event
            TIMC += 0x19       // Increment time counter by 25
            
            // This is where it gets really bad
            If ((SLEC != Zero) &amp;amp;&amp;amp; (Local1 == Zero))
            {
                // No events but sleep events pending
                If (TIMC == 0x19)
                {
                    Sleep (0x64)    // Sleep for 100 milliseconds!!!
                    TIMC = 0x64     // Set time counter to 100
                    TI3S += 0x04    // Increment major counter by 4
                }
                Else
                {
                    Sleep (0x19)    // Sleep for 25 milliseconds!!!
                    TI3S++          // Increment major counter by 1
                }
            }
        }
    }
    
    // Here's where it gets even worse
    If (TI3S &amp;gt;= 0x78)  // If we hit our time budget (120)
    {
        TI3S = Zero
        If (EEV0 == Zero)
        {
            EEV0 = 0xFF    // Force another event to be pending!
        }
    }
}&lt;/code&gt;
    &lt;p&gt;This short block of code violates several fundamental principles of firmware and kernel programming.&lt;/p&gt;
    &lt;p&gt;Wtf 1: Sleeping in an Interrupt Context&lt;/p&gt;
    &lt;code&gt;Sleep (0x64)    // 100ms sleep
Sleep (0x19)    // 25ms sleep&lt;/code&gt;
    &lt;p&gt;An interrupt handler runs at a very high priority to service hardware requests quickly. The &lt;code&gt;Sleep()&lt;/code&gt; function completely halts the execution of the CPU core it is running on (CPU 0 in this case). While CPU 0 is sleeping, it cannot:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Process any other hardware interrupts.&lt;/item&gt;
      &lt;item&gt;Allow the kernel to schedule other threads.&lt;/item&gt;
      &lt;item&gt;Update system timers.&lt;/item&gt;
    &lt;/list&gt;
    &lt;quote&gt;
      &lt;p&gt;Clarification: These Sleep() calls live in the ACPI GPE handling path for the GPE L02, these calls get executed at PASSIVE_LEVEL after the SCI/GPE is acknowledged so it's not a raw ISR (because i don't think windows will even allow that) but analyzing this further while the control method runs the GPE stays masked and the ACPI/EC work is serialized. With the Sleep() calls inside that path and the self rearm it seems to have the effect of making ACPI.sys get tied up in long periodic bursts (often on CPU 0) which still have the same effect on the system.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Wtf 2: Time-Sliced Interrupt Processing The entire loop is designed to run for an extended period, processing events in batches. It's effectively a poorly designed task scheduler running inside an interrupt handler, capable of holding a CPU core hostage for potentially seconds at a time.&lt;/p&gt;
    &lt;p&gt;Wtf 3: Self-Rearming Interrupt&lt;/p&gt;
    &lt;code&gt;If (EEV0 == Zero)
{
    EEV0 = 0xFF    // Forces all EC event bits on
}&lt;/code&gt;
    &lt;p&gt;This logic ensures that even if the Embedded Controller's event queue is empty, the code will create a new, artificial event. This guarantees that another interrupt will fire shortly after, creating the perfectly periodic pattern of ACPI spikes observed in the traces.&lt;/p&gt;
    &lt;p&gt;The LEVN() method takes an event and routes it:&lt;/p&gt;
    &lt;code&gt;Method (LEVN, 1, NotSerialized)
  {
      If ((Arg0 != Zero))
      {
          MBF0 = Arg0
          P80B = Arg0
          Local6 = Match (LEGA, MEQ, Arg0, MTR, Zero, Zero)
          If ((Local6 != Ones))
          {
              LGPA (Local6)
          }
      }
  }
&lt;/code&gt;
    &lt;p&gt;The LGPA() method is a giant switch statement handling different events:&lt;/p&gt;
    &lt;code&gt;Method (LGPA, 1, Serialized)  // Line 098862
{
    Switch (ToInteger (Arg0))
    {
        Case (Zero)  // Most common case - power event
        {
            DGD2 ()       // GPU-related function
            ^EC0._QA0 ()  // EC query method
            PWCG ()       // Power change - this is our battery polling
        }
        
        Case (0x18)  // GPU-specific event
        {
            If (M6EF == One)
            {
                Local0 = 0xD2
            }
            Else
            {
                Local0 = 0xD1
            }
            NOD2 (Local0)  // Notify GPU driver
        }
        
        Case (0x1E)  // Another GPU event
        {
            Notify (^^PEG1.PEGP, 0xD5)  // Direct GPU notification
            ROCT = 0x55                  // Sets flag for follow-up
        }
       
    }
}&lt;/code&gt;
    &lt;p&gt;This shows a direct link: a GPE fires, and the dispatch logic calls functions related to battery polling and GPU notifications.&lt;/p&gt;
    &lt;p&gt;The &lt;code&gt;PWCG()&lt;/code&gt; method, called by multiple event types, is responsible for polling the battery and AC adapter status.&lt;/p&gt;
    &lt;code&gt;Method (PWCG, 0, NotSerialized)
{
    Notify (ADP0, Zero)      // Tell OS to check the AC adapter
    ^BAT0._BST ()            // Execute the Battery Status method
    Notify (BAT0, 0x80)      // Tell OS the battery status has changed
    ^BAT0._BIF ()            // Execute the Battery Information method  
    Notify (BAT0, 0x81)      // Tell OS the battery info has changed
}&lt;/code&gt;
    &lt;p&gt;Which we can see here:&lt;/p&gt;
    &lt;p&gt;Each of these operations requires communication with the Embedded Controller, adding to the workload inside the already-stalled interrupt handler.&lt;/p&gt;
    &lt;p&gt;The &lt;code&gt;NOD2()&lt;/code&gt; method sends notifications to the GPU driver.&lt;/p&gt;
    &lt;code&gt;Method (NOD2, 1, Serialized)
{
    If ((Arg0 != DNOT))
    {
        DNOT = Arg0
        Notify (^^PEG1.PEGP, Arg0)
    }

    If ((ROCT == 0x55))
    {
        ROCT = Zero
        Notify (^^PEG1.PEGP, 0xD1) // Hardware-Specific
    }
}&lt;/code&gt;
    &lt;p&gt;These notifications (&lt;code&gt;0xD1&lt;/code&gt;, &lt;code&gt;0xD2&lt;/code&gt;, etc.) are hardware-specific signals that tell the NVIDIA driver to re-evaluate its power state, which is what triggers the futile &lt;code&gt;_PS0/_DOS/_PS3&lt;/code&gt; power-cycling sequence seen in the traces.&lt;/p&gt;
    &lt;p&gt;Here's where a simple but catastrophic oversight in the firmware's logic causes system-wide failure. High-end ASUS gaming laptops feature a MUX (Multiplexer) switch, a piece of hardware that lets the user choose between two distinct graphics modes:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Optimus Mode: The power-saving default. The integrated Intel GPU (iGPU) is physically connected to the display. The powerful NVIDIA GPU (dGPU) only renders demanding applications when needed, passing finished frames to the iGPU to be drawn on screen.&lt;/item&gt;
      &lt;item&gt;Ultimate/Mux Mode: The high-performance mode. The MUX switch physically rewires the display connections, bypassing the iGPU entirely and wiring the NVIDIA dGPU directly to the screen. In this mode, the dGPU is not optional; it is the only graphics processor capable of outputting an image.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Any firmware managing this hardware must be aware of which mode the system is in. Sending a command intended for one GPU to the other is futile and, in some cases, dangerous. Deep within the ACPI code, a hardware status flag named &lt;code&gt;HGMD&lt;/code&gt; is used to track this state. To understand the flaw, we first need to decipher what &lt;code&gt;HGMD&lt;/code&gt; means, and the firmware itself gives us the key.&lt;/p&gt;
    &lt;p&gt;For screen brightness to work, the command must be sent to the GPU that is physically controlling the display backlight. A command sent to the wrong GPU will simply do nothing. Therefore, the brightness control method (&lt;code&gt;BRTN&lt;/code&gt;) must be aware of the MUX switch state to function at all. It is the firmware's own Rosetta Stone.&lt;/p&gt;
    &lt;code&gt;// Brightness control - CORRECTLY checks for mux mode
Method (BRTN, 1, Serialized)  // Line 034003
{
    If (((DIDX &amp;amp; 0x0F0F) == 0x0400))
    {
        If (HGMD == 0x03)  // 0x03 = Ultimate/Mux mode
        {
            // In mux mode, notify discrete GPU
            Notify (\_SB.PC00.PEG1.PEGP.EDP1, Arg0)
        }
        Else
        {
            // In Optimus, notify integrated GPU
            Notify (\_SB.PC00.GFX0.DD1F, Arg0)
        }
    }
}&lt;/code&gt;
    &lt;p&gt;The logic here is flawless and revealing. The code uses the &lt;code&gt;HGMD&lt;/code&gt; flag to make a binary decision. If &lt;code&gt;HGMD&lt;/code&gt; is &lt;code&gt;0x03&lt;/code&gt;, it sends the command to the NVIDIA GPU. If not, it sends it to the Intel GPU. The firmware itself, through this correct implementation, provides the undeniable definition: &lt;code&gt;HGMD == 0x03&lt;/code&gt; means the system is in Ultimate/Mux Mode.&lt;/p&gt;
    &lt;p&gt;This perfect, platform-aware logic is completely abandoned in the critical code paths responsible for power management. The &lt;code&gt;LGPA&lt;/code&gt; method, which is called by the stutter-inducing interrupt, dispatches power-related commands to the GPU without ever checking the MUX mode.&lt;/p&gt;
    &lt;code&gt;// GPU power notification - NO MUX CHECK!
Case (0x18)
{
    // This SHOULD have: If (HGMD != 0x03)
    // But it doesn't, so it runs even in mux mode
    If (M6EF == One)
    {
        Local0 = 0xD2
    }
    Else
    {
        Local0 = 0xD1
    }
    NOD2 (Local0)  // Notifies GPU regardless of mode
}&lt;/code&gt;
    &lt;p&gt;This is not a single typo. A second, parallel power management system in the firmware exhibits the exact same flaw. The Platform Extension Plug-in Device (&lt;code&gt;PEPD&lt;/code&gt;) is used by Windows to manage system-wide power states, such as turning off displays during modern standby.&lt;/p&gt;
    &lt;code&gt;Device (PEPD)  // Line 071206
{
    Name (_HID, "INT33A1")  // Intel Power Engine Plugin
    
    Method (_DSM, 4, Serialized)  // Device Specific Method
    {
        // ... lots of setup code ...
        
        // Arg2 == 0x05: "All displays have been turned off"
        If ((Arg2 == 0x05))
        {
            // Prepare for aggressive power saving
            If (CondRefOf (\_SB.PC00.PEG1.DHDW))
            {
                ^^PC00.PEG1.DHDW ()         // GPU pre-shutdown work
                ^^PC00.PEG1.DGCE = One      // Set "GPU Cut Enable" flag
            }
            
            If (S0ID == One)  // If system supports S0 idle
            {
                GUAM (One)    // Enter low power mode
            }
            
            ^^PC00.DPOF = One  // Display power off flag
            
            // Tell USB controller about display state
            If (CondRefOf (\_SB.PC00.XHCI.PSLI))
            {
                ^^PC00.XHCI.PSLI (0x05)
            }
        }
        
        // Arg2 == 0x06: "A display has been turned on"
        If ((Arg2 == 0x06))
        {
            // Wake everything back up
            If (CondRefOf (\_SB.PC00.PEG1.DGCE))
            {
                ^^PC00.PEG1.DGCE = Zero     // Clear "GPU Cut Enable"
            }
            
            If (S0ID == One)
            {
                GUAM (Zero)   // Exit low power mode
            }
            
            ^^PC00.DPOF = Zero  // Display power on flag
            
            If (CondRefOf (\_SB.PC00.XHCI.PSLI))
            {
                ^^PC00.XHCI.PSLI (0x06)
            }
        }
    }
}&lt;/code&gt;
    &lt;p&gt;Once again, the firmware prepares to cut power to the discrete GPU without first checking if it's the only GPU driving the displays. This demonstrates that the Mux Mode Confusion is a systemic design flaw. The firmware is internally inconsistent, leading it to issue self-destructive commands that try to cripple the system.&lt;/p&gt;
    &lt;p&gt;Traces from multiple ASUS gaming laptop models confirm this is not an isolated issue.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Trace Duration: 4.1 minutes&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;_GPE._L02&lt;/code&gt;Events: 7&lt;/item&gt;
      &lt;item&gt;Avg. GPE Duration: 1.56ms (lower, but still unacceptably high)&lt;/item&gt;
      &lt;item&gt;Avg. Interval: 39.4 seconds (nearly identical periodic nature)&lt;/item&gt;
      &lt;item&gt;GPU Power Cycles: 8&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Trace Duration: 19.9 minutes&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;_GPE._L02&lt;/code&gt;Events: 3&lt;/item&gt;
      &lt;item&gt;Avg. GPE Duration: 2.94ms&lt;/item&gt;
      &lt;item&gt;GPU Power Cycles: 197 (far more frequent)&lt;/item&gt;
      &lt;item&gt;ASUS WMI Calls: 2,370 (a massive number, indicating software amplification)&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Microsoft has a built-in "smooth video" check. It plays HD video in full screen and watches for hiccups. If the PC drops frames, crackles, or any driver pauses for more than a few milliseconds, it fails. That’s Microsoft’s baseline for what "smooth" should look like.&lt;/p&gt;
    &lt;p&gt;Why it matters here:&lt;/p&gt;
    &lt;p&gt;ASUS firmware is causing millisecond-long pauses. Those pauses are exactly the kind that make this test fail i.e., the same stutters and audio pops regular users notice on YouTube/Netflix and games; this firmware violates fundemental standards.&lt;/p&gt;
    &lt;p&gt;Despite being different models, all affected systems exhibit the same core flaws:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;&lt;code&gt;_GPE._L02&lt;/code&gt;handlers take milliseconds to execute instead of microseconds.&lt;/item&gt;
      &lt;item&gt;The GPEs trigger unnecessary battery polling.&lt;/item&gt;
      &lt;item&gt;The firmware attempts to power cycle the GPU while in a fixed MUX mode.&lt;/item&gt;
      &lt;item&gt;The entire process is driven by a periodic, timer-like trigger.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This bug is a cascade of firmware design failures.&lt;/p&gt;
    &lt;p&gt;On windows, the LXX / EXX run at PASSIVE_LEVEL via ACPI.sys but while a GPE control method runs the firing GPE stays masked and ACPI/EC work is serialized. ASUS's dispatch from GPE._L02 to ECLV loops, calls Sleep(25/100ms) and re-arms the EC stretching that masked window into tens of milliseconds (which would explain the 13ms CPU time in ETW (Kernel ms) delay for GPE Events) and producing a periodic ACPI.sys burst that causes the latency problems on the system. What it should have done instead of latch/clear the event then exit the method then defer heavy policy to a driver via Notify and avoid any kind of self re-arming or sleeps in this path.&lt;/p&gt;
    &lt;p&gt;The firmware artificially re-arms the interrupt, creating an endless loop of GPEs instead of clearing the source and waiting for the next legitimate hardware event. This transforms a hardware notification system into a disruptive, periodic timer.&lt;/p&gt;
    &lt;p&gt;The code that sends GPU power notifications does not check if the system is in MUX mode, a critical state check that is correctly performed in other parts of the firmware. This demonstrates inconsistency and a lack of quality control.&lt;/p&gt;
    &lt;p&gt;This issue is not new or isolated. User reports documenting identical symptoms with high ACPI.sys DPC latency, periodic stuttering, and audio crackling have been accumulating since at least 2021 across ASUS's entire gaming laptop lineup.&lt;/p&gt;
    &lt;p&gt;August 2021: The First Major Reports&lt;lb/&gt; The earliest documented cases appear on the official ASUS ROG forums. A G15 Advantage Edition (G513QY) owner reports "severe DPC latency from ACPI.sys" with audio dropouts occurring under any load condition. The thread, last edited in March 2024, shows the issue remains unresolved after nearly three years.&lt;/p&gt;
    &lt;p&gt;Reddit users simultaneously report identical ACPI.sys latency problems alongside NVIDIA driver issues; the exact symptoms described in this investigation.&lt;/p&gt;
    &lt;p&gt;2021-2023: Spreading Across Models&lt;lb/&gt; Throughout this period, the issue proliferates across ASUS's gaming lineup:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;ROG Strix models experience micro-stutters&lt;/item&gt;
      &lt;item&gt;TUF Gaming series reports throttling for seconds at a time&lt;/item&gt;
      &lt;item&gt;G18 models exhibit the characteristic 45-second periodic stuttering&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;2023-2024: The Problem Persists in New Models&lt;lb/&gt; Even the latest generations aren't immune:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;2023 Zephyrus G16 owners report persistent audio issues&lt;/item&gt;
      &lt;item&gt;2023 G16 models continue experiencing audio pops/crackles&lt;/item&gt;
      &lt;item&gt;2024 Intel G16 models require workarounds for audio stuttering&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The evidence is undeniable:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Measured Proof: GPE handlers are measured blocking a CPU core for over 13 milliseconds.&lt;/item&gt;
      &lt;item&gt;Code Proof: The decompiled firmware explicitly contains &lt;code&gt;Sleep()&lt;/code&gt;calls within an interrupt handler.&lt;/item&gt;
      &lt;item&gt;Logical Proof: The code lacks critical checks for the laptop's hardware state (MUX mode).&lt;/item&gt;
      &lt;item&gt;Systemic Proof: The issue is reproducible across different models and BIOS versions.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Until a fix is implemented, millions of buyers of Asus laptops from approx. 2021 to present day are facing stutters on the simplest of tasks, such as watching YouTube, for the simple mistake of using a sleep call inside of an inefficient interrupt handler and not checking the GPU environment properly.&lt;/p&gt;
    &lt;p&gt;The code is there. The traces prove it. ASUS must fix its firmware.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;ASUS has not responded to this investigation or the documented firmware issues at the time of publication, will update this if anything changes.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Investigation conducted using the Windows Performance Toolkit, ACPI table extraction tools, and Intel ACPI Component Architecture utilities. All code excerpts are from official ASUS firmware. Traces were captured on multiple affected systems, all showing consistent behavior. I used an LLM for wording. The research, traces, and AML decomp are mine. Every claim is verified and reproducible if you follow the steps in the article; logs and commands are in the repo. If you think something's wrong, cite the exact timestamp/method/line. "AI wrote it" is not an argument.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/Zephkek/Asus-ROG-Aml-Deep-Dive"/><published>2025-09-17T03:54:36+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45271942</id><title>Notion API importer, with Databases to Bases conversion bounty</title><updated>2025-09-17T11:08:08.919609+00:00</updated><content>&lt;doc fingerprint="a42c9a8c28d336c8"&gt;
  &lt;main&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt; Notifications &lt;tool-tip&gt;You must be signed in to change notification settings&lt;/tool-tip&gt;&lt;/item&gt;
      &lt;item&gt;Fork 135&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Description&lt;/head&gt;
    &lt;p&gt;Currently Importer supports Notion imports via the HTML export #14. This new importer would use the Notion API and download files progressively. This would also add support for Databases to Bases conversion. See #415&lt;/p&gt;
    &lt;head rend="h2"&gt;Bounty&lt;/head&gt;
    &lt;p&gt;See the Contribution guidelines for how to claim this bounty.&lt;/p&gt;
    &lt;p&gt;Bounty: $5,000 USD&lt;lb/&gt; Timeframe: 30 days&lt;/p&gt;
    &lt;head rend="h2"&gt;Requirements&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Uses Notion API (integration token) incorporating changes from new data source object introduced 2025-09.&lt;/item&gt;
      &lt;item&gt;Properly converts files to Obsidian-flavored Markdown, including tables, to-do lists, etc&lt;/item&gt;
      &lt;item&gt; Support for images and attachments. Embed links converted to Markdown format &lt;code&gt;!()[image.png]&lt;/code&gt;and placed in the user's defined attachment location (Settings → File &amp;amp; links)&lt;/item&gt;
      &lt;item&gt;Provide working test cases, ideally a reproducible data import that can be used on Notion. Alternatively a test account you can share with us via DM.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;Databases to Bases&lt;/head&gt;
    &lt;p&gt;Some exploration is required before implementation because Databases and Bases work a bit differently. Notion's Databases start out as empty, whereas a Base starts out with all of the user's files, then narrows down using filters.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Determine for importing files, and the bases/views&lt;/item&gt;
      &lt;item&gt;Determine what can be imported: views, columns, groups, summaries, formulas, etc.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Metadata&lt;/head&gt;
    &lt;head rend="h2"&gt;Metadata&lt;/head&gt;
    &lt;head rend="h3"&gt;Assignees&lt;/head&gt;
    &lt;head rend="h3"&gt;Labels&lt;/head&gt;
    &lt;head rend="h3"&gt;Type&lt;/head&gt;
    &lt;head rend="h3"&gt;Projects&lt;/head&gt;
    &lt;p&gt;Status&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/obsidianmd/obsidian-importer/issues/421"/><published>2025-09-17T05:11:50+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45272296</id><title>In Praise of Idleness (1932)</title><updated>2025-09-17T11:08:08.269499+00:00</updated><content>&lt;doc fingerprint="2e4899571e271fc9"&gt;
  &lt;main&gt;
    &lt;p&gt;Like most of my generation, I was brought up on the saying âSatan finds some mischief still for idle hands to do.â Being a highly virtuous child, I believed all that I was told and acquired a conscience which has kept me working hard down to the present moment. But although my conscience has controlled my actions, my opinions have undergone a revolution. I think that there is far too much work done in the world, that immense harm is caused by the belief that work is virtuous, and that what needs to be preached in modern industrial countries is quite different from what always has been preached. Every one knows the story of the traveler in Naples who saw twelve beggars lying in the sun (it was before the days of Mussolini), and offered a lira to the laziest of them. Eleven of them jumped up to claim it, so he gave it to the twelfth. This traveler was on the right lines. But in countries which do not enjoy Mediterranean sunshine idleness is more difficult, and a great public propaganda will be required to inaugurate it. I hope that after reading the following pages the leaders of the Y.Â M.Â C.Â A. will start a campaign to induce good young men to do nothing. If so, I shall not have lived in vain.&lt;/p&gt;
    &lt;p&gt;Before advancing my own arguments for laziness, I must dispose of one which I cannot accept. Whenever a person who already has enough to live on proposes to engage in some everyday kind of job, such as school-teaching or typing, he or she is told that such conduct takes the bread out of other peopleâs mouths, and is, therefore, wicked. If this argument were valid, it would only be necessary for us all to be idle in order that we should all have our mouths full of bread. What people who say such things forget is that what a man earns he usually spends, and in spending he gives employment. As long as a man spends his income he puts just as much bread into peopleâs mouths in spending as he takes out of other peopleâs mouths in earning. The real villain, from this point of view, is the man who saves. If he merely puts his savings in a stocking, like the proverbial French peasant, it is obvious that they do not give employment. If he invests his savings the matter is less obvious, and different cases arise.&lt;/p&gt;
    &lt;p&gt;One of the commonest things to do with savings is to lend them to some government. In view of the fact that the bulk of the expenditure of most civilized governments consists in payments for past wars and preparation for future wars, the man who lends his money to a government is in the same position as the bad men in Shakespeare who hire murderers. The net result of the manâs economical habits is to increase the armed forces of the State to which he lends his savings. Obviously it would be better if he spent the money, even if he spent it on drink or gambling.&lt;/p&gt;
    &lt;p&gt;But, I shall be told, the case is quite different when savings are invested in industrial enterprises. When such enterprises succeed and produce something useful this may be conceded. In these days, however, no one will deny that most enterprises fail. That means that a large amount of human labor, which might have been devoted to producing something which could be enjoyed, was expended on producing machines which, when produced, lay idle and did no good to anyone. The man who invests his savings in a concern that goes bankrupt is, therefore, injuring others as well as himself. If he spent his money, say, in giving parties for his friends, they (we may hope) would get pleasure, and so would all those on whom he spent money, such as the butcher, the baker, and the bootlegger. But if he spends it (let us say) upon laying down rails for surface cars in some place where surface cars turn out to be not wanted, he has diverted a mass of labor into channels where it gives pleasure to no one. Nevertheless, when he becomes poor through the failure of his investment he will be regarded as a victim of undeserved misfortune, whereas the gay spendthrift, who has spent his money philanthropically, will be despised as a fool and a frivolous person.&lt;/p&gt;
    &lt;p&gt;All this is only preliminary. I want to say, in all seriousness, that a great deal of harm is being done in the modern world by the belief in the virtuousness of work, and that the road to happiness and prosperity lies in an organized diminution of work.&lt;/p&gt;
    &lt;p&gt;First of all: what is work? Work is of two kinds: first, altering the position of matter at or near the earthâs surface relatively to other such matter; second, telling other people to do so. The first kind is unpleasant and ill paid; the second is pleasant and highly paid. The second kind is capable of indefinite extension: there are not only those who give orders but those who give advice as to what orders should be given. Usually two opposite kinds of advice are given simultaneously by two different bodies of men; this is called politics. The skill required for this kind of work is not knowledge of the subjects as to which advice is given, but knowledge of the art of persuasive speaking and writing, i.e. of advertising.&lt;/p&gt;
    &lt;p&gt;Throughout Europe, though not in America, there is a third class of men, more respected than either of the classes of workers. These are men who, through ownership of land, are able to make others pay for the privilege of being allowed to exist and to work. These landowners are idle, and I might, therefore, be expected to praise them. Unfortunately, their idleness is rendered possible only by the industry of others; indeed their desire for comfortable idleness is historically the source of the whole gospel of work. The last thing they have ever wished is that others should follow their example.&lt;/p&gt;
    &lt;p&gt;From the beginning of civilization until the industrial revolution a man could, as a rule, produce by hard work little more than was required for the subsistence of himself and his family, although his wife worked at least as hard and his children added their labor as soon as they were old enough to do so. The small surplus above bare necessaries was not left to those who produced it, but was appropriated by priests and warriors. In times of famine there was no surplus; the warriors and priests, however, still secured as much as at other times, with the result that many of the workers died of hunger. This system persisted in Russia until 1917, and still persists in the East; in England, in spite of the Industrial Revolution, it remained in full force throughout the Napoleonic wars, and until a hundred years ago, when the new class of manufacturers acquired power. In America the system came to an end with the Revolution, except in the South, where it persisted until the Civil War. A system which lasted so long and ended so recently has naturally left a profound impression upon menâs thoughts and opinions. Much that we take for granted about the desirability of work is derived from this system and, being pre-industrial, is not adapted to the modern world. Modern technic has made it possible for leisure, within limits, to be not the prerogative of small privileged classes, but a right evenly distributed throughout the community. The morality of work is the morality of slaves, and the modern world has no need of slavery.&lt;/p&gt;
    &lt;p&gt;It is obvious that, in primitive communities, peasants, left to themselves, would not have parted with the slender surplus upon which the warriors and priests subsisted, but would have either produced less or consumed more. At first sheer force compelled them to produce and part with the surplus. Gradually, however, it was found possible to induce many of them to accept an ethic according to which it was their duty to work hard, although part of their work went to support others in idleness. By this means the amount of compulsion required was lessened, and the expenses were diminished. To this day ninety-nine per cent of British wage-earners would be genuinely shocked if it were proposed that the King should not have a larger income than a working man. The conception of duty, speaking historically, has been a means used by the holders of power to induce others to live for the interests of their masters rather than their own. Of course the holders of power conceal this fact from themselves by managing to believe that their interests are identical with the larger interests of humanity. Sometimes this is true; Athenian slave-owners, for instance, employed part of their leisure in making a permanent contribution to civilization which would have been impossible under a just economic system. Leisure is essential to civilization, and in former times leisure for the few was rendered possible only by the labors of the many. But their labors were valuable, not because work is good, but because leisure is good. And with modern technic it would be possible to distribute leisure justly without injury to civilization.&lt;/p&gt;
    &lt;p&gt;Modern technic has made it possible to diminish enormously the amount of labor necessary to produce the necessaries of life for every one. This was made obvious during the War. At that time all the men in the armed forces, all the men and women engaged in the production of munitions, all the men and women engaged in spying, war propaganda, or government offices connected with the War were withdrawn from productive occupations. In spite of this, the general level of physical well-being among wage-earners on the side of the Allies was higher than before or since. The significance of this fact was concealed by finance; borrowing made it appear as if the future was nourishing the present. But that, of course, would have been impossible; a man cannot eat a loaf of bread that does not yet exist. The War showed conclusively that by the scientific organization of production it is possible to keep modern populations in fair comfort on a small part of the working capacity of the modern world. If at the end of the War the scientific organization which had been created in order to liberate men for fighting and munition work had been preserved, and the hours of work had been cut down to four, all would have been well. Instead of that, the old chaos was restored, those whose work was demanded were made to work long hours, and the rest were left to starve as unemployed. Why? Because work is a duty, and a man should not receive wages in proportion to what he has produced, but in proportion to his virtue as exemplified by his industry.&lt;/p&gt;
    &lt;p&gt;This is the morality of the Slave State, applied in circumstances totally unlike those in which it arose. No wonder the result has been disastrous. Let us take an illustration. Suppose that at a given moment a certain number of people are engaged in the manufacture of pins. They make as many pins as the world needs, working (say) eight hours a day. Someone makes an invention by which the same number of men can make twice as many pins as before. But the world does not need twice as many pins: pins are already so cheap that hardly any more will be bought at a lower price. In a sensible world everybody concerned in the manufacture of pins would take to working four hours instead of eight, and everything else would go on as before. But in the actual world this would be thought demoralizing. The men still work eight hours, there are too many pins, some employers go bankrupt, and half the men previously concerned in making pins are thrown out of work. There is, in the end, just as much leisure as on the other plan, but half the men are totally idle while half are still overworked. In this way it is insured that the unavoidable leisure shall cause misery all round instead of being a universal source of happiness. Can anything more insane be imagined?&lt;/p&gt;
    &lt;p&gt;The idea that the poor should have leisure has always been shocking to the rich. In England in the early nineteenth century fifteen hours was the ordinary dayâs work for a man; children sometimes did as much, and very commonly did twelve hours a day. When meddlesome busy-bodies suggested that perhaps these hours were rather long, they were told that work kept adults from drink and children from mischief. When I was a child, shortly after urban working men had acquired the vote, certain public holidays were established by law, to the great indignation of the upper classes. I remember hearing an old Duchess say, âWhat do the poor want with holidays? they ought to work.â People nowadays are less frank, but the sentiment persists, and is the source of much economic confusion.&lt;/p&gt;
    &lt;p&gt;II&lt;/p&gt;
    &lt;p&gt;Let us, for a moment, consider the ethics of work frankly, without superstition. Every human being, of necessity, consumes in the course of his life a certain amount of produce of human labor. Assuming, as we may, that labor is on the whole disagreeable, it is unjust that a man should consume more than he produces. Of course he may provide services rather than commodities, like a medical man, for example; but he should provide something in return for his board and lodging. To this extent, the duty of work must be admitted, but to this extent only.&lt;/p&gt;
    &lt;p&gt;I shall not develop the fact that in all modern societies outside the U.Â S.Â S.Â R. many people escape even this minimum of work, namely all those who inherit money and all those who marry money. I do not think the fact that these people are allowed to be idle is nearly so harmful as the fact that wage-earners are expected to overwork or starve. If the ordinary wage-earner worked four hours a day there would be enough for everybody, and no unemploymentÂ â assuming a certain very moderate amount of sensible organization. This idea shocks the well-to-do, because they are convinced that the poor would not know how to use so much leisure. In America men often work long hours even when they are already well-off; such men, naturally, are indignant at the idea of leisure for wage-earners except as the grim punishment of unemployment, in fact, they dislike leisure even for their sons. Oddly enough, while they wish their sons to work so hard as to have no time to be civilized, they do not mind their wives and daughters having no work at all. The snobbish admiration of uselessness, which, in an aristocratic society, extends to both sexes, is under a plutocracy confined to women; this, however, does not make it any more in agreement with common sense.&lt;/p&gt;
    &lt;p&gt;The wise use of leisure, it must be conceded, is a product of civilization and education. A man who has worked long hours all his life will be bored if he becomes suddenly idle. But without a considerable amount of leisure a man is cut off from many of the best things. There is no longer any reason why the bulk of the population should suffer this deprivation; only a foolish asceticism, usually vicarious, makes us insist on work in excessive quantities now that the need no longer exists.&lt;/p&gt;
    &lt;p&gt;In the new creed which controls the government of Russia, while there is much that is very different from the traditional teaching of the West, there are some things that are quite unchanged. The attitude of the governing classes, and especially of those who control educational propaganda, on the subject of the dignity of labor is almost exactly that which the governing classes of the world have always preached to what were called the âhonest poor.â Industry, sobriety, willingness to work long hours for distant advantages, even submissiveness to authority, all these reappear; moreover, authority still represents the will of the Ruler of the Universe, Who, however, is now called by a new name, Dialectical Materialism.&lt;/p&gt;
    &lt;p&gt;The victory of the proletariat in Russia has some points in common with the victory of the feminists in some other countries. For ages men had conceded the superior saintliness of women and had consoled women for their inferiority by maintaining that saintliness is more desirable than power. At last the feminists decided that they would have both, since the pioneers among them believed all that the men had told them about the desirability of virtue but not what they had told them about the worthlessness of political power. A similar thing has happened in Russia as regards manual work. For ages the rich and their sycophants have written in praise of âhonest toil,â have praised the simple life, have professed a religion which teaches that the poor are much more likely to go to heaven than the rich, and in general have tried to make manual workers believe that there is some special nobility about altering the position of matter in space, just as men tried to make women believe that they derived some special nobility from their sexual enslavement. In Russia all this teaching about the excellence of manual work has been taken seriously, with the result that the manual worker is more honored than anyone else. What are, in essence, revivalist appeals are made to secure shock workers for special tasks. Manual work is the ideal which is held before the young, and is the basis of all ethical teaching.&lt;/p&gt;
    &lt;p&gt;For the present this is all to the good. A large country, full of natural resources, awaits development and has to be developed with very little use of credit. In these circumstances hard work is necessary and is likely to bring a great reward. But what will happen when the point has been reached where everybody could be comfortable without working long hours?&lt;/p&gt;
    &lt;p&gt;In the West we have various ways of dealing with this problem. We have no attempt at economic justice, so that a large proportion of the total produce goes to a small minority of the population, many of whom do no work at all. Owing to the absence of any central control over production, we produce hosts of things that are not wanted. We keep a large percentage of the working population idle because we can dispense with their labor by making others overwork. When all these methods prove inadequate we have a war: we cause a number of people to manufacture high explosives, and a number of others to explode them, as if we were children who had just discovered fireworks. By a combination of all these devices we manage, though with difficulty, to keep alive the notion that a great deal of manual work must be the lot of the average man.&lt;/p&gt;
    &lt;p&gt;In Russia, owing to economic justice and central control over production, the problem will have to be differently solved. The rational solution would be as soon as the necessaries and elementary comforts can be provided for all to reduce the hours of labor gradually, allowing a popular vote to decide, at each stage, whether more leisure or more goods were to be preferred. But, having taught the supreme virtue of hard work, it is difficult to see how the authorities can aim at a paradise in which there will be much leisure and little work. It seems more likely that they will find continually fresh schemes by which present leisure is to be sacrificed to future productivity. I read recently of an ingenious scheme put forward by Russian engineers for making the White Sea and the northern coasts of Siberia warm by putting a dam across the Kara Straits. An admirable plan, but liable to postpone proletarian comfort for a generation, while the nobility of toil is being displayed amid the ice-fields and snowstorms of the Arctic Ocean. This sort of thing, if it happens, will be the result of regarding the virtue of hard work as an end in itself, rather than as a means to a state of affairs in which it is no longer needed.&lt;/p&gt;
    &lt;p&gt;III&lt;/p&gt;
    &lt;p&gt;The fact is that moving matter about, while a certain amount of it is necessary to our existence, is emphatically not one of the ends of human life. If it were, we should have to consider every navvy superior to Shakespeare. We have been misled in this matter by two causes. One is the necessity of keeping the poor contented, which has led the rich for thousands of years to preach the dignity of labor, while taking care themselves to remain undignified in this respect. The other is the new pleasure in mechanism, which makes us delight in the astonishingly clever changes that we can produce on the earthâs surface. Neither of these motives makes any great appeal to the actual worker. If you ask him what he thinks the best part of his life, he is not likely to say, âI enjoy manual work because it makes me feel that I am fulfilling manâs noblest task, and because I like to think how much man can transform his planet. It is true that my body demands periods of rest, which I have to fill in as best I may, but I am never so happy as when the morning comes and I can return to the toil from which my contentment springs.â I have never heard working men say this sort of thing. They consider work, as it should be considered, as a necessary means to a livelihood, and it is from their leisure hours that they derive whatever happiness they may enjoy.&lt;/p&gt;
    &lt;p&gt;It will be said that while a little leisure is pleasant, men would not know how to fill their days if they had only four hoursâ work out of the twenty-four. In so far as this is true in the modern world it is a condemnation of our civilization; it would not have been true at any earlier period. There was formerly a capacity for light-heartedness and play which has been to some extent inhibited by the cult of efficiency. The modern man thinks that everything ought to be done for the sake of something else, and never for its own sake. Serious-minded persons, for example, are continually condemning the habit of going to the cinema, and telling us that it leads the young into crime. But all the work that goes to producing a cinema is respectable, because it is work, and because it brings a money profit. The notion that the desirable activities are those that bring a profit has made everything topsy-turvy. The butcher who provides you with meat and the baker who provides you with bread are praiseworthy because they are making money but when you enjoy the food they have provided you are merely frivolous, unless you eat only to get strength for your work. Broadly speaking, it is held that getting money is good and spending money is bad. Seeing that they are two sides of one transaction, this is absurd; one might as well maintain that keys are good but keyholes are bad. The individual, in our society, works for profit; but the social purpose of his work lies in the consumption of what he produces. It is this divorce between the individual and the social purpose of production that makes it so difficult for men to think clearly in a world in which profitmaking is the incentive to industry. We think too much of production and too little of consumption. One result is that we attach too little importance to enjoyment and simple happiness, and that we do not judge production by the pleasure that it gives to the consumer.&lt;/p&gt;
    &lt;p&gt;When I suggest that working hours should be reduced to four, I am not meaning to imply that all the remaining time should necessarily be spent in pure frivolity. I mean that four hoursâ work a day should entitle a man to the necessities and elementary comforts of life, and that the rest of his time should be his to use as he might see fit. It is an essential part of any such social system that education should be carried farther than it usually is at present, and should aim, in part, at providing tastes which would enable a man to use leisure intelligently. I am not thinking mainly of the sort of things that would be considered âhigh-brow.â Peasant dances have died out except in remote rural areas, but the impulses which caused them to be cultivated must still exist in human nature. The pleasures of urban populations have become mainly passive: seeing cinemas, watching football matches, listening to the radio, and so on. This results from the fact that their active energies are fully taken up with work; if they had more leisure they would again enjoy pleasures in which they took an active part.&lt;/p&gt;
    &lt;p&gt;In the past there was a small leisure class and a large working class. The leisure class enjoyed advantages for which there was no basis in social justice; this necessarily made it oppressive, limited its sympathies, and caused it to invent theories by which to justify its privileges. These facts greatly diminished its excellence, but in spite of this drawback it contributed nearly the whole of what we call civilization. It cultivated the arts and discovered the sciences; it wrote the books, invented the philosophies, and refined social relations. Even the liberation of the oppressed has usually been inaugurated from above. Without the leisure class mankind would never have emerged from barbarism.&lt;/p&gt;
    &lt;p&gt;The method of a hereditary leisure class without duties was, however, extraordinarily wasteful. None of the members of the class had been taught to be industrious, and the class as a whole was not exceptionally intelligent. It might produce one Darwin, but against him had to be set tens of thousands of country gentlemen who never thought of anything more intelligent than fox-hunting and punishing poachers. At present, the universities are supposed to provide, in a more systematic way, what the leisure class provided accidentally and as a byproduct. This is a great improvement, but it has certain drawbacks. University life is so different from life in the world at large that men who live in an academic milieu tend to be unaware of the pre-occupations of ordinary men and women; moreover, their ways of expressing themselves are usually such as to rob their opinions of the influence that they ought to have upon the general public. Another disadvantage is that in universities studies are organized, and the man who thinks of some original line of research is likely to be discouraged. Academic institutions, therefore, useful as they are, are not adequate guardians of the interests of civilization in a world where every one outside their walls is too busy for unutilitarian pursuits.&lt;/p&gt;
    &lt;p&gt;In a world where no one is compelled to work more than four hours a day every person possessed of scientific curiosity will be able to indulge it, and every painter will be able to paint without starving, however excellent his pictures may be. Young writers will not be obliged to draw attention to themselves by sensational pot-boilers, with a view to acquiring the economic independence needed for monumental works, for which, when the time at last comes, they will have lost the taste and the capacity. Men who in their professional work have become interested in some phase of economics or government will be able to develop their ideas without the academic detachment that makes the work of university economists lacking in reality. Medical men will have time to learn about the progress of medicine. Teachers will not be exasperatedly struggling to teach by routine things which they learned in their youth, which may, in the interval, have been proved to be untrue.&lt;/p&gt;
    &lt;p&gt;Above all, there will be happiness and joy of life, instead of frayed nerves, weariness, and dyspepsia. The work exacted will be enough to make leisure delightful, but not enough to produce exhaustion. Since men will not be tired in their spare time, they will not demand only such amusements as are passive and vapid. At least one per cent will probably devote the time not spent in professional work to pursuits of some public importance, and, since they will not depend upon these pursuits for their livelihood, their originality will be unhampered, and there will be no need to conform to the standards set by elderly pundits. But it is not only in these exceptional cases that the advantages of leisure will appear. Ordinary men and women, having the opportunity of a happy life, will become more kindly and less persecuting and less inclined to view others with suspicion. The taste for war will die out, partly for this reason, and partly because it will involve long and severe work for all. Good nature is, of all moral qualities, the one that the world needs most, and good nature is the result of ease and security, not of a life of arduous struggle. Modern methods of production have given us the possibility of ease and security for all; we have chosen instead to have overwork for some and starvation for others. Hitherto we have continued to be as energetic as we were before there were machines. In this we have been foolish, but there is no reason to go on being foolish for ever.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://harpers.org/archive/1932/10/in-praise-of-idleness/"/><published>2025-09-17T06:04:06+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45272480</id><title>Murex – An intuitive and content aware shell for a modern command line</title><updated>2025-09-17T11:08:07.850396+00:00</updated><content>&lt;doc fingerprint="76c4cc9c753539fe"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Murex.Rocks&lt;/head&gt;
    &lt;p&gt;An intuitive and content aware shell for a modern command line&lt;/p&gt;
    &lt;head rend="h2"&gt;A Modern shell for the rest of us&lt;/head&gt;
    &lt;p&gt;Murex carries tons of unique features. Some highlights include...&lt;/p&gt;
    &lt;head rend="h3"&gt;Content Aware&lt;/head&gt;
    &lt;p&gt;Native support for manipulating data formats such as JSON, YAML, CSV, and others. This allows for seamless integration and manipulation of data in various formats. &lt;lb/&gt; Data types can be explicitly cast and reformatted, but also inferred if preferred.&lt;/p&gt;
    &lt;head rend="h3"&gt;Expressions&lt;/head&gt;
    &lt;p&gt;Smarter handling of variables and expressions to avoid accidental bugs caused by spaces or incorrect syntax. Resulting in a more reliable and predictable scripting experience. &lt;lb/&gt; Never worry about file names with weird characters, nor running equations in "bc" again.&lt;/p&gt;
    &lt;head rend="h3"&gt;Smartly Interactive&lt;/head&gt;
    &lt;p&gt;A uniquely intuitive interactive shell. With command line hints pulled from man pages, AI LLMs, and other intelligent integrations. &lt;lb/&gt; Navigating the command line is faster, more intuitive and efficient than ever before.&lt;/p&gt;
    &lt;head rend="h3"&gt;Easily Extended&lt;/head&gt;
    &lt;p&gt;The built-in package manager makes it very easy to share your configuration, import other peoples namespaced modules, and port your environment between different machines. &lt;lb/&gt; Configure once, use everywhere.&lt;/p&gt;
    &lt;head rend="h2"&gt;Getting Started&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;Read the language tour to get started.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;The Rosetta Stone is a great cheatsheet for those wishing to skip the tutorials and jump straight in. This guide includes comparisons with Bash.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;The Interactive Shell guide walks you through using Murex as a command line as opposed to a scripting language.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Screenshots&lt;/head&gt;
    &lt;p&gt;Check out the Language Tour and Interactive Shell guides!&lt;/p&gt;
    &lt;head rend="h2"&gt;Easy to Install&lt;/head&gt;
    &lt;p&gt;Install &lt;code&gt;murex&lt;/code&gt; from your favorite package manager:&lt;/p&gt;
    &lt;code&gt;# via Homebrew:
brew install murex

# via MacPorts:
port install murex
&lt;/code&gt;
    &lt;code&gt;# From AUR: https://aur.archlinux.org/packages/murex
wget -O PKGBUILD 'https://aur.archlinux.org/cgit/aur.git/plain/PKGBUILD?h=murex'
makepkg --syncdeps --install 
&lt;/code&gt;
    &lt;code&gt;pkg install murex
&lt;/code&gt;
    &lt;p&gt;More options are available in the INSTALL document.&lt;/p&gt;
    &lt;p&gt;This document was generated from gen/root/README_doc.yaml.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://murex.rocks/"/><published>2025-09-17T06:32:17+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45272692</id><title>Tabby – A Terminal for the Modern Age</title><updated>2025-09-17T11:08:07.157498+00:00</updated><content>&lt;doc fingerprint="371ec15e4785f3dc"&gt;
  &lt;main&gt;
    &lt;quote&gt;
      &lt;p&gt;👋 Managing remote environments? Check out Warpgate, my smart SSH/HTTP/MySQL bastion server, it works great with Tabby, you'll love it.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;This README is also available in: 🇪🇸 Spanish · 🇷🇺 Русский · 🇰🇷 한국어 · 🇨🇳 简体中文 · 🇮🇹 Italiano · 🇩🇪 Deutsch · 🇯🇵 日本語 · 🆔 Bahasa Indonesia · 🇧🇷 Português · 🇵🇱 Polski&lt;/p&gt;
    &lt;p&gt;Tabby (formerly Terminus) is a highly configurable terminal emulator, SSH and serial client for Windows 10, macOS and Linux&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Integrated SSH and Telnet client and connection manager&lt;/item&gt;
      &lt;item&gt;Integrated serial terminal&lt;/item&gt;
      &lt;item&gt;Theming and color schemes&lt;/item&gt;
      &lt;item&gt;Fully configurable shortcuts and multi-chord shortcuts&lt;/item&gt;
      &lt;item&gt;Split panes&lt;/item&gt;
      &lt;item&gt;Remembers your tabs&lt;/item&gt;
      &lt;item&gt;PowerShell (and PS Core), WSL, Git-Bash, Cygwin, MSYS2, Cmder and CMD support&lt;/item&gt;
      &lt;item&gt;Direct file transfer from/to SSH sessions via Zmodem&lt;/item&gt;
      &lt;item&gt;Full Unicode support including double-width characters&lt;/item&gt;
      &lt;item&gt;Doesn't choke on fast-flowing outputs&lt;/item&gt;
      &lt;item&gt;Proper shell experience on Windows including tab completion (via Clink)&lt;/item&gt;
      &lt;item&gt;Integrated encrypted container for SSH secrets and configuration&lt;/item&gt;
      &lt;item&gt;SSH, SFTP and Telnet client available as a web app (also self-hosted).&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;What Tabby is and isn't&lt;/item&gt;
      &lt;item&gt;Terminal features&lt;/item&gt;
      &lt;item&gt;SSH Client&lt;/item&gt;
      &lt;item&gt;Serial Terminal&lt;/item&gt;
      &lt;item&gt;Portable&lt;/item&gt;
      &lt;item&gt;Plugins&lt;/item&gt;
      &lt;item&gt;Themes&lt;/item&gt;
      &lt;item&gt;Contributing&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;Tabby is an alternative to Windows' standard terminal (conhost), PowerShell ISE, PuTTY, macOS Terminal.app and iTerm&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Tabby is not a new shell or a MinGW or Cygwin replacement. Neither is it lightweight - if RAM usage is of importance, consider Conemu or Alacritty&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;A VT220 terminal + various extensions&lt;/item&gt;
      &lt;item&gt;Multiple nested split panes&lt;/item&gt;
      &lt;item&gt;Tabs on any side of the window&lt;/item&gt;
      &lt;item&gt;Optional dockable window with a global spawn hotkey ("Quake console")&lt;/item&gt;
      &lt;item&gt;Progress detection&lt;/item&gt;
      &lt;item&gt;Notification on process completion&lt;/item&gt;
      &lt;item&gt;Bracketed paste, multiline paste warnings&lt;/item&gt;
      &lt;item&gt;Font ligatures&lt;/item&gt;
      &lt;item&gt;Custom shell profiles&lt;/item&gt;
      &lt;item&gt;Optional RMB paste and copy-on select (PuTTY style)&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;SSH2 client with a connection manager&lt;/item&gt;
      &lt;item&gt;X11 and port forwarding&lt;/item&gt;
      &lt;item&gt;Automatic jump host management&lt;/item&gt;
      &lt;item&gt;Agent forwarding (incl. Pageant and Windows native OpenSSH Agent)&lt;/item&gt;
      &lt;item&gt;Login scripts&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Saved connections&lt;/item&gt;
      &lt;item&gt;Readline input support&lt;/item&gt;
      &lt;item&gt;Optional hex byte-by-byte input and hexdump output&lt;/item&gt;
      &lt;item&gt;Newline conversion&lt;/item&gt;
      &lt;item&gt;Automatic reconnection&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Tabby will run as a portable app on Windows, if you create a &lt;code&gt;data&lt;/code&gt; folder in the same location where &lt;code&gt;Tabby.exe&lt;/code&gt; lives.&lt;/p&gt;
    &lt;p&gt;Plugins and themes can be installed directly from the Settings view inside Tabby.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;docker - connect to Docker containers&lt;/item&gt;
      &lt;item&gt;title-control - allows modifying the title of the terminal tabs by providing a prefix, suffix, and/or strings to be removed&lt;/item&gt;
      &lt;item&gt;quick-cmds - quickly send commands to one or all terminal tabs&lt;/item&gt;
      &lt;item&gt;save-output - record terminal output into a file&lt;/item&gt;
      &lt;item&gt;sync-config - sync the config to Gist or Gitee&lt;/item&gt;
      &lt;item&gt;clippy - an example plugin which annoys you all the time&lt;/item&gt;
      &lt;item&gt;workspace-manager - allows creating custom workspace profiles based on the given config&lt;/item&gt;
      &lt;item&gt;search-in-browser - opens default system browser with a text selected from the Tabby's tab&lt;/item&gt;
      &lt;item&gt;sftp-tab - open sftp tab for ssh connection like SecureCRT&lt;/item&gt;
      &lt;item&gt;background - change Tabby background image and more...&lt;/item&gt;
      &lt;item&gt;highlight - Tabby terminal keyword highlight plugin&lt;/item&gt;
      &lt;item&gt;web-auth-handler - In-app web authentication popups (Built primarily for warpgate in-browser auth)&lt;/item&gt;
      &lt;item&gt;mcp-server - Powerful Model Context Protocol server integration for Tabby that seamlessly connects with AI assistants through MCP clients like Cursor and Windsurf, enhancing your terminal workflow with intelligent AI capabilities.&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;hype - a Hyper inspired theme&lt;/item&gt;
      &lt;item&gt;relaxed - the Relaxed theme for Tabby&lt;/item&gt;
      &lt;item&gt;gruvbox&lt;/item&gt;
      &lt;item&gt;windows10&lt;/item&gt;
      &lt;item&gt;altair&lt;/item&gt;
      &lt;item&gt;catppuccin - Soothing pastel theme for Tabby&lt;/item&gt;
      &lt;item&gt;noctis - color themes inspired by Noctis VS Code theme&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;packagecloud has provided free Debian/RPM repository hosting&lt;/p&gt;
    &lt;p&gt;keygen has provided free release &amp;amp; auto-update hosting&lt;/p&gt;
    &lt;p&gt;IQ Hive is providing financial support for the project development&lt;/p&gt;
    &lt;p&gt;Pull requests and plugins are welcome!&lt;/p&gt;
    &lt;p&gt;See HACKING.md and API docs for information of how the project is laid out, and a very brief plugin development tutorial.&lt;/p&gt;
    &lt;p&gt;Thanks goes to these wonderful people (emoji key):&lt;/p&gt;
    &lt;p&gt;This project follows the all-contributors specification. Contributions of any kind are welcome!&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://github.com/Eugeny/tabby"/><published>2025-09-17T07:00:09+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45273352</id><title>Why We're Building Stategraph: Terraform State as a Distributed Systems Problem</title><updated>2025-09-17T11:08:06.832003+00:00</updated><content>&lt;doc fingerprint="a51827402d82cda9"&gt;
  &lt;main&gt;&lt;head rend="h1"&gt;Why We're Building Stategraph: Terraform State as a Distributed Systems Problem&lt;/head&gt;&lt;p&gt;The Terraform ecosystem has spent a decade working around a fundamental architectural mismatch: we're using filesystem semantics to solve a distributed systems problem. The result is predictable and painful.&lt;/p&gt;&lt;p&gt;When we started building infrastructure automation at scale, we discovered that Terraform's state management exhibits all the classic symptoms of impedance mismatch between data representation and access patterns. Teams implement increasingly elaborate workarounds: state file splitting, wrapper orchestration, external locking mechanisms. These aren't solutions; they're evidence that we're solving the wrong problem.&lt;/p&gt;&lt;p&gt;Stategraph addresses this by treating state for what it actually is: a directed acyclic graph of resources with partial update semantics, not a monolithic document.&lt;/p&gt;&lt;head rend="h2"&gt;The Pathology of File-Based State&lt;/head&gt;&lt;p&gt;Terraform state, at its core, is a coordination problem. Multiple actors (engineers, CI systems, drift detection) need to read and modify overlapping subsets of infrastructure state concurrently. This is a well-studied problem in distributed systems, with established solutions around fine-grained locking, multi-version concurrency control, and transaction isolation.&lt;/p&gt;&lt;p&gt;Instead, Terraform implements the simplest possible solution: a global mutex on a JSON file.&lt;/p&gt;&lt;head rend="h4"&gt;Observation&lt;/head&gt;&lt;p&gt;The probability of lock contention in a shared state file increases super-linearly with both team size and resource count. At 100 resources and 5 engineers, you're coordinating 500 potential interaction points through a single mutex.&lt;/p&gt;&lt;p&gt;Consider the actual data access patterns in a typical Terraform operation:&lt;/p&gt;&lt;head rend="h4"&gt;Current Model&lt;/head&gt;&lt;p&gt; Read: 100%&lt;lb/&gt;Lock: 100%&lt;lb/&gt;Modify: 0.5% &lt;/p&gt;&lt;head rend="h4"&gt;Actual Requirement&lt;/head&gt;&lt;p&gt; Read: 3%&lt;lb/&gt;Lock: 3%&lt;lb/&gt;Modify: 3% &lt;/p&gt;&lt;p&gt;This mismatch between granularity of operation and granularity of locking is the root cause of every Terraform scaling problem. It violates the fundamental principle of isolation in concurrent systems: non-overlapping operations should not block each other.&lt;/p&gt;&lt;p&gt;The standard response, splitting state files, doesn't solve the problem. It redistributes it. Now you have N coordination problems instead of one, plus the additional complexity of managing cross-state dependencies. You've traded false contention for distributed transaction coordination, which is arguably worse.&lt;/p&gt;&lt;head rend="h2"&gt;State as a Graph: The Natural Representation&lt;/head&gt;&lt;p&gt;Infrastructure state is inherently a directed graph. Resources have dependencies, which form edges. Changes propagate along these edges. Terraform already knows this: the internal representation is a graph, and the planner performs graph traversal. But at the storage layer, we flatten this rich structure into a blob.&lt;/p&gt;&lt;p&gt;This is akin to storing a B-tree in a CSV file. You can do it, but you're destroying the very properties that make the data structure useful.&lt;/p&gt;&lt;p&gt;When state is properly normalized into a graph database, several properties emerge naturally:&lt;/p&gt;&lt;p&gt;Subgraph isolation: Operations on disjoint subgraphs are inherently parallelizable. If Team A is modifying RDS instances and Team B is updating CloudFront distributions, there's no shared state to coordinate.&lt;/p&gt;&lt;p&gt;Precise locking: We can implement row-level locking on resources and edge-level locking on dependencies. Lock acquisition follows the dependency graph, preventing deadlocks through consistent ordering.&lt;/p&gt;&lt;p&gt;Incremental refresh: Given a change set, we can compute the minimal refresh set by traversing the dependency graph. Most changes affect a small cone of resources, not the entire state space.&lt;/p&gt;&lt;head rend="h2"&gt;Concurrency Control Through Proper Abstractions&lt;/head&gt;&lt;p&gt;The distributed systems community solved these problems decades ago. Multi-version concurrency control (MVCC) allows readers to proceed without blocking writers. Write-ahead logging provides durability without sacrificing performance. Transaction isolation levels let operators choose their consistency guarantees.&lt;/p&gt;&lt;p&gt;Stategraph implements these patterns at the Terraform state layer:&lt;/p&gt;&lt;head rend="h4"&gt;Traditional: Global Lock&lt;/head&gt;&lt;head rend="h4"&gt;Stategraph: Subgraph Isolation&lt;/head&gt;&lt;p&gt;Each operation acquires locks only on its subgraph. The lock manager uses the dependency graph to ensure consistent ordering, preventing deadlocks. Readers use MVCC to access consistent snapshots without blocking writers.&lt;/p&gt;&lt;head rend="h4"&gt;Implementation Detail&lt;/head&gt;&lt;p&gt;Lock acquisition follows a strict partial order derived from the resource dependency graph. Resources are locked in topological order, with ties broken by resource ID. This guarantees deadlock freedom without requiring global coordination.&lt;/p&gt;&lt;p&gt;The result is dramatic improvement in concurrent throughput:&lt;/p&gt;&lt;head rend="h5"&gt;Transaction A&lt;/head&gt;&lt;head rend="h5"&gt;Transaction B&lt;/head&gt;&lt;head rend="h5"&gt;Transaction C&lt;/head&gt;&lt;p&gt;Three teams, three transactions, zero contention. This isn't possible with file-based state, regardless of how you split it.&lt;/p&gt;&lt;head rend="h2"&gt;The Refresh Problem&lt;/head&gt;&lt;p&gt;Terraform refresh is O(n) in the number of resources, regardless of change scope. Change one security group rule and you still walk the entire state. That's an algorithmic bottleneck, not just an implementation detail.&lt;/p&gt;&lt;head rend="h4"&gt;File-Based State&lt;/head&gt;&lt;p&gt; Changing 1 resource&lt;lb/&gt; Refreshing all 30 &lt;/p&gt;&lt;head rend="h4"&gt;Graph State&lt;/head&gt;&lt;p&gt; Changing 1 resource&lt;lb/&gt; Refreshing only 3 &lt;/p&gt;&lt;p&gt;With a graph representation, refresh work can be scoped to the affected subgraph instead of the entire state. Most changes touch only a small fraction of resources, not everything.&lt;/p&gt;&lt;head rend="h2"&gt;Why We Built This&lt;/head&gt;&lt;p&gt;At Terrateam, we've watched hundreds of teams struggle with the same fundamental problems. They start with a single state file, hit scaling limits, split their state, discover coordination complexity, build orchestration layers, and eventually resign themselves to living with the pain.&lt;/p&gt;&lt;p&gt;This is a solvable problem. The computer science is well-understood. The implementation is straightforward once you acknowledge that state management is a distributed systems problem, not a file storage problem.&lt;/p&gt;&lt;p&gt;Stategraph isn't revolutionary. It's the application of established distributed systems principles to a problem that's been mischaracterized since its inception. We're not inventing new algorithms; we're applying the right ones.&lt;/p&gt;&lt;head rend="h4"&gt;Design Principle&lt;/head&gt;&lt;p&gt;The storage layer should match the access patterns. Terraform state exhibits graph traversal patterns, partial update patterns, and concurrent access patterns. The storage layer should be a graph database with ACID transactions and fine-grained locking. Anything else is impedance mismatch.&lt;/p&gt;&lt;p&gt;The infrastructure industry has accepted file-based state as an immutable constraint for too long. It's not. It's a choice, and it's the wrong one for systems at scale.&lt;/p&gt;&lt;head rend="h2"&gt;Technical Implementation&lt;/head&gt;&lt;p&gt;Stategraph is implemented as a PostgreSQL schema with a backend that speaks the Terraform/OpenTofu remote backend protocol. We chose PostgreSQL for its robust MVCC, proven scalability, and operational familiarity. The schema normalizes state into three primary relations:&lt;/p&gt;&lt;p&gt;resources: one row per resource, with type, provider, and attribute columns.&lt;lb/&gt; dependencies: edge table representing the resource dependency graph.&lt;lb/&gt; transactions: append-only log of all state mutations with full attribution.&lt;/p&gt;&lt;p&gt;The backend extends Terraform's protocol with graph-aware operations. Lock acquisition and state queries operate directly on the database representation of the graph, enabling precision and concurrency that file-based backends can't provide.&lt;/p&gt;&lt;p&gt;This isn't a wrapper or an orchestrator. It's a replacement for the storage layer that preserves Terraform's execution model while fixing its coordination problems.&lt;/p&gt;&lt;head rend="h2"&gt;Adoption Path&lt;/head&gt;&lt;p&gt;Stategraph reads existing tfstate files and constructs the graph representation automatically. No changes to Terraform configurations are required. The backend protocol is unchanged. From Terraform's perspective, Stategraph is just another backend, like S3 or GCS.&lt;/p&gt;&lt;p&gt;But from an operational perspective, everything changes. Lock contention disappears. Refresh times drop by orders of magnitude. Teams stop blocking each other. State becomes queryable, auditable, and comprehensible.&lt;/p&gt;&lt;p&gt;We're not asking teams to rewrite their infrastructure. We're asking them to store it properly.&lt;/p&gt;&lt;quote&gt;The question isn't whether Terraform state should be a graph. It already is. The question is whether we'll continue pretending it's a file.&lt;/quote&gt;&lt;head rend="h3"&gt;Technical Preview&lt;/head&gt;&lt;p&gt;Stategraph is in active development. We're working with design partners to validate the approach at scale.&lt;/p&gt;Get Updates&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://stategraph.dev/blog/why-stategraph/"/><published>2025-09-17T08:38:17+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45273747</id><title>Alibaba's New AI Chip Unveiled: Key Specifications Comparable to H20</title><updated>2025-09-17T11:08:05.137672+00:00</updated><content>&lt;doc fingerprint="ccca7d4c469478ff"&gt;
  &lt;main&gt;
    &lt;p&gt;On September 16, according to a report aired on CCTV News, a comparison of key parameters between domestically produced cards and NV cards revealed that the latest PPU chip developed by Pingtouge, a subsidiary of Alibaba and designed for artificial intelligence, surpasses NVIDIA's A800 in all major parameter metrics and is comparable to the H20. Compared with other domestic AI chips, Pingtouge’s PPU also mostly leads in these indicators.&lt;/p&gt;
    &lt;p&gt;In terms of specific parameters:&lt;lb/&gt;Memory: Alibaba Pingtouge PPU is equipped with 96GB of HBM2e, surpassing NVIDIA A800's 80GB HBM2e and matching the memory capacity of NVIDIA H20. However, H20 integrates HBM3, which is one generation ahead;**&lt;lb/&gt;Inter-chip interconnect bandwidth: Alibaba Pingtouge PPU reaches up to 700GB/s, higher than A800’s 400GB/s, but slightly lower than H20;&lt;lb/&gt;Interface: Alibaba Pingtouge PPU supports PCIe 5.0×15, superior to A800’s PCIe 4.0×16 and on par with H20;&lt;lb/&gt;Power consumption: Alibaba Pingtouge PPU maintains the same level as NVIDIA A800 at 400W, lower than H20’s 550W.&lt;/p&gt;
    &lt;p&gt;According to the report, the list of signed agreements for China Unicom’s Sanjiangyuan Green Electricity Intelligent Computing Center project showcases collaborations with multiple domestic AI chip brands under signed or proposed agreements.&lt;lb/&gt;Among them, the total number of devices in signed projects amounts to 1,747 units, comprising 22,832 computing cards with a total computing power of 3,479P. Specifically:&lt;lb/&gt;Alibaba Cloud Ten Thousand Cards: A total of 1,024 devices, 16,384 Pingtouge computing cards, with computing power reaching 1,945P;&lt;lb/&gt;Chinese Academy of Sciences: A total of 512 devices, 4,096 Muxi computing cards, with computing power reaching 984P;&lt;lb/&gt;Beijing Jingtai: A total of 83 devices, 1,328 BR100 computing power cards, with a computing power of 450P;&lt;lb/&gt;Zhonghao Core Electronics: A total of 128 devices, with a computing power of 200P.&lt;/p&gt;
    &lt;p&gt;In addition, the total computing power of the proposed contracted projects is 2,002P, including computing power cards from Taichu Yuanjie, Suizhi Technology, and Moore Threads.&lt;/p&gt;
    &lt;p&gt;Editor/Rocky&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://news.futunn.com/en/post/62202518/alibaba-s-new-ai-chip-unveiled-key-specifications-comparable-to"/><published>2025-09-17T09:45:44+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45273824</id><title>Oh no, not again a meditation on NPM supply chain attacks</title><updated>2025-09-17T11:08:05.057708+00:00</updated><content/><link href="https://tane.dev/2025/09/oh-no-not-again...-a-meditation-on-npm-supply-chain-attacks/"/><published>2025-09-17T09:57:50+00:00</published></entry><entry><id>https://news.ycombinator.com/item?id=45273854</id><title>EU Chat Control: Germany's position has been reverted to UNDECIDED</title><updated>2025-09-17T11:08:04.590520+00:00</updated><content>&lt;doc fingerprint="f8eb8f2f2d953eed"&gt;
  &lt;main&gt;
    &lt;p&gt;To use the Mastodon web application, please enable JavaScript. Alternatively, try one of the native apps for Mastodon for your platform.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</content><link href="https://mastodon.social/@chatcontrol/115215006562371435"/><published>2025-09-17T10:02:55+00:00</published></entry></feed>