<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Hacker News: Front Page</title><link>https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml</link><description>Hacker News RSS</description><atom:link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Thu, 28 Aug 2025 19:32:04 +0000</lastBuildDate><item><title>Important machine learning equations</title><link>https://chizkidd.github.io//2025/05/30/machine-learning-key-math-eqns/</link><description>&lt;doc fingerprint="6c3c4b014c3bd6b5"&gt;
  &lt;main&gt;&lt;head rend="h1"&gt;The Most Important Machine Learning Equations: A Comprehensive Guide&lt;/head&gt;&lt;head rend="h2"&gt;Motivation&lt;/head&gt;&lt;p&gt;Machine learning (ML) is a powerful field driven by mathematics. Whether you’re building models, optimizing algorithms, or simply trying to understand how ML works under the hood, mastering the core equations is essential. This blog post is designed to be your go-to resource, covering the most critical and “mind-breaking” ML equations—enough to grasp most of the core math behind ML. Each section includes theoretical insights, the equations themselves, and practical implementations in Python, so you can see the math in action.&lt;/p&gt;&lt;p&gt;This guide is for anyone with a basic background in math and programming who wants to deepen their understanding of ML and is inspired by this tweet from @goyal__pramod. Let’s dive into the equations that power this fascinating field!&lt;/p&gt;&lt;head rend="h2"&gt;Table of Contents&lt;/head&gt;&lt;head rend="h2"&gt;Introduction&lt;/head&gt;&lt;p&gt;Mathematics is the language of machine learning. From probability to linear algebra, optimization to advanced generative models, equations define how ML algorithms learn from data and make predictions. This blog post compiles the most essential equations, explains their significance, and provides practical examples using Python libraries like NumPy, scikit-learn, TensorFlow, and PyTorch. Whether you’re a beginner or an experienced practitioner, this guide will equip you with the tools to understand and apply ML math effectively.&lt;/p&gt;&lt;head rend="h2"&gt;Probability and Information Theory&lt;/head&gt;&lt;p&gt;Probability and information theory provide the foundation for reasoning about uncertainty and measuring differences between distributions.&lt;/p&gt;&lt;head rend="h3"&gt;Bayes’ Theorem&lt;/head&gt;&lt;p&gt;Equation:&lt;/p&gt;\[P(A|B) = \frac{P(B|A) P(A)}{P(B)}\]&lt;p&gt;Explanation: Bayes’ Theorem describes how to update the probability of a hypothesis ($A$) given new evidence ($B$). It’s a cornerstone of probabilistic reasoning and is widely used in machine learning for tasks like classification and inference.&lt;/p&gt;&lt;p&gt;Practical Use: Applied in Naive Bayes classifiers, Bayesian networks, and Bayesian optimization.&lt;/p&gt;&lt;p&gt;Implementation:&lt;/p&gt;&lt;code&gt;def bayes_theorem(p_d, p_t_given_d, p_t_given_not_d):
    """
    Calculate P(D|T+) using Bayes' Theorem.
    
    Parameters:
    p_d: P(D), probability of having the disease
    p_t_given_d: P(T+|D), probability of testing positive given disease
    p_t_given_not_d: P(T+|D'), probability of testing positive given no disease
    
    Returns:
    P(D|T+), probability of having the disease given a positive test
    """
    p_not_d = 1 - p_d
    p_t = p_t_given_d * p_d + p_t_given_not_d * p_not_d
    p_d_given_t = (p_t_given_d * p_d) / p_t
    return p_d_given_t

# Example usage
p_d = 0.01  # 1% of population has the disease
p_t_given_d = 0.99  # Test is 99% sensitive
p_t_given_not_d = 0.02  # Test has 2% false positive rate
result = bayes_theorem(p_d, p_t_given_d, p_t_given_not_d) 
print(f"P(D|T+) = {result:.4f}")  # Output: P(D|T+) = 0.3333 
&lt;/code&gt;&lt;head rend="h3"&gt;Entropy&lt;/head&gt;&lt;p&gt;Equation:&lt;/p&gt;\[H(X) = -\sum_{x \in X} P(x) \log P(x)\]&lt;p&gt;Explanation: Entropy measures the uncertainty or randomness in a probability distribution. It quantifies the amount of information required to describe the distribution and is fundamental in understanding concepts like information gain and decision trees.&lt;/p&gt;&lt;p&gt;Practical Use: Used in decision trees, information gain calculations, and as a basis for other information-theoretic measures.&lt;/p&gt;&lt;p&gt;Implementation:&lt;/p&gt;&lt;code&gt;import numpy as np

def entropy(p):
    """
    Calculate entropy of a probability distribution.
    
    Parameters:
    p: Probability distribution array
    
    Returns:
    Entropy value
    """
    return -np.sum(p * np.log(p, where=p &amp;gt; 0))

# Example usage
fair_coin = np.array([0.5, 0.5])  # fair coin has the same probability of heads and tails
print(f"Entropy of fair coin: {entropy(fair_coin)}")  # Output: 0.6931471805599453 

biased_coin = np.array([0.9, 0.1])  # biased coin has a higher probability of heads
print(f"Entropy of biased coin: {entropy(biased_coin)}")  # Output: 0.4698716731013394 
&lt;/code&gt;&lt;head rend="h3"&gt;Joint and Conditional Probability&lt;/head&gt;&lt;p&gt;Equations:&lt;/p&gt;&lt;list rend="ul"&gt;&lt;item&gt;&lt;p&gt;Joint Probability:&lt;/p&gt;\[P(A, B) = P(A|B) P(B) = P(B|A) P(A)\]&lt;/item&gt;&lt;item&gt;&lt;p&gt;Conditional Probability:&lt;/p&gt;\[P(A|B) = \frac{P(A, B)}{P(B)}\]&lt;/item&gt;&lt;/list&gt;&lt;p&gt;Explanation: Joint probability describes the likelihood of two events occurring together, while conditional probability measures the probability of one event given another. These are the building blocks of Bayesian methods and probabilistic models.&lt;/p&gt;&lt;p&gt;Practical Use: Used in Naive Bayes classifiers and probabilistic graphical models.&lt;/p&gt;&lt;p&gt;Implementation:&lt;/p&gt;&lt;code&gt;from sklearn.naive_bayes import GaussianNB
import numpy as np

X = np.array([[1, 2], [2, 3], [3, 4], [4, 5]])
y = np.array([0, 0, 1, 1])
model = GaussianNB().fit(X, y)
print(model.predict([[2.5, 3.5]]))  # Output: [1]
&lt;/code&gt;&lt;head rend="h3"&gt;Kullback-Leibler Divergence (KLD)&lt;/head&gt;&lt;p&gt;Equation:&lt;/p&gt;\[D_{KL}(P \| Q) = \sum_{x \in \mathcal{X}} P(x) \log \left( \frac{P(x)}{Q(x)} \right)\]&lt;p&gt;Explanation: KLD measures how much one probability distribution $P$ diverges from another $Q$. It’s asymmetric and foundational in information theory and generative models.&lt;/p&gt;&lt;p&gt;Practical Use: Used in variational autoencoders (VAEs) and model evaluation.&lt;/p&gt;&lt;p&gt;Implementation:&lt;/p&gt;&lt;code&gt;import numpy as np

P = np.array([0.7, 0.3])
Q = np.array([0.5, 0.5])
kl_div = np.sum(P * np.log(P / Q))
print(f"KL Divergence: {kl_div}")  # Output: 0.08228287850505156
&lt;/code&gt;&lt;head rend="h3"&gt;Cross-Entropy&lt;/head&gt;&lt;p&gt;Equation:&lt;/p&gt;\[H(P, Q) = -\sum_{x \in \mathcal{X}} P(x) \log Q(x)\]&lt;p&gt;Explanation: Cross-entropy quantifies the difference between the true distribution $P$ and the predicted distribution $Q$. It’s a widely used loss function in classification.&lt;/p&gt;&lt;p&gt;Practical Use: Drives training in logistic regression and neural networks.&lt;/p&gt;&lt;p&gt;Implementation:&lt;/p&gt;&lt;code&gt;import numpy as np

y_true = np.array([1, 0, 1])
y_pred = np.array([0.9, 0.1, 0.8])
cross_entropy = -np.mean(y_true * np.log(y_pred) + (1 - y_true) * np.log(1 - y_pred))
print(f"Cross-Entropy: {cross_entropy}")  # Output: 0.164252033486018
&lt;/code&gt;&lt;head rend="h2"&gt;Linear Algebra&lt;/head&gt;&lt;p&gt;Linear algebra powers the transformations and structures in ML models.&lt;/p&gt;&lt;head rend="h3"&gt;Linear Transformation&lt;/head&gt;&lt;p&gt;Equation:&lt;/p&gt;\[y = Ax + b \quad \text{where } A \in \mathbb{R}^{m \times n}, x \in \mathbb{R}^n, y \in \mathbb{R}^m, b \in \mathbb{R}^m\]&lt;p&gt;Explanation: This equation represents a linear mapping of input $x$ to output $y$ via matrix $A$ and bias $b$. It’s the core operation in neural network layers.&lt;/p&gt;&lt;p&gt;Practical Use: Foundational for linear regression and neural networks.&lt;/p&gt;&lt;p&gt;Implementation:&lt;/p&gt;&lt;code&gt;import numpy as np

A = np.array([[2, 1], [1, 3]])
x = np.array([1, 2])
b = np.array([0, 1])
y = A @ x + b
print(y)  # Output: [4 7]
&lt;/code&gt;&lt;head rend="h3"&gt;Eigenvalues and Eigenvectors&lt;/head&gt;&lt;p&gt;Equation:&lt;/p&gt;\[Av = \lambda v \quad \text{where } \lambda \in \mathbb{R}, v \in \mathbb{R}^n, v \neq 0\]&lt;p&gt;Explanation: Eigenvalues $\lambda$ and eigenvectors $v$ describe how a matrix $A$ scales and rotates space, crucial for understanding data variance.&lt;/p&gt;&lt;p&gt;Practical Use: Used in Principal Component Analysis (PCA).&lt;/p&gt;&lt;p&gt;Implementation:&lt;/p&gt;&lt;code&gt;import numpy as np

A = np.array([[4, 2], [1, 3]])
eigenvalues, eigenvectors = np.linalg.eig(A)
print(f"Eigenvalues: {eigenvalues}")
print(f"Eigenvectors:\n{eigenvectors}")
&lt;/code&gt;&lt;head rend="h3"&gt;Singular Value Decomposition (SVD)&lt;/head&gt;&lt;p&gt;Equation:&lt;/p&gt;\[A = U \Sigma V^T\]&lt;p&gt;Explanation: SVD breaks down a matrix $A$ into orthogonal matrices $U$ and $V$ and a diagonal matrix $\Sigma$ of singular values. It reveals the intrinsic structure of data.&lt;/p&gt;&lt;p&gt;Practical Use: Applied in dimensionality reduction and recommendation systems.&lt;/p&gt;&lt;p&gt;Implementation:&lt;/p&gt;&lt;code&gt;import numpy as np

A = np.array([[1, 2], [3, 4], [5, 6]])
U, S, Vt = np.linalg.svd(A)
print(f"U:\n{U}\nS: {S}\nVt:\n{Vt}")
&lt;/code&gt;&lt;head rend="h2"&gt;Optimization&lt;/head&gt;&lt;p&gt;Optimization is how ML models learn from data.&lt;/p&gt;&lt;head rend="h3"&gt;Gradient Descent&lt;/head&gt;&lt;p&gt;Equation:&lt;/p&gt;\[\theta_{t+1} = \theta_t - \eta \nabla_{\theta} L(\theta)\]&lt;p&gt;Explanation: Gradient descent updates parameters $\theta$ by moving opposite to the gradient of the loss function $L$, scaled by learning rate $\eta$.&lt;/p&gt;&lt;p&gt;Practical Use: The backbone of training most ML models.&lt;/p&gt;&lt;p&gt;Implementation:&lt;/p&gt;&lt;code&gt;import numpy as np

def gradient_descent(X, y, lr=0.01, epochs=1000):
    m, n = X.shape
    theta = np.zeros(n)
    for _ in range(epochs):
        gradient = (1/m) * X.T @ (X @ theta - y)
        theta -= lr * gradient
    return theta

X = np.array([[1, 1], [1, 2], [1, 3]])
y = np.array([1, 2, 3])
theta = gradient_descent(X, y)
print(theta)  # Output: ~[0., 1.]
&lt;/code&gt;&lt;head rend="h3"&gt;Backpropagation&lt;/head&gt;&lt;p&gt;Equation:&lt;/p&gt;\[\frac{\partial L}{\partial w_{ij}} = \frac{\partial L}{\partial a_j} \cdot \frac{\partial a_j}{\partial z_j} \cdot \frac{\partial z_j}{\partial w_{ij}}\]&lt;p&gt;Explanation: Backpropagation applies the chain rule to compute gradients of the loss $L$ with respect to weights $w_{ij}$ in neural networks.&lt;/p&gt;&lt;p&gt;Practical Use: Enables efficient training of deep networks.&lt;/p&gt;&lt;p&gt;Implementation:&lt;/p&gt;&lt;code&gt;import torch
import torch.nn as nn

model = nn.Sequential(nn.Linear(2, 1), nn.Sigmoid())
loss_fn = nn.MSELoss()
optimizer = torch.optim.SGD(model.parameters(), lr=0.01)

X = torch.tensor([[0., 0.], [1., 1.]], dtype=torch.float32)
y = torch.tensor([[0.], [1.]], dtype=torch.float32)

optimizer.zero_grad()
output = model(X)
loss = loss_fn(output, y)
loss.backward()
optimizer.step()
print(f"Loss: {loss.item()}")
&lt;/code&gt;&lt;head rend="h2"&gt;Loss Functions&lt;/head&gt;&lt;p&gt;Loss functions measure model performance and guide optimization.&lt;/p&gt;&lt;head rend="h3"&gt;Mean Squared Error (MSE)&lt;/head&gt;&lt;p&gt;Equation:&lt;/p&gt;\[\text{MSE} = \frac{1}{n} \sum_{i=1}^n (y_i - \hat{y}_i)^2\]&lt;p&gt;Explanation: MSE calculates the average squared difference between true $y_i$ and predicted $\hat{y}_i$ values, penalizing larger errors more heavily.&lt;/p&gt;&lt;p&gt;Practical Use: Common in regression tasks.&lt;/p&gt;&lt;p&gt;Implementation:&lt;/p&gt;&lt;code&gt;import numpy as np

y_true = np.array([1, 2, 3])
y_pred = np.array([1.1, 1.9, 3.2])
mse = np.mean((y_true - y_pred)**2)
print(f"MSE: {mse}")  # Output: 0.01
&lt;/code&gt;&lt;head rend="h3"&gt;Cross-Entropy Loss&lt;/head&gt;&lt;p&gt;(See Cross-Entropy above for details.)&lt;/p&gt;&lt;head rend="h2"&gt;Advanced ML Concepts&lt;/head&gt;&lt;p&gt;These equations power cutting-edge ML techniques.&lt;/p&gt;&lt;head rend="h3"&gt;Diffusion Process&lt;/head&gt;&lt;p&gt;Equation:&lt;/p&gt;\[x_t = \sqrt{\alpha_t} x_0 + \sqrt{1 - \alpha_t} \epsilon \quad \text{where} \quad \epsilon \sim \mathcal{N}(0, I)\]&lt;p&gt;Explanation: This describes a forward diffusion process where data $x_0$ is gradually noised over time $t$, a key idea in diffusion models.&lt;/p&gt;&lt;p&gt;Practical Use: Used in generative AI like image synthesis.&lt;/p&gt;&lt;p&gt;Implementation:&lt;/p&gt;&lt;code&gt;import torch

x_0 = torch.tensor([1.0])
alpha_t = 0.9
noise = torch.randn_like(x_0)
x_t = torch.sqrt(torch.tensor(alpha_t)) * x_0 + torch.sqrt(torch.tensor(1 - alpha_t)) * noise
print(f"x_t: {x_t}")
&lt;/code&gt;&lt;head rend="h3"&gt;Convolution Operation&lt;/head&gt;&lt;p&gt;Equation:&lt;/p&gt;\[(f * g)(t) = \int f(\tau) g(t - \tau) \, d\tau\]&lt;p&gt;Explanation: Convolution combines two functions by sliding one over the other, extracting features in data like images.&lt;/p&gt;&lt;p&gt;Practical Use: Core to convolutional neural networks (CNNs).&lt;/p&gt;&lt;p&gt;Implementation:&lt;/p&gt;&lt;code&gt;import torch
import torch.nn as nn

conv = nn.Conv2d(1, 1, kernel_size=3)
image = torch.randn(1, 1, 28, 28)
output = conv(image)
print(output.shape)  # Output: torch.Size([1, 1, 26, 26])
&lt;/code&gt;&lt;head rend="h3"&gt;Softmax Function&lt;/head&gt;&lt;p&gt;Equation:&lt;/p&gt;\[\sigma(z_i) = \frac{e^{z_i}}{\sum_j e^{z_j}}\]&lt;p&gt;Explanation: Softmax converts raw scores $z_i$ into probabilities, summing to 1, ideal for multi-class classification.&lt;/p&gt;&lt;p&gt;Practical Use: Used in neural network outputs.&lt;/p&gt;&lt;p&gt;Implementation:&lt;/p&gt;&lt;code&gt;import numpy as np

z = np.array([1.0, 2.0, 3.0])
softmax = np.exp(z) / np.sum(np.exp(z))
print(f"Softmax: {softmax}")  # Output: [0.09003057 0.24472847 0.66524096]
&lt;/code&gt;&lt;head rend="h3"&gt;Attention Mechanism&lt;/head&gt;&lt;p&gt;Equation:&lt;/p&gt;\[\text{Attention}(Q, K, V) = \text{softmax}\left( \frac{Q K^T}{\sqrt{d_k}} \right) V\]&lt;p&gt;Explanation: Attention computes a weighted sum of values $V$ based on the similarity between queries $Q$ and keys $K$, scaled by $\sqrt{d_k}$.&lt;/p&gt;&lt;p&gt;Practical Use: Powers transformers in NLP and beyond.&lt;/p&gt;&lt;p&gt;Implementation:&lt;/p&gt;&lt;code&gt;import torch

def attention(Q, K, V):
    d_k = Q.size(-1)
    scores = torch.matmul(Q, K.transpose(-2, -1)) / torch.sqrt(torch.tensor(d_k, dtype=torch.float32))
    attn = torch.softmax(scores, dim=-1)
    return torch.matmul(attn, V)

Q = torch.tensor([[1., 0.], [0., 1.]])
K = torch.tensor([[1., 1.], [1., 0.]])
V = torch.tensor([[0., 1.], [1., 0.]])
output = attention(Q, K, V)
print(output)
&lt;/code&gt;&lt;head rend="h2"&gt;Conclusion&lt;/head&gt;&lt;p&gt;This blog post has explored the most critical equations in machine learning, from foundational probability and linear algebra to advanced concepts like diffusion and attention. With theoretical explanations, practical implementations, and visualizations, you now have a comprehensive resource to understand and apply ML math. Point anyone asking about core ML math here—they’ll learn 95% of what they need in one place!&lt;/p&gt;&lt;head rend="h2"&gt;Further Reading&lt;/head&gt;&lt;list rend="ul"&gt;&lt;item&gt;Pattern Recognition and Machine Learning by Christopher Bishop&lt;/item&gt;&lt;item&gt;Deep Learning by Ian Goodfellow, Yoshua Bengio, and Aaron Courville&lt;/item&gt;&lt;item&gt;Stanford CS229: Machine Learning&lt;/item&gt;&lt;item&gt;PyTorch Tutorials&lt;/item&gt;&lt;/list&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45050931</guid></item><item><title>The Math Behind GANs (2020)</title><link>https://jaketae.github.io/study/gan-math/</link><description>&lt;doc fingerprint="2b939a13243d9bb9"&gt;
  &lt;main&gt;&lt;head rend="h1"&gt;The Math Behind GANs&lt;/head&gt;&lt;p&gt;Generative Adversarial Networks refer to a family of generative models that seek to discover the underlying distribution behind a certain data generating process. This distribution is discovered through an adversarial competition between a generator and a discriminator. As we saw in an earlier introductory post on GANs, the two models are trained such that the discriminator strives to distinguish between generated and true examples, while the generator seeks to confuse the discriminator by producing data that are as realistic and compelling as possible.&lt;/p&gt;&lt;p&gt;In this post, we’ll take a deep dive into the math behind GANs. My primary source of reference is Generative Adversarial Nets by Ian Goodfellow, et al. It is in this paper that Goodfellow first outlined the concept of a GAN, which is why it only makes sense that we commence from the analysis of this paper. Let’s begin!&lt;/p&gt;&lt;head rend="h1"&gt;Motivating the Loss Function&lt;/head&gt;&lt;p&gt;GAN can be seen as an interplay between two different models: the generator and the discriminator. Therefore, each model will have its own loss function. In this section, let’s try to motivate an intuitive understanding of the loss function for each.&lt;/p&gt;&lt;head rend="h2"&gt;Notation&lt;/head&gt;&lt;p&gt;To minimize confusion, let’s define some notation that we will be using throughout this post.&lt;/p&gt;\[\begin{multline} \shoveleft x: \text{Real data} \\ \shoveleft z: \text{Latent vector} \\ \shoveleft G(z): \text{Fake data} \\ \shoveleft D(x): \text{Discriminator's evaluation of real data} \\ \shoveleft D(G(z)): \text{Discriminator's evaluation of fake data} \\ \shoveleft \text{Error}(a, b): \text{Error between } a \text{ and } b\\ \end{multline}\]&lt;head rend="h2"&gt;The Discriminator&lt;/head&gt;&lt;p&gt;The goal of the discriminator is to correctly label generated images as false and empirical data points as true. Therefore, we might consider the following to be the loss function of the discriminator:&lt;/p&gt;\[L_D = \text{Error}(D(x), 1) + \text{Error}(D(G(z)), 0) \tag{1}\]&lt;p&gt;Here, we are using a very generic, unspecific notation for $\text{Error}$ to refer to some function that tells us the distance or the difference between the two functional parameters. (If this reminded you of something like cross entropy or Kullback-Leibler divergence, you are definitely on the right track.)&lt;/p&gt;&lt;head rend="h2"&gt;The Generator&lt;/head&gt;&lt;p&gt;We can go ahead and do the same for the generator. The goal of the generator is to confuse the discriminator as much as possible such that it mislabels generated images as being true.&lt;/p&gt;\[L_G = \text{Error}(D(G(z)), 1) \tag{2}\]&lt;p&gt;The key here is to remember that a loss function is something that we wish to minimize. In the case of the generator, it should strive to minimize the difference between 1, the label for true data, and the discriminator’s evaluation of the generated fake data.&lt;/p&gt;&lt;head rend="h2"&gt;Binary Cross Entropy&lt;/head&gt;&lt;p&gt;A common loss function that is used in binary classification problems is binary cross entropy. As a quick review, let’s remind ourselves of what the formula for cross entropy looks like:&lt;/p&gt;\[H(p, q) = \mathbb{E}_{x \sim p(x)}[- \log q(x)] \tag{3}\]&lt;p&gt;In classification tasks, the random variable is discrete. Hence, the expectation can be expressed as a summation.&lt;/p&gt;\[H(p, q) = - \sum_{x \in \chi} p(x) \log q(x) \tag{4}\]&lt;p&gt;We can simplify this expression even further in the case of binary cross entropy, since there are only two labels: zero and one.&lt;/p&gt;\[H(y, \hat{y}) = - \sum y \log(\hat{y}) + (1 - y) \log(1 - \hat{y}) \tag{5}\]&lt;p&gt;This is the $\text{Error}$ function that we have been loosely using in the sections above. Binary cross entropy fulfills our objective in that it measures how different two distributions are in the context of binary classification of determining whether an input data point is true or false. Applying this to the loss functions in (1),&lt;/p&gt;\[L_D = - \sum_{x \in \chi, z \in \zeta} \log(D(x)) + \log(1 - D(G(z))) \tag{6}\]&lt;p&gt;We can do the same for (2):&lt;/p&gt;\[L_G = - \sum_{z \in \zeta} \log(D(G(z)) \tag{7}\]&lt;p&gt;Now we have two loss functions with which to train the generator and the discriminator! Note that, for the loss function of the generator, the loss is small if $D(G(z))$ is close to 1, since $\log(1) = 0$. This is exactly the sort of behavior we want from a loss function for the generator. It isn’t difficult to see the cogency of (6) with a similar approach.&lt;/p&gt;&lt;head rend="h2"&gt;Minor Caveats&lt;/head&gt;&lt;p&gt;The original paper by Goodfellow presents a slightly different version of the two loss functions derived above.&lt;/p&gt;\[\max_D \{ \log(D(x)) + \log(1-D(G(z))) \} \tag{8}\]&lt;p&gt;Essentially, the difference between (6) and (8) is the difference in sign, and whether we want to minimize or maximize a given quantity. In (6), we framed the function as a loss function to be minimized, whereas the original formulation presents it as a maximization problem, with the sign obviously flipped.&lt;/p&gt;&lt;p&gt;Then, Goodfellow proceeds by framing (8) as a min-max game, where the discriminator seeks to maximize the given quantity whereas the generator seeks to achieve the reverse. In other words,&lt;/p&gt;\[\min_G \max_D \{ \log(D(x)) + \log(1-D(G(z))) \} \tag{9}\]&lt;p&gt;The min-max formulation is a concise one-liner that intuitively demonstrates the adversarial nature of thecompetition between the generator and the discriminator. However, in practice, we define separate loss functions for the generator and the discriminator as we have done above. This is because the gradient of the function $y = \log x$ is steeper near $x = 0$ than that of the function $y = \log (1 - x)$, meaning that trying to maximize $\log(D(G(z)))$, or equivalently, minimizing $- \log(D(G(z)))$ is going to lead to quicker, more substantial improvements to the performance of the generator than trying to minimize $\log(1 - D(G(z)))$.&lt;/p&gt;&lt;head rend="h1"&gt;Model Optimization&lt;/head&gt;&lt;p&gt;Now that we have defined the loss functions for the generator and the discriminator, it’s time to leverage some math to solve the optimization problem, i.e. finding the parameters for the generator and the discriminator such that the loss functions are optimized. This corresponds to training the model in practical terms.&lt;/p&gt;&lt;head rend="h2"&gt;Training the Discriminator&lt;/head&gt;&lt;p&gt;When training a GAN, we typically train one model at a time. In other words, when training the discriminator, the generator is assumed as fixed. We saw this in action in the previous post on how to build a basic GAN.&lt;/p&gt;&lt;p&gt;Let’s return back to the min-max game. The quantity of interest can be defined as a function of $G$ and $D$. Let’s call this the value function:&lt;/p&gt;\[V(G, D) = \mathbb{E}_{x \sim p_{data}}[\log(D(x))] + \mathbb{E}_{z \sim p_z}[\log(1 - D(G(z)))] \tag{10}\]&lt;p&gt;In reality, we are more interested in the distribution modeled by the generator than $p_z$. Therefore, let’s create a new variable, $y = G(z)$, and use this substitution to rewrite the value function:&lt;/p&gt;\[\begin{align} V(G, D) &amp;amp;= \mathbb{E}_{x \sim p_{data}}[\log(D(x))] + \mathbb{E}_{y \sim p_g}[\log(1 - D(y))] \\ &amp;amp;= \int_{x \in \chi} p_{data}(x) \log(D(x)) + p_g(x) \log(1 - D(x)) \, dx \end{align} \tag{11}\]&lt;p&gt;The goal of the discriminator is to maximize this value function. Through a partial derivative of $V(G, D)$ with respect to $D(x)$, we see that the optimal discriminator, denoted as $D^*(x)$, occurs when&lt;/p&gt;\[\frac{p_{data}(x)}{D(x)} - \frac{p_g(x)}{1 - D(x)} = 0 \tag{12}\]&lt;p&gt;Rearranging (12), we get&lt;/p&gt;\[D^*(x) = \frac{p_{data}(x)}{p_{data}(x) + p_g(x)} \tag{12}\]&lt;p&gt;And this is the condition for the optimal discriminator! Note that the formula makes intuitive sense: if some sample $x$ is highly genuine, we would expect $p_{data}(x)$ to be close to one and $p_g(x)$ to be converge to zero, in which case the optimal discriminator would assign 1 to that sample. On the other hand, for a generated sample $x = G(z)$, we expect the optimal discriminator to assign a label of zero, since $p_{data}(G(z))$ should be close to zero.&lt;/p&gt;&lt;head rend="h2"&gt;Training the Generator&lt;/head&gt;&lt;p&gt;To train the generator, we assume the discriminator to be fixed and proceed with the analysis of the value function. Let’s first plug in the result we found above, namely (12), into the value function to see what turns out.&lt;/p&gt;\[\begin{align} V(G, D^*) &amp;amp;= \mathbb{E}_{x \sim p_{data}}[\log(D^*(x))] + \mathbb{E}_{x \sim p_g}[\log(1 - D^*(x))] \\ &amp;amp;= \mathbb{E}_{x \sim p_{data}} \left[ \log \frac{p_{data}(x)}{p_{data}(x) + p_g(x)} \right] + \mathbb{E}_{x \sim p_g} \left[ \log \frac{p_g(x)}{p_{data}(x) + p_g(x)} \right] \end{align} \tag{13}\]&lt;p&gt;To proceed from here, we need a little bit of inspiration. Little clever tricks like these are always a joy to look at.&lt;/p&gt;\[\begin{align} V(G, D^*) &amp;amp;= \mathbb{E}_{x \sim p_{data}} \left[ \log \frac{p_{data}(x)}{p_{data}(x) + p_g(x)} \right] + \mathbb{E}_{x \sim p_g} \left[ \log \frac{p_g(x)}{p_{data}(x) + p_g(x)} \right] \\ &amp;amp;= - \log 4 + \mathbb{E}_{x \sim p_{data}} \left[ \log p_{data}(x) - \log \frac{p_{data}(x) + p_g(x))}{2} \right] \\ &amp;amp; \quad+ \mathbb{E}_{x \sim p_g} \left[ \log p_g(x) - \log\frac{p_{data}(x) + p_g(x))}{2} \right] \end{align} \tag{14}\]&lt;p&gt;If you are confused, don’t worry, you aren’t the only one. Basically, what is happening is that we are exploiting the properties of logarithms to pull out a $- \log4$ that previously did not exist. In pulling out this number, we inevitably apply changes to the terms in the expectation, specifically by dividing the denominator by two.&lt;/p&gt;&lt;p&gt;Why was this necessary? The magic here is that we can now interpret the expectations as Kullback-Leibler divergence:&lt;/p&gt;\[V(G, D^*) = - \log 4 + D_{KL}\left(p_{data} \parallel \frac{p_{data} + p_g}{2} \right) + D_{KL}\left(p_g \parallel \frac{p_g + p_g}{2} \right) \tag{15}\]&lt;p&gt;And it is here that we reencounter the Jensen-Shannon divergence, which is defined as&lt;/p&gt;\[J(P,Q) = \frac{1}{2} \left( D(P \parallel R) + D(Q \parallel R) \right) \tag{16}\]&lt;p&gt;where $R = \frac12(P + Q)$. This means that the expression in (15) can be expressed as a JS divergence:&lt;/p&gt;\[V(G, D^*) = - \log 4 + 2 \cdot D_{JS}(p_{data} \parallel p_g) \tag{15}\]&lt;p&gt;The conclusion of this analysis is simple: the goal of training the generator, which is to minimize the value function $V(G, D)$, we want the JS divergence between the distribution of the data and the distribution of generated examples to be as small as possible. This conclusion certainly aligns with our intuition: we want the generator to be able to learn the underlying distribution of the data from sampled training examples. In other words, $p_g$ and $p_{data}$ should be as close to each other as possible. The optimal generator $G$ is thus one that which is able to mimic $p_{data}$ to model a compelling model distribution $p_g$.&lt;/p&gt;&lt;head rend="h1"&gt;Conclusion&lt;/head&gt;&lt;p&gt;In this post, we took a brief tour of the math behind general adversarial networks. Since the publication of Goodfellow’s work, more GAN models have been introduced and studied by different scholars, such as the Wasserstein GAN or CycleGAN to name just a few. The underlying mathematics for these models are obviously going to be different from what we have seen today, but this is a good starting point nonetheless.&lt;/p&gt;&lt;p&gt;I hope you enjoyed reading this post. In the next post, I plan to explore the concept of Fisher information and the Fisher matrix. It is going to be another math-heavy ride with gradients and Hessians, so keep you belts fastened!&lt;/p&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45050958</guid></item><item><title>Charting Form Ds to roughly see the state of venture capital “fund” raising</title><link>https://tj401.com/blog/formd/index.html</link><description>&lt;doc fingerprint="2e150b516f211e86"&gt;
  &lt;main&gt;
    &lt;p&gt;Figure 1**&lt;/p&gt;
    &lt;p&gt;Above is a graph that displays the amount of Form Ds filed, where the entity (read: company/firm) name contains the phrases "fund I", "fund II", "fund III", and "fund IV". The x-axis is not the prettiest, but it is broken down by quarter. You can see that the line for "fund I" sees by far the greatest peak around quarter 3 of 2022, with a steep drop off immediately after. The other lines have a similar, but less pronounced trend.&lt;/p&gt;
    &lt;p&gt;So, what is the significance of this? Companies and firms file Form Ds in compliance with Regulation D, which requires disclosure when raising funds under specific circumstances. I won't go into the details here, but the TLDR is that it isn't always required, but it's not uncommon either. Another piece of context is that venture capital firms (among other financial investment groups) label their individual funds, often by appending Fund [&amp;lt;fund roman numeral&amp;gt;] to describe where the fund falls in their sequence of funds. Here is a search query on the SEC filings database. You can see how the naming convention works. Each fund often constitutes its own entity. My hypothesis here is that, by charting the amount of Form Ds filed with "fund [#]" in the name, we can roughly see the state of venture capital “fund” raising.&lt;/p&gt;
    &lt;p&gt;My Takeaways&lt;/p&gt;
    &lt;p&gt;1. From this graph we can roughly see the ratio of venture firms that make it to a given fund cycle. That's a little hard to claim as the funds get higher in number, because once firms get large enough, they often stop creating sequential funds, instead raising in parallel and creating funds targeting specific industries/products etc. If you are planning to start a venture firm though, you may gain a bit of insight into your odds of longevity.&lt;/p&gt;
    &lt;p&gt;2. Venture funding is about to drop off BIG time.&lt;/p&gt;
    &lt;p&gt;During the early 2020s, everyone and their mom raised a VC fund. This is due to several factors&lt;/p&gt;
    &lt;p&gt;Figure 2&lt;/p&gt;
    &lt;p&gt;Note that I estimated these values by looking at similarities matching entities listed on the Forms that were also associated with Angellist/Sydecar/other fund backend providers.&lt;/p&gt;
    &lt;p&gt;These groups likely also contribute to the fluffing of the venture economy by increasing access to investments in startups*.&lt;/p&gt;
    &lt;p&gt;As interest rates increased, and things settled down, the amount of venture firms raising new funds decrease, as evidenced by the decrease in Form Ds with “fund [#]” in the name after Q3 2022 shown in figure 2.&lt;/p&gt;
    &lt;p&gt;Why we are going to see the effects of the bubble now&lt;/p&gt;
    &lt;p&gt;Making the assumptions that a) most venture funds target a life span of ~10 years and b) the capital deployment stage of funds lasts 2-4 years (again, roughly), we are just passing the moment of peak fund availability.&lt;/p&gt;
    &lt;p&gt;This has all coincided nicely with an immense increase in expectations put on startups focused on AI solutions. Investor interest in wrapper/agent/AI lab companies has seemed insatiable over the past 18 months, in alignment with the end of the funding deployment stage for funds that raised at the peak. This has led to more startups raising rounds at higher valuations (see another keyword search based graph below).&lt;/p&gt;
    &lt;p&gt;My predictions, based on the above data, and my anecdotal experience is that the amount of venture funding available is about to decrease. This will lead to lower valuations as the supply of funds decreases, inducing relative scarcity. As a result many companies will be left “swimming naked as that tide goes out”. This along with other issues such as (very) newly decreasing expectations of the AI vertical as a whole could lead to a sizable contraction. The decrease in available funding will also put more pressure on companies to actually ** make money **. Unless compute becomes much more cost effective in the immediate future, foundational model providers will be required to raise their prices to supplement equity based funding for compute cost, likely causing wrappers and agent companies to do the same. Some users will be priced out, and likely, many companies will no longer be viable.&lt;/p&gt;
    &lt;p&gt;All this to say: A future contraction may not be the exclusive result of changing sentiment in the AI industry. Sure that's part of it, but the availability of VC funds has been destined to decrease since firm fundraising peaked in 2022.&lt;/p&gt;
    &lt;p&gt;Figure 3&lt;/p&gt;
    &lt;p&gt;The offering amount represents the sum of all “total offering amounts” listed on all Form Ds containing “ ai” or “.ai” in the entity names for a given quarter. Note: 2025 sees a dip because only quarters 1 and 2 are accounted for.&lt;/p&gt;
    &lt;p&gt;TJ Jefferson&lt;/p&gt;
    &lt;p&gt;*As a sidenote I do think these services offer ways to anonymize funding sources, and allow potentially less savvy investors (God forbid, unaccredited) to be duped into investing at insanely high valuations.&lt;/p&gt;
    &lt;p&gt;**This is an updated graph from an the original where some values were double counted. This issue did not change any aspect of the argument laid out in this essay, and the depicted trends are nearly identical. Please email me if you have any questions.&lt;/p&gt;
    &lt;p&gt;Figure 4&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45051034</guid></item><item><title>Prosper AI (YC S23) Is Hiring Founding Account Executives (NYC)</title><link>https://jobs.ashbyhq.com/prosper-ai/29684590-4cec-4af2-bb69-eb5c6d595fb8</link><description>&lt;doc fingerprint="e10fcdab2cdf53e4"&gt;
  &lt;main&gt;
    &lt;p&gt;You need to enable JavaScript to run this app.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45051096</guid></item><item><title>GPU Prefix Sums: A nearly complete collection</title><link>https://github.com/b0nes164/GPUPrefixSums</link><description>&lt;doc fingerprint="531d823dc7305afd"&gt;
  &lt;main&gt;
    &lt;p&gt;GPUPrefixSums aims to bring state-of-the-art GPU prefix sum techniques from CUDA and make them available in portable compute shaders. In addition to this, it contributes "Decoupled Fallback," a novel fallback technique for Chained Scan with Decoupled Lookback that should allow devices without forward thread progress guarantees to perform the scan without crashing. The D3D12 implementation includes an extensive survey of GPU prefix sums, ranging from the warp to the device level; all included algorithms utilize wave/warp/subgroup (referred to as "wave" hereon) level parallelism but are completely agnostic of wave size. As a measure of the quality of the code, GPUPrefixSums has also been implemented in CUDA and benchmarked against Nvidia's CUB library. Although GPUPrefixSums aims to be portable to any wave size supported by HLSL, [4, 128], due to hardware limitations, it has only been tested on wave sizes 4, 16, 32, and 64. You have been warned!&lt;/p&gt;
    &lt;p&gt;If you are interested in prefix sums for their use in radix sorting, check out GPUPrefixSum's sibling repository GPUSorting!&lt;/p&gt;
    &lt;p&gt;In Decoupled Fallback, a threadblock will spin for a set amount of cycles while waiting for the reduction of a preceding partition tile. If the maximum spin count is exceeded, the threadblock is free to perform a fallback operation. Multiple thread blocks are allowed to perform fallbacks on the same deadlocking tile, but through use of atomic compare and swap, only one thread block ends up broadcasting its reduction in device memory. Although this means potentially performing redundant calculations, the upside is that fallback performance is no longer limited by the latency of signal propagation between thread blocks.&lt;/p&gt;
    &lt;p&gt;As of writing this 9/22/2024, Decoupled Fallback shows promising results on Apple M GPU's. However the version included here are out of date, with the most up-to-date development occuring in Vello.&lt;/p&gt;
    &lt;p&gt;A prefix sum, also called a scan, is a running total of a sequence of numbers at the n-th element. If the prefix sum is inclusive the n-th element is included in that total, if it is exclusive, the n-th element is not included. The prefix sum is one of the most important algorithmic primitives in parallel computing, underpinning everything from sorting, to compression, to graph traversal.&lt;/p&gt;
    &lt;p&gt;Headless implementation in D3D12, includes:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Reduce then Scan&lt;/item&gt;
      &lt;item&gt;Chained Scan with Decoupled Lookback&lt;/item&gt;
      &lt;item&gt;Chained Scan with Decoupled Lookback Decoupled Fallback&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Requirements:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Visual Studio 2019 or greater&lt;/item&gt;
      &lt;item&gt;Windows SDK 10.0.20348.0 or greater&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The repository folder contains a Visual Studio 2019 project and solution file. Upon building the solution, NuGet will download and link the following external dependencies:&lt;/p&gt;
    &lt;p&gt;See the repository wiki for information on running tests.&lt;/p&gt;
    &lt;p&gt;GPUPrefixSumsCUDA includes:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Reduce then Scan&lt;/item&gt;
      &lt;item&gt;Chained Scan with Decoupled Lookback&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The purpose of this implementation is to benchmark the algorithms and demystify their implementation in the CUDA environment. It is not intended for production or use; instead, a proper implementation can be found in the CUB library.&lt;/p&gt;
    &lt;p&gt;Requirements:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Visual Studio 2019 or greater&lt;/item&gt;
      &lt;item&gt;Windows SDK 10.0.20348.0 or greater&lt;/item&gt;
      &lt;item&gt;CUDA Toolkit 12.3.2&lt;/item&gt;
      &lt;item&gt;Nvidia Graphics Card with Compute Capability 7.x or greater.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The repository folder contains a Visual Studio 2019 project and solution file; there are no external dependencies besides the CUDA toolkit. The use of sync primitives necessitates Compute Capability 7.x or greater. See the repository wiki for information on running tests.&lt;/p&gt;
    &lt;p&gt;Released as a Unity package includes:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Reduce then Scan&lt;/item&gt;
      &lt;item&gt;Chained Scan with Decoupled Lookback&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Requirements:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Unity 2021.3.35f1 or greater&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Within the Unity package manager, add a package from git URL and enter:&lt;/p&gt;
    &lt;p&gt;
      &lt;code&gt;https://github.com/b0nes164/GPUPrefixSums.git?path=/GPUPrefixSumsUnity&lt;/code&gt;
    &lt;/p&gt;
    &lt;p&gt;See the repository wiki for information on running tests.&lt;/p&gt;
    &lt;p&gt;Barebones implementation--no vectorization, no wave intrinsics--to be used as a testbed.&lt;/p&gt;
    &lt;p&gt;Requirements:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;wgpu 22.0&lt;/item&gt;
      &lt;item&gt;pollster 0.3&lt;/item&gt;
      &lt;item&gt;bytemuck 1.16.3&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Duane Merrill and Michael Garland. “Single-pass Parallel Prefix Scan with De-coupled Lookback”. In: 2016. url: https://research.nvidia.com/publication/2016-03_single-pass-parallel-prefix-scan-decoupled-look-back&lt;/p&gt;
    &lt;p&gt;Grimshaw, Andrew S. and Duane Merrill. “Parallel Scan for Stream Architectures.” (2012). url: https://libraopen.lib.virginia.edu/downloads/6t053g00z&lt;/p&gt;
    &lt;p&gt;Matt Pettineo. GPU Memory Pools in D3D12. Jul. 2022. url: https://therealmjp.github.io/posts/gpu-memory-pool/&lt;/p&gt;
    &lt;p&gt;Ralph Levien. Prefix sum on portable compute shaders. Nov. 2021. url: https://raphlinus.github.io/gpu/2021/11/17/prefix-sum-portable.html&lt;/p&gt;
    &lt;p&gt;Tyler Sorensen, Hugues Evrard, and Alastair F. Donaldson. “GPU Schedulers: How Fair Is Fair Enoughl”. In: 29th International Conference on Concurrency Theory (CONCUR 2018). Ed. by Sven Schewe and Lijun Zhang. Vol. 118. Leibniz International Proceedings in Informatics (LIPIcs). Dagstuhl, Germany: Schloss Dagstuhl–Leibniz-Zentrum fuer Informatik, 2018, 23:1–23:17. isbn: 978-3-95977-087-3. doi: 10.4230/LIPIcs.CONCUR.2018.23. url: http://drops.dagstuhl.de/opus/volltexte/2018/9561.&lt;/p&gt;
    &lt;p&gt;Vasily Volkov. “Understanding Latency Hiding on GPUs”. PhD thesis. EECS Department, University of California, Berkeley, Aug. 2016. url: http://www2.eecs.berkeley.edu/Pubs/TechRpts/2016/EECS-2016-143.html&lt;/p&gt;
    &lt;p&gt;Zhe Jia et al. Dissecting the NVidia Turing T4 GPU via Microbenchmarking. 2019. arXiv: 1903.07486. url: https://arxiv.org/abs/1903.07486&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45051542</guid></item><item><title>How to install TrueNAS on a Raspberry Pi</title><link>https://www.jeffgeerling.com/blog/2025/how-install-truenas-on-raspberry-pi</link><description>&lt;doc fingerprint="df4b8b5709869eec"&gt;
  &lt;main&gt;
    &lt;p&gt;Now that Joel0 in the TrueNAS community has created a fork of TrueNAS that runs on Arm, I thought I'd give it a spin—on a Raspberry Pi.&lt;/p&gt;
    &lt;p&gt;I currently run an Ampere Arm server in my rack with Linux and ZFS as my primary storage server, and a Raspberry Pi with four SATA SSDs and ZFS as backup replica in my studio. My configuration for these Arm NASes is up on GitHub.&lt;/p&gt;
    &lt;p&gt;I've been looking forward to TrueNAS support on Arm for years, though it seems the sentiment in that community was 'Arm servers aren't powerful enough to run serious storage servers'—despite myself and many others doing so for many years... but that's besides the point.&lt;/p&gt;
    &lt;head rend="h2"&gt;On a Raspberry Pi?&lt;/head&gt;
    &lt;p&gt;Yes, in fact.&lt;/p&gt;
    &lt;p&gt;I've found numerous times, running modern applications on slower hardware is an excellent way to expose little configuration flaws and misconceptions that lead to learning how to run the applications much better on more capable machines.&lt;/p&gt;
    &lt;p&gt;From my Pi Dramble to my Petabyte Pi Project, running apps intended for much more powerful hardware taught me a lot. So maybe running TrueNAS, which demands 8 GB of RAM and 16 GB of primary storage, would be a fun learning exercise.&lt;/p&gt;
    &lt;p&gt;I've done it on x86 servers, but that's boring. It's easy. I don't learn much when a project goes off without a hitch, and I'm not forced to look closer at some of the configuration quirks.&lt;/p&gt;
    &lt;p&gt;You can watch the video for a full demo, or read on below:&lt;/p&gt;
    &lt;head rend="h2"&gt;On a Raspberry Pi, there's no UEFI&lt;/head&gt;
    &lt;p&gt;One glaring problem with the Raspberry Pi is no official support for UEFI, a standard way to boot computers and interface operating systems to device firmware. Raspberry Pi only officially supports device-tree-based Linux booting, which is much less standard. That means you can't just throw any old Linux distribution on the Pi, you have to have ones tailored to the Pi. There are good OSes for the Pi, like Raspberry Pi OS, based on Debian. But it's not the same as grabbing Windows on Arm and installing it on my Ampere workstation.&lt;/p&gt;
    &lt;p&gt;To get past this restriction, we have to rely on a community project, forked from Windows on Raspberry Pi. Specifically, I'm using NumberOneGit's rpi5-uefi fork.&lt;/p&gt;
    &lt;p&gt;To get your Pi 5 to support UEFI (CM5 process may be slightly different):&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Update the EEPROM to the 2025-06-09 release (or later - check what version you're running in Pi OS with the command &lt;code&gt;rpi-eeprom-update&lt;/code&gt;): a. Typically, you can upgrade using Raspberry Pi Imager,&lt;code&gt;sudo apt full-upgrade -y&lt;/code&gt;, or&lt;code&gt;sudo rpi-eeprom-update -a&lt;/code&gt;. However, at the time of this writing, those methods will get you to the latest stable release (2025-05-08), so until then, use one of these methods: b. Manually update the bootloader with&lt;code&gt;usbboot&lt;/code&gt;from source. c. Switch to the beta bootloader release channel:&lt;code&gt;sudo nano /etc/default/rpi-eeprom-update&lt;/code&gt;, then change&lt;code&gt;latest&lt;/code&gt;to&lt;code&gt;beta&lt;/code&gt;, and run&lt;code&gt;sudo rpi-eeprom-update -a&lt;/code&gt;. d. Verify the bootloader version you're running with&lt;code&gt;rpi-eeprom-update&lt;/code&gt;after a reboot.&lt;/item&gt;
      &lt;item&gt;Download the latest .zip file release from rpi5-uefi Releases.&lt;/item&gt;
      &lt;item&gt;Take a microSD card that's already formatted for the Pi (I just pulled the Pi OS card out of my Pi 5 that I just used for the EEPROM update), and clear out the contents of the FAT32 'bootfs' volume. Copy all the contents of the .zip file you downloaded into that folder (including &lt;code&gt;RPI_EFI.fd&lt;/code&gt;).&lt;/item&gt;
      &lt;item&gt;Eject the microSD card, insert it into the Pi, and power it on with an HDMI display connected.&lt;/item&gt;
      &lt;item&gt;You should see a Raspberry Pi logo and the EDK2 bootloader screen appear. Unless you have NVMe or USB boot media installed, it will say "Press any key to enter the Boot Manager Menu."&lt;/item&gt;
      &lt;item&gt;Since I couldn't find the 'any' key, I pressed 'Enter', then I could navigate through a standard boot manager menu. In there you can configure SD card speeds, set the PCIe bus speed, etc.&lt;/item&gt;
      &lt;item&gt;After you've changed the settings to your liking (see some suggestions for Linux), save and reset.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;TrueNAS on a Pi 5&lt;/head&gt;
    &lt;p&gt;Now that the Pi is booting into UEFI mode, you can install TrueNAS. To do that:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Download a TrueNAS on Arm ISO from https://truenas-releases.jmay.us (I chose 25.04.2).&lt;/item&gt;
      &lt;item&gt;Use a tool like Etcher to write the ISO to a USB drive.&lt;/item&gt;
      &lt;item&gt;After Etcher finishes, eject the USB drive and insert it into the Pi (I used a USB 3 thumb drive, so I inserted it into one of the blue USB 3 ports on the Pi for maximum speed).&lt;/item&gt;
      &lt;item&gt;If it doesn't automatically boot to the TrueNAS installer, select the external USB drive in the UEFI boot manager and boot into the TrueNAS installer.&lt;/item&gt;
      &lt;item&gt;Follow the TrueNAS installer's prompts to install TrueNAS on any device other than the installer drive or the microSD card (I used a second USB flash drive plugged into the other USB 3 port). Wait for installation to complete.&lt;/item&gt;
      &lt;item&gt;When prompted, reboot and remove the USB drive.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;TrueNAS SCALE should boot up, and the first boot can take a while as many services need to generate files, configure services, and start them the first time.&lt;/p&gt;
    &lt;p&gt;In my case, on first boot, the &lt;code&gt;ix-etc&lt;/code&gt; service failed to start (it timed out), and its purpose is to &lt;code&gt;Generate TrueNAS /etc files&lt;/code&gt;. After booting, I chose to enter the Linux console, then ran &lt;code&gt;systemctl start ix-etc&lt;/code&gt;, and rebooted.&lt;/p&gt;
    &lt;p&gt;After a reboot, TrueNAS seemed to launch all its services without issue, including the web UI. I visited the IP address printed on the console, logged in as the admin user I set up during install, and was greeted with the TrueNAS dashboard:&lt;/p&gt;
    &lt;head rend="h2"&gt;Current Limitations&lt;/head&gt;
    &lt;p&gt;Right now, most of the limitations are around missing features in UEFI mode; since Raspberry Pi hasn't pushed RP1 support into the Linux kernel, and nobody's yet reverse-engineered RP1 interfaces, you can't use:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Fan header PWM support (no fan control)&lt;/item&gt;
      &lt;item&gt;CSI/DSI connections for displays/cameras&lt;/item&gt;
      &lt;item&gt;GPIO&lt;/item&gt;
      &lt;item&gt;Built-in Ethernet&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The Ethernet limitation is especially annoying, as you are forced to use an external USB Ethernet dongle, just like on most non-Qualcomm systems running Windows on Arm.&lt;/p&gt;
    &lt;p&gt;Andrea della Porta from SUSE is working on upstreaming RP1 support into Linux with some help from Raspberry Pi, but progress has been a bit slow.&lt;/p&gt;
    &lt;p&gt;What I've been wondering lately, more and more: why doesn't Raspberry Pi consider official UEFI support in the first place? With or without Microsoft's official blessing, being able to boot vanilla Windows 11 for Arm on the Pi would be neat. Not to mention, any regular Linux Arm distro (including TrueNAS SCALE) would boot too...&lt;/p&gt;
    &lt;head rend="h2"&gt;Next Steps&lt;/head&gt;
    &lt;p&gt;I recently received a new hardware project, the Homelabs Pi Storage server, which uses a custom CM5 SATA backplane and a 3D printable enclosure for a 6-bay NAS:&lt;/p&gt;
    &lt;p&gt;I got TrueNAS installed on a CM5 Lite (using the same process as above), but when I installed four SATA hard drives, they spun up, but were not recognized. Right now the Pi 5 UEFI support doesn't allow for more than one PCIe device, and the Homelabs Pi Storage server has a PCIe switch that branches off to 2.5 Gbps Ethernet and a 6-port SATA controller.&lt;/p&gt;
    &lt;p&gt;These devices all work perfectly out of the box on Raspberry Pi OS (and I was able to set up a ZFS array, getting 250 MB/s over the built-in 2.5G Ethernet—see below), but they aren't recognized currently when running under UEFI :(&lt;/p&gt;
    &lt;p&gt;I'm already running vanilla ZFS under Raspberry Pi OS on my other Raspberry Pi storage server, and that's running on four SSDs and no hard drives. It can sustain 200 MB/sec writes, and I presume TrueNAS would be able to do the same.&lt;/p&gt;
    &lt;p&gt;There are also NVMe-only boards, like the $50 GeeekPi N16 Quad-NVMe HAT, which provide a pretty small footprint all-flash server option. But again, since those boards use switch chips (because the Pi is limited to 1 PCIe lane), none of those drives would be accessible to TrueNAS as it stands today. Your best bet if you want to use TrueNAS instead of just managing ZFS on you own on a Pi would be to use a single-purpose HAT or SATA controller or HBA in IT mode, to connect disks directly to the Pi.&lt;/p&gt;
    &lt;p&gt;Because of the current UEFI limitations, I would still recommend running TrueNAS on higher-end Arm hardware (like Ampere servers). If you want to stick to an SBC, there's UEFI firmware for RK3588 platforms under active development. It may offer even more functionality for some boards, so check the compatibility list.&lt;/p&gt;
    &lt;p&gt;Or you could be boring and just install TrueNAS on x86, where it's fully supported ;)&lt;/p&gt;
    &lt;head rend="h2"&gt;Comments&lt;/head&gt;
    &lt;p&gt;It seems the patch series from Andrea dela Porta is already merged into 6.17 - I can't paste the lore link because of your antispam system, sorry.&lt;/p&gt;
    &lt;p&gt;[Edit: Link added here https://lore.kernel.org/all/[email protected]/]&lt;/p&gt;
    &lt;p&gt;Sorry about that; I had to set it to strict mode because otherwise I was getting at least a few hundred spam comments per day. It usually allows links, but maybe it scored the comment too high for other factors. I don't have much control besides 'strict' or not. Someday I'd like to run my own little spam filter, but last time I took a stab at it, it was still a bit too resource intensive to self-host.&lt;/p&gt;
    &lt;p&gt;Do you know if the pi will ever support UEFI, or truenas officially on pi?&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45052429</guid></item><item><title>Mosh Mobile Shell</title><link>https://mosh.org</link><description>&lt;doc fingerprint="f6d8dd1879200985"&gt;
  &lt;main&gt;&lt;p&gt;Remote terminal application that allows roaming, supports intermittent connectivity, and provides intelligent local echo and line editing of user keystrokes.&lt;/p&gt;&lt;p&gt;Mosh is a replacement for interactive SSH terminals. It's more robust and responsive, especially over Wi-Fi, cellular, and long-distance links.&lt;/p&gt;&lt;p&gt;Mosh is free software, available for GNU/Linux, BSD, macOS, Solaris, Android, Chrome, and iOS.&lt;/p&gt;&lt;p&gt;Mosh automatically roams as you move between Internet connections. Use Wi-Fi on the train, Ethernet in a hotel, and LTE on a beach: you'll stay logged in. Most network programs lose their connections after roaming, including SSH and Web apps like Gmail. Mosh is different.&lt;/p&gt;&lt;p&gt;With Mosh, you can put your laptop to sleep and wake it up later, keeping your connection intact. If your Internet connection drops, Mosh will warn you — but the connection resumes when network service comes back.&lt;/p&gt;&lt;p&gt;SSH waits for the server's reply before showing you your own typing. That can make for a lousy user interface. Mosh is different: it gives an instant response to typing, deleting, and line editing. It does this adaptively and works even in full-screen programs like emacs and vim. On a bad connection, outstanding predictions are underlined so you won't be misled.&lt;/p&gt;&lt;p&gt;You don't need to be the superuser to install or run Mosh. The client and server are executables run by an ordinary user and last only for the life of the connection.&lt;/p&gt;&lt;p&gt;Mosh doesn't listen on network ports or authenticate users. The mosh client logs in to the server via SSH, and users present the same credentials (e.g., password, public key) as before. Then Mosh runs the mosh-server remotely and connects to it over UDP.&lt;/p&gt;&lt;p&gt;Mosh is a command-line program, like ssh. You can use it inside xterm, gnome-terminal, urxvt, Terminal.app, iTerm, emacs, screen, or tmux. But mosh was designed from scratch and supports just one character set: UTF-8. It fixes Unicode bugs in other terminals and in SSH.&lt;/p&gt;&lt;p&gt;Unlike SSH, mosh's UDP-based protocol handles packet loss gracefully, and sets the frame rate based on network conditions. Mosh doesn't fill up network buffers, so Control-C always works to halt a runaway process.&lt;/p&gt;&lt;p&gt;The Mosh package should be installed on both the client and server. Please find your platform below for installation instructions.&lt;/p&gt;&lt;p&gt;This is a standalone OS X package that will work on any supported Macintosh. However, if you are using a package manager such as Homebrew or MacPorts, we suggest using it to get Mosh, for better compatibility and automatic updates.&lt;/p&gt;&lt;p&gt;There is no "native" mosh executable for Windows available at this time. The Chrome version of Mosh is the easiest way to use mosh on Windows.&lt;/p&gt;&lt;quote&gt;C:\&amp;gt; setup.exe -q mosh&lt;/quote&gt;&lt;p&gt;Mosh on Cygwin uses OpenSSH and is suitable for Windows users with advanced SSH configurations. &lt;lb/&gt; Mosh is not compatible with Cygwin's built-in Windows Console terminal emulation. You will need to run Mosh from a full-featured terminal program such as mintty, rxvt, PuTTY, or an X11 terminal emulator.&lt;/p&gt;&lt;quote&gt;$ sudo apt-get install mosh&lt;/quote&gt;&lt;p&gt;The ppa:keithw/mosh-dev PPA tracks the development version of Mosh.&lt;/p&gt;&lt;p&gt;Operating system logos are trademarks or registered trademarks and are displayed for identification only. The vendors shown aren't affiliated with and haven't endorsed Mosh.&lt;/p&gt;&lt;p&gt;Extract mosh-1.4.0.tar.gz (SHA-256 in signed release announcement), then&lt;/p&gt;&lt;quote&gt;$ cd mosh-1.4.0 $ ./configure $ make # make install&lt;/quote&gt;&lt;quote&gt;$ git clone https://github.com/mobile-shell/mosh $ cd mosh $ ./autogen.sh $ ./configure $ make # make install&lt;/quote&gt;&lt;code&gt;debian/control&lt;/code&gt; (in Git) includes an authoritative list of build dependencies.
          &lt;table&gt;&lt;row span="2"&gt;&lt;cell role="head"&gt;Name&lt;/cell&gt;&lt;cell role="head"&gt;Typical package&lt;/cell&gt;&lt;/row&gt;&lt;row span="2"&gt;&lt;cell&gt;Perl (5.14 or newer)&lt;/cell&gt;&lt;cell&gt;perl&lt;/cell&gt;&lt;/row&gt;&lt;row span="2"&gt;&lt;cell&gt;Protocol Buffers&lt;/cell&gt;&lt;cell&gt;protobuf-compiler, libprotobuf-dev&lt;/cell&gt;&lt;/row&gt;&lt;row span="2"&gt;&lt;cell&gt;ncurses&lt;/cell&gt;&lt;cell&gt;libncurses5-dev&lt;/cell&gt;&lt;/row&gt;&lt;row span="2"&gt;&lt;cell&gt;zlib&lt;/cell&gt;&lt;cell&gt;zlib1g-dev&lt;/cell&gt;&lt;/row&gt;&lt;row span="2"&gt;&lt;cell&gt;utempter (optional)&lt;/cell&gt;&lt;cell&gt;libutempter-dev&lt;/cell&gt;&lt;/row&gt;&lt;row&gt;&lt;cell&gt;OpenSSL&lt;/cell&gt;&lt;cell&gt;libssl-dev&lt;/cell&gt;&lt;/row&gt;&lt;/table&gt;&lt;code&gt;pkg-config&lt;/code&gt; is a build-only dependency on most systems.
        &lt;p&gt; Note that &lt;code&gt;mosh-client&lt;/code&gt; receives an AES session key as an environment
              variable.  If you are porting Mosh to a new operating system, please make sure that a
              running process's environment variables are not readable by other users.  We have
              confirmed that this is the case on GNU/Linux, OS X, and FreeBSD.
            &lt;/p&gt;&lt;quote&gt;$ mosh chewbacca.norad.mil&lt;/quote&gt;&lt;p&gt;Mosh will log the user in via SSH, then start a connection on a UDP port between 60000 and 61000.&lt;/p&gt;&lt;quote&gt;$ mosh potus@ackbar.bls.gov&lt;/quote&gt;&lt;quote&gt;$ mosh --server=/tmp/mosh-server r2d2&lt;/quote&gt;&lt;p&gt;The user can specify an alternate path for the &lt;code&gt;mosh-server&lt;/code&gt; on the remote host. The server binary can even
        be installed in the user's home directory.&lt;/p&gt;&lt;quote&gt;$ mosh -p 1234 darth&lt;/quote&gt;&lt;p&gt;Useful when the server is behind a port-forwarder or NAT.&lt;/p&gt;&lt;quote&gt;$ mosh --ssh="ssh -p 2222" figrindan&lt;/quote&gt;&lt;quote&gt;$ mosh --ssh="~/bin/ssh -i ./identity" fett&lt;/quote&gt;&lt;quote&gt;$ mosh --predict=never niennunb&lt;/quote&gt;&lt;p&gt;The &lt;code&gt;-n&lt;/code&gt; switch is a synonym. By contrast,
      passing &lt;code&gt;--predict=always&lt;/code&gt; or &lt;code&gt;-a&lt;/code&gt;
      will enable instant local echo even on low-delay
      links.&lt;/p&gt;&lt;quote&gt;$ mosh pello -- screen -dr&lt;/quote&gt;&lt;p&gt;This reattaches to a long-running screen session.&lt;/p&gt;&lt;p&gt;Normally, logout or exit on the remote host will close the session. Mosh accepts the escape sequence &lt;code&gt;Ctrl-^
    .&lt;/code&gt;  (typically typed with Control-Shift-6, then a
    period) to end the connection forcibly. To send a
    literal Ctrl-^, type &lt;code&gt;Ctrl-^ ^&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;More details can be found in the &lt;code&gt;mosh(1)&lt;/code&gt;, &lt;code&gt;mosh-client(1)&lt;/code&gt;,
  and &lt;code&gt;mosh-server(1)&lt;/code&gt; manual pages.&lt;/p&gt;&lt;p&gt;The Mosh research paper describes the design and evaluation of Mosh in more detail than you may want. The paper was presented at the 2012 USENIX Annual Technical Conference, held June 13–15, 2012, in sunny Boston, Mass.&lt;/p&gt;&lt;p&gt;In addition, the Mosh: A State-of-the-Art Good Old-Fashioned Mobile Shell essay gives further information about the design principles behind Mosh, including the "prophylactic retransmission" technique. The essay was published in USENIX ;login: magazine, August 2012.&lt;/p&gt;&lt;p&gt;(Why you should trust Mosh with your remote terminal needs: we worry about details so obscure, even USENIX reviewers don't want to hear about them.)&lt;/p&gt;&lt;p&gt;Remote-shell protocols traditionally work by conveying a byte-stream from the server to the client, to be interpreted by the client's terminal. (This includes TELNET, RLOGIN, and SSH.) Mosh works differently and at a different layer. With Mosh, the server and client both maintain a snapshot of the current screen state. The problem becomes one of state-synchronization: getting the client to the most recent server-side screen as efficiently as possible.&lt;/p&gt;&lt;p&gt;This is accomplished using a new protocol called the State Synchronization Protocol, for which Mosh is the first application. SSP runs over UDP, synchronizing the state of any object from one host to another. Datagrams are encrypted and authenticated using AES-128 in OCB3 mode. While SSP takes care of the networking protocol, it is the implementation of the object being synchronized that defines the ultimate semantics of the protocol.&lt;/p&gt;&lt;p&gt;Roaming with SSP becomes easy: the client sends datagrams to the server with increasing sequence numbers, including a "heartbeat" at least once every three seconds. Every time the server receives an authentic packet from the client with a sequence number higher than any it has previously received, the IP source address of that packet becomes the server's new target for its outgoing packets. By doing roaming “statelessly” in this manner, roaming works in and out of NATs, even ones that may themselves be roaming. Roaming works even when the client is not aware that its Internet-visible IP address has changed. The heartbeats allow Mosh to inform the user when it hasn't heard from the server in a while (unlike SSH, where users may be unaware of a dropped connection until they try to type).&lt;/p&gt;&lt;p&gt;Mosh runs two copies of SSP, one in each direction of the connection. The connection from client to server synchronizes an object that represents the keys typed by the user, and with TCP-like semantics. The connection from server to client synchronizes an object that represent the current screen state, and the goal is always to convey the client to the most recent server-side state, possibly skipping intermediate frames.&lt;/p&gt;&lt;p&gt;Because SSP works at the object layer and can control the rate of synchronization (in other words, the frame rate), it does not need to send every byte it receives from the application. That means Mosh can regulate the frames so as not to fill up network buffers, retaining the responsiveness of the connection and making sure Control-C always works quickly. Protocols that must send every byte can't do this.&lt;/p&gt;&lt;p&gt;One benefit of working at the terminal layer was the opportunity to build a clean UTF-8 terminal emulator from scratch. Mosh fixes several Unicode bugs in existing terminals and in SSH, and was designed as a fresh start to try to be robust and correct even for pathological inputs.&lt;/p&gt;&lt;p&gt;Only Mosh and the OS X Terminal correctly handle a Unicode combining character in the first column.&lt;/p&gt;&lt;p&gt;Only Mosh will never get stuck in hieroglyphs when a nasty program writes to the terminal. (See Markus Kuhn's discussion of the relationship between ISO 2022 and UTF-8.)&lt;/p&gt;&lt;p&gt;Only Mosh and GNOME Terminal have a defensible rendering when Unicode mixes with an ECMA-48/ANSI escape sequence. The OS X Terminal unwisely tries to normalize its input before the vt500 state machine, causing it to misinterpret and become unusable after receiving the following input!* (This also means the OS X Terminal's interpretation of the incoming octet stream varies depending on how the incoming octets are split across TCP segments, because the normalization only looks ahead to available bytes.)&lt;/p&gt;&lt;p&gt;* We earlier wrote that this misbehaving sequence "crashes" the OS X Terminal.app. This was mistaken—instead, Terminal.app interprets the escape sequence as shutting off keyboard input, and because of an unrelated bug in Terminal.app, it is not possible for the user to restore keyboard input by resetting the terminal from the menu.&lt;/p&gt;&lt;p&gt;In the POSIX framework, the kernel needs to know whether the user is typing in an 8-bit character set or in UTF-8, because in canonical mode (i.e. "cooked" mode), the kernel needs to be able to delete a typed multibyte character sequence from an input buffer. On OS X and Linux, this is done with the "IUTF8" termios flag.) (See diagnostic explaining the need for this flag.)&lt;/p&gt;&lt;p&gt;Mosh sets the IUTF8 flag when possible and stubbornly refuses to start up unless the user has a UTF-8-clean environment. SSH does not set the IUTF8 flag, which can lead to garbage in input buffers.&lt;/p&gt;&lt;p&gt;The other major benefit of working at the terminal-emulation layer is that the Mosh client is free to scribble on the local screen without lasting consequence. We use this to implement intelligent local echo. The client runs a predictive model in the background of the server's behavior, hypothesizing that each keystroke will be echoed at the cursor location and that the backspace and left- and right-arrow keys will have their traditional effect. But only when a prediction is confirmed by the server are these effects actually shown to the user. (In addition, by default predictions are only displayed on high-delay connections or during a network “glitch.”) Predictions are done in epochs: when the user does something that might alter the echo behavior — like hit ESC or carriage return or an up- or down-arrow — Mosh goes back into making background predictions until a prediction from the new batch can be confirmed as correct.&lt;/p&gt;&lt;p&gt;Thus, unlike previous attempts at local echo with TELNET and RLOGIN, Mosh's local echo can be used everywhere, even in full-screen programs like emacs and vi.&lt;/p&gt;&lt;p&gt;We evaluated Mosh using traces contributed by six users, covering about 40 hours of real-world usage and including 9,986 total keystrokes. These traces included the timing and contents of all writes from the user to the host and vice versa. The users were asked to contribute "typical, real-world sessions." In practice, the traces include use of popular programs such as the bash shell and zsh shells, the alpine and mutt e-mail clients, the emacs and vim text editors, the irssi and barnowl chat clients, the links text-mode Web browser, and several programs unique to each user.&lt;/p&gt;&lt;p&gt;To evaluate typical usage of a "mobile" terminal, we replayed the traces over an otherwise unloaded Sprint commercial EV-DO (3G) cellular Internet connection in Cambridge, Mass. A client-side process played the user portion of the traces, and a server-side process waited for the expected user input and then replied (in time) with the prerecorded server output. We speeded up long periods with no activity. The average round-trip time on the link was about half a second.&lt;/p&gt;&lt;p&gt;We replayed the traces over two different transports, SSH and Mosh, and recorded the user interface response latency to each simulated user keystroke. The Mosh predictive algorithm was frozen prior to collecting the traces and was not adjusted in response to their contents or results.&lt;/p&gt;&lt;p&gt;Mosh reduced the median keystroke response time from 503 ms to nearly instant (because more than 70% of the keystrokes could be immediately displayed), and reduced the mean keystroke response time from 515 ms to 173 ms. Qualitatively, Mosh makes remote servers "feel" more like the local machine!&lt;/p&gt;&lt;p&gt;Mosh was written by Keith Winstein, along with Anders Kaseorg, Quentin Smith, Richard Tibbetts, Keegan McAllister, and John Hood.&lt;/p&gt;&lt;p&gt;Practical latency on the Internet is on the increase, with the rise of bufferbloat and sophisticated wireless links that optimize for throughput over delay. And roaming is more common than ever, now that laptops and handheld devices have largely displaced desktops. SSH is great, but frustrating to use when you want to change IP addresses or have a long-delay link or a dodgy connection.&lt;/p&gt;&lt;p&gt;Moreover, TELNET had some good things going for it — a local-echo mode and a well-defined network virtual terminal. Even today, SSH doesn't properly support UTF-8 end-to-end on a POSIX system.&lt;/p&gt;&lt;p&gt;We think so. The design principles that Mosh stands for are conservative: warning the user if the state being displayed is out of date, serializing and checkpointing all transactions so that if there are no warnings, the user knows every prior transaction has succeeded, and handling expected events (like roaming from one WiFi network to another) gracefully.&lt;/p&gt;&lt;p&gt;Those don't seem too controversial, but fancy apps like Gmail-in-Chromium or on Android still behave atrociously on dodgy connections or after switching IP addresses. (Have you ever had Gmail leave an e-mail message in "Sending..." for ten hours while merrily retrieving new mail and not indicating any kind of error? Us too.) We think there may be considerable room for improvement in many network user interfaces from the application of these values.&lt;/p&gt;&lt;p&gt;To diagnose the problem, run &lt;code&gt;locale&lt;/code&gt; on the local
        terminal, and &lt;code&gt;ssh remotehost locale&lt;/code&gt;. To use Mosh,
        both sides of the connection will need to show a UTF-8 locale, like
        &lt;code&gt;LC_CTYPE="en_US.UTF-8"&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;On many systems, SSH will transfer the locale-related environment variables, which are then inherited by &lt;code&gt;mosh-server&lt;/code&gt;.  If this mechanism fails, Mosh (as of
        version 1.2) will pass the variables itself.  If neither
        mechanism is successful, you can do something like&lt;/p&gt;&lt;quote&gt;mosh remotehost --server="LANG=en_US.UTF-8 mosh-server"&lt;/quote&gt;&lt;p&gt;If &lt;code&gt;en_US.UTF-8&lt;/code&gt; does not exist on the remote server,
        you can replace this with a UTF-8 locale that does exist.  You
        may also need to set LANG locally for the benefit of
        &lt;code&gt;mosh-client&lt;/code&gt;.  It is possible that the local and
        remote machines will need different locale names. See also this GitHub
        ticket.&lt;/p&gt;&lt;p&gt;This means that &lt;code&gt;mosh&lt;/code&gt; was able to start
    &lt;code&gt;mosh-server&lt;/code&gt; successfully on the remote machine, but the client is
    not able to communicate with the server.  This generally means that
    some type of firewall is
    blocking the UDP packets between the client and the server.  If you
    had to forward TCP port 22 on a NAT for SSH, then you will have to
    forward UDP ports as well.  Mosh will use the first available
    UDP port, starting at 60001 and stopping at 60999.  If you are only
    going to have a small handful of concurrent sessions on a server, then you can
    forward a smaller range of ports (e.g., 60000 to 60010).
    &lt;/p&gt;&lt;p&gt;Tools like netstat, netcat, socat, and tcpdump can be useful for debugging networking and firewall problems.&lt;/p&gt;&lt;p&gt;This problem can also be the result of a bug in glibc 2.22 that affects programs that link with protobuf and utempter and use aggressive compiler hardening flags. (glibc bugtracker entry, as well as Mosh bugtracker entry.) The problem causes mosh-server to segfault immediately on startup. We believe we have worked around this problem in Mosh 1.2.6, but please report a bug if you find otherwise.&lt;/p&gt;&lt;p&gt;We're really not UTF-8 zealots. But it's a lot easier to correctly implement one terminal emulator than to try to do the right thing in a variety of difficult edge cases. (This is what GNU screen tries to do, and in our experience it leads to some very tricky-to-debug situations.) So mosh just won't start up until the user has everything configured for a UTF-8-clean pathway. It may be annoying, but it also probably reduces frustration down the road. (Unfortunately an 8-bit vt220 and a UTF-8 vt220 are different and incompatible terminal types; the UTF-8 goes in underneath the vt220 state machine.)&lt;/p&gt;&lt;p&gt;As of Mosh 1.2, you can pass arguments to &lt;code&gt;ssh&lt;/code&gt; like so:&lt;/p&gt;&lt;quote&gt;mosh remotehost --ssh="ssh -p 2222"&lt;/quote&gt;&lt;p&gt;Or configure a host alias in &lt;code&gt;~/.ssh/config&lt;/code&gt; with a
        &lt;code&gt;Port&lt;/code&gt; directive.  Mosh will respect that too.&lt;/p&gt;&lt;p&gt;Please make sure that mosh is installed on the client, and mosh (or at least mosh-server) is installed on the server you are trying to connect to. Also, the server is expected to be available on your server's default login &lt;code&gt;PATH&lt;/code&gt;, which is not
  usually true on OS X and BSD servers, or if you install mosh-server
  in your home directory.  In these cases please see the "Server
  binary outside path" instructions in the Usage section,
  above.&lt;/p&gt;&lt;p&gt;In some configurations, SSH canonicalizes the hostname before passing it to the Kerberos GSSAPI plugin. This breaks for Mosh, because the initial forward DNS lookup is done by the Mosh wrapper script. To work around this, invoke Mosh as&lt;/p&gt;&lt;quote&gt;mosh remotehost --ssh="ssh -o GSSAPITrustDns=no"&lt;/quote&gt;&lt;p&gt;This will often fail on a round-robin DNS setup. In that case it is probably best to pick a specific host from the round-robin pool.&lt;/p&gt;&lt;p&gt;Mosh synchronizes only the visible state of the terminal. We are tracking this issue; see this issue and the others which are linked from there. For now, the workaround is to use screen or tmux on the remote side.&lt;/p&gt;&lt;p&gt;Make sure you are running mosh in a terminal that advertises itself as 256-color capable. (This generally means TERM will be xterm-256color or screen-256color-bce.)&lt;/p&gt;&lt;p&gt;On keyboards with the United States layout, this can be typed as Ctrl-Shift-6, or often as Ctrl-6 (this depends on your OS and terminal emulator). On non-US keyboards, it is often hard to find the right key, and sometimes it's not available at all. If your keyboard has a dead key with an accent-circumflex, this is not likely to be the right key. Ctrl-6 sometimes works, though. If you are unable to type this character, you will need to set the &lt;code&gt;MOSH_ESCAPE_KEY&lt;/code&gt; variable; see the Mosh man page for
  details.&lt;/p&gt;&lt;p&gt;Please see the entries for &lt;code&gt;MOSH_SERVER_NETWORK_TMOUT&lt;/code&gt;
      and &lt;code&gt;MOSH_SERVER_SIGNAL_TMOUT&lt;/code&gt; in the mosh-server(1) man page.&lt;/p&gt;&lt;p&gt;Mosh 1.0 was released in March 2012. As of the release of Mosh 1.4.0 in October 2022, as far as the developers are aware:&lt;/p&gt;&lt;p&gt;We think that Mosh's conservative design means that its attack surface compares favorably with more-complicated systems like OpenSSL and OpenSSH. Mosh's track record has so far borne this out. Ultimately, however, only time will tell when the first serious security vulnerability is discovered in Mosh—either because it was there all along or because it was added inadvertently in development. OpenSSH and OpenSSL have had more vulnerabilities, but they have also been released longer and are more prevalent.&lt;/p&gt;&lt;p&gt;In one concrete respect, the Mosh protocol is more secure than SSH's: SSH relies on unauthenticated TCP to carry the contents of the secure stream. That means that an attacker can end an SSH connection with a single phony "RST" segment. By contrast, Mosh applies its security at a different layer (authenticating every datagram), so an attacker cannot end a Mosh session unless the attacker can continuously prevent packets from reaching the other side. A transient attacker can cause only a transient user-visible outage; once the attacker goes away, Mosh will resume the session.&lt;/p&gt;&lt;p&gt;However, in typical usage, Mosh relies on SSH to exchange keys at the beginning of a session, so Mosh will inherit the weaknesses of SSH—at least insofar as they affect the brief SSH session that is used to set up a long-running Mosh session.&lt;/p&gt;&lt;p&gt;Not that we know of—Mosh uses OCB3. The authors of the paper write that the attack is not applicable to OCB3.&lt;/p&gt;&lt;p&gt;Yes, it works great, but please remember to open up UDP ports 60000–61000 on the EC2 firewall.&lt;/p&gt;&lt;p&gt;After you run &lt;code&gt;mosh user@server&lt;/code&gt;, if successful you will be dropped into your login
      shell on the remote machine.

      If you want
      to check that mosh is being used instead of ssh, try typing &lt;code&gt;Ctrl-^ Ctrl-Z&lt;/code&gt;
      to suspend the session (with mosh 1.2.4 or later on the client). Running &lt;code&gt;fg&lt;/code&gt; will then return.
      &lt;/p&gt;&lt;p&gt;The &lt;code&gt;mosh&lt;/code&gt; command is a wrapper script that is designed to be the primary way that
      you use mosh.  In most cases, you can simply just replace "ssh" with "mosh" in your command line.
      Behind the scenes, the &lt;code&gt;mosh&lt;/code&gt; wrapper script will SSH to the server, start up
      &lt;code&gt;mosh-server&lt;/code&gt;, and then close the SSH connection.  Then it will start up the
      &lt;code&gt;mosh-client&lt;/code&gt; executable on the client, passing it the necessary information for
      it to connect to the newly spawned &lt;code&gt;mosh-server&lt;/code&gt; instance.
      &lt;/p&gt;&lt;p&gt;In normal usage, &lt;code&gt;mosh-client&lt;/code&gt; and
      &lt;code&gt;mosh-server&lt;/code&gt; don't need to be run directly.
      &lt;/p&gt;&lt;p&gt;If the &lt;code&gt;mosh&lt;/code&gt; wrapper script isn't working for you, you can try running
    the &lt;code&gt;mosh-client&lt;/code&gt; and &lt;code&gt;mosh-server&lt;/code&gt; programs separately to
    form a connection. This can be a useful debugging technique.&lt;/p&gt;&lt;p&gt;1. Log in to the remote host, and run &lt;code&gt;mosh-server&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;It will give output like:&lt;/p&gt;&lt;quote&gt;$ mosh-server MOSH CONNECT 60004 4NeCCgvZFe2RnPgrcU1PQw mosh-server (mosh 1.1.3) Copyright 2012 Keith Winstein &amp;lt;[email protected]&amp;gt; License GPLv3+: GNU GPL version 3 or later &amp;lt;http://gnu.org/licenses/gpl.html&amp;gt;. This is free software: you are free to change and redistribute it. There is NO WARRANTY, to the extent permitted by law. [mosh-server detached, pid = 30261]&lt;/quote&gt;&lt;p&gt;2. On the local host, run:&lt;/p&gt;&lt;quote&gt;$ MOSH_KEY=key mosh-client remote-IP remote-PORT&lt;/quote&gt;&lt;p&gt;where "key" is the 22-byte string printed by mosh-server (in this example, "4NeCCgvZFe2RnPgrcU1PQw"), "remote-PORT" is the port number given by the server (60004 in this case), and "remote-IP" is the IP address of the server. You can look up the server's IP address with "host remotehost".&lt;/p&gt;&lt;p&gt;3. If all goes well, you should have a working Mosh connection. Information about where the process fails can help us debug why Mosh isn't working for you.&lt;/p&gt;&lt;p&gt;This bug is fixed in Mosh 1.2. Thanks to Ed Schouten and Peter Jeremy for tracking this down.&lt;/p&gt;&lt;p&gt;We welcome your contribution! Please join us in &lt;code&gt;#mosh&lt;/code&gt; channel on Libera Chat IRC, visit us on GitHub,
  or email &lt;code&gt;[email protected]&lt;/code&gt;.  To contribute to our code base, please fork the repository on GitHub and open a pull request there.&lt;/p&gt;&lt;p&gt;We're very grateful for assistance and support from:&lt;/p&gt;&lt;p&gt;&lt;code&gt;[email protected]&lt;/code&gt;&lt;lb/&gt; Mosh development and discussion. Sign up or view archives at https://mailman.mit.edu/mailman/listinfo/mosh-devel.&lt;/p&gt;&lt;p&gt;&lt;code&gt;[email protected]&lt;/code&gt;&lt;lb/&gt; Mosh user discussion and site best practices. Sign up or view archives at https://mailman.mit.edu/mailman/listinfo/mosh-users.&lt;/p&gt;&lt;p&gt;&lt;code&gt;#mosh&lt;/code&gt; channel on Libera IRC&lt;lb/&gt; You can connect with a Web client, try an irc:// URL, or manually configure your client for &lt;code&gt;irc.libera.chat&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;At the recommendation of the security community, confidential security-related matters may be sent to: &lt;code&gt;[email protected]&lt;/code&gt;&lt;/p&gt;&lt;quote&gt;pub rsa4096 2012-02-05 [SC] [expires: 2025-02-27] B1A4 7069 121F 6642 BB3D 7F3E 20B7 283A FE25 4C69&lt;/quote&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45053040</guid></item><item><title>Anything can be a message queue if you use it wrongly enough (2023)</title><link>https://xeiaso.net/blog/anything-message-queue</link><description>&lt;doc fingerprint="4e7e82b81462420f"&gt;
  &lt;main&gt;
    &lt;p&gt;Making sure you're not a bot! Loading... Please wait a moment while we ensure the security of your connection.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45053234</guid></item><item><title>Optimising for maintainability – Gleam in production at Strand</title><link>https://gleam.run/case-studies/strand/</link><description>&lt;doc fingerprint="4dd85a312a252f9e"&gt;
  &lt;main&gt;
    &lt;p&gt;Strand is a marketing agency based in London, UK. The company specialises in copywriting and content creation for many of the world’s largest enterprise technology companies, running marketing programmes that produce hundreds of white papers, case studies, blog posts and articles every year.&lt;/p&gt;
    &lt;head rend="h2"&gt;Challenge&lt;/head&gt;
    &lt;p&gt;For many years, Strand has relied on a custom-built project management system to support the operational aspects of its business—creating projects, tracking activities and managing documents. However, managing the financial aspects of project management had always been a more manual process, using spreadsheets to ensure that billable work was assigned to the correct purchase orders and invoices.&lt;/p&gt;
    &lt;p&gt;“Just before the pandemic, we decided to build a new financial management system,” recalls Ed Kelly, Director of Technology at Strand. “It turned out to be a very timely decision. When we had to pivot to remote working, the fact that everyone could track their billable work in a centralised system helped us keep the business on track.”&lt;/p&gt;
    &lt;p&gt;The new system quickly became an integral part of Strand’s daily workflow, and users began requesting new features. As the application gradually grew larger and more complex, the company’s small development team wanted to ensure that the system would remain reliable, maintainable and scalable.&lt;/p&gt;
    &lt;p&gt;“Almost by accident, what we launched as a prototype became a business-critical application,” says Ed Kelly. “Our development resources are limited, so our top priority was to make sure the system would just run forever without needing constant maintenance. At the same time, we also wanted to keep the codebase simple and approachable, so it’s easy for developers to dive back into when they need to make a change. The challenge for us was to build and maintain this business-critical system cost-effectively with our lean development team.”&lt;/p&gt;
    &lt;head rend="h2"&gt;Solution&lt;/head&gt;
    &lt;p&gt;As a small business, Strand is not afraid to innovate. “We do have systems that are written in mainstream programming languages like Python and JavaScript, but our strategy is to pick the best tool for the job, not just the most popular,” explains Ed Kelly. “Gleam was a good fit for our requirements.”&lt;/p&gt;
    &lt;p&gt;The features of Gleam that appealed to Strand were its robustness and maintainability, its combination of modern language features with access to a broad ecosystem of battle-tested, production-grade libraries, and its strong focus on developer experience.&lt;/p&gt;
    &lt;head rend="h3"&gt;Safety and reliability&lt;/head&gt;
    &lt;p&gt;“Gleam is a safe language,” explains Ed Kelly. “Broadly speaking, if you write a program in pure Gleam, it’s guaranteed not to crash. And in cases where you need to interface with code written in other, less-safe languages, there is a second layer of protection provided by Gleam’s runtime platform, the BEAM.”&lt;/p&gt;
    &lt;p&gt;The BEAM was developed by Ericsson in the 1980s as a fault-tolerant platform for managing large telephone switches that need to handle thousands of calls simultaneously and can never be taken offline for maintenance. The central idea is that the platform is able to divide applications into thousands or even millions of lightweight processes. Each process runs independently, and processes can communicate by sending messages to each other. If an individual process crashes, it can be restarted automatically without affecting any of the other processes.&lt;/p&gt;
    &lt;p&gt;“The application that we’ve built is composed of several services that interact with the outside world,” explains Ed Kelly. “For example, we have a service that periodically downloads currency exchange rates from the UK government’s website, and another that syncs data with our project management system. The BEAM ensures that if there’s some unforeseen problem with any of these external services, it won’t crash our application.”&lt;/p&gt;
    &lt;head rend="h3"&gt;Modernity and pragmatism&lt;/head&gt;
    &lt;p&gt;Gleam is designed to be a simple language that provides powerful features while remaining resolutely practical. “It gives us access to features from more academic programming languages, but it makes them approachable,” says Ed Kelly. “The language is small—an experienced developer can learn it in an afternoon—and there is a strong focus on only having one way to do things. That means you can onboard new developers into a Gleam codebase quickly.”&lt;/p&gt;
    &lt;p&gt;Because Gleam code runs on the BEAM, developers also have easy access to thousands of high-quality software libraries. “The Gleam library ecosystem is growing rapidly year-on-year,” says Ed Kelly. “And when we need to, we can also reach for 40 years’ worth of battle-tested libraries written in other BEAM languages such as Erlang and Elixir. The language prioritises pragmatism over purity, which helps us get things done.”&lt;/p&gt;
    &lt;head rend="h3"&gt;Developer experience&lt;/head&gt;
    &lt;p&gt;In Strand’s experience, Gleam’s developer tools are second to none. “When you download Gleam, you get all the tooling in a single package,” says Ed Kelly. “It integrates with your code editor to provide features like formatting, suggestions and autocomplete. The error messages are really friendly and helpful—when you make a mistake, Gleam will often tell you what you should have written. And it’s really fast—the days of going for a coffee break while you wait for your code to build are over.”&lt;/p&gt;
    &lt;p&gt;He adds: “We’re heading into a new age of AI-assisted coding, and right now, it’s difficult to predict how that will play out. But if I had to place a bet, I would say that in the long run, AIs are more likely to generate high-quality code in a language like Gleam. Gleam makes it quick and easy for AIs to check their code, get instant feedback, and iterate. That should be an advantage compared to languages that are slow to build, have cryptic error messages, and can’t catch mistakes at build-time.”&lt;/p&gt;
    &lt;head rend="h3"&gt;Incremental adoption&lt;/head&gt;
    &lt;p&gt;For Strand, introducing Gleam into its codebase was a low-risk, incremental process. “We started with just one service—our integration with the UK government’s currency exchange rate API,” says Ed Kelly. “We were so pleased with how it turned out that we then rewrote some of our other services in Gleam. And recently, we’ve decided to give Gleam an even more important role by replacing the whole part of the backend that talks to our database. We’re very confident that this will give us a safer and more maintainable codebase overall.”&lt;/p&gt;
    &lt;head rend="h2"&gt;Results&lt;/head&gt;
    &lt;p&gt;As one of the first companies in the world to run Gleam in production, Strand took a risk. Two years later, the development team is delighted with the decision. “Since we started, the language has really matured and reached a stable state,” says Ed Kelly. “The community has grown massively and there’s a real buzz around the language. It’s even starting to be recognised by mainstream industry analysts like Thoughtworks in their Technology Radar. I think today, Gleam is a safe and solid choice for companies to use in production.”&lt;/p&gt;
    &lt;p&gt;Since go-live, the Gleam code within Strand’s application has been rock-solid. “We’ve had zero Gleam-related crashes, and even when there have been issues with other parts of the system, the BEAM has kept everything running,” says Ed Kelly. “We’ve been able to fix problems without our users even noticing that anything was wrong.”&lt;/p&gt;
    &lt;p&gt;The simplicity of the language and the sophistication of the development tools also help to keep the codebase maintainable. “Even when we haven’t looked at the codebase for a few weeks, it’s easy to get back into it,” says Ed Kelly. “The language and tooling gently push you to use a consistent, idiomatic style, and to write clearly and simply without trying to be too clever. So, we don’t have to spend time puzzling out what our past selves were trying to do with the code that we wrote six months ago.”&lt;/p&gt;
    &lt;p&gt;He concludes: “Adopting a new language is always a gamble, but Gleam has paid off. The belt-and-braces approach to safety and fault-tolerance has given us a system that just works, reliably, day in and day out, without constant babysitting and maintenance. For a team like ours, with many other priorities and projects we need to work on, the confidence that Gleam gives us is worth its weight in gold.”&lt;/p&gt;
    &lt;head rend="h4"&gt;Ready to start your Gleam journey?&lt;/head&gt;
    &lt;p&gt;Check out the language tour and documentation.&lt;/p&gt;
    &lt;p&gt;Already using it in production? Share your story with us, we'd love to hear all about it!&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45053462</guid></item><item><title>Show HN: Grammit – Local-only AI grammar checker (Chrome extension)</title><link>https://chromewebstore.google.com/detail/grammit-the-ai-grammar-ch/pkfmoknmnkbidlniedaloiijibdpjjmm</link><description>&lt;doc fingerprint="ae4394342be1089d"&gt;
  &lt;main&gt;
    &lt;head rend="h2"&gt;Overview&lt;/head&gt;
    &lt;p&gt;Check your grammar and refine your writing with local AI.&lt;/p&gt;
    &lt;p&gt;✦ AI-Powered Corrections Grammit's AI is great at correcting spelling and grammar mistakes. But it also catches other errors. Did you accidentally write "The theory of evolution was developed by Charles Dickens"? No worries, Grammit will correct that to "Charles Darwin". ✦ AI Rephrasing and Drafting You can ask Grammit to help you with your writing tasks. Just ask it to rephrase your writing to make it more professional and it will do that. Or have it draft an email for you or help you brainstorm ideas. ✦ Privacy-Focused with AI Running on your Computer Other grammar checkers (*cough* Grammarly, *cough* Quillbot, *cough* LanguageTool) might send your writing to their servers. Your work emails, personal messages, or private notes… yikes! Grammit checks your writing directly on your computer using a local, on-device LLM, It never sends your writing to external servers. ✦ Works Everywhere Whether you're writing emails, social media posts, or chat messages, Grammit is there helping you write clearly and confidently. ~~~ Is this for me? Support and sales teams, teachers, healthcare professionals, HR, lawyers, students, writers, real estate agents, and more can benefit from Grammit. If you're tired of mistakes slipping through or uncomfortable with companies reading your writing, it's time to switch to Grammit. It’s free! Grammit’s on-device local AI is always private. All the grammar checking, rephrasing, and chats with Grammit happen entirely on your computer, using a local LLM without your writing ever being sent to external servers. Try Grammit today to see your writing improve.&lt;/p&gt;
    &lt;head rend="h2"&gt;Details&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Version1.5.5&lt;/item&gt;
      &lt;item&gt;UpdatedAugust 25, 2025&lt;/item&gt;
      &lt;item&gt;Size422KiB&lt;/item&gt;
      &lt;item&gt;LanguagesEnglish&lt;/item&gt;
      &lt;item&gt;DeveloperBlaze Today IncWebsite&lt;lb/&gt;570 Puccini Dr. Sunnyvale, CA 94087 US&lt;head class="mQAOCc"&gt;Email&lt;/head&gt;questions@blaze.today&lt;head class="rZArre"&gt;Phone&lt;/head&gt;+1 415-300-0495&lt;/item&gt;
      &lt;item&gt;TraderThis developer has identified itself as a trader per the definition from the European Union and committed to only offer products or services that comply with EU laws.&lt;/item&gt;
      &lt;item&gt;D-U-N-S111636927&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Privacy&lt;/head&gt;
    &lt;head rend="h2"&gt;This developer declares that your data is&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Not being sold to third parties, outside of the approved use cases&lt;/item&gt;
      &lt;item&gt;Not being used or transferred for purposes that are unrelated to the item's core functionality&lt;/item&gt;
      &lt;item&gt;Not being used or transferred to determine creditworthiness or for lending purposes&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Support&lt;/head&gt;
    &lt;p&gt;For help with questions, suggestions, or problems, visit the developer's support site&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45053553</guid></item><item><title>China is eating the world</title><link>https://apropos.substack.com/p/china-is-eating-the-world</link><description></description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45053771</guid></item><item><title>PinePhone Pro [GNU/Linux smartphone] has been discontinued</title><link>https://social.treehouse.systems/@pine64/115027515081143369</link><description>&lt;doc fingerprint="f8eb8f2f2d953eed"&gt;
  &lt;main&gt;
    &lt;p&gt;To use the Mastodon web application, please enable JavaScript. Alternatively, try one of the native apps for Mastodon for your platform.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45053872</guid></item><item><title>Service members deserve the right to repair</title><link>https://www.militarytimes.com/opinion/2025/07/11/why-service-members-deserve-the-right-to-repair/</link><description>&lt;doc fingerprint="e660d191b027eef7"&gt;
  &lt;main&gt;
    &lt;p&gt;“The generator is down, and we don’t have enough ice to continue icing the remains of soldiers killed in action. How much longer, ma’am?”&lt;/p&gt;
    &lt;p&gt;That’s the message I received while deployed to Balad, Iraq, as an Air Force second lieutenant. I was overseeing generators in theater, and the one powering the mortuary facility had failed. The clock was ticking. I didn’t have HVAC expertise or the necessary parts. The only viable backup generator was on the other side of the country.&lt;/p&gt;
    &lt;p&gt;I had two choices: initiate a long contracting process to hire a civilian technician, or send a convoy across Iraq for the backup unit — risking lives to get it there. We chose the convoy. We got lucky.&lt;/p&gt;
    &lt;p&gt;But what if we hadn’t?&lt;/p&gt;
    &lt;p&gt;That question — what if — has stuck with me. Because this wasn’t a theoretical delay. This was a real moment where a failure in repair readiness jeopardized our ability to care for the fallen with dignity and speed. And I know it wasn’t the only one.&lt;/p&gt;
    &lt;p&gt;That’s why I support the right to repair.&lt;/p&gt;
    &lt;p&gt;I’ve lived what it means when a piece of equipment fails at a critical time. I know how far away contractors can be when you need them most. And I know what our service members are capable of — if we trust them with the tools and training to do the job.&lt;/p&gt;
    &lt;p&gt;Military right to repair means giving service members the ability to fix their own gear — on base, in the field or downrange — without having to wait on outside contractors. That includes access to the tools, parts and manuals they need to do the job. Right now, private companies can put restrictions on military equipment that block troops from making even basic repairs. That slows everything down, costs taxpayers more, and in the worst cases, puts lives at risk.&lt;/p&gt;
    &lt;p&gt;This year, Congress has a chance to change that.&lt;/p&gt;
    &lt;p&gt;Thanks to a growing, bipartisan push — including new legislation led by Senators Elizabeth Warren, D-Mass., and Tim Sheehy, R-Mont. — right-to-repair reforms are being considered in the National Defense Authorization Act (NDAA). These two senators, from opposite parties, have made it clear: The Pentagon is wasting billions, and service members are bearing the cost.&lt;/p&gt;
    &lt;p&gt;Including the Warrior Right to Repair Act in the NDAA is a critical step forward for readiness, national security and the safety of warfighters downrange, and it’s taxpayer friendly.&lt;/p&gt;
    &lt;p&gt;Mission readiness depends on the ability to make repairs in the field. Service members need the tools, parts and authority to make immediate fixes themselves, without having to navigate red tape.&lt;/p&gt;
    &lt;p&gt;When our military relies too heavily on private contractors for basic maintenance, that dependence gives outside companies leverage over military operations, introducing profit motives into urgent repair decisions. Our armed forces should operate on military timelines — not corporate maintenance schedules.&lt;/p&gt;
    &lt;p&gt;Warfighter safety is directly tied to the reliability of our gear. In high-risk environments, a delay in repairing a critical piece of equipment can mean the difference between life and death.&lt;/p&gt;
    &lt;p&gt;Right to repair is smart, responsible fiscal policy. Sustainment costs can represent up to 70% of a weapons system’s lifetime expense. When troops are blocked from doing basic repairs, costs increase and transparency disappears. That’s a waste of taxpayer dollars.&lt;/p&gt;
    &lt;p&gt;Finally, repairing our own equipment is critical to inculcating and maintaining a military culture of adaptability and self-reliance. We train service members to be problem solvers. Empowering them to repair their own gear isn’t just smart policy — it reflects the values we instill in every recruit. Right to repair honors that ethos and ensures we treat service members like professionals, not passive end-users.&lt;/p&gt;
    &lt;p&gt;We wouldn’t tell a Marine they can’t clean their rifle without a manufacturer present. So why are we telling our soldiers, sailors, airmen and Marines they can’t fix a comms system or power supply?&lt;/p&gt;
    &lt;p&gt;I’m grateful that, in that moment in Iraq, we had a backup option — even if it meant launching a risky cross-country convoy. But what if we hadn’t? What if that second generator didn’t exist or wasn’t reachable in time? Without immediate repair options, the remains of our fallen could have become unrecognizable. The families who entrusted us with their loved ones would have suffered consequences that no one should have to imagine.&lt;/p&gt;
    &lt;p&gt;That’s what’s at stake when service members can’t repair the equipment they rely on. It’s not just about saving money or avoiding delays — it’s about honoring our dead, protecting the living and giving our troops the flexibility they need to do the right thing when it counts. Right to repair is about readiness. It’s about humanity. And it’s long overdue.&lt;/p&gt;
    &lt;p&gt;That’s why I’m calling on Congress — and especially House Armed Services Committee leaders like Alabama Republican Rep. Mike Rogers — to include military right-to-repair provisions in this year’s NDAA by supporting the bipartisan Warrior Right to Repair Act.&lt;/p&gt;
    &lt;p&gt;Retired Lt. Col. Cindy Serrano Roberts is a combat veteran after 21 years of service. As a community leader, she has served as a national council member of the United Nations Association (U.S.) and serves as a consultant to the United Nations Human Rights Council and Economic and Social Council. Cindy is a military family policy advocate and has led policy overhauls as an active duty service member and spouse within the Department of Defense. She is a Truman National Security Project political partner and leads their Women’s Affinity Group.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45054037</guid></item><item><title>Launch HN: Dedalus Labs (YC S25) – Vercel for Agents</title><link>https://news.ycombinator.com/item?id=45054040</link><description>&lt;doc fingerprint="290c9651eedc6e80"&gt;
  &lt;main&gt;
    &lt;div&gt;&lt;p&gt;Hey HN! We are Windsor and Cathy of Dedalus Labs (&lt;/p&gt;https://www.dedaluslabs.ai/&lt;p&gt;), a cloud platform for developers to build agentic AI applications. Our SDK allows you to connect any LLM to any MCP tools – local or hosted by us. No Dockerfiles or YAML configs required.&lt;/p&gt;&lt;p&gt;Here’s a demo: https://youtu.be/s2khf1Monho?si=yiWnZh5OP4HQcAwL&amp;amp;t=11&lt;/p&gt;&lt;p&gt;Last October, I was trying to build a stateful code execution sandbox in the cloud that LLMs could tool-call into. This was before MCP was released, and let’s just say it was super annoying to build… I was thinking to myself the entire time “Why can’t I just pass in `tools=code_execution` to the model and just have it…work?&lt;/p&gt;&lt;p&gt;Even with MCP, you’re stuck running local servers and handwiring API auth and formatting across OpenAI, Anthropic, Google, etc. before you can ship anything. Every change means redeploys, networking configs, and hours lost wrangling AWS. Hours of reading docs and wrestling with cloud setup is not what you want when building your product!&lt;/p&gt;&lt;p&gt;Dedalus simplifies this to just one API endpoint, so what used to take 2 weeks of setup can take 5 minutes. We allow you to upload streamable HTTP MCP servers to our platform. Once deployed, we offer OpenAI-compatible SDKs that you can drop into your codebase to use MCP-powered LLMs. The idea is to let anyone, anywhere, equip their LLMs with powerful tools for function calling.&lt;/p&gt;&lt;p&gt;The code you write looks something like this:&lt;/p&gt;&lt;quote&gt;&lt;code&gt;  python
  client = Dedalus()
  runner = DedalusRunner(client)
  
  result = runner.run(
    input=prompt,
    tools=[tool_1, tool_2],
    mcp_servers=["author/server-1”, “author/server-2”],
    model=["openai/gpt-4.1”, “anthropic/claude-sonnet-4-20250514”],  # Defaults to first model in list
    stream=True,
  )
  stream_sync(result)  # Streams result, supports tool calling too
&lt;/code&gt;&lt;/quote&gt;&lt;p&gt; Our docs start at &lt;/p&gt;https://docs.dedaluslabs.ai&lt;p&gt;. Here’s a simple Hello World example: &lt;/p&gt;https://docs.dedaluslabs.ai/examples/01-hello-world&lt;p&gt;. For basic tool execution, see &lt;/p&gt;https://docs.dedaluslabs.ai/examples/02-basic-tools&lt;p&gt;. There are lots more examples on the site, including more complex ones like using the Open Meteo MCP to do weather forecasts: &lt;/p&gt;https://docs.dedaluslabs.ai/examples/use-case/weather-foreca...&lt;p&gt;.&lt;/p&gt;&lt;p&gt;There are still a bunch of issues in the MCP landscape, no doubt. One big one is authentication (we joke that the “S” in MCP stands for “security”). MCP servers right now are expected to act as both the authentication server and the resource server. That is too much to ask of server writers. People just want to expose a resource endpoint and be done.&lt;/p&gt;&lt;p&gt;Still, we are bullish on MCP. Current shortcomings are not irrecoverable, and we expect future amendments to resolve them. We think that useful AI agents are bound to be habitual tool callers, and MCP is a pretty decent way to equip models with tools.&lt;/p&gt;&lt;p&gt;We aren’t quite yet at the stateful code execution sandbox that I wanted last October, but we’re getting there! Shipping secure and stateful MCP servers is high on our priority list, and we’ll be launching our auth solution next month. We’re also working on an MCP marketplace, so people can monetize their tools, while we handle billing and rev-share.&lt;/p&gt;&lt;p&gt;We’re big on open sourcing things and have these SDKs so far (MIT licensed):&lt;/p&gt;&lt;p&gt;https://github.com/dedalus-labs/dedalus-sdk-python&lt;/p&gt;&lt;p&gt;https://github.com/dedalus-labs/dedalus-sdk-typescript&lt;/p&gt;&lt;p&gt;https://github.com/dedalus-labs/dedalus-sdk-go&lt;/p&gt;&lt;p&gt;https://github.com/dedalus-labs/dedalus-openapi&lt;/p&gt;&lt;p&gt;We would love feedback on what you guys think are the biggest barriers that keep you from integrating MCP servers or using tool calling LLMs into your current workflow.&lt;/p&gt;&lt;p&gt;Thanks HN!&lt;/p&gt;&lt;/div&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45054040</guid></item><item><title>Colleges see significant drop in international students as fall semester begins</title><link>https://text.npr.org/nx-s1-5498669</link><description>&lt;doc fingerprint="166f31162acb0e60"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Colleges see significant drop in international students as fall semester begins&lt;/head&gt;
    &lt;p&gt;By Elissa Nadworny&lt;/p&gt;
    &lt;p&gt;Wednesday, August 27, 2025 • 4:46 PM EDT&lt;/p&gt;
    &lt;p&gt;Classes began this week for students at the University at Buffalo, a public research university in western New York, but there were about 750 fewer international students on campus than expected.&lt;/p&gt;
    &lt;p&gt;The new students who did make it gathered for a welcome from the school's dean of students. "We know you have had to overcome hurdles to be here – especially this summer, with visas," Tomás Aguirre told the assembled students, representing more than 100 countries. "And I just wanted you to know that we are so glad you were able to make it."&lt;/p&gt;
    &lt;p&gt;Related Story: NPR&lt;/p&gt;
    &lt;p&gt;The sentiment was common among the students, too. "For me, the main thing is that I got here," says Daria Tofan, a freshman from Romania, who didn't get her student visa until about a week before orientation. "It was awful."&lt;/p&gt;
    &lt;p&gt;Over the last six months the Trump Administration has clamped down on international student visas, temporarily pausing and then revamping the student visa interview process and bringing more scrutiny to the vetting system. That led to long delays and meant many accepted students couldn't get appointments at embassies or consulates in time for the start of the fall semester.&lt;/p&gt;
    &lt;p&gt;"I only had one goal from the beginning, it was to go to college here, so if I didn't reach that goal it would have been very painful," explains Shivaka Sing, a freshman psychology major from New Delhi. When she got accepted to Buffalo she joined a group chat of other students from India. Many of them couldn't get a visa appointment in time to start the fall semester with her. "Most of them are now transferring to the U.K. because of the visa situation," she says. "Some are planning to defer to the spring semester."&lt;/p&gt;
    &lt;head rend="h3"&gt;Fewer International students on campuses across the country this fall&lt;/head&gt;
    &lt;p&gt;At the University at Buffalo, the overall decline of about 15% of international students is happening mostly in graduate programs, especially in the STEM fields. But it's not just Buffalo. Universities all over the country are experiencing similar drops. Arizona State University reported a fall semester decline for the first time since 2020. Declines have been announced at universities in Texas, Missouri and Illinois. The state of Massachusetts is expecting about 10,000 fewer new international students this year.&lt;/p&gt;
    &lt;p&gt;"One would describe the situation with international students to be very much in flux with tremendous levels of uncertainty," says Fanta Aw, who leads the Association of International Educators, or NAFSA.&lt;/p&gt;
    &lt;p&gt;Last year more than a million international students studied in the U.S., contributing about $43 billion into the U.S. economy. But Aw's organization predicts a drop of about 150,000 new international students this fall, leading to a decline of about 15% overall. If that happens, local economies could lose as much as $7 billion in spending and more than 60,000 jobs.&lt;/p&gt;
    &lt;p&gt;Related Story: NPR&lt;/p&gt;
    &lt;p&gt;"The loss of international students will lead to a significant downturn in innovation," Aw says. "This will affect communities large and small."&lt;/p&gt;
    &lt;p&gt;The decline is also happening at a time when other countries, like the U.K. and South Korea have stepped up to fill the gap.&lt;/p&gt;
    &lt;head rend="h3"&gt;Mixed messages from federal government on student visas&lt;/head&gt;
    &lt;p&gt;President Trump has said he wants to keep campus safe. The State Department has revoked about 6,000 student visas so far this year, citing threats of academic espionage, support for terrorist groups in Gaza and criminal behavior.&lt;/p&gt;
    &lt;p&gt;And in May, the State Department said it would "aggressively revoke" visas for Chinese students and add additional scrutiny for future visa applications from China.&lt;/p&gt;
    &lt;p&gt;But in recent days Trump has signaled a shift. This week, Trump told reporters he planned to double the amount of Chinese students studying in the U.S. He defended those comments a day later, saying "I like that their [China] students come here. I like that other countries students' come here. And you know what would happen if they didn't? Our college system would go to hell very quickly."&lt;/p&gt;
    &lt;p&gt;Related Story: NPR&lt;/p&gt;
    &lt;p&gt;Still, President Trump and conservative leaders have said they want to make sure that foreign students aren't taking spots that could go to American citizens. But leaders at the University at Buffalo said at least at their institution, that's not something U.S. families need to worry about.&lt;/p&gt;
    &lt;p&gt;"We recruit all qualified students to the University at Buffalo and are eager for all of them to attend," explains Scott Webber, the provost there. "I would assure you that our international students do not take spots, you know for other students who are qualified to attend and would be successful here." Total enrollment is actually up at the university overall, and there are still 4,000 international students on campus this year.&lt;/p&gt;
    &lt;head rend="h3"&gt;International students bring money and culture to campuses&lt;/head&gt;
    &lt;p&gt;Related Story: NPR&lt;/p&gt;
    &lt;p&gt;"What they bring to the university is this incredibly rich, diverse cultural experience for students who may not have ever been outside of New York state," says Webber. "They really bring a different flavor to campus."&lt;/p&gt;
    &lt;p&gt;International students also contribute financially to universities, as many pay full tuition. That revenue has the potential to benefit American students, by funding things like financial aid or stabilizing tuition costs.&lt;/p&gt;
    &lt;p&gt;As one of the lucky ones who made it to campus at the University at Buffalo, Shivika Sing, says finally being done with the visa process, and arriving on campus has meant she can focus on finding her classrooms, making sure she has all her books and supplies, and getting her dorm room set up.&lt;/p&gt;
    &lt;p&gt;"I bought a pink Lilo &amp;amp; Stitch soft toy to sleep with," she says. It is one of three stuffed animals on her bed. Those toys are key, she says, to warding off the homesickness that comes from being seven thousand miles from home.&lt;/p&gt;
    &lt;head rend="h3"&gt;Transcript&lt;/head&gt;
    &lt;p&gt;LEILA FADEL, HOST:&lt;/p&gt;
    &lt;p&gt;International students are arriving on American college campuses.&lt;/p&gt;
    &lt;p&gt;DARIA TOFAN: Hi. I'm Daria (ph). I'm a first-year international student, and I'm from Romania.&lt;/p&gt;
    &lt;p&gt;PRIYOTA NADH: Priyota Nadh (ph), and I'm from Bangladesh.&lt;/p&gt;
    &lt;p&gt;FRANCOIS HUMPHRIES: My name's Francois Humphries (ph). I'm from South Africa.&lt;/p&gt;
    &lt;p&gt;SHIVIKA SINGH: My name is Shivika (ph), and I'm from India.&lt;/p&gt;
    &lt;p&gt;FADEL: Those students made it to school in Buffalo, New York, after a rocky summer, when the Trump administration temporarily paused and then revamped student visa interviews. NPR's Elissa Nadworny reports from Buffalo.&lt;/p&gt;
    &lt;p&gt;UNIDENTIFIED PERSON #1: Welcome. We're so excited that you're here on campus.&lt;/p&gt;
    &lt;p&gt;ELISSA NADWORNY, BYLINE: At orientation at the University at Buffalo, a public research university in western New York, newly arrived international students are getting their campus IDs...&lt;/p&gt;
    &lt;p&gt;UNIDENTIFIED PERSON #2: So just smile. I'm going to take it on three. One, two, three.&lt;/p&gt;
    &lt;p&gt;NADWORNY: ...And feeling relieved they made it to campus.&lt;/p&gt;
    &lt;p&gt;TOFAN: At least we're here. For me, the main thing is that I got here.&lt;/p&gt;
    &lt;p&gt;NADWORNY: Daria Tofan (ph) from Romania didn't get her student visa until a week before orientation.&lt;/p&gt;
    &lt;p&gt;TOFAN: To get scheduled for classes, you need to provide the immigration documents. So if you don't have the visa stamp, you're basically behind everything.&lt;/p&gt;
    &lt;p&gt;NADWORNY: Over the last six months, the Trump administration has clamped down on international student visas. That's created lots of delays and anxiety for accepted students.&lt;/p&gt;
    &lt;p&gt;SINGH: I only had one goal from the beginning. It was to go to college here. So if I didn't reach that goal, it would've been very painful.&lt;/p&gt;
    &lt;p&gt;NADWORNY: Shivika Singh (ph) is from New Delhi, starting as a freshman at UB to study psychology. When she first got accepted to Buffalo, she joined a group chat of other students from India. Many of them couldn't get a visa appointment in time.&lt;/p&gt;
    &lt;p&gt;SINGH: Most of them are now transferring to U.K. because of the visa situation, but some are still waiting for the spring semester.&lt;/p&gt;
    &lt;p&gt;SCOTT WEBER: Clearly, this year we're having more deferrals. They haven't been able to get appointments for the most part.&lt;/p&gt;
    &lt;p&gt;NADWORNY: Scott Weber is the provost at the University at Buffalo. The university is expecting a decline of about 750 international students this fall, many in graduate programs, especially in the STEM fields.&lt;/p&gt;
    &lt;p&gt;FANTA AW: The loss of international students will lead to really a significant downturn in innovation.&lt;/p&gt;
    &lt;p&gt;NADWORNY: Fanta Aw leads the Association of International Educators. She says universities all over the country are expecting similar drops. Last year, more than a million international students studied in the U.S. But Aw's organization estimates a decline of about 15% overall this fall.&lt;/p&gt;
    &lt;p&gt;AW: This will affect communities large and small.&lt;/p&gt;
    &lt;p&gt;NADWORNY: Other countries like Canada, the U.K. and South Korea have stepped up to fill the gap. President Trump has said he wants to keep campuses safe, citing threats of academic espionage, support for terrorist groups in Gaza and criminal behavior - all without much evidence. He's also accused international students of taking university spots that could go to American citizens. Provost Scott Weber says there's room for everyone at his university.&lt;/p&gt;
    &lt;p&gt;WEBER: I would assure you that our international students do not take spots, you know, for other students who are qualified to attend and would be successful here.&lt;/p&gt;
    &lt;p&gt;NADWORNY: Enrollment is actually up at the university overall, and there are still about 4,000 international students on campus this year.&lt;/p&gt;
    &lt;p&gt;WEBER: What they bring to the university is this incredibly rich, diverse cultural experience for students who may not have ever been outside of New York state.&lt;/p&gt;
    &lt;p&gt;NADWORNY: For the lucky ones, like Shivika Singh from New Delhi, now it's time to focus on being a college student.&lt;/p&gt;
    &lt;p&gt;What's the most exciting thing you bought for your dorm?&lt;/p&gt;
    &lt;p&gt;SINGH: I bought a pink "Lilo &amp;amp; Stitch" soft toy (laughter).&lt;/p&gt;
    &lt;p&gt;NADWORNY: A toy?&lt;/p&gt;
    &lt;p&gt;SINGH: (Laughter) Yeah.&lt;/p&gt;
    &lt;p&gt;NADWORNY: To sleep with?&lt;/p&gt;
    &lt;p&gt;SINGH: Yeah. There are, like, three soft toys on my bed.&lt;/p&gt;
    &lt;p&gt;NADWORNY: She says those stuffed animals are the key to warding off home sickness that comes from being 7,000 miles from home.&lt;/p&gt;
    &lt;p&gt;Elissa Nadworny, NPR News, Buffalo, New York.&lt;/p&gt;
    &lt;p&gt;(SOUNDBITE OF MUSIC)&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45054138</guid></item><item><title>Ask HN: The government of my country blocked VPN access. What should I use?</title><link>https://news.ycombinator.com/item?id=45054260</link><description>&lt;doc fingerprint="36719955b0340fd1"&gt;
  &lt;main&gt;
    &lt;p&gt;Indonesia is currently in chaos. Earlier today, the government blocked access to Twitter &amp;amp; Discord knowing news spread mainly through those channels. Usually we can use Cloudflare's WARP to avoid it, but just today they blocked the access as well. What alternative should we use?&lt;/p&gt;
    &lt;p&gt;Hello! I've got experience working on censorship circumvention for a major VPN provider (in the early 2020s).&lt;/p&gt;
    &lt;p&gt;- First things first, you have to get your hands on actual VPN software and configs. Many providers who are aware of VPN censorship and cater to these locales distribute their VPNs through hard-to-block channels and in obfuscated packages. S3 is a popular option but by no means the only one, and some VPN providers partner with local orgs who can figure out the safest and most efficient ways to distribute a VPN package in countries at risk of censorship or undergoing censorship.&lt;/p&gt;
    &lt;p&gt;- Once you've got the software, you should try to use it with an obfuscation layer.&lt;/p&gt;
    &lt;p&gt;Obfs4proxy is a popular tool here, and relies on a pre-shared key to make traffic look like nothing special. IIRC it also hides the VPN handshake. This isn't a perfectly secure model, but it's good enough to defeat most DPI setups.&lt;/p&gt;
    &lt;p&gt;Another option is Shapeshifter, from Operator (https://github.com/OperatorFoundation). Or, in general, anything that uses pluggable transports. While it's a niche technology, it's quite useful in your case.&lt;/p&gt;
    &lt;p&gt;In both cases, the VPN provider must provide support for these protocols.&lt;/p&gt;
    &lt;p&gt;- The toughest step long term is not getting caught using a VPN. By its nature, long-term statistical analysis will often reveal a VPN connection regardless of obfuscation and masking (and this approach can be cheaper to support than DPI by a state actor). I don't know the situation on the ground in Indonesia, so I won't speculate about what the best way to avoid this would be, long-term.&lt;/p&gt;
    &lt;p&gt;I will endorse Mullvad as a trustworthy and technically competent VPN provider in this niche (n.b., I do not work for them, nor have I worked for them; they were a competitor to my employer and we always respected their approach to the space).&lt;/p&gt;
    &lt;p&gt;Thank you very much for a detailed answer. Might I rudely ask -- as you're knowledgeable in this space, what do you think of Mullvad's DAITA, which specifically aims to defeat traffic analysis by moving to a more pulsed constant bandwidth model?&lt;/p&gt;
    &lt;p&gt;DAITA was introduced after my time in the industry, but this isn't a new idea (though as far as I know, it's the first time this kind of thing's been commercialized).&lt;/p&gt;
    &lt;p&gt;It's clever. It tries to defeat attacks against one of the tougher parts of VPN connections to reliably obfuscate, and the effort's commendable, but I'll stop short of saying it's a good solution for one big reason: with VPNs and censorship circumvention, the data often speaks for itself.&lt;/p&gt;
    &lt;p&gt;A VPN provider working in this space will often have aggregate (and obviously anonymized, if they're working in good faith) stats about success rates and failure classes encountered from clients connecting to their nodes. Where I worked, we didn't publish this information. I'm not sure where Mullvad stands on this right now.&lt;/p&gt;
    &lt;p&gt;In any case -- some VPN providers deploying new technology like this will partner with the research community (because there's a small, but passionate formal research community in this space!) and publish papers, studies, and other digests of their findings. Keep an eye out for this sort of stuff. UMD's Breakerspace in the US in particular had some extremely clever people working on this stuff when I was involved in the industry.&lt;/p&gt;
    &lt;p&gt;I’m curious about what makes it difficult to block a vpn provider long term. You said getting the software is difficult, but can a country not block known vpn ingress points?&lt;/p&gt;
    &lt;p&gt;You've come to a wrong place to ask. Most people here (judging by recommendations of own VPN instances, Tor, Tailscale/other Wireguard-based VPNs, and Mullvad) don't have any experience with censorship circumvention.&lt;/p&gt;
    &lt;p&gt;Just look for any VPNs that are advertised specifically for China, Russia, or Iran. These are the cutting edge tech, they may not be so privacy-friendly as Mullvad, but they will certainly work.&lt;/p&gt;
    &lt;p&gt;&amp;gt; Just look for any VPNs that are advertised specifically for China, Russia, or Iran.&lt;/p&gt;
    &lt;p&gt;If I was working for a secret service for these countries, I would set up many "VPNs that are advertised specifically for x" as honeypots to gather data about any dissidents.&lt;/p&gt;
    &lt;p&gt;Mr. Kafka, suspicion is healthy. However, abstraction provides no way forward when faced with practicalities instead of theory. Creates a Kafka-esque situation - anything suitable is by definition unsuitable. Better to focus on practical technical advice.&lt;/p&gt;
    &lt;p&gt;VPNs that are advertised are for-profit products, which means:&lt;/p&gt;
    &lt;p&gt;1. They are in most cases run by national spy agencies.&lt;/p&gt;
    &lt;p&gt;2. They will at least appear to work, i.e., they will provide you with access to websites that are blocked by the country you are in. Depending on which country's spies run the system, they may actually work in the sense of hiding your traffic from that country's spies, or they may mark you as a specific target and save all your traffic for later analysis.&lt;/p&gt;
    &lt;p&gt;My inclination is to prefer free (open-source) software that isn't controlled by a company which can use that control against its users.&lt;/p&gt;
    &lt;p&gt;Well, you have to host your free open-source VPN software somewhere. And then, (N. B.: technical and usability stuff aside, I'm talking only about privacy bits here) everything boils down to two equally nightmarish options.&lt;/p&gt;
    &lt;p&gt;First, you use well-known cloud or dedicated hoster. All your traffic is now tied to the single IP address of that hoster. It may be linked to you by visiting two different sites from the same IP address. Furthermore, this hoster is legally required to do anything with your VPN machine on demand of corresponding state actors (this is not a speculative scenario; i. e. Linode literally silently MitMed one of their customers on German request). Going ever further, residential and company IPs have quite different rules when it comes to law enforcement. Seeding Linux ISOs from your residential IP will be overlooked almost everywhere (sorry, Germany again), but seeding Linux ISOs from AWS can easily be a criminal offense.&lt;/p&gt;
    &lt;p&gt;Second, you use some shady Ecuadorean abuse-proof hosting company, which keeps no logs (or at least says that) and accepts payments in XMR. Now you're logging in to your bank account from an IP address that is used to seedbox pirate content or something even more illegal, and you still don't know if anyone meddles with your VPN instance looking for crypto wallet keys in your traffic.&lt;/p&gt;
    &lt;p&gt;VPN services have a lot of "good" customers for a small amount of IP addresses, so even if they have some "bad" actors, their IPs as a whole remain "good enough". And, as the number of customers is big, each IP cannot be reliably tied to a specific customer without access logs.&lt;/p&gt;
    &lt;p&gt;It is absolutely self-evident that VPNs are considered high-value targets and that all spy agencies invest a chunk of resources to go after high-value targets.&lt;/p&gt;
    &lt;p&gt;I would invite you to read again the two claims made, and consider whether your statement actually addresses the veracity of either.&lt;/p&gt;
    &lt;p&gt;To be a little trite: we all agree that chickens like grain, but it does not follow that a majority of grain producers are secretly controlled by a cabal of poultry.&lt;/p&gt;
    &lt;p&gt;Mullvad worked OK in China for me recently. Sometimes I'd have to try a few different endpoints before it worked. Something built specifically to work in those places would probably be better, but it wasn't too much trouble. Not necessarily a recommendation, just sharing one data point.&lt;/p&gt;
    &lt;p&gt;I have a little, maybe enough to be dangerous. SSH won’t be sufficient to avoid all traffic analysis. Everyone can see how much traffic and the pattern of that traffic, which can leak info about the sort of things you’re doing.&lt;/p&gt;
    &lt;p&gt;If you’re worried about ending up on a list, using things that look like VPNs while the VPNs are locked down is likely to do so.&lt;/p&gt;
    &lt;p&gt;Also… your neighbors in Myanmar didn’t do a lockdown during the genocide and things got pretty fucking dire as a result. People have taken different lessons from this. I’m not sure what the right answer is, and which is the greater evil. Deplatforming and arresting people for inciting riots and hate speech is probably the best you can do to maintain life and liberty for the most people.&lt;/p&gt;
    &lt;p&gt;- Tor. Pros: Reasonably user friendly and easy to get online, strong anonymity, free. Cons: a common target for censorship, not very fast, exit nodes are basically universally distrusted by websites.&lt;/p&gt;
    &lt;p&gt;- Tailscale with Mullvad exit nodes. Pros: little setup but not more than installing and configuring a program, faster than Got, very versatile. Cons: deep packet inspection can probably identify your traffic is using Mullvad, costs some money.&lt;/p&gt;
    &lt;p&gt;- Your own VPSs with Wireguard/Tailscale. Pros: max control, you control how fast you want it, you can share with people you care about (and are willing to support). Cons: the admin effort isn't huge but requires some skill, cost is flexible but probably 20-30$ per month minimum in hosting.&lt;/p&gt;
    &lt;p&gt;Tailscale is completely unnecessary here, unless OP can't connect to Mullvad.net in the first place to sign up. But if the Indonesian government blocks Mullvad nodes, they'll be out of luck either way.&lt;/p&gt;
    &lt;p&gt;&amp;gt; - Your own VPSs with Wireguard/Tailscale&lt;/p&gt;
    &lt;p&gt;Keep in mind that from the POV of any websites you visit, you will be easily identifiable due to your static IP.&lt;/p&gt;
    &lt;p&gt;My suggestion would be to rent a VPS outside Indonesia, set up Mullvad or Tor on the VPS and route all traffic through that VPS (and thereby through Mullvad/Tor). The fastest way to set up the latter across devices is probably to use the VPS as Tailscale exit node.&lt;/p&gt;
    &lt;p&gt;And using another VPN like NordVPN or ProtonVPN is probably in the same category as Mullvad, but worth being cautious. If it's free, you are the product. If you pay, you're still sending your traffic to a publicly (usually) known server of a VPN. That metadata alone in some jurisdictions can still put you in danger.&lt;/p&gt;
    &lt;p&gt;This is good overview, I just wanted to add that a VPS IP is not a residential IP. You will encounter roadblocks when you try to access services if you appear to be coming from a VPS. Not that I had a better solution, just to clarify what you can expect.&lt;/p&gt;
    &lt;p&gt;IMO most people should have a VPS even if you don't need it for tunneling. Living without having a place to just leave services/files is very hard and often "free" services will hold your data hostage to manipulate your behavior which is annoying on a good day.&lt;/p&gt;
    &lt;p&gt;Yeah they can be cheap, but I would definitely recommend having at least 3 for redundancy. If one get shut down or it's IP blacklisted you still hopefully have a backup line to create a replacement.&lt;/p&gt;
    &lt;p&gt;&amp;gt; cost is flexible but probably 20-30$ per month minimum in hosting.&lt;/p&gt;
    &lt;p&gt;$4/month VPS from DigitalOcean is more than enough to handle a few users as per my experience. I have a Wireguard setup like this for more than a year. Didn't notice any issues.&lt;/p&gt;
    &lt;p&gt;The most effective solution is to use X-ray/V2ray with VLESS, or VMESS, or Trojan as a protocol.&lt;/p&gt;
    &lt;p&gt;Another obfuscated solution is Amnezia&lt;/p&gt;
    &lt;p&gt;If you are not ready to set up your own VPN server and need any kind of connection right now, try Psiphon, but it's a proprietary centralized service and it's not the best solution.&lt;/p&gt;
    &lt;p&gt;If you can still get SSH access and can establish an account with a VPS provider with endpoints outside your country of origin, https://github.com/StreisandEffect/streisand is a little long in the tooth but may still be viable.&lt;/p&gt;
    &lt;p&gt;Tunneling via SSH (ssh -D) is super easy to detect. The government doesn't need any sophisticated analysis to tell SSH connections for tunneling from SSH connections where a human is typing into a terminal.&lt;/p&gt;
    &lt;p&gt;Countries like China have blocked SSH-based tunneling for years.&lt;/p&gt;
    &lt;p&gt;It can also block sessions based on packet sizes: a typical web browsing session involves a short HTTP request and a long HTTP response, during which the receiving end sends TCP ACKs; but if the traffic traffic mimics the above except these "ACKs" are a few dozen bytes larger than a real ACK, it knows you are tunneling over a different protocol. This is how it detects the vast majority of VPNs.&lt;/p&gt;
    &lt;p&gt;One alternative would be to set up a VPS, run VNC on it, run your browser on that to access the various web sites, and connect over an SSH tunnel to the VNC instance. Then it actually is an interactive ssh session.&lt;/p&gt;
    &lt;p&gt;15 years ago, I was using EC2 at work, and realized it was surprisingly easy to SSH into it in a way where all my traffic went through EC2. I could watch local Netflix when traveling. It was a de facto VPN.&lt;/p&gt;
    &lt;p&gt;Details are not at the top of my mind these years later, but you can probably rig something up yourself that looks like regular web dev shit and not a known commercial VPN. I think there was a preference in Firefox or something.&lt;/p&gt;
    &lt;p&gt;The issue these days is that all of the EC2 IP ranges are well known, and are usually not very high-reputation IPs, so a lot of services will block them, or at least aggressively require CAPTCHAs to prevent botting.&lt;/p&gt;
    &lt;p&gt;Source: used to work for a shady SEO company that searched Google 6,000,000 times a day on a huge farm of IPs from every provider we could find&lt;/p&gt;
    &lt;p&gt;I'm currently traveling in Uzbekistan and am surprised that wireguard as a protocol is just blocked. I use wireguard with my own server, because usually governments just block well known VPN providers and a small individual server is fine.&lt;/p&gt;
    &lt;p&gt;It's the first time I've encountered where the entire protocol is just blocked. Worth checking what is blocked and how before deciding which VPN provider to use.&lt;/p&gt;
    &lt;p&gt;A year ago I was traveling through Uzbekistan while also partly working remotely. IKEv2 VPN was blocked but thankfully I was able to switch to SSL VPN which worked fine. I didn't expect that, everything else (people, culture) in the country seemed quite open.&lt;/p&gt;
    &lt;p&gt;Well, think about it - almost every other interaction you can have with an individual in another country is mediated by government. Physical interaction? You need to get through a border and customs. Phone call? Going through their exchanges, could be blocked, easy to spy on with wiretaps. Letter mail? Many cases historically of all letters being opened before being forwarded along.&lt;/p&gt;
    &lt;p&gt;We lived through the golden age of the Internet where anyone was allowed to open a raw socket connection to anyone else, anywhere. That age is fading, now, and time may come where even sending an email to someone in Russia or China will be fraught with difficulty. Certainly encryption will be blocked.&lt;/p&gt;
    &lt;p&gt;We're going to need steganographic tech that uses AI-hallucinated content as a carrier, or something.&lt;/p&gt;
    &lt;p&gt;It's UDP, not TCP (like TLS) and has a distinguishable handshake. Wireguard is not designed as a censorship prevention tool, it's purely a networking solution.&lt;/p&gt;
    &lt;p&gt;The tunnel itself is encrypted, but the tunnel creation and existence is not obfuscated.&lt;/p&gt;
    &lt;p&gt;Something quite depressing is if we (HN crowd) find workarounds, most regular folks won't have the budget/expertise to do so, so citizen journalism will have been successfully muted by government / big media.&lt;/p&gt;
    &lt;p&gt;Don't worry, you shouldn't underestimate the capability of society.&lt;/p&gt;
    &lt;p&gt;I grew up in a pretty deprived area of the UK, and we all knew "a guy" who could get you access to free cable, or shim your electric line to bypass the meter, or get you pirated CD's and VHS' and whatever.&lt;/p&gt;
    &lt;p&gt;There will always be "that guy down the pub" selling raspberry pi's with some deranged outdated firmware that runs a proxy for everything in the house or whatever. To be honest with you, I might end up being that guy for a bunch of people once I'm laid off from tech like the rest. :)&lt;/p&gt;
    &lt;p&gt;Don't worry, you shouldn't underestimate the capability of society.&lt;/p&gt;
    &lt;p&gt;You should be worried. Don't underestimate the capabilities of the government bureaucrats. That "guys down the pub" will quickly disappear once they start getting jail time for their activities.&lt;/p&gt;
    &lt;p&gt;Yes, it's also dystopian to pin one's future on such hopes. People need to stick it to the government and demand their freedoms. Far too many things are being forced on us in the West that go against fundamental values that have been established for centuries.&lt;/p&gt;
    &lt;p&gt;Somehow, things that could be unifying protests where the working class of every political stripe are able to overlook their differences and push back against government never seem to happen. It is always polarized so that it's only ever one side at a time, and the other side is against them. How does that work?&lt;/p&gt;
    &lt;p&gt;Both the major Australian parties (Liberal and Labor) seem as spineless as each other.&lt;/p&gt;
    &lt;p&gt;They're being pushed by News Corp and Nine Entertainment [0] to crush competition (social media apps). With the soon-to-be-introduced 'internet licence' (euphemism: 'age verification'), it's working.&lt;/p&gt;
    &lt;p&gt;[0] Conglomerates News Corp and Nine Entertainment together own 90% of Australian print media, and are hugely influential in radio, digital and paid and free-to-air TV.&lt;/p&gt;
    &lt;p&gt;I guess 99% of mainstream "journalism" is irrelevant and/or inaccurate, hence citizen journalism is a 10x improvement in accuracy and relevancy! Not 10% better, 900% better! This makes a huge difference to our society as a whole and in our daily lives!&lt;/p&gt;
    &lt;p&gt;But this misses the most important point which is that the user should have the right to choose for themselves what they say and read. Making citizen journalism unduly burdensome deprives everyone of that choice.&lt;/p&gt;
    &lt;p&gt;&amp;gt;Remember it doesnt matter what the video shows, it only matters who showed it to you&lt;/p&gt;
    &lt;p&gt;In an age of mass media (where there's a video for anything) or now one step further synthetic media knowing who makes something is much more important than the content, given that what's being shown can be created on demand. Propaganda in the modern world is taking something that actually happened, and then framing it as an authentic piece of information found "on the street", twisting its context.&lt;/p&gt;
    &lt;p&gt;"what's in the video" is now largely pointless, and anyone who isn't gullible will obviously always focus on where the promoter of any material wants to direct the audiences attention to, or what they want to deflect from.&lt;/p&gt;
    &lt;p&gt;Mastodon is not easy for regimes to completely block, and most instances won't block you for using Tor. Mastodon saw a huge migration from Brazil when X was blocked there.&lt;/p&gt;
    &lt;p&gt;AmneziaWG client worked just fine with normal Wireguard servers in Egypt where official Wireguard clients doesn't, WGTunnel app on android support both protocols.&lt;/p&gt;
    &lt;p&gt;Give Obscura a try, we get around internet restrictions by using QUIC as transport, which looks like HTTP/3 and doesn't suffer from TCP-over-TCP meltdown: https://obscura.net/&lt;/p&gt;
    &lt;p&gt;Nations severing peoples connections to the world is awful. I'm so sorry for the chaos in general, and the state doing awful things both.&lt;/p&gt;
    &lt;p&gt;Go on https://lowendbox.com and get a cheap cheap cheap VPS. Use ssh SOCKS proxy in your browser to send web traffic through it.&lt;/p&gt;
    &lt;p&gt;Very unfancy, a 30+ year old solution, but uses such primitive internet basics that it will almost certainly never fail. Builtin to everything but Windows (which afaik doesn't have an ssh client built-in).&lt;/p&gt;
    &lt;p&gt;WireGuard should still work. Tons of different providers. I trust Mullvad but ProtonVPN has a free tier. If they start blocking WireGuard, check out v2ray and xray-core. If those get blocked... that means somehow they're restricting all HTTPS traffic going out of the country&lt;/p&gt;
    &lt;p&gt;AmneziaVPN has censorship circumvention options and makes it easy to set up a self hosted instance of that's what you prefer, or use their hosted service.&lt;/p&gt;
    &lt;p&gt;Folks who are looking to bypass censorship, and those who live in countries where their internet connection is not currently censored who would like to help, can look to https://snowflake.torproject.org/&lt;/p&gt;
    &lt;p&gt;Using full-blown VPNs under such environments has the disadvantage of affecting your use of domestic web services. You might want to try something like https://github.com/database64128/shadowsocks-go, which allows you to route traffic based on domain and IP geolocation rules.&lt;/p&gt;
    &lt;p&gt;Usually when countries block websites they don't block major cloud providers, like AWS and Google Cloud. Because most websites are hosted on them. So you can get a cheap VPS from AWS or GCP (always free VM is available) and host OpenVPN on it.&lt;/p&gt;
    &lt;p&gt;shadowsocks was the winner of the state of the art I had to do at work. It address the "long-term statistical analysis will often reveal a VPN connection regardless of obfuscation and masking (and this approach can be cheaper to support than DPI by a stat)" comment.&lt;/p&gt;
    &lt;p&gt;I'd recommend using Outline - it's a one click setup that lets you provision your own VPN on a cloud provider (or your own hardware).&lt;/p&gt;
    &lt;p&gt;Since you get to pick where the hardware is located and it is just you (or you and a small group of friends &amp;amp; family) using the VPN, blocking is more difficult.&lt;/p&gt;
    &lt;p&gt;If you don't want the hassle of using your own hardware you can rent a Digital Ocean droplet for &amp;lt;$5 per month.&lt;/p&gt;
    &lt;p&gt;Use the Tor browser window in Brave. It's nowhere near as anonymous as the Tor browser, but the built in ad blocking makes browsing via Tor usable. And that's what you and your compatriots are interested in.&lt;/p&gt;
    &lt;p&gt;Prepare to fill in Cloudflare captchas all day, but that's what it takes to have a bit of privacy nowadays.&lt;/p&gt;
    &lt;p&gt;there is a major protest currently happening due to the legislative body representative just giving themselves a monthly domicile stipend of ~$3300 on top of their salaries (yes, multiple), while the average people earned ~$330 monthly. the information about the protest are not broadcasted on local TVs, so the only spread of information is through social media. i guess since a lot of people went around it using VPN, the gov decided to block it too.&lt;/p&gt;
    &lt;p&gt;The official word is to counter gambling. Lately the government is not really popular after some decisions that could be interpreted as authoritative, and as citizens have spoken out about it online, causing more voices to join and protests erupting..&lt;/p&gt;
    &lt;p&gt;So well, my guess is they're trying to control it.&lt;/p&gt;
    &lt;p&gt;Set up a VM on AWS/azure/gcp/... in the desired cell, install a VPN server and done. Once you have automation in place it takes ~2 minutes to start, you can run it on demand so you can pay per minute.&lt;/p&gt;
    &lt;p&gt;Generally speaking, the general population that wants to use blocked services will develop enough technical know-how to circumvent it. The biggest risk is that there are bad actors giving malicious advice and to such learners, looking to defraud or otherwise exploit them.&lt;/p&gt;
    &lt;p&gt;All the various proxy solutions offered are good (although the simplest ones - like squid - haven't been mentioned yet). You can also use a remote desktop or even just ssh -Y me@remote-server "firefox"&lt;/p&gt;
    &lt;p&gt;I was wondering something like this but in a different capacity.&lt;/p&gt;
    &lt;p&gt;What with certain countries (they know who they are) and their hatred for encryption, it got me wondering how people would communicate securely if - for example - Signal/WhatsApp/etc. pulled out and the country wound up disconnecting the submarine cables to "keep $MORAL_PANIC_OF_THE_DAY safe."&lt;/p&gt;
    &lt;p&gt;How would people communicate securely and privately in a domestic situation like that?&lt;/p&gt;
    &lt;p&gt;include SSH traffic protocol auto-swapping on your server (i.e. no way to tell the apparent web page differs between clients), as some corporate networks are infamously invasive. People can do this all day long, and they do... =3&lt;/p&gt;
    &lt;p&gt;In countries where it comes to government blocking/censoring internet traffic, traditional media is cleared of all dissent and fully controlled long before. Last stages of that are happening in my country, Serbia, currently.&lt;/p&gt;
    &lt;p&gt;It's a mixed bag apparently, free press is technically legal since 1998 but selective prosecution and harassment of those actually uncovering issues (mainly becomes clear in the last section, "Safety")&lt;/p&gt;
    &lt;p&gt;Tried looking up Serbia next on that website but got a cloudflare block. I'm a robot now...&lt;/p&gt;
    &lt;p&gt;It's not a dumb question at all. Level on hn really got down lately if you're getting downvoted.&lt;/p&gt;
    &lt;p&gt;Think about it Aachen. If the government has enough power to censor internet traffic, that what was the first thing it censored? Which media is traditionally known for being censored or just speaking propaganda? That's the classical newspapers. It's not uncommon in authoritarian countries for editors to need state to sign off on the day's paper. And if not that, articles are signed and publishers are known. They will auto-censor to avoid problems. Just like creators on YouTube don't comment on this one country's treatment of civilians to avoid problems.&lt;/p&gt;
    &lt;p&gt;Use an Actual Private Network? Radio links that you control. Peer with someone who owns a Starlink terminal. Rent instances in GCP's Jakarta datacenter.&lt;/p&gt;
    &lt;p&gt;Outline is an open source shadowsocks client, and you provision your own server to act as the proxy. You can use it against any Shadowsocks server you want, and the protocol makes it look like regular https traffic.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45054260</guid></item><item><title>Uncertain&lt;T&gt;</title><link>https://nshipster.com/uncertainty/</link><description>&lt;doc fingerprint="e5f3d11d29e56096"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Uncertain⟨T⟩&lt;/head&gt;
    &lt;p&gt;You know what’s wrong with people? They’re too sure of themselves.&lt;/p&gt;
    &lt;p&gt;Better to be wrong and own it than be right with caveats. Hard to build a personal brand out of nuance these days. People are attracted to confidence — however misplaced.&lt;/p&gt;
    &lt;p&gt;But can you blame them? (People, that is) Working in software, the most annoying part of reaching Senior level is having to say “it depends” all the time. Much more fun getting to say “let’s ship it and iterate” as Staff or “that won’t scale” as a Principal.&lt;/p&gt;
    &lt;p&gt;Yet, for all of our intellectual humility, why do we &lt;del&gt;write&lt;/del&gt; vibe code like this?&lt;/p&gt;
    &lt;code&gt;if current&lt;/code&gt;
    &lt;p&gt;GPS coordinates aren’t exact. They’re noisy. They’re approximate. They’re probabilistic. That &lt;code&gt;horizontal&lt;/code&gt; property tucked away in your &lt;code&gt;CLLocation&lt;/code&gt; object
              is trying to tell you something important:
              you’re probably within that radius.
              Probably.&lt;/p&gt;
    &lt;p&gt;A &lt;code&gt;Bool&lt;/code&gt;, meanwhile, can be only &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.
              That &lt;code&gt;if&lt;/code&gt; statement needs to make a choice one way or another,
              but code like this doesn’t capture the uncertainty of the situation.
              If truth is light,
              then current programming models collapse the wavefunction too early.&lt;/p&gt;
    &lt;head rend="h2"&gt;Picking the Right Abstraction&lt;/head&gt;
    &lt;p&gt;In 2014, researchers at the University of Washington and Microsoft Research proposed a radical idea: What if uncertainty were encoded directly into the type system? Their paper, Uncertain&amp;lt;T&amp;gt;: A First-Order Type for Uncertain Data introduced a probabilistic programming approach that’s both mathematically rigorous and surprisingly practical.&lt;/p&gt;
    &lt;p&gt;As you’d expect for something from Microsoft in the 2010s, the paper is implemented in C#. But the concepts translate beautifully to Swift.&lt;/p&gt;
    &lt;p&gt;You can find my port on GitHub:&lt;/p&gt;
    &lt;code&gt;import Uncertain
import Core&lt;/code&gt;
    &lt;p&gt;When you compare two &lt;code&gt;Uncertain&lt;/code&gt; values,
              you don’t get a definitive &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;.
              You get an &lt;code&gt;Uncertain&amp;lt;Bool&amp;gt;&lt;/code&gt; that represents the probability of the comparison being &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;The same is true for other operators, too:&lt;/p&gt;
    &lt;code&gt;// How fast did we run around the track?
let distance: Double = 400 // meters
let time: Uncertain&amp;lt;Double&amp;gt; = .normal(mean: 60, standard&lt;/code&gt;
    &lt;p&gt;This code builds a computation graph, sampling only when you ask for concrete results. The library uses Sequential Probability Ratio Testing (SPRT) to efficiently determine how many samples are needed — maybe a few dozen times for simple comparisons, scaling up automatically for complex calculations.&lt;/p&gt;
    &lt;code&gt;// Sampling happens only when we need to evaluate
if ~(running&lt;/code&gt;
    &lt;p&gt;Using an abstraction like &lt;code&gt;Uncertain&amp;lt;T&amp;gt;&lt;/code&gt; forces you to deal with uncertainty as a first-class concept
              rather than pretending it doesn’t exist.
              And in doing so, you end up with much smarter code.&lt;/p&gt;
    &lt;p&gt;To quote Alan Kay:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Point of view is worth 80 IQ points Alan Kay&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Before we dive deeper into probability distributions, let’s take a detour to Monaco and talk about Monte Carlo sampling.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Monte Carlo Method&lt;/head&gt;
    &lt;p&gt;Behold, a classic slot machine (or “fruit machine” for our UK readers 🇬🇧):&lt;/p&gt;
    &lt;code&gt;enum Slot&lt;/code&gt;
    &lt;p&gt;Should we play it?&lt;/p&gt;
    &lt;p&gt;Now, we could work out these probabilities analytically — counting combinations, calculating conditional probabilities, maybe even busting out some combinatorics.&lt;/p&gt;
    &lt;p&gt;Or we could just let the computer pull the lever a bunch and see what happens.&lt;/p&gt;
    &lt;code&gt;let expected&lt;/code&gt;
    &lt;p&gt;At least we know one thing for certain: The house always wins.&lt;/p&gt;
    &lt;head rend="h2"&gt;Beyond Simple Distributions&lt;/head&gt;
    &lt;p&gt;While one-armed bandits demonstrate pure randomness, real-world applications often deal with more predictable uncertainty.&lt;/p&gt;
    &lt;p&gt;&lt;code&gt;Uncertain&amp;lt;T&amp;gt;&lt;/code&gt; provides a
              rich set of probability distributions:&lt;/p&gt;
    &lt;code&gt;// Modeling sensor noise
let raw&lt;/code&gt;
    &lt;p&gt;&lt;code&gt;Uncertain&amp;lt;T&amp;gt;&lt;/code&gt; also provides comprehensive
            statistical operations:&lt;/p&gt;
    &lt;code&gt;// Basic statistics
let temperature = Uncertain.normal(mean: 23.0, standard&lt;/code&gt;
    &lt;p&gt;The statistics are computed through sampling. The number of samples is configurable, letting you trade computation time for accuracy.&lt;/p&gt;
    &lt;head rend="h2"&gt;Putting Theory to Practice&lt;/head&gt;
    &lt;p&gt;Users don’t notice when things work correctly, but they definitely notice impossible behavior. When your running app claims they just sprinted at 45 mph, or your IRL meetup app shows someone 500 feet away when GPS accuracy is ±1000 meters, that’s a bad look 🤡&lt;/p&gt;
    &lt;p&gt;So where do we go from here? Let’s channel our Senior+ memes from before for guidance.&lt;/p&gt;
    &lt;p&gt;That Staff engineer saying “let’s ship it and iterate” is right about the incremental approach. You can migrate uncertain calculations piecemeal rather than rewriting everything at once:&lt;/p&gt;
    &lt;code&gt;extension CLLocation {
    var uncertain: Uncertain&amp;lt;CLLocation&amp;gt; {
        Uncertain&amp;lt;CLLocation&amp;gt;.from(self)
    }
}

// Gradually migrate critical paths
let is&lt;/code&gt;
    &lt;p&gt;And we should consider the Principal engineer’s warning of “that won’t scale”. Sampling has a cost, and you should understand the computational overhead for probabilistic accuracy:&lt;/p&gt;
    &lt;code&gt;// Fast approximation for UI updates
let quick&lt;/code&gt;
    &lt;p&gt;Start small. Pick one feature where GPS glitches cause user complaints. Replace your distance calculations with uncertain versions. Measure the impact.&lt;/p&gt;
    &lt;p&gt;Remember: the goal isn’t to eliminate uncertainty — it’s to acknowledge that it exists and handle it gracefully. Because in the real world, nothing is certain except uncertainty itself.&lt;/p&gt;
    &lt;p&gt;And perhaps, with better tools, we can finally stop pretending otherwise.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45054703</guid></item><item><title>VLT observations of interstellar comet 3I/ATLAS II</title><link>https://arxiv.org/abs/2508.18382</link><description>&lt;doc fingerprint="8c5c24084cb3d6af"&gt;
  &lt;main&gt;&lt;head rend="h1"&gt;Astrophysics &amp;gt; Solar and Stellar Astrophysics&lt;/head&gt;&lt;p&gt; [Submitted on 25 Aug 2025]&lt;/p&gt;&lt;head rend="h1"&gt;Title:VLT observations of interstellar comet 3I/ATLAS II. From quiescence to glow: Dramatic rise of Ni I emission and incipient CN outgassing at large heliocentric distances&lt;/head&gt;View PDF HTML (experimental)&lt;quote&gt;Abstract:We report VLT spectroscopy of the interstellar comet 3I/ATLAS (C/2025 N1) from $r_{\rm h}\!\simeq\!4.4$ to $2.85$ au using X-shooter (300-550 nm, $R\!\simeq\!3000$) and UVES (optical, $R\!\simeq\!35k-80k$). The coma is dust-dominated with a fairly constant red optical continuum slope ($\sim$21-22\%/1000Å). At $r_{\rm h}\!\simeq\!3.17$ au we derive $3\sigma$ limits of $Q({\rm OH})&amp;lt;7.76\times10^{23}\ {\rm s^{-1}}$, but find no indications for [O I], C$_2$, C$_3$ or NH$_2$. We report detection of CN emission and also detect numerous Ni I lines while Fe I remains undetected, potentially implying efficiently released gas-phase Ni. From our latest X-shooter measurements conducted on 2025-08-21 ($r_{\rm h} = 2.85$\,au) we measure production rates of $\log~Q(\mathrm{CN}) = 23.61\pm 0.05$ molecules s$^{-1}$ and $\log~Q$(Ni) $= 22.67\pm0.07$ atoms s$^{-1}$, and characterize their evolution as the comet approaches perihelion. We observe a steep heliocentric-distance scaling for the production rates $Q(\mathrm{Ni}) \propto r_h^{-8.43 \pm 0.79}$ and for $Q(\mathrm{CN}) \propto r_h^{-9.38 \pm 1.2}$, and predict a Ni-CO$_{(2)}$ correlation if the Ni I emission is driven by the carbonyl formation channel. Energetic considerations of activation barriers show that this behavior is inconsistent with direct sublimation of canonical metal/sulfide phases and instead favors low-activation-energy release from dust, e.g. photon-stimulated desorption or mild thermolysis of metalated organics or Ni-rich nanophases, possibly including Ni-carbonyl-like complexes. These hypotheses are testable with future coordinated ground-based and space-based monitoring as 3I becomes more active during its continued passage through the solar system.&lt;/quote&gt;&lt;p&gt; Current browse context: &lt;/p&gt;&lt;p&gt;astro-ph.SR&lt;/p&gt;&lt;p&gt; Change to browse by: &lt;/p&gt;&lt;head rend="h3"&gt;References &amp;amp; Citations&lt;/head&gt;&lt;p&gt; export BibTeX citation Loading... &lt;/p&gt;&lt;head rend="h1"&gt;Bibliographic and Citation Tools&lt;/head&gt;&lt;p&gt; Bibliographic Explorer (What is the Explorer?) &lt;/p&gt;&lt;p&gt; Connected Papers (What is Connected Papers?) &lt;/p&gt;&lt;p&gt; Litmaps (What is Litmaps?) &lt;/p&gt;&lt;p&gt; scite Smart Citations (What are Smart Citations?) &lt;/p&gt;&lt;head rend="h1"&gt;Code, Data and Media Associated with this Article&lt;/head&gt;&lt;p&gt; alphaXiv (What is alphaXiv?) &lt;/p&gt;&lt;p&gt; CatalyzeX Code Finder for Papers (What is CatalyzeX?) &lt;/p&gt;&lt;p&gt; DagsHub (What is DagsHub?) &lt;/p&gt;&lt;p&gt; Gotit.pub (What is GotitPub?) &lt;/p&gt;&lt;p&gt; Hugging Face (What is Huggingface?) &lt;/p&gt;&lt;p&gt; Papers with Code (What is Papers with Code?) &lt;/p&gt;&lt;p&gt; ScienceCast (What is ScienceCast?) &lt;/p&gt;&lt;head rend="h1"&gt;Demos&lt;/head&gt;&lt;head rend="h1"&gt;Recommenders and Search Tools&lt;/head&gt;&lt;p&gt; Influence Flower (What are Influence Flowers?) &lt;/p&gt;&lt;p&gt; CORE Recommender (What is CORE?) &lt;/p&gt;&lt;p&gt; IArxiv Recommender (What is IArxiv?) &lt;/p&gt;&lt;head rend="h1"&gt;arXivLabs: experimental projects with community collaborators&lt;/head&gt;&lt;p&gt;arXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.&lt;/p&gt;&lt;p&gt;Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.&lt;/p&gt;&lt;p&gt;Have an idea for a project that will add value for arXiv's community? Learn more about arXivLabs.&lt;/p&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45055335</guid></item><item><title>Building your own CLI coding agent with Pydantic-AI</title><link>https://martinfowler.com/articles/build-own-coding-agent.html</link><description>&lt;doc fingerprint="5494c4536b9188be"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Building your own CLI Coding Agent with Pydantic-AI&lt;/head&gt;
    &lt;p&gt;Learning by doing&lt;/p&gt;
    &lt;p&gt;CLI coding agents are a fundamentally different tool to chatbots or autocomplete tools - they're agents that can read code, run tests, and update a codebase. While commercial tools are impressive, they don't understand the particular context of our environment and the eccentricities of our specific project. Instead we can build our own coding agent by assembling open source tools, using our specific development standards for: testing, documentation production, code reasoning, and file system operations.&lt;/p&gt;
    &lt;p&gt;27 August 2025&lt;/p&gt;
    &lt;head rend="h2"&gt;Contents&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;The wave of CLI Coding Agents&lt;/item&gt;
      &lt;item&gt;Why Build When You Can Buy?&lt;/item&gt;
      &lt;item&gt;The Architecture of Our Development Agent&lt;/item&gt;
      &lt;item&gt;Starting Simple: The Foundation&lt;/item&gt;
      &lt;item&gt;First Capability: Testing!&lt;/item&gt;
      &lt;item&gt;Adding Intelligence: Instructions and intent&lt;/item&gt;
      &lt;item&gt;The MCP Revolution: Pluggable Capabilities&lt;/item&gt;
      &lt;item&gt;Sandboxed Python Execution&lt;/item&gt;
      &lt;item&gt;Up-to-Date library Documentation&lt;/item&gt;
      &lt;item&gt;AWS MCPs&lt;/item&gt;
      &lt;item&gt;Internet Search for Current Information&lt;/item&gt;
      &lt;item&gt;Structured Problem Solving&lt;/item&gt;
      &lt;item&gt;Optimising for Reasoning&lt;/item&gt;
      &lt;item&gt;Desktop Commander: Warning! With great power comes great responsibility!&lt;/item&gt;
      &lt;item&gt;The Complete System&lt;/item&gt;
      &lt;item&gt;What We Learned About CLI Agents&lt;/item&gt;
      &lt;item&gt;The Road Ahead&lt;/item&gt;
      &lt;item&gt;Why This Matters&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;The wave of CLI Coding Agents&lt;/head&gt;
    &lt;p&gt;If you have tried Claude Code, Gemini Code, Open Code or Simon Willison’s LLM CLI, you’ve experienced something fundamentally different from ChatGPT or Github Copilot. These aren’t just chatbots or autocomplete tools - they’re agents that can read your code, run your tests, search docs and make changes to your codebase async.&lt;/p&gt;
    &lt;p&gt;But how do they work? For me the best way to understand how any tool works is to try and build it myself. So that’s exactly what we did, and in this article I’ll take you through how we built our own CLI Coding Agent using the Pydantic-AI framework and the Model Context Protocol (MCP). You’ll see not just how to assemble the pieces but why each capability matters and how it changes the way you can work with code.&lt;/p&gt;
    &lt;p&gt;Our implementation leverages AWS Bedrock but with Pydantic-AI you could easily use any other mainstream provider or even a fully local LLM.&lt;/p&gt;
    &lt;head rend="h2"&gt;Why Build When You Can Buy?&lt;/head&gt;
    &lt;p&gt;Before diving into the technical implementation, let's examine why we chose to build our own solution.&lt;/p&gt;
    &lt;p&gt;The answer became clear very quickly using our custom agent, while commercial tools are impressive, they’re built for general use cases. Our agent was fully customised to our internal context and all the little eccentricities of our specific project. More importantly, building it gave us insights into how these systems work and the quality of our own GenAI Platform and Dev Tooling.&lt;/p&gt;
    &lt;p&gt;Think of it like learning to cook. You can eat at restaurants forever but understanding how flavours combine and techniques work makes you appreciate food differently - and lets you create exactly what you want.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Architecture of Our Development Agent&lt;/head&gt;
    &lt;p&gt;At a high level, our coding assistant consists of several key components:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Core AI Model: Claude from Anthropic accessed through AWS Bedrock&lt;/item&gt;
      &lt;item&gt;Pydantic-AI Framework: provides the agent framework and many helpful utilities to make our Agent more useful immediately&lt;/item&gt;
      &lt;item&gt;MCP Servers: independent processes that give the agent specialised tools, MCP is a common standard for defining the servers that contain these tools.&lt;/item&gt;
      &lt;item&gt;CLI Interface: how users interact with the assistant&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The magic happens through the Model Context Protocol (MCP), which allows the AI model to use various tools through a standardized interface. This architecture makes our assistant highly extensible - we can easily add new capabilities by implementing additional MCP servers, but we’re getting ahead of ourselves.&lt;/p&gt;
    &lt;head rend="h2"&gt;Starting Simple: The Foundation&lt;/head&gt;
    &lt;p&gt;We started by creating a basic project structure and installing the necessary dependencies:&lt;/p&gt;
    &lt;quote&gt;uv init uv add pydantic_ai uv add boto3&lt;/quote&gt;
    &lt;p&gt;Our primary dependencies include:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;pydantic-ai&lt;/code&gt;: Framework for building AI agents&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;boto3&lt;/code&gt;: For AWS API interactions&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;We chose Claude Sonnet 4 from Anthropic (accessed via AWS Bedrock) as our foundation model due to its strong code understanding and generation capabilities. Here's how we configured it in our &lt;code&gt;main.py&lt;/code&gt;:&lt;/p&gt;
    &lt;quote&gt;import boto3 from pydantic_ai import Agent from pydantic_ai.mcp import MCPServerStdio from pydantic_ai.models.bedrock import BedrockConverseModel from pydantic_ai.providers.bedrock import BedrockProvider&lt;/quote&gt;
    &lt;quote&gt;bedrock_config = BotocoreConfig( read_timeout=300, connect_timeout=60, retries={"max_attempts": 3}, ) bedrock_client = boto3.client( "bedrock-runtime", region_name="eu-central-1", config=bedrock_config ) model = BedrockConverseModel( "eu.anthropic.claude-sonnet-4-20250514-v1:0", provider=BedrockProvider(bedrock_client=bedrock_client), ) agent = Agent( model=model, )&lt;/quote&gt;
    &lt;quote&gt;if __name__ == "__main__": agent.to_cli_sync()&lt;/quote&gt;
    &lt;p&gt;At this stage we already have a fully working CLI with a chat interface which we can use as you would a GUI chat interface, which is pretty cool for how little code this is! However we can definitely improve upon this.&lt;/p&gt;
    &lt;head rend="h2"&gt;First Capability: Testing!&lt;/head&gt;
    &lt;p&gt;Instead of running the tests ourselves after each coding iteration why not get the agent to do it? Seems simple right?&lt;/p&gt;
    &lt;quote&gt;import subprocess&lt;/quote&gt;
    &lt;quote&gt;@agent.tool_plain() def run_unit_tests() -&amp;gt; str: """Run unit tests using uv.""" result = subprocess.run( ["uv", "run", "pytest", "-xvs", "tests/"], capture_output=True, text=True ) return result.stdout&lt;/quote&gt;
    &lt;p&gt;Here we use the same pytest command you would run in the terminal (I’ve shortened ours for the article). Now something magical happened. I could say “X isn’t working” and the agent would:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;1. Run the test suite&lt;/item&gt;
      &lt;item&gt;2. Identify which specific tests were failing&lt;/item&gt;
      &lt;item&gt;3. Analyze the error messages&lt;/item&gt;
      &lt;item&gt;4. Suggest targeted fixes.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The workflow change: Instead of staring at test failures or copy pasting terminal outputs into ChatGPT we now give our agent super relevant context about any issues in our codebase.&lt;/p&gt;
    &lt;p&gt;However we noticed our agent sometimes “fixed” failing tests by suggesting changes to the tests, not the actual implementation. This led to our next addition.&lt;/p&gt;
    &lt;head rend="h2"&gt;Adding Intelligence: Instructions and intent&lt;/head&gt;
    &lt;p&gt;We realised we needed to teach our agent a little more about our development philosophy and steer it away from bad behaviours.&lt;/p&gt;
    &lt;quote&gt;instructions = """ You are a specialised agent for maintaining and developing the XXXXXX codebase. ## Development Guidelines: 1. **Test Failures:** - When tests fail, fix the implementation first, not the tests - Tests represent expected behavior; implementation should conform to tests - Only modify tests if they clearly don't match specifications 2. **Code Changes:** - Make the smallest possible changes to fix issues - Focus on fixing the specific problem rather than rewriting large portions - Add unit tests for all new functionality before implementing it 3. **Best Practices:** - Keep functions small with a single responsibility - Implement proper error handling with appropriate exceptions - Be mindful of configuration dependencies in tests Remember to examine test failure messages carefully to understand the root cause before making any changes. """&lt;/quote&gt;
    &lt;quote&gt;agent = Agent( instructions=instructions, model=model, )&lt;/quote&gt;
    &lt;p&gt;The workflow change: The agent now understands our values around Test Driven Development and minimal changes. It stopped suggesting large refactors where a small fix would do (Mostly).&lt;/p&gt;
    &lt;p&gt;Now while we could continue building everything from absolute scratch and tweaking our prompts for days we want to go fast and use some tools other people have built - Enter Model Context Protocol (MCP).&lt;/p&gt;
    &lt;head rend="h2"&gt;The MCP Revolution: Pluggable Capabilities&lt;/head&gt;
    &lt;p&gt;This is where our agent transformed from a helpful assistant to something approaching the commercial CLI agents. The Model Context Protocol (MCP) allows us to add sophisticated capabilities by running specialized servers.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;MCP is an open protocol that standardizes how applications provide context to LLMs. Think of MCP like a USB-C port for AI applications. Just as USB-C provides a standardized way to connect your devices to various peripherals and accessories, MCP provides a standardized way to connect AI models to different data sources and tools.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;We can run these servers as a local process, so no data sharing, where we interact with STDIN/STDOUT to keep things simple and local. (More details on tools and MCP)&lt;/p&gt;
    &lt;head rend="h2"&gt;Sandboxed Python Execution&lt;/head&gt;
    &lt;p&gt;Using large language models to do calculations or executing arbitrary code they create is not effective and potentially very dangerous! To make our Agent more accurate and safe our first MCP addition was Pydantic Al’s default server for sandboxed Python code execution:&lt;/p&gt;
    &lt;quote&gt;run_python = MCPServerStdio( "deno", args=[ "run", "-N", "-R=node_modules", "-W=node_modules", "--node-modules-dir=auto", "jsr:@pydantic/mcp-run-python", "stdio", ], )&lt;/quote&gt;
    &lt;quote&gt;agent = Agent( ... mcp_servers=[ run_python ], )&lt;/quote&gt;
    &lt;p&gt;This gave our agent a sandbox where it could test ideas, prototype solutions, and verify its own suggestions.&lt;/p&gt;
    &lt;p&gt;NOTE: This is very different from running the tests where we need the local environment and is intended to be used to make calculations much more robust. This is because writing the code to output a number and then executing that code is much more reliable and understandable, scalable and repeatable than just generating the next token in a calculation. We have seen from frontier labs (including their leaked instructions) that this is a much better approach.&lt;/p&gt;
    &lt;p&gt;The workflow change: Doing calculations, even more complex ones, became significantly more reliable. This is useful for many things like dates, sums, counts etc. It also allows for a rapid iteration cycle of simple python code.&lt;/p&gt;
    &lt;head rend="h2"&gt;Up-to-Date library Documentation&lt;/head&gt;
    &lt;p&gt;LLMs are mostly trained in batch on historical data this gives a fixed cutoff while languages and dependencies continue to change and improve so we added Context7 for access to up to date python library documentation in LLM consumable format:&lt;/p&gt;
    &lt;quote&gt;context7 = MCPServerStdio( command="npx", args=["-y", "@upstash/context7-mcp"], tool_prefix="context" )&lt;/quote&gt;
    &lt;p&gt;The workflow change: When working with newer libraries or trying to use advanced features, the agent could look up current documentation rather than relying on potentially outdated training data. This made it much more reliable for real-world development work.&lt;/p&gt;
    &lt;head rend="h2"&gt;AWS MCPs&lt;/head&gt;
    &lt;p&gt;Since this particular agent was built with an AWS platform in mind, we added the AWS Labs MCP servers for comprehensive cloud docs and integration:&lt;/p&gt;
    &lt;quote&gt;awslabs = MCPServerStdio( command="uvx", args=["awslabs.core-mcp-server@latest"], env={"FASTMCP_LOG_LEVEL": "ERROR"}, tool_prefix="awslabs", ) aws_docs = MCPServerStdio( command="uvx", args=["awslabs.aws-documentation-mcp-server@latest"], env={"FASTMCP_LOG_LEVEL": "ERROR", "AWS_DOCUMENTATION_PARTITION": "aws"}, tool_prefix="aws_docs", )&lt;/quote&gt;
    &lt;p&gt;The workflow change: Now when I mentioned âBedrock is timing outâ or âthe model responses are getting truncated,â the agent could directly access AWS documentation to help troubleshoot configuration issues. While we've only scratched the surface with these two servers, this is the tip of the iceberg—the AWS Labs MCP collection includes servers for CloudWatch metrics, Lambda debugging, IAM policy analysis, and much more. Even with just documentation access, cloud debugging became more conversational and contextual.&lt;/p&gt;
    &lt;head rend="h2"&gt;Internet Search for Current Information&lt;/head&gt;
    &lt;p&gt;Sometimes you need information that's not in any documentation—recent Stack Overflow discussions, GitHub issues, or the latest best practices. We added general internet search:&lt;/p&gt;
    &lt;quote&gt;internet_search = MCPServerStdio(command="uvx", args=["duckduckgo-mcp-server"])&lt;/quote&gt;
    &lt;p&gt;The workflow change: When encountering obscure errors or needing to understand recent changes in the ecosystem, the agent could search for current discussions and solutions. This was particularly valuable for debugging deployment issues or understanding breaking changes in dependencies.&lt;/p&gt;
    &lt;head rend="h2"&gt;Structured Problem Solving&lt;/head&gt;
    &lt;p&gt;One of the most valuable additions was the code reasoning MCP, which helps the agent think through complex problems systematically:&lt;/p&gt;
    &lt;quote&gt;code_reasoning = MCPServerStdio( command="npx", args=["-y", "@mettamatt/code-reasoning"], tool_prefix="code_reasoning", )&lt;/quote&gt;
    &lt;p&gt;The workflow change: Instead of jumping to solutions, the agent would break down complex problems into logical steps, explore alternative approaches, and explain its reasoning. This was invaluable for architectural decisions and debugging complex issues. I could ask âWhy is this API call failing intermittently?â and get a structured analysis of potential causes rather than just guesses.&lt;/p&gt;
    &lt;head rend="h2"&gt;Optimising for Reasoning&lt;/head&gt;
    &lt;p&gt;As we added more sophisticated capabilities, we noticed that reasoning and analysis tasks often took much longer than regular text generation—especially when the output wasn't correctly formatted on the first try. We adjusted our Bedrock configuration to be more patient:&lt;/p&gt;
    &lt;quote&gt;bedrock_config = BotocoreConfig( read_timeout=300, connect_timeout=60, retries={"max_attempts": 3}, ) bedrock_client = boto3.client( "bedrock-runtime", region_name="eu-central-1", config=bedrock_config )&lt;/quote&gt;
    &lt;p&gt;The workflow change: The longer timeouts meant our agent could work through complex problems without timing out. When analyzing large codebases or reasoning through intricate architectural decisions, the agent could take the time needed to provide thorough, well-reasoned responses rather than rushing to incomplete solutions.&lt;/p&gt;
    &lt;head rend="h2"&gt;Desktop Commander: Warning! With great power comes great responsibility!&lt;/head&gt;
    &lt;p&gt;At this point, our agent was already quite capable—it could reason through problems, execute code, search for information, and access AWS documentation. This MCP server transforms your agent from a helpful assistant into something that can actually do things in your development environment:&lt;/p&gt;
    &lt;quote&gt;desktop_commander = MCPServerStdio( command="npx", args=["-y", "@wonderwhy-er/desktop-commander"], tool_prefix="desktop_commander", )&lt;/quote&gt;
    &lt;p&gt;Desktop Commander provides an incredibly comprehensive toolkit: file system operations (read, write, search), terminal command execution with process management, surgical code editing with &lt;code&gt;edit_block&lt;/code&gt;, and even
      interactive REPL sessions. It's built on top of the MCP Filesystem Server
      but adds crucial capabilities like search-and-replace editing and
      intelligent process control.&lt;/p&gt;
    &lt;p&gt;The workflow change: This is where everything came together. I could now say âThe authentication tests are failing, please fix the issueâ and the agent would:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;1. Run the test suite to see the specific failures&lt;/item&gt;
      &lt;item&gt;2. Read the failing test files to understand what was expected&lt;/item&gt;
      &lt;item&gt;3. Examine the authentication module code&lt;/item&gt;
      &lt;item&gt;4. Search the codebase for related patterns&lt;/item&gt;
      &lt;item&gt;5. Look up the documentation for the relevant library&lt;/item&gt;
      &lt;item&gt;6. Make edits to fix the implementation&lt;/item&gt;
      &lt;item&gt;7. Re-run the tests to verify the fix&lt;/item&gt;
      &lt;item&gt;8. Search for similar patterns elsewhere that might need updating&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;All of this happened in a single conversation thread, with the agent maintaining context throughout. It wasn't just generating code suggestions—it was actively debugging, editing, and verifying fixes like a pair programming partner.&lt;/p&gt;
    &lt;p&gt;The security model is thoughtful too, with configurable allowed directories, blocked commands, and proper permission boundaries. You can learn more about its extensive capabilities at the Desktop Commander documentation.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Complete System&lt;/head&gt;
    &lt;p&gt;Here's our final agent configuration:&lt;/p&gt;
    &lt;quote&gt;import asyncio import subprocess import boto3 from pydantic_ai import Agent from pydantic_ai.mcp import MCPServerStdio from pydantic_ai.models.bedrock import BedrockConverseModel from pydantic_ai.providers.bedrock import BedrockProvider from botocore.config import Config as BotocoreConfig bedrock_config = BotocoreConfig( read_timeout=300, connect_timeout=60, retries={"max_attempts": 3}, ) bedrock_client = boto3.client( "bedrock-runtime", region_name="eu-central-1", config=bedrock_config ) model = BedrockConverseModel( "eu.anthropic.claude-sonnet-4-20250514-v1:0", provider=BedrockProvider(bedrock_client=bedrock_client), ) agent = Agent( model=model, ) instructions = """ You are a specialised agent for maintaining and developing the XXXXXX codebase. ## Development Guidelines: 1. **Test Failures:** - When tests fail, fix the implementation first, not the tests - Tests represent expected behavior; implementation should conform to tests - Only modify tests if they clearly don't match specifications 2. **Code Changes:** - Make the smallest possible changes to fix issues - Focus on fixing the specific problem rather than rewriting large portions - Add unit tests for all new functionality before implementing it 3. **Best Practices:** - Keep functions small with a single responsibility - Implement proper error handling with appropriate exceptions - Be mindful of configuration dependencies in tests Remember to examine test failure messages carefully to understand the root cause before making any changes. """ run_python = MCPServerStdio( "deno", args=[ "run", "-N", "-R=node_modules", "-W=node_modules", "--node-modules-dir=auto", "jsr:@pydantic/mcp-run-python", "stdio", ], ) internet_search = MCPServerStdio(command="uvx", args=["duckduckgo-mcp-server"]) code_reasoning = MCPServerStdio( command="npx", args=["-y", "@mettamatt/code-reasoning"], tool_prefix="code_reasoning", ) desktop_commander = MCPServerStdio( command="npx", args=["-y", "@wonderwhy-er/desktop-commander"], tool_prefix="desktop_commander", ) awslabs = MCPServerStdio( command="uvx", args=["awslabs.core-mcp-server@latest"], env={"FASTMCP_LOG_LEVEL": "ERROR"}, tool_prefix="awslabs", ) aws_docs = MCPServerStdio( command="uvx", args=["awslabs.aws-documentation-mcp-server@latest"], env={"FASTMCP_LOG_LEVEL": "ERROR", "AWS_DOCUMENTATION_PARTITION": "aws"}, tool_prefix="aws_docs", ) context7 = MCPServerStdio( command="npx", args=["-y", "@upstash/context7-mcp"], tool_prefix="context" ) agent = Agent( instructions=instructions, model=model, mcp_servers=[ run_python, internet_search, code_reasoning, context7, awslabs, aws_docs, desktop_commander, ], ) @agent.tool_plain() def run_unit_tests() -&amp;gt; str: """Run unit tests using uv.""" result = subprocess.run( ["uv", "run", "pytest", "-xvs", "tests/"], capture_output=True, text=True ) return result.stdout async def main(): async with agent.run_mcp_servers(): await agent.to_cli() if __name__ == "__main__": asyncio.run(main())&lt;/quote&gt;
    &lt;p&gt;How it changes our workflow:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Debugging becomes collaborative: you have an intelligent partner that can analyze error messages, suggest hypotheses, and help test solutions.&lt;/item&gt;
      &lt;item&gt;Learning accelerates: when working with unfamiliar libraries or patterns, the agent can explain existing code, suggest improvements, and teach you why certain approaches work better.&lt;/item&gt;
      &lt;item&gt;Context switching reduces: rather than jumping between documentation, Stack Overflow, AWS Console, and your IDE, you have a single interface that can access all these resources while maintaining context about your specific problem.&lt;/item&gt;
      &lt;item&gt;Problem-solving becomes structured: rather than jumping to solutions, the agent can break down complex issues into logical steps, explore alternatives, and explain its reasoning. Like having a real life talking rubber duck!&lt;/item&gt;
      &lt;item&gt;Code review improves: the agent can review your changes, spot potential issues, and suggest improvements before you commit—like having a senior developer looking over your shoulder.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;What We Learned About CLI Agents&lt;/head&gt;
    &lt;p&gt;Building our own agent revealed several insights about this emerging paradigm:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;MCP is (almost) all you need: the magic isn't in any single capability, but in how they work together. The agent that can run tests, read files, search documentation, execute code, access AWS services, and reason through problems systematically becomes qualitatively different from one that can only do any single task.&lt;/item&gt;
      &lt;item&gt;Current information is crucial: having access to real-time search and up-to-date documentation makes the agent much more reliable for real-world development work where training data might be outdated.&lt;/item&gt;
      &lt;item&gt;Structured thinking matters: the code reasoning capability transforms the agent from a clever autocomplete into a thinking partner that can break down complex problems and explore alternative solutions.&lt;/item&gt;
      &lt;item&gt;Context is king: commercial agents like Claude Code are impressive partly because they maintain context across all these different tools. Your agent needs to remember what it learned from the test run when it's making file changes.&lt;/item&gt;
      &lt;item&gt;Specialisation matters: our agent works better for our specific codebase than general-purpose tools because it understands our patterns, conventions, and tool preferences. If it falls short in any area then we can go and make the required changes.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;The Road Ahead&lt;/head&gt;
    &lt;p&gt;The CLI agent paradigm is still evolving rapidly. Some areas we're exploring:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;AWS-specific tooling: the AWS Labs MCP servers (https://awslabs.github.io/mcp/) provide incredible depth for cloud-native development—from CloudWatch metrics to Lambda debugging to IAM policy analysis.&lt;/item&gt;
      &lt;item&gt;Workflow Enhancements: teaching the agent our common development workflows so it can handle routine tasks end-to-end. Connecting the agent to our project management tools so it can understand priorities and coordinate with team processes.&lt;/item&gt;
      &lt;item&gt;Benchmarking: Terminal Bench looks like a great dataset and leaderboard to test this toy agent against the big boys!&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Why This Matters&lt;/head&gt;
    &lt;p&gt;CLI coding agents represent a fundamental shift from AI as a writing assistant to AI as a development partner. Unlike Copilot's autocomplete or ChatGPT's Q&amp;amp;A, these agents can:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Understand your entire project context&lt;/item&gt;
      &lt;item&gt;Execute tasks across multiple tools&lt;/item&gt;
      &lt;item&gt;Maintain state across complex workflows&lt;/item&gt;
      &lt;item&gt;Learn from your specific codebase and patterns&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Building one yourself—even a simple version—gives you insights into where this technology is heading and how to make the most of commercial tools when they arrive.&lt;/p&gt;
    &lt;p&gt;The future of software development isn't just about writing code faster. It's about having an intelligent partner that understands your goals, your constraints, and your codebase well enough to help you think through problems and implement solutions collaboratively.&lt;/p&gt;
    &lt;p&gt;And the best way to understand that future? Build it yourself.&lt;/p&gt;
    &lt;head&gt;Significant Revisions&lt;/head&gt;
    &lt;p&gt;27 August 2025: published&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45055439</guid></item><item><title>Some thoughts on LLMs and software development</title><link>https://martinfowler.com/articles/202508-ai-thoughts.html</link><description>&lt;doc fingerprint="192b3375fcf305ad"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Some thoughts on LLMs and Software Development&lt;/head&gt;
    &lt;p&gt;Iâm about to head away from looking after this site for a few weeks (part vacation, part work stuff). As I contemplate some weeks away from the daily routine, I feel an urge to share some scattered thoughts about the state of LLMs and AI.&lt;/p&gt;
    &lt;p&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â âÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â âÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â âÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â â&lt;/p&gt;
    &lt;p&gt;Iâve seen a few early surveys on the effect AI is having on software development, is it really speeding folks up, does it improve or wreck code quality? One of the big problems with these surveys is that they arenât taking into account how people are using the LLMs. From what I can tell the vast majority of LLM usage is fancy auto-complete, often using co-pilot. But those I know who get the most value from LLMs reckon that auto-complete isnât very useful, preferring approaches that allow the LLM to directly read and edit source code files to carry out tasks. My concern is that surveys that ignore the different work-flows of using LLMs will produce data thatâs going to send people down the wrong paths.&lt;/p&gt;
    &lt;p&gt;(Another complication is the varying capabilities of different models.)&lt;/p&gt;
    &lt;p&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â âÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â âÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â âÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â â&lt;/p&gt;
    &lt;p&gt;Iâm often asked, âwhat is the future of programming?â Should people consider entering software development now? Will LLMs eliminate the need for junior engineers? Should senior engineers get out of the profession before itâs too late? My answer to all these questions is âI havenât the foggiestâ. Furthermore I think anyone who says they know what this future will be is talking from an inappropriate orifice. We are still figuring out how to use LLMs, and it will be some time before we have a decent idea of how to use them well, especially if they gain significant improvements.&lt;/p&gt;
    &lt;p&gt;What I suggest, is that people experiment with them. At the least, read about what others are doing, but pay attention to the details of their workflows. Preferably experiment yourself, and do share your experiences.&lt;/p&gt;
    &lt;p&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â âÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â âÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â âÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â â&lt;/p&gt;
    &lt;p&gt;Iâm also asked: âis AI a bubbleâ? To which my answer is âOF COURSE ITâS A BUBBLEâ. All major technological advances have come with economic bubbles, from canals and railroads to the internet. We know with near 100% certainty that this bubble will pop, causing lots of investments to fizzle to nothing. However what we donât know is when it will pop, and thus how big the bubble will have grown, generating some real value in the process, before that happens. It could pop next month, or not for a couple of years.&lt;/p&gt;
    &lt;p&gt;We also know that when the bubble pops, many firms will go bust, but not all. When the dot-com bubble burst, it killed pets.com, it killed Webvanâ¦ but it did not kill Amazon.&lt;/p&gt;
    &lt;p&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â âÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â âÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â âÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â â&lt;/p&gt;
    &lt;p&gt;I retired from public speaking a couple of years ago. But while I donât miss the stress of giving talks, I do miss hanging out with my friends in the industry. So Iâm looking forward to catching up with many of them at GOTO Copenhagen. Iâve been involved with the GOTO conference series since the 1990s (when it was called JAOO), and continue to be impressed with how they put together a fascinating program.&lt;/p&gt;
    &lt;p&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â â¢Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â âÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â âÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â â&lt;/p&gt;
    &lt;p&gt;My former colleague Rebecca Parsons, has been saying for a long time that hallucinations arenât a bug of LLMs, they are a feature. Indeed they are the feature. All an LLM does is produce hallucinations, itâs just that we find some of them useful.&lt;/p&gt;
    &lt;p&gt;One of the consequences of this is that we should always consider asking the LLM the same question more than once, perhaps with some variation in the wording. Then we can compare answers, indeed perhaps ask the LLM to compare answers for us. The difference in the answers can be as useful as the answers themselves.&lt;/p&gt;
    &lt;p&gt;Certainly if we ever ask a hallucination engine for a numeric answer, we should ask it at least three times, so we get some sense of the variation. Furthermore we shouldnât ask an LLM to calculate an answer than we can calculate deterministically (yes, Iâve seen this). It is OK to ask an LLM to generate code to calculate an answer (but still do it more than once).&lt;/p&gt;
    &lt;p&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â âÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â âÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â âÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â â&lt;/p&gt;
    &lt;p&gt;Other forms of engineering have to take into account the variability of the world. A structural engineer builds in tolerance for all the factors she canât measure. (I remember being told early in my career that the unique characteristic of digital electronics was that there was no concept of tolerances.) Process engineers consider that humans are executing tasks, and will sometimes be forgetful or careless. Software Engineering is unusual in that it works with deterministic machines. Maybe LLMs mark the point where we join our engineering peers in a world on non-determinism.&lt;/p&gt;
    &lt;p&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â âÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â âÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â âÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â â&lt;/p&gt;
    &lt;p&gt;Iâve often heard, with decent reason, an LLM compared to a junior colleague. But I find LLMs are quite happy to say âall tests greenâ, yet when I run them, there are failures. If that was a junior engineerâs behavior, how long would it be before H.R. was involved?&lt;/p&gt;
    &lt;p&gt;Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â âÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â âÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â âÂ Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â â&lt;/p&gt;
    &lt;p&gt;LLMs create a huge increase in the attack surface of software systems. Simon Willison described the The Lethal Trifecta for AI agents: an agent that combines access to your private data, exposure to untrusted content, and a way to externally communicate (âexfiltrationâ). That âuntrusted contentâ can come in all sorts of ways, ask it to read a web page, and an attacker can easily put instructions on the website in 1pt white-on-white font to trick the gullible LLM to obtain that private data.&lt;/p&gt;
    &lt;p&gt;This is particularly serious when it comes to agents acting in a browser. Read an attackerâs web page, and it could trick the agent to go to your bank account in another tab and âbuy you a presentâ by transferring your balance to the kind attacker. Willisonâs view is that âthe entire concept of an agentic browser extension is fatally flawed and cannot be built safelyâ.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45055641</guid></item></channel></rss>