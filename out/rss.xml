<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Hacker News: Front Page</title><link>https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml</link><description>Hacker News RSS</description><atom:link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Mon, 29 Sep 2025 05:10:50 +0000</lastBuildDate><item><title>Privacy Badger is a free browser extension made by EFF to stop spying</title><link>https://privacybadger.org/</link><description>&lt;doc fingerprint="6511c9540fb41697"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Privacy Badger&lt;/head&gt;
    &lt;head rend="h2"&gt;Frequently Asked Questions&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;What is Privacy Badger?&lt;/item&gt;
      &lt;item&gt;How is Privacy Badger different from other blocking extensions?&lt;/item&gt;
      &lt;item&gt;Who makes Privacy Badger?&lt;/item&gt;
      &lt;item&gt;How does Privacy Badger work?&lt;/item&gt;
      &lt;item&gt;What is a third party tracker?&lt;/item&gt;
      &lt;item&gt;What do the red, yellow and green sliders in the Privacy Badger menu mean?&lt;/item&gt;
      &lt;item&gt;Why does Privacy Badger block ads?&lt;/item&gt;
      &lt;item&gt;Why doesn't Privacy Badger block all ads?&lt;/item&gt;
      &lt;item&gt;What is Global Privacy Control (GPC)?&lt;/item&gt;
      &lt;item&gt;What about tracking by the sites I actively visit, like NYTimes.com or Facebook.com?&lt;/item&gt;
      &lt;item&gt;Does Privacy Badger contain a list of blocked sites?&lt;/item&gt;
      &lt;item&gt;How was the cookie blocking yellowlist created?&lt;/item&gt;
      &lt;item&gt;Does Privacy Badger prevent fingerprinting?&lt;/item&gt;
      &lt;item&gt;Does Privacy Badger consider every cookie to be a tracking cookie?&lt;/item&gt;
      &lt;item&gt;Will you be supporting any other browsers besides Chrome, Firefox, Edge and Opera?&lt;/item&gt;
      &lt;item&gt;Can I download Privacy Badger directly from eff.org?&lt;/item&gt;
      &lt;item&gt;I run a domain that uses cookies or other tracking. How do I stop Privacy Badger from blocking me?&lt;/item&gt;
      &lt;item&gt;Where can I find general information about Privacy Badger that I can use for a piece I'm writing?&lt;/item&gt;
      &lt;item&gt;As an administrator, how do I configure Privacy Badger on my managed devices?&lt;/item&gt;
      &lt;item&gt;What is the Privacy Badger license? Where is the Privacy Badger source code?&lt;/item&gt;
      &lt;item&gt;How can I support Privacy Badger?&lt;/item&gt;
      &lt;item&gt;How does Privacy Badger handle social media widgets?&lt;/item&gt;
      &lt;item&gt;How do I uninstall/remove Privacy Badger?&lt;/item&gt;
      &lt;item&gt;Is Privacy Badger compatible with other extensions, including adblockers?&lt;/item&gt;
      &lt;item&gt;Is Privacy Badger compatible with Firefox's built-in privacy protections?&lt;/item&gt;
      &lt;item&gt;Why does my browser connect to fastly.com IP addresses on startup after installing Privacy Badger?&lt;/item&gt;
      &lt;item&gt;Why does Privacy Badger need access to my data for all websites?&lt;/item&gt;
      &lt;item&gt;Why aren't videos loading on YouTube? Why isn't Privacy Badger blocking ads on YouTube?&lt;/item&gt;
      &lt;item&gt;I need help! I found a bug! What do I do now?&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;What is Privacy Badger?&lt;/head&gt;
    &lt;p&gt;Privacy Badger is a browser extension that stops advertisers and other third-party trackers from secretly tracking where you go and what pages you look at on the web. If an advertiser seems to be tracking you across multiple websites without your permission, Privacy Badger automatically blocks that advertiser from loading any more content in your browser. To the advertiser, it’s like you suddenly disappeared.&lt;/p&gt;
    &lt;head rend="h3"&gt;How is Privacy Badger different from other blocking extensions?&lt;/head&gt;
    &lt;p&gt;Privacy Badger was born out of our desire to be able to recommend a single extension that would:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Automatically analyze and block any tracker or ad that violated the principle of user consent&lt;/item&gt;
      &lt;item&gt;Function well without any settings, knowledge, or configuration by the user&lt;/item&gt;
      &lt;item&gt;Use algorithmic methods to decide what is and isn’t tracking&lt;/item&gt;
      &lt;item&gt;Be produced by an organization that is unambiguously working for its users rather than for profit&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;As a result, Privacy Badger differs from traditional ad-blocking extensions in two key ways. First, while most other blocking extensions prioritize blocking ads, Privacy Badger doesn’t block ads unless they happen to be tracking you; in fact, one of our goals is to incentivize advertisers to adopt better privacy practices.&lt;/p&gt;
    &lt;p&gt;Second, most other blockers rely on a human-curated list of domains or URLs to block. Privacy Badger is an algorithmic tracker blocker – we define what âtrackingâ looks like, and then Privacy Badger blocks or restricts domains that it observes tracking in the wild. What is and isnât considered a tracker is entirely based on how a specific domain acts, not on human judgment.&lt;/p&gt;
    &lt;p&gt;Privacy Badger sends the Global Privacy Control signal to opt you out of data sharing and selling, and the Do Not Track signal to tell companies not to track you. If trackers ignore these signals, Privacy Badger will learn to block them.&lt;/p&gt;
    &lt;p&gt;Beyond this, Privacy Badger comes with other advantages like cookie blocking, click-to-activate placeholders for potentially useful tracker widgets (video players, comments widgets, etc.), and outgoing link click tracking removal on Facebook and Google.&lt;/p&gt;
    &lt;p&gt;By using Privacy Badger, you support the Electronic Frontier Foundation and help fight for a better Web for everybody.&lt;/p&gt;
    &lt;head rend="h3"&gt;Who makes Privacy Badger?&lt;/head&gt;
    &lt;p&gt;Privacy Badger was created by the Electronic Frontier Foundation, a nonprofit organization that protects your privacy and free expression online. We make free tools like Privacy Badger, publish educational guides, testify before lawmakers about technology, and fight for the public interest in courtâall thanks to support from EFFâs members. If you want a better internet and a strong democracy, join the fight against creepy online surveillance.&lt;/p&gt;
    &lt;head rend="h3"&gt;How does Privacy Badger work?&lt;/head&gt;
    &lt;p&gt;When you view a webpage, that page will often be made up of content from many different sources. For example, a news webpage might load the actual article from the news company, ads from an ad company, and the comments section from a different company that’s been contracted out to provide that service.&lt;/p&gt;
    &lt;p&gt;Privacy Badger keeps track of all of this. If the same source seems to be tracking across different websites, then Privacy Badger springs into action, telling the browser not to load any more content from that source. And when your browser stops loading content from a source, that source can no longer track you. Voila!&lt;/p&gt;
    &lt;p&gt;At a more technical level, Privacy Badger keeps track of the “third party” domains that embed images, scripts and advertising in the pages you visit. Privacy Badger looks for tracking techniques like uniquely identifying cookies, local storage “supercookies,” and canvas fingerprinting. If it observes the same third-party host tracking on three separate sites, Privacy Badger will automatically disallow content from that third-party tracker.&lt;/p&gt;
    &lt;p&gt;By default, Privacy Badger receives periodic learning updates from Badger Sett, our Badger training project. This “remote learning” automatically discovers trackers present on thousands of the most popular sites on the Web.&lt;/p&gt;
    &lt;head rend="h3"&gt;What is a third party tracker?&lt;/head&gt;
    &lt;p&gt;When you visit a webpage parts of the page may come from domains and servers other than the one you asked to visit. This is an essential feature of hypertext. On the modern Web, embedded images and code often use cookies and other methods to track your browsing habits â often to display advertisements. The domains that do this are called “third party trackers”, and you can read more about how they work here.&lt;/p&gt;
    &lt;head rend="h3"&gt;What do the red, yellow and green sliders in the Privacy Badger menu mean?&lt;/head&gt;
    &lt;p&gt;Red means that content from this third party domain has been completely disallowed.&lt;/p&gt;
    &lt;p&gt;Yellow means that the third party domain appears to be trying to track you, but it is on Privacy Badger’s cookie-blocking “yellowlist” of third party domains that, when analyzed, seemed to be necessary for Web functionality. In that case, Privacy Badger will load content from the domain but will try to screen out third party cookies and referrers from it.&lt;/p&gt;
    &lt;p&gt;Green means “no action”; Privacy Badger will leave the domain alone.&lt;/p&gt;
    &lt;head rend="h3"&gt;Why does Privacy Badger block ads?&lt;/head&gt;
    &lt;p&gt;Actually, nothing in the Privacy Badger code is specifically written to block ads. Rather, it focuses on disallowing any visible or invisible “third party” scripts or images that appear to be tracking you even though you specifically denied consent by sending Do Not Track and Global Privacy Control signals. It just so happens that most (but not all) of these third party trackers are advertisements. When you see an ad, the ad sees you, and can track you. Privacy Badger is here to stop that.&lt;/p&gt;
    &lt;head rend="h3"&gt;Why doesn't Privacy Badger block all ads?&lt;/head&gt;
    &lt;p&gt;Because Privacy Badger is primarily a privacy tool, not an ad blocker. Our aim is not to block ads, but to prevent non-consensual invasions of people’s privacy because we believe they are inherently objectionable. We also want to create incentives for advertising companies to do the right thing. Of course, if you really dislike ads, you can also install a traditional ad blocker.&lt;/p&gt;
    &lt;head rend="h3"&gt;What is Global Privacy Control (GPC)?&lt;/head&gt;
    &lt;p&gt;Global Privacy Control (GPC) is a new specification that allows users to tell companies they’d like to opt out of having their data shared or sold. By default, Privacy Badger sends the GPC signal to every company you interact with alongside the Do Not Track (DNT) signal.&lt;/p&gt;
    &lt;p&gt;What’s the difference? Do Not Track is meant to tell companies that you don’t want to be tracked in any way (learn more about what we mean by “tracking” here). Privacy Badger gives third-party companies a chance to comply with DNT by adopting our DNT policy, and blocks those that look like they’re tracking you anyway.&lt;/p&gt;
    &lt;p&gt;When DNT was developed, many websites simply ignored usersâ requests not to be tracked. That’s why Privacy Badger has to act as an enforcer: trackers that don’t want to comply with your wishes get blocked. Today, users in many jurisdictions have the legal right to opt out of some kinds of tracking. That’s where GPC comes in.&lt;/p&gt;
    &lt;p&gt;GPC is meant to be a legally-binding request to all companies in places with applicable privacy laws. For example, the California Consumer Privacy Act gives California residents the right to opt out of having their data sold. By sending the GPC signal, Privacy Badger is telling companies that you would like to exercise your rights.&lt;/p&gt;
    &lt;p&gt;The CCPA and other laws are not perfect, which is why Privacy Badger uses both approaches. It asks websites to respect your privacy, and it blocks known trackers from loading at all.&lt;/p&gt;
    &lt;head rend="h3"&gt;What about tracking by the sites I actively visit, like NYTimes.com or Facebook.com?&lt;/head&gt;
    &lt;p&gt;At present, Privacy Badger primarily protects you against tracking by third party sites. As far as privacy protections for “first party” sites (sites that you visit directly), Privacy Badger removes outgoing link click tracking on Facebook and Google. We plan on adding more first party privacy protections in the future.&lt;/p&gt;
    &lt;p&gt;We are doing things in this order because the most scandalous, intrusive and objectionable form of online tracking is that conducted by companies you’ve often never heard of and have no relationship with. First and foremost, Privacy Badger is there to enforce Do Not Track against these domains by providing the technical means to restrict access to their tracking scripts and images. The right policy for whether nytimes.com, facebook.com or google.com can track you when you visit that site â and the technical task of preventing it â is more complicated because often tracking is interwoven with the features the site offers.&lt;/p&gt;
    &lt;head rend="h3"&gt;Does Privacy Badger contain a list of blocked sites?&lt;/head&gt;
    &lt;p&gt;Unlike other blocking tools, we have not made decisions about which sites to block, but rather about which behavior is objectionable. Domains will only be blocked if Privacy Badger observes the domain collecting unique identifiers after it was sent Do Not Track and Global Privacy Control signals.&lt;/p&gt;
    &lt;p&gt;Privacy Badger does contain a “yellowlist” of some sites that are known to provide essential third party resources; those sites show up as yellow and have their cookies blocked rather than being blocked entirely. This is a compromise with practicality, and in the long term we hope to phase out the yellowlist as these third parties begin to explicitly commit to respecting Do Not Track. The criteria for including a domain on the yellowlist can be found here.&lt;/p&gt;
    &lt;head rend="h3"&gt;How was the cookie blocking yellowlist created?&lt;/head&gt;
    &lt;p&gt;The initial list of domains that should be cookie blocked rather than blocked entirely was derived from a research project on classifying third party domains as trackers and non-trackers. We will make occasional adjustments to it as necessary. If you find domains that are under- or over-blocked, please file a bug on GitHub.&lt;/p&gt;
    &lt;head rend="h3"&gt;Does Privacy Badger prevent fingerprinting?&lt;/head&gt;
    &lt;p&gt;Browser fingerprinting is an extremely subtle and problematic method of tracking, which we documented with the Cover Your Tracks project. Privacy Badger can detect canvas-based fingerprinting, and will block third party domains that use it. Detection of other forms of fingerprinting and protections against first-party fingerprinting are ongoing projects. Of course, once a domain is blocked by Privacy Badger, it will no longer be able to fingerprint you.&lt;/p&gt;
    &lt;head rend="h3"&gt;Does Privacy Badger consider every cookie to be a tracking cookie?&lt;/head&gt;
    &lt;p&gt;No. Privacy Badger analyzes the cookies from each site; unique cookies that contain tracking IDs are disallowed, while “low entropy” cookies that perform other functions are allowed. For instance a cookie like LANG=fr that encodes the user’s language preference, or a cookie that preserves a very small amount of information about ads the user has been shown, would be allowed provided that individual or small groups of users’ reading habits could not be collected with them.&lt;/p&gt;
    &lt;head rend="h3"&gt;Will you be supporting any other browsers besides Chrome, Firefox, Edge and Opera?&lt;/head&gt;
    &lt;p&gt;We are working towards Safari on macOS support. Safari on iOS seems to lack certain extension capabilities required by Privacy Badger to function properly.&lt;/p&gt;
    &lt;p&gt;Chrome on Android does not support extensions. To use Privacy Badger on Android, install Firefox for Android.&lt;/p&gt;
    &lt;p&gt;Privacy Badger does not work with Microsoft Edge Legacy. Please switch to the new Microsoft Edge browser.&lt;/p&gt;
    &lt;head rend="h3"&gt;Can I download Privacy Badger directly from eff.org?&lt;/head&gt;
    &lt;p&gt;If you use Google Chrome, you have to install extensions from Chrome Web Store. To install Privacy Badger in Chrome, visit Privacy Badger’s Chrome Web Store listing and click the “Add to Chrome” button there.&lt;/p&gt;
    &lt;p&gt;Otherwise, you can use the following links to get the latest version of Privacy Badger directly from eff.org:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Firefox: https://www.eff.org/files/privacy-badger-latest.xpi&lt;/item&gt;
      &lt;item&gt;Chromium: https://www.eff.org/files/privacy_badger-chrome.crx&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;I run a domain that uses cookies or other tracking. How do I stop Privacy Badger from blocking me?&lt;/head&gt;
    &lt;p&gt;One way is to stop tracking users who have turned on Global Privacy Control or Do Not Track signals (i.e., stop collecting cookies, supercookies or fingerprints from them). Privacy Badger will stop learning to block that domain. The next version of Privacy Badger to ship with an updated pre-trained list will no longer include that domain in the list. Most Privacy Badger users will then update to that list.&lt;/p&gt;
    &lt;p&gt;You can also unblock yourself by promising to meaningfully respect the Do Not Track signal. To do so, post a verbatim copy of EFF’s Do Not Track policy to the URL https://example.com/.well-known/dnt-policy.txt, where “example.com” is replaced by your domain. Posting EFF’s DNT policy on a domain is a promise of compliance with EFF’s DNT Policy by that domain.&lt;/p&gt;
    &lt;p&gt;If your domain is compliant with EFF’s DNT policy and declares this compliance, most Privacy Badgers will see this declaration the next time they encounter your domain. Also, the next version of Privacy Badger to ship with an updated pre-trained list will probably include your declaration of compliance in the list.&lt;/p&gt;
    &lt;p&gt;Note that the domain must support HTTPS, to protect against tampering by network attackers. The path contains “.well-known” per RFC 5785. Also note that you must post a copy of the policy at each compliant subdomain you control. For example, if you wish to declare compliance by both sub1.example.com and sub2.example.com, you must post EFF’s DNT policy on each domain.&lt;/p&gt;
    &lt;head rend="h3"&gt;Where can I find general information about Privacy Badger that I can use for a piece I'm writing?&lt;/head&gt;
    &lt;p&gt;Glad you asked! Check out this downloadable press kit that we’ve put together.&lt;/p&gt;
    &lt;head rend="h3"&gt;As an administrator, how do I configure Privacy Badger on my managed devices?&lt;/head&gt;
    &lt;p&gt;Please see our enterprise deployment and configuration document.&lt;/p&gt;
    &lt;head rend="h3"&gt;What is the Privacy Badger license? Where is the Privacy Badger source code?&lt;/head&gt;
    &lt;p&gt;Privacy Badger’s source code is licensed under GPLv3+. This website’s source code is licensed under AGPLv3+.&lt;/p&gt;
    &lt;head rend="h3"&gt;How can I support Privacy Badger?&lt;/head&gt;
    &lt;p&gt;Thanks for asking! Individual donations make up about half of EFF’s support, which gives us the freedom to work on user-focused projects. If you want to support the development of Privacy Badger and other projects like it, you can throw us a few dollars here. Thank you.&lt;/p&gt;
    &lt;p&gt;If you want to help directly with the project, we appreciate that as well. Please see Privacy Badger’s CONTRIBUTING document for ways to get started.&lt;/p&gt;
    &lt;head rend="h3"&gt;How does Privacy Badger handle social media widgets?&lt;/head&gt;
    &lt;p&gt;Social media widgets (such as the Facebook Like button) often track your reading habits. Even if you don’t click them, the social media companies often see exactly which pages you’re seeing the widget on. When blocking social buttons and other potentially useful (video, audio, comments) widgets, Privacy Badger can replace them with click-to-activate placeholders. You will not be tracked by these replacements unless you explicitly choose to click them.&lt;/p&gt;
    &lt;head rend="h3"&gt;How do I uninstall/remove Privacy Badger?&lt;/head&gt;
    &lt;p&gt;Firefox: See the Disable or remove Add-ons Mozilla help page.&lt;/p&gt;
    &lt;p&gt;Chrome: See the Install and manage extensions Chrome Web Store help page.&lt;/p&gt;
    &lt;p&gt;Edge: See the Add or remove browser add-ons, extensions, and toolbars Microsoft help page.&lt;/p&gt;
    &lt;head rend="h3"&gt;Is Privacy Badger compatible with other extensions, including adblockers?&lt;/head&gt;
    &lt;p&gt;Privacy Badger should be compatible with other extensions.&lt;/p&gt;
    &lt;p&gt;While there is likely to be overlap between the various manually-edited advertising/tracker lists and Privacy Badger, unlike adblockers, Privacy Badger automatically learns to block trackers based on their behavior. This means that Privacy Badger may learn to block trackers your adblocker doesn’t know about.&lt;/p&gt;
    &lt;head rend="h3"&gt;Is Privacy Badger compatible with Firefox's built-in privacy protections?&lt;/head&gt;
    &lt;p&gt;It’s fine to use Firefox’s built-in content blocking (Enhanced Tracking Protection or ETP) and Privacy Badger together. While there is overlap between Firefox’s tracker lists and Privacy Badger, Privacy Badger automatically learns to block trackers based on their behavior. This means that Privacy Badger’s automatically-generated and regularly updated blocklist contains trackers not found in Firefox’s human-generated lists. Additionally, Firefox does not fully block “tracking content” in regular (non-“private”) windows by default.&lt;/p&gt;
    &lt;p&gt;What about Firefox’s Total Cookie Protection (dynamic First Party Isolation or dFPI)? Total Cookie Protection works by keeping third-party cookies isolated to the site they were set on. However, if unblocked, trackers can still use techniques like first-party cookie syncing and browser fingerprinting. They can track your IP address, or they can use some combination of these techniques. Trackers harvest sensitive information, and serve as vectors for malware. Not to mention, unblocked trackers slow down websites and waste your bandwidth.&lt;/p&gt;
    &lt;p&gt;Keep in mind that Privacy Badger is not just a tracker blocker.&lt;/p&gt;
    &lt;head rend="h3"&gt;Why does my browser connect to fastly.com IP addresses on startup after installing Privacy Badger?&lt;/head&gt;
    &lt;p&gt;EFF uses Fastly to host EFF’s Web resources: Fastly is EFF’s CDN. Privacy Badger pings the CDN for the following resources to ensure that the information in them is fresh even if there hasn’t been a new Privacy Badger release in a while:&lt;/p&gt;
    &lt;p&gt;EFF does not set cookies or retain IP addresses for these queries.&lt;/p&gt;
    &lt;head rend="h3"&gt;Why does Privacy Badger need access to my data for all websites?&lt;/head&gt;
    &lt;p&gt;When you install Privacy Badger, your browser warns that Privacy Badger can “access your data for all websites” (in Firefox), or “read and change all your data on the websites you visit” (in Chrome). You are right to be alarmed. You should only install extensions made by organizations you trust.&lt;/p&gt;
    &lt;p&gt;Privacy Badger requires these permissions to do its job of automatically detecting and blocking trackers on all websites you visit. We are not ironically (or unironically) spying on you. For more information, see our Privacy Badger extension permissions explainer.&lt;/p&gt;
    &lt;p&gt;Note that the extension permissions warnings only cover what the extension has access to, not what the extension actually does with what it has access to (such as whether the extension secretly uploads your browsing data to its servers). Privacy Badger will never share data about your browsing unless you choose to share it (by filing a broken site report). For more information, see EFF’s Privacy Policy for Software.&lt;/p&gt;
    &lt;head rend="h3"&gt;Why aren't videos loading on YouTube? Why isn't Privacy Badger blocking ads on YouTube?&lt;/head&gt;
    &lt;p&gt;Is YouTube not working? Try disabling Privacy Badger on YouTube. If that resolves the issue, see if re-enabling Privacy Badger breaks YouTube again. If YouTube goes back to not working, please tell us so we can look into what’s going on.&lt;/p&gt;
    &lt;p&gt;Are you surprised that ads aren’t being blocked on YouTube? Privacy Badger is primarily a privacy tool, not an ad blocker. When you visit YouTube directly, Privacy Badger does not block ads on YouTube because YouTube does not use “third party” trackers. If you really dislike ads, you can also install a traditional ad blocker.&lt;/p&gt;
    &lt;head rend="h3"&gt;I need help! I found a bug! What do I do now?&lt;/head&gt;
    &lt;p&gt;If a website isn’t working like it should, you can disable Privacy Badger just for that site, leaving Privacy Badger enabled and protecting you everywhere else. To do so, navigate to the site with the problem, click on Privacy Badger’s icon in your browser toolbar, and click the “Disable for this site” button in Privacy Badger’s popup. You can also let us know about broken sites using the “Report broken site” button.&lt;/p&gt;
    &lt;p&gt;To get help or to report bugs, please email extension-devs@eff.org. If you have a GitHub account, you can use our GitHub issue tracker.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45404021</guid><pubDate>Sun, 28 Sep 2025 12:59:54 +0000</pubDate></item><item><title>When I say “alphabetical order”, I mean “alphabetical order”</title><link>https://sebastiano.tronto.net/blog/2025-09-28-alphabetic-order/</link><description>&lt;doc fingerprint="144ce85c2ae519d5"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;When I say “alphabetical order”, I mean “alphabetical order”&lt;/head&gt;
    &lt;p&gt;Last month I have been on a multi-day hike with my dad. Each of us took many pictures, and when we came back we put them all in a shared folder. We both have Android phones, and the naming scheme used for our pictures was the same: &lt;code&gt;IMG_YYYYMMDD_HHmmss&lt;/code&gt; followed maybe by some other numbers
and then a &lt;code&gt;.jpg&lt;/code&gt;. Here &lt;code&gt;YYYY&lt;/code&gt; stands for the year, &lt;code&gt;MM&lt;/code&gt; for month and
so on, so that sorting the pictures in alphabetical order is the same as
sorting them by date.&lt;/p&gt;
    &lt;p&gt;Or so I thought. Strangely, when I looked at the files from my dad’s Windows PC, they were not sorted correctly: all the pictures took with my phone came first, followed by all the pictures took by him. I thought this was surely some weird Microsoft bug - after using Windows 11 at work for a while, I would not be surprised if you told me their file explorer can’t figure out how to sort strings.&lt;/p&gt;
    &lt;p&gt;But then I looked at the same files in a shared Google Drive folder, and again they were in the wrong order:&lt;/p&gt;
    &lt;p&gt;As you can see, the picture taken at 5:54 (with my dad’s phone) comes before the one taken at 9:20 (also with my dad’s phone), but after the one taken at 12:11 (with my phone).&lt;/p&gt;
    &lt;p&gt;Weird. Well, maybe Microsoft and Google got this wrong. But that seems unlikely.&lt;/p&gt;
    &lt;p&gt;Indeed, KDE’s Dolphin file manager does the same thing:&lt;/p&gt;
    &lt;p&gt;I’ll spare you the screenshots, but Gnome and both the file managers that I have on my phone also get the alphabetical order wrong.&lt;/p&gt;
    &lt;p&gt;At this point I thought that maybe one of the two phones is using some weird alternative unicode character instead of the underscore &lt;code&gt;_&lt;/code&gt;. Really,
I could not see any other explanation. But nope, this is not it, because
the good old &lt;code&gt;ls&lt;/code&gt; sorts my files correctly:&lt;/p&gt;
    &lt;code&gt;$ ls -l

total 218572
-rw-r--r-- 1 seba seba 1866185 Aug 28 18:51 IMG_20250820_055436307.jpg
-rw-r--r-- 1 seba seba 4749899 Aug 28 18:50 IMG_20250820_092016029_HDR.jpg
-rw-r--r-- 1 seba seba 6201609 Aug 28 18:52 IMG_20250820_092440966_HDR.jpg
-rw-r--r-- 1 seba seba 7694802 Aug 28 18:51 IMG_20250820_092832138_HDR.jpg
-rw-r--r-- 1 seba seba 1536520 Aug 20 09:57 IMG_20250820_095716_607.jpg
-rw-r--r-- 1 seba seba 1054553 Aug 20 10:38 IMG_20250820_103857_991.jpg
-rw-r--r-- 1 seba seba  965353 Aug 20 10:39 IMG_20250820_103903_811.jpg
(and so on)
&lt;/code&gt;
    &lt;p&gt;This was consistent among the couple of Linux distros I use, as well as my OpenBSD server. On the one hand this is good: not every single piece of software fucks up something as basic as string sorting. On the other hand, this makes it harder to debug what the fuck is going on with all the other file managers.&lt;/p&gt;
    &lt;p&gt;It took me more than a month to figure this one out. Tell me, which file do you think comes first in alphabetical order, &lt;code&gt;file-9.txt&lt;/code&gt; or
&lt;code&gt;file-10.txt&lt;/code&gt;?&lt;/p&gt;
    &lt;p&gt;Of course, the user who named those files probably wants &lt;code&gt;file-9.txt&lt;/code&gt; to
come before &lt;code&gt;file-10.txt&lt;/code&gt;. But &lt;code&gt;1&lt;/code&gt; is smaller than &lt;code&gt;9&lt;/code&gt;, so &lt;code&gt;file-10.txt&lt;/code&gt;
should be first in alphabetical order. Everyone understands that, and
soon people learn to put enough leading zeros if they want their files
to stay sorted the way they like.&lt;/p&gt;
    &lt;p&gt;Well, apparently all these operating systems have decided that no, users are too dumb and they cannot possibly understand what alphabetical order means. So when you ask them to sort your files alphabetically, they don’t. Instead, they decide that if some piece of the file name is a number, the real numerical value must be used.&lt;/p&gt;
    &lt;p&gt;I don’t know when this became the norm, to be honest I have not used a normal graphical file manager in a long time.&lt;/p&gt;
    &lt;p&gt;I know you asked for the files to be sorted in alphabetical order, but you don’t want &lt;code&gt;file-10.txt&lt;/code&gt; to come before &lt;code&gt;file-9.txt&lt;/code&gt;, do
you? No, I know you don’t. I am not even going to ask you, your
mushy human brain is too small to comprehend the intricacies of
such a question. I’ll spare you the thinking.&lt;/p&gt;
    &lt;p&gt;So it turns out that my dad’s phone wrote the milliseconds in the file name right after the seconds, while mine added an extra underscore to separate them from the seconds. Which in my mind it should not have mattered, because alphabetically they should still have been sorted correctly to the second. But with this “modern” interpretation of the alphabetical order, the files without the extra separator in the name had a much higher number, so they come last.&lt;/p&gt;
    &lt;p&gt;Now that I know what the issue is, I can solve it by renaming the files with a consistent scheme. I have also found a setting to fix Dolphin’s behavior, but it was very much buried into its many configuration options. And I would rather not have to change this setting in every application I use, assuming they even allow it.&lt;/p&gt;
    &lt;p&gt;I miss the time when computers did what you told them to, instead of trying to read your mind.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45404022</guid><pubDate>Sun, 28 Sep 2025 13:00:16 +0000</pubDate></item><item><title>Show HN: Toolbrew – Free little tools without signups or ads</title><link>https://toolbrew.co/</link><guid isPermaLink="false">https://news.ycombinator.com/item?id=45404667</guid><pubDate>Sun, 28 Sep 2025 14:40:46 +0000</pubDate></item><item><title>Scm2wasm: A Scheme to WASM compiler in 600 lines of C, making use of WASM GC</title><link>https://git.lain.faith/iitalics/scm2wasm</link><description>&lt;doc fingerprint="9fa21c334d8329a0"&gt;
  &lt;main&gt;
    &lt;table&gt;
      &lt;row span="3"&gt;
        &lt;cell role="head"&gt;milo 7cbcaf8ccd&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;.gitignore&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Makefile&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;README.md&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;input.scm&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;scm2wasm.c&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;head rend="h4"&gt; README.md &lt;/head&gt;
    &lt;head rend="h1"&gt;scm2wasm&lt;/head&gt;
    &lt;p&gt;really bad minimal scheme compiler&lt;/p&gt;
    &lt;head rend="h2"&gt;building&lt;/head&gt;
    &lt;code&gt;$ make
&lt;/code&gt;
    &lt;head rend="h2"&gt;running&lt;/head&gt;
    &lt;code&gt;$ ./scm2wasm &amp;lt; input.scm &amp;gt; output.wasm
$ wasm-tools validate output.wasm
$ wasm-tools print output.wasm -o output.wat
$ wasmtime -Wgc --invoke start output.wasm
...
30
&lt;/code&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45405175</guid><pubDate>Sun, 28 Sep 2025 15:43:25 +0000</pubDate></item><item><title>The AI coding trap</title><link>https://chrisloy.dev/post/2025/09/28/the-ai-coding-trap</link><description>&lt;doc fingerprint="a549d23b2ab12319"&gt;
  &lt;main&gt;
    &lt;p&gt;If you ever watch someone “coding”, you might see them spending far more time staring into space than typing on their keyboard. No, they (probably) aren’t slacking off. Software development is fundamentally a practice of problem-solving, and so, as with solving a tricky crossword, most of the work is done in your head.&lt;/p&gt;
    &lt;p&gt;In the software development lifecycle, coding is the letters filled into the crossword, only a small amount of effort compared to all the head scratching and scribbled notes. The real work usually happens alongside coding, as the developer learns the domain, narrows down requirements, maps out relevant abstractions, considers side effects, tests features incrementally, and finally squashes bugs that survived this rigorous process. It looks something like this:&lt;/p&gt;
    &lt;p&gt;But with AI-driven coding, things play out very differently.&lt;/p&gt;
    &lt;head rend="h2"&gt;“Code first, ask questions later”&lt;/head&gt;
    &lt;p&gt;AI coding agents such as Claude Code are making it astonishingly fast to write code in isolation. But most software lives within complex systems, and since LLMs can't yet hold the full context of an application in memory at once, human review, testing, and integration needs will remain. And that is a lot harder when the code has been written without the human thinking about it. As a result, for complex software, much of the time will be spent on post hoc understanding of what code the AI has written.&lt;/p&gt;
    &lt;p&gt;This is the root of the difference between marketing copy that boasts of the paradigm shifting speed of writing code with AI (often framed as “10X faster”), and the marginal productivity gains in delivering working software seen in the wild (usually closer to 10%).&lt;/p&gt;
    &lt;p&gt;An even more dispiriting upshot of this is that, as developers, we spend an ever greater proportion of our time merely fixing up the output of these wondrous babbling machines. While the LLMs get to blast through all the fun, easy work at lightning speed, we are then left with all the thankless tasks: testing to ensure existing functionality isn’t broken, clearing out duplicated code, writing documentation, handling deployment and infrastructure, etc. Very little time is actually dedicated to the thing that developers actually love doing: coding.&lt;/p&gt;
    &lt;p&gt;Fortunately, help is at hand. While LLMs are shaking up how software development is performed, this issue in itself is not actually new. In fact, it is merely a stark example of an age-old problem, which I call:&lt;/p&gt;
    &lt;head rend="h2"&gt;The tech lead’s dilemma&lt;/head&gt;
    &lt;p&gt;As engineers progress in their careers, they will eventually step into the role of tech lead. They might be managing a team, or they could be a principal engineer, driving technical delivery without the people management. In either case, they are responsible for the team’s technical delivery. They are also usually the most experienced developer in the team: either in their career, in the specialised domain of the team, or in both.&lt;/p&gt;
    &lt;p&gt;Software delivery is a team effort, but one in which experience can have a highly imbalancing effect on individual contribution velocity. As such, when the tech lead’s primary job is to maximise delivery, they will often face an internal conflict between two ways to deliver software:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Fair delegation across the team, maximising learning and ownership opportunities for junior team members, but allowing delivery to be bottlenecked by the speed of the least productive team members.&lt;/item&gt;
      &lt;item&gt;Mollycoddling the team, by delegating only the easy or non-critical work to juniors, and keeping the hardest work for themselves, as the person on the team most capable of delivering at speed.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Unfortunately, while we shall see that mollycoddling is extremely harmful to long-term team health, it is also often a very effective way to accelerate delivery. The higher bandwidth of the tech lead is often most efficiently deployed by eating up all the hardest work:&lt;/p&gt;
    &lt;p&gt;As such, I have seen this pattern repeated time and again over the course of my career. And, of course, it comes at a cost. Siloing of experience in the tech lead makes the team brittle, it makes support harder, and it places ever greater pressure on the tech lead as a single point of failure. What follows next is predictable: burnout, departure, and ensuing crisis as the team struggles to survive without the one person who really knows how everything works.&lt;/p&gt;
    &lt;p&gt;As is usually the case, the solution lies in a third way that avoids these two extremes and balances delivery with team growth. We might frame it as something like:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Implement team practices that allow engineers to deliver working code within a framework that minimises rework, maximises effective collaboration, and promotes personal growth and learning.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;When I was CTO of Datasine, we enshrined this attitude in a simple tech team motto:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Learn. Deliver. Have fun.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Good tech leads expose their engineers to work at the limit of their capabilities, using processes and practices that minimise delivery risk while also enabling each team member to grow their skills, knowledge, and domain expertise. This is, in fact, the essence of good technical leadership.&lt;/p&gt;
    &lt;p&gt;There are many ways to accomplish it, from strict codified frameworks such as the Extreme Programming rules, through to looser sets of principles which we might broadly refer to as “best practices”:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Code reviews&lt;/item&gt;
      &lt;item&gt;Incremental delivery&lt;/item&gt;
      &lt;item&gt;Modular design&lt;/item&gt;
      &lt;item&gt;Test-driven development&lt;/item&gt;
      &lt;item&gt;Pair programming&lt;/item&gt;
      &lt;item&gt;Quality documentation&lt;/item&gt;
      &lt;item&gt;Continuous integration&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;So, for experienced engineers today, an urgent question is: how can we translate these practices into a world of AI-driven coding?&lt;/p&gt;
    &lt;head rend="h2"&gt;LLMs are lightning fast junior engineers&lt;/head&gt;
    &lt;p&gt;In 2025, many engineers are finding themselves for the first time in a position familiar to every tech lead: overseeing a brilliant but unpredictable junior engineer. Harnessing and controlling such talent, in a way that benefits effective team collaboration, is one of the primary challenges of engineering leadership. But AI coding agents need different management to junior engineers, because the nature of their productivity and growth is fundamentally different.&lt;/p&gt;
    &lt;p&gt;As software engineers gain experience, we tend to improve our productivity in multiple ways at the same time: writing more robust code, using better abstractions, spending less time writing and fixing bugs, understanding more complex architectures, covering edge cases more effectively, spotting repeated patterns earlier, etc. Engineering is a rich and complex discipline with many avenues for specialisation, but for simplicity we might group these dimensions into two broad themes:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Quality: ability to deliver more complex, more performant, more maintainable code&lt;/item&gt;
      &lt;item&gt;Velocity: ability to develop working, bug-free code in a shorter space of time&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Over time, good engineers will improve in both axes.&lt;/p&gt;
    &lt;p&gt;Early LLMs were fast to write code, but time spent fixing bugs and removing hallucinations meant they were slow to complete bug-free code. Over time, smarter LLMs and better use of context engineering and tools have meant that modern AI coding agents are much better at “one shot” writing of code. The current generation of commercially available agents can be incredibly fast at producing working code for problems that would challenge some mid-level engineers, though they cannot yet match the expertise of senior engineers:&lt;/p&gt;
    &lt;p&gt;So we can think of the current generation of AI coding agents as junior engineers, albeit with two fundamental differences:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;LLMs deliver code much, much faster than junior engineers, constrained neither by thinking nor writing time;&lt;/item&gt;
      &lt;item&gt;LLMs have no true capacity to learn, and instead only improve through more effective context engineering or the arrival of new foundation models.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;As with junior engineering talent, there are broadly two ways that you can deploy them, depending on whether your focus is long-term or short-term:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;AI-driven engineering: employing best practices, foregrounding human understanding of the code, moving slowly to make development sustainable.&lt;/item&gt;
      &lt;item&gt;Vibe coding: throwing caution to the wind and implementing at speed, sacrificing understanding for delivery velocity, hitting an eventual wall of unsalvageable, messy code.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;As might be expected, the long-term trajectories of choosing between these two approaches follow much the same pattern as choosing between parallel delegation and mollycoddling of a junior team:&lt;/p&gt;
    &lt;p&gt;This is why the vibe coding approach is great for tiny projects or throwaway prototypes: applications of sufficient simplicity can be delivered without the need for any human thinking at all. By limiting the complexity of our projects and leaning into the capabilities of the tools, we can deliver end-to-end working software in no time at all.&lt;/p&gt;
    &lt;p&gt;But you will hit a wall of complexity that AI is incapable of scaling alone.&lt;/p&gt;
    &lt;p&gt;Building prototypes is now easier than ever. But if we want to effectively use LLMs to accelerate delivery of real, complex, secure, working software, and to realise more than marginal efficiency gains, we need to write a new playbook of engineering practices tailored to maximise collaboration between engineering teams that include both humans and LLMs.&lt;/p&gt;
    &lt;head rend="h2"&gt;How to avoid the AI coding trap&lt;/head&gt;
    &lt;p&gt;AI coding agents are dazzlingly productive, but lack in-depth knowledge of your business, codebase, or roadmap. Left unchecked, they will happily churn out thousands of lines of code with no heed paid to design, consistency, or maintainability. The job of the engineer, then, is to act as a tech lead to these hotshots: to provide the structure, standards, and processes that convert raw speed into sustainable delivery.&lt;/p&gt;
    &lt;p&gt;We need a new playbook for how to deliver working software efficiently, and we can look to the past to learn how to do that. By treating LLMs as lightning-fast junior engineers, we can lean on best practices from the software development lifecycle to build systems that scale.&lt;/p&gt;
    &lt;p&gt;Just as tech leads don't just write code but set practices for the team, engineers now need to set practices for AI agents. That means bringing AI into every stage of the lifecycle:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Specification: exploring, analysing, and refining feature specifications to cover edge cases and narrow focus.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;quote&gt;
      &lt;p&gt;Documentation: generating and reviewing documentation up front to provide reusable guardrails and lasting evidence.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;quote&gt;
      &lt;p&gt;Modular Design: scaffolding modular architectures to control context scope and maximise comprehension.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;quote&gt;
      &lt;p&gt;Test-Driven Development: generating extensive test cases prior to implementation to guide implementation and prevent regression.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;quote&gt;
      &lt;p&gt;Coding Standards: applying house styles and best practice when generating code, through context engineering.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;quote&gt;
      &lt;p&gt;Monitoring &amp;amp; Introspection: analysing logs and extracting insights faster than any human ever could.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;By understanding that delivering software is so much more than just writing code, we can avoid the AI coding trap and instead hugely amplify our ability to deliver working, scalable software.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45405177</guid><pubDate>Sun, 28 Sep 2025 15:43:33 +0000</pubDate></item><item><title>Bayesian Data Analysis, Third edition (2013) [pdf]</title><link>https://sites.stat.columbia.edu/gelman/book/BDA3.pdf</link><description></description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45406109</guid><pubDate>Sun, 28 Sep 2025 17:23:21 +0000</pubDate></item><item><title>VMScape and why Xen dodged it</title><link>https://virtualize.sh/blog/vmscape-and-why-xen-dodged-it/</link><description>&lt;doc fingerprint="b4e311dca163e6c1"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;VMScape and why Xen dodged it&lt;/head&gt;
    &lt;p&gt;It’s been less than two weeks since the security team at ETH Zürich published their research on a new microarchitectural attack they call VMScape:&lt;/p&gt;
    &lt;p&gt;It’s a neat piece of work, and it shows once again how CPUs, with all their clever tricks for performance, can sometimes open the door to data leaks across virtual machines.&lt;/p&gt;
    &lt;head rend="h2"&gt;What is VMScape?&lt;/head&gt;
    &lt;p&gt;The short version: modern CPUs use a branch predictor to guess where code will go next. It makes things faster, but the predictor also “remembers” past patterns. If you can manipulate that memory, you can mislead the CPU and peek at things you shouldn’t. That’s the basic idea behind Spectre-style attacks.&lt;/p&gt;
    &lt;p&gt;According to the ETH team:&lt;/p&gt;
    &lt;quote&gt;“We find that branch predictor state is not fully flushed across VMs, enabling cross-VM Branch Target Injection (vBTI) primitives. We demonstrate the practical impact of vBTI with VMScape, a cross-VM attack capable of leaking QEMU userspace secrets from a malicious guest VM on AMD Zen 4 and Zen 5 CPUs.”&lt;/quote&gt;
    &lt;p&gt;In other words, a malicious VM can target the hypervisor’s userspace components and start leaking data. For KVM, that means QEMU, which is heavily exposed. VMware is in the same situation.&lt;/p&gt;
    &lt;head rend="h2"&gt;Why Xen wasn’t affected&lt;/head&gt;
    &lt;p&gt;The researchers also note that Xen is not vulnerable. That’s not because Xen has no bugs (it does, like every hypervisor), but because of its architecture.&lt;/p&gt;
    &lt;p&gt;From day one, Xen was designed to keep the hypervisor core small and move everything else out. Device emulation, storage drivers, network stacks — they all live in Dom0, which is itself just another virtual machine. Dom0 has more privileges than a normal guest, but it’s still not the hypervisor.&lt;/p&gt;
    &lt;p&gt;That architectural choice makes Xen closer to a microkernel than a traditional monolithic hypervisor. The core stays minimal, with a narrow set of responsibilities, and anything that doesn’t absolutely need to run at the highest privilege level gets pushed out. That’s not just elegant — it’s a big deal for security.&lt;/p&gt;
    &lt;head rend="h2"&gt;Size matters (in a good way)&lt;/head&gt;
    &lt;p&gt;Because the hypervisor itself is small, it’s easier to audit, reason about, and even certify. That’s why you’ll find Xen at the heart of a lot of embedded and safety-critical projects, where formal verification and certification are required. Try doing that with a massive, monolithic kernel and you’ll quickly run into a wall. With Xen, it’s actually feasible (and being done as we speak).&lt;/p&gt;
    &lt;p&gt;VMScape highlights the benefits of that design: QEMU is simply not sitting next to the hypervisor. Even if you leak information from it, you’re still only talking about a process in Dom0, not the privileged heart of the system.&lt;/p&gt;
    &lt;head rend="h2"&gt;Why this matters&lt;/head&gt;
    &lt;p&gt;Architectural choices made twenty years ago are paying off today. By separating responsibilities, Xen reduced its attack surface and avoided a whole class of problems. That doesn’t make it invincible (Xen has had and will have its share of vulnerabilities) but it does mean that by design, certain attacks don’t land as hard.&lt;/p&gt;
    &lt;p&gt;As the ETH Zürich team points out, mitigations for KVM involve adding new predictor flushes, which Linux developers have already started to implement. VMware will need similar patches. Xen doesn’t need those same emergency measures, because the architecture already put a buffer in place.&lt;/p&gt;
    &lt;head rend="h2"&gt;Defense in depth&lt;/head&gt;
    &lt;p&gt;It’s tempting to say “Xen wins” and stop there. But that’s not the whole story. Security is never just about one design decision. CPUs will keep evolving, new side channels will keep appearing, and no hypervisor can afford to be complacent.&lt;/p&gt;
    &lt;p&gt;Still, VMScape is a good reminder that defense in depth starts at the architecture level. A small, microkernel-like core, privilege separation, isolation of device emulation — all of that adds resilience. It won’t stop every possible attack, but it does add another layer of safety, and in security, layers are what make the difference.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45406573</guid><pubDate>Sun, 28 Sep 2025 18:19:01 +0000</pubDate></item><item><title>The QMA Singularity</title><link>https://scottaaronson.blog/?p=9183</link><description>&lt;doc fingerprint="310f29fe25a40c80"&gt;
  &lt;main&gt;
    &lt;head rend="h2"&gt;The QMA Singularity&lt;/head&gt;
    &lt;p&gt;A couple days ago, Freek Witteveen of CWI and I posted a paper to the arXiv called “Limits to black-box amplification in QMA.” Let me share the abstract:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;We study the limitations of black-box amplification in the quantum complexity class QMA. Amplification is known to boost any inverse-polynomial gap between completeness and soundness to exponentially small error, and a recent result (Jeffery and Witteveen, 2025) shows that completeness can in fact be amplified to be doubly exponentially close to 1. We prove that this is optimal for black-box procedures: we provide a quantum oracle relative to which no QMA verification procedure using polynomial resources can achieve completeness closer to 1 than doubly exponential, or a soundness which is super-exponentially small. This is proven by using techniques from complex approximation theory, to make the oracle separation from (Aaronson, 2008), between QMA and QMA with perfect completeness, quantitative.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;You can also check out my PowerPoint slides here.&lt;/p&gt;
    &lt;p&gt;To explain the context: QMA, or Quantum Merlin Arthur, is the canonical quantum version of NP. It’s the class of all decision problems for which, if the answer is “yes,” then Merlin can send Arthur a quantum witness state that causes him to accept with probability at least 2/3 (after a polynomial-time quantum computation), while if the answer is “no,” then regardless of what witness Merlin sends, Arthur accepts with probability at most 1/3. Here, as usual in complexity theory, the constants 2/3 and 1/3 are just conventions, which can be replaced (for example) by 1-2-n and 2-n using amplification.&lt;/p&gt;
    &lt;p&gt;A longstanding open problem about QMA—not the biggest problem, but arguably the most annoying—has been whether the 2/3 can be replaced by 1, as it can be for classical MA for example. In other words, does QMA = QMA1, where QMA1 is the subclass of QMA that admits protocols with “perfect completeness”? In 2008, I used real analysis to show that there’s a quantum oracle relative to which QMA ≠ QMA1, which means that any proof of QMA = QMA1 would need to use “quantumly nonrelativizing techniques” (not at all an insuperable barrier, but at least we learned something about why the problem is nontrivial).&lt;/p&gt;
    &lt;p&gt;Then came a bombshell: in June, Freek Witteveen and longtime friend-of-the-blog Stacey Jeffery released a paper showing that any QMA protocol can be amplified, in a black-box manner, to have completeness error that’s doubly exponentially small, 1/exp(exp(n)). They did this via a method I never would’ve thought of, wherein a probability of acceptance is encoded via the amplitudes of a quantum state that decrease in a geometric series. QMA, it turned out, was an old friend that still had surprises up its sleeve after a quarter-century.&lt;/p&gt;
    &lt;p&gt;In August, we had Freek speak about this breakthrough by Zoom in our quantum group meeting at UT Austin. Later that day, I asked Freek whether their new protocol was the best you could hope to do with black-box techniques, or whether for example one could amplify the completeness error to be triply exponentially small, 1/exp(exp(exp(n))). About a week later, Freek and I had a full proof written down that, using black-box techniques, doubly-exponentially small completeness error is the best you can do. In other words: we showed that, when one makes my 2008 QMA ≠ QMA1 quantum oracle separation quantitative, one gets a lower bound that precisely matches Freek and Stacey’s protocol.&lt;/p&gt;
    &lt;p&gt;All this will, I hope, interest and excite aficianados of quantum complexity classes, while others might have very little reason to care.&lt;/p&gt;
    &lt;p&gt;But here’s a reason why other people might care. This is the first paper I’ve ever put out for which a key technical step in the proof of the main result came from AI—specifically, from GPT5-Thinking. Here was the situation: we had an N×N Hermitian matrix E(θ) (where, say, N=2n), each of whose entries was a poly(n)-degree trigonometric polynomial in a real parameter θ. We needed to study the largest eigenvalue of E(θ), as θ varied from 0 to 1, to show that this λmax(E(θ)) couldn’t start out close to 0 but then spend a long time “hanging out” ridiculously close to 1, like 1/exp(exp(exp(n))) close for example.&lt;/p&gt;
    &lt;p&gt;Given a week or two to try out ideas and search the literature, I’m pretty sure that Freek and I could’ve solved this problem ourselves. Instead, though, I simply asked GPT5-Thinking. After five minutes, it gave me something confident, plausible-looking, and (I could tell) wrong. But rather than laughing at the silly AI like a skeptic might do, I told GPT5 how I knew it was wrong. It thought some more, apologized, and tried again, and gave me something better. So it went for a few iterations, much like interacting with a grad student or colleague. Within a half hour, it had suggested to look at the function&lt;/p&gt;
    &lt;p&gt;$$ Tr[(I-E(\theta))^{-1}] = \sum_{i=1}^N \frac{1}{1-\lambda_i(\theta)}. $$&lt;/p&gt;
    &lt;p&gt;It pointed out, correctly, that this was a rational function in θ of controllable degree, that happened to encode the relevant information about how close the largest eigenvalue λmax(E(θ)) is to 1. And this … worked, as we could easily check ourselves with no AI assistance. And I mean, maybe GPT5 had seen this or a similar construction somewhere in its training data. But there’s not the slightest doubt that, if a student had given it to me, I would’ve called it clever. Obvious with hindsight, but many such ideas are.&lt;/p&gt;
    &lt;p&gt;I had tried similar problems a year ago, with the then-new GPT reasoning models, but I didn’t get results that were nearly as good. Now, in September 2025, I’m here to tell you that AI has finally come for what my experience tells me is the most quintessentially human of all human intellectual activities: namely, proving oracle separations between quantum complexity classes. Right now, it almost certainly can’t write the whole research paper (at least if you want it to be correct and good), but it can help you get unstuck if you otherwise know what you’re doing, which you might call a sweet spot. Who knows how long this state of affairs will last? I guess I should be grateful that I have tenure.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45406911</guid><pubDate>Sun, 28 Sep 2025 19:00:20 +0000</pubDate></item><item><title>Roe (YC W24) Is Hiring</title><link>https://news.ycombinator.com/item?id=45407951</link><description>&lt;doc fingerprint="272cfbb0f5843336"&gt;
  &lt;main&gt;
    &lt;div&gt;
      &lt;p&gt;ROE is building AI Agents for risk and compliance. We are trusted by companies like eBay, Affirm and Tier 1 banks.&lt;/p&gt;
      &lt;p&gt;Hiring ambitious, talented founding engineers. Base $150K-250K, 0.75-2% options.&lt;/p&gt;
      &lt;p&gt;San Mateo office, 3 days hybrid working mode. Free lunch.&lt;/p&gt;
      &lt;p&gt;We sponsor H1B / PERM.&lt;/p&gt;
      &lt;p&gt;Link to apply https://www.ycombinator.com/companies/roe/jobs/OFFxite-found...&lt;/p&gt;
    &lt;/div&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45407951</guid><pubDate>Sun, 28 Sep 2025 21:00:07 +0000</pubDate></item><item><title>Play snake in the URL address bar</title><link>https://demian.ferrei.ro/snake/</link><description>&lt;doc fingerprint="5cfba17d98173e2c"&gt;
  &lt;main&gt;
    &lt;p&gt;⚠ Sorry, this game requires JavaScript. URL: ? Use the arrow keys or WASD to control the snake on the URL. Use the arrows to control the snake on the URL. Click here if you can't see the page URL or if it looks messed up with . 〈 ! Your highest score is points! Share 〈 ▲︎ ◀︎ ▼︎ ▶︎&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45408021</guid><pubDate>Sun, 28 Sep 2025 21:08:15 +0000</pubDate></item><item><title>Farewell friends</title><link>https://humbledollar.com/forum/farewell-friends/</link><description>&lt;doc fingerprint="7e10d11d8ab6920a"&gt;
  &lt;main&gt;
    &lt;p&gt;Go to main Forum page »&lt;/p&gt;
    &lt;p&gt;If this post is appearing, it means I’ve succumbed to cancer or one of its side effects. Please don’t feel sad for me. I’ve had a life filled with love, great experiences and wonderful career opportunities. Despite my demise at a relatively young age, I consider myself beyond fortunate.&lt;/p&gt;
    &lt;p&gt;I’m hoping that, under the tree in front of our little Philadelphia rowhome, my wife Elaine will place a stone tablet inscribed with my name, and the year I was born and died. Underneath, I’d like the tablet to read:&lt;/p&gt;
    &lt;p&gt;Family • Readers • Words&lt;/p&gt;
    &lt;p&gt;(Note to Elaine: If you ever move, feel free to take the tablet with you.)&lt;/p&gt;
    &lt;p&gt;Family is everybody who’s brought love into my life: Elaine, my two children, my larger family, my close friends. Meanwhile, readers have been those I’ve served, and who rewarded that service with so much loyalty and affection. Finally, words have been my playground, taking the insights I’ve garnered and trying to make them understandable to others. Beside the tree are two metal chairs. I hope family and passersby will occasionally stop by, and fill me in on what I’ve been missing.&lt;/p&gt;
    &lt;p&gt;I’ve asked Elaine to arrange a memorial service at St Peter’s Church in Philadelphia’s Old City. She’ll post the time and date to the Forum when the details have been worked out.&lt;/p&gt;
    &lt;p&gt;Regular readers will know much of my life’s story. But I figure it’s appropriate to offer a not-so-brief recap.&lt;/p&gt;
    &lt;p&gt;I was born at 14 St Margarets Drive in Twickenham, London, on Jan. 2, 1963. At that time in the UK, it was standard practice for mothers to give birth in the hospital if it was their first child—or, in my mother’s case, her first two children. My older brothers, who are identical twins, had been born two years earlier. Because that first delivery went smoothly, my birth would be at home. From what I gather, the midwife took cigarette and scotch breaks with my father during lulls in the action. I was born at 6 a.m., thus establishing a lifetime habit of starting early.&lt;/p&gt;
    &lt;p&gt;In 1966, my father left financial journalism for a job at the World Bank, and we moved from London to Washington, DC. Two years later, my younger sister was born. In late 1972, my father was posted to the World Bank’s Bangladesh office for four years, and I was dispatched to boarding school in England, joining my two brothers.&lt;/p&gt;
    &lt;p&gt;After the comforts of a U.S. suburban childhood, it was a brutal change—cold dormitories, disgusting food, endless bullying—and I carried the scars for the rest of my life. But there was a silver lining: After nine years of boarding school, I squeaked into Cambridge University, where I spent much of my three years writing for and editing the student newspaper.&lt;/p&gt;
    &lt;p&gt;When I graduated Cambridge in 1985, the UK economy was in rough shape and landing a job was difficult. I ended up working for Euromoney magazine in London. Initially, all went well. But then there was a change in editor and, for reasons I never understood, the new editor took an instant dislike to me and made it clear he wanted me gone. But by then, I’d already decided to leave London and return to the U.S.&lt;/p&gt;
    &lt;p&gt;My then-fiancee and I flew to New York in August 1986. After a desperate scramble, I landed a job as a reporter—read “fact checker”—at Forbes magazine. The pay was miserable, but I couldn’t have been more grateful for that first paycheck. By then, all I had to my name was credit card debt.&lt;/p&gt;
    &lt;p&gt;Molly and I were married the following June, and Hannah arrived 15 months later. Her younger brother, Henry, would follow in 1992.&lt;/p&gt;
    &lt;p&gt;After 23 months as a fact checker, I was promoted to staff writer at Forbes, covering mutual funds. The Wall Street Journal, which was also in need of a funds reporter, came calling 16 months later. I’d always thought I’d never be a real journalist until I worked for a daily newspaper, and yet initially I said no.&lt;/p&gt;
    &lt;p&gt;At the time, I was in the midst of six months as a single parent, looking after Hannah on my own while Molly was in Syria, Greece and Turkey conducting research for her PhD. Still, the Journal wasn’t deterred, saying it would make allowances during my initial months.&lt;/p&gt;
    &lt;p&gt;In the early 1990s, the Journal was very different from the newspaper it is today. No photos, just the dot drawings for which the paper was renowned. While strong opinions could be found on the editorial page, they were to be avoided in the news pages. The sort of advice journalism I favored was frowned upon by some among the paper’s senior ranks.&lt;/p&gt;
    &lt;p&gt;Still, in 1994, Managing Editor Paul Steiger said he’d consider a few columnists for the Journal’s news pages. At age 31, and with some trepidation, I put up my hand. Thus was born the Getting Going column, which I wrote for the next 13-plus years, penning 1,009 columns for both The Wall Street Journal and Wall Street Journal Sunday. The latter were branded pages that appeared in some 70 newspapers around the country.&lt;/p&gt;
    &lt;p&gt;In retrospect, it’s astonishing that I was given my own column at such a young age. It took me a few months to hit my stride, but I was soon pounding away at the virtues of index funds, while also exploring new topics, often scouring academic research for insights I could share with readers.&lt;/p&gt;
    &lt;p&gt;The decade and a half that followed are something of a blur. I was cranking out columns, commuting into New York City from the New Jersey suburbs, and raising two children. In my memory, the years have the monotony of a hamster wheel. But that wasn’t the reality: There were high points and low points, plus the joy of watching Hannah and Henry grow up. The low points included the World Trade Center attack, my father’s death and a libel suit brought against the Journal. I’d been involved in editing the story that triggered the lawsuit.&lt;/p&gt;
    &lt;p&gt;In early 1995, while in Pittsburgh, I went on a nine-mile run with my brother-in-law, who was training for the city’s marathon. I’d long viewed running those 26.2 miles as a heroic endeavor. I committed to returning for the next year’s marathon. But I didn’t simply want to complete the distance. Instead, I set a goal of finishing in under three hours. I managed it, though barely, crossing the finish line 24 seconds under the three-hour mark.&lt;/p&gt;
    &lt;p&gt;I ran countless road races over the next dozen years. I had my greatest success with half-marathons, finishing third in the four races I ran on land—and first in the 2001 half-marathon held on the deck of a boat floating off Antarctica. In shorter races, from one mile to 10, I also managed perhaps a dozen first-place finishes. What about the tearful, wimpy English schoolboy who had previously shunned athletic endeavors? Over countless miles, I managed to leave him behind.&lt;/p&gt;
    &lt;p&gt;Career and athletic success were not, alas, rivaled by relationship success. Molly announced she wanted a divorce in 1998. It would be the first of two failed marriages—not an achievement I’m proud of. But the third time was a charm. In the midst of the pandemic, Elaine and I met in August 2020, the month my second marriage officially ended. We were living together by the end of the month and married almost four years later, in May 2024, five days after my cancer diagnosis. I met Elaine during one of my life’s roughest periods, and was so lucky to have done so. Elaine, I fear, was not so fortunate, for now she must navigate the world on her own.&lt;/p&gt;
    &lt;p&gt;By 2006 or so, I’d started to tire of the Getting Going column, and began casting around for what to do next. I had a few conversations with potential employers, but those came to naught. Then, one day in early 2008, my phone rang. It was Andy Seig from Citigroup. He was heading up a startup within Citi known as myFi, which was aiming to deliver advice on a client’s entire financial life in return for a flat monthly fee. It was, I imagined, the exit from the Journal I was looking for.&lt;/p&gt;
    &lt;p&gt;I joined myFi that spring, and it soon became apparent that launching a startup in the middle of a huge corporate bureaucracy was a foolhardy endeavor. Layered on top of that was the financial crisis that unfolded through the year. By mid-2009, myFi was dead, and we employees spent a long, aimless summer trying to figure out what was next.&lt;/p&gt;
    &lt;p&gt;Next turned out to be a new wealth management operation cobbled together by combining myFi’s remaining employees, who had been hired to launch an innovative new financial service, and the old school brokers who sat in Citi’s bank branches. It wasn’t exactly a match made in heaven.&lt;/p&gt;
    &lt;p&gt;I toughed it out at Citi until spring 2014. Money was undoubtedly part of the reason. I was making more than $300,000 a year, a gaudy sum for a onetime ink-stained wretch. And the job wasn’t without interest. As director of financial education for the U.S. wealth management business, I gave more than 30 speeches in some years—forcing me to overcome my fear of public speaking—and I was dealing with financial topics I’d rarely written about as a journalist, while also learning about the investment business from the inside. Still, I was also frustrated by the nit-picky oversight of lawyers and compliance officers, and vowed to leave.&lt;/p&gt;
    &lt;p&gt;For a year, I planned my departure, getting my finances in order and setting in motion some work projects for my life after Citi. I waited until I got my final year-end bonus in early 2014, and then handed in my notice.&lt;/p&gt;
    &lt;p&gt;What followed was a period I came to call my second childhood. Initially, that meant a 15-month return to The Wall Street Journal as a freelance columnist—I left when my editor got ousted during a round of layoffs in 2015—and also working on two annual editions of the Jonathan Clements Money Guide. That guide eventually became the core of HumbleDollar, which I launched on Dec. 31, 2016.&lt;/p&gt;
    &lt;p&gt;The two printed editions of the money guide were among the nine books I wrote over my career—eight personal finance books and a novel. I also edited two books, including My Money Journey, a compilation of 30 essays by HumbleDollar writers, and contributed essays to a fistful of other tomes, including penning the foreword to two Bill Bernstein books. None of the books I authored was a huge success. But my favorite, and the one with the best sales, was my 2016 book, How to Think About Money.&lt;/p&gt;
    &lt;p&gt;In 2016, I was also contacted by Peter Mallouk, president of fast-growing Creative Planning, a registered investment advisor that favored index funds and sought to help clients with their entire financial life. As at Citi, I was again given the title of director of financial education, though I remained an independent contractor and worked limited hours for Creative. Still, for me, it proved to be one of my career’s most enjoyable professional relationships. Peter was great to work with, and together we hosted a monthly podcast that ran for the rest of my life.&lt;/p&gt;
    &lt;p&gt;By May 2024, I’d been living in Philadelphia for more than three years, I was engaged to Elaine and living just an eight-minute walk from my daughter, son-in-law and two grandsons. The youngest was born that month. Elaine and I were talking about retirement, trying to figure out how we could travel more and have more time for each other, even as I kept HumbleDollar humming along.&lt;/p&gt;
    &lt;p&gt;And then I got my cancer diagnosis.&lt;/p&gt;
    &lt;p&gt;The period immediately after was astonishingly busy, as I tried to get my affairs in order and prep HumbleDollar for a life without me, even as my diagnosis triggered a surprising amount of media attention. The New York Times wrote about my illness, I was interviewed for Consuelo Mack’s WealthTrack, and I was asked to pen articles for The Washington Post, The Telegraph of London, The Wall Street Journal and AARP magazine. Who knew that candor about one’s own death would generate so much interest? It was an odd bookend to a life spent partly in the public eye—one that had previously been most notable for pounding the table for index funds.&lt;/p&gt;
    &lt;p&gt;I faced the final months not with sorrow, but with great gratitude. I had spent almost my entire adult life doing what I love and surrounded by those that I love. Who could ask for more?&lt;/p&gt;
    &lt;p&gt;Rest in Peace, Jonathan. My heartfelt condolences to your family. You were a great inspiration for your investing wisdom, retirement planning and you had a unique gift through your writings to reach out to countless investors. Thank you for your insights and wisdom over these years – truly appreciate it!&lt;/p&gt;
    &lt;p&gt;Jonathan…I have tears in my eyes as I write this. You have meant so much to so many. I enjoyed briefly chatting with you a few years go to invite you to address our group in Los Angeles. Was also delighted to contribute a column to Humble Dollar a few years ago detailing the benefit of saving early so you can retire early. Your editing of my column was totally “on point.” More importantly… condolences to Elaine and your family. To me, you are the most influential personal finance//investor writer that I have ever come across. Your columns in the WSJ gave me the confidence to be a DIYer. The “tone” of your columns were always so welcoming. God Bless you Jonathan and may you rest in peace. Fondest Regards and Admiration, Fred&lt;/p&gt;
    &lt;p&gt;Reading your words, I felt both a deep sadness and an overwhelming sense of gratitude for the way you’ve reflected on life. The way you described family, readers, and words as the core pillars of your journey is incredibly moving. It’s clear you not only lived fully but also gave so much of yourself to others. Your story about resilience—from tough school years to marathon running—shows how determination can reshape even the hardest parts of life. Somewhere in your reflections, when you mention the small everyday comforts, it reminded me how important it is to hold onto simple things.&lt;lb/&gt; What stands out most is your unwavering honesty and gratitude. If you could leave one piece of advice for younger readers—those just starting out in their personal and professional journeys—what would it be?&lt;/p&gt;
    &lt;p&gt;I am so very sorry to hear this news. We all read Elaine’s post Saturday about Hospice hoping this one would not come soon.&lt;/p&gt;
    &lt;p&gt;My deepest condolences and prayers for all of the Clements.&lt;/p&gt;
    &lt;p&gt;He will be sorely missed, not just for his humor and sage advice , but for the strength and fortitude he exhibited these last few years, as exemplified by the first sentences of this post, and this almost immortal quote&lt;/p&gt;
    &lt;p&gt;“I’m not brave,” Clements told a friend last year. “Dying is a full-time job, so I might as well try to do it well. I’m just trying to get the most out of each day.”&lt;lb/&gt;I have read Jonathan”s work avidly since well before he left the WSJ the first time. Somehow I always managed to find him again and keep listening.&lt;/p&gt;
    &lt;p&gt;While his early messages were about investing and gradually moved to focus on index funds and simplicity.&lt;/p&gt;
    &lt;p&gt;I did not follow as much of the index funds and simplicity advice as he would have liked. Fiddling around with finances is enjoyable but he has to take a fair amount of the blame for that as HD columns have illuminated a lot of the mystery, making it enjoyable.&lt;/p&gt;
    &lt;p&gt;What will stick with me forever and what made the greatest impression on me was his advice to live frugally, spend money on experiences, not material goods so as to enjoy life the most with the ones you love and to be prepared at the end so as not to leave your family with a mess.&lt;/p&gt;
    &lt;p&gt;Rest in Peace dear friend.&lt;/p&gt;
    &lt;p&gt;Like everyone who has written before me, I owe many thanks to Jonathan’s writings and the many contributors who have helped me stay connected and informed as my own career in the finance industry ended upon retirement.&lt;/p&gt;
    &lt;p&gt;Jonathan was simply too young to now be gone, but as we mostly know and accept, there is seldom a “good” time to depart. To his family: I grieve for your loss and thank you for sharing him with us for along as we had him.&lt;/p&gt;
    &lt;p&gt;My condolences to Jonathan Clements family. May Jonathan Rest in Peace and may God Bless Jonathan and his family.&lt;lb/&gt; Thank you Jonathan for your lessons and articles. You’ve left a great legacy that will go on for many years. To the Humble Dollar team, you learned a lot and are great writers and my condolences to all of you.&lt;lb/&gt; yours Greg Winnipeg, Manitoba Canada&lt;/p&gt;
    &lt;p&gt;Condolences to Jonathan’s family. As with other commentators here, from his earliest days at WSJ Jonathan has had a profound impact on my financial trajectory and the way I approached life. His advice to work hard and save while young made all the difference. His brave and industrious acceptance of his cancer diagnoses provides a further lesson. What a profoundly meaningful life.&lt;/p&gt;
    &lt;p&gt;So sad to hear about Jonathan’s passing. Even though I was about twelve years older than him, he felt like a father figure to me because of his wise advice.&lt;/p&gt;
    &lt;p&gt;I saved every email he sent me when I was submitting Humble Dollar articles for him to edit. They’re all archived under my old AOL account, simply titled “blog” — too many for me to count.&lt;/p&gt;
    &lt;p&gt;I guess I was trying to hold on to something that was very special to me. I will miss him very much.&lt;/p&gt;
    &lt;p&gt;My condolences to Elaine and his family.&lt;/p&gt;
    &lt;p&gt;My deepest condolences to Elaine, June, Hannah, Henry, Irina, Nicholas &amp;amp; Andrew. Jonathan was a Giant in the financial world, giving wisdom &amp;amp; guidance to millions of people through the WSJ, Sunday newspapers, Humble Dollar &amp;amp; his books. He will be greatly missed by all of us.&lt;lb/&gt; RIP Jonathan.&lt;/p&gt;
    &lt;p&gt;Even anticipating this day, I was a bit surprised to be as emotional about the passing of someone who I’ve never met except for the occasional online interchange. But then again, it was a nearly 30 year “relationship,” and one I credit for significant material benefit. Condolences to Elaine, Jon’s family, and the larger personal finance family that looked to Jon as a source of trusted advice. RIP.&lt;/p&gt;
    &lt;p&gt;Whenever I find myself about to say or do something that will highlight my ignorance, envy, lack of empathy, unkindness, or any of my various other personality and behavioral defects, I hope to be able to stop before I do so and ask myself, “What would Jonathan do?”. Such a class act and role model in so many ways.&lt;/p&gt;
    &lt;p&gt;Condolences to his family. He is leaving his large legacy of financial literacy to both the younger population studying and working and the retired population trying to sustain their finances in non-working years. A life should be lived that way to be useful for so many. I benefited from his writings. RIP Jonathan Clements.&lt;/p&gt;
    &lt;p&gt;That’s a heck of a life you lived, Jonathan. While you died before your time, you did a lot of living. A lot. And much of it devoted to the welfare of others. May God bless you, and keep you.&lt;/p&gt;
    &lt;p&gt;And I’m very pleased that we have several more of your reflections to look forward to over the coming months. I’ll think of you every time I check back with the Humble Dollar community.&lt;/p&gt;
    &lt;p&gt;My sympathies to Elaine, and Jonathan’s entire family. We lost a very good man. It saddens me greatly to think that he is no longer with us.&lt;/p&gt;
    &lt;p&gt;Farewell, Jonathan, and thank you.&lt;/p&gt;
    &lt;p&gt;Deepest condolences to Elaine and the entire family. All of us would hope to have loved ones like you for support and comfort in their final hours. Be sure to take good care of yourselves in the grieving process, and take comfort in knowing that Jonathan left a legacy of impact and respect very few can hope to approach.&lt;/p&gt;
    &lt;p&gt;Peace.&lt;/p&gt;
    &lt;p&gt;A sad day that I hoped would continue to be delayed. I’m so grateful to Jonathan for his wisdom, his kindness and his encouragement. He welcomed and encouraged me to be an active part of this community. Since I was a minister he would reach out to me on religious holidays for my take on issues of money &amp;amp; spirituality. He lived an amazing life and he left us so many lessons, especially after his cancer diagnosis. My thought and love are with Elaine and his family. What a gift he and his life were for all of us. May we take a piece of him with us as we try to make the world a little better on our journeys. He left us a wonderful roadmap. Blessings, love and thanks.&lt;/p&gt;
    &lt;p&gt;While I’m still a work in progress, Jonathan taught me more about the relationship between money and happiness than anyone. I will cherish my last email from Jonathan a month ago. He had heard I had a health event and wanted me to know he was thinking of me. Just like Jonathan to be thinking of others while he knew he was dying and likely in so much pain.&lt;/p&gt;
    &lt;p&gt;Jonathan, thanks for all you have done for me and millions of others. I know your passing was expected but it’s still shocking for me.&lt;/p&gt;
    &lt;p&gt;Elaine, I’ve never met you but I do know you made Jonathan’s final years so happy. Thank you, and I’m so sorry for your loss.&lt;/p&gt;
    &lt;p&gt;My heart aches after reading this. Even though we never met in person, you have helped settle my anxiety about investments and the market shifts, etc., through your writings. I have always looked forward to reading your articles each day. I lift your family up in prayer this morning. May they be comforted during this time. So thankful, God created a place in Heaven for each of us where we will live pain free for eternity.&lt;/p&gt;
    &lt;p&gt;Susan Hayden&lt;lb/&gt; Tupelo MS&lt;/p&gt;
    &lt;p&gt;RIP, Jonathan. It was a privilege to be able to meet and work with you over the past four years as a contributor to HD. What a surprise it was for me to find out that such an accomplished journalist and a brilliant investing mind could be so down-to-earth and humble. But that was the kind of person you were. Your wisdom lives on in the thousands of readers you touched over the years at the WSJ and here on HD. You will be greatly missed.&lt;/p&gt;
    &lt;p&gt;Our deepest condolences to Elaine, Hannah, Henry, and the rest of the family.&lt;/p&gt;
    &lt;p&gt;Jonathan,&lt;/p&gt;
    &lt;p&gt;You were first my hero and then my friend. You were a gift to this world and epitomized “The Man in the Arena”:&lt;/p&gt;
    &lt;p&gt;THE MAN IN THE ARENA&lt;/p&gt;
    &lt;p&gt;“IT IS NOT THE CRITIC WHO COUNTS. NOT TRE MAN WHO POINTS OUT HOW THE STRONG MAN STUMBLES, OR WHERE THE DOER OF DEEDS COULD HAVE DONE THEM BETTER. THE CREDIT BELONGS TO THE MAN WHO IS ACTUALLY IN THE ARENA, WHOSE FACE IS MARRED BY DUST AND SWEAT AND BLOOD; WHO STRIVES VAL IANTLY; WHO ERRS, WHO COMES SHORT AGAIN AND AGAIN, BECAUSE THERE IS NO EFFORT WITHOUT ERROR AND SHORTCOMING: BUT WHO DOES ACTUALLY STRIVE TO DO THE DEEDS; WHO KNOWS GREAT ENTHUSIASMS, THE GREAT DEVOTIONS: WHO SPENDS HIMSELF IN A WORTHY CAUSE; WHO AT THE BEST KNOWS IN THE END THE TRIUMPH OF HIGH ACHIEVEMENT, AND WHO AT THE WORST, IF HE FAILS, AT LEAST FAILS WHILE DARING GREATLY, SO THAT HIS PLACE SHALL NEVER BE WITH THOSE COLD AND TIMID SOULS WHO NEITHER KNOW VICTORY NOR DEFEAT.”&lt;/p&gt;
    &lt;p&gt;Theodore Roosevelt&lt;/p&gt;
    &lt;p&gt;You taught us how to dare greatly and live a happy, fulfilling life, using money as a tool to this end. You also taught us how to die a regret free life. You talked the talk and walked the walk. I am privileged to have met you, dined with you, and even hosted you on my podcast Catching Up to FI. When I “came out of the closet” as a late starter on the journey to financial independence, you deftly edited my prose and published my post “Saving Our Retirement” on Humble Dollar. I am forever grateful to you for your generous friendship and the personal impact you have had on my life and those of countless others.&lt;/p&gt;
    &lt;p&gt;Rest in Peace.&lt;/p&gt;
    &lt;p&gt;Love,&lt;/p&gt;
    &lt;p&gt;Bill Yount, MD&lt;/p&gt;
    &lt;p&gt;My sincere condolences to the Clements family on the loss of your dear Jonathan. I am grateful that I joined the HD community five years ago, when I especially needed just what was here, and will continue to be: financial and personal advice, camaraderie and, very importantly, civility. You are in my prayers.&lt;/p&gt;
    &lt;p&gt;Jonathan Clements was, and remains, a beacon of sensible financial wisdom. A life mentor to me and countless others, I’m sure. My condolences to your family, loved ones, the HD community and all faithful readers. Thank you for getting me going on the right track. May you rest in peace, sir.&lt;/p&gt;
    &lt;p&gt;RIP, Jonathan, and of course you penned your own farewell to us. I’m sad for your family and friends, and I’m sad for us, as we’ll have to go forward here without your wise, gentle, and gracious leadership.&lt;/p&gt;
    &lt;p&gt;It goes without saying that you’ll be missed, and since I know that one of Jonathan’s fondest wishes over his final year was for HD to live on, I hope we can all commit ourselves to that in honor of his memory.&lt;/p&gt;
    &lt;p&gt;RIP Jonathan and my heat felt condolences to Elaine and your family. In an effort to not be sad, I like to think Jonathan is now sitting shoulder to shoulder with to the likes of John Bogle, who is smiling and giving an approving nod and wink.&lt;/p&gt;
    &lt;p&gt;I started out reading the WSJ personal finance weekend edition in my Sunday local newspaper. No doubt some of Jonathan’s columns were in there. 30 plus years later I’m pushing 50 and giving advice to others. More importantly, a life of disciplined index fund/tax efficient investing has left me rich—thanks to the Mount Rushmore of Jonathan Clements, Jack Bogle, Brian Preston, and more.&lt;/p&gt;
    &lt;p&gt;Jonathan’s death happened to fall on the eve of the Jewish New Year. It is a custom to dip apples in honey to signify a hopeful sweet start to the year. With Jonathan’s wishes of no sadness as part of my wishes I will include Jon’s lust for life and giving personality. May his memory always be a blessing&lt;/p&gt;
    &lt;p&gt;A beautiful tribute, by Jonathan’s friend, Jason Zweig, at the WSJ (should be gifted/unlocked):&lt;lb/&gt; https://www.wsj.com/finance/investing/jonathan-clements-longtime-wsj-columnist-dies-at-62-8753c01d?st=zKGjNV&amp;amp;reflink=desktopwebshare_permalink&lt;/p&gt;
    &lt;p&gt;Jason’s wonderful tribute in the WSJ + now this final essay from Jonathan = the tears just keep flowing. 😭 Can’t believe he’s gone.&lt;/p&gt;
    &lt;p&gt;But I know a part of him will live on on this site and in his books and via his family. That helps, a little.&lt;/p&gt;
    &lt;p&gt;Plus the Creative Planning podcasts he did each month with Peter Mallouk. Here’s an episode:&lt;/p&gt;
    &lt;p&gt;https://podcasts.apple.com/us/podcast/signal-or-noise/id1691155499?i=1000713518395&lt;/p&gt;
    &lt;p&gt;-or-&lt;/p&gt;
    &lt;p&gt;https://open.spotify.com/episode/68ZB8CctzIdRmdnZn6xzmF?si=iD4DffFESW-B3RkiWi2ZWg&lt;/p&gt;
    &lt;p&gt;Thanks for the link, David. The story contains a great Jonathan quote:&lt;/p&gt;
    &lt;p&gt;“Dying is a full-time job, so I might as well try to do it well. I’m just trying to get the most out of each day.”&lt;/p&gt;
    &lt;p&gt;Shakespeare’s sonnet 60 somehow seems appropriate for a former enthusiastic UK student journalist:&lt;/p&gt;
    &lt;p&gt;Like as the waves make towards the pebbled shore,&lt;lb/&gt; So do our minutes hasten to their end;&lt;lb/&gt; Each changing place with that which goes before,&lt;lb/&gt; In sequent toil all forwards do contend.&lt;lb/&gt; Nativity, once in the main of light,&lt;lb/&gt; Crawls to maturity, wherewith being crown’d,&lt;lb/&gt; Crooked elipses ’gainst his glory fight,&lt;lb/&gt; And Time that gave doth now his gift confound.&lt;lb/&gt; Time doth transfix the flourish set on youth&lt;lb/&gt; And delves the parallels in beauty’s brow,&lt;lb/&gt; Feeds on the rarities of nature’s truth,&lt;lb/&gt; And nothing stands but for his scythe to mow:&lt;lb/&gt; And yet to times in hope my verse shall stand,&lt;lb/&gt; Praising thy worth, despite his cruel hand.&lt;/p&gt;
    &lt;p&gt;Like all HumbleDollar readers, I’m heartbroken after learning of Jonathan’s passing.&lt;/p&gt;
    &lt;p&gt;I feel like Socrates’ students must have felt after their master drank his fateful cup of hemlock. My teacher, my guiding light is gone. I shall not see another like him in my lifetime.&lt;/p&gt;
    &lt;p&gt;Rest in peace, Jonathan.&lt;/p&gt;
    &lt;p&gt;Even though we all knew it was coming, this hits hard. But up until Elaine recently posted that Jonathan had entered hospice, I couldn’t help hoping for a miracle.&lt;/p&gt;
    &lt;p&gt;Jonathan was, as ever, more pragmatic, and spent his last months as he’d spent all the others—carrying on with his life’s work. And as his final gift, he found a way to have Humble Dollar live on. Thanks again, Bogdan, for picking up the reins.&lt;/p&gt;
    &lt;p&gt;Over many years now I’ve admired Jonathan’s ability to teach about money—how to handle it, and how to think about it. Over the last 14 months, I’ve admired how he’s approached his own end. I intend to always remember both.&lt;/p&gt;
    &lt;p&gt;The title and first sentence sent a chill through me. Although we knew the end was coming and he kept us apprised of his health status, I wasn’t expecting the news to come out this way. But yet, the more I think about it, it was a perfect way to say farewell from a journalist. This final one will be a keeper.&lt;/p&gt;
    &lt;p&gt;Dear Elaine and June Dosik, I know how little the words of an outsider mean to you just now but I must tell you how deeply I sympathize with you and all Jonathan’s family in your great loss.&lt;/p&gt;
    &lt;p&gt;Jonathan has left a place in the whole community that will be difficult to fill. I think of all he stood for that was fine and helpful. I don’t think anything will be the same without him. Sincerely, Marjorie&lt;/p&gt;
    &lt;p&gt;Jonathan has been an inspiration over the past fifteen months since his cancer diagnosis but also through his life. So many of us have benefited from his wisdom and intellect. While I was as frugal as he or perhaps more so he provided me with guidance on how to invest my money. I quickly caught on. He trusted me to be one of the early writers on HD. I never thought I was terribly good at it but he surprised me by saying that he rarely had to do much editing to my work. Our family stayed close in spite of the distance that separated us. During difficult life situations he provided the guidance that we needed at the time. We will miss him terribly. Thank you to all who have written notes on HD expressing what he has meant to them. Rest easy Jonathan with our sister Tory and Dad.&lt;/p&gt;
    &lt;p&gt;Sorry Jonathan–I DO feel sad. I will miss your emails that always encouraged me to write more HD contributions. I will miss your wit and wisdom. I regret that we never got to meet in person. My sincere condolences go out to your family and friends.&lt;/p&gt;
    &lt;p&gt;From June Dosik: My sweet son jonathan has left our planet,and has given of himself to our world a wealth of knowledge in which we may make our life a little easier. May Humble Dollar thrive, and may you, Elaine.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45408229</guid><pubDate>Sun, 28 Sep 2025 21:31:10 +0000</pubDate></item><item><title>Go ahead, write the “stupid” code</title><link>https://spikepuppet.io/posts/write-the-stupid-code/</link><description>&lt;doc fingerprint="3b719074d3a44c98"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Go Ahead - Write the “stupid” code&lt;/head&gt;
    &lt;p&gt;When I finished school in 2010 (yep, along time ago now), I wanted to go try and make it as a musician. I figured if punk bands could just learn on the job, I could too. But my mum insisted that I needed to do something, just in case. So I went down to the local TAFE (this is like a trade school in Australia, though it has pathways into uni, it’s pretty neat!) and signed up for whatever looked good. I had always loved computers and gaming, I did all the courses for computing short of programming in school (the school didn’t offer it), and had an interest so I signed up.&lt;/p&gt;
    &lt;p&gt;It wasn’t love at first sight, as I still remember after a week freaking out in my room that I couldn’t do this. But I sat down with my massive VB.NET textbook we had to buy and pushed through it. And once I made it through, it clicked. I fell in love with programming after that, and it became something I was both good at and started growing a passion for.&lt;/p&gt;
    &lt;p&gt;From there, going through my games diploma, and my bachelors in games design and development (think a comp sci degree with game design elements, it’s pretty neat and I’m happy to answer questions about it), I wrote a lot of stupid code. Like a lot of it. In my courses, in my game jams (god good times), in my spare time when I was learning things both in uni and early in my career. It helped me refine my skills, but also learn a lot.&lt;/p&gt;
    &lt;p&gt;Fast forward to today. I’ve been doing a dive on JavaScript/TypeScript and different runtimes like NodeJS and Deno, amongst a bunch of other stuff. At first, I was looking into a deep dive into node with this talk by James Snell and wanted to try out the Streams API. Part of me wanted to start writing straight away, but held back because I didn’t think I had anything to use it on. After being unable to resist the urge to write some code after a few minutes, I just made the dumbest stock ticker I could so I could try streams out in an arbitrary way. But it left me thinking, “why didn’t I hold back”.&lt;/p&gt;
    &lt;p&gt;As I’m writing this now, I came up with the answer. As I was writing a little app to output inspirational quotes, I started umm’ing and ahh’ing over if I should make this. It’s small, it’s dumb, and there were probably plenty of options out there. But I wanted to write some code, and was interested in trying out Deno and seeing how it compiles binaries. So I did it. And I was happy (I’m very excited to use it), and I realised that I was scared to write something dumb. All my years of doing this helped refine my own abilities, but also made me much more harsh on myself. Harsh on my own code, harsh on just trying things.&lt;/p&gt;
    &lt;p&gt;After coming to this realisation, I’ve decided I’m going to give myself more grace when it comes to writing software for myself, and I encourage you all dear readers to do the same if you’ve been feeling this. There is no stupid code. There’s only code. Enjoy writing it, it doesn’t have to be nice or pretty if it’s for you. Have fun, try out that new runtime or language. Poke around and see what breaks. Keep that learning mindset, and keep feeding your curiosity. It’ll help you continue to grow across your career, and if you enjoy this kind of thing as a hobby like me, it’ll keep stoking your own enjoyment and passion.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45408617</guid><pubDate>Sun, 28 Sep 2025 22:20:59 +0000</pubDate></item><item><title>Autism may be the price of human intelligence, linked to human brain evolution</title><link>https://academic.oup.com/mbe/article/42/9/msaf189/8245036?login=false</link><description></description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45408994</guid><pubDate>Sun, 28 Sep 2025 23:32:32 +0000</pubDate></item><item><title>Use the Accept Header to Serve Markdown Instead of HTML to LLMs</title><link>https://www.skeptrune.com/posts/use-the-accept-header-to-serve-markdown-instead-of-html-to-llms/</link><description>&lt;doc fingerprint="ad02be7a6b8ca2aa"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Use the Accept Header to serve Markdown instead of HTML to LLMs&lt;/head&gt;
    &lt;p&gt;Agents don’t need to see websites with markup and styling; anything other than plain Markdown is just wasted money spent on context tokens.&lt;/p&gt;
    &lt;p&gt;I decided to make my Astro sites more accessible to LLMs by having them return Markdown versions of pages when the &lt;code&gt;Accept&lt;/code&gt; header has &lt;code&gt;text/plain&lt;/code&gt; or &lt;code&gt;text/markdown&lt;/code&gt; preceding &lt;code&gt;text/html&lt;/code&gt;. This was very heavily inspired by this post on X from bunjavascript.&lt;/p&gt;
    &lt;p&gt;Hopefully this helps SEO too, since agents are a big chunk of my traffic. The Bun team reported a 10x token drop for Markdown and frontier labs pay per token, so cheaper pages should get scraped more, be more likely to end up in training data, and give me a little extra lift from assistants and search.&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;Note: You can check out the feature live by running&lt;/p&gt;&lt;code&gt;curl -H "Accept: text/markdown" https://www.skeptrune.com&lt;/code&gt;or&lt;code&gt;curl -H "Accept: text/plain" https://www.skeptrune.com&lt;/code&gt;in your terminal.&lt;/quote&gt;
    &lt;head rend="h2"&gt;Static Site Generators are already halfway there&lt;/head&gt;
    &lt;p&gt;Static site generators like Astro and Gatsby already generate a big folder of HTML files, typically in a &lt;code&gt;dist&lt;/code&gt; or &lt;code&gt;public&lt;/code&gt; folder through an &lt;code&gt;npm run build&lt;/code&gt; command. The only thing missing is a way to convert those HTML files to markdown.&lt;/p&gt;
    &lt;p&gt;It turns out there’s a great CLI tool for this called html-to-markdown that can be installed with &lt;code&gt;npm install -D @wcj/html-to-markdown-cli&lt;/code&gt; and run during a build step using &lt;code&gt;npx&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;Here’s a quick Bash script an LLM wrote to convert all HTML files in &lt;code&gt;dist/html&lt;/code&gt; to Markdown files in &lt;code&gt;dist/markdown&lt;/code&gt;, preserving the directory structure:&lt;/p&gt;
    &lt;code&gt;# convert-to-markdown.sh
mkdir -p dist/markdown

find dist/html -type f -name "*.html" | while read -r file; do
    relative_path="${file#dist/html/}"
    dest_path="dist/markdown/${relative_path%.html}.md"
    mkdir -p "$(dirname "$dest_path")"
    npx @wcj/html-to-markdown-cli "$file" --stdout &amp;gt; "$dest_path"
done&lt;/code&gt;
    &lt;p&gt;Once you have the conversion script in place, the next step is to make it run as a post-build action. Here’s an example of how to modify your &lt;code&gt;package.json&lt;/code&gt; scripts section:&lt;/p&gt;
    &lt;code&gt;"scripts": {
    "build": "astro build &amp;amp;&amp;amp; yarn mv-html &amp;amp;&amp;amp; yarn convert-to-markdown",
    "mv-html": "mkdir -p dist/html &amp;amp;&amp;amp; find dist -type f -name '*.html' -not -path 'dist/html/*' -exec sh -c 'for f; do dest=\"dist/html/${f#dist/}\"; mkdir -p \"$(dirname \"$dest\")\"; mv -f \"$f\" \"$dest\"; done' sh {} +",
  "convert-to-markdown": "bash convert-to-markdown.sh"
}&lt;/code&gt;
    &lt;p&gt;Moving all HTML files to &lt;code&gt;dist/html&lt;/code&gt; first is only necessary if you’re using Cloudflare Workers, which will serve existing static assets before falling back to your Worker. If you’re using a traditional reverse proxy, you can skip that step and just convert directly from &lt;code&gt;dist&lt;/code&gt; to &lt;code&gt;dist/markdown&lt;/code&gt;.&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;Note: I learned after I finished the project that I could have added&lt;/p&gt;&lt;code&gt;run_worker_first = ["*"]&lt;/code&gt;to my&lt;code&gt;wrangler.json&lt;/code&gt;so I didn’t have to move any files around. That field forces the worker to always run frst. Shoutout to the kind folks on reddit for telling me.&lt;/quote&gt;
    &lt;head rend="h2"&gt;Cloudflare Workers-specific configuration&lt;/head&gt;
    &lt;p&gt;I pushed myself to go out of my comfort zone and learn Cloudflare Workers for this project since my company uses them extensively. If you’re using a traditional reverse proxy like Nginx or Caddy, you can skip this section (and honestly, you’ll have a much easier time).&lt;/p&gt;
    &lt;p&gt;If you’re coming from traditional reverse proxy servers, Cloudflare Workers force you into a different paradigm. What would normally be a simple Nginx or Caddy rule becomes custom &lt;code&gt;wrangler.jsonc&lt;/code&gt; configuration, moving your entire site to a shadow directory so Cloudflare doesn’t serve static assets by default, writing JavaScript to manually check headers and using &lt;code&gt;env.ASSETS.fetch&lt;/code&gt; to serve files. SO MANY STEPS TO MAKE A SIMPLE FILE SERVER!&lt;/p&gt;
    &lt;p&gt;This experience finally made Next.js ‘middleware’ click for me. It’s not actually middleware in the traditional sense of a REST API; it’s more like ‘use this where you would normally have a real reverse proxy.’ Both Cloudflare Workers and Next.js Middleware are essentially JavaScript-based reverse proxies that intercept requests before they hit your application.&lt;/p&gt;
    &lt;p&gt;While I’d personally prefer Terraform with a hyperscaler or a VPS for a more traditional setup, new startups love this pattern, so it’s worth understanding.&lt;/p&gt;
    &lt;p&gt;Here’s an example of a working &lt;code&gt;wrangler.jsonc&lt;/code&gt; file to refer to a new worker script and also bind your build output directory as a static asset namespace:&lt;/p&gt;
    &lt;code&gt;{
  "main": "worker.js",
  "assets": {
    "directory": "./dist",
    "binding": "ASSETS"
  }
}&lt;/code&gt;
    &lt;p&gt;Below is a minimal worker script that inspects the &lt;code&gt;Accept&lt;/code&gt; header and serves markdown when requested, otherwise falls back to HTML:&lt;/p&gt;
    &lt;code&gt;export default {
  async fetch(request, env) {
    const url = new URL(request.url);
    const acceptHeader = request.headers.get("accept") || "";
    const acceptTypes = acceptHeader.split(",");

    const plainIndex = acceptTypes.findIndex(
      (t) =&amp;gt; t.includes("text/plain") || t.includes("text/markdown")
    );
    const htmlIndex = acceptTypes.findIndex((t) =&amp;gt; t.includes("text/html"));
    const prefersMarkdown =
      plainIndex !== -1 &amp;amp;&amp;amp; (htmlIndex === -1 || plainIndex &amp;lt; htmlIndex);

    const tryServeContent = async (format) =&amp;gt; {
      let contentType;
      if (format === "markdown") {
        if (url.pathname == "" || url.pathname == "/") {
          const sitemapResponse = await env.ASSETS.fetch(
            new Request(new URL("/sitemap-0.xml", request.url))
          );
          if (sitemapResponse.ok) {
            const content = await sitemapResponse.text();
            return new Response(content, {
              headers: {
                "Content-Type": "application/xml; charset=utf-8",
                "Cache-Control": "public, max-age=3600",
              },
            });
          }
        }

        contentType = "text/plain; charset=utf-8";
        let distPath = `/markdown${url.pathname}`;

        if (!distPath.endsWith(".md") &amp;amp;&amp;amp; !distPath.endsWith("/")) {
          distPath += "/index.md";
        } else if (distPath.endsWith("/")) {
          distPath += "index.md";
        }

        if (url.pathname === "/") {
          distPath = "/markdown/index.md";
        }

        try {
          const response = await env.ASSETS.fetch(
            new Request(new URL(distPath, request.url))
          );
          if (response.ok) {
            const content = await response.text();
            return new Response(content, {
              headers: {
                "Content-Type": contentType,
                "Cache-Control": "public, max-age=3600",
              },
            });
          }
        } catch (error) {
          console.error(`Error fetching HTML file from ${distPath}:`, error);
        }
      } else {
        contentType = "text/html; charset=utf-8";
        let distPath = `/html${url.pathname}`;

        if (!distPath.endsWith(".html") &amp;amp;&amp;amp; !distPath.endsWith("/")) {
          distPath += "/index.html";
        } else if (distPath.endsWith("/")) {
          distPath += "index.html";
        }

        // Handle root path
        if (url.pathname === "/") {
          distPath = "/html/index.html";
        }

        try {
          const response = await env.ASSETS.fetch(
            new Request(new URL(distPath, request.url))
          );
          if (response.ok) {
            const content = await response.text();
            return new Response(content, {
              headers: {
                "Content-Type": contentType,
                "Cache-Control": "public, max-age=3600",
              },
            });
          }
        } catch (error) {
          console.error(`Error fetching HTML file from ${distPath}:`, error);
        }
      }

      return null;
    };

    if (prefersMarkdown) {
      const markdownResponse = await tryServeContent("markdown");
      if (markdownResponse) return markdownResponse;

      const htmlResponse = await tryServeContent("html");
      if (htmlResponse) return htmlResponse;
    } else {
      const htmlResponse = await tryServeContent("html");
      if (htmlResponse) return htmlResponse;

      const markdownResponse = await tryServeContent("markdown");
      if (markdownResponse) return markdownResponse;
    }

    return await env.ASSETS.fetch(
      new Request(new URL("/html/404.html", request.url))
    );
  },
};&lt;/code&gt;
    &lt;p&gt;Pro tip: make the root path &lt;code&gt;/&lt;/code&gt; serve your sitemap.xml instead of markdown content for your homepage such that an agent visiting your root URL can see all the links on your site.&lt;/p&gt;
    &lt;head rend="h2"&gt;Caddy configuration&lt;/head&gt;
    &lt;p&gt;It’s likely much easier to set this system up with a traditional reverse proxy file server like Caddy or Nginx. Here’s a simple Caddyfile configuration that does the same thing:&lt;/p&gt;
    &lt;code&gt;{
    your-personal-domain.com {
        root * /path/to/your/dist
        file_server

        @markdown {
            header Accept *text/markdown*
            header Accept *text/plain*
            not header Accept *text/html*
        }
        handle @markdown {
            rewrite * /markdown{path}/index.md
            try_files {path} {path}.md /markdown/index.md
            file_server
        }

        handle {
            rewrite * /html{path}/index.html
            try_files {path} {path}.html /html/index.html
            file_server
        }

        handle_errors {
            respond "404 Not Found" 404
            try_files /html/404.html
        }
    }
}&lt;/code&gt;
    &lt;p&gt;I will leave Nginx configuration as an exercise for the reader or perhaps the reader’s LLM of choice.&lt;/p&gt;
    &lt;head rend="h2"&gt;Conclusion: A More Accessible Web for Agents&lt;/head&gt;
    &lt;p&gt;By serving lean, semantic Markdown to LLM agents, you can achieve a 10x reduction in token usage while making your content more accessible and efficient for the AI systems that increasingly browse the web. This optimization isn’t just about saving money; it’s about GEO (Generative Engine Optimization) for a changed world where millions of users discover content through AI assistants.&lt;/p&gt;
    &lt;p&gt;Astro’s flexibility made this implementation surprisingly straightforward. It only took me a couple of hours to get both the personal blog you’re reading now and patron.com to support this feature.&lt;/p&gt;
    &lt;p&gt;If you’re ready to make your site agent-friendly, I encourage you to try this out. For a fun exercise, copy this article’s URL and ask your favorite LLM to “Use the blog post to write a Cloudflare Worker for my own site.” See how it does! You can also check out the source code for this feature at github.com/skeptrunedev/personal-site to get started.&lt;/p&gt;
    &lt;p&gt;I’m excited to see the impact of this change on my site’s analytics and hope it inspires others. If you implement this on your own site, I’d love to hear about your experience! Connect with me on X or LinkedIn.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45409001</guid><pubDate>Sun, 28 Sep 2025 23:33:34 +0000</pubDate></item><item><title>Cleaning house in Nx monorepo, how i removed unused deps safely</title><link>https://johnjames.blog/posts/cleaning-house-in-nx-monorepo-how-i-removed-120-unused-deps-safely</link><description>&lt;doc fingerprint="27bd23de5b31fdb1"&gt;
  &lt;main&gt;
    &lt;p&gt;Short version, I ran Knip across our Nx repo, took the “unused” list as a hint, deleted candidates, built, tested, booted apps, and put a few back when they were secretly used. Net, about 120 packages gone. Yarn install dropped by roughly a minute. Fewer CVE nags. Everyone slept better.&lt;/p&gt;
    &lt;head rend="h3"&gt;the situation&lt;/head&gt;
    &lt;p&gt;We got a chunky Nx monorepo. Roughly 500 deps scattered across apps and packages/libs, not all living in the root. Installs felt slow. Security alerts felt noisy. I wanted to clean house without breaking anything or making dev life worse.&lt;/p&gt;
    &lt;head rend="h3"&gt;why i ditched depcheck and tried knip&lt;/head&gt;
    &lt;p&gt;I used to reach for depcheck. It’s been on life support for years and doesn’t love modern setups. Knip looked current, understands monorepos, and actually sniffs entry points for common stacks. Depcheck recommends it too. It builds a little graph from imports and config refs, then compares it to package.json. Good enough for a first pass.&lt;/p&gt;
    &lt;head rend="h3"&gt;what i actually did&lt;/head&gt;
    &lt;p&gt;Baseline scan first:&lt;/p&gt;
    &lt;code&gt;yarn dlx knip&lt;/code&gt;
    &lt;p&gt;Then I ran the usual suspects to see what would scream if I yanked packages:&lt;/p&gt;
    &lt;code&gt;yarn nx affected -t build test lint
# I also spun up the app locally
yarn nx run &amp;lt;app&amp;gt;:serve   # or :dev&lt;/code&gt;
    &lt;p&gt;Knip’s pass flagged a ton of stuff on the first scan. About 40% of what it called “unused” turned out to be false positives in my setup. Totally fine, that’s expected.&lt;/p&gt;
    &lt;head rend="h3"&gt;how i treated the results&lt;/head&gt;
    &lt;p&gt;Knip is a signal, not the judge. For each package it flagged:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;uninstall it&lt;/item&gt;
      &lt;item&gt;build, test, lint, e2e, codegen/typegen, and then boot the owning app&lt;/item&gt;
      &lt;item&gt;if something broke, put it back and document why in my Knip ignore list&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Most of the false positives were “used but not imported” stuff:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;strings in config files, for example Jest preset or runner names&lt;/item&gt;
      &lt;item&gt;CLI tools only used in scripts or CI&lt;/item&gt;
      &lt;item&gt;plugin discovery patterns&lt;/item&gt;
      &lt;item&gt;type-only or toolchain stuff&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;I kept a running ignore list with little comments so future me/dev isn’t confused.&lt;/p&gt;
    &lt;head rend="h3"&gt;the knip setup&lt;/head&gt;
    &lt;p&gt;I made the config monorepo-aware and added a few ignores that always trip scanners in our stack. Yours will vary, but this is just a taste without exposing too much:&lt;/p&gt;
    &lt;code&gt;/** @type {import('knip').KnipConfig} */
const config = {
  include: ["dependencies", "devDependencies"],
  ignoreWorkspaces: ["packages/eslint-config"],
  ignoreDependencies: [
    "ts-node", // referenced by name in jest config
    "cross-env", // scripts only
  ],
  workspaces: {
    "apps/cms": {
      ignoreDependencies: ["@sanity/vision"],
    },
    "packages/ui": {
      ignoreDependencies: [
        "tw-animate-css", // weird @import in global.css
        "@tailwindcss/typography", // same as above
      ],
    },
  },
}

export default config&lt;/code&gt;
    &lt;head rend="h3"&gt;verification loop&lt;/head&gt;
    &lt;p&gt;Delete the thing. Build. Test. Yadda, yadda. Quick smoke in dev. If it’s green, ship it. If not, restore and ignore with a one-liner note.&lt;/p&gt;
    &lt;p&gt;I also did a preview deploy and watched for dumb stuff like missing assets or new console errors. Nothing exciting showed up, which is the best possible outcome.&lt;/p&gt;
    &lt;head rend="h3"&gt;numbers&lt;/head&gt;
    &lt;p&gt;Before, about 510 unique packages across the workspace. After, about 390. Roughly 120 gone. Yarn install shaved off around a minute on my machine and in CI. Exactly what I wanted.&lt;/p&gt;
    &lt;head rend="h3"&gt;what knip nailed, and where it didn’t&lt;/head&gt;
    &lt;p&gt;Good at common React and server app entry points, and lots of config conventions. Not great when usage is indirect or only happens in scripts or CI. That’s fine. Humans still have jobs.&lt;/p&gt;
    &lt;head rend="h3"&gt;how i merged it without ruining anyone’s day&lt;/head&gt;
    &lt;p&gt;Small PRs are safer, but I batched this one, deployed to a preview branch, then merged during a quiet slot so rollback would only touch my PR. I left it live while I clicked through a few user flows and tailed logs. All quiet.&lt;/p&gt;
    &lt;head rend="h3"&gt;the extra bit&lt;/head&gt;
    &lt;p&gt;Knip can also flag unused files, enums, types. Nice for dead code hunts. Same rule, treat it as a hint and verify with real builds and tests.&lt;/p&gt;
    &lt;head rend="h3"&gt;what i’d do next&lt;/head&gt;
    &lt;p&gt;Wire Knip into CI as a gentle report first. Let it run for a sprint while you tune the ignore list, then consider failing on new unused deps. Keeps the bloat from creeping back in.&lt;/p&gt;
    &lt;head rend="h3"&gt;that’s it&lt;/head&gt;
    &lt;p&gt;I didn’t reinvent anything here. Knip found low-hanging fruit, I did the human check, and we shipped a smaller, cleaner repo without drama.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45409526</guid><pubDate>Mon, 29 Sep 2025 01:12:45 +0000</pubDate></item><item><title>Primer on FedEx's Distribution Network (2024)</title><link>https://ontheseams.substack.com/p/a-brief-primer-on-fedexs-distribution</link><description></description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45409552</guid><pubDate>Mon, 29 Sep 2025 01:18:14 +0000</pubDate></item><item><title>F-Droid and Google's Developer Registration Decree</title><link>https://f-droid.org/2025/09/29/google-developer-registration-decree.html</link><description>&lt;doc fingerprint="af64911998077495"&gt;
  &lt;main&gt;&lt;head rend="h2"&gt;F-Droid and Google's Developer Registration Decree&lt;/head&gt;Posted on Sep 29, 2025 by marcprux&lt;p&gt;For the past 15 years1, F-Droid has provided a safe and secure haven for Android users around the world to find and install free and open source apps. When contrasted with the commercial app stores â of which the Google Play store is the most prominent â the differences are stark: they are hotbeds of spyware and scams, blatantly promoting apps that prey on their users through attempts to monetize their attention and mine their intimate information through any means necessary, including trickery and dark patterns.[^spyware1]&lt;/p&gt;&lt;p&gt;https://f-droid.org/2025/09/04/twif.html [^spyware1]: âSpyware maker caught distributing malicious Android apps for yearsâ: https://techcrunch.com/2025/02/13/spyware-maker-caught-distributing-malicious-android-apps-for-years&lt;/p&gt;&lt;p&gt;F-Droid is different. It distributes apps that have been validated to work for the userâs interests, rather than for the interests of the appâs distributors. The way F-Droid works is simple: when a developer creates an app and hosts the source code publicly somewhere, the F-Droid team reviews it, inspecting it to ensure that it is completely open source and contains no undocumented anti-features such as advertisements or trackers2. Once it passes inspection, the F-Droid build service compiles and packages the app to make it ready for distribution. The package is then signed either with F-Droidâs cryptographic key, or, if the build is reproducible[^reproducible], enables distribution using the original developerâs private key. In this way, users can trust that any app distributed through F-Droid is the one that was built from the specified source code and has not been tampered with.&lt;/p&gt;&lt;p&gt;https://f-droid.org/docs/Anti-Features/ [^reproducible]: F-Droid Reproducible Builds Introduction: https://f-droid.org/docs/Reproducible_Builds/&lt;/p&gt;&lt;p&gt;Do you want a weather app that doesnât transmit your every movement to a shadowy data broker3? Or a scheduling assistant that doesnât siphon your intimate details into an advertisement network[^surveillance-ads]? F-Droid has your back. Just as sunlight is the best disinfectant against corruption, open source is the best defense against software acting against the interests of the user.&lt;/p&gt;&lt;p&gt;https://www.howtogeek.com/884233/your-weather-app-is-spying-on-you-heres-what-to-do/#why-are-weather-apps-such-a-privacy-nightmare [^surveillance-ads]: âOnline Behavioral Ads Fuel the Surveillance IndustryâHereâs Howâ: https://www.eff.org/deeplinks/2025/01/online-behavioral-ads-fuel-surveillance-industry-heres-how&lt;/p&gt;&lt;head rend="h3"&gt;Googleâs move to break free app distribution&lt;/head&gt;&lt;p&gt;The future of this elegant and proven system was put in jeopardy last month, when Google unilaterally decreed4 that Android developers everywhere in the world are going to be required to register centrally with Google. In addition to demanding payment of a registration fee and agreement to their (non-negotiable and ever-changing) terms and conditions, Google will also require the uploading of personally identifying documents[^regid], including government ID, by the authors of the software, as well as enumerating all the unique âapplication identifiersâ for every app that is to be distributed by the registered developer.[^regappid]&lt;/p&gt;&lt;p&gt;require all apps to be registered by verified developers in order to be installed by users on certified Android devices.â https://android-developers.googleblog.com/2025/08/elevating-android-security.html [^regid]: Android developer verification: âYou will need to provide and verify your personal details, like your legal name, address, email address, and phone number. You may also need to upload official government ID.â: https://developer.android.com/developer-verification#verify-your-identity [^regappid]: Android developer verification: âYouâll need to prove you own your apps by providing your app package name and app signing keys.â: https://developer.android.com/developer-verification#register-your-apps&lt;/p&gt;&lt;p&gt;The F-Droid project cannot require that developers register their apps through Google, but at the same time, we cannot âtake overâ the application identifiers for the open-source apps we distribute, as that would effectively seize exclusive distribution rights to those applications.&lt;/p&gt;&lt;p&gt;If it were to be put into effect, the developer registration decree will end the F-Droid project and other free/open-source app distribution sources as we know them today, and the world will be deprived of the safety and security of the catalog of thousands of apps that can be trusted and verified by any and all. F-Droidâs myriad users5 will be left adrift, with no means to install â or even update their existing installed â applications.&lt;/p&gt;&lt;p&gt;because we donât track users or have any registration. âNo user accounts, by designâ: https://f-droid.org/2022/02/28/no-user-accounts-by-design.html&lt;/p&gt;&lt;head rend="h3"&gt;The Security Canard&lt;/head&gt;&lt;p&gt;While directly installing â or âsideloadingâ6 â software can be construed as carrying some inherent risk, it is false to claim that centralized app stores are the only safe option for software distribution. Google Play itself has repeatedly hosted malware[^playmal1][^playmal2], proving that corporate gatekeeping doesnât guarantee user protection. By contrast, F-Droid offers a trustworthy and transparent alternative approach to security: every app is free and open source, the code can be audited by anyone, the build process and logs are public, and reproducible builds ensure that what is published matches the source code exactly. This transparency and accountability provides a stronger basis for trust than closed platforms, while still giving users freedom to choose. Restricting direct app installation not only undermines that choice, it also erodes the diversity and resilience of the open-source ecosystem by consolidating control in the hands of a few corporate players.&lt;/p&gt;&lt;p&gt;came up with; it means âinstalling software without our permission,â which we used to just call âinstalling softwareâ (because you donât need a manufacturerâs permission to install software on your computer).â â Pluralistic: Darth Android: https://pluralistic.net/2025/09/01/fulu/ [^playmal1]: â224 malicious apps removed from the Google Play Store after ad fraud campaign discoveredâ: https://www.malwarebytes.com/blog/news/2025/09/224-malicious-apps-removed-from-the-google-play-store-after-ad-fraud-campaign-discovered [^playmal2]: âMalware-ridden apps made it into Googleâs Play Store, scored 19 million downloadsâ: https://www.theregister.com/2025/08/26/apps_android_malware/&lt;/p&gt;&lt;p&gt;Furthermore, Googleâs framing that they need to mandate developer registration in order to defend against malware is disingenuous because they already have a remediation mechanism for malware they identify on a device: the Play Protect service7 that is enabled on all Android Certified devices already scans and disables apps that have been identified as malware, regardless of their provenience. Any perceived risks associated with direct app installation can be mitigated through user education, open-source transparency, and existing security measures without imposing exclusionary registration requirements.&lt;/p&gt;&lt;p&gt;harmful behaviorâ: https://support.google.com/googleplay/answer/2812853&lt;/p&gt;&lt;p&gt;We do not believe that developer registration is motivated by security. We believe it is about consolidating power and tightening control over a formerly open ecosystem.&lt;/p&gt;&lt;head rend="h3"&gt;The Right to Run&lt;/head&gt;&lt;p&gt;If you own a computer, you should have the right to run whatever programs you want on it. This is just as true with the apps on your Android/iPhone mobile device as it is with the applications on your Linux/Mac/Windows desktop or server. Forcing software creators into a centralized registration scheme in order to publish and distribute their works is as egregious as forcing writers and artists to register with a central authority in order to be able to distribute their creative works. It is an offense to the core principles of free speech and thought that are central to the workings of democratic societies around the world.&lt;/p&gt;&lt;p&gt;By tying application identifiers to personal ID checks and fees, Google is building a choke point that restricts competition and limits user freedom. It must find a solution which preserves user rights, freedom of choice, and a healthy, competitive ecosystem.&lt;/p&gt;&lt;head rend="h3"&gt;What do we propose?&lt;/head&gt;&lt;p&gt;Regulatory and competition authorities should look carefully at Googleâs proposed activities, and ensure that policies designed to improve security are not abused to consolidate monopoly control. We urge regulators to safeguard the ability of alternative app stores and open-source projects to operate freely, and to protect developers who cannot or will not comply with exclusionary registration schemes and demands for personal information.&lt;/p&gt;&lt;p&gt;If you are a developer or user who values digital freedom, you can help. Write to your Member of Parliament8, Congressperson[^congressperson] or other representative, sign petitions in defense of sideloading, and contact the European Commissionâs Digital Markets Act (DMA) team9 to express why preserving open distribution matters. By making your voice heard, you help defend not only F-Droid, but the principle that software should remain a commons, accessible and free from unnecessary corporate gatekeeping.&lt;/p&gt;&lt;p&gt;https://www.europarl.europa.eu/meps/en/home [^congressperson]: Find Your Representative https://www.house.gov/representatives/find-your-representative&lt;/p&gt;&lt;p&gt;https://digital-markets-act.ec.europa.eu/contact-dma-team_en&lt;/p&gt;&lt;list rend="ol"&gt;&lt;item&gt;&lt;p&gt;âFor fifteen moreâ:Â ↩&lt;/p&gt;&lt;/item&gt;&lt;item&gt;&lt;p&gt;F-Droid Anti-Features overview:Â ↩&lt;/p&gt;&lt;/item&gt;&lt;item&gt;&lt;p&gt;âYour Weather App Is Spying on You, Hereâs What to Doâ:Â ↩&lt;/p&gt;&lt;/item&gt;&lt;item&gt;&lt;p&gt;Android Developers Blog: âStarting next year, Android willÂ ↩&lt;/p&gt;&lt;/item&gt;&lt;item&gt;&lt;p&gt;How many F-Droid users are there, exactly? We donât know,Â ↩&lt;/p&gt;&lt;/item&gt;&lt;item&gt;&lt;p&gt;ââSideloadâ is a weird euphemism that the mobile duopolyÂ ↩&lt;/p&gt;&lt;/item&gt;&lt;item&gt;&lt;p&gt;âGoogle Play Protect checks your apps and devices forÂ ↩&lt;/p&gt;&lt;/item&gt;&lt;item&gt;&lt;p&gt;Members of the European ParliamentÂ ↩&lt;/p&gt;&lt;/item&gt;&lt;item&gt;&lt;p&gt;Contact the DMA team:Â ↩&lt;/p&gt;&lt;/item&gt;&lt;/list&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45409794</guid><pubDate>Mon, 29 Sep 2025 02:10:20 +0000</pubDate></item><item><title>Reader Response to "AI Overinvestment"</title><link>https://www.mbi-deepdives.com/reader-response-to-ai-overinvestment/</link><description>&lt;doc fingerprint="257390d4bcb627d8"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Reader Response to "AI Overinvestment"&lt;/head&gt;
    &lt;p&gt;A couple of days ago, I wrote a piece titled “What if there’s an overinvestment in AI?”&lt;/p&gt;
    &lt;p&gt;I received some thoughtful emails in response to that piece. One reader named Craig Melillo took the time to share a more detailed thoughts which he granted me the permission to share with all of you. I am copying his email below which I think adds to my aforementioned piece (slightly edited; emphasis mine):&lt;/p&gt;
    &lt;p&gt;“This is/was a great exercise. I am sure you are not alone in attempting this (I know that I am and have). I think the four incumbent hyperscale spenders (AMZN, META, GOOG, MSFT) are in somewhat of a “tails I win, heads you lose” situation given their AI spend to date is discretionary and it is not damaging the balance sheet. Some capacity will get utilized immediately, and some capacity will get utilized eventually. The attached revenues might not be what investors hope for, but it doesn’t kill them and IRR is likely &amp;gt;0%. In your scenario, NVDA would be in for a really tough time, which likely means in the short term, at least for stock prices, that everyone would be in for a tough time (especially ORCL, neo clouds, power supply chain). Open AI is its own case, and the $500B post-money from this past month plus a $20-25B exit rate annualized revenue will keep private shareholders trapped. Maybe the bubble popping solves inflation, enables rate cuts, and strengthens the dollar.&lt;/p&gt;
    &lt;p&gt;I am not exactly going out on a limb with this next statement, but I see three potential “events” that could act as rubber meeting the road event that pours some water on the fire:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Scaling laws asymptote and there’s a realization that digital God isn’t around the corner which removes the biggest totem that public markets and CEO’s both have in terms of giving permission to chase the dream. How does this manifest? More respected skeptics speak on it, and the frontier models level off.&lt;list rend="ol"&gt;&lt;item&gt;I think Dwarkesh Patel made a really good point a few months ago when he said that the more time that goes by without achieving AGI, the less likely it becomes that we get there at all. If we assume that we do not get AGI within 3 years, then how much incremental value does a general purpose model that “just” provides longer context windows, memory, and faster response times actually provide if tomorrow’s small models are good enough (and what is the willingness to pay?). Training frontier zero-revenue models on chips that become obsolete for training purposes every 18 months is not sustainable. Ben Thompson made the point that early on in his career, he initially underappreciated society’s collective demand for better technology for the sake of better technology (maybe I am making that same mistake), but in this instance the cost of the incremental improvement is quite literally measured in the tens of billions of dollars (and you don’t know the return ahead of time, so it’s another leap of faith after the previous leap of faith did not deliver). Also, the predominant use case of today’s models are “free to me” inference, so the enterprise NEEDS to adopt this stuff, and if you listen to Accenture’s call yesterday, basically the large enterprise is nowhere near ready for it. Obviously GPT5 is much more accurate than GPT4 due to better reasoning, but if enterprise use cases are going to be grounded in domain specific data, then hallucinations should be lower in those cases lessening the demand for improvements in reasoning that are intended to reduce hallucinations. So how many bites at the apple will OAI get to train the next frontier model if they cannot live up to their own promises?&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Any one of the cloud companies stops saying “demand exceeds supply” or implies that they have sufficient capacity to meet demand (implies AI demand decel, not growth decline)&lt;list rend="ol"&gt;&lt;item&gt;If it takes 18-24 months to stand up an AI datacenter, then we really only have like 12-18 months of AI data center investment online since the hyper scalers actively committed to going pedal to the medal on investing in 2024. So, it makes sense that collective demand exceeds supply. But if collective supply goes up by 2-3x over the next 18-36 months, will there be a smooth 1:1 balance with demand? i.e. can AI tokens continue to growth exponentially for the current base? Maybe, but what is the willingness to spend in the face of excess supply? We don’t know, but if MSFT doesn’t want to build training infrastructure, then we know someone will say “we’re good”.&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;We see one/some of the negative margin AI model wrappers run out of funding and there’s reluctance for VC’s to step in (this is the least likely one given sovereign money will be there as long as the first two events don’t happen).&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;You point out that if you were in Zuck’s shoes then you would continue to invest too, and I agree that it is the right move. Everyone in the value chain is acting rationally and in their own best interest given everything they currently know: scaling laws have more or less held up keeping the dream for “digital God” alive, demand for tokens/AI inference capacity exceeds CURRENT supply, and all competitors are choosing NOT to cooperate. I have a short take on each, and figured I would share.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;META – META is competing for consumer screen time directly with LLM’s as well as traditional competitors YouTube and TikTok. They need to make the product “AI native” to retain/grow mindshare. I don’t know if they will get a model that will act as “the draw” to the app for consumers, but they need a model that will drastically improve the recommendation engine, enable pro-grade multi-media content creation for users and advertisers, and then be good enough to act as an LLM destination for people that don’t want to leave the app. This is putting the augmented reality dream to the side for now, because I’m sure there is a lot synergistic spend for RL in here.&lt;list rend="ul"&gt;&lt;item&gt;I think Meta will prove to be the most difficult company in terms of disaggregating “AI revenue” versus “non-AI revenue”, as they may already be generating AI revenue via ad creation tools, improved targeting,&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;GOOG – they are doing as well as you could hope with balancing monetization and disrupting oneself. YouTube will likely only increase in value and perhaps search has a much higher floor than the worst case fears. OpenAI may need to launch an ad supported model to keep the dollars flowing, and this could potentially steal from Google’s ad revenue (and ignite some ‘search is dead’ fears for a little). But Google Cloud, YT, and Gemini are crushing it.&lt;/item&gt;
      &lt;item&gt;MSFT/ORCL/OpenAI – the only one you could argue who is not acting rational is MSFT, unless they firmly believe we will not see the digital God dream (in which case, then they are acting rational and are optimizing for future inference demand that needs to be available when enterprise clients ultimately need it). MSFT is pretty much telling us that the incremental value of training frontier models will have diminishing returns. We want to applaud Oracle as “the winner” but they’re winning because MSFT is allowing it, and because OpenAI doesn’t have an existing business that prints $100B+ of operating cash flow per year to fund the spend. Maybe MSFT is wrong, and this will be the most obvious fumble ever, but they have skin in the game, but they were early to OpenAI so there’s a track record of seeing around the corner a bit with Satya. I don’t think they have an innovator’s dilemma even as/if OAI says they want to takeover the workplace application market. the G Suite is essentially free, and it MSFT has done quite well with its coexistence. Oracle has no other path to fast track itself into the hyperscaler conversation. Ellison is 81 and in it for glory, so he figures why not attach myself to a potential anchor customer in OAI (and now TikTok) that can maybe do $100B+ per year with me. I suspect there will be a lot of collateralized, non-recourse debt in their Stargate arrangement.&lt;/item&gt;
      &lt;item&gt;OAI/NVDA - OAI wants to be everything yesterday, but they only have one product (though it’s a general/world model), and they don’t have the organic cash flow to get there. So how do they solve it? They sell the dream to anyone and everyone who will listen to raise the money. The backers (NVDA/ORCL) need to adopt the same approach, and their leaders have no problem doing so. 18 months ago, Altman tried to say he would manufacture chips and TSMC laughed at him because they can’t afford to waste their time. Today, Altman has aligned himself with two owner operators in Huang and Ellison who have long histories of selling the dream. Since there is a hype market for it, it feels dumb for people to push back on it in the moment. NVDA also needs as many customers as possible to apply pressure to MSFT/AMZN/GOOG who are developing their own chips internally. To the extent NVDA can keep the market tight for GPU’s it means competitors are running fast and providing less leash for the ASIC customers to experiment with pushing internal chip efforts, and it forces the HPC’s to keep buying. This is also why Huang is so keen on keeping the chips flowing to China (and Singapore).”&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;I thought this was very well grounded discussion. The only people I disagree strongly with are people at the both extremes: “AGI is just around the corner” and “this is the most obvious bubble in the history of mankind”. Of course, there are gazillions of scenarios between these two extremes and navigating these scenarios remains the key challenge for the next few years.&lt;/p&gt;
    &lt;p&gt;Thank you, Craig for sharing your thoughts with me and allowing me to publish it on MBI Deep Dives.&lt;/p&gt;
    &lt;p&gt;In addition to “Daily Dose” (yes, DAILY) like this, MBI Deep Dives publishes one Deep Dive on a publicly listed company every month. You can find all the 63 Deep Dives here.&lt;/p&gt;
    &lt;p&gt;Disclaimer: All posts on “MBI Deep Dives” are for informational purposes only. This is NOT a recommendation to buy or sell securities discussed. Please do your own work before investing your money.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45409956</guid><pubDate>Mon, 29 Sep 2025 02:53:29 +0000</pubDate></item><item><title>High-Level Synthesis Synthesis</title><link>https://stefanabikaram.com/writing/hls-synthesis/</link><description>&lt;doc fingerprint="bf2a1815af60a593"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;High-Level Synthesis Synthesis&lt;/head&gt;
    &lt;p&gt;Early in graduate school, I could never quite figure out how to refer to “synthesis” done as part of the high-level synthesis (HLS) flow.&lt;/p&gt;
    &lt;p&gt;Normally, one could say “synthesis” when the context is clear — for example, “…after C-simulation and synthesis,” meaning the hardware synthesis step inside an HLS tool. But sometimes I need to be more explicit, and I end up writing something like “…after C-simulation and HLS synthesis.” This appears redundant, but removes any ambiguity, which is good for academic writing and the reader.&lt;/p&gt;
    &lt;p&gt;Technically, “HLS synthesis” expands to “High-Level Synthesis Synthesis,” which sounds redundant. This is where the “Chai Tea” and “ATM Machine” people come out of the woodworks and say this is bad writing and I need to rewrite my sentences to avoid this silly mistake. Those people are annoying.&lt;/p&gt;
    &lt;p&gt;Now, I believe it is correct and good to say “HLS synthesis”. There are two distinct types of synthesis in hardware design. HLS synthesis (from C/C++ to RTL) is a different process than RTL synthesis (from RTL to gates or a netlist). In fact, in HLS research, talking about both HLS synthesis and RTL synthesis in the same context is common. For example, it is common to compare post-HLS-synthesis estimated results and post-RTL-synthesis results for a design (e.g. while doing design space exploration or training some machine learning models).&lt;/p&gt;
    &lt;p&gt;One could argue that you can just use “HLS” instead of “HLS synthesis.” However, in the HLS world or within your HLS tool, there are different common “flows” that you can run: C-Simulation (i.e. "csim"), RTL Co-Simulation (i.e. "cosim"), hardware synthesis (“HLS Synthesis”), and hardware export or packaging. It is useful to specifically distinguish the "hardware synthesis" step inside an HLS tool as “HLS synthesis” to refer to the HLS flow that lowers a C++ design all the way to RTL/HDL code via a frontend compiler + scheduling + binding + HDL generation.&lt;/p&gt;
    &lt;p&gt;There are many more linguistic frontiers yet to be explored in this research area. What is included in the word "implementation"? What is the difference between VLSI vs. EDA? Where is the boundary between new HDL vs. DSL vs. HLS languages? How does an average person interpret the phrases "hardware design" vs. "semiconductor design" vs. "chip design"? Is Tcl pronounced "T-C-L" or "tickle"?&lt;/p&gt;
    &lt;p&gt;All good questions graduate students should ponder for hours while they wait for their EDA tool to finish running.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45410134</guid><pubDate>Mon, 29 Sep 2025 03:42:12 +0000</pubDate></item><item><title>Zero ASIC releases Wildebeest, the highest performance FPGA synthesis tool</title><link>https://www.zeroasic.com/blog/wildebeest-launch</link><description>&lt;doc fingerprint="b749739f3ad424b2"&gt;
  &lt;main&gt;
    &lt;p&gt;Zero ASIC ·&lt;/p&gt;
    &lt;head rend="h3"&gt;Zero ASIC releases Wildebeest, the world’s highest performance FPGA synthesis tool.&lt;/head&gt;
    &lt;p&gt;Cambridge, MA – September 17, 2025 – Zero ASIC, a U.S. semiconductor startup on a mission to democratize silicon, today announced the release of WildebeestTM, the world’s highest performance FPGA synthesis tool.&lt;/p&gt;
    &lt;head rend="h3"&gt;Background&lt;/head&gt;
    &lt;p&gt;The software world has largely moved away from proprietary, vendor-locked compilers in favor of open source alternatives such as LLVM1 and GCC. Early on, these open source compilers lagged behind in performance, but over time, through the collective effort of the community, they caught up and even surpassed their proprietary counterparts.&lt;/p&gt;
    &lt;p&gt;In hardware, a similar transformation has been unfolding. Thanks to the pioneering work of Alan Mishchenko (ABC2), Claire Xenia Wolf (Yosys3), and the broader open source EDA community, FPGA developers have had access to a full-featured Verilog RTL synthesis toolchain for years. Recently, SystemVerilog support has since been added through Mike Popoloski’s excellent Slang parser4. Thanks to strong community involvement, the Yosys project now supports FPGA synthesis for a number of commercial and academic FPGA architectures.&lt;/p&gt;
    &lt;p&gt;Unfortunately, funding for open source FPGA synthesis has been minimal, and as a result a large QoR gap between open source and proprietary synthesis remains. Industrial users, who care obsessively about performance, have thus been stuck between a rock and a hard place: “Freedom or Performance”.&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="3"&gt;
        &lt;cell role="head"&gt;Attribute&lt;/cell&gt;
        &lt;cell role="head"&gt;Vendor Tool&lt;/cell&gt;
        &lt;cell role="head"&gt;Yosys&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;FPGA Support&lt;/cell&gt;
        &lt;cell&gt;Yes&lt;/cell&gt;
        &lt;cell&gt;No&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Lock-in&lt;/cell&gt;
        &lt;cell&gt;Yes&lt;/cell&gt;
        &lt;cell&gt;No&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Open Source&lt;/cell&gt;
        &lt;cell&gt;No&lt;/cell&gt;
        &lt;cell&gt;Yes&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Free&lt;/cell&gt;
        &lt;cell&gt;Yes/No&lt;/cell&gt;
        &lt;cell&gt;Yes&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Binary Size&lt;/cell&gt;
        &lt;cell&gt;Large&lt;/cell&gt;
        &lt;cell&gt;Small&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;QoR&lt;/cell&gt;
        &lt;cell&gt;Great&lt;/cell&gt;
        &lt;cell&gt;Good&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Robustness&lt;/cell&gt;
        &lt;cell&gt;Great&lt;/cell&gt;
        &lt;cell&gt;Good&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;head rend="h3"&gt;Wildebeest Intro&lt;/head&gt;
    &lt;p&gt;Wildebeest introduces a number of critical optimization techniques to open source. Some of these techniques are standard practice in commercial compilers, but this is the first time they have been demonstrated in an open source FPGA synthesis tool.&lt;/p&gt;
    &lt;p&gt;The most important Wildebeest strategy is the use of circuit size as a primary feature for selecting the synthesis algorithms. Existing single script solutions don’t work well because they either fail to converge for large circuits or sacrifice performance for robustness. Using a carefully selected set of size appropriate optimization scripts, Wildebeest achieves robustness and high performance for a wide range of benchmark (up to 1M LUT designs).&lt;/p&gt;
    &lt;p&gt;Another important aspect of the Wildebeest approach is the effective use of the most advanced &lt;code&gt;abc9&lt;/code&gt; commands for speculative synthesis and logic depth minimization. ABC is an incredibly powerful logic synthesis library, but making effective use of all commands is a non-trivial task that requires deep expertise in logic synthesis, the ABC architecture, and Yosys, and software development.&lt;/p&gt;
    &lt;p&gt;Logic optimization is only as good as the benchmark data that grounds the algorithms used. Wildebeest adopted an industrial approach to development from day one, developing an internal suite of 150+ carefully selected benchmarks and automated profiling utilities. The open source LogikBench benchmarks suite was created to enable independent evaluation and benchmarking.&lt;/p&gt;
    &lt;p&gt;Logic synthesis has been around for over 50 years. During this time, basic synthesis algorithms and approaches have been openly published by the synthesis R&amp;amp;D community, but many of the “outer loop” tricks of the trade have been kept hidden by practitioners within proprietary tools. The lead Wildebeest developer, Dr. Thierry Besson is an industry insider with 30 years of experience in developing state of the art commercial logic synthesis solutions. Dr. Besson has previously contributed the fastest/smallest results on a number of the EPFL logic synthesis benchmarks and with Wildebeest he is releasing many of these techniques into the wild.5&lt;/p&gt;
    &lt;head rend="h3"&gt;Benchmark Results&lt;/head&gt;
    &lt;p&gt;The table below shows how Wildebeest compares against both open-source and proprietary synthesis tools for the picorv32 CPU design. To run Wildebeest across a broader set of benchmarks, see the LogikBench project.&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="6"&gt;
        &lt;cell role="head"&gt;Device&lt;/cell&gt;
        &lt;cell role="head"&gt;Arch&lt;/cell&gt;
        &lt;cell role="head"&gt;Tool&lt;/cell&gt;
        &lt;cell role="head"&gt;Synthesis Command&lt;/cell&gt;
        &lt;cell role="head"&gt;LUTs&lt;/cell&gt;
        &lt;cell role="head"&gt;Logic Depth&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;z1060&lt;/cell&gt;
        &lt;cell&gt;LUT6&lt;/cell&gt;
        &lt;cell&gt;wildebeest&lt;/cell&gt;
        &lt;cell&gt;synth_fpga&lt;/cell&gt;
        &lt;cell&gt;2312&lt;/cell&gt;
        &lt;cell&gt;40&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;z1060&lt;/cell&gt;
        &lt;cell&gt;LUT6&lt;/cell&gt;
        &lt;cell&gt;wildebeest&lt;/cell&gt;
        &lt;cell&gt;synth_fpga -opt delay&lt;/cell&gt;
        &lt;cell&gt;2677&lt;/cell&gt;
        &lt;cell&gt;6&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;Vendor-1&lt;/cell&gt;
        &lt;cell&gt;LUT6&lt;/cell&gt;
        &lt;cell&gt;vendor&lt;/cell&gt;
        &lt;cell&gt;(proprietary)&lt;/cell&gt;
        &lt;cell&gt;2870&lt;/cell&gt;
        &lt;cell&gt;7&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;Vendor-2&lt;/cell&gt;
        &lt;cell&gt;LUT6&lt;/cell&gt;
        &lt;cell&gt;vendor&lt;/cell&gt;
        &lt;cell&gt;(proprietary)&lt;/cell&gt;
        &lt;cell&gt;2947&lt;/cell&gt;
        &lt;cell&gt;8&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;xc7&lt;/cell&gt;
        &lt;cell&gt;LUT6&lt;/cell&gt;
        &lt;cell&gt;yosys (0.56)&lt;/cell&gt;
        &lt;cell&gt;synth_xilinx -nocarry&lt;/cell&gt;
        &lt;cell&gt;3072&lt;/cell&gt;
        &lt;cell&gt;17&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;z1010&lt;/cell&gt;
        &lt;cell&gt;LUT4&lt;/cell&gt;
        &lt;cell&gt;wildebeest&lt;/cell&gt;
        &lt;cell&gt;synth_fpga&lt;/cell&gt;
        &lt;cell&gt;3593&lt;/cell&gt;
        &lt;cell&gt;39&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;z1010&lt;/cell&gt;
        &lt;cell&gt;LUT4&lt;/cell&gt;
        &lt;cell&gt;wildebeest&lt;/cell&gt;
        &lt;cell&gt;synth_fpga -opt delay&lt;/cell&gt;
        &lt;cell&gt;4112&lt;/cell&gt;
        &lt;cell&gt;8&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;ice40&lt;/cell&gt;
        &lt;cell&gt;LUT4&lt;/cell&gt;
        &lt;cell&gt;yosys (0.56)&lt;/cell&gt;
        &lt;cell&gt;synth_ice40 -dsp -nocarry&lt;/cell&gt;
        &lt;cell&gt;4378&lt;/cell&gt;
        &lt;cell&gt;33&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;The results show that Wildebeest QoR exceeds both proprietary and open source FPGA synthesis solutions.&lt;/p&gt;
    &lt;head rend="h3"&gt;Future Work&lt;/head&gt;
    &lt;p&gt;This initial Wildebeest release is only the beginning of the journey. The development team has a pipeline of optimization techniques in development with QoR that is expected to exceed current proprietary tools by a wide margin.&lt;/p&gt;
    &lt;p&gt;The long term goal of the Wildebeest project is to help bring forth an era of “LLVM for synthesis” by working with the community to develop high performance open source FPGA tools, robust standard IRs and file formats, and broad hardware vendor adoption.&lt;/p&gt;
    &lt;head rend="h3"&gt;Demo&lt;/head&gt;
    &lt;p&gt;To try out the &lt;code&gt;Wildebeest&lt;/code&gt;, follow these installation instructions, download the picorv32 CPU example, launch &lt;code&gt;yosys&lt;/code&gt;, and run the command sequence below.&lt;/p&gt;
    &lt;code&gt;plugin -i wildebeest
read_verilog picorv32.v
hierarchy -check -top picorv32
synth_fpga -partname z1010&lt;/code&gt;
    &lt;head rend="h3"&gt;Availability&lt;/head&gt;
    &lt;p&gt;The Wildebeest source code was officially released on September 17, 2025 and can be downloaded via github:&lt;/p&gt;
    &lt;p&gt;https://github.com/zeroasiccorp/wildebeest&lt;/p&gt;
    &lt;head rend="h3"&gt;About Zero ASIC&lt;/head&gt;
    &lt;p&gt;Zero ASIC is a semiconductor startup based in Cambridge, Massachusetts. The company mission is to democratize access to silicon through chiplets and design automation. Zero ASIC is building the world’s first composable chiplet platform, enabling billions of unique silicon systems to be assembled in hours from a catalog of off-the-shelf chiplets.&lt;/p&gt;
    &lt;head rend="h3"&gt;References&lt;/head&gt;
    &lt;head rend="h2"&gt;Footnotes&lt;/head&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;C. Lattner, V. Adve, “LLVM: A Compilation Framework for Lifelong Program Analysis &amp;amp; Transformation”, Proc. International Symposium on Code Generation and Optimization 2004 ↩&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;R. Brayton and A. Mishchenko, “ABC: An academic industrial-strength verification tool”, Proc. CAV 2010 ↩&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;C. Wolf, Johann Glaser., “Yosys - A Free Verilog Synthesis Suite”, Proc. Austrochip 2013 ↩&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;M. Popoloski, “Slang: a SystemVerilog Compiler”, https://github.com/MikePopoloski/slang ↩&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;EPFL Benchmark Suite Best Results, https://github.com/lsils/benchmarks/tree/master/best_results ↩&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45410155</guid><pubDate>Mon, 29 Sep 2025 03:45:40 +0000</pubDate></item></channel></rss>