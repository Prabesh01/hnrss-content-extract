<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Hacker News: Front Page</title><link>https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml</link><description>Hacker News RSS</description><atom:link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Sat, 01 Nov 2025 20:09:09 +0000</lastBuildDate><item><title>S.A.R.C.A.S.M: Slightly Annoying Rubik's Cube Automatic Solving Machine</title><link>https://github.com/vindar/SARCASM</link><description>&lt;doc fingerprint="46cfb39d4df2f5f0"&gt;
  &lt;main&gt;
    &lt;p&gt;Slightly Annoying Rubik's Cube Automatic Solving Machine&lt;/p&gt;
    &lt;p&gt;S.A.R.C.A.S.M is a 3D-printed, Teensy-powered robot that scans, solves, and sassily comments on a Rubik’s Cube.&lt;/p&gt;
    &lt;p&gt;This repository contains the code and schematics of the build.&lt;/p&gt;
    &lt;p&gt;Additional details may be found on the Teensy forum thread:&lt;/p&gt;
    &lt;p&gt;https://forum.pjrc.com/index.php?threads/sarcasm-an-over-engineered-rubiks-cube-solving-robot.77338/&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Short clip: https://youtube.com/shorts/Xer4mPZZH8E&lt;/item&gt;
      &lt;item&gt;Full demo: https://youtu.be/WV52RtuWXk0&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Teensy 4.1 main controller + ESP32-CAM for image capture.&lt;/item&gt;
      &lt;item&gt;ILI9341 display with custom 2D&amp;amp;3D graphics, animations, and lip-sync.&lt;/item&gt;
      &lt;item&gt;Stepper + servos for cube handling with position sensors to detect faults.&lt;/item&gt;
      &lt;item&gt;RGBW lighting synchronized to audio.&lt;/item&gt;
      &lt;item&gt;On-device TTS (espeak-ng) with a collection of sarcastic lines.&lt;/item&gt;
      &lt;item&gt;...&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;A slight modification of Teensy's core is required in order for the whole code to fit in RAM.&lt;/p&gt;
    &lt;p&gt;Edit &lt;code&gt;cores/teensy4/usb_serial.c&lt;/code&gt; and &lt;code&gt;cores/teensy4/usb_serial2.c&lt;/code&gt; and, in each file, remove the DMAMEM attribute in front of the definition of the &lt;code&gt;txbuffer[]&lt;/code&gt; and &lt;code&gt;rx_buffer[]&lt;/code&gt; arrays.&lt;/p&gt;
    &lt;p&gt;This is a work in progress. The repo is currently in a very messy and incomplete state (and will most likely stay that way until I find some time to work on it...). Sorry !&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45777682</guid><pubDate>Fri, 31 Oct 2025 23:03:18 +0000</pubDate></item><item><title>Show HN: Strange Attractors</title><link>https://blog.shashanktomar.com/posts/strange-attractors</link><description>&lt;doc fingerprint="a3ac5b1ecf85872a"&gt;
  &lt;main&gt;
    &lt;p&gt;A few months back, while playing around with Three.js, I came across something that completely derailed my plans. Strange attractors - fancy math that creates beautiful patterns. At first I thought I'd just render one and move on, but then soon I realized that this is too much fun. When complexity emerges from three simple equations, when you see something chaotic emerge into beautiful, it's hard not to waste some time. I've spent countless hours, maybe more than I'd care to admit, watching these patterns form. I realized there's something deeply satisfying about seeing order emerge from randomness. Let me show you what kept me hooked.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Basics: Dynamical Systems and Chaos Theory&lt;/head&gt;
    &lt;p&gt;Dynamical Systems are a mathematical way to understand how things change over time. Imagine you have a system, which could be anything from the movement of planets to the growth of a population. In this system, there are rules that determine how it evolves from one moment to the next. These rules tell you what will happen next based on what is happening now. Some examples are, a pendulum, the weather patterns, a flock of birds, the spread of a virus in a population (we are all too familiar with this one), and stock market.&lt;/p&gt;
    &lt;p&gt;There are two primary things to understand about this system:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Phase Space: This is like a big collection of all the possible states the system can be in. Each state is like a snapshot of the system at a specific time. This is also called the state space or the world state.&lt;/item&gt;
      &lt;item&gt;Dynamics: These are the rules that takes one state of the system and moves it to the next state. It can be represented as a function that transforms the system from now to later.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;For instance, when studying population growth, a phase-space (world-state) might consist of the current population size and the rate of growth or decline at a specific time. The dynamics would then be derived from models of population dynamics, which, considering factors like birth rates, death rates, and carrying capacity of the environment, dictate the changes in population size over time.&lt;/p&gt;
    &lt;p&gt;Another way of saying this is that the dynamical systems describe how things change over time, in a space of possibilities, governed by a set of rules. Numerous fields such as biology, physics, economics, and applied mathematics, study systems like these, focusing on the specific rules that dictate their evolution. These rules are grounded in relevant theories, such as Newtonian mechanics, fluid dynamics, and mathematics of economics, among others.&lt;/p&gt;
    &lt;head rend="h3"&gt;Chaos Theory&lt;/head&gt;
    &lt;p&gt;There are different ways of classifying dynamical systems, and one of the most interesting is the classification into chaotic and non-chaotic systems. The change over time in non-chaotic systems is more deterministic as compared to chaotic systems which exhibit randomness and unpredictability.&lt;/p&gt;
    &lt;p&gt;Chaos Theory is the sub branch of dynamical systems that studies chaotic systems and challenges the traditional deterministic views of causality. Most of the natural systems we observe are chaotic in nature, like the weather, a drop of ink dissolving in water, social and economic behaviours etc. In contrast, systems like the movement of planets, pendulums, and simple harmonic oscillators are extremely predictable and non-chaotic.&lt;/p&gt;
    &lt;p&gt;Chaos Theory deals with systems that exhibit irregular and unpredictable behavior over time, even though they follow deterministic rules. Having a set of rules that govern the system, and yet exhibit randomness and unpredictability, might seem a bit contradictory, but it is because the rules do not always represent the whole system. In fact, most of the time, these rules are an approximation of the system and that is what leads to the unpredictability. In complex systems, we do not have enough information to come up with a perfect set of rules. And by using incomplete information to make predictions, we introduce uncertainty, which amplifies over time, leading to the chaotic behaviour.&lt;/p&gt;
    &lt;p&gt;Chaotic systems generally have many non-linear interacting components, which we partially understand (or can partially observe) and which are very sensitive to small changes. A small change in the initial conditions can lead to a completely different outcome, a phenomenon known as the butterfly effect. In this post, we will try to see the butterfly effect in action but before that, let's talk about Strange Attractors.&lt;/p&gt;
    &lt;head rend="h2"&gt;Strange Attractors&lt;/head&gt;
    &lt;p&gt;To understand Strange Attractors, let's first understand what an attractor is. As discussed earlier, dynamical systems are all about change over time. During this change, the system moves through different possible states (remember the phase space jargon?). An attractor is a set of states towards which a system tends to settle over time, or you can say, towards which it is attracted. It's like a magnet that pulls the system towards it.&lt;/p&gt;
    &lt;p&gt;For example, think of a pendulum. When you release it, it swings back and forth, but eventually, it comes to rest at the bottom. The bottom is the attractor in this case. It's the state towards which the pendulum is attracted.&lt;/p&gt;
    &lt;p&gt;This happens due to the system's inherent dynamics, which govern how states in the phase space change. Here are some of the reasons why different states get attracted towards attractors:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Stability: Attractors are stable states of the system, meaning that once the system reaches them, it tends to stay there. This stability arises from the system's dynamics, which push it towards the attractor and keep it there.&lt;/item&gt;
      &lt;item&gt;Dissipation: Many dynamical systems have dissipative forces, which cause the system to lose energy over time. This loss of energy leads the system to settle into a lower-energy state, which often corresponds to an attractor. This is what happens in the case of the pendulum.&lt;/item&gt;
      &lt;item&gt;Contraction: In some regions of the phase space, the system's dynamics cause trajectories to converge. This contraction effect means that nearby states will tend to come closer together over time, eventually being drawn towards the attractor.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Some attractors have complex governing equations that can create unpredictable trajectories or behaviours. These nonlinear interactions can result in multiple stable states or periodic orbits, towards which the system evolves. These complex attractors are categorised as strange attractors. They are called "strange" due to their unique characteristics.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Fractal Structure: Strange attractors often have a fractal-like structure, meaning they display intricate patterns that repeat at different scales. This complexity sets them apart from simpler, regular attractors.&lt;/item&gt;
      &lt;item&gt;Sensitive Dependence on Initial Conditions: Systems with strange attractors are highly sensitive to their initial conditions. Small changes in the starting point can lead to vastly different long-term behaviors, a phenomenon known as the "butterfly effect".&lt;/item&gt;
      &lt;item&gt;Unpredictable Trajectories: The trajectories on a strange attractor never repeat themselves, exhibiting non-periodic motion. The system's behavior appears random and unpredictable, even though it is governed by deterministic rules.&lt;/item&gt;
      &lt;item&gt;Emergent Order from Chaos: Despite their chaotic nature, strange attractors exhibit a form of underlying order. Patterns and structures emerge from the seemingly random behavior, revealing the complex dynamics at play.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;You can observe most of these characteristics in the visualisation. The one which is most fascinating to observe is the butterfly effect.&lt;/p&gt;
    &lt;head rend="h3"&gt;The Butterfly Effect&lt;/head&gt;
    &lt;quote&gt;
      &lt;p&gt;A butterfly can flutter its wings over a flower in China and cause a hurricane in the Caribbean.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;One of the defining features of strange attractors is their sensitivity to initial conditions. This means that small changes in the starting state of the system can lead to vastly different long-term behaviors, a phenomenon known as the butterfly effect. In chaotic systems, tiny variations in the initial conditions can amplify over time, leading to drastically different outcomes.&lt;/p&gt;
    &lt;p&gt;In our visualisation, let's observe this behavior on Thomas Attractor. It is governed by the following equations:&lt;/p&gt;
    &lt;head rend="h3"&gt;Thomas Attractor Equation&lt;/head&gt;
    &lt;quote&gt;1float a = 0.19;23dx = (-a*x + sin(y)) * dt;4dy = (-a*y + sin(z)) * dt;5dz = (-a*z + sin(x)) * dt;&lt;/quote&gt;
    &lt;quote&gt;1float a = 0.19;23dx = (-a*x + sin(y)) * dt;4dy = (-a*y + sin(z)) * dt;5dz = (-a*z + sin(x)) * dt;&lt;/quote&gt;
    &lt;p&gt;A small change in the parameter &lt;code&gt;a&lt;/code&gt; can lead to vastly different particle trajectories and the overall shape of the
attractor. Change this value in the control panel and observe the butterfly effect in action.&lt;/p&gt;
    &lt;p&gt;There is another way of observing the butterfly effect in this visualisation. Change the &lt;code&gt;Initial State&lt;/code&gt; from &lt;code&gt;cube&lt;/code&gt; to
&lt;code&gt;sphere surface&lt;/code&gt; in the control panel and observe how the particles move differently in the two cases. The particles
eventually get attracted to the same states but have different trajectories.&lt;/p&gt;
    &lt;head rend="h2"&gt;Implementation Details&lt;/head&gt;
    &lt;p&gt;This visualization required rendering a large number of particles using Three.js. To achieve this efficiently, we used a technique called ping-pong rendering 2. This method handles iterative updates of particle systems directly on the GPU, minimizing data transfers between the CPU and GPU. It utilizes two frame buffer objects (FBOs) that alternate roles: One stores the current state of particles and render them on the screen, while the other calculates the next state.&lt;/p&gt;
    &lt;head rend="h3"&gt;Implementation Workflow&lt;/head&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;&lt;p&gt;Setting Up Frame Buffer Objects (FBOs): We start by creating two FBOs,&lt;/p&gt;&lt;code&gt;ping&lt;/code&gt;and&lt;code&gt;pong&lt;/code&gt;, to hold the current and next state of particles. These buffers store data such as particle positions in RGBA channels, making efficient use of GPU resources.typescript1const ping = new THREE.WebGLRenderTarget(size, size, {2minFilter: THREE.NearestFilter,3magFilter: THREE.NearestFilter,4format: THREE.RGBAFormat,5stencilBuffer: false,6type: THREE.FloatType,7});89const pong = new THREE.WebGLRenderTarget(size, size, {10minFilter: THREE.NearestFilter,11magFilter: THREE.NearestFilter,12format: THREE.RGBAFormat,13stencilBuffer: false,14type: THREE.FloatType,15});1const ping = new THREE.WebGLRenderTarget(size, size, {2minFilter: THREE.NearestFilter,3magFilter: THREE.NearestFilter,4format: THREE.RGBAFormat,5stencilBuffer: false,6type: THREE.FloatType,7});89const pong = new THREE.WebGLRenderTarget(size, size, {10minFilter: THREE.NearestFilter,11magFilter: THREE.NearestFilter,12format: THREE.RGBAFormat,13stencilBuffer: false,14type: THREE.FloatType,15});&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Shader Programs for Particle Dynamics: The shader programs execute on the GPU and apply attractor dynamics to each particle. Following is the attractor function which update the particle positions based on the attractor equation.&lt;/p&gt;glsl1vec3 attractor(vec3 pos) {2float a = 0.16;3float x = pos.x, y = pos.y, z = pos.z;4float dt = 0.015;56float dx, dy, dz;7dx = (-a*x + sin(y)) * dt;8dy = (-a*y + sin(z)) * dt;9dz = (-a*z + sin(x)) * dt;10return vec3(dx, dy, dz);11}1vec3 attractor(vec3 pos) {2float a = 0.16;3float x = pos.x, y = pos.y, z = pos.z;4float dt = 0.015;56float dx, dy, dz;7dx = (-a*x + sin(y)) * dt;8dy = (-a*y + sin(z)) * dt;9dz = (-a*z + sin(x)) * dt;10return vec3(dx, dy, dz);11}&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Rendering and Buffer Swapping: In each frame, the shader computes the new positions based on the attractor's equations and stores them in the inactive buffer. After updating, the roles of the FBOs are swapped: The previously inactive buffer becomes active, and vice versa.&lt;/p&gt;typescript1const currentTarget = flip ? ping : pong;2const nextTarget = flip ? pong : ping;34// Use current positions for calculations in shader5uniforms.positions.value = currentTarget.texture;67// Render the other on the screen8gl.setRenderTarget(nextTarget);9gl.clear();10gl.render(scene, camera);11gl.setRenderTarget(null);1213flip = !flip;1const currentTarget = flip ? ping : pong;2const nextTarget = flip ? pong : ping;34// Use current positions for calculations in shader5uniforms.positions.value = currentTarget.texture;67// Render the other on the screen8gl.setRenderTarget(nextTarget);9gl.clear();10gl.render(scene, camera);11gl.setRenderTarget(null);1213flip = !flip;&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This combination of efficient shader calculations and the ping-pong technique allows us to render the particle system.&lt;/p&gt;
    &lt;p&gt;If you have any comments, please leave them on this GitHub discussions topic. Sooner or later, I will integrate it with the blog. The hacker news discussion can be found here.&lt;/p&gt;
    &lt;head rend="h4"&gt;Footnotes&lt;/head&gt;
    &lt;head rend="h4"&gt;References&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Inspired by the work of Maxim&lt;/item&gt;
      &lt;item&gt;Wikipedia: Attractor&lt;/item&gt;
      &lt;item&gt;Wikipedia: List Of Chaotic Maps&lt;/item&gt;
      &lt;item&gt;Dynamical Systems Theory: What in the World is it?&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h4"&gt;Related Links&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;https://fusefactory.github.io/openfuse/strange%20attractors/particle%20system/Strange-Attractors-GPU/&lt;/item&gt;
      &lt;item&gt;https://chaoticatmospheres.com/mathrules-strange-attractors&lt;/item&gt;
      &lt;item&gt;https://www.dynamicmath.xyz/strange-attractors/&lt;/item&gt;
      &lt;item&gt;https://www.reddit.com/r/math/comments/z0dmms/visualization_of_3d_strange_attractors&lt;/item&gt;
      &lt;item&gt;https://www.clicktorelease.com/code/codevember-2016/3&lt;/item&gt;
      &lt;item&gt;https://discourse.mcneel.com/t/strange-attractors/120053&lt;/item&gt;
      &lt;item&gt;https://www.reddit.com/r/generative/comments/191fkkv/genuary_day_8_chaotic_system/&lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45777810</guid><pubDate>Fri, 31 Oct 2025 23:23:59 +0000</pubDate></item><item><title>Hard Rust requirements from May onward</title><link>https://lists.debian.org/debian-devel/2025/10/msg00285.html</link><description>&lt;doc fingerprint="87995b15cc375c90"&gt;
  &lt;main&gt;
    &lt;quote&gt;Hi all, I plan to introduce hard Rust dependencies and Rust code into APT, no earlier than May 2026. This extends at first to the Rust compiler and standard library, and the Sequoia ecosystem. In particular, our code to parse .deb, .ar, .tar, and the HTTP signature verification code would strongly benefit from memory safe languages and a stronger approach to unit testing. If you maintain a port without a working Rust toolchain, please ensure it has one within the next 6 months, or sunset the port. It's important for the project as whole to be able to move forward and rely on modern tools and technologies and not be held back by trying to shoehorn modern software on retro computing devices. Thank you for your understanding. -- debian developer - deb.li/jak | jak-linux.org - free software dev ubuntu core developer i speak de, en&lt;/quote&gt;
    &lt;p&gt;Attachment: signature.asc&lt;lb/&gt; Description: PGP signature&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45779860</guid><pubDate>Sat, 01 Nov 2025 07:31:40 +0000</pubDate></item><item><title>You can't refuse to be scanned by ICE's facial recognition app, DHS document say</title><link>https://www.404media.co/you-cant-refuse-to-be-scanned-by-ices-facial-recognition-app-dhs-document-says/</link><description>&lt;doc fingerprint="d4998b5510e20338"&gt;
  &lt;main&gt;
    &lt;p&gt;Immigration and Customs Enforcement (ICE) does not let people decline to be scanned by its new facial recognition app, which the agency uses to verify a person’s identity and their immigration status, according to an internal Department of Homeland Security (DHS) document obtained by 404 Media. The document also says any face photos taken by the app, called Mobile Fortify, will be stored for 15 years, including those of U.S. citizens.&lt;/p&gt;
    &lt;p&gt;The document provides new details about the technology behind Mobile Fortify, how the data it collects is processed and stored, and DHS’s rationale for using it. On Wednesday 404 Media reported that both ICE and Customs and Border Protection (CBP) are scanning peoples’ faces in the streets to verify citizenship.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45780228</guid><pubDate>Sat, 01 Nov 2025 08:58:54 +0000</pubDate></item><item><title>Nutella maker in hazelnut stand-off with Turkish dealers</title><link>https://www.ft.com/content/4826dfd2-8d8e-4316-931f-974f604a3899</link><description>&lt;doc fingerprint="bc7b1d715efad3e9"&gt;
  &lt;main&gt;&lt;head rend="h1"&gt;&lt;quote&gt;Nutella maker in hazelnut stand-off with Turkish dealers&lt;/quote&gt;&lt;/head&gt;&lt;head rend="h2"&gt;Try unlimited access&lt;/head&gt;Only $1 for 4 weeks&lt;p&gt;Then $75 per month. Complete digital access to quality FT journalism on any device. Cancel anytime during your trial.&lt;/p&gt;&lt;head rend="h2"&gt;Explore more offers.&lt;/head&gt;&lt;head rend="h3"&gt;FT Edit&lt;/head&gt;&lt;p&gt;Access to eight surprising articles a day, hand-picked by FT editors. For seamless reading, access content via the FT Edit page on FT.com and receive the FT Edit newsletter.&lt;/p&gt;&lt;head rend="h3"&gt;Standard Digital&lt;/head&gt;&lt;p&gt;Essential digital access to quality FT journalism on any device. Pay a year upfront and save 20%.&lt;/p&gt;&lt;head rend="h3"&gt;Premium Digital&lt;/head&gt;&lt;p&gt;Complete digital access to quality FT journalism with expert analysis from industry leaders. Pay a year upfront and save 20%.&lt;/p&gt;&lt;p&gt;Check whether you already have access via your university or organisation.&lt;/p&gt;&lt;p&gt;Terms &amp;amp; Conditions apply&lt;/p&gt;&lt;head rend="h2"&gt;Explore our full range of subscriptions.&lt;/head&gt;&lt;head rend="h3"&gt;For individuals&lt;/head&gt;&lt;p&gt;Discover all the plans currently available in your country&lt;/p&gt;&lt;head rend="h3"&gt;For multiple readers&lt;/head&gt;&lt;p&gt;Digital access for organisations. Includes exclusive features and content.&lt;/p&gt;&lt;head rend="h2"&gt;Why the FT?&lt;/head&gt;&lt;p&gt;See why over a million readers pay to read the Financial Times.&lt;/p&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45781076</guid><pubDate>Sat, 01 Nov 2025 12:20:44 +0000</pubDate></item><item><title>SQLite concurrency and why you should care about it</title><link>https://jellyfin.org/posts/SQLite-locking/</link><description>&lt;doc fingerprint="7b4e765eeca27f9a"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;SQLite concurrency and why you should care about it&lt;/head&gt;
    &lt;p&gt;SQLite is a powerful database engine, but due to its design, it has limitations that should not be overlooked.&lt;/p&gt;
    &lt;p&gt;Jellyfin has used a SQLite-based database for storing most of its data for years, but it has also encountered issues on many systems. In this blog post, I will explain how we address these limitations and how developers using SQLite can apply the same solutions.&lt;/p&gt;
    &lt;p&gt;This will be a technical blog post intended for developers and everyone wanting to learn about concurrency.&lt;/p&gt;
    &lt;p&gt;Also Jellyfin's implementation of locking for SQLite should be fairly easy to be implemented into another EF Core application if you are facing the same issue.&lt;/p&gt;
    &lt;p&gt;- JPVenson&lt;/p&gt;
    &lt;head rend="h2"&gt;The Premise&lt;/head&gt;
    &lt;p&gt;SQLite is a file-based database engine running within your application and allows you to store data in a relational structure. Overall it gives your application the means of storing structured data as a single file and without having to depend on another application to do so. Naturally this also comes at a price. If your application fully manages this file, the assumption must be made that your application is the sole owner of this file, and nobody else will tinker with it while you are writing data to it.&lt;/p&gt;
    &lt;p&gt;So an application that wants to use SQLite as its database needs to be the only one accessing it. Having established this fact, an important thought arises: if only a single write operation should be performed on a single file at a time, this rule must also apply to operations within the same application.&lt;/p&gt;
    &lt;head rend="h2"&gt;The W-A-L mode&lt;/head&gt;
    &lt;p&gt;SQLite has a feature that tries to get around this limitation: the Write-Ahead-Log (WAL). The WAL is a separate file that acts as a journal of operations that should be applied to an SQLite file. This allows multiple parallel writes to take place and get enqueued into the WAL. When another part of the application wants to read data, it reads from the actual database, then scans the WAL for modifications and applies them on the fly. This is not a foolproof solution; there are still scenarios where WAL does not prevent locking conflicts.&lt;/p&gt;
    &lt;head rend="h2"&gt;SQLite transactions&lt;/head&gt;
    &lt;p&gt;A transaction is supposed to ensure two things. Modifications made within a transaction can be reverted, either when something goes wrong or when the application decides it should and optionally a transaction may also block other readers from reading data that is modified within a transaction. This is where it gets spicy and we come to the real reason why I am writing this blog post. For some reason on some systems that run Jellyfin when a transaction takes place the SQLite engine reports the database is locked and instead of waiting for the transaction to be resolved the engine refuses to wait and just crashes. This seems to be a not uncommon issue and there are many reports to be found on the issue.&lt;/p&gt;
    &lt;p&gt;The factor that makes this issue so bad is that it does not happen reliably. So far we only have one team member where this can be (somewhat) reliably be reproduced which makes this an even worse a bug. From the reports this issue happens across all operating systems, drive speeds and with or without virtualization. So we do not have any deciding factor identified that even contributes to the likelihood of the issue happening.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Jellyfin factor&lt;/head&gt;
    &lt;p&gt;Having established the general theory on how SQLite behaves, we also have to look at the specifics of Jellyfins usage of SQLite. During normal operations on a recommended setup (Non-Networked Storage and preferably SSD) its unusual for any problems to arise, however the way Jellyfin utilises the SQLite db up to 10.11 is very suboptimal. In versions prior to 10.11 Jellyfin had a bug in its parallel task limit which resulted in exponential overscheduling of library scan operations which hammered the database engine with thousands of parallel write requests that an SQLite engine is simply not able to handle. While most SQLite engine implementations have retry behavior, they also have timeouts and checks in place to prevent limitless waiting so if we stress the engine enough, it just fails with an error. That and very long running and frankly unoptimized transactions could lead to the database just being overloaded with requests and flaking out.&lt;/p&gt;
    &lt;head rend="h2"&gt;The solution&lt;/head&gt;
    &lt;p&gt;Since we moved the codebase over to EF Core proper, we have the tools to actually do something about this as EF Core gives us a structured abstraction level. EF Core supports a way of hooking into every command execution or transaction by creating Interceptors. With an interceptor we can finally do the straight forward idea of just "not" writing to the database in parallel in a transparent way to the caller. The overall idea is to have multiple strategies of locking. Because all levels of synchronization will inevitably come at the cost of performance, we only want to do it when it is really necessary. So, I decided on three locking strategies:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;No-Lock&lt;/item&gt;
      &lt;item&gt;Optimistic locking&lt;/item&gt;
      &lt;item&gt;Pessimistic locking&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;As a default, the no-lock behavior does exactly what the name implies. Nothing. This is the default because my research shows that for 99% all of this is not an issue and every interaction at this level will slow down the whole application.&lt;/p&gt;
    &lt;p&gt;Both the optimistic and pessimistic behaviors use two interceptors—one for transactions and one for commands—and override &lt;code&gt;SaveChanges&lt;/code&gt; in &lt;code&gt;JellyfinDbContext&lt;/code&gt;.&lt;/p&gt;
    &lt;head rend="h3"&gt;Optimistic locking behavior&lt;/head&gt;
    &lt;p&gt;Optimistic locking means to assume the operation in question will succeed and only handle issues afterwards. In essence this can be boiled down to "Try and Retry and Retry ..." for a set number of times until either we succeed with the operation or fail entirely. This still leaves the possibility that we will not actually be able to perform a write, but the introduced overhead is far less than the Pessimistic locking behavior.&lt;/p&gt;
    &lt;p&gt;The idea behind how this works is simple: every time two operations try to write to the database, one will always win. The other will fail, wait some time, then retry a few times.&lt;/p&gt;
    &lt;p&gt;Jellyfin uses the &lt;code&gt;Polly&lt;/code&gt; library perform the retry behavior and will only retry operations it will find have been locked due to this exact issue.&lt;/p&gt;
    &lt;head rend="h3"&gt;Pessimistic locking behavior&lt;/head&gt;
    &lt;p&gt;Pessimistic locking always locks when a write to SQLite should be performed. Essentially every time an transaction is started or a write operation on the database is done though EF Core, Jellyfin will wait until all other read operations are finished and then block all other operations may they be read or write until the write in question has been performed. This however means, that Jellyfin can only ever perform a single write to the database, even if it would technically does not need to.&lt;/p&gt;
    &lt;p&gt;In theory, an application should have no issue reading from table "Alice" while writing to table "Bob" however to eliminate all possible sources of concurrency related locking, Jellyfin will only ever allow a single write performed on its database in this mode. While this will absolutely result in the most stable operation, it will undoubtedly also be the slowest.&lt;/p&gt;
    &lt;p&gt;Jellyfin uses a ReaderWriterLockSlim to lock the operations, that means we allow an unlimited number of reads to happen concurrently while only one write may ever be done on the database.&lt;/p&gt;
    &lt;head rend="h3"&gt;The future Smart locking behavior&lt;/head&gt;
    &lt;p&gt;In the future we might also consider combining both modes, to get the best of both worlds.&lt;/p&gt;
    &lt;head rend="h1"&gt;The result&lt;/head&gt;
    &lt;p&gt;Initial testing showed that with both modes, we had great success in handling the underlying issue. While we are not yet sure why this happens only on some systems when others work, we at least now have an option for users previously left out of using Jellyfin.&lt;/p&gt;
    &lt;p&gt;When I was researching this topic, I found many reports all over the internet facing the same error but nobody was able to provide a conclusive explanation whats really happening here. There have been similar proposals made to handle it but there wasn't a "ready to drop in" solution that handles all the different cases or only code that required massive modifications to every EF Core query. Jellyfin's implementation of the locking behaviors should be a copy-paste solution for everyone having the same issues as its using interceptors and the caller has no idea of the actual locking behavior.&lt;/p&gt;
    &lt;p&gt;Best of luck,&lt;/p&gt;
    &lt;p&gt;- JPVenson&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45781298</guid><pubDate>Sat, 01 Nov 2025 12:59:03 +0000</pubDate></item><item><title>CharlotteOS – An Experimental Modern Operating System</title><link>https://github.com/charlotte-os/Catten</link><description>&lt;doc fingerprint="25a44afe193d139f"&gt;
  &lt;main&gt;
    &lt;p&gt;&lt;code&gt;catten&lt;/code&gt; is an operating system kernel developed as a key component of the CharlotteOS project but it is designed to be flexible enough that we hope it can also find use in many other places. It seeks to be a monolithic kernel with low-level system call interfaces that borrows ideas from exokernels and other novel systems like Plan 9 and Fuchsia. Its design allows for almost any higher level interface to be layered on top and also includes a typesafe system namespace (akin to the namespaces found in Fuschsia and Plan 9 but more flexible and typesafe) with URIs as paths which has the added benefit of allowing access to the namespace of another host over a network without having to mount anything locally all while being secured by granular capabilities and a persistent mandatory access control policy.&lt;/p&gt;
    &lt;p&gt;catten is still in early development, and core subsystems are actively being built. We welcome contributions—feel free to grab an issue from the tracker, suggest features, or participate in discussions on our repository, Discord server or Matrix instance.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;catten&lt;/code&gt;is written in Rust and ISA specific assembly languages&lt;/item&gt;
      &lt;item&gt;x86_64 assembly should use Intel syntax as implemented by &lt;code&gt;rustc&lt;/code&gt;and&lt;code&gt;llvm-mc&lt;/code&gt;exclusively&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;C language dependencies are allowed if vetted by maintainers.&lt;/item&gt;
      &lt;item&gt;Any dependencies in languages other than Rust, C, and assembly are strictly forbidden.&lt;/item&gt;
      &lt;item&gt;Always prefer a high-quality Rust equivalent over an external C library unless there is good reason to do otherwise&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Processor: &lt;list rend="ul"&gt;&lt;item&gt;x86_64 (Primary ISA) &lt;list rend="ul"&gt;&lt;item&gt;x2APIC LAPIC operating mode&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;x86_64 (Primary ISA) &lt;/item&gt;
      &lt;item&gt;Firmware: &lt;list rend="ul"&gt;&lt;item&gt;Unified Extensible Firmware Interface (UEFI)&lt;/item&gt;&lt;item&gt;Advanced Configuration and Power Interface (ACPI)&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Memory: &lt;list rend="ul"&gt;&lt;item&gt;Recommended: &amp;gt;= 1 GiB&lt;/item&gt;&lt;item&gt;Required: 128 MiB&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Storage: &lt;list rend="ul"&gt;&lt;item&gt;Recommended: &amp;gt;= 64 GiB&lt;/item&gt;&lt;item&gt;Required: 4 GiB&lt;/item&gt;&lt;item&gt;Device Types: &lt;list rend="ul"&gt;&lt;item&gt;Non-Volatile Memory Express (NVMe)&lt;/item&gt;&lt;item&gt;USB Mass Storage Device Class&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Output: &lt;list rend="ul"&gt;&lt;item&gt;Display Adapter: Any adapter capable of providing framebuffers via the UEFI Graphics Output Protocol&lt;/item&gt;&lt;item&gt;Serial: &lt;list rend="ul"&gt;&lt;item&gt;NS16550 compatible UART&lt;/item&gt;&lt;item&gt;USB CDC ACM (Virtual UART)&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Input: &lt;list rend="ul"&gt;&lt;item&gt;Keyboard &lt;list rend="ul"&gt;&lt;item&gt;PS/2&lt;/item&gt;&lt;item&gt;USB HID&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;&lt;item&gt;Serial &lt;list rend="ul"&gt;&lt;item&gt;NS16550 compatible UART&lt;/item&gt;&lt;item&gt;USB CDC ACM (Virtual UART)&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Keyboard &lt;/item&gt;
      &lt;item&gt;Networking: &lt;list rend="ul"&gt;&lt;item&gt;USB CDC Network Control Model&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Please reach out to us on Matrix or Discord if you are interested in contributing.&lt;/p&gt;
    &lt;p&gt;This kernel is licensed under the GNU General Public License version 3.0 (or at your option, any later version). By contributing to this project you agree to license your contributions under those same terms exclusively.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45781397</guid><pubDate>Sat, 01 Nov 2025 13:12:47 +0000</pubDate></item><item><title>Updated practice for review articles and position papers in ArXiv CS category</title><link>https://blog.arxiv.org/2025/10/31/attention-authors-updated-practice-for-review-articles-and-position-papers-in-arxiv-cs-category/</link><description>&lt;doc fingerprint="ff55b99b0494c981"&gt;
  &lt;main&gt;
    &lt;p&gt;arXiv’s computer science (CS) category has updated its moderation practice with respect to review (or survey) articles and position papers. Before being considered for submission to arXiv’s CS category, review articles and position papers must now be accepted at a journal or a conference and complete successful peer review. When submitting review articles or position papers, authors must include documentation of successful peer review to receive full consideration. Review/survey articles or position papers submitted to arXiv without this documentation will be likely to be rejected and not appear on arXiv.&lt;lb/&gt; This change is being implemented due to the unmanageable influx of review articles and position papers to arXiv CS.&lt;/p&gt;
    &lt;p&gt;Is this a policy change?&lt;/p&gt;
    &lt;p&gt;Technically, no! If you take a look at arXiv’s policies for specific content types you’ll notice that review articles and position papers are not (and have never been) listed as part of the accepted content types. Review articles and position papers have, in the past, only been accepted at moderator discretion, because the few we received were of high quality and of interest to arXiv readers and the scientific community at large.&lt;/p&gt;
    &lt;p&gt;Why is the arXiv CS category making this change?&lt;/p&gt;
    &lt;p&gt;In the past few years, arXiv has been flooded with papers. Generative AI / large language models have added to this flood by making papers – especially papers not introducing new research results – fast and easy to write. While categories across arXiv have all seen a major increase in submissions, it’s particularly pronounced in arXiv’s CS category.&lt;/p&gt;
    &lt;p&gt;The goal of this change of practice is to:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Help arXiv readers more easily find valuable review articles and position papers written by subject matter experts&lt;/item&gt;
      &lt;item&gt;Free up moderators to focus on the content types officially accepted by arXiv, reduce submission hold times, and keep the pace of scientific discovery going!&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Above all, the core purpose of arXiv is to share research papers and facilitate scientific discovery quickly and freely. We are making this change in support of that mission.&lt;/p&gt;
    &lt;p&gt;In the past, arXiv CS received a relatively small amount of review or survey articles, and those we did receive were of extremely high quality, written by senior researchers at the request of publications like Annual Reviews, Proceedings of the IEEE, and Computing Surveys. Position paper submissions to arXiv were similarly rare, and usually produced by scientific societies or government study groups (for example,the Computing Research Association of the National Academies of Science, Engineering, and Medicine). While, as now, these papers were not content types officially accepted by arXiv, the arXiv moderators accepted them because of their scholarly value to the research community.&lt;/p&gt;
    &lt;p&gt;Fast forward to present day – submissions to arXiv in general have risen dramatically, and we now receive hundreds of review articles every month. The advent of large language models have made this type of content relatively easy to churn out on demand, and the majority of the review articles we receive are little more than annotated bibliographies, with no substantial discussion of open research issues.&lt;/p&gt;
    &lt;p&gt;arXiv believes that there are position papers and review articles that are of value to the scientific community, and we would like to be able to share them on arXiv. However, our team of volunteer moderators do not have the time or bandwidth to review the hundreds of these articles we receive without taking time away from our core purpose, which is to share research articles.&lt;/p&gt;
    &lt;p&gt;Reasonable and trusted outside refereed venues already exist (conferences and journals) which solicit position papers and review articles on subjects of concern or interest to our readers (such as concerns over privacy, ethics, safety, and security of recent CS technologies, particularly applications of artificial intelligence) and as part of that process, they conduct in-depth review to assure quality, evidential support of opinions, and scholarly value. Since arXiv does not have the resources to conduct this quality-control in-house for content types that we do not officially accept, this change of practice is allowing us to rely on these refereed venues to do so for us so that we can still share position papers and review articles of value on arXiv.&lt;/p&gt;
    &lt;p&gt;How do I submit my review article or position paper to arXiv? Before submission to arXiv, have your review article or position paper accepted to a refereed venue with peer review like a journal or a conference. Review articles or position papers must be accepted to a journal or conference before being submitted to arXiv and you must have documentation of complete and successful peer review.&lt;/p&gt;
    &lt;p&gt;Please note: the review conducted at conference workshops generally does not meet the same standard of rigor of traditional peer review and is not enough to have your review article or position paper accepted to arXiv.&lt;/p&gt;
    &lt;p&gt;How do I show my review article or position paper has successfully completed peer review? When you submit to arXiv, please include the peer reviewed journal reference and DOI metadata. If you do not provide this, your review article or position paper will likely be rejected.&lt;/p&gt;
    &lt;p&gt;Can I resubmit my position paper or review article after being rejected? If your position paper or review article was rejected because it did not complete a successful peer review process, you can submit an appeal request to resubmit if your article has since completed a successful peer review process. Do not resubmit your position paper or review article without an accepted appeal. Here are the instructions for how to appeal.&lt;/p&gt;
    &lt;p&gt;I have a scientific paper studying the impact of science and technology in society. Can I submit this to arXiv without peer review? Yes, arXiv has always released these types of scientific papers, for example in cs.CY or physics.soc-ph. These are scientific research papers and are not subject to this moderation practice change.&lt;/p&gt;
    &lt;p&gt;Will other categories on arXiv also change their practice re: review articles and position papers? Each category of arXiv has different moderators, who are subject matter experts with a terminal degree in their particular subject, to best serve the scholarly pursuits, goals, and standards of their category. While all moderators adhere to arXiv policy, the only policy arXiv has in place with regard to review articles and position papers is that they are not a generally accepted content type. The goal of the moderators of each category is to make sure the work being submitted is actually science, and that it is of potential interest to the scientific community. If other categories see a similar rise in LLM-written review articles and position papers, they may choose to change their moderation practices in a similar manner to better serve arXiv authors and readers. We will make these updates public if and when they do occur.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45782136</guid><pubDate>Sat, 01 Nov 2025 14:58:05 +0000</pubDate></item><item><title>Open-Source Ada: From Gateware to Application</title><link>https://blog.adacore.com/open-source-ada-from-gateware-to-application</link><description>&lt;doc fingerprint="a60816a801d4c06a"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Open-Source Ada: From Gateware to Application&lt;/head&gt;
    &lt;head rend="h2"&gt;by Olivier Henley –&lt;/head&gt;
    &lt;head rend="h1"&gt;IntroÂducÂtion &amp;amp; MotiÂvaÂtion #&lt;/head&gt;
    &lt;p&gt;To jump right in, all build instrucÂtions and source code can be found here.&lt;/p&gt;
    &lt;head rend="h2"&gt;Open-Source Stack Matters&lt;/head&gt;
    &lt;p&gt;As the GNAT AcaÂdÂeÂmÂic ProÂgram (GAP) CoorÂdiÂnaÂtor at AdaÂCore, I focus on thorÂough, hands-on learnÂing in sysÂtem proÂgramÂming. A fulÂly open-source stack (covÂerÂing gateÂware, toolÂchains, and appliÂcaÂtions) proÂvides the freeÂdom to explore and refine every layÂer, from silÂiÂcon-levÂel conÂtrol to high-levÂel abstracÂtions. This Neorv32 Basic Input/âOutput SysÂtem (BIOS) project highÂlights Ada as a friendÂly yet powÂerÂful alterÂnaÂtive to C for open-source development.&lt;/p&gt;
    &lt;head rend="h2"&gt;Who This Post is For&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;CuriÂous develÂopÂers explorÂing &lt;code&gt;Ada&lt;/code&gt;beyond its usuÂal reputation.&lt;/item&gt;
      &lt;item&gt;Ada enthuÂsiÂasts who lack the time to experÂiÂment with a softÂcore CenÂtral ProÂcessÂing Unit (CPU), a procesÂsor defined in a HardÂware DescripÂtion LanÂguage (HDL) and deployÂable on reconÂfigÂurable logÂic like a Field-ProÂgramÂmaÂble Gate Array (FPGA), rather than fixed silicon.&lt;/item&gt;
      &lt;item&gt;EmbedÂded sysÂtem newÂcomÂers seekÂing a pracÂtiÂcal introÂducÂtion to fundamentals.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h1"&gt;Neorv32, RISCâV, VHDL, and ULX3S #&lt;/head&gt;
    &lt;head rend="h2"&gt;Neorv32?&lt;/head&gt;
    &lt;p&gt;The Neorv32 SysÂtem on a Chip (SoC) is a VHDL-based RISCâV softÂcore feaÂturÂing a broad set of extenÂsions and periphÂerÂals along with extenÂsive docÂuÂmenÂtaÂtion. The Neorv32 is the brainÂchild of Stephan NoltÂing, who, accordÂing to his GitHub page, is assoÂciÂatÂed with the FraunÂhofer InstiÂtute for MicroÂelecÂtronÂic CirÂcuits and SysÂtems, GerÂmany.&lt;/p&gt;
    &lt;head rend="h2"&gt;RISCâV?&lt;/head&gt;
    &lt;p&gt;RISCâV is an open, extenÂsiÂble InstrucÂtion Set ArchiÂtecÂture (ISA) groundÂed in proven Reduced InstrucÂtion Set ComÂputÂer (RISC) prinÂciÂples, designed to be both modÂuÂlar and scalÂable. In my view, the openÂness and wideÂspread accepÂtance of RISCâV make it less susÂcepÂtiÂble to techÂniÂcal obsoÂlesÂcence than proÂpriÂetary or less wideÂly adoptÂed archiÂtecÂtures. RISCâVâs extenÂsiÂbilÂiÂty ensures it can evolve rather than become obsoÂlete, makÂing a lot of sense in acaÂdÂeÂmÂic and indusÂtriÂal contexts.&lt;/p&gt;
    &lt;head rend="h2"&gt;VHDL?&lt;/head&gt;
    &lt;p&gt;VHDL is a stanÂdardÂized hardÂware descripÂtion lanÂguage. Like Ada, it is strucÂtured, strongÂly typed, and enforces strict comÂpiÂlaÂtion rules. VHDL was origÂiÂnalÂly designed based on Ada: its synÂtax is very simÂiÂlar, and the semanÂtics align up to a point, with both lanÂguages priÂorÂiÂtizÂing corÂrectÂness over conÂveÂnience. Although verÂbose for some tastes, this clarÂiÂty reduces uninÂtendÂed errors and ensures explicÂit, unamÂbiguÂous design comÂmuÂniÂcaÂtion. The Neorv32 project is an excelÂlent tesÂtaÂment to the comÂpoundÂing benÂeÂfits of these attributes.&lt;/p&gt;
    &lt;head rend="h2"&gt;ULX3S?&lt;/head&gt;
    &lt;p&gt;The Radiona ULX3S is an open-source develÂopÂment board built around the LatÂtice ECP5 FPGA. Although the chip manÂuÂfacÂturÂing remains proÂpriÂetary, the board design is fulÂly open. Iâm using the 85,000 Look-Up Tables (85k LUT) verÂsion for its flexÂiÂbilÂiÂty and capaÂbilÂiÂty. It includes varÂiÂous periphÂerÂals but the real focus here is on the ECP5 FPGA, where weâll deploy our cusÂtom BIOS over the Neorv32 SoC.&lt;/p&gt;
    &lt;head rend="h1"&gt;DeterÂminÂisÂtic SoC #&lt;/head&gt;
    &lt;head rend="h2"&gt;CuratÂing Quality&lt;/head&gt;
    &lt;p&gt;The Neorv32 is designed with robustÂness and preÂdictabilÂiÂty in mind. It folÂlows a HarÂvard archiÂtecÂture, keepÂing instrucÂtion and data memÂoÂry sepÂaÂrate. Its mulÂti-cycle modÂel focusÂes on deterÂminÂisÂtic behavÂior, avoidÂing specÂuÂlaÂtive exeÂcuÂtion and ranÂdom stalls. It also offers capaÂbilÂiÂties that stand out among open-source RISCâV cores:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;VirÂtuÂalÂizaÂtion and safeÂty mechÂaÂnisms that detect malÂformed instrucÂtions and privÂiÂlege escaÂlaÂtions, and that enforce address-space integrity.&lt;/item&gt;
      &lt;item&gt;A hardÂware RISCâV debug modÂule for On-Chip DebugÂging (OCD).&lt;/item&gt;
      &lt;item&gt;SupÂport for atomÂic operÂaÂtions, which is critÂiÂcal for concurrency.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Unlike softÂware, hardÂware debugÂging is tied to physÂiÂcal sigÂnals, makÂing errors much hardÂer to trace and corÂrect. This realÂiÂty makes good design pracÂtices cruÂcial from the start. In pracÂtice, the Neorv32âs conÂserÂvÂaÂtive yet adaptÂable approach minÂiÂmizes edge casÂes and failÂure points.&lt;/p&gt;
    &lt;head rend="h1"&gt;ToolÂchain BreakÂdown: Going FulÂly Open-Source #&lt;/head&gt;
    &lt;head rend="h2"&gt;GateÂware, Firmware?&lt;/head&gt;
    &lt;p&gt;An FPGA is a reconÂfigÂurable chip where hardÂware logÂic cirÂcuits are defined proÂgramÂmatÂiÂcalÂly. Unlike fixed CPUs that exeÂcute instrucÂtions, an FPGA impleÂments such procesÂsor logÂic directÂly. This is why we call such assemÂbled code gateÂware. Instead of writÂing firmware for a preÂdeÂfined CPU, we first proÂgram the processorâs archiÂtecÂture in an HDL before deployÂing comÂpiled firmware instrucÂtions on it. In a nutÂshell, LUTs and Block RAM (BRAM) are the basic buildÂing blocks of an FPGA. As a genÂerÂal rule, the more of these resources you have, the more comÂplex your processor/âaccelerator logÂic can be.&lt;/p&gt;
    &lt;head rend="h2"&gt;Open-Source FPGA Toolchain&lt;/head&gt;
    &lt;p&gt;If you have some expeÂriÂence with FPGA develÂopÂment, you know proÂpriÂetary toolÂchains usuÂalÂly transÂform HDL code into a bitÂstream for proÂgramÂming the FPGA. Thanks to ongoÂing acaÂdÂeÂmÂic and open-source efforts, we can now rely on a fulÂly open ecosysÂtem. Here is how the open-source flow proÂduces a usable Neorv32 bitÂstream for the LatÂtice ECP5 on the ULX3S:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;GHDL, which is notably writÂten in Ada, parsÂes the VHDL and passÂes it to Yosys, an HDL synÂtheÂsis tool, through a plugin.&lt;/item&gt;
      &lt;item&gt;Yosys, with help from BerkeÂley-ABC, a sysÂtem for sequenÂtial synÂtheÂsis and verÂiÂfiÂcaÂtion, builds and optiÂmizes a netlist, a descripÂtion of the conÂnecÂtivÂiÂty of FPGA resources.&lt;/item&gt;
      &lt;item&gt;NextpÂnr takes that netlist for place-and-route, mapÂping it onto the ECP5âs physÂiÂcal layÂout using the Project TrelÂlis database.&lt;/item&gt;
      &lt;item&gt;ecpÂpack (part of TrelÂlis), then assemÂbles the final bitÂstream, ready to be uploaded to the FPGA&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h1"&gt;BringÂing Up Neorv32 on the ULX3S #&lt;/head&gt;
    &lt;head rend="h2"&gt;Board SetÂup and Configuration&lt;/head&gt;
    &lt;p&gt;To conÂfigÂure the Neorv32 softÂcore for my ULX3S board, I used neorv32-setups, a reposÂiÂtoÂry that proÂvides default board conÂfigÂuÂraÂtions and build setups for a basic SoC gateÂware and firmware. This was preÂciseÂly what I needÂed since it includes a UART, which is required for our Ada BIOS demo. A givÂen board setÂup conÂsists of a conÂstraint file that maps the boardâs physÂiÂcal interÂfaces to the FPGA pins, and a top-levÂel VHDL file that allows cusÂtomizaÂtion of the base SoC. In this file, you define the SoC you want by selectÂing periphÂerÂals and setÂting key paraÂmeÂters like the sysÂtem clock speed based on what the board physÂiÂcalÂly provides.&lt;/p&gt;
    &lt;head rend="h2"&gt;GenÂerÂatÂing and FlashÂing the Bitstream&lt;/head&gt;
    &lt;p&gt;FinalÂly, you have build makeÂfiles driÂving the open-source toolÂchain to genÂerÂate the SoC bitÂstream (.bit) and C firmware demos. With everyÂthing conÂfigÂured and built, I had a Neorv32 SoC bitÂstream file ready to be uploaded to the ULX3S. To give you an idea, this basic Neorv32 SoC uses 3,026 of the 85k LUTs (3% total) and 67 of the 208 DP16KD 16K block RAMs (32%), leavÂing plenÂty of room on my ECP5. To flash it, I used fujprog, anothÂer open-source project, which comÂpiled and transÂferred sucÂcessÂfulÂly on the first attempt.&lt;/p&gt;
    &lt;head rend="h1"&gt;GoodÂbye C, HelÂlo Ada #&lt;/head&gt;
    &lt;head rend="h2"&gt;Neorv32 BootÂloader Flow&lt;/head&gt;
    &lt;p&gt;Right away, I was able to test the default Neorv32 bootÂloader and upload some of the proÂvidÂed demos. DurÂing SoC synÂtheÂsis, the Neorv32 bootÂloader firmware is embedÂded into the FPGA bitÂstream. Once the FPGA is proÂgrammed and starts up, exeÂcuÂtion jumps directÂly to this bootÂloader, which presents a comÂmand menu for uploadÂing and runÂning othÂer firmware. The main Neorv32 reposÂiÂtoÂry proÂvides sevÂerÂal C demos designed to be exeÂcutÂed through this bootloader.&lt;/p&gt;
    &lt;p&gt;For these youâll need a RISCâV crossâcompiler (with libÂgloss) and a terÂmiÂnal proÂgram that can send raw binaÂry data withÂout headÂers. I used GTKÂTerm on LinÂux to ensure the firmware forÂmat matched what Neorv32âs bootÂloader expects. After startÂing with a ââhelÂlo worldâ C demo to learn the workÂflow, I moved on to write the Ada BIOS. Although setÂting up InterÂrupt SerÂvice RouÂtines (ISR) is a familÂiar conÂcept, doing it on RISCâV was new terÂriÂtoÂry for me.&lt;/p&gt;
    &lt;head rend="h2"&gt;C to Ada, Step-by-Step&lt;/head&gt;
    &lt;p&gt;The key was to creÂate a minÂiÂmal demo that exerÂcised UART RX interÂrupts for incomÂing conÂsole data, along with the necÂesÂsary ConÂtrol and StaÂtus RegÂisÂter (CSR) setÂup. TypÂiÂcal demos skip UART receive, so I pieced togethÂer a simÂple C examÂple to focus on hanÂdling UART0 RX interrupts.&lt;/p&gt;
    &lt;p&gt;When an interÂrupt occurs, the CPU stops what itâs doing and hands exeÂcuÂtion to the regÂisÂtered callÂback. Once finÂished, the CPU must restore its preÂviÂous state. In pracÂtice, that means a) savÂing the curÂrent regÂisÂters, b) runÂning the interÂrupt hanÂdler withÂin &lt;code&gt;isr()&lt;/code&gt;, and c) restorÂing the regÂisÂters before pickÂing up where it left off.&lt;/p&gt;
    &lt;p&gt;The refÂerÂence code tackÂled these steps in a sinÂgle naked C funcÂtion, mixÂing inline assemÂbly for saving/ârestoring regÂisÂters with the ISR logÂic. SplitÂting this into sepÂaÂrate C or Ada funcÂtions caused crashÂes. To fix that, I moved the assemÂbly preÂlude and postlude into &lt;code&gt;trap_entry.S&lt;/code&gt; and exposed a &lt;code&gt;trap_entry()&lt;/code&gt; and &lt;code&gt;isr()&lt;/code&gt; symÂbol to the linker.&lt;/p&gt;
    &lt;code&gt;.global trap_entry
.global isr

trap_entry:
...
   sw x31, 31*4(sp)  # Save x31 register
   call isr
...
   lw x31, 31*4(sp)  # Restore x31 register
...
   mret&lt;/code&gt;
    &lt;p&gt;IniÂtialÂly I kept the &lt;code&gt;isr()&lt;/code&gt; impleÂmenÂtaÂtion logÂic in C to ensure getÂting back to a workÂing state. Once done, I transÂlatÂed the &lt;code&gt;isr()&lt;/code&gt; logÂic to Ada step by step, ensurÂing each operÂaÂtion matched the original.&lt;/p&gt;
    &lt;code&gt;procedure Isr 
  with Export, Convention =&amp;gt; C, External_Name =&amp;gt; "isr";

procedure Isr is
begin
  Call_Handler;
  if Is_Exception then
    Compute_Return_Address;
  end if;
end Isr;

procedure Trap_Entry 
  with Import, Convention =&amp;gt; C, External_Name =&amp;gt; "trap_entry";&lt;/code&gt;
    &lt;head rend="h1"&gt;Neorv32 HardÂware AbstracÂtion LayÂer #&lt;/head&gt;
    &lt;head rend="h2"&gt;SetÂting Up a MinÂiÂmal Ada Runtime&lt;/head&gt;
    &lt;p&gt;Alire, the Ada packÂage manÂagÂer, already includes packÂages to help creÂate a basic RISCâV HardÂware AbstracÂtion LayÂer (HAL). bare_âruntime, a minÂiÂmal Ada runÂtime for embedÂded or restrictÂed tarÂgets, is a perÂfect fit. A needÂed GNAT RISCâV cross-comÂpilÂer is also availÂable. To make this work, two steps are required:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Add and conÂfigÂure depenÂdenÂcies in the packÂage manÂagÂer manÂiÂfest file of the &lt;code&gt;neorv32_hal&lt;/code&gt;library. The relÂeÂvant secÂtion of the&lt;code&gt;alire.toml&lt;/code&gt;file looks like this:&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;[[depends-on]]
gnat_riscv64_elf = "*"
bare_runtime = "*"

[gpr-set-externals]
BARE_RUNTIME_SWITCHES = "-march=rv32i_zicsr_zifencei -mabi=ilp32"&lt;/code&gt;
    &lt;p&gt;This estabÂlishÂes depenÂdenÂcies on the GNAT RISCâV cross-comÂpilÂer and the bare-metÂal runÂtime. It also passÂes speÂcifÂic build switchÂes to gprbuild, the GNAT build sysÂtem, ensurÂing comÂpatÂiÂbilÂiÂty with the tarÂgetÂed RISCâV variant.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;CusÂtomize the build file, &lt;code&gt;neorv32_hal.gpr&lt;/code&gt;, accordÂingÂly:&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;with "bare_runtime.gpr";
project Neorv32_Hal is
   for Languages use ("Ada", "ASM_CPP");
   for Target use "riscv64-elf";
   for Runtime ("Ada") use Bare_Runtime'Runtime ("Ada");
   for Library_Name use "Neorv32_Hal";
...
end Neorv32_Hal;&lt;/code&gt;
    &lt;p&gt;Here, we refÂerÂence the bare_âruntime project file, ensure supÂport for both Ada and AssemÂbly code, specÂiÂfy RISCâV as the tarÂget archiÂtecÂture, set bare_âruntime as the runÂtime, and define the curÂrent project as a library.&lt;/p&gt;
    &lt;head rend="h2"&gt;CreÂatÂing a CusÂtom LinkÂer Script and StartÂup Code&lt;/head&gt;
    &lt;p&gt;The next step is to creÂate the linkÂer script (&lt;code&gt;link.ld&lt;/code&gt;) and startÂup assemÂbly (&lt;code&gt;crt0.S&lt;/code&gt;). This is easÂiÂly done using the startup_âgen Alire packÂage. By proÂvidÂing key details about our tarÂget, such as memÂoÂry sizes, memÂoÂry start addressÂes and CPU archiÂtecÂture, startup_âgen genÂerÂates basic funcÂtionÂal files:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;crt0.S&lt;/code&gt;hanÂdles iniÂtialÂizaÂtion: loadÂing the data secÂtion, clearÂing BSS, and setÂting up global/âstatic objects.&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;link.ld&lt;/code&gt;maps firmware secÂtions accordÂing to the Neorv32 memÂoÂry layÂout: placÂing instrucÂtions in ROM and data in RAM.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;For a deepÂer dive into starÂtupÂgen, check out the relatÂed blog post.&lt;/p&gt;
    &lt;head rend="h2"&gt;ImpleÂmentÂing InterÂrupt HanÂdling in Ada&lt;/head&gt;
    &lt;p&gt;As menÂtioned, savÂing and restorÂing regÂisÂters durÂing an interÂrupt now hapÂpens in assemÂbly: &lt;code&gt;trap_entry&lt;/code&gt;. What remains is the midÂdle part: the &lt;code&gt;isr()&lt;/code&gt; that ends up callÂing the hanÂdler regÂisÂtered for the speÂcifÂic interÂrupt. First we need to update the Machine Trap VecÂtor RegÂisÂter (Mtvec) to point to our &lt;code&gt;trap_entry&lt;/code&gt;. This hapÂpens in the interÂrupt iniÂtialÂizaÂtion code.&lt;/p&gt;
    &lt;code&gt;procedure Init is
begin
  RISCV.CSR.Mstatus.Set_Bits (2#11000_00000000#);  --  after MRET stays M-mode
  RISCV.CSR.Mtvec.Write (UInt32 (To_Integer (Trap_Entry'Address)));
  RISCV.CSR.Mie.Write (0);  --  disables all interrupts
  Asm ("fence");
end Init;&lt;/code&gt;
    &lt;p&gt;Next we need to creÂate our &lt;code&gt;Handlers&lt;/code&gt; table; one entry per speÂcifÂic interÂrupt. Note that Neorv32 can be built as a dual-core, so the &lt;code&gt;Hart_ID_T&lt;/code&gt; type range from 0 to 1.&lt;/p&gt;
    &lt;code&gt;subtype Hart_Id_T is Natural range 0 .. 1;
type Trap_Code_T is (
...
  Fast_Interrupt_2, -- Uart0 RX
...
);

for Trap_Code_T use (
...
  Fast_Interrupt_2 =&amp;gt; 16#80000012#, -â Uart0 RX
...
  );

type Interrupt_Handler is access procedure (Hart : Hart_Id_T; Trap_Code : Trap_Code_T);
...
type Handlers_T is array (Hart_Id_T, Trap_Code_T) of Interrupt_Handler;
Handlers : Handlers_T := (others =&amp;gt; (others =&amp;gt; Default_Handler'Access));&lt;/code&gt;
    &lt;p&gt;We install a speÂcifÂic interÂrupt callÂback by indexÂing it in the &lt;code&gt;Handlers&lt;/code&gt; table:&lt;/p&gt;
    &lt;code&gt;procedure Install_Uart0_Rx_Interrupt_Handler (Hart : Harts_T; Handler : Interrupt_Handler) is
begin
  Handlers (Hart, Fast_Interrupt_2) := Handler;
end Install_Uart0_Rx_Interrupt_Handler;&lt;/code&gt;
    &lt;p&gt;CallÂing a hanÂdler involves checkÂing the interruptâs cause. Our callÂback sigÂnaÂture receives the &lt;code&gt;Hart_Id&lt;/code&gt; and the &lt;code&gt;Trap_Code&lt;/code&gt; enum value.&lt;/p&gt;
    &lt;code&gt;procedure Call_Handler is
  Hart_Id : Hart_Id_T := Hart_Id_T (RISCV.CSR.MHARTID.Read);
  Trap_Code : Trap_Code_T := Trap_Code_T'Enum_Val (RISCV.CSR.MCAUSE.Read);
begin
  Handlers (Hart_Id, Trap_Code).all (Hart_Id, Trap_Code);
end Call_Handler;&lt;/code&gt;
    &lt;head rend="h1"&gt;SVD and Ada #&lt;/head&gt;
    &lt;head rend="h2"&gt;MemÂoÂry-Mapped Peripherals&lt;/head&gt;
    &lt;p&gt;At this point, we need a way to talk to periphÂerÂals like UART0, which are memÂoÂry-mapped at speÂcifÂic addressÂes. At a givÂen base address, thereâs a range of bits for conÂtrol and data, and your Ada code interÂacts with these regÂisÂters to manÂage the peripheral.&lt;/p&gt;
    &lt;p&gt;In the embedÂded world, this mapÂping is often docÂuÂmentÂed in an XML-based forÂmat called CMSIS-SVD, which defines each peripheralâs base address and regÂisÂter layÂout. Neorv32 folÂlows this conÂvenÂtion and proÂvides a sinÂgle SVD file (.svd) covÂerÂing every potenÂtial periphÂerÂal for a givÂen SoC configuration.&lt;/p&gt;
    &lt;head rend="h2"&gt;Auto-GenÂerÂate Ada Code for Registers&lt;/head&gt;
    &lt;p&gt;By using the Svd2ada Alire packÂage, you can feed in the SVD file and autoÂmatÂiÂcalÂly genÂerÂate Ada code that reflects the strucÂture of each memÂoÂry mapped periphÂerÂal. For examÂple, conÂsidÂer this snipÂpet from the &lt;code&gt;neorv32.svd&lt;/code&gt; file for the UART0 peripheral:&lt;/p&gt;
    &lt;code&gt;&amp;lt;peripheral&amp;gt;
  &amp;lt;name&amp;gt;UART0&amp;lt;/name&amp;gt;
  &amp;lt;description&amp;gt;Primary universal asynchronous receiver and transmitter&amp;lt;/description&amp;gt;
  &amp;lt;baseAddress&amp;gt;0xFFF50000&amp;lt;/baseAddress&amp;gt;

  &amp;lt;addressBlock&amp;gt;
    &amp;lt;offset&amp;gt;0&amp;lt;/offset&amp;gt;
    &amp;lt;size&amp;gt;0x08&amp;lt;/size&amp;gt;
    &amp;lt;usage&amp;gt;registers&amp;lt;/usage&amp;gt;
  &amp;lt;/addressBlock&amp;gt;

  &amp;lt;registers&amp;gt;
    &amp;lt;register&amp;gt;
      &amp;lt;name&amp;gt;CTRL&amp;lt;/name&amp;gt;
      &amp;lt;description&amp;gt;Control register&amp;lt;/description&amp;gt;
      &amp;lt;addressOffset&amp;gt;0x00&amp;lt;/addressOffset&amp;gt;
      &amp;lt;fields&amp;gt;
        &amp;lt;field&amp;gt;
          &amp;lt;name&amp;gt;UART_CTRL_EN&amp;lt;/name&amp;gt;
          &amp;lt;bitRange&amp;gt;[0:0]&amp;lt;/bitRange&amp;gt;
          &amp;lt;description&amp;gt;UART enable flag&amp;lt;/description&amp;gt;
        &amp;lt;/field&amp;gt;
        ...
      &amp;lt;/fields&amp;gt;
    &amp;lt;/register&amp;gt;
    ...
  &amp;lt;/registers&amp;gt;
&amp;lt;/peripheral&amp;gt;&lt;/code&gt;
    &lt;p&gt;From this, we see:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;A base address of 0xFFF50000.&lt;/item&gt;
      &lt;item&gt;An address block spanÂning 8 bytes.&lt;/item&gt;
      &lt;item&gt;A conÂtrol regÂisÂter, &lt;code&gt;CRTL&lt;/code&gt;, with a 1âbit field,&lt;code&gt;UART_CTRL_EN&lt;/code&gt;, to enable or disÂable the peripheral.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;After runÂning it through Svd2ada, youâll get this neat genÂerÂatÂed Ada code you can use directly:&lt;/p&gt;
    &lt;code&gt;--  Generated from neorv32.svd

UART0_Base : constant System.Address := System'To_Address (16#FFF50000#);

type Bit is mod 2**1 with Size =&amp;gt; 1;
subtype CTRL_UART_CTRL_EN_Field is Bit;

type CTRL_Register is record
   UART_CTRL_EN : CTRL_UART_CTRL_EN_Field := 16#0#;
...
   UART_CTRL_TX_FULL : CTRL_UART_CTRL_TX_FULL_Field := 16#0#;
...
end record
   with Volatile_Full_Access, Object_Size =&amp;gt; 32,
        Bit_Order =&amp;gt; System.Low_Order_First;

type UART0_Peripheral is record
   CTRL : aliased CTRL_Register;
   DATA : aliased neorv32.UInt32;
end record
  with Volatile;

for UART0_Peripheral use record
   CTRL at 16#0# range 0 .. 31;
   DATA at 16#4# range 0 .. 31;
end record;

UART0_Periph : aliased UART0_Peripheral with Import, Address =&amp;gt; UART0_Base;&lt;/code&gt;
    &lt;head rend="h2"&gt;MinÂiÂmal UART Driver&lt;/head&gt;
    &lt;p&gt;&lt;code&gt;UART0_Periph&lt;/code&gt; is the periphÂerÂal instance to use. The folÂlowÂing code uses it to read a charÂacÂter over the UART0:&lt;/p&gt;
    &lt;code&gt;function Read_RX return Character is
  UART_RX : Character with Volatile, Address =&amp;gt; UART0_Periph.Data'Address;
begin
  return UART_RX;
end Read_RX;
pragma Inline (Read_RX);&lt;/code&gt;
    &lt;head rend="h2"&gt;ImpleÂmentÂing Ada.Text_IO&lt;/head&gt;
    &lt;p&gt;Now, to enrich our bare runÂtime and enable &lt;code&gt;Ada.Text_IO&lt;/code&gt; rouÂtines, all we need is to supÂply our own &lt;code&gt;putchar&lt;/code&gt; funcÂtion that hanÂdles a sinÂgle charÂacÂterâââhere text IO goes through UART. The bare_âruntime includes a weak &lt;code&gt;putchar&lt;/code&gt;, so once we proÂvide our cusÂtom impleÂmenÂtaÂtion, the rest of the logÂic is hanÂdled automatically.&lt;/p&gt;
    &lt;code&gt;procedure Put_Char (C : Interfaces.C.char) with
    Export, Convention =&amp;gt; C, External_Name =&amp;gt; "putchar";

procedure Put_Char (C : Interfaces.C.char) is
begin
  while UART0_Periph.CTRL.UART_CTRL_TX_FULL = 1 loop
    null;
  end loop;
  Write_TX (Interfaces.C.To_Ada (C));
end Put_Char;&lt;/code&gt;
    &lt;head rend="h1"&gt;The neorv32_âhal + demos packÂage #&lt;/head&gt;
    &lt;head rend="h2"&gt;Alire PackÂage Structure&lt;/head&gt;
    &lt;p&gt;Now weâre ready to creÂate the &lt;code&gt;bios&lt;/code&gt; demo and packÂage it withÂin the &lt;code&gt;neorv32_hal&lt;/code&gt; in the Alire registry:&lt;/p&gt;
    &lt;code&gt;neorv32_hal
 â alire.toml        (the manifest pushed to the Alire upstream index)
 â src               (contains HAL code)
 â demos
       â alire.toml  (pin a backward dependency on neorv32_hal)
       â src         (contains BIOS demo code)&lt;/code&gt;
    &lt;p&gt;The &lt;code&gt;alire.toml&lt;/code&gt; inside &lt;code&gt;demos&lt;/code&gt; looks like this:&lt;/p&gt;
    &lt;code&gt;name = "demos"
executables = ["bios"]

[[depends-on]]
neorv32_hal = "*"

[[pins]]
neorv32_hal = { path = ".." }&lt;/code&gt;
    &lt;p&gt;FinalÂly, our BIOS code doesnât rely on polling. Itâs event-driÂven through RX interÂrupts. All reactÂing code and state hanÂdling hapÂpens in &lt;code&gt;Parse_Cmd&lt;/code&gt; and the priÂvate impleÂmenÂtaÂtion of the &lt;code&gt;Bios_Core&lt;/code&gt; package.&lt;/p&gt;
    &lt;code&gt;with Bios_Core;
with Interrupts;
with Uart0;

procedure Bios is
begin
   Interrupts.Init;
   Interrupts.Install_Uart0_Rx_Interrupt_Handler (0, Bios_Core.Parse_Cmd'Access);
   Uart0.Init (19200);
   Interrupts.Global_Machine_Interrupt_Enable;
   Bios_Core.Show_Welcome;
   loop
      null;
   end loop;
end Bios;&lt;/code&gt;
    &lt;head rend="h1"&gt;Try It YourÂself #&lt;/head&gt;
    &lt;p&gt;I hope you found all this interÂestÂing. I skipped instalÂlaÂtion, build instrucÂtions for third-parÂty tools, and plumbÂing details, but youâll find everyÂthing you need in the reposÂiÂtoÂryââs README. If you have any quesÂtions or run into issues, donât hesÂiÂtate to reach out.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45782348</guid><pubDate>Sat, 01 Nov 2025 15:21:00 +0000</pubDate></item><item><title>Data centers contribute to high prices as energy bills electrify local politics</title><link>https://www.wsj.com/economy/consumers/surging-power-costs-are-putting-the-squeeze-on-customers-f8b2c04b</link><description></description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45782865</guid><pubDate>Sat, 01 Nov 2025 16:16:53 +0000</pubDate></item><item><title>GHC now runs in the browser</title><link>https://discourse.haskell.org/t/ghc-now-runs-in-your-browser/13169</link><description>&lt;doc fingerprint="4f3ad0dfd8363b44"&gt;
  &lt;main&gt;
    &lt;div&gt;
      &lt;div&gt;
        &lt;p&gt;ghc itself can now run purely client-side in the browser, here’s a haskell playground demo. terms and conditions apply, and i’ll write up more detailed explanation some time later, but i thought this is a cool thing to show off how far the ghc wasm backend has advanced &lt;/p&gt;
      &lt;/div&gt;
      &lt;p&gt; 73 Likes &lt;/p&gt;
    &lt;/div&gt;
    &lt;div&gt;
      &lt;div&gt;jaror
2&lt;/div&gt;
      &lt;div&gt;
        &lt;p&gt;This is very cool! I wonder how easy it would be to load some packages; cabal in the browser when? I’m also wondering how usable Agda in the browser would be.&lt;/p&gt;
      &lt;/div&gt;
      &lt;p&gt; 3 Likes &lt;/p&gt;
    &lt;/div&gt;
    &lt;div&gt;
      &lt;div&gt;jaror
3&lt;/div&gt;
      &lt;div&gt;
        &lt;p&gt;I think I found a bug: ghc options persist even after I change them. Edit: this has been fixed!&lt;/p&gt;
        &lt;p&gt;Also &lt;code&gt;-with-rtsopts=-s&lt;/code&gt; does not work, sadly. Edit: Ah, that’s because it is interpreted.&lt;/p&gt;
      &lt;/div&gt;
      &lt;p&gt; 3 Likes &lt;/p&gt;
    &lt;/div&gt;
    &lt;div&gt;
      &lt;div&gt;ad-si
4&lt;/div&gt;
      &lt;div&gt;
        &lt;p&gt;This is awesome!&lt;lb/&gt; Perfect for building a fully interactive Haskell online course! &lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div&gt;
      &lt;div&gt;
        &lt;p&gt;Excellent work - the efforts to bring Haskell to WASM are a huge boon to our ecosystem and userbase!&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div&gt;
      &lt;div&gt;
        &lt;p&gt;Can’t run it on my tablet (wasm), curious: is this running the type checker or also code gen to wasm?&lt;/p&gt;
      &lt;/div&gt;
      &lt;p&gt; 1 Like &lt;/p&gt;
    &lt;/div&gt;
    &lt;div&gt;
      &lt;div&gt;jaror
8&lt;/div&gt;
      &lt;div&gt;
        &lt;p&gt;It runs the code, but it seems like it uses the bytecode interpreter.&lt;/p&gt;
      &lt;/div&gt;
      &lt;p&gt; 1 Like &lt;/p&gt;
    &lt;/div&gt;
    &lt;div&gt;
      &lt;div&gt;
        &lt;p&gt;What modifications were to GHC for it to be compiled to WASM?&lt;/p&gt;
      &lt;/div&gt;
      &lt;p&gt; 1 Like &lt;/p&gt;
    &lt;/div&gt;
    &lt;div&gt;
      &lt;div&gt;
        &lt;p&gt;cabal won’t work in the browser due to lack of process support; but it’s possible to use &lt;code&gt;wasm32-wasi-cabal&lt;/code&gt; to precompile some third party packages to wasm and make this playground support them as well.&lt;/p&gt;
        &lt;p&gt;you might be interested to check GitHub - agda-web/agda-wasm-dist: Distributions of Agda executable compiled into WebAssembly.; afaik they even compiled GitHub - agda/agda-language-server: Language Server for Agda to wasm, not sure how usable it is currently&lt;/p&gt;
        &lt;p&gt;thanks for the report! i pushed an update which should have fixed it.&lt;/p&gt;
        &lt;p&gt;that’s right; ghc in browser can’t invoke the c compiler and it can only interpret haskell modules via bytecode.&lt;/p&gt;
      &lt;/div&gt;
      &lt;p&gt; 1 Like &lt;/p&gt;
    &lt;/div&gt;
    &lt;div&gt;
      &lt;div&gt;
        &lt;p&gt;thanks for the reports! a few seconds of freeze during start-time is expected, since it needs to download ~50M of a rootfs tarball and extract it, then link the ghc library and all its dependencies. as for safari, it’s strange since i i just landed a workaround for a webkit bug that breaks the wasm dynamic linker a few days ago, i’ll take a closer look later.&lt;/p&gt;
        &lt;p&gt;the ghc library already mostly works when compiled to wasm, and it can parse/typecheck/desugar stuff. the bottleneck is the linker/loader part, for it to be useful it needs to be able to dynamically load and execute haskell code. i landed a couple of ghc patches recently to push towards that direction, and the last one that gets us towards the haskell playground (not landed yet) is Draft: Support running GHC fully client-side in the browser (!15000) · Merge requests · Glasgow Haskell Compiler / GHC · GitLab&lt;/p&gt;
      &lt;/div&gt;
      &lt;p&gt; 8 Likes &lt;/p&gt;
    &lt;/div&gt;
    &lt;div&gt;
      &lt;div&gt;
        &lt;p&gt;Which packages are installed by default?&lt;/p&gt;
      &lt;/div&gt;
      &lt;p&gt; 2 Likes &lt;/p&gt;
    &lt;/div&gt;
    &lt;div&gt;
      &lt;div&gt;
        &lt;p&gt;now chrome will consume even more memory &lt;/p&gt;
        &lt;p&gt;Awesome work!&lt;/p&gt;
      &lt;/div&gt;
      &lt;p&gt; 2 Likes &lt;/p&gt;
    &lt;/div&gt;
    &lt;div&gt;
      &lt;div&gt;
        &lt;p&gt;the &lt;code&gt;ghc&lt;/code&gt; library and its transitive dependencies.&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
    &lt;div&gt;
      &lt;div&gt;jarm
15&lt;/div&gt;
      &lt;div&gt;
        &lt;p&gt;Can you elaborate? Do you have any end-to-end examples/instructions for this?&lt;/p&gt;
        &lt;p&gt;I am a live coding musician and have been trying to get Tidal running on the web for years: tidal: Pattern language for improvised music&lt;/p&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45782981</guid><pubDate>Sat, 01 Nov 2025 16:29:23 +0000</pubDate></item><item><title>Chat Control proposal fails again after public opposition</title><link>https://andreafortuna.org/2025/11/01/chat-control-proposal-fails-again-after-massive-public-opposition/</link><description>&lt;doc fingerprint="b70c19598a0da651"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Chat control proposal fails again after massive public opposition&lt;/head&gt;
    &lt;p&gt;The European Union Council has once again retreated from its controversial Chat Control proposal, a plan that would have required widespread scanning of encrypted messages. The withdrawal by the current Danish presidency represents yet another chapter in a long-running battle between privacy advocates and lawmakers who believe they can compromise encryption in the name of public safety. While this latest defeat is a victory for digital rights, the fight is far from over, and the fundamental misunderstanding of encryption technology continues to plague policy discussions across Europe.&lt;/p&gt;
    &lt;head rend="h2"&gt;A zombie proposal that refuses to die&lt;/head&gt;
    &lt;p&gt;Since its introduction in 2022, Chat Control has become what privacy advocates call a zombie proposal, repeatedly resurrected despite consistent opposition from civil society, technical experts, and the public. The Electronic Frontier Foundation and more than 80 civil society organizations have strongly opposed the legislation, which would mandate client-side scanning of encrypted communications under the guise of combating child sexual abuse material.&lt;/p&gt;
    &lt;p&gt;The pattern has become predictable. EU lawmakers introduce the proposal, claiming it includes safeguards for privacy. Technical experts explain why those safeguards are illusory. Public pressure mounts. The proposal is withdrawn or modified. Then, after a brief hiatus, it returns with minor tweaks, and the cycle begins anew. This latest withdrawal by the Danish presidency follows the same script, but the underlying issues remain unresolved.&lt;/p&gt;
    &lt;p&gt;What makes this particularly frustrating is that the fundamental problem with Chat Control has never been addressed. The proposal seeks to create what privacy experts call a “backdoor” into encryption, allowing authorities to scan messages before they’re encrypted or after they’re decrypted. Proponents argue this preserves encryption while enabling content moderation, but this reveals a dangerous misunderstanding of how encryption actually works. Creating any mechanism to access encrypted content inherently weakens the entire system, making it vulnerable not just to authorized access but to malicious actors as well.&lt;/p&gt;
    &lt;head rend="h2"&gt;The technical impossibility of “safe” scanning&lt;/head&gt;
    &lt;p&gt;The core issue with Chat Control and similar proposals lies in a fundamental misunderstanding of encryption technology. End-to-end encryption works because only the sender and recipient possess the keys to decrypt messages. Any third party, whether a government agency or a tech company, cannot read the contents. This is not a design choice but a mathematical certainty that ensures the security of billions of communications daily.&lt;/p&gt;
    &lt;p&gt;Client-side scanning, the technical approach favored by Chat Control advocates, attempts to circumvent this limitation by analyzing messages on users’ devices before encryption or after decryption. While this might sound like a clever workaround, it fundamentally breaks the security model of encryption. If a device can scan and report on message content, so can malware, hackers, or authoritarian governments who might compel tech companies to expand the scope of scanning.&lt;/p&gt;
    &lt;p&gt;Security researchers have repeatedly demonstrated that there is no way to create a scanning system that only works for “good guys.” Apple learned this lesson the hard way in 2021 when it proposed a similar system for detecting child abuse imagery in iCloud photos. The backlash from security experts was swift and devastating, forcing the company to abandon the plan. The same security vulnerabilities that would enable Chat Control would inevitably be exploited by malicious actors, putting everyone at greater risk.&lt;/p&gt;
    &lt;p&gt;Moreover, the scope creep inherent in surveillance technologies is well documented. A system initially designed to detect illegal content could easily be expanded to monitor political dissent, religious expression, or any other communication governments deem problematic. Countries around the world are watching the EU’s actions closely. If Chat Control were to pass, it would set a dangerous precedent that authoritarian regimes would eagerly exploit, claiming they’re simply following Europe’s lead in implementing “reasonable” content moderation.&lt;/p&gt;
    &lt;head rend="h2"&gt;Public pressure and the power of resistance&lt;/head&gt;
    &lt;p&gt;The withdrawal of Chat Control demonstrates the critical importance of sustained public engagement in technology policy. Unlike previous instances where technical proposals sailed through legislative processes with little public awareness, this fight has been characterized by unprecedented mobilization from civil society organizations, technology companies, security researchers, and ordinary citizens concerned about their digital rights.&lt;/p&gt;
    &lt;p&gt;Organizations like the Electronic Frontier Foundation, European Digital Rights, and numerous national privacy advocacy groups have played a crucial role in educating the public about the risks of Chat Control. Their efforts have included detailed technical explanations, legal analysis, and coordination of opposition campaigns that have reached millions of Europeans. This groundswell of opposition has made it politically toxic for lawmakers to support the proposal, at least in its current form.&lt;/p&gt;
    &lt;p&gt;The effectiveness of this resistance offers important lessons for future policy battles. First, technical expertise matters. When security researchers speak with a unified voice about the impossibility of safe backdoors, it becomes harder for politicians to dismiss concerns as alarmist. Second, coalition-building across different sectors strengthens opposition. When civil liberties groups, tech companies, and individual users all oppose a policy, it suggests the problems are real and widespread. Third, sustained pressure is essential because, as Chat Control demonstrates, bad proposals rarely die on the first attempt.&lt;/p&gt;
    &lt;p&gt;However, this victory should be tempered with realism. The forces pushing for Chat Control have not given up, and the underlying political dynamics that gave rise to the proposal remain unchanged. Politicians face genuine pressure to be seen as “doing something” about online harms, particularly regarding child safety. Until alternative approaches that don’t compromise encryption gain political traction, proposals like Chat Control will continue to resurface.&lt;/p&gt;
    &lt;head rend="h2"&gt;The path forward requires education and alternatives&lt;/head&gt;
    &lt;p&gt;The repeated resurrection of Chat Control points to a deeper problem in how technology policy is made. Many lawmakers genuinely believe they can have both strong encryption and government access to encrypted content. This belief persists despite unanimous opposition from the cryptographic community because the political incentives favor appearing tough on crime over understanding complex technical realities.&lt;/p&gt;
    &lt;p&gt;Breaking this cycle requires a fundamental shift in how we approach online safety. Rather than seeking technological magic bullets that promise security without trade-offs, policymakers need to invest in solutions that actually work. This includes better funding for law enforcement training and tools that don’t require breaking encryption, improved international cooperation on criminal investigations, and addressing the root causes of online exploitation through social programs and education.&lt;/p&gt;
    &lt;p&gt;Technology companies also bear responsibility for developing and promoting genuinely privacy-preserving safety features. End-to-end encrypted platforms can implement abuse prevention measures that don’t involve content scanning, such as metadata analysis, user reporting systems, and account-level restrictions for suspicious behavior. While these approaches may be less comprehensive than mass surveillance, they achieve meaningful safety improvements without the catastrophic privacy trade-offs of backdoors.&lt;/p&gt;
    &lt;p&gt;Looking ahead, the privacy community cannot simply celebrate the withdrawal of Chat Control and move on. The next presidency of the EU Council will bring new opportunities for the proposal to resurface in yet another modified form. Sustained vigilance, continued public education, and proactive development of alternative safety measures will be essential. The fight to protect encryption is not a single battle but an ongoing campaign that requires long-term commitment from everyone who values digital privacy and security.&lt;/p&gt;
    &lt;p&gt;The withdrawal of Chat Control is a victory, but it’s a temporary one. The fundamental challenge remains: convincing policymakers that some trade-offs are not worth making, and that breaking encryption to combat illegal content creates far more problems than it solves. Until that message truly sinks in, the zombie proposal will keep rising from the grave, and the privacy community must remain ready to defeat it again and again.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45783114</guid><pubDate>Sat, 01 Nov 2025 16:42:57 +0000</pubDate></item><item><title>Studies increasingly find links between air pollutants and dementia</title><link>https://www.nytimes.com/2025/11/01/health/alzheimers-dementia-air-pollution.html</link><description></description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45783206</guid><pubDate>Sat, 01 Nov 2025 16:54:45 +0000</pubDate></item><item><title>Ask HN: Where to Begin with "Modern" Emacs?</title><link>https://news.ycombinator.com/item?id=45783376</link><description>&lt;doc fingerprint="96f57412fcf5af17"&gt;
  &lt;main&gt;
    &lt;div&gt;
      &lt;p&gt;Hi all,&lt;/p&gt;
      &lt;p&gt;I’m a longtime Neovim user who’s been EMacs-curious. The hold up for me has been that I’ve been unable to find a source of truth for what’s top-of-the-line as far as plugins are. With Neovim, it’s a safe bet to look at what folks like Folke are doing, but I have struggled to find a similar figure in the Emacs community who gives insight into what’s-what. I know Doom exists, but I want to fully “own” my config and not over complicate it.&lt;/p&gt;
      &lt;p&gt;Thanks!&lt;/p&gt;
    &lt;/div&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45783376</guid><pubDate>Sat, 01 Nov 2025 17:13:04 +0000</pubDate></item><item><title>Visible from space, Sudan's bloodied sands expose a massacre of thousands</title><link>https://www.telegraph.co.uk/world-news/2025/10/28/sudan-bloodied-sands-massacre-thousands/</link><description>&lt;doc fingerprint="af14cd1f0e004f24"&gt;
  &lt;main&gt;
    &lt;p&gt;The hot sand around the Sudanese city of El Fasher is stained red with the blood of more than 2,000 massacred civilians.&lt;/p&gt;
    &lt;p&gt;The pools of blood are so thick, the piles of bodies so exposed, that the ethnic purge allegedly committed by Sudanese paramilitary rebels is visible from space.&lt;/p&gt;
    &lt;p&gt;Militia groups defending the city alongside the army alleged the Rapid Support Forces (RSF) rebel group “committed heinous crimes against innocent civilians” and said most of the dead were women, children and the elderly.&lt;/p&gt;
    &lt;p&gt;A video purported to show a child soldier murdering a grown man in cold blood. Another supposedly showed RSF fighters executing civilians moments after pretending to release them.&lt;/p&gt;
    &lt;p&gt;The total death toll could not immediately be confirmed, but satellite pictures taken after the city fell over the weekend following an 18-month siege showed evidence of mass killings.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45783699</guid><pubDate>Sat, 01 Nov 2025 17:50:38 +0000</pubDate></item><item><title>Reconfigurable Analog Computers</title><link>https://arxiv.org/abs/2510.25942</link><description>&lt;doc fingerprint="ed9e351ad4f580af"&gt;
  &lt;main&gt;&lt;head rend="h1"&gt;Computer Science &amp;gt; Other Computer Science&lt;/head&gt;&lt;p&gt; [Submitted on 29 Oct 2025]&lt;/p&gt;&lt;head rend="h1"&gt;Title:Reconfigurable Analog Computers&lt;/head&gt;View PDF HTML (experimental)&lt;quote&gt;Abstract:The Achilles heel of classic analog computers was the complex, error prone, and time consuming process of programming. This typically involved manually patching hundreds or even thousands of connections between individual computing elements as well as setting many precision 10-turn potentiometers manually, often taking hours, or even days. Albeit being simplified by means of removable patch panels, switching from one program to another still was time consuming and thus expensive. With digital computers about to hit physical boundaries with respect to energy consumption, clock frequency, and integration density, analog computers have gained a lot of interest as co-processors for certain application areas in recent years. This requires some means for automatic reconfiguration of these systems under control of an attached digital computer. The following sections give an overview of classic and modern approaches towards such autopatch systems.&lt;/quote&gt;&lt;head rend="h3"&gt;References &amp;amp; Citations&lt;/head&gt;&lt;p&gt; export BibTeX citation Loading... &lt;/p&gt;&lt;head rend="h1"&gt;Bibliographic and Citation Tools&lt;/head&gt;&lt;p&gt; Bibliographic Explorer (What is the Explorer?) &lt;/p&gt;&lt;p&gt; Connected Papers (What is Connected Papers?) &lt;/p&gt;&lt;p&gt; Litmaps (What is Litmaps?) &lt;/p&gt;&lt;p&gt; scite Smart Citations (What are Smart Citations?) &lt;/p&gt;&lt;head rend="h1"&gt;Code, Data and Media Associated with this Article&lt;/head&gt;&lt;p&gt; alphaXiv (What is alphaXiv?) &lt;/p&gt;&lt;p&gt; CatalyzeX Code Finder for Papers (What is CatalyzeX?) &lt;/p&gt;&lt;p&gt; DagsHub (What is DagsHub?) &lt;/p&gt;&lt;p&gt; Gotit.pub (What is GotitPub?) &lt;/p&gt;&lt;p&gt; Hugging Face (What is Huggingface?) &lt;/p&gt;&lt;p&gt; Papers with Code (What is Papers with Code?) &lt;/p&gt;&lt;p&gt; ScienceCast (What is ScienceCast?) &lt;/p&gt;&lt;head rend="h1"&gt;Demos&lt;/head&gt;&lt;head rend="h1"&gt;Recommenders and Search Tools&lt;/head&gt;&lt;p&gt; Influence Flower (What are Influence Flowers?) &lt;/p&gt;&lt;p&gt; CORE Recommender (What is CORE?) &lt;/p&gt;&lt;head rend="h1"&gt;arXivLabs: experimental projects with community collaborators&lt;/head&gt;&lt;p&gt;arXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.&lt;/p&gt;&lt;p&gt;Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.&lt;/p&gt;&lt;p&gt;Have an idea for a project that will add value for arXiv's community? Learn more about arXivLabs.&lt;/p&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45783835</guid><pubDate>Sat, 01 Nov 2025 18:03:56 +0000</pubDate></item><item><title>Powell – unlike the dotcom boom, AI spending isn't a bubble</title><link>https://fortune.com/2025/10/29/powell-says-ai-is-not-a-bubble-unlike-dot-com-federal-reserve-interest-rates/</link><description>&lt;doc fingerprint="3d85c0356161c52d"&gt;
  &lt;main&gt;
    &lt;p&gt;Federal Reserve Chair Jerome Powell doesn’t think the AI boom is another dotcom bubble. In fact, he made that distinction explicit on Wednesday, arguing that the current wave of artificial intelligence investment is grounded in profit-making firms and real economic activity rather than speculative exuberance.&lt;/p&gt;
    &lt;p&gt;“I won’t go into particular names,” Powell told reporters after the Fed’s policy meeting, “but they actually have earnings.&lt;lb/&gt;“These companies … actually have business models and profits and that kind of thing. So it’s really a different thing” from the dotcom bubble, he added. &lt;/p&gt;
    &lt;p&gt;The comments mark what seems like Powell’s most direct acknowledgment yet that AI’s corporate build-out—spanning hundreds of billions of dollars in data center and semiconductor investments—has become a genuine engine of U.S. growth.&lt;/p&gt;
    &lt;head rend="h3"&gt;A productivity play, not a rate-sensitive one&lt;/head&gt;
    &lt;p&gt;Powell emphasized that the explosion of AI spending isn’t being driven by monetary policy—or by cheap money.&lt;/p&gt;
    &lt;p&gt;“I don’t think interest rates are an important part of the AI or data center story,” he said. “It’s based on longer-run assessments that this is an area where there’s going to be a lot of investment, and that’s going to drive higher productivity.”&lt;/p&gt;
    &lt;p&gt;That remark cuts against one market narrative that loosening financial conditions might be fueling an asset bubble in tech. Instead, Powell suggested that the AI build-out is more structural: a bet on the long-term transformation of work. From Nvidia on track to see half a trillion dollars in revenue to Microsoft’s and Alphabet’s multi-hundred-billion-dollar capital expenditure plans, the scale is unprecedented. But, in Powell’s telling, it’s also grounded.&lt;/p&gt;
    &lt;p&gt;Goldman Sachs agrees. In a research note titled “The AI Spending Boom Is Not Too Big,” chief U.S. economist Joseph Briggs argued that “anticipated investment levels are sustainable, although the ultimate AI winners remain less clear.”&lt;/p&gt;
    &lt;p&gt;Briggs and his team estimated that the productivity unlocked by AI could be worth $8 trillion in present value to the U.S. economy, and potentially as much as $19 trillion in high-end scenarios.&lt;/p&gt;
    &lt;p&gt;“We are not concerned about the total amount of AI investment,” the Goldman team wrote. “AI investment as a share of U.S. GDP is smaller today (&amp;lt;1%) than in prior large technology cycles (2%–5%).” In other words, there’s still plenty of room to run.&lt;/p&gt;
    &lt;p&gt;Powell’s framing echoes that view: The AI race, while frothy at times, is being financed mainly through corporate cash flow rather than speculative debt.&lt;/p&gt;
    &lt;head rend="h3"&gt;A real-economy impact&lt;/head&gt;
    &lt;p&gt;Powell noted that the investment wave is showing up in the real economy. “It’s the investment we’re getting in equipment and all those things that go into creating data centers and feeding the AI,” he said. “It’s clearly one of the big sources of growth in the economy.”&lt;/p&gt;
    &lt;p&gt;Those remarks align with private-sector estimates. JPMorgan economists have projected that AI-related infrastructure spending could add up to 0.2 percentage points to U.S. GDP growth over the next year, roughly the same annual boost that shale drilling delivered at its peak.&lt;lb/&gt;The boom has already pushed industrial power demand to record levels and forced utilities to fast-track grid expansion, confronted with the realities of a too-slim grid. The AI boom isn’t just reflected on paper, in other words: Powell is talking about cranes, concrete, capital goods. &lt;/p&gt;
    &lt;head rend="h3"&gt;Not without caution&lt;/head&gt;
    &lt;p&gt;Still, Powell didn’t give AI a free pass. He stressed that while the current investment surge looks healthy, it’s too early to call it a permanent productivity revolution.&lt;lb/&gt;“I don’t know how those investments will work out,” he said. &lt;/p&gt;
    &lt;p&gt;For all its promise, the AI economy is unevenly distributed: capital-intensive and concentrated among a handful of firms. Economists warn that productivity gains from AI will take years to filter through the broader workforce, and that automation could suppress hiring in sectors now driving demand.&lt;lb/&gt;Powell acknowledged as much when he noted that many recent layoff announcements from major corporations “are talking about AI and what it can do.” There’s an irony, there: The same technology boosting output may also slow job creation—one of the central bank’s two mandates. &lt;/p&gt;
    &lt;p&gt;Powell noted that job growth, adjusted for statistical overcounting, is now “pretty close to zero.”&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45784158</guid><pubDate>Sat, 01 Nov 2025 18:40:33 +0000</pubDate></item><item><title>Czech police forced to turn off facial recognition cameras at the Prague airport</title><link>https://edri.org/our-work/czech-police-forced-to-turn-off-facial-recognition-cameras-at-the-prague-airport-thanks-to-the-ai-act/</link><description>&lt;doc fingerprint="da899912115b0345"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Czech police forced to turn off facial recognition cameras at the Prague airport thanks to the AI Act&lt;/head&gt;
    &lt;p&gt;The shutdown of the facial recognition cameras at the Václav Havel Airport in Prague came after years of criticism from EDRi member IuRe. The legitimacy of the criticism was confirmed by the Czech Office for Personal Data Protection. However, the Czech police continue to systematically violate the law in further processing of biometric data.&lt;/p&gt;
    &lt;head rend="h3"&gt;Airport facial recognition system long criticised&lt;/head&gt;
    &lt;p&gt;The Czech Republic Police used a camera system with facial recognition capabilities at Václav Havel Airport in Prague from 2018, until it was shut down in August 2025. The system enabled real-time recognition of the faces of people passing through the airport. Their so-called bio-indexes, or, simply put, facial contours converted into numbers, were compared with a database of wanted or missing persons.&lt;/p&gt;
    &lt;p&gt;EDRi member IuRe drew attention to the situation back in 2021. At the time, IuRe lawyers argued that the processing of biometric data in Czechia is only possible on the basis of explicit permission granted by a special law. IuRe ultimately filed a complaint with the Czech Data Protection Authority (DPA), requesting an investigation. The result of the inspection, which IuRe requested in the summer of 2025 under the Freedom of Information Act, confirmed the suspicion of a violation of personal data protection legislation.&lt;/p&gt;
    &lt;head rend="h3"&gt;Biometric surveillance ended thanks to the AI Act&lt;/head&gt;
    &lt;p&gt;Criticism of the facial recognition system only increased after the AI Act came into force because the law explicitly requires judicial approval for each use of such a system, which wasn’t provided for the airport.&lt;/p&gt;
    &lt;p&gt;Therefore, since the specific portion of the AI Act related to biometric surveillance came into force in February 2025, till the airport facial recognition systém was shut down in August 2025, the police’s use of this system was illegal. It was in operation despite the fact that the police had been repeatedly warned of its illegality and the media had also taken an interest in the matter.&lt;/p&gt;
    &lt;head rend="h3"&gt;Set clear boundaries for the police&lt;/head&gt;
    &lt;p&gt;The inspection by the Czech DPA took almost four years. During that time, no effective action was taken. However, the results are clear: police need to be given clear guidelines for processing biometric data, which should be enshrined in laws approved by elected representatives of the people and thus subject to public scrutiny. The current situation, apart from violating European legislation, creates a fertile ground for various forms of abuse of these technologies.&lt;/p&gt;
    &lt;head rend="h3"&gt;The police systematically violate laws when processing biometric data&lt;/head&gt;
    &lt;p&gt;The Czech police are also ignoring the law in the case of another biometric tool – Digital Personal Image Information System. This was also pointed out by IuRe and subsequently by the Czech DPA. The system works with a reference database of approximately 20 million photographs of all persons who have been issued identity cards or passports, and compares them with photographs of persons of unknown identity.&lt;/p&gt;
    &lt;p&gt;This makes it possible to trace their probable identity retrospectively. According to the police, the system is used, for example, to identify the deceased. However, the same system can also be concievably used to identify people participating in demonstrations.&lt;/p&gt;
    &lt;p&gt;The obvious systemic problems with the use of facial recognition tools by the police should therefore be a matter of concern for the new Czech Minister of the Interior, who should initiate a review of the legislation. The current national legislation does not comply with the European directive in terms of legal safeguards for the processing of biometric data.&lt;/p&gt;
    &lt;p&gt;IuRe will continue to monitor biometric surveillance in Czechia, thanks in part to financial support from the public received through their informational website about biometric surveillance called Czechia is not China. The website was created with the support of EDRi and was linked to a crowdfunding campaign.&lt;/p&gt;
    &lt;p&gt;Contribution by: EDRi member, Iuridicum Remedium (IuRe)&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Big brother at the Prague airport. The state refuses to explain how the biometric camera system works&lt;/item&gt;
      &lt;item&gt;Czech police use facial recognition system, IuRe finds out details&lt;/item&gt;
      &lt;item&gt;Europol and biometric surveillance “won” the Czech Big Brother Awards&lt;/item&gt;
      &lt;item&gt;Biometric surveillance in the Czech Republic: the Ministry of the Interior is trying to circumvent the Artificial Intelligence Act&lt;/item&gt;
      &lt;item&gt;Avoiding regulation of biometric surveillance and loyalty applications: The 20th Big Brother Awards took place in the Czech Republic&lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45784185</guid><pubDate>Sat, 01 Nov 2025 18:42:39 +0000</pubDate></item><item><title>US will not send officials to COP30 climate talks</title><link>https://www.reuters.com/sustainability/cop/us-will-not-send-officials-cop30-climate-talks-white-house-says-2025-10-31/</link><description>&lt;doc fingerprint="f36391f5a7fd99b6"&gt;
  &lt;main&gt;
    &lt;p&gt;WASHINGTON, Oct 31 (Reuters) - The U.S. will not send any high-level officials to the upcoming COP30 climate summit in Brazil, a White House official told Reuters, alleviating some concern among world leaders that Washington would send a team to scupper the talks.&lt;/p&gt;
    &lt;p&gt;Brazil will host a high-level leaders' summit next week before the two-week UN climate negotiations begin in the Amazonian city of Belem.&lt;/p&gt;
    &lt;p&gt;Sign up here.&lt;/p&gt;
    &lt;p&gt;Earlier this month, the U.S. threatened to use visa restrictions and sanctions to retaliate against nations that would vote in favor of a plan put forward by the United Nations shipping agency, the International Maritime Organization, to reduce planet-warming greenhouse gas emissions from ocean shipping.&lt;/p&gt;
    &lt;p&gt;Those tactics led a majority of countries at the IMO to vote to postpone by a year a decision on a global carbon price on international shipping.&lt;/p&gt;
    &lt;p&gt;The White House official said President Donald Trump has already made his administration's views on multilateral climate action clear in his speech at last month's United Nations General Assembly, where he called climate change the world's "greatest con job" and chided countries for setting climate policies that he said "have cost their countries fortunes."&lt;/p&gt;
    &lt;p&gt;"The President is directly engaging with leaders around the world on energy issues, which you can see from the historic trade deals and peace deals that all have a significant focus on energy partnerships," the White House official told Reuters in an email.&lt;/p&gt;
    &lt;p&gt;The Trump administration has pursued bilateral energy deals in its trade negotiations to boost U.S. liquefied natural gas (LNG) exports with countries like South Korea and the European Union.&lt;/p&gt;
    &lt;p&gt;On Friday, U.S. Energy Secretary Chris Wright said there is "room for great energy trade between China and the United States" given China's need for natural gas as the two economic giants negotiate over tariffs.&lt;/p&gt;
    &lt;p&gt;Trump announced on his first day in office that the U.S. would exit the 10-year old Paris climate agreement, taking effect in January 2026 and the State Department has been reviewing the U.S.' engagement in multilateral environmental agreements.&lt;/p&gt;
    &lt;p&gt;Earlier this year, the U.S. also pressured countries negotiating a global treaty to reduce plastic pollution not to back an agreement that would set plastic production caps.&lt;/p&gt;
    &lt;p&gt;The White House official told Reuters that "the tide is turning" on prioritizing climate change, pointing to a memo circulated this week by billionaire and long-time climate philanthropist and investor Bill Gates, who said it is time to pivot away from focusing on meeting global temperature goals and that climate change will "not lead to humanity’s demise."&lt;/p&gt;
    &lt;p&gt;Reporting by Valerie Volcovici; Editing by David Gregorio&lt;/p&gt;
    &lt;p&gt;Our Standards: The Thomson Reuters Trust Principles.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45784428</guid><pubDate>Sat, 01 Nov 2025 19:11:13 +0000</pubDate></item><item><title>Sanders: Government should break up OpenAI</title><link>https://thehill.com/policy/technology/5571789-ai-threatens-jobs-sanders-warns/</link><description>&lt;doc fingerprint="754b1917216470fb"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Sanders: Government should break up OpenAI&lt;/head&gt;
    &lt;p&gt;Sen. Bernie Sanders (I-Vt.) said he believes the government should break up OpenAI, underscoring his concerns about AI’s potential impact on the job market and interpersonal relationships.&lt;/p&gt;
    &lt;p&gt;When asked by Axios’s Alex Thompson whether the ChatGPT maker should be split up, he said, “I do, but it’s a deeper issue than that. We need to take a deep breath and understand it’s like a meteor coming. We’ve got to be prepared to deal with all of its complexity.”&lt;/p&gt;
    &lt;p&gt;In the interview released Friday, Sanders voiced concerns about the “enormous transformational impact” of AI on the economy and the potential for “massive” job loss.&lt;/p&gt;
    &lt;p&gt;“I want to see us rebuilding manufacturing in America, but it ain’t going to do any worker any good if that manufacturing work is done by robots,” he said. “I want to see small businesses develop. I want to see creativity out there in the economy. Ain’t going to do any good for the younger people if the entry level jobs are taken over by AI.”&lt;/p&gt;
    &lt;p&gt;“I’ll tell you Mr. Musk and Mr. Bezos and Mr. Ellison, the richest guys in this world, are investing huge amounts of money in AI and robotics,” he continued. “And if you think they give a damn about the needs of working class people, you would be mistaken.”&lt;/p&gt;
    &lt;p&gt;Predictions about the impacts of AI on the labor market have varied widely, with some, like Anthropic CEO Dario Amodei, suggesting it could wipe out a large portion of entry-level white-collar jobs in the next few years. However, experts have underscored that jobs data has yet to show the effects of AI.&lt;/p&gt;
    &lt;p&gt;“In terms of what it does to us as human beings, there are products now being sold as ‘You don’t need to relate to a human being anymore. You will have somebody hanging around your neck as your AI buddy,’” Sanders added. “In a country where there’s a lot of emotional distress, I really worry about that … how we relate to each other as human beings.”&lt;/p&gt;
    &lt;p&gt;The Vermont senator’s comments about an “AI buddy” appear to allude to products like Friend, a wearable AI companion whose advertising campaign in the New York subway has drawn scrutiny and sparked conversations about the future of AI.&lt;/p&gt;
    &lt;p&gt;Sanders separately voiced concerns about superintelligent AI, technology that surpasses human intelligence.&lt;/p&gt;
    &lt;p&gt;Several prominent figures, including AI pioneers Yoshua Bengio and Geoffrey Hinton and Apple co-founder Steve Wozniak, recently signed onto a statement calling for a ban on the development of superintelligence until there is “broad scientific consensus that it will be done safely and controllably.”&lt;/p&gt;
    &lt;p&gt;The Hill has reached out to OpenAI for comment.&lt;/p&gt;
    &lt;p&gt;Copyright 2025 Nexstar Media Inc. All rights reserved. This material may not be published, broadcast, rewritten, or redistributed.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45784644</guid><pubDate>Sat, 01 Nov 2025 19:40:04 +0000</pubDate></item></channel></rss>