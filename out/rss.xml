<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Hacker News: Front Page</title><link>https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml</link><description>Hacker News RSS</description><atom:link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Mon, 27 Oct 2025 20:09:48 +0000</lastBuildDate><item><title>Tags to make HTML work like you expect</title><link>https://blog.jim-nielsen.com/2025/dont-forget-these-html-tags/</link><description>&lt;doc fingerprint="d752f0500ce6aa0d"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Don‚Äôt Forget These Tags to Make HTML Work Like You Expect&lt;/head&gt;
    &lt;p&gt;I was watching Alex Petros‚Äô talk and he has a slide in there titled ‚ÄúIncantations that make HTML work correctly‚Äù.&lt;/p&gt;
    &lt;p&gt;This got me thinking about the basic snippets of HTML I‚Äôve learned to always include in order for my website to work as I expect in the browser ‚Äî like ‚ÄúHey I just made a &lt;code&gt;.html&lt;/code&gt; file on disk and am going to open it in the browser. What should be in there?‚Äù&lt;/p&gt;
    &lt;p&gt;This is what comes to mind:&lt;/p&gt;
    &lt;code&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html lang="en"&amp;gt;
&amp;lt;meta charset="utf-8"&amp;gt;
&amp;lt;meta name="viewport" content="width=device-width,initial-scale=1.0"&amp;gt;
&lt;/code&gt;
    &lt;p&gt;Why each?&lt;/p&gt;
    &lt;head rend="h2"&gt;doctype&lt;/head&gt;
    &lt;code&gt;&amp;lt;!doctype html&amp;gt;
&lt;/code&gt;
    &lt;p&gt;Without &lt;code&gt;&amp;lt;!doctype html&amp;gt;&lt;/code&gt;, browsers may switch to quirks mode, emulating legacy, pre-standards behavior. This will change how calculations work around layout, sizing, and alignment.&lt;/p&gt;
    &lt;p&gt;&lt;code&gt;&amp;lt;!doctype html&amp;gt;&lt;/code&gt; is what you want for consistent rendering. Or &lt;code&gt;&amp;lt;!DOCTYPE HTML&amp;gt;&lt;/code&gt; if you prefer writing markup like it‚Äôs 1998. Or even &lt;code&gt;&amp;lt;!doCTypE HTml&amp;gt;&lt;/code&gt; if you eschew all societal norms. It‚Äôs case-insensitive so they‚Äôll all work.&lt;/p&gt;
    &lt;head rend="h2"&gt;html lang&lt;/head&gt;
    &lt;code&gt;&amp;lt;html lang="en"&amp;gt;
&lt;/code&gt;
    &lt;p&gt;Declare the document‚Äôs language. Browsers, search engines, assistive technologies, etc. can leverage it to:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Get pronunciation and voice right for screen readers&lt;/item&gt;
      &lt;item&gt;Improve indexing and translation accuracy&lt;/item&gt;
      &lt;item&gt;Apply locale-specific tools (e.g. spell-checking)&lt;/item&gt;
      &lt;item&gt;And more‚Ä¶&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Omit it and things will look ok, but lots of basic web-adjacent tools might get things wrong. Specifying it makes everything around the HTML work better and more accurately, so I always try to remember to include it.&lt;/p&gt;
    &lt;head rend="h2"&gt;meta utf-8&lt;/head&gt;
    &lt;p&gt;This piece of info can come back from the server as a header, e.g.&lt;/p&gt;
    &lt;code&gt;return new Response(
    "&amp;lt;!doctype html&amp;gt;&amp;lt;h1&amp;gt;Hello world&amp;lt;/h1&amp;gt;",
    {
        status: 200,
        headers: { "Content-Type": "text/html; charset=utf-8" },
    }
);
&lt;/code&gt;
    &lt;p&gt;But I like to set it in my HTML, especially when I‚Äôm making files on disk I open manually in the browser.&lt;/p&gt;
    &lt;code&gt;&amp;lt;meta charset="utf-8"&amp;gt;
&lt;/code&gt;
    &lt;p&gt;This tells the browser how to interpret text, ensuring characters like √©, √º, and others display correctly.&lt;/p&gt;
    &lt;p&gt;So many times I‚Äôve opened a document without this tag and things just don‚Äôt look right ‚Äî like my smart quotes.&lt;/p&gt;
    &lt;p&gt;For example: copy this snippet, stick it in an HTML file, and open it on your computer:&lt;/p&gt;
    &lt;code&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;h1&amp;gt;Without meta utf-8&amp;lt;/h1&amp;gt;
&amp;lt;dl&amp;gt;
  &amp;lt;dt&amp;gt;Smart quotes&amp;lt;/dt&amp;gt;
  &amp;lt;dd&amp;gt;‚Äú‚Äù and ‚Äò‚Äô&amp;lt;/dd&amp;gt;
  &amp;lt;dt&amp;gt;Symbols&amp;lt;/dt&amp;gt;
  &amp;lt;dd&amp;gt;¬©, ‚Ñ¢, ¬Æ, etc.&amp;lt;/dd&amp;gt;
  &amp;lt;dt&amp;gt;Ellipsis&amp;lt;/dt&amp;gt;
  &amp;lt;dd&amp;gt;‚Ä¶&amp;lt;/dd&amp;gt;
  &amp;lt;dt&amp;gt;Emojis&amp;lt;/dt&amp;gt;
  &amp;lt;dd&amp;gt;üëç&amp;lt;/dd&amp;gt;
  &amp;lt;dt&amp;gt;Non-latin characters&amp;lt;/dt&amp;gt;
  &amp;lt;dd&amp;gt;√©, √±, etc.&amp;lt;/dd&amp;gt;
&amp;lt;/dl&amp;gt;
&lt;/code&gt;
    &lt;p&gt;Things might look a bit wonky. But stick a &lt;code&gt;&amp;lt;meta charset="utf-8"&amp;gt;&lt;/code&gt; tag in there and you‚Äôll find some relief.&lt;/p&gt;
    &lt;head rend="h2"&gt;Meta viewport&lt;/head&gt;
    &lt;code&gt;&amp;lt;meta name="viewport" content="width=device-width,initial-scale=1.0"&amp;gt;
&lt;/code&gt;
    &lt;p&gt;Sometimes I‚Äôll quickly prototype a little HTML and think, ‚ÄúGreat it‚Äôs working as I expect!‚Äù Then I go open it on mobile and everything looks tiny ‚Äî ‚Äú[Facepalm] you forgot the meta viewport tag!‚Äù&lt;/p&gt;
    &lt;p&gt;Take a look at this screenshot, where I forgot the meta viewport tag on the left but included it on the right:&lt;/p&gt;
    &lt;p&gt;That ever happen to you? No, just me? Well anyway, it‚Äôs a good ‚Äòun to include to make HTML work the way you expect.&lt;/p&gt;
    &lt;head rend="h2"&gt;Last But Not Least‚Ä¶&lt;/head&gt;
    &lt;p&gt;I know what you‚Äôre thinking, I forgot the most important snippet of them all for writing HTML:&lt;/p&gt;
    &lt;code&gt;&amp;lt;div id="root"&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;script src="bundle.js"&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;
    &lt;p&gt;Lol.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45719140</guid><pubDate>Mon, 27 Oct 2025 10:01:12 +0000</pubDate></item><item><title>10M people watched a YouTuber shim a lock; the lock company sued him ‚Äì bad idea</title><link>https://arstechnica.com/tech-policy/2025/10/suing-a-popular-youtuber-who-shimmed-a-130-lock-what-could-possibly-go-wrong/</link><description>&lt;doc fingerprint="8fdd9d18d1b882d5"&gt;
  &lt;main&gt;
    &lt;p&gt;‚ÄúOpening locks‚Äù might not sound like scintillating social media content, but Trevor McNally has turned lock-busting into online gold. A former US Marine Staff Sergeant, McNally today has more than 7 million followers and has amassed more than 2 billion views just by showing how easy it is to open many common locks by slapping, picking, or shimming them.&lt;/p&gt;
    &lt;p&gt;This does not always endear him to the companies that make the locks.&lt;/p&gt;
    &lt;p&gt;On March 3, 2025, a Florida lock company called Proven Industries released a social media promo video just begging for the McNally treatment. The video was called, somewhat improbably, ‚ÄúYOU GUYS KEEP SAYING YOU CAN EASILY BREAK OFF OUR LATCH PIN LOCK.‚Äù In it, an enthusiastic man in a ball cap says he will ‚Äúprove a lot of you haters wrong.‚Äù He then goes hard at Proven‚Äôs $130 model 651 trailer hitch lock with a sledgehammer, bolt cutters, and a crowbar.&lt;/p&gt;
    &lt;p&gt;Naturally, the lock hangs tough.&lt;/p&gt;
    &lt;p&gt;An Instagram user brought the lock to McNally‚Äôs attention by commenting, ‚ÄúLet‚Äôs introduce it to the @mcnallyofficial poke.‚Äù Someone from Proven responded, saying that McNally only likes ‚Äúthe cheap locks lol because they are easy and fast.‚Äù Proven locks were said to be made of sterner stuff.&lt;/p&gt;
    &lt;p&gt;But on April 3, McNally posted a saucy little video to social media platforms. In it, he watches the Proven promo video while swinging his legs and drinking a Juicy Juice. He then hops down from his seat, goes over to a Proven trailer hitch lock, and opens it in a matter of seconds using nothing but a shim cut from a can of Liquid Death. He says nothing during the entire video, which has been viewed nearly 10 million times on YouTube alone.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45720376</guid><pubDate>Mon, 27 Oct 2025 12:42:42 +0000</pubDate></item><item><title>Microsoft in court for allegedly misleading Australians over 365 subscriptions</title><link>https://www.accc.gov.au/media-release/microsoft-in-court-for-allegedly-misleading-millions-of-australians-over-microsoft-365-subscriptions</link><description>&lt;doc fingerprint="ef5109103496c5d3"&gt;
  &lt;main&gt;
    &lt;p&gt;The ACCC has commenced proceedings in the Federal Court against Microsoft Australia and its parent company Microsoft Corporation for allegedly misleading approximately 2.7 million Australian customers when communicating subscription options and price increases, after it integrated its AI assistant, Copilot, into Microsoft 365 plans.&lt;/p&gt;
    &lt;p&gt;The ACCC alleges that since 31 October 2024, Microsoft has told subscribers of Microsoft 365 Personal and Family plans with auto-renewal enabled that to maintain their subscription they must accept the integration of Copilot and pay higher prices for their plan, or, alternatively, cancel their subscription.&lt;/p&gt;
    &lt;p&gt;The ACCC alleges this information provided to subscribers was false or misleading because there was an undisclosed third option, the Microsoft 365 Personal or Family Classic plans, which allowed subscribers to retain the features of their existing plan, without Copilot, at the previous lower price.&lt;/p&gt;
    &lt;p&gt;Microsoft‚Äôs communication with subscribers did not refer to the existence of the ‚ÄúClassic‚Äù plans, and the only way subscribers could access them was to begin the process of cancelling their subscription. This involved navigating to the subscriptions section of their Microsoft account and selecting ‚ÄúCancel subscription‚Äù. It was only on the following page that subscribers were given the option to instead move to the Classic plan. See a screenshot of the cancellation page revealing the Classic plan.&lt;/p&gt;
    &lt;p&gt;‚ÄúFollowing a detailed investigation, we will allege in Court that Microsoft deliberately omitted reference to the Classic plans in its communications and concealed their existence until after subscribers initiated the cancellation process to increase the number of consumers on more expensive Copilot-integrated plans,‚Äù ACCC Chair Gina Cass-Gottlieb said.&lt;/p&gt;
    &lt;p&gt;‚ÄúThe Microsoft Office apps included in 365 subscriptions are essential in many people‚Äôs lives and given there are limited substitutes to the bundled package, cancelling the subscription is a decision many would not make lightly.‚Äù&lt;/p&gt;
    &lt;p&gt;‚ÄúWe‚Äôre concerned that Microsoft‚Äôs communications denied its customers the opportunity to make informed decisions about their subscription options, which included the possibility of retaining all the features of their existing plan without Copilot and at the lower price,‚Äù Ms Cass-Gottlieb said.&lt;/p&gt;
    &lt;p&gt;‚ÄúWe believe many Microsoft 365 customers would have opted for the Classic plan had they been aware of all the available options.‚Äù&lt;/p&gt;
    &lt;p&gt;Following the integration of Copilot, the annual subscription price of the Microsoft 365 Personal plan increased by 45 per cent from $109 to $159. The annual subscription price for the Microsoft 365 Family plan increased by 29 per cent from $139 to $179.&lt;/p&gt;
    &lt;p&gt;Microsoft sent two emails and published a blog post to inform auto-renewing subscribers (as of 31 October 2024) about the Copilot integration and the impending price increase that would apply at their next renewal. These three pieces of communication are central to the ACCC‚Äôs case.&lt;/p&gt;
    &lt;p&gt;‚ÄúWe allege that Microsoft‚Äôs two emails to existing subscribers and the blog post were false or misleading as they conveyed that consumers had to accept the more expensive Copilot-integrated plans, and that the only other option was to cancel,‚Äù Ms Cass-Gottlieb said.&lt;/p&gt;
    &lt;p&gt;‚ÄúAll businesses need to provide accurate information about their services and prices. Failure to do so risks breaching the Australian Consumer Law,‚Äù Ms Cass-Gottlieb said.&lt;/p&gt;
    &lt;p&gt;In establishing its investigation into this matter, the ACCC drew on a significant number of consumer reports, as well as commentary in online forums such as Reddit. Information provided by consumers to the ACCC‚Äôs Infocentre was critical to alerting the ACCC to the alleged conduct, particularly in identifying the availability of the Classic plan through subscribers‚Äô cancellation flows.&lt;/p&gt;
    &lt;p&gt;The ACCC is seeking orders including penalties, injunctions, declarations, consumer redress, and costs.&lt;/p&gt;
    &lt;head rend="h2"&gt;Consumer response&lt;/head&gt;
    &lt;p&gt;The ACCC believes the millions of Australian consumers who were allegedly misled by Microsoft about the availability of the Classic plan may have suffered economic harm through the automatic renewal of their subscription with Copilot integration at a higher price.&lt;/p&gt;
    &lt;p&gt;The ACCC is seeking consumer redress in this case for Microsoft 365 Personal and Family subscribers affected by the alleged conduct.&lt;/p&gt;
    &lt;p&gt;Existing Microsoft 365 Personal and Family subscribers who have not had their subscription renewed since 8 July 2025 and would like to revert to their previous plan may be able to select the cancel option and follow the steps in the cancellation process until the Classic plan is offered. However, the ACCC notes that the subscription options and prices offered are entirely in Microsoft‚Äôs control and could be subject to change at any time.&lt;/p&gt;
    &lt;head rend="h2"&gt;Example timeline for a subscriber on a Microsoft 365 Personal plan&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;On 19 April 2024, a consumer purchased an annual Microsoft 365 Personal subscription for $109 and enabled auto-renewal for one year‚Äôs time.&lt;/item&gt;
      &lt;item&gt;On 31 October 2024, Microsoft published a blog post in which it stated: &lt;list rend="ul"&gt;&lt;item&gt;‚ÄúTo reflect the value we‚Äôve added over the past decade and enable us to deliver new innovations for years to come, we‚Äôre increasing the prices of Microsoft 365 Personal and Family. The price increase will apply to existing subscribers upon their next renewal.‚Äù&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;On 9 January 2025, the consumer received an email informing them that AI features were being added to their plan and the price of the annual subscription would increase from $109 to $159 starting on 19 April 2025. See a screenshot of the first email sent to the consumers about the price increase.&lt;/item&gt;
      &lt;item&gt;On 13 April 2025, 7 days before their renewal date, the consumer received a second email in which Microsoft stated: &lt;list rend="ul"&gt;&lt;item&gt;‚ÄúWe want to let you know about a change to the amount of your next payment. Unless you cancel two days before Saturday, April 19 2025, we‚Äôll charge AUD 159.00 including taxes every year‚Ä¶ We‚Äôll tell you if this price ever changes. Cancel any time to stop future charges or change how you pay by managing your subscription in your Microsoft account.‚Äù&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;On 19 April 2025, the consumer's subscription was automatically renewed at the increased price of $159. The consumer was not aware that switching to the Classic plan at the existing subscription price of $109 was possible.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Screenshots showing the communications with subscribers&lt;/head&gt;
    &lt;head rend="h3"&gt;Email sent to subscribers informing them of the Copilot integration and price increase&lt;/head&gt;
    &lt;head rend="h3"&gt;The page late in the cancellation process revealing the Classic plan&lt;/head&gt;
    &lt;p&gt;A subscriber only saw this screen once they had navigated to the subscriptions section of their Microsoft account, selected ‚ÄúCancel subscription‚Äù, and continued with the cancellation process.&lt;/p&gt;
    &lt;head rend="h2"&gt;Background&lt;/head&gt;
    &lt;p&gt;Microsoft Pty Ltd (Microsoft AU) is an Australian proprietary company, and a wholly owned subsidiary of the Microsoft Corporation (Microsoft US), a US-based technology conglomerate. Microsoft AU is the supplier of Microsoft‚Äôs proprietary software in Australia, including Microsoft 365 plans.&lt;/p&gt;
    &lt;p&gt;The ACCC alleges Microsoft US was responsible for preparing and publishing the communications to Australian Microsoft 365 subscribers containing the misrepresentations alleged by the ACCC. The ACCC alleges that Microsoft AU adopted the communications as the seller of Microsoft 365 subscriptions to Australian consumers.&lt;/p&gt;
    &lt;p&gt;The ACCC‚Äôs case only relates to Microsoft 365 Personal and Family plans, which are designed for home use. The case does not involve Microsoft 365 subscriptions for business or enterprise.&lt;/p&gt;
    &lt;p&gt;Microsoft 365 Personal and Family offerings are supplied on a monthly or annual subscription basis, and are comprised of:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;software products, such as Word, Excel, PowerPoint and OneNote&lt;/item&gt;
      &lt;item&gt;collaboration and communication applications like Outlook, Teams and SharePoint&lt;/item&gt;
      &lt;item&gt;cloud-based services through OneDrive.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Microsoft launched Copilot as its consumer-facing generative AI product in 2023. Copilot was integrated into Microsoft 365 Personal and Family subscriptions in Australia on 31 October 2024.&lt;/p&gt;
    &lt;p&gt;In January 2025, the Copilot integration was rolled out across Microsoft 365 worldwide, with varying subscription price increases applying to each jurisdiction.&lt;/p&gt;
    &lt;p&gt;Competition, product safety, consumer and fair trading issues in the digital economy is a current ACCC compliance and enforcement priority.&lt;/p&gt;
    &lt;head rend="h3"&gt;Maximum penalties&lt;/head&gt;
    &lt;p&gt;For corporations, the maximum penalty for each breach of the Australian Consumer Law is the greater of:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;$50 million&lt;/item&gt;
      &lt;item&gt;three times the total benefits that have been obtained and are reasonably attributable, or&lt;/item&gt;
      &lt;item&gt;if the total value of the benefits cannot be determined, 30 per cent of the corporation‚Äôs adjusted turnover during the breach turnover period.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Any penalty that might apply to this conduct is a matter for the Court to determine and would depend on the Court‚Äôs findings. The ACCC will not comment on what penalties the Court may impose.&lt;/p&gt;
    &lt;head rend="h3"&gt;Concise statement&lt;/head&gt;
    &lt;p&gt;ACCC v Microsoft Concise Statement 27 October 2025 ( PDF 1.6 MB )&lt;/p&gt;
    &lt;p&gt;This document contains the ACCC‚Äôs initiating court documents in relation to this matter. We will not be uploading further documents in the event these initial documents are subsequently amended.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45721682</guid><pubDate>Mon, 27 Oct 2025 14:54:14 +0000</pubDate></item><item><title>Pyrex catalog from from 1938 with hand-drawn lab glassware [pdf]</title><link>https://exhibitdb.cmog.org/opacimages/Images/Pyrex/Rakow_1000132877.pdf</link><description></description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45721801</guid><pubDate>Mon, 27 Oct 2025 15:04:05 +0000</pubDate></item><item><title>It's insulting to read AI-generated blog posts</title><link>https://blog.pabloecortez.com/its-insulting-to-read-your-ai-generated-blog-post/</link><description>&lt;doc fingerprint="66c9d31b26b7b3bd"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;It's insulting to read your AI-generated blog post&lt;/head&gt;
    &lt;p&gt;It seems so rude and careless to make me, a person with thoughts, ideas, humor, contradictions and life experience to read something spit out by the equivalent of a lexical bingo machine because you were too lazy to write it yourself.&lt;/p&gt;
    &lt;p&gt;Do you not enjoy the pride that comes with attaching your name to something you made on your own? It's great!&lt;/p&gt;
    &lt;p&gt;No, don't use it to fix your grammar, or for translations, or for whatever else you think you are incapable of doing. Make the mistake. Feel embarrassed. Learn from it. Why? Because that's what makes us human!&lt;/p&gt;
    &lt;p&gt;Everyone wants to help each other. And people are far kinder than you may think. By adding a sterile robo-liaison between yourself and your readers, you don't give us a chance to engage with you.&lt;/p&gt;
    &lt;p&gt;Here is a secret: most people want to help you succeed. The problem is that you, yes, you are too afraid to ask for help. You think smart, capable people don't ask for help because they should know it all. Wrooooooooong. On the contrary, smart people know when to ask for help and when to give it too. They create mutually beneficial relationships with the people surrounding them.&lt;/p&gt;
    &lt;p&gt;I ask you, human to human, both as beings capable of love and fear and humor and all the other great feelings we have cultivated for thousands of years: leave the AI to your quantitative tasks if you have to use it at all. Face the world with your thoughts and enrich them through real-world experience. The best thoughts are the ones that have been felt, anyway.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45722069</guid><pubDate>Mon, 27 Oct 2025 15:27:38 +0000</pubDate></item><item><title>Show HN: Erdos ‚Äì open-source, AI data science IDE</title><link>https://www.lotas.ai/erdos</link><description>&lt;doc fingerprint="fe09e69eaaad09cb"&gt;
  &lt;main&gt;
    &lt;p&gt;0.2.0&lt;/p&gt;
    &lt;p&gt;10-27-2025&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Enable remote development (SSH and container)&lt;/item&gt;
      &lt;item&gt;Enable local model usage&lt;/item&gt;
      &lt;item&gt;Available on Windows ARM64&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Erdos ‚Äî a next-generation data science IDE.&lt;/p&gt;
    &lt;p&gt;Fast, accurate Jupyter notebook edits&lt;/p&gt;
    &lt;p&gt;Erdos lets data scientists create, edit, and iterate on Jupyter notebooks faster and more accurately than ever before.&lt;/p&gt;
    &lt;p&gt;Plots pane&lt;/p&gt;
    &lt;p&gt;With the help of Erdos‚Äôs AI assistant, data scientists can use the plots pane to view, compare, and iterate on plots as their analyses evolve.&lt;/p&gt;
    &lt;p&gt;Integrated Docs Intelligence&lt;/p&gt;
    &lt;p&gt;Erdos‚Äôs AI assistant reads and interprets documentation from the help pane to deliver contextually accurate help, examples, and explanations.&lt;/p&gt;
    &lt;p&gt;You can use the Erdos IDE for free. We only charge for usage of the Erdos AI assistant. Light usage of the Erdos AI assistant is free, but higher limits require a subscription. Please visit our Pricing page to learn more.&lt;/p&gt;
    &lt;p&gt;0.2.0&lt;/p&gt;
    &lt;p&gt;10-27-2025&lt;/p&gt;
    &lt;p&gt;0.1.5&lt;/p&gt;
    &lt;p&gt;10-24-2025&lt;/p&gt;
    &lt;p&gt;0.1.4&lt;/p&gt;
    &lt;p&gt;10-22-2025&lt;/p&gt;
    &lt;p&gt;0.1.3&lt;/p&gt;
    &lt;p&gt;10-21-2025&lt;/p&gt;
    &lt;p&gt;0.1.2&lt;/p&gt;
    &lt;p&gt;10-20-2025&lt;/p&gt;
    &lt;p&gt;0.1.1&lt;/p&gt;
    &lt;p&gt;10-15-2025&lt;/p&gt;
    &lt;p&gt;0.1.0&lt;/p&gt;
    &lt;p&gt;10-13-2025&lt;/p&gt;
    &lt;p&gt;Try Erdos now.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45722635</guid><pubDate>Mon, 27 Oct 2025 16:08:58 +0000</pubDate></item><item><title>Claude for Excel</title><link>https://www.claude.com/claude-for-excel</link><description>&lt;doc fingerprint="3d3f8e961dffc20a"&gt;
  &lt;main&gt;
    &lt;p&gt;Piloting Claude for Excel&lt;/p&gt;
    &lt;p&gt;Claude understands your entire workbook√¢from nested formulas to multiple tab dependencies. Get explanations with cell-level citations, and update assumptions while preserving formulas. Now in beta as a research preview.&lt;/p&gt;
    &lt;head rend="h2"&gt;How teams use Claude for Excel&lt;/head&gt;
    &lt;p&gt;Claude listens carefully, follows instructions precisely, √¢¬®and thinks through complex problems.&lt;/p&gt;
    &lt;head rend="h3"&gt;Get answers about any cell in seconds&lt;/head&gt;
    &lt;p&gt;Navigate complex models instantly. Ask Claude about specific formulas, entire worksheets, or calculation flows across tabs. Every explanation includes cell-level citations so you can verify the logic.&lt;/p&gt;
    &lt;head rend="h3"&gt;Test scenarios without breaking formulas&lt;/head&gt;
    &lt;p&gt;Update assumptions across your entire model while preserving all dependencies. Test different scenarios quickly√¢Claude highlights every change with explanations for full transparency.&lt;/p&gt;
    &lt;head rend="h3"&gt;Debug and fix errors&lt;/head&gt;
    &lt;p&gt;Trace #REF!, #VALUE!, and circular reference errors to their source in seconds. Claude explains what went wrong and how to fix it without disrupting the rest of your model.&lt;/p&gt;
    &lt;head rend="h3"&gt;Build models or fill existing templates&lt;/head&gt;
    &lt;p&gt;Create draft financial models from scratch based on your requirements. Or populate existing templates with fresh data while maintaining all formulas and structure.&lt;/p&gt;
    &lt;p&gt;The Claude you trust, right in Excel&lt;/p&gt;
    &lt;head rend="h3"&gt;Transparency and visibility&lt;/head&gt;
    &lt;p&gt;See Claude√¢s changes in real time with explanations&lt;/p&gt;
    &lt;head rend="h3"&gt;Formula integrity&lt;/head&gt;
    &lt;p&gt;Maintain Excel model structure and formatting&lt;/p&gt;
    &lt;head rend="h3"&gt;Enterprise security&lt;/head&gt;
    &lt;p&gt;Works within your existing compliance framework&lt;/p&gt;
    &lt;p&gt;FAQ&lt;/p&gt;
    &lt;p&gt;Claude for Excel is available in beta as a research preview through a waitlist for 1,000 Max, Team and Enterprise plan customers. We√¢ll gradually expand access as we build confidence through this limited preview.&lt;/p&gt;
    &lt;p&gt;Claude for Excel works within your existing security framework. Claude can make mistakes, so you should always review changes before finalizing, especially for client-facing deliverables.&lt;/p&gt;
    &lt;p&gt;Claude for Excel is currently in beta as a research preview, so it√¢s best for model analysis, assumption updates, error debugging, template population, formula explanations, multi-tab navigation. Claude doesn√¢t have advanced Excel capabilities including pivot tables, conditional formatting, data validation, data tables, macros, and VBA. We√¢re actively working on these features.&lt;/p&gt;
    &lt;p&gt;Yes, Claude is trained to recognize common financial modeling patterns, formula structures, and industry-standard calculations. However, always verify outputs match your specific methodologies.&lt;/p&gt;
    &lt;p&gt;Currently .xlsx and .xlsm files are supported. File size limits apply based on your Claude plan.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45722639</guid><pubDate>Mon, 27 Oct 2025 16:09:22 +0000</pubDate></item><item><title>JSON Query</title><link>https://jsonquerylang.org/</link><description>&lt;doc fingerprint="481baa954fb0882b"&gt;
  &lt;main&gt;
    &lt;code&gt;name(argument1, argument2, ...)&lt;/code&gt;
    &lt;p&gt;A function is defined as a function name followed by comma separated arguments wrapped in round brackets. it is important to understand functions like &lt;code&gt;filter&lt;/code&gt;, &lt;code&gt;sort&lt;/code&gt;, and &lt;code&gt;max&lt;/code&gt; are executed as a method in a chain: the operation is applied to the data input, and forwarded to the next method in the chain (if any).&lt;/p&gt;
    &lt;p&gt;Examples:&lt;/p&gt;
    &lt;code&gt;sort(.address.city, "asc")&lt;/code&gt;
    &lt;code&gt;filter(.age &amp;gt;= 21) | sort(.age, "asc")&lt;/code&gt;
    &lt;p&gt;Documentation:&lt;/p&gt;
    &lt;p&gt;Function reference:&lt;/p&gt;
    &lt;code&gt;left operator right&lt;/code&gt;
    &lt;p&gt;JSON Query supports all basic operators. Operators must have both a left and right hand side. To override the default precedence, an operator can be wrapped in parentheses &lt;code&gt;(...)&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;Examples:&lt;/p&gt;
    &lt;code&gt;.age &amp;gt;= 18&lt;/code&gt;
    &lt;code&gt;filter(.age &amp;gt;= 18 and .age &amp;lt;= 65)&lt;/code&gt;
    &lt;p&gt;Documentation:&lt;/p&gt;
    &lt;p&gt;Operator reference:&lt;/p&gt;
    &lt;code&gt;query2 | query2 | ...&lt;/code&gt;
    &lt;p&gt;A pipe is an array containing a series of queries. The queries in the pipeline are executed one by one, and the output of the first is the input for the next.&lt;/p&gt;
    &lt;p&gt;Example:&lt;/p&gt;
    &lt;code&gt;filter(.age &amp;gt;= 18) | sort(.name)&lt;/code&gt;
    &lt;p&gt;Documentation:&lt;/p&gt;
    &lt;code&gt;{prop1: query1, prop2: query2, ...}&lt;/code&gt;
    &lt;p&gt;An object is defined as a regular JSON object with a property name as key, and a query as value. Objects can be used to transform data or to execute multiple query pipelines in parallel.&lt;/p&gt;
    &lt;p&gt;Example:&lt;/p&gt;
    &lt;code&gt;{
  names: map(.name),
  numberOfNames: size()
}&lt;/code&gt;
    &lt;p&gt;Documentation:&lt;/p&gt;
    &lt;code&gt;[query1, query2, ...]&lt;/code&gt;
    &lt;p&gt;An array is defined as a regular JSON array: enclosed in square brackets, with items separated by a comma.&lt;/p&gt;
    &lt;p&gt;Example:&lt;/p&gt;
    &lt;code&gt;filter(.city in ["New York", "Atlanta"])&lt;/code&gt;
    &lt;p&gt;Documentation:&lt;/p&gt;
    &lt;code&gt;.prop1.prop2&lt;/code&gt;
    &lt;p&gt;A property retrieves a property from an object. Multiple consecutive properties will retrieve a nested property.&lt;/p&gt;
    &lt;p&gt;Examples:&lt;/p&gt;
    &lt;code&gt;.age&lt;/code&gt;
    &lt;code&gt;.address.city&lt;/code&gt;
    &lt;code&gt;"first name"&lt;/code&gt;
    &lt;code&gt;get()&lt;/code&gt;
    &lt;code&gt;get("address", "city")&lt;/code&gt;
    &lt;p&gt;Documentation:&lt;/p&gt;
    &lt;code&gt;"string", number, boolean, null&lt;/code&gt;
    &lt;p&gt;JSON Query supports the following primitive values, the same as in JSON: &lt;code&gt;"string"&lt;/code&gt;, &lt;code&gt;number&lt;/code&gt;, &lt;code&gt;boolean&lt;/code&gt;, &lt;code&gt;null&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;Examples:&lt;/p&gt;
    &lt;code&gt;"Hello world"&lt;/code&gt;
    &lt;code&gt;"Multi line text\nwith \"quoted\" contents"&lt;/code&gt;
    &lt;code&gt;42&lt;/code&gt;
    &lt;code&gt;2.74&lt;/code&gt;
    &lt;code&gt;-1.2e3&lt;/code&gt;
    &lt;code&gt;true&lt;/code&gt;
    &lt;code&gt;false&lt;/code&gt;
    &lt;code&gt;null&lt;/code&gt;
    &lt;p&gt;Documentation:&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45722826</guid><pubDate>Mon, 27 Oct 2025 16:22:52 +0000</pubDate></item><item><title>fnox, a secret manager that pairs well with mise</title><link>https://github.com/jdx/mise/discussions/6779</link><description>&lt;doc fingerprint="fb7f07fe0b59b4a"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Introducing fnox: A secret manager that pairs well with mise #6779&lt;/head&gt;
    &lt;p&gt;-&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;p&gt;I'm excited to announce fnox ‚Äì a new secret management tool designed to work seamlessly alongside mise in your development workflow.&lt;/p&gt;
          &lt;p&gt;While it's brand new, I have labeled it 1.0 since it seems pretty feature complete and given my experience with several experiments with secrets over the years with mise, I think will be a lot more stable than its young age would indicate.&lt;/p&gt;
          &lt;head&gt;What is fnox?&lt;/head&gt;
          &lt;p&gt;fnox (think "Fort Knox") is a command-line secret manager that handles encrypted and remote secrets for development, CI/CD, and production environments. It provides a unified interface for managing sensitive data through either local encryption or remote storage backends.&lt;/p&gt;
          &lt;head&gt;Why fnox?&lt;/head&gt;
          &lt;p&gt;While mise has built-in secret support (age encryption and sops), these work best for simple, file-based scenarios. For more complex production needs, fnox provides:&lt;/p&gt;
          &lt;head&gt;üöÄ Developer-Friendly&lt;/head&gt;
          &lt;head&gt;üë• Team-Ready&lt;/head&gt;
          &lt;head&gt;Getting Started&lt;/head&gt;
          &lt;p&gt;Install fnox with mise:&lt;/p&gt;
          &lt;code&gt;$ mise use -g fnox
$ fnox --version&lt;/code&gt;
          &lt;p&gt;Create your first secret:&lt;/p&gt;
          &lt;code&gt;$ fnox init
$ fnox provider add age --id main --recipients ~/.ssh/id_ed25519.pub
$ fnox secret set API_KEY --value "your-secret-value" --provider main&lt;/code&gt;
          &lt;p&gt;Use secrets in your workflow:&lt;/p&gt;
          &lt;code&gt;# Export secrets as environment variables
$ fnox exec -- your-command

# Get a single secret
$ fnox get API_KEY

# Shell integration (auto-load secrets on cd)
$ fnox shell hook&lt;/code&gt;
          &lt;head&gt;How It Works with mise&lt;/head&gt;
          &lt;p&gt;fnox and mise work independently but complement each other:&lt;/p&gt;
          &lt;p&gt;A typical setup:&lt;/p&gt;
          &lt;code&gt;[env]
NODE_ENV = "development"
DATABASE_HOST = "localhost"

[tools]
node = "20"
fnox = "latest"&lt;/code&gt;
          &lt;code&gt;[providers.age]
type = "age"
recipients = ["age1ql3z7..."]

[secrets]
DATABASE_PASSWORD = { provider = "age", value = "AGE-SECRET-KEY..." }
API_KEY = { provider = "1password", ref = "op://dev/api/credential" }&lt;/code&gt;
          &lt;p&gt;Then use both together:&lt;/p&gt;
          &lt;code&gt;$ mise x -- fnox x -- npm start&lt;/code&gt;
          &lt;p&gt;Or you can activate one or the other in your shell to avoid that.&lt;/p&gt;
          &lt;head&gt;Why Separate Tools?&lt;/head&gt;
          &lt;p&gt;You might wonder why fnox isn't built into mise. The answer comes down to fundamental architectural constraints:&lt;/p&gt;
          &lt;p&gt;The Performance Problem: mise reloads its environment frequently (on directory changes, after commands, etc.). If secrets relied on remote calls to services like KMS or 1Password, each reload would require network requests, making mise unacceptably slow.&lt;/p&gt;
          &lt;p&gt;The Security Tradeoff: Caching could solve the performance issue, but introduces security risks:&lt;/p&gt;
          &lt;p&gt;The Architecture Challenge: Making mise skip reloading certain env vars would require a major architectural overhaul‚Äîa change that would complicate the codebase significantly.&lt;/p&gt;
          &lt;p&gt;By creating fnox as a separate tool with its own shell integration, we avoid these problems entirely. Each tool can focus on what it does best:&lt;/p&gt;
          &lt;head&gt;What's going to happen to mise secrets?&lt;/head&gt;
          &lt;p&gt;They're still marked as experimental so the future is technically up in the air. That said, mise does work well for age/sops encryption so I think it could probably come out of experimental. For now, I don't have plans to introduce remote secret backends like fnox provides.&lt;/p&gt;
          &lt;head&gt;Learn More&lt;/head&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Beta Was this translation helpful? Give feedback.&lt;/p&gt;
    &lt;head rend="h2"&gt;Replies: 1 comment&lt;/head&gt;
    &lt;p&gt;-&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;p&gt;Since it's a verbatim copy of https://secretspec.dev, any chance of giving attribution?&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Beta Was this translation helpful? Give feedback.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45722931</guid><pubDate>Mon, 27 Oct 2025 16:29:38 +0000</pubDate></item><item><title>JetKVM ‚Äì Control any computer remotely</title><link>https://jetkvm.com/</link><description>&lt;doc fingerprint="af5976106919f929"&gt;
  &lt;main&gt;
    &lt;head rend="h2"&gt;Ultra-Low Latency&lt;/head&gt;
    &lt;p&gt;High-definition 1080p video at 60 FPS with 30-60 millisecond latency, using efficient H.264 encoding. Smooth mouse and keyboard action transfer for responsive remote interaction.&lt;/p&gt;
    &lt;head rend="h2"&gt;Free &amp;amp; Optional Cloud Access&lt;/head&gt;
    &lt;p&gt;Optional remote management via our open-source JetKVM Cloud using WebRTC. Privacy-first design with opt-in cloud access that provides secure and fast direct connections, even behind the most restrictive NAT environments, with our STUN and TURN servers.&lt;/p&gt;
    &lt;head rend="h2"&gt;Open Source: Built for Collaboration&lt;/head&gt;
    &lt;p&gt;JetKVM is built on a robust Golang foundation and powered by Linux for adaptability and transparency. Whether you're a seasoned developer or an enthusiastic tinkerer, you can easily modify or fine-tune the software using familiar tooling and straightforward SSH uploads.&lt;/p&gt;
    &lt;head rend="h4"&gt;Available Source Code&lt;/head&gt;
    &lt;head rend="h5"&gt;KVM Runtime&lt;/head&gt;
    &lt;p&gt;Combining a Go-based backend with a React-powered WebRTC dashboard. Perfect for forking, submitting new features, fixing bugs, or customizing local streaming and control.&lt;/p&gt;
    &lt;head rend="h5"&gt;Cloud API &amp;amp; Dashboard&lt;/head&gt;
    &lt;p&gt;Our cloud-hosted management interface is fully open source. Delve into our secure remote connection orchestration or fork it to build specialized workflows and unique integrations.&lt;/p&gt;
    &lt;head rend="h5"&gt;Core System&lt;/head&gt;
    &lt;p&gt;Minimal Linux system built with BusyBox for core utilities. No bloat or unnecessary services - just the essential components needed for stable remote access.&lt;/p&gt;
    &lt;head rend="h2"&gt;Universally loved&lt;/head&gt;
    &lt;p&gt;Every single tech reviewer who's tested JetKVM has given it a glowing review. No exceptions. From professional data centers to home labs, the verdict is unanimous: this is the remote access solution the tech world has been waiting for.&lt;/p&gt;
    &lt;head rend="h2"&gt;Unlimited Hackability&lt;/head&gt;
    &lt;p&gt;The JetKVM hardware is fully customizable. Through the RJ12 extension port, extra hardware capabilities can easily be added by anyone. The JetKVM extension port is the way to fully customize your device.&lt;/p&gt;
    &lt;head rend="h2"&gt;Seamless Remote Control&lt;/head&gt;
    &lt;p&gt;Experience fluid control and crystal-clear video quality that makes remote access feel local. Perfect for IT professionals, developers, and power users who demand responsive remote management.&lt;/p&gt;
    &lt;head rend="h2"&gt;Stay updated on our latest projects&lt;/head&gt;
    &lt;p&gt;Join our newsletter to receive updates about new features, product launches, and early access opportunities.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45723159</guid><pubDate>Mon, 27 Oct 2025 16:44:17 +0000</pubDate></item><item><title>Life next to 199 data centres</title><link>https://www.bbc.com/news/articles/c93dnnxewdvo</link><description>&lt;doc fingerprint="f7c221812eff25f9"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;A humming annoyance or jobs boom? Life next to 199 data centres&lt;/head&gt;
    &lt;p&gt;When you cross into Loudoun County, Virginia, one of the first things you notice is the hum - that's the sound of 199 data centres whirring in the background.&lt;/p&gt;
    &lt;p&gt;Few people have heard of this inconspicuous part of northern Virginia, which also happens to be the wealthiest county in the US. But Loudoun was on everyone's radar earlier this week, when a massive global Amazon outage downed everything from crucial banking services to fun Snapchat streaks for millions.&lt;/p&gt;
    &lt;p&gt;That's because the county is home to the world's largest swath of data storage and processing facilities - even outpacing China.&lt;/p&gt;
    &lt;p&gt;Data centres - dedicated spaces for computer systems that help power the internet and artificial intelligence - are essential to our global connectivity.&lt;/p&gt;
    &lt;p&gt;But while they have proven to be a lucrative business - contributing billions to the local economy - some residents worry the cost comes at too high a price.&lt;/p&gt;
    &lt;p&gt;There are some 200 facilities taking up about 45 million square metres in Loudoun, giving the county the nickname Data Center Alley.&lt;/p&gt;
    &lt;p&gt;Data centres take up 3% of the total land area of the county and 40% of its budget.&lt;/p&gt;
    &lt;p&gt;And now more facilities are on their way.&lt;/p&gt;
    &lt;p&gt;Emily Kasabian was walking her newborn son along her picturesque neighbourhood road in Virginia earlier this year, when she saw something that stopped her in her tracks.&lt;/p&gt;
    &lt;p&gt;A sign for a proposed data centre moving in across the street.&lt;/p&gt;
    &lt;p&gt;Two years ago, when Ms Kasabian purchased her home she said she was relieved to be away from the data centres that have taken over other parts of the county. The lack of centres nearby was the reason many of her neighbours chose to live there, she said.&lt;/p&gt;
    &lt;p&gt;"I never thought that a data centre would be built across the street from my house," she said. "I would not have bought this house if I had known what was going in across the street."&lt;/p&gt;
    &lt;p&gt;The reason she, and so many others, are opposed to these large facilities is not just because of their overpowering appearance - a typical data centre can be 100,000 square feet, turning whole streets into large industrial blocks - but some of their side effects, too.&lt;/p&gt;
    &lt;p&gt;A massive bright blue concrete and glass data centre sits just steps from Greg Pirio's front door in Loudoun County. Thirteen years ago when he purchased his home that patch of land was filled with green trees and chirping birds.&lt;/p&gt;
    &lt;p&gt;Today, he deals with the centre‚Äôs impacts in real time - the one that bothers him the most is the noise pollution.&lt;/p&gt;
    &lt;p&gt;"There are no birds around here anymore," he said, noting the humming or buzzing noise the centre emits scares away a lot of wildlife from his area.&lt;/p&gt;
    &lt;p&gt;In addition to the noise concerns, people who live in the area expressed frustration with rising electricity bills.&lt;/p&gt;
    &lt;p&gt;In the past five years, wholesale electricity costs have gone up by as much as 267% in areas near data centres, an investigation by Bloomberg News found.&lt;/p&gt;
    &lt;p&gt;But while most locals the BBC spoke to opposed the data centres, the industry has many powerful proponents, including US President Donald Trump.&lt;/p&gt;
    &lt;p&gt;Data centres are essential to help grow the burgeoning industry of AI, a field that Trump has said he wants the United States to lead in.&lt;/p&gt;
    &lt;p&gt;His administration has said it will "accelerate federal permitting of data center infrastructure" to conjure "a golden age for America manufacturing and technology".&lt;/p&gt;
    &lt;p&gt;The centres can have big impacts on local and state economies, too. Annually, the data centre industry creates about 74,000 jobs, totalling $5.5bn (¬£4bn) in labour income to Virginia's economy, according to a state audit.&lt;/p&gt;
    &lt;p&gt;Loudoun County was among the first to see the potential, about a decade ago, and begin growing this new industry.&lt;/p&gt;
    &lt;p&gt;Developers realised the area was the perfect place for data centres - it was filled with flat, cheap land.&lt;/p&gt;
    &lt;p&gt;Local officials soon got on board and began giving corporations like Amazon and Google the green light to start building their facilities.&lt;/p&gt;
    &lt;p&gt;And the area had one more thing going for them in their quest to create a headquarters for a new burgeoning industry: the right talent.&lt;/p&gt;
    &lt;p&gt;"Northern Virginia was really at the centre for the growth of the internet, [it was] where AOL was headquartered, and so naturally they have the talent, they have the people already there, it was just easier to make [the data centres] there," cybersecurity expert Thomas Hyslip said.&lt;/p&gt;
    &lt;p&gt;Since the industry began booming rapidly earlier this century, regulations on the centres have been limited.&lt;/p&gt;
    &lt;p&gt;Virginia's Governor, Glenn Youngkin, vetoed state legislation that would have regulated the centres earlier this year.&lt;/p&gt;
    &lt;p&gt;Dan Diori, vice president of state policy at the Data Center Coalition, an industry group, said the industry needed to do a better job communicating the up-sides of these centres, and listening to people's concerns. But he doesn't think more regulation is necessary.&lt;/p&gt;
    &lt;p&gt;Data centres are not going anywhere, he said. They are and will continue to be the "backbone of the 21st Century economy".&lt;/p&gt;
    &lt;p&gt;But some residents, like Barbara Day, say people shouldn't have to choose between the economy and quality of life.&lt;/p&gt;
    &lt;p&gt;"These data centres are going up faster than we realised the implications of and then we're back-paddling to fix it," she said.&lt;/p&gt;
    &lt;p&gt;Market reports show that in August 2025, there were currently more than 1,100 data centres across the US, with almost 400 new centres being built.&lt;/p&gt;
    &lt;p&gt;Activists like Ms Kasabian hope to chip away at those numbers, by lobbying state and local legislatures to delay or pause projects.&lt;/p&gt;
    &lt;p&gt;"This is a beautiful great place to live, but if this type of development continues to happen and they allow it to encroach they are eroding what makes this a great place to live and we'll start to see the consequences of that soon unless we start to course correct in a very major way," she said.&lt;/p&gt;
    &lt;p&gt;The mother of two knows she may not win this battle and the data centres may soon appear across the street from her idyllic suburban neighbourhood, forcing her family to make the difficult decision to move.&lt;/p&gt;
    &lt;p&gt;"The question is, well, do we want to stay in the county, how do we know where we move next the same thing isn't going to happen?"&lt;/p&gt;
    &lt;p&gt;Video by Meiying Wu&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45723249</guid><pubDate>Mon, 27 Oct 2025 16:49:02 +0000</pubDate></item><item><title>Why Busy Beaver hunters fear the Antihydra</title><link>https://benbrubaker.com/why-busy-beaver-hunters-fear-the-antihydra/</link><description>&lt;doc fingerprint="eeaad01055b00fc9"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Why Busy Beaver Hunters Fear the Antihydra&lt;/head&gt;
    &lt;p&gt;In the summer of 2024, I reported on an online community that nailed down the precise value of a number called BB(5) ‚Äî the first big breakthrough in 50 years on an old problem in theoretical computer science known as the busy beaver game. BB(5), now known to be 47,176,870, is the fifth of the so-called busy beaver numbers, which measure the complexity of the craziest computations that simple computer programs can complete.1The team recently released a paper describing their results in detail.&lt;/p&gt;
    &lt;p&gt;The next step in this idiosyncratic research effort is to identify the sixth busy beaver number BB(6), and there has been some notable progress on that front ‚Äî I wrote a follow-up story about it a few months ago. But busy beaver researchers don‚Äôt expect to nail down the true value of BB(6) any time soon. That‚Äôs because doing so would require them to understand the behavior of a program with the awesome name ‚ÄúAntihydra,‚Äù which resembles a longstanding open problem in mathematics called the Collatz conjecture.2Antihydra should not be confused with the false hydra, a very cool and very terrifying monster conceived by D&amp;amp;D blogger Arnold Kemp. A twitter user sharing my first busy beaver story summed up this state of affairs more succinctly:&lt;/p&gt;
    &lt;p&gt;Both of my stories alluded to the Antihydra barrier only very briefly. In this blog post I will explore it in more detail: What exactly is Antihydra, what is the Collatz conjecture, how are they connected, and what makes them so daunting?&lt;/p&gt;
    &lt;head rend="h2"&gt;Busy Beaver Basics&lt;/head&gt;
    &lt;p&gt;If you haven‚Äôt already read my two Quanta stories about the busy beaver game, I recommend doing so before reading further, mainly just because they‚Äôre both really fun! Here I‚Äôll recap how the busy beaver game works so that we‚Äôre all on the same page.&lt;/p&gt;
    &lt;p&gt;I wrote above that the busy beaver numbers ‚Äúmeasure the complexity of the craziest computations that simple computer programs can complete.‚Äù To define them more precisely, we first need a mathematical framework for gauging the complexity of computer programs themselves, to decide which ones are ‚Äúsimple.‚Äù Then we need a way to quantify the complexity of computations ‚Äî what computer programs do ‚Äî so that we can identify the craziest ones.&lt;/p&gt;
    &lt;p&gt;In the busy beaver game, computer programs are represented by hypothetical devices called Turing machines, which compute in discrete steps by reading and writing 0s and 1s on an infinite tape divided into cells. A unique list of rules governs the behavior of each Turing machine. Anything you can do with an ordinary computer program, you can in principle do with the right set of Turing machine rules.3In the busy beaver literature, these rules are called ‚Äústates.‚Äù ‚ÄúIn principle‚Äù is doing a lot of work in this sentence ‚Äî even if you managed to acquire the requisite infinite tape, computing with a Turing machine would be horrendously inefficient. But Turing machines are easier to analyze theoretically than more practical programming languages.&lt;/p&gt;
    &lt;p&gt;Let‚Äôs unpack how Turing machines work in a bit more detail. At each step, a Turing machine consults one of its rules and edits one cell on the tape. Each rule has two cases: what to do if the current cell contains a 0, and what to do if it contains a 1. ‚ÄúWhat to do‚Äù here means what to write in the current cell, which direction to move next, and which rule to consult for the next step. One case of one rule breaks this pattern: It tells the Turing machine to ‚Äúhalt,‚Äù or stop running. But by itself, the existence of this instruction doesn‚Äôt guarantee that a Turing machine will halt ‚Äî the machine might never get there. Quanta‚Äôs visual designer Kristina Armitage encapsulated all of this in a beautiful infographic.4In my first Busy Beaver story, you will also find animations of Turing machines in action.&lt;/p&gt;
    &lt;p&gt;The number of rules that a Turing machine has will be our measure of program complexity. This choice lets us replace our vague question about the craziest things that simple computer programs can do with a series of specific questions about different degrees of craziness, corresponding to different busy beaver numbers. You learn the value of BB(1) by answering the question ‚Äúwhat‚Äôs the most complex computation that a one-rule Turing machine can complete?‚Äù Likewise, BB(2) measures the most complex computation that a two-rule machine can complete, and so on.&lt;/p&gt;
    &lt;p&gt;To answer these questions, we need a precise definition of what makes one computation more complex than another. A natural measure is how many steps the Turing machine needs to complete the computation. ‚ÄúComplete‚Äù is important ‚Äî every Turing machine that never halts will run for infinitely many steps, but that‚Äôs not really a fair comparison. The number of steps that a Turing machine takes before halting (and indeed, whether it halts at all) can depend on the initial pattern of 0s and 1s on the tape. For the busy beaver game, we always start from the so-called ‚Äúblank tape,‚Äù which has 0s in every cell.&lt;/p&gt;
    &lt;p&gt;We now have all the necessary pieces to formally define the busy beaver numbers. Let‚Äôs take BB(6) to be specific: It is the longest finite runtime among all six-rule Turing machines, when those machines start with a blank tape. Finding this number is straightforward in principle. First, list out all possible six-rule Turing machines. Next, sort them into two categories: those that will eventually halt when they start running on the blank tape, and those that will run forever. Toss out all the non-halting machines. Finally, measure how many steps each of the halting machines takes before stopping. The largest number is BB(6).&lt;/p&gt;
    &lt;p&gt;The problem with this plan lies in the second step, where you divide the Turing machines into two groups based on whether or not they halt. It turns out that deciding whether a Turing machine will halt can be an extremely hard problem, to put it mildly. And if you can‚Äôt tell whether a given machine will halt, then you don‚Äôt know whether your list of halting Turing machines is complete, so you can‚Äôt know whether you‚Äôve found the longest runtime! As of this writing, researchers have classified the vast majority of six-rule machines as either halting or non-halting. But there are 1,618 ‚Äúholdouts‚Äù whose fate remains unknown.&lt;/p&gt;
    &lt;p&gt;Antihydra is one of these holdout machines. To nail down the value of BB(6), researchers must first determine whether Antihydra halts, and that seems to be beyond the reach of any known mathematical technique. To understand why, we need to take a step back and ask, ‚Äúwhat exactly are these Turing machines doing?‚Äù&lt;/p&gt;
    &lt;head rend="h2"&gt;Leveling Up&lt;/head&gt;
    &lt;p&gt;You may object at this point that we already know exactly what these Turing machines are doing: Each one is just following a specific sequence of rules, writing 0s and 1s on the tape as it goes. But this ‚Äúlow-level‚Äù description is a bit like saying ‚Äúwhen I push these buttons, my pocket calculator toggles transistors on and off in this specific pattern.‚Äù That may very well be true, but ‚Äúhigh-level‚Äù descriptions like ‚Äúwhen I push these buttons, my pocket calculator multiplies 3 and 4‚Äù are usually more useful.&lt;/p&gt;
    &lt;p&gt;There‚Äôs no guarantee that any given Turing machine‚Äôs behavior admits such a simple high-level description.5Also, in many cases low-level descriptions are perfectly adequate. For example, the easiest way to prove that a Turing machine halts is just to simulate it step by step until it stops running. When that happens, you don‚Äôt need a deeper understanding of why it halted: Just note its runtime and move on. But remember that Turing machines can carry out all possible computations ‚Äî that means that at least some Turing machines must be executing programs with high-level descriptions that humans can understand.&lt;/p&gt;
    &lt;p&gt;Actually, the most notable five- and six-rule Turing machines that busy beaver researchers have studied so far all have relatively simple high-level descriptions ‚Äî that includes the longest-running five- and six-rule machines that eventually halt, the most complex non-halting five-rule machines, and holdouts like Antihydra.6This is an empirical observation, not a self-evident truth. In fact, some researchers expected that the longest-running Turing machines would be ‚Äúspaghetti code‚Äù machines that lack any high-level description!&lt;/p&gt;
    &lt;p&gt;Let‚Äôs look at a specific example. The fifth busy beaver, which runs for 47,176,870 steps before halting, obeys the following low-level rules:&lt;/p&gt;
    &lt;p&gt;In 1993, the mathematician Pascal Michel proved that these rules are equivalent to a simple high-level program:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Set \(x = 0\).&lt;/item&gt;
      &lt;item&gt;Divide \(x\) by 3 and check the remainder. &lt;list rend="ul"&gt;&lt;item&gt;If the remainder is 0, calculate \((5x + 18)/3\). The result is your new value of \(x\).&lt;/item&gt;&lt;item&gt;If the remainder is 1, calculate \((5x + 22)/3\). The result is your new value of \(x\).&lt;/item&gt;&lt;item&gt;If the remainder is 2, halt.&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;If you haven‚Äôt halted, go back to step 2 and plug in the new value of \(x\).&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Once you have a high-level description like this, you can use it to determine whether the machine will halt ‚Äî and if so, exactly how many steps it will take.7Each step in a high-level program like this one corresponds to many individual Turing machine steps. Whenever you prove an equivalence between high-level and low-level descriptions, you get formulas that you can use to compute how long each high-level step will take. I won‚Äôt say anything about how to actually prove these equivalences. In this case, the high-level program just repeatedly plugs in new values of \(x\) until it finds one that leaves a remainder of 2 when divided by 3. One third of numbers have this property, so you might guess that the program will take three tries to find one, give or take a few. If you start from a random value of \(x\), you‚Äôll find that three iterations is indeed typical. But it turns out that if you start from \(x = 0\), this program will repeat the second step 15 times before it lands on a number with remainder 2! Busy beaver researchers often like to anthropomorphize the Turing machines they study, imagining that the machines are actively trying to run for as long as possible. Adopting that perspective, we might say that this Turing machine got very lucky.&lt;/p&gt;
    &lt;p&gt;The fifth busy beaver is just one member of a family of ‚ÄúCollatz-like‚Äù Turing machines whose high-level behavior has the following general form:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Set \(x\) equal to some starting value (which may or may not be 0).&lt;/item&gt;
      &lt;item&gt;Divide \(x\) by a fixed number \(N\). The remainder tells you what formula to use to get your new value of \(x\).&lt;/item&gt;
      &lt;item&gt;Check if you‚Äôve met a specific halting condition. If not, go back to step 2 with the new value of \(x\).8As we saw in the above example, the halting condition can be as simple as ‚Äúthe remainder has a specific value.‚Äù Below we‚Äôll see some examples with different halting conditions.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The family of Collatz-like Turing machines includes both halting and non-halting machines. It gets its name from a procedure for generating number sequences devised in 1937 by the mathematician Lothar Collatz:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Choose a starting value for \(x\).&lt;/item&gt;
      &lt;item&gt;Check whether \(x\) is even or odd. &lt;list rend="ul"&gt;&lt;item&gt;If it‚Äôs even, calculate \(x/2\). The result is your new value of \(x\).&lt;/item&gt;&lt;item&gt;If it‚Äôs odd, calculate \(3x + 1\). The result is your new value of \(x\).&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Check whether \(x = 1\). If not, go back to step 2.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This looks very similar to our general description of high-level behavior for Collatz-like machines, with \(x = 1\) as the halting condition.9‚ÄúCheck whether \(x\) is even or odd‚Äù is just another way of saying ‚Äúdivide \(x\) by 2 and check the remainder.‚Äù Strictly speaking, we don‚Äôt have to specify that the sequence stops when \(x = 1\). But if we keep applying the rules after it hits 1, the sequence enters an infinite loop: 1 &amp;gt; 4 &amp;gt; 2 &amp;gt; 1 and so on. Try iterating these rules from any initial integer value of \(x\) ‚Äî I‚Äôm willing to bet however much you like that you‚Äôll eventually hit 1. The Collatz conjecture asserts that this happens for every positive integer, no matter how large. People have tested this empirically for all integers up to at least 2 billion trillion (!) without finding any counterexamples, which strongly suggests that the conjecture is true. But nobody knows how to rigorously prove it.&lt;/p&gt;
    &lt;head rend="h2"&gt;Cryptozoology&lt;/head&gt;
    &lt;p&gt;Let‚Äôs take a step back. At the beginning of this post I noted a link between the Collatz conjecture and Antihydra: Nobody knows how to prove the Collatz conjecture, and that‚Äôs why researchers don‚Äôt know how to conclusively determine whether Antihydra halts. But now I‚Äôve instead linked the Collatz conjecture to the fifth busy beaver, a machine that has been proved to halt. What‚Äôs going on here?&lt;/p&gt;
    &lt;p&gt;The resolution to this apparent puzzle is that for the busy beaver game, we only care about whether a Turing machine halts when it starts running from a specific tape configuration, namely the blank tape. That means we only care about whether the corresponding Collatz-like sequence halts for a single input. The Collatz conjecture, meanwhile, asks whether you eventually hit \(x = 1\) for every input. It‚Äôs easy to show that the Collatz sequence ultimately hits \(x = 1\) for any one input, just as it‚Äôs easy to show that the fifth busy beaver halts (once you‚Äôve established an equivalence between its low-level rules and the high-level Collatz-like program).10As it happens, the busy beaver hunters Heiner Marxen and J√ºrgen Buntrock first proved that the fifth busy beaver halted by direct simulation (albeit with some tricks to speed things up). Michel only identified its high-level behavior after the fact.&lt;/p&gt;
    &lt;p&gt;We can easily construct a variant of the Collatz problem that‚Äôs hard to solve even for a single input. All we need to do is change the \(3x + 1\) rule for odd numbers to \(5x + 1\). In that case, trajectories that start from certain inputs (such as \(x = 7\)) look like they will diverge, never hitting 1 or falling into a cycle. But researchers haven‚Äôt been able to prove that any of these trajectories diverges. There‚Äôs an inherent asymmetry here. If you want to prove that a sequence does eventually end up somewhere, you can always just use brute force, at least in principle. But if you want to prove that a sequence never terminates, even a single input can be hard.&lt;/p&gt;
    &lt;p&gt;We‚Äôre now finally ready to confront the terror that is Antihydra. It obeys the following high-level rules:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Set \(x = 8\).11This may seem like a weird starting point, given that we‚Äôre supposed to start with the blank tape in the busy beaver game. That‚Äôs still true here ‚Äî it‚Äôs just that Antihydra spends a while futzing around on the tape before it starts iterating this sequence, and the high-level effect of all that futzing is to set the starting value to 8.&lt;/item&gt;
      &lt;item&gt;Check whether \(x\) is even or odd. &lt;list rend="ul"&gt;&lt;item&gt;If it‚Äôs even, calculate \(3x/2\). The result is your new value of \(x\). Add one to a running tally of how many times you‚Äôve applied this even rule.&lt;/item&gt;&lt;item&gt;If it‚Äôs odd, calculate \((3x-1)/2\). The result is your new value of \(x\). Add one to a running tally of how many times you‚Äôve applied this odd rule.&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Check whether your ‚Äúodd‚Äù count is more than twice as large as your ‚Äúeven‚Äù count. If so, halt. If not, go back to step 2.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This is a very curious set of rules. The formulas \(3x/2\) and \((3x-1)/2\) don‚Äôt appear to systematically favor odd or even numbers, so you might expect that iterating them again and again will look like repeatedly flipping a coin and keeping track of how often you get heads versus tails. Early on in a sequence of coin flips, it‚Äôs distinctly possible that you‚Äôll end up with more than twice as many heads as tails. But if this doesn‚Äôt happen right away, it becomes less and less likely the longer you keep going. Researchers have now simulated the behavior of Antihydra out to more than 270 billion steps, and as expected, the ‚Äúeven‚Äù and ‚Äúodd‚Äù tallies are pretty close to equal ‚Äî nowhere near the extreme imbalance demanded by the halting condition. So it seems overwhelmingly likely that Antihydra never halts. But nobody knows how to prove it! The mathematician John Conway coined the delightful term ‚Äúprobviously‚Äù for situations like this ‚Äî ones where the specific problem of interest is very hard to solve, but probabilistic reasoning about the ‚Äútypical‚Äù behavior of similar problems makes the answer seem obvious.&lt;/p&gt;
    &lt;p&gt;Antihydra‚Äôs behavior is qualitatively similar to the \(5x + 1\) version of the Collatz conjecture, where we don‚Äôt know how to prove that any single trajectory diverges. I want to stress that as far as researchers know, there isn‚Äôt a more precise mathematical link between these two problems: If you resolved one of them, it wouldn‚Äôt automatically resolve the other. But the problems seem hard for very similar reasons. If someone does manage to prove the Collatz conjecture, the mathematical techniques used in the proof would likely be promising for the Antihydra problem (and vice versa).&lt;/p&gt;
    &lt;p&gt;Actually, Antihydra is just one of many probviously non-halting Turing machines with Collatz-like behavior. Busy beaver hunter Shawn Ligocki dubbed these machines ‚Äúcryptids‚Äù when they were first identified in variants of the standard busy beaver game.12These variants use extra tape symbols in addition to 0 and 1. For example, the BB(3,3) version of the busy beaver game studies the behavior of Turing machines with three rules that can read and write three symbols: 0, 1, and 2.&lt;/p&gt;
    &lt;p&gt;The first two cryptids to be discovered were named Bigfoot and Hydra;13Antihydra was named for a mathematical connection to Hydra. researchers have now identified so many cryptids that it no longer makes sense to give each one its own name. The existence of all these cryptids implies that busy beaver numbers beyond BB(5) will remain out of reach until researchers develop new mathematical tools for tackling Collatz-like problems. And the legendary mathematician Paul Erd≈ës reportedly said ‚ÄúMathematics may not be ready for such problems.‚Äù&lt;/p&gt;
    &lt;p&gt;But that doesn‚Äôt mean busy beaver hunters should give up. There‚Äôs still plenty of questions to explore in what might be called ‚Äúcryptid ecology.‚Äù How many subspecies of cryptids are there? How are they related to each other, and to other unsolved problems in mathematics beyond the Collatz conjecture? Since the beginning of the busy beaver game, avid hunters have repeatedly encountered surprising new Turing machine behavior, and that pattern shows no sign of letting up.&lt;/p&gt;
    &lt;p&gt;This past August I visited Tahquamenon Falls in Michigan‚Äôs upper peninsula, a part of the state that‚Äôs apparently an epicenter of bigfoot sightings. Fortunately I didn‚Äôt encounter any cryptids, but I did learn some new things about a few friendlier critters. Surprising discoveries can come from anywhere!&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45723359</guid><pubDate>Mon, 27 Oct 2025 16:56:04 +0000</pubDate></item><item><title>Sieve (YC X25) is hiring engineers to build video datasets for frontier AI</title><link>https://www.sievedata.com/</link><description>&lt;doc fingerprint="7d518f497b3a37b"&gt;
  &lt;main&gt;
    &lt;p&gt;High quality video data for AI applications.&lt;/p&gt;
    &lt;p&gt;500K hours of high quality, diverse video clips.&lt;/p&gt;
    &lt;p&gt;Contact us to request a sample or explore more options.&lt;/p&gt;
    &lt;p&gt;Purpose-built video understanding models paired with human QA help find just the highest quality, training-ready data.&lt;/p&gt;
    &lt;p&gt;Our growing library consists of thousands of petabytes of video data.&lt;/p&gt;
    &lt;p&gt;Video is collected from a variety of public, private, and synthetic sources.&lt;/p&gt;
    &lt;p&gt;New data shapes to unlock new model capabilities (paired, time-synced, conversational, and more).&lt;/p&gt;
    &lt;p&gt;Contact us to request a sample or explore more options.&lt;/p&gt;
    &lt;p&gt;Purpose-built video understanding models paired with human QA help find just the highest quality, training-ready data.&lt;/p&gt;
    &lt;p&gt;Our growing library consists of thousands of petabytes of video data.&lt;/p&gt;
    &lt;p&gt;Video is collected from a variety of public, private, and synthetic sources.&lt;/p&gt;
    &lt;p&gt;New data shapes to unlock new model capabilities (paired, time-synced, conversational, and more).&lt;/p&gt;
    &lt;p&gt;Explore pre-packaged datasets to determine which you are interested in.&lt;/p&gt;
    &lt;p&gt;Enter a purchase agreement based on dataset volume and characteristics.&lt;/p&gt;
    &lt;p&gt;Receive data within 1-2 days via storage bucket access.&lt;/p&gt;
    &lt;p&gt;Scalable API&lt;/p&gt;
    &lt;p&gt;Built to process millions of hours of video at any given moment.&lt;/p&gt;
    &lt;p&gt;Compliant&lt;/p&gt;
    &lt;p&gt;Request specific filtering and licensing needs to ensure full permission and compliance of your training data.&lt;/p&gt;
    &lt;p&gt;Dedicated partnership&lt;/p&gt;
    &lt;p&gt;We partner deeply with every research team to understand their needs and develop data with the same rigor they develop models.&lt;/p&gt;
    &lt;p&gt;Secure&lt;/p&gt;
    &lt;p&gt;End-to-end encryption, custom data retention, and SOC 2 Type 2 secured.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45723426</guid><pubDate>Mon, 27 Oct 2025 17:01:05 +0000</pubDate></item><item><title>Show HN: Git Auto Commit (GAC) ‚Äì LLM-powered Git commit command line tool</title><link>https://github.com/cellwebb/gac</link><description>&lt;doc fingerprint="a4346c4380a8f88e"&gt;
  &lt;main&gt;
    &lt;p&gt;LLM-powered commit messages that understand your code.&lt;/p&gt;
    &lt;p&gt;Tired of writing commit messages? Replace &lt;code&gt;git commit -m "..."&lt;/code&gt; with &lt;code&gt;gac&lt;/code&gt; for contextual, well-formatted commit messages generated by large language models.&lt;/p&gt;
    &lt;p&gt;Intelligent, contextual messages that explain the why behind your changes:&lt;/p&gt;
    &lt;code&gt;uvx gac init  # Configure your LLM provider
uvx gac  # Generate and commit with LLM&lt;/code&gt;
    &lt;p&gt;That's it! Review the generated message and confirm with &lt;code&gt;y&lt;/code&gt;.&lt;/p&gt;
    &lt;code&gt;uv tool install gac
gac init
gac&lt;/code&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Anthropic ‚Ä¢ Cerebras ‚Ä¢ Chutes.ai ‚Ä¢ Fireworks ‚Ä¢ Gemini&lt;/item&gt;
      &lt;item&gt;Groq ‚Ä¢ LM Studio ‚Ä¢ Minimax ‚Ä¢ Ollama ‚Ä¢ OpenAI ‚Ä¢ OpenRouter&lt;/item&gt;
      &lt;item&gt;Streamlake ‚Ä¢ Synthetic.new ‚Ä¢ Together AI ‚Ä¢ Z.AI ‚Ä¢ Z.AI Coding&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Understands intent: Analyzes code structure, logic, and patterns to understand the "why" behind your changes, not just what changed&lt;/item&gt;
      &lt;item&gt;Semantic awareness: Recognizes refactoring, bug fixes, features, and breaking changes to generate contextually appropriate messages&lt;/item&gt;
      &lt;item&gt;Intelligent filtering: Prioritizes meaningful changes while ignoring generated files, dependencies, and artifacts&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;One-liner (-o flag): Single-line commit message following conventional commit format&lt;/item&gt;
      &lt;item&gt;Standard (default): Summary with bullet points explaining implementation details&lt;/item&gt;
      &lt;item&gt;Verbose (-v flag): Comprehensive explanations including motivation, technical approach, and impact analysis&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Interactive feedback: Regenerate messages with specific requests like &lt;code&gt;r "make it shorter"&lt;/code&gt;or&lt;code&gt;r "focus on the bug fix"&lt;/code&gt;&lt;/item&gt;
      &lt;item&gt;One-command workflows: Complete workflows with flags like &lt;code&gt;gac -ayp&lt;/code&gt;(stage all, auto-confirm, push)&lt;/item&gt;
      &lt;item&gt;Git integration: Respects pre-commit and lefthook hooks, running them before expensive LLM operations&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Automatic secret detection: Scans for API keys, passwords, and tokens before committing&lt;/item&gt;
      &lt;item&gt;Interactive protection: Prompts before committing potentially sensitive data with clear remediation options&lt;/item&gt;
      &lt;item&gt;Smart filtering: Ignores example files, template files, and placeholder text to reduce false positives&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;# Stage your changes
git add .

# Generate and commit with LLM
gac

# Review ‚Üí y (commit) | n (cancel) | r (reroll)&lt;/code&gt;
    &lt;table&gt;
      &lt;row span="2"&gt;
        &lt;cell role="head"&gt;Command&lt;/cell&gt;
        &lt;cell role="head"&gt;Description&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;
          &lt;code&gt;gac&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Generate commit message&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;
          &lt;code&gt;gac -y&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Auto-confirm (no review needed)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;
          &lt;code&gt;gac -a&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Stage all before generating commit message&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;
          &lt;code&gt;gac -o&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;One-line message for trivial changes&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;
          &lt;code&gt;gac -v&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Verbose format with Motivation, Technical Approach, and Impact Analysis&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;
          &lt;code&gt;gac -h "hint"&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Add context for LLM (e.g., &lt;code&gt;gac -h "bug fix"&lt;/code&gt;)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;
          &lt;code&gt;gac -s&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Include scope (e.g., feat(auth):)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;code&gt;gac -p&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Commit and push&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;code&gt;# Complete workflow in one command
gac -ayp -h "release preparation"

# Detailed explanation with scope
gac -v -s

# Quick one-liner for small changes
gac -o

# Debug what the LLM sees
gac --show-prompt

# Skip security scan (use carefully)
gac --skip-secret-scan&lt;/code&gt;
    &lt;p&gt;Not happy with the result? Use the reroll feature for intelligent regeneration:&lt;/p&gt;
    &lt;code&gt;# Simple reroll
r

# With specific feedback
r make it shorter and focus on the performance improvement
r use conventional commit format with scope
r explain the security implications&lt;/code&gt;
    &lt;p&gt;Run &lt;code&gt;gac init&lt;/code&gt; to configure your provider interactively, or set environment variables:&lt;/p&gt;
    &lt;code&gt;# Example configuration
GAC_MODEL=anthropic:your-model-name
OPENAI_API_KEY=your_key_here
ANTHROPIC_API_KEY=your_key_here&lt;/code&gt;
    &lt;p&gt;See &lt;code&gt;.gac.env.example&lt;/code&gt; for all available options.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Full documentation: USAGE.md - Complete CLI reference&lt;/item&gt;
      &lt;item&gt;Troubleshooting: TROUBLESHOOTING.md - Common issues and solutions&lt;/item&gt;
      &lt;item&gt;Contributing: CONTRIBUTING.md - Development setup and guidelines&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Made with ‚ù§Ô∏è for developers who want better commit messages&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45723533</guid><pubDate>Mon, 27 Oct 2025 17:07:05 +0000</pubDate></item><item><title>Avoid 2:00 and 3:00 am cron jobs (2013)</title><link>https://www.endpointdev.com/blog/2013/04/avoid-200-and-300-am-cron-jobs/</link><description>&lt;doc fingerprint="fe50537ca9a4b4f6"&gt;
  &lt;main&gt;
    &lt;head rend="h2"&gt;Avoid 2:00 and 3:00 am cron jobs!&lt;/head&gt;
    &lt;p&gt;A word to the wise: Do not set any cron jobs for 2:00 am or 3:00 am on Sunday morning! Or to be safe, on other mornings besides Sunday as well, since jobs originally set to run on some particular day may eventually be changed to run on another day, or every day.&lt;/p&gt;
    &lt;p&gt;Most of the time such cron jobs will run fine, but if they run every Sunday morning, then twice per year they will run at the exact time daylight savings time (aka summer time) kicks in or ends, sometimes with very strange results.&lt;/p&gt;
    &lt;p&gt;On Linux with vixie-cron we saw two cron jobs run something like once per second between 3:00 and 3:01 when the most recent daylight savings time began. Thus they ran about 60 times, stepping all over each other and making a noisy mess in email. No serious harm was done, but that√¢s only because they were not tasks capable of causing serious harm.&lt;/p&gt;
    &lt;p&gt;Feel free to wish for or agitate for or fund or write a better open source job scheduler that everyone will use, one that will ensure no overlapping runs, allow specifying time limits, etc. Better tools exist, but until one of them achieves cron√¢s level of ubiquity, we have to live with cron at least some places and sometimes.&lt;/p&gt;
    &lt;p&gt;Alternatively, where possible set the server timezone to UTC so that no daylight savings changes will happen at all.&lt;/p&gt;
    &lt;p&gt;Or most preferable: Governments of the world, stop the twice-yearly dance of daylight saving time altogether.&lt;/p&gt;
    &lt;p&gt;But in the meantime this particular problem can be entirely avoided by just not scheduling any cron jobs to run on Sunday morning at 2:00 or 3:00 server time.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45723554</guid><pubDate>Mon, 27 Oct 2025 17:08:33 +0000</pubDate></item><item><title>Artificial Writing and Automated Detection [pdf]</title><link>https://www.nber.org/system/files/working_papers/w34223/w34223.pdf</link><description></description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45723558</guid><pubDate>Mon, 27 Oct 2025 17:09:05 +0000</pubDate></item><item><title>Cisco opensourced MCP-Scanner for finding vulnerabilties in MCP server</title><link>https://github.com/cisco-ai-defense/mcp-scanner</link><description>&lt;doc fingerprint="145add5c9802fa90"&gt;
  &lt;main&gt;
    &lt;p&gt;A Python tool for scanning MCP (Model Context Protocol) servers and tools for potential security vulnerabilities. The MCP Scanner combines Cisco AI Defense inspect API, YARA rules and LLM-as-a-judge to detect malicious MCP tools.&lt;/p&gt;
    &lt;p&gt;The MCP Scanner provides a comprehensive solution for scanning MCP servers and tools for security vulnerabilities. It leverages three powerful scanning engines (Yara, LLM-as-judge, Cisco AI Defense) that can be used together or independently.&lt;/p&gt;
    &lt;p&gt;The SDK is designed to be easy to use while providing powerful scanning capabilities, flexible authentication options, and customization.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Multiple Modes: Run scanner as a stand-alone CLI tool or REST API server&lt;/item&gt;
      &lt;item&gt;Multi-Engine Security Analysis: Use all three scanning engines together or independently based on your needs.&lt;/item&gt;
      &lt;item&gt;Comprehensive Scanning: Scan MCP tools, prompts, and resources for security vulnerabilities&lt;/item&gt;
      &lt;item&gt;Explicit Authentication Control: Fine-grained control over authentication with explicit Auth parameters.&lt;/item&gt;
      &lt;item&gt;OAuth Support: Full OAuth authentication support for both SSE and streamable HTTP connections.&lt;/item&gt;
      &lt;item&gt;Custom Endpoints: Configure the API endpoint to support any Cisco AI Defense environments.&lt;/item&gt;
      &lt;item&gt;MCP Server Integration: Connect directly to MCP servers to scan tools, prompts, and resources with flexible authentication.&lt;/item&gt;
      &lt;item&gt;Customizable YARA Rules: Add your own YARA rules to detect specific patterns.&lt;/item&gt;
      &lt;item&gt;Comprehensive Vulnerability Reporting: Detailed reports on detected vulnerabilities.&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Python 3.11+&lt;/item&gt;
      &lt;item&gt;uv (Python package manager)&lt;/item&gt;
      &lt;item&gt;A valid Cisco AI Defense API Key (optional)&lt;/item&gt;
      &lt;item&gt;LLM Provider API Key (optional)&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;uv venv -p &amp;lt;Python version less than or equal to 3.13&amp;gt; /path/to/your/choice/of/venv/directory
source /path/to/your/choice/of/venv/directory/bin/activate
uv pip install cisco-ai-mcp-scanner&lt;/code&gt;
    &lt;code&gt;git clone https://github.com/cisco-ai-defense/mcp-scanner
cd mcp-scanner
# Install with uv (recommended)

uv venv -p &amp;lt;Python version less than or equal to 3.13&amp;gt; /path/to/your/choice/of/venv/directory

source /path/to/your/choice/of/venv/directory/bin/activate

uv pip install .
# Or install in development mode
uv pip install -e .&lt;/code&gt;
    &lt;code&gt;Cisco AI Defense API (only required for API analyzer)
export MCP_SCANNER_API_KEY="your_cisco_api_key"
export MCP_SCANNER_ENDPOINT="https://us.api.inspect.aidefense.security.cisco.com/api/v1"
# For other endpoints please visit https://developer.cisco.com/docs/ai-defense/getting-started/#base-url&lt;/code&gt;
    &lt;p&gt;Tested LLMs: OpenAI GPT-4o and GPT-4.1&lt;/p&gt;
    &lt;code&gt;# LLM Provider API Key (required for LLM analyzer)
export MCP_SCANNER_LLM_API_KEY="your_llm_api_key"  # OpenAI

# LLM Model Configuration (optional - defaults provided)
export MCP_SCANNER_LLM_MODEL="gpt-4o"  # Any LiteLLM-supported model
export MCP_SCANNER_LLM_BASE_URL="https://api.openai.com/v1"  # Custom LLM endpoint
export MCP_SCANNER_LLM_API_VERSION="2024-02-01"  # API version (if required)

# For Azure OpenAI (example)
export MCP_SCANNER_LLM_BASE_URL="https://your-resource.openai.azure.com/"
export MCP_SCANNER_LLM_API_VERSION="2024-02-01"
export MCP_SCANNER_LLM_MODEL="azure/gpt-4"

# For Extended Thinking Models (longer timeout)
export MCP_SCANNER_LLM_TIMEOUT=300&lt;/code&gt;
    &lt;p&gt;The fastest way to get started is using the &lt;code&gt;mcp-scanner&lt;/code&gt; CLI command. Global flags (like &lt;code&gt;--analyzers&lt;/code&gt;, &lt;code&gt;--format&lt;/code&gt;, etc.) must be placed before a subcommand.&lt;/p&gt;
    &lt;code&gt;# Scan well-known client configs on this machine
mcp-scanner --scan-known-configs --analyzers yara --format summary

# Stdio server (example using uvx mcp-server-fetch)
mcp-scanner --stdio-command uvx --stdio-arg=--from --stdio-arg=mcp-server-fetch --stdio-arg=mcp-server-fetch --analyzers yara --format summary

# Remote server (deepwiki example)
mcp-scanner --server-url https://mcp.deepwki.com/mcp --analyzers yara --format summary

# MCP Scanner as REST API
mcp-scanner-api --host 0.0.0.0 --port 8080
&lt;/code&gt;
    &lt;code&gt;import asyncio
from mcpscanner import Config, Scanner
from mcpscanner.core.models import AnalyzerEnum

async def main():
    # Create configuration with your API keys
    config = Config(
        api_key="your_cisco_api_key",
        llm_provider_api_key="your_llm_api_key"
    )

    # Create scanner
    scanner = Scanner(config)

    # Scan all tools on a remote server
    tool_results = await scanner.scan_remote_server_tools(
        "https://mcp.deepwki.com/mcp",
        analyzers=[AnalyzerEnum.API, AnalyzerEnum.YARA, AnalyzerEnum.LLM]
    )

    # Print tool results
    for result in tool_results:
        print(f"Tool: {result.tool_name}, Safe: {result.is_safe}")

    # Scan all prompts on a server
    prompt_results = await scanner.scan_remote_server_prompts(
        "http://127.0.0.1:8000/mcp",
        analyzers=[AnalyzerEnum.LLM]
    )

    # Print prompt results
    for result in prompt_results:
        print(f"Prompt: {result.prompt_name}, Safe: {result.is_safe}")

    # Scan all resources on a server
    resource_results = await scanner.scan_remote_server_resources(
        "http://127.0.0.1:8000/mcp",
        analyzers=[AnalyzerEnum.LLM],
        allowed_mime_types=["text/plain", "text/html"]
    )

    # Print resource results
    for result in resource_results:
        print(f"Resource: {result.resource_name}, Safe: {result.is_safe}, Status: {result.status}")

# Run the scanner
asyncio.run(main())&lt;/code&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;remote: scan a remote MCP server (SSE or streamable HTTP). Supports &lt;code&gt;--server-url&lt;/code&gt;, optional&lt;code&gt;--bearer-token&lt;/code&gt;.&lt;/item&gt;
      &lt;item&gt;stdio: launch and scan a stdio MCP server. Requires &lt;code&gt;--stdio-command&lt;/code&gt;; accepts&lt;code&gt;--stdio-args&lt;/code&gt;,&lt;code&gt;--stdio-env&lt;/code&gt;, optional&lt;code&gt;--stdio-tool&lt;/code&gt;.&lt;/item&gt;
      &lt;item&gt;config: scan servers from a specific MCP config file. Requires &lt;code&gt;--config-path&lt;/code&gt;; optional&lt;code&gt;--bearer-token&lt;/code&gt;.&lt;/item&gt;
      &lt;item&gt;known-configs: scan servers from well-known client config locations on this machine; optional &lt;code&gt;--bearer-token&lt;/code&gt;.&lt;/item&gt;
      &lt;item&gt;prompts: scan prompts on an MCP server. Requires &lt;code&gt;--server-url&lt;/code&gt;; optional&lt;code&gt;--prompt-name&lt;/code&gt;,&lt;code&gt;--bearer-token&lt;/code&gt;.&lt;/item&gt;
      &lt;item&gt;resources: scan resources on an MCP server. Requires &lt;code&gt;--server-url&lt;/code&gt;; optional&lt;code&gt;--resource-uri&lt;/code&gt;,&lt;code&gt;--mime-types&lt;/code&gt;,&lt;code&gt;--bearer-token&lt;/code&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Note: Top-level flags (e.g., &lt;code&gt;--server-url&lt;/code&gt;, &lt;code&gt;--stdio-*&lt;/code&gt;, &lt;code&gt;--config-path&lt;/code&gt;, &lt;code&gt;--scan-known-configs&lt;/code&gt;) remain supported when no subcommand is used, but subcommands are recommended.&lt;/p&gt;
    &lt;code&gt;# YARA-only scan of all servers defined in well-known config locations
mcp-scanner --scan-known-configs --analyzers yara --format summary

# Detailed output
mcp-scanner --scan-known-configs --analyzers yara --detailed&lt;/code&gt;
    &lt;code&gt;# Expand ~ yourself if needed by your shell
mcp-scanner --config-path "$HOME/.codeium/windsurf/mcp_config.json" \
 --analyzers yara --format by_tool&lt;/code&gt;
    &lt;code&gt;# Use repeated --stdio-arg for reliable argument passing
mcp-scanner --analyzers yara --format summary \
  stdio --stdio-command uvx \
  --stdio-arg=--from --stdio-arg=mcp-server-fetch --stdio-arg=mcp-server-fetch

# Or list-form (ensure it doesn't conflict with later flags)
mcp-scanner --analyzers yara --detailed \
  stdio --stdio-command uvx \
  --stdio-args --from mcp-server-fetch mcp-server-fetch

# Scan only a specific tool on the stdio server
mcp-scanner --analyzers yara --format summary \
  stdio --stdio-command uvx \
  --stdio-arg=--from --stdio-arg=mcp-server-fetch --stdio-arg=mcp-server-fetch \
  --stdio-tool fetch&lt;/code&gt;
    &lt;code&gt;# Direct remote server with Bearer token
mcp-scanner --analyzers yara --format summary \
  remote --server-url https://your-mcp-server/sse --bearer-token "$TOKEN"

# Apply Bearer token to all remote servers discovered from configs
mcp-scanner --analyzers yara --detailed known-configs --bearer-token "$TOKEN"
mcp-scanner --analyzers yara --format by_tool \
  config --config-path "$HOME/.codeium/windsurf/mcp_config.json" --bearer-token "$TOKEN"&lt;/code&gt;
    &lt;code&gt;# Scan all prompts on an MCP server
mcp-scanner --analyzers llm prompts --server-url http://127.0.0.1:8000/mcp

# Scan all prompts with detailed output
mcp-scanner --analyzers llm --detailed prompts --server-url http://127.0.0.1:8000/mcp

# Scan all prompts with table format
mcp-scanner --analyzers llm --format table prompts --server-url http://127.0.0.1:8000/mcp

# Scan a specific prompt by name
mcp-scanner --analyzers llm prompts --server-url http://127.0.0.1:8000/mcp --prompt-name "greet_user"

# Get raw JSON output
mcp-scanner --analyzers llm --raw prompts --server-url http://127.0.0.1:8000/mcp&lt;/code&gt;
    &lt;code&gt;# Scan all resources on an MCP server
mcp-scanner --analyzers llm resources --server-url http://127.0.0.1:8000/mcp

# Scan all resources with detailed output
mcp-scanner --analyzers llm --detailed resources --server-url http://127.0.0.1:8000/mcp

# Scan all resources with table format
mcp-scanner --analyzers llm --format table resources --server-url http://127.0.0.1:8000/mcp

# Scan a specific resource by URI
mcp-scanner --analyzers llm resources --server-url http://127.0.0.1:8000/mcp \
  --resource-uri "file://test/document.txt"

# Scan with custom MIME type filtering
mcp-scanner --analyzers llm resources --server-url http://127.0.0.1:8000/mcp \
  --mime-types "text/plain,text/html,application/json"&lt;/code&gt;
    &lt;p&gt;The API server provides a REST interface to the MCP scanner functionality, allowing you to integrate security scanning into web applications, CI/CD pipelines, or other services. It exposes the same scanning capabilities as the CLI tool but through HTTP endpoints.&lt;/p&gt;
    &lt;code&gt;# Start the API server (loads configuration from .env file)
mcp-scanner-api --port 8000

# Or with custom host and port
mcp-scanner-api --host 0.0.0.0 --port 8080

# Enable development mode with auto-reload
mcp-scanner-api --reload&lt;/code&gt;
    &lt;p&gt;Once running, the API server provides endpoints for:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;/scan-tool&lt;/code&gt;- Scan a specific tool on an MCP server&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;/scan-all-tools&lt;/code&gt;- Scan all tools on an MCP server&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;/scan-prompt&lt;/code&gt;- Scan a specific prompt on an MCP server&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;/scan-all-prompts&lt;/code&gt;- Scan all prompts on an MCP server&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;/scan-resource&lt;/code&gt;- Scan a specific resource on an MCP server&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;/scan-all-resources&lt;/code&gt;- Scan all resources on an MCP server&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;/health&lt;/code&gt;- Health check endpoint&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Documentation is available in docs/api-reference.md or as interactive documentation at &lt;code&gt;http://localhost:8000/docs&lt;/code&gt; when the server is running.&lt;/p&gt;
    &lt;p&gt;The scanner supports multiple output formats:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;summary&lt;/code&gt;: Concise overview with key findings&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;detailed&lt;/code&gt;: Comprehensive analysis with full findings breakdown&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;table&lt;/code&gt;: Clean tabular format&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;by_severity&lt;/code&gt;: Results grouped by severity level&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;raw&lt;/code&gt;: Raw JSON output&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;mcp-scanner --server-url http://127.0.0.1:8001/sse --format detailed&lt;/code&gt;
    &lt;code&gt;=== MCP Scanner Detailed Results ===

Scan Target: http://127.0.0.1:8001/sse

Tool: execute_system_command
Status: completed
Safe: No
Analyzer Results:
  ‚Ä¢ api_analyzer:
    - Severity: HIGH
    - Threat Summary: Detected 1 threat: security violation
    - Threat Names: SECURITY VIOLATION
    - Total Findings: 1
  ‚Ä¢ yara_analyzer:
    - Severity: HIGH
    - Threat Summary: Detected 2 threats: system access, command injection
    - Threat Names: SECURITY VIOLATION, SUSPICIOUS CODE EXECUTION
    - Total Findings: 2
  ‚Ä¢ llm_analyzer:
    - Severity: HIGH
    - Threat Summary: Detected 2 threats: prompt injection, tool poisoning
    - Threat Names: PROMPT INJECTION, SUSPICIOUS CODE EXECUTION
    - Total Findings: 2
&lt;/code&gt;
    &lt;code&gt;mcp-scanner --server-url http://127.0.0.1:8002/sse --format table&lt;/code&gt;
    &lt;code&gt;=== MCP Scanner Results Table ===

Scan Target: http://127.0.0.1:8002/sse

Scan Target                   Tool Name     Status     API      YARA     LLM      Severity
-----------------------------------------------------------------------------------------
http://127.0.0.1:8002/sse     exec_secrets  UNSAFE     HIGH     HIGH     HIGH     HIGH
http://127.0.0.1:8002/sse     safe_command  SAFE       SAFE     SAFE     SAFE     SAFE
&lt;/code&gt;
    &lt;p&gt;For detailed documentation, see the docs/ directory:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Architecture - System architecture and components&lt;/item&gt;
      &lt;item&gt;Authentication - OAuth and security configuration&lt;/item&gt;
      &lt;item&gt;Programmatic Usage - Programmatic usage examples and advanced usage&lt;/item&gt;
      &lt;item&gt;API Reference - Complete REST API documentation&lt;/item&gt;
      &lt;item&gt;Output Formats - Detailed output format options&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;https://www.cisco.com/site/us/en/products/security/ai-defense/index.html&lt;/p&gt;
    &lt;p&gt;Distributed under the &lt;code&gt;Apache 2.0&lt;/code&gt; License. See LICENSE for more information.&lt;/p&gt;
    &lt;p&gt;Project Link: https://github.com/cisco-ai-defense/mcp-scanner&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45723699</guid><pubDate>Mon, 27 Oct 2025 17:18:39 +0000</pubDate></item><item><title>Let the little guys in: A context sharing runtime for the personalised web</title><link>https://arjun.md/little-guys</link><description>&lt;doc fingerprint="af2d18541f732779"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Let the little guys in: &lt;lb/&gt; Towards a context sharing runtime for the personalised web&lt;/head&gt;
    &lt;p&gt;It‚Äôs easier than ever to build small tools. Npm, with 63 billion javascript package downloads in the last week, is a great example of the magic that happens when we can easily fork, share, find, use &amp;amp; compose small tools. It‚Äôs also a great example of what it‚Äôs missing - it‚Äôs hard to trust. Would you trust a new little wrapper or package with all of your bank statements, emails, and ChatGPT history?&lt;/p&gt;
    &lt;p&gt;Today, context is king, and OAuth dialogs are not enough to enable world-wide-web like participation in it.&lt;/p&gt;
    &lt;p&gt;Here‚Äôs another idea: Instead of tightly controlling which applications have access to data, we need to control where applications can send it.&lt;/p&gt;
    &lt;p&gt;And in that (attestable) image, a new runtime environment is being forged. Not by me, but I buy into it, and I write this hoping that you might too.&lt;/p&gt;
    &lt;p&gt;Onto the first premise:&lt;/p&gt;
    &lt;head rend="h2"&gt;We‚Äôre far from realising the potential of computing&lt;/head&gt;
    &lt;p&gt;To really appreciate that potential, let‚Äôs imagine what it might feel like to have realised it.&lt;/p&gt;
    &lt;p&gt;Here‚Äôs one handle for your imagination: Imagine if ChatGPT worked perfectly, connected to everything, and knew everything about you.&lt;/p&gt;
    &lt;p&gt;Of course, you have to use your imagination there. ChatGPT is far from perfect. And‚Ä¶it never will be. In terms of sheer LLM horsepower, its ability to benefit from more parameters, and more thinking tokens, to think better and make up stuff less - we seem to be plateauing. As was the case for human beings ~300,000 years ago, the economics for making the brain bigger has basically stopped making sense.&lt;/p&gt;
    &lt;p&gt;So here‚Äôs the second handle for your imagination. Think of the last app you used. You have it? Great.&lt;/p&gt;
    &lt;p&gt;Now imagine you could in an instant, transform that app in any way you could imagine, to be better for you.&lt;/p&gt;
    &lt;p&gt;It‚Äôs quite a thing to think about. It is fun, so I would recommend it if you can spare some brain. Type your app here to seed some ideas.&lt;/p&gt;
    &lt;p&gt;For me, it was my Banking app. Here are some features I‚Äôd want:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;As above, I want my banking app to insert a little expandable badge beside every ‚Äúpay‚Äù button in my web browser, where it tells me how my current cart or purchase is going to affect my budget or balance. This seems like obviously good UX. In games, I‚Äôve never seen a shop interface that doesn‚Äôt show you your remaining cash balance - imagine how weird and bad it would be if you only got a notification after the fact.&lt;/item&gt;
      &lt;item&gt;I want to read a couple sentence summary each month that describes how that month‚Äôs gone, with respect to my long term financial goals - and any interesting spending trends that have emerged.&lt;/item&gt;
      &lt;item&gt;I want the ability to ask my bank things. For example: ‚Äúhow much did my cost of living change after moving to cape town?‚Äù or: ‚Äúsince I started seeing a dietician last year, how has that affected my spend on food?‚Äù or: ‚Äúhow much has my padel habit cost me?‚Äù&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The features you‚Äôd want, might differ a lot! For example, maybe you‚Äôre better than me at budgeting and have different categories that you want to classify, by linking bank statement line items with the contents of order breakdowns in your email.&lt;/p&gt;
    &lt;p&gt;The point is - the ceiling is high, and we are a long way from it.&lt;/p&gt;
    &lt;head rend="h2"&gt;Why aren‚Äôt we further along?&lt;/head&gt;
    &lt;p&gt;Well, to meet all your unmet computing needs, you need a bunch more code, right?&lt;/p&gt;
    &lt;p&gt;Given how hard it‚Äôs been to write code, we‚Äôve largely outsourced the writing of it to a group of experts, within sprawling software companies, who are doing their best to Eat the World, with a side of Our Data, but who will never get around to their P3 backlog.&lt;/p&gt;
    &lt;p&gt;I don‚Äôt think my banking app will give me those features, ever.&lt;/p&gt;
    &lt;p&gt;And it‚Äôs not just the low priority stuff that companies are reticent to build.&lt;/p&gt;
    &lt;head rend="h3"&gt;We have different incentives to companies&lt;/head&gt;
    &lt;p&gt;Where our needs as a user intersect well with the making of profits‚Ä¶we are extremely well served. The size of this intersection is basically the extent of product-market fit. Companies tend to be amazing at: ‚ÄúMake it convenient for me to buy my first thing‚Ä¶and what else can you conveniently bundle in?‚Äù&lt;/p&gt;
    &lt;p&gt;Some needs are ignored - because code-writing capacity is finite, and pandering to niche user needs violates the pareto principle. Hotels will jump to put a mini-bar inside your room, but if that‚Äôs the only place you can get snacks, you‚Äôll never have wasabi peas.&lt;/p&gt;
    &lt;p&gt;Some needs are actively suppressed: "Make it easy for me to opt out‚Ä¶from your service, from a part of your service, or just from consuming too much‚Äù.&lt;/p&gt;
    &lt;head rend="h3"&gt;We don‚Äôt have to rely on companies to write code&lt;/head&gt;
    &lt;p&gt;We already rely a lot on open source for our most crucial code - at the heart of our operating systems.&lt;/p&gt;
    &lt;p&gt;For example, here is the source code of Android, which is almost 200 million lines of code, and which stands on the shoulders of other open source projects like Linux (which runs most computers in the Cloud).&lt;/p&gt;
    &lt;p&gt;Most linux development today is funded via for-profit companies, who benefit from Linux meeting their or their customers needs. But the first version was made by one dude to meet his own needs, who posted it on a forum.&lt;/p&gt;
    &lt;p&gt;Today, facilitated by LLM‚Äôs, many more people can write little scripts to meet their own needs. Via open source, that code can be cleaned up and grow to meet bigger needs, for bigger audiences. We can also make little edits to the code to fit our own needs.&lt;/p&gt;
    &lt;p&gt;But open source software is often outcompeted by closed source software. There‚Äôs a reason why people use MS office or Google to make a &lt;del&gt;powerpoint&lt;/del&gt; presentation, and not the many attempts at open source alternatives. Sometimes, the polish required for these products is boring and difficult. Open source software is good for interesting things. Vibe coding is good for small things.&lt;/p&gt;
    &lt;p&gt;So ideally, we want to be able to take code from all 3 places and combine them, via small wrappers, into more need-meeting, tailor-made software.&lt;/p&gt;
    &lt;p&gt;But code is only as useful as the information it has access to. And so access to information has become the limiting reagent in our computing.&lt;/p&gt;
    &lt;p&gt;This is especially the case with the new capabilities we have from LLM‚Äôs, to understand the depth of our own context and provide a whole new level of output tailoring.&lt;/p&gt;
    &lt;head rend="h3"&gt;Most of our data is sitting inside a few companies&lt;/head&gt;
    &lt;p&gt;Remember when we used to call Applications ‚ÄúPrograms‚Äù? Back then, they were just executable code that we‚Äôd run on our own computer.&lt;/p&gt;
    &lt;p&gt;Then we started owning multiple computers (including a pocket-sized one!), the Cloud formed, and javascript gave us web applications.&lt;/p&gt;
    &lt;p&gt;So what started as outsourcing code, became outsourcing the actual computing, and most of our data storage, to companies, who could offer the convenience and profitability of a 1-stop-computing-shop.&lt;/p&gt;
    &lt;p&gt;Today‚Äôs output becomes tomorrow‚Äôs input! So that data grows and grows, inside the same handful of big companies.&lt;/p&gt;
    &lt;p&gt;It seems to work for us too.&lt;/p&gt;
    &lt;p&gt;We prefer a handful of companies - because the fewer apps that have our data, the less exposed we feel.&lt;/p&gt;
    &lt;p&gt;We prefer big companies - because there is safety in numbers.&lt;/p&gt;
    &lt;p&gt;While anti-monopolistic regulation encourages better access to that data‚Ä¶that can only move the market so much.&lt;/p&gt;
    &lt;p&gt;And so:&lt;/p&gt;
    &lt;head rend="h3"&gt;Trust is our computing bottleneck&lt;/head&gt;
    &lt;p&gt;While it‚Äôs possible for my bank to implement these features, it‚Äôs probably not going to get them to me any time in the next few years (despite all the ‚ÄúAI enablement‚Äù and ‚Äúagentic transformation‚Äù going on there lol).&lt;/p&gt;
    &lt;p&gt;It‚Äôs actually also possible for these features to be coded up and bolted on, without needing anything from the bank.&lt;/p&gt;
    &lt;p&gt;But it‚Äôs too much work for me to code for myself - probably more work than me just looking at my own bank statements.&lt;/p&gt;
    &lt;p&gt;If someone else made a product (that I trusted), I‚Äôd pay for it.&lt;/p&gt;
    &lt;p&gt;If there was an open source product, that was easy to use (that I trusted), I would use it. I might even write a compatibility layer for my own South African bank‚Äôs statements.&lt;/p&gt;
    &lt;p&gt;I‚Äôm open to having it done via integration with ChatGPT too - using their new apps, which could integrate with a new web app and its associated browser extension, to enable these features.&lt;/p&gt;
    &lt;p&gt;But - it doesn‚Äôt exist. And the fundamental reason why‚Ä¶ is a lack of trust.&lt;/p&gt;
    &lt;p&gt;The new app would need direct access to your bank statements, emails, and chatbot history, and the content of every page you visit on your browser. It is way too hard for an upstart, even with a community behind them, to command the requisite trust.&lt;/p&gt;
    &lt;p&gt;Let‚Äôs not be hand-wavey about it - and be more precise what this web app would need to be entrusted to do.&lt;/p&gt;
    &lt;p&gt;(Expand to see why / how)&lt;/p&gt;
    &lt;head&gt;It needs to search through my email&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Why? When I buy something from amazon, it could be dog food or it could be a drone. Those feel like different spend categories. My email can be used to disambiguate this. Or it could just be used to receive bank statements.&lt;/item&gt;
      &lt;item&gt;How? For each bank item, search my email, and categorise it.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head&gt;It needs to pull in all my bank statements&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Why? It's the source of truth&lt;/item&gt;
      &lt;item&gt;How? This either needs to come in by digesting my monthly bank statement that's emailed, or using some third party API (like yodlee). Yodlee is expensive - but not that complicated. Under the hood, it literally just uses web scraping.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head&gt;It need to categorise each line item and save it to a database&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Why? The classification is too heavy to rerun every time data is required. It requires searching through emails. It might even require the user to label things.&lt;/item&gt;
      &lt;item&gt;How? A simple SQL database would do just fine&lt;/item&gt;
    &lt;/list&gt;
    &lt;head&gt;It needs understanding of my life - ideally from ChatGPT&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Why? I need to be able to correlate my financial data back to my life, including when I moved to cape town, where I went on holiday. This is all currently deducable from ChatGPT conversations. (WhatsApp could also work).&lt;/item&gt;
      &lt;item&gt;How? This is hard! There is no API access to conversations from ChatGPT. So the only way to do this, is to build a ChatGPT integration - to cross their moat on their terms, which is to have GPT-5 ferry across the data for you. So we can see that OpenAI is terribly misaligned with our needs here (and wait until the Ads!)&lt;/item&gt;
    &lt;/list&gt;
    &lt;head&gt;It needs a user interface that contains chat‚Ä¶but not only chat&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Why? Chat is not the best place to edit your financial goals - even though it might be a great way to set them via a journalling-like flow. It's not the best place to view a dashboard.&lt;/item&gt;
      &lt;item&gt;How? It needs to include a normal web app&lt;/item&gt;
    &lt;/list&gt;
    &lt;head&gt;It needs a browser extension that can show my remaining balance&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Why? A browser extension can understand every page you're on, and show an overlay&lt;/item&gt;
      &lt;item&gt;How? It would use some a small model to parse the HTML of every page. It would edit the HTML to show a balance overlay, and a little show notification on its little icon to provide evidence that it's the thing showing the overlay.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head&gt;It needs to not feel self hosted&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Why? The point of this whole thing is make our lives easier.&lt;/item&gt;
      &lt;item&gt;How? It's tricky‚Ä¶because if it's not self hosted, who are you going to trust with all this data?&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Our patterns for computing with sensitive data make this unfeasible.&lt;/p&gt;
    &lt;p&gt;Sometimes, like with ChatGPT conversations, we don‚Äôt have a key to the big company vaults where we keep our data safe.&lt;/p&gt;
    &lt;p&gt;And even when there is access via key, like with gmail, we must be very discerning before clicking ‚Äúyes‚Äù on an OAuth Dialog; minting a new key for that little banking add-on is quite a big risk.&lt;/p&gt;
    &lt;p&gt;Because once access is granted, it can never really be revoked. In the unlikely event that you do remember to change the locks after you retire the add-on, it could still retain your data. Because when the add-on has a key to your vault - even read-only access, it is impossible to know what they‚Äôll do with the data inside it. They can copy it. They can share it. They can sell it.&lt;/p&gt;
    &lt;p&gt;Yes, some of that‚Äôs illegal. But possession is 9/10ths of the law, and they have possession of our data. The courts are too weak to meaningfully enforce what web apps do, world-wide.&lt;/p&gt;
    &lt;p&gt;And the world-wideness of the web so useful, so formidable, and so precious; it‚Äôs given us 4 billion websites, many of them created by The Little Guys. In the era of LLM‚Äôs and of a hyper-personalised private web, we need to find a way for The Little Guys to be trusted enough with our data, to do their magic.&lt;/p&gt;
    &lt;head rend="h2"&gt;Enforcing conditions is better than handing out keys&lt;/head&gt;
    &lt;p&gt;Instead of choosing who to trust unconditionally with our data‚Ä¶why don‚Äôt we introduced a few conditions? With the right conditions, we can lower the bar enough to be open to the public, and all the well intentioned Little Guys.&lt;/p&gt;
    &lt;p&gt;We need a runtime environment with right conditions. The internet already got this far, via a well selected runtime environment: the browser‚Äôs javascript engine. Because of it, you can click a link, without thinking twice, and run code written by who-knows-who from who-knows-where on the world-wide-web, on your own personal computer, which has all kinds of sensitive information on it.&lt;/p&gt;
    &lt;p&gt;We need to add another runtime environment, with the right conditions. All your data should be moved into that runtime environment - so there is a well organised buffet available to any program you elect to click on.&lt;/p&gt;
    &lt;p&gt;What are the right conditions?&lt;/p&gt;
    &lt;p&gt;There is only one.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;You are not allowed to transmit or store my sensitive information anywhere (unless I give my consent).&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Under this condition, sensitive information taints other information, as if it‚Äôs radioactive. Any other information it affects becomes sensitive itself, whether it‚Äôs an intermediate variable or a final output.&lt;/p&gt;
    &lt;p&gt;Isn‚Äôt that too restrictive?&lt;/p&gt;
    &lt;p&gt;Most code today is riddled with network requests. How can code shared with us be useful without them? Where is it supposed to send its output?&lt;/p&gt;
    &lt;p&gt;The code can still make network requests; it just can‚Äôt include sensitive data inside those network requests.&lt;/p&gt;
    &lt;p&gt;And it can still derive outputs, and store the outputs‚Ä¶within the runtime environment, which has its own encrypted database. That output, like all other sensitive information, can be decrypted by and revealed to the authenticated user, in any custom format. That format could be a web app. It could even be browser overlay on amazon.com‚Ä¶in a very clear, ringfenced way.&lt;/p&gt;
    &lt;p&gt;How do we enforce the conditions?&lt;/p&gt;
    &lt;p&gt;‚ÄúConsent‚Äù isn‚Äôt some flaccid banner blocking half the landing page; it must be demonstrably impossible to circumvent. To do this, we need to invoke two fairly low-key computing patterns&lt;/p&gt;
    &lt;p&gt;First, we need a reliable way to tell which information has been tainted as sensitive. For that, we turn to the field of Information flow, where there are well established mechanisms to evaluate the taint, in modern languages like javascript.&lt;/p&gt;
    &lt;p&gt;Then, we need a publicly verifiable proof that the runtime environment housing the information and running the code is actually enforcing the conditions as it promises - no more, no less, no different. Open sourcing the runtime environment is insufficient proof. For this, we need remote attestation, which can be performed within secure compute environments on most modern clouds.&lt;/p&gt;
    &lt;head rend="h3"&gt;How do we make this happen?&lt;/head&gt;
    &lt;p&gt;For this way of computing to gain any relevance, there needs to be a compelling enough sell to enough users.&lt;/p&gt;
    &lt;p&gt;That seems really, really hard.&lt;/p&gt;
    &lt;p&gt;Whatever the path is, I don‚Äôt see it clearly, but it seems to need to trace through two rough milestones.&lt;/p&gt;
    &lt;p&gt;1. An active community of technical users hacking away in it &lt;lb/&gt; Those in it might say: ‚ÄúI really buy into the principles of this thing. And it seems useful - look what that person made on it! It seems like a web version of claude code + skills + marketplace, but with an encrypted database, and permissions that let you feel safe using yolo mode. I‚Äôm going to try it.‚Äù&lt;/p&gt;
    &lt;p&gt;2. A breakout to heavy users of ChatGPT (et al), with a polished, managed product &lt;lb/&gt; At this juncture, a product manager type, for example, might say: ‚ÄúOh, wow, I see how this personalised web OS thing would be useful. Let me get out my credit card, bring all my data onto this thing, and try some of these plugins‚Äù.&lt;/p&gt;
    &lt;head rend="h4"&gt;Here are some questions that linger for me:&lt;/head&gt;
    &lt;p&gt;What should the value proposition of the polished, managed product be - and what might it replace (ChatGPT / Notion / Chrome / Tampermonkey)? Can you sell the long tail of features, as a killer feature? How might we aim smaller - should the first step be a standalone service that makes it vercel-easy to serve out of attestable images? How should schema sharing interleave with code sharing, to permit extensibility? What can we augment or transfer from Claude code - given what can already be hacked together there? Is taint tracking watertight enough? How different will runtime compatible code need to be, and what effect will that have on ease of writing/generating? Can/should people be financially incentivised to create useful programs to run in this environment? How can the environment permit sensitive data to leave, at the user‚Äôs behest, with graceful UX? How might a browser safely delineate what UI elements are generated from what code?&lt;/p&gt;
    &lt;p&gt;One thing is clear:&lt;/p&gt;
    &lt;head rend="h4"&gt;It‚Äôs going to take a community&lt;/head&gt;
    &lt;p&gt;It seems to be forming around Alex Komoroske‚Äôs public benefit corp, common.tools‚Ä¶which is where the central idea of an attestable exfiltration proof runtime environment above comes from.&lt;/p&gt;
    &lt;p&gt;After bumping against the trust problem myself, I signed up to the waitlist, which spawned a few really interesting conversations. Here's hoping there are a few more in the comments section! üòÄ&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45723828</guid><pubDate>Mon, 27 Oct 2025 17:27:18 +0000</pubDate></item><item><title>Carl Bohland's Auto Wash Bowl (2015)</title><link>https://news.wttw.com/2015/07/29/ask-geoffrey</link><description></description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45724159</guid><pubDate>Mon, 27 Oct 2025 17:51:16 +0000</pubDate></item><item><title>Creating an All-Weather Driver</title><link>https://waymo.com/blog/2025/10/creating-an-all-weather-driver</link><description>&lt;doc fingerprint="39afdc53bfb06cf0"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Creating an all-weather Driver&lt;/head&gt;
    &lt;p&gt;Life doesn't freeze when winter comes‚Äîif anything, that's when riders need reliable transportation most, when being exposed to the elements becomes less appealing. Today, the Waymo Driver successfully navigates rain, fog, sandstorms, and freezing temperatures. As we expand to more cities across the U.S. and globally, we're applying the same systematic, scientific approach that enabled us to validate the Waymo Driver for these conditions to advance our capabilities for snowier, winter weather.&lt;/p&gt;
    &lt;p&gt;Our proven, safety-guided methodology involves four key steps:&lt;/p&gt;
    &lt;p&gt;Understanding the Challenge&lt;/p&gt;
    &lt;p&gt;Snow isn't a single phenomenon‚Äîit's a spectrum of conditions that can affect a human or autonomous driver in multiple ways. Atmospheric conditions can range from a light dusting to a complete whiteout, while road surfaces may be snow-covered or have icy patches, and environmental factors like snow buildup along roadsides add further complexity. For years, we've been advancing our system in some of the snowiest conditions across the country ‚Äîregularly driving in Upstate New York, Michigan's Upper Peninsula, and the Sierra. We've amassed tens of thousands of miles in diverse, snowy conditions. This has allowed the Waymo Driver‚Äôs AI to learn from real driving experience and train to navigate a wide range of winter weather.&lt;/p&gt;
    &lt;p&gt;Designing Generalizable Solutions&lt;/p&gt;
    &lt;p&gt;At Waymo, we're building one autonomous system that works across diverse conditions‚Äîthe same Waymo Driver navigating foggy San Francisco can navigate snowy Denver. Our 6th-generation Driver is informed by over 100 million fully autonomous miles of driving experience, combining state-of-the-art hardware and AI to adapt to and sustain fully autonomous operations in cities with harsher weather.&lt;/p&gt;
    &lt;p&gt;The Waymo Driver uses cameras, radar, and lidar to perceive the world around it, with each sensor providing a complementary field of view that's especially helpful in inclement weather. Its automated cleaning system ‚Äìusing clever engineering and heating elements ‚Äì keeps the sensors clear so the vehicle can continue serving riders without needing to pull over.&lt;/p&gt;
    &lt;p&gt;Our system provides context not only about where it's operating, but also about the conditions it‚Äôs operating under. We're creating state-of-the-art AI, building on top of our existing models with richer inputs and advanced capabilities designed to navigate winter conditions. For example, our AI can distinguish between where there's snow, slush, ice, and normal road surface. The Waymo Driver then uses this information to adjust its driving behavior to match the road conditions in real-time, allowing the Waymo Driver to navigate based on what it sees (and feels), also inferring insights from other road users‚Äîadapting to blocked roads, detours, and changing surface conditions. When the system detects lower traction, it automatically adjusts its speed, acceleration, and braking. Each vehicle essentially acts as a mobile weather station, gathering data to inform its own driving decisions and share with the rest of the fleet in the city. These responses are consistent and thoroughly tested, providing predictable and safe navigation in challenging conditions.&lt;/p&gt;
    &lt;p&gt;Rigorously Validating Our Capabilities&lt;/p&gt;
    &lt;p&gt;We validate our generalizable system through real-world driving, closed-course testing, and large-scale simulation. With our growing operations in snowy cities like Detroit, Denver, and Washington D.C., in addition to visits to other areas, we're deepening our understanding of winter weather conditions and validating our capabilities. At closed-course testing facilities, we push the system to its limits in controlled environments, teaching it to recognize and respond to extreme scenarios like losing traction on ice. Then, we expand our learning year-round through simulation, long after the last snowflake has melted, so the Waymo Driver is prepared for rare and unusual events, like once-in-100-year snow New Orleans experienced this past winter.&lt;/p&gt;
    &lt;p&gt;Scaling Responsibly&lt;lb/&gt;Once we've validated our technology and operations by our Safety Framework and high caliber for rider excellence, we expand our service with clear guidelines about when our vehicles will operate based on local conditions. As we scale, we're also refining our operations to support winter service‚Äîfrom keeping our fleet clean and charged in freezing temperatures to optimizing the rider experience. Winter weather is complex, but we're committed to providing reliable service when riders need it most. As we continue expanding to more cities around the world, our progress is guided by safety, and riders can trust that the Waymo Driver is ready when we open our doors.&lt;lb/&gt;Looking for an all-weather Driver instead of all-weather tires? Follow along on our progress to bring Waymo to more cities at waymo.com/updates.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45724913</guid><pubDate>Mon, 27 Oct 2025 18:57:57 +0000</pubDate></item></channel></rss>