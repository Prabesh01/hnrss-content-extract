<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Hacker News: Front Page</title><link>https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml</link><description>Hacker News RSS</description><atom:link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Fri, 03 Oct 2025 11:08:07 +0000</lastBuildDate><item><title>Potential issues in curl found using AI assisted tools</title><link>https://mastodon.social/@bagder/115241241075258997</link><description>&lt;doc fingerprint="f8eb8f2f2d953eed"&gt;
  &lt;main&gt;
    &lt;p&gt;To use the Mastodon web application, please enable JavaScript. Alternatively, try one of the native apps for Mastodon for your platform.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45449348</guid><pubDate>Thu, 02 Oct 2025 13:29:55 +0000</pubDate></item><item><title>Signal Protocol and Post-Quantum Ratchets</title><link>https://signal.org/blog/spqr/</link><description>&lt;doc fingerprint="ac708592c921c484"&gt;
  &lt;main&gt;
    &lt;p&gt;We are excited to announce a significant advancement in the security of the Signal Protocol: the introduction of the Sparse Post Quantum Ratchet (SPQR). This new ratchet enhances the Signal Protocol’s resilience against future quantum computing threats while maintaining our existing security guarantees of forward secrecy and post-compromise security.&lt;/p&gt;
    &lt;p&gt;The Signal Protocol is a set of cryptographic specifications that provides end-to-end encryption for private communications exchanged daily by billions of people around the world. After its publication in 2013, the open source Signal Protocol was adopted not only by the Signal application but also by other major messaging products. Technical information on the Signal Protocol can be found in the specifications section of our docs site.&lt;/p&gt;
    &lt;p&gt;In a previous blog post, we announced the first step towards advancing quantum resistance for the Signal Protocol: an upgrade called PQXDH that incorporates quantum-resistent cryptographic secrets when chat sessions are established in order to protect against harvest-now-decrypt-later attacks that could allow current chat sessions to become compromised if a sufficiently powerful quantum computer is developed in the future. However, the Signal Protocol isn’t just about protecting cryptographic material and keys at the beginning of a new chat or phone call; it’s also designed to minimize damage and heal from compromise as that conversation continues.&lt;/p&gt;
    &lt;p&gt;We refer to these security goals as Forward Secrecy (FS) and Post-Compromise Security (PCS). FS and PCS can be considered mirrors of each other: FS protects past messages against future compromise, while PCS protects future messages from past compromise. Today, we are happy to announce the next step in advancing quantum resistance for the Signal Protocol: an additional regularly advancing post-quantum ratchet called the Sparse Post Quantum Ratchet, or SPQR. On its own, SPQR provides secure messaging that provably achieves these FS and PCS guarantees in a quantum safe manner. We mix the output of this new ratcheting protocol with Signal’s existing Double Ratchet, in a combination we refer to as the Triple Ratchet.&lt;/p&gt;
    &lt;p&gt;What does this mean for you as a Signal user? First, when it comes to your experience using the app, nothing changes. Second, because of how we’re rolling this out and mixing it in with our existing encryption, eventually all of your conversations will move to this new protocol without you needing to take any action. Third, and most importantly, this protects your communications both now and in the event that cryptographically relevant quantum computers eventually become a reality, and it allows us to maintain our existing security guarantees of forward secrecy and post-compromise security as we proactively prepare for that new world.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Current State of the Signal Protocol&lt;/head&gt;
    &lt;p&gt;The original Signal ratchet uses hash functions for FS and a set of elliptic-curve Diffie Hellman (ECDH) secret exchanges for PCS. The hash functions are quantum safe, but elliptic-curve cryptography is not. An example is in order: our favorite users, Alice and Bob, establish a long-term connection and chat over it regularly. During that session’s lifetime, Alice and Bob regularly agree on new ECDH secrets and use them to “ratchet” their session. Mean ol’ Mallory records the entire (encrypted) communication, and really wants to know what Alice and Bob are talking about.&lt;/p&gt;
    &lt;p&gt;The concept of a “ratchet” is crucial to our current non-quantum FS/PCS protection. In the physical world, a ratchet is a mechanism that allows a gear to rotate forward, but disallows rotation backwards. In the Signal Protocol, it takes on a similar role. When Alice and Bob “ratchet” their session, they replace the set of keys they were using prior with a new set based on both the older secrets and a new one they agree upon. Given access to those new secrets, though, there’s no (non-quantum) way to compute the older secrets. By being “one-way”, this ratcheting mechanism provides FS.&lt;/p&gt;
    &lt;p&gt;The ECDH mechanism allows Alice and Bob to generate new, small (32 bytes) data blobs and attach them to every message. Whenever each party receives a message from the other, they can locally (and relatively cheaply) use this data blob to agree on a new shared secret, then use that secret to ratchet their side of the protocol. Crucially, ECDH also allows Alice and Bob to both agree on the new secret without sending that secret itself over their session, and in fact without sending anything over the session that Mallory could use to determine it. This description of Diffie-Hellman key exchange provides more details on the concepts of such a key exchange, and this description of ECDH provides specific details on the variant used by the current Signal protocol.&lt;/p&gt;
    &lt;p&gt;Sometime midway through the lifetime of Alice and Bob’s session, Mallory successfully breaches the defences of both Alice and Bob, gaining access to all of the (current) secrets used for their session at the time of request. Alice and Bob should have the benefits of Forward Secrecy - they’ve ratcheted sometime recently before the compromise, so no messages earlier than their last ratchet are accessible to Mallory, since ratcheting isn’t reversible. They also retain the benefits of Post-Compromise Security. Their ratcheting after Mallory’s secret access agrees upon new keys that can’t be gleaned just from the captured data they pass between each other, re-securing the session.&lt;/p&gt;
    &lt;p&gt;Should Mallory have access to a quantum computer, though, things aren’t so simple. Because elliptic curve cryptography is not quantum resistant, it’s possible that Mallory could glean access to the secret that Alice and Bob agreed upon, just by looking at the communication between them. Given this, Alice and Bob’s session will never “heal”; Mallory’s access to their network traffic from this point forward will allow her to decrypt all future communications.&lt;/p&gt;
    &lt;head rend="h2"&gt;Mixing In Quantum Security&lt;/head&gt;
    &lt;p&gt;In order to make our security guarantees stand up to quantum attacks, we need to mix in secrets generated from quantum secure algorithms. In PQXDH, we did this by performing an additional round of key agreement during the session-initiating handshake, then mixing the resulting shared secret into the initial secret material used to create Signal sessions. To handle FS and PCS, we need to do continuous key agreement, where over the lifetime of a session we keep generating new shared secrets and mixing those keys into our encryption keys.&lt;/p&gt;
    &lt;p&gt;Luckily there is a tool designed exactly for this purpose: the quantum-secure Key-Encapsulation Mechanism (KEM). KEMs share similar behavior to the Diffie-Hellman mechanisms we described earlier, where two clients provide each other with information, eventually deciding on a shared secret, without anyone who intercepts their communications being able to access that secret. However, there is one important distinction for KEMs - they require ordered, asymmetric messages to be passed between their clients. In ECDH, both clients send the other some public parameters, and both combine these parameters with their locally held secrets and come up with an identical shared secret. In the standardized ML-KEM key-encapsulation mechanism, though, the initiating client generates a pair of encapsulation key (EK) and decapsulation key (DK) (analogous to a public and private key respectively) and sends the EK. The receiving client receives it, generates a secret, and wraps it into a ciphertext (CT) with that key. The initiating client receives that CT and decapsulates with its previously generated DK. In the end, both clients have access to the new, shared secret, just through slightly different means.&lt;/p&gt;
    &lt;p&gt;Wanting to integrate this quantum-secure key sharing into Signal, we could take a simple, naive approach for each session. When Alice initiates a session with Bob,&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Alice, with every message she sends, sends an EK&lt;/item&gt;
      &lt;item&gt;Bob, with every message he receives, generates a secret and a CT, and sends the CT back&lt;/item&gt;
      &lt;item&gt;Alice, on receiving a CT, extracts the secret with her DK and mixes it in&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This initially simple-looking approach, though, quickly runs into a number of issues we’ll need to address to make our protocol actually robust. First, encapsulation keys and CTs are large - over 1000 bytes each for ML-KEM 768, compared to the 32 bytes required for ECDH. Second, while this protocol works well when both clients are online, what happens when a client is offline? Or a message is dropped or reordered? Or Alice wants to send 10 messages before Bob wants to send one?&lt;/p&gt;
    &lt;p&gt;Some of these problems have well-understood solutions, but others have trade-offs that may shine in certain circumstances but fall short in others. Let’s dive in and come to some conclusions.&lt;/p&gt;
    &lt;head rend="h2"&gt;Who Wants What When&lt;/head&gt;
    &lt;p&gt;How does Alice decide what to send based on what Bob needs next, and vice versa? If Bob hasn’t received an EK yet, she shouldn’t send the next one. What does Bob send when he hasn’t yet received an EK from Alice, or when he has, but he’s already responded to it? This is a common problem when remote parties send messages to communicate, so there’s a good, well-understood solution: a state machine. Alice and Bob both keep track of “what state am I in”, and base their decisions on that. When sending or receiving a message, they might also change their state. For example:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Alice wants to send a message, but she’s in a StartingA state, so she doesn’t have an EK. So, she generates an EK/DK pair, stores them locally, and transitions to the SendEK state&lt;/item&gt;
      &lt;item&gt;Alice wants to send a message and is in the SendEK state. She sends the EK along with the message&lt;/item&gt;
      &lt;item&gt;Alice wants to send another message, but she’s still in the SendEK state. So, she sends the EK with the new message as well&lt;/item&gt;
      &lt;item&gt;Bob receives the message with the EK. He generates a secret and uses the EK to create a CT. He transitions to the SendingCT state.&lt;/item&gt;
      &lt;item&gt;Bob wants to send a message and he’s in the SendingCT state. He sends the CT along with the message&lt;/item&gt;
      &lt;item&gt;Bob wants to send a message and he’s in the SendingCT state. He sends the CT along with the message&lt;/item&gt;
      &lt;item&gt;… etc …&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;By crafting a set of states and transitions, both sides can coordinate what’s sent. Note, though, that even in this simple case, we see problems. For example, we’re sending our (large) EK and (large) CT multiple times.&lt;/p&gt;
    &lt;head rend="h2"&gt;Say (or Send) Less&lt;/head&gt;
    &lt;p&gt;We’ve already mentioned that the size of the data we’re sending has increased pretty drastically, from 32 bytes to over 1000 per message. But bandwidth is expensive, especially on consumer devices like client phones, that may be anywhere in the world and have extremely varied costs for sending bytes over the wire. So let’s discuss strategies for conserving that bandwidth.&lt;/p&gt;
    &lt;p&gt;First, the simplest approach - don’t send a new key with every message. Just, for example, send with every 50 messages, or once a week, or every 50 messages unless you haven’t sent a key in a week, or any other combination of options. All of these approaches tend to work pretty well in online cases, where both sides of a session are communicating in real-time with no message loss. But in cases where one side is offline or loss can occur, they can be problematic. Consider the case of “send a key if you haven’t sent one in a week”. If Bob has been offline for 2 weeks, what does Alice do when she wants to send a message? What happens if we can lose messages, and we lose the one in fifty that contains a new key? Or, what happens if there’s an attacker in the middle that wants to stop us from generating new secrets, and can look for messages that are 1000 bytes larger than the others and drop them, only allowing keyless messages through?&lt;/p&gt;
    &lt;p&gt;Another method is to chunk up a message. Want to send 1000 bytes? Send 10 chunks of 100 bytes each. Already sent 10 chunks? Resend the first chunk, then the second, etc. This smooths out the total number of bytes sent, keeping individual message sizes small and uniform. And often, loss of messages is handled. If chunk 1 was lost, just wait for it to be resent. But it runs into an issue with message loss - if chunk 99 was lost, the receiver has to wait for all of chunks 1-98 to be resent before it receives the chunk it missed. More importantly, if a malicious middleman wants to stop keys from being decided upon, they could always drop chunk 3, never allowing the full key to pass between the two parties.&lt;/p&gt;
    &lt;p&gt;We can get around all of these issues using a concept called erasure codes. Erasure codes work by breaking up a larger message into smaller chunks, then sending those along. Let’s consider our 1000 byte message being sent as 100 byte chunks again. After chunk #10 has been sent, the entirety of the original 1000 byte message has been sent along in cleartext. But rather than just send the first chunk over again, erasure codes build up a new chunk #11, and #12, etc. And they build them in such a way that, once the recipient receives any 10 chunks in any order, they’ll be able to reconstruct the original 1000 byte message.&lt;/p&gt;
    &lt;p&gt;When we put this concept of erasure code chunks together with our previous state machine, it gives us a way to send large blocks of data in small chunks, while handling messages that are dropped. Crucially, this includes messages dropped by a malicious middleman: since any N chunks can be used to recreate the original message, a bad actor would need to drop all messages after #N-1 to disallow the data to go through, forcing them into a complete (and highly noticeable) denial of service. Now, if Alice wants to send an EK to Bob, Alice will:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Transition from the StartingA state to the SendingEK state, by generating a new EK and chunking it&lt;/item&gt;
      &lt;item&gt;While in the SendingEK state, send a new chunk of the EK along with any messages she sends&lt;/item&gt;
      &lt;item&gt;When she receives confirmation that the recipient has received the EK (when she receives a chunk of CT), transition to the ReceivingCT state&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;On Bob’s side, he will:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Transition from the StartingB state to the ReceivingEK state when he receives its first EK chunk&lt;/item&gt;
      &lt;item&gt;Keep receiving EK chunks until he has enough to reconstruct the EK&lt;/item&gt;
      &lt;item&gt;At that point, reconstruct the EK, generate the CT, chunk the CT, and transition to the SendingCT state&lt;/item&gt;
      &lt;item&gt;From this point on, he will send a chunk of the CT with every message&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;One interesting way of looking at this protocol so far is to consider the messages flowing from Alice to Bob as potential capacity for sending data associated with post-quantum ratcheting: each message that we send, we could also send additional data like a chunk of EK or of the CT. If we look at Bob’s side, above, we notice that sometimes he’s using that capacity (IE: in step 4 when he’s sending CT chunks) and sometimes he’s not (if he sends a message to Alice during step 2, he has no additional data to send). This capacity is pretty limited, so using more of it gives us the potential to speed up our protocol and agree on new secrets more frequently.&lt;/p&gt;
    &lt;head rend="h2"&gt;A Meditation On How Faster Isn’t Always Better&lt;/head&gt;
    &lt;p&gt;We want to generate shared secrets, then use them to secure messages. So, does that mean that we want to generate shared secrets as fast as possible? Let’s introduce a new term: an epoch. Alice and Bob start their sessions in epoch 0, sending the EKs for epoch 1 (EK#1) and associated ciphertext (CT#1) to each other. Once that process completes, they have a new shared secret they use to enter epoch 1, after which all newly sent messages are protected by the new secret. Each time they generate a new shared secret, they use it to enter a new epoch. Surely, every time we enter a new epoch with a new shared secret, we protect messages before that secret (FS) and after that secret (PCS), so faster generation is better? It seems simple, but there’s an interesting complexity here that deserves attention.&lt;/p&gt;
    &lt;p&gt;First, let’s discuss how to do things faster. Right now, there’s a lot of capacity we’re not using: Bob sends nothing while Alice sends an EK, and Alice sends nothing while Bob sends a CT. Speeding this up isn’t actually that hard. Let’s change things so that Alice sends EK#1, and once Bob acknowledges its receipt, Alice immediately generates and sends EK#2. And once she notices Bob has received that, she generates and sends EK#3, etc. Whenever Alice sends a new message, she always has data to send along with it (new EK chunks), so she’s using its full capacity. Bob doesn’t always have a new CT to send, but he is receiving EKs as fast as Alice can send them, so he often has a new CT to send along.&lt;/p&gt;
    &lt;p&gt;But now let’s consider what happens when an attacker gains access to Alice. Let’s say that Alice has sent EK#1 and EK#2 to Bob, and she’s in the process of sending EK#3. Bob has acknowledged receipt of EK#1 and EK#2, but he’s still in the process of sending CT#1, since in this case Bob sends fewer messages to Alice than vice versa. Because Alice has already generated 3 EKs she hasn’t used, Alice needs to keep the associated DK#1, DK#2, and DK#3 around. So, if at this point someone maliciously gains control of Alice’s device, they gain access to both the secrets associated with the current epoch (here, epoch 0) and to the DKs necessary to reconstruct the secrets to other epochs (here, epochs 1, 2, and 3) using only the over-the-wire CT that Bob has yet to send. This is a big problem: by generating secrets early, we’ve actually made the in-progress epochs and any messages that will be sent within them less secure against this single-point-in-time breach.&lt;/p&gt;
    &lt;p&gt;To test this out, we at Signal built a number of different state machines, each sending different sets of data either in parallel or serially. We then ran these state machines in numerous simulations, varying things like the ratio of messages sent by Alice vs Bob, the amount of data loss or reordering, etc. And while running these simulations, we tracked what epochs’ secrets were exposed at any point in time, assuming an attacker were to breach either Alice’s or Bob’s secret store. The results showed that, in general, while simulations that handled multiple epochs’ secrets in parallel (IE: by sending EK#2 before receipt of CT#1) did generate new epochs more quickly, they actually made more messages vulnerable to a single breach.&lt;/p&gt;
    &lt;head rend="h2"&gt;But Let’s Still Be Efficient&lt;/head&gt;
    &lt;p&gt;This still leaves us with a problem, though: the capacity present in messages we send in either direction is still a precious resource, and we want to use it as efficiently as possible. And our simple approach of Alice’s “send EK, receive CT, repeat” and Bob’s “receive EK, send CT, repeat” leaves lots of time where Alice and Bob have nothing to send, should that capacity be available.&lt;/p&gt;
    &lt;p&gt;To improve our use of our sending capacity, we decided to take a harder look into the ML-KEM algorithm we’re using to share secrets, to see if there was room to improve. Let’s break things down more and share some actual specifics on the ML-KEM algorithm.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Alice generates an EK of 1184 bytes to send to Bob, and an associated DK&lt;/item&gt;
      &lt;item&gt;Bob receives the EK&lt;/item&gt;
      &lt;item&gt;Bob samples a new shared secret (32 bytes), which he encrypts with EK into a CT of 1088 bytes to send to Alice&lt;/item&gt;
      &lt;item&gt;Alice receives the CT, uses the DK to decrypt it, and now also has access to the 32 byte shared secret&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Diving in further, we can break out step #3 into some sub-steps&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Alice generates an EK of 1184 bytes to send to Bob, and an associated DK&lt;/item&gt;
      &lt;item&gt;Bob receives the EK&lt;/item&gt;
      &lt;item&gt;Bob samples a new shared secret (32 bytes), which he encrypts with EK into a CT of 1088 bytes to send to Alice1&lt;list rend="ol"&gt;&lt;item&gt;Bob creates a new shared secret S and sampled randomness R by sampling entropy and combining it with a hash of EK&lt;/item&gt;&lt;item&gt;Bob hashes the EK into a Hash&lt;/item&gt;&lt;item&gt;Bob pulls 32 bytes of the EK, a Seed&lt;/item&gt;&lt;item&gt;Bob uses the Seed and R to generate the majority of the CT&lt;/item&gt;&lt;item&gt;Bob then uses S and EK to generate the last portion of the CT&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Alice receives the CT, uses the DK to decrypt it, and now also has access to the 32 byte shared secret&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Step 3.d, which generates 960 bytes of the 1088-byte CT, only needs 64 bytes of input: a Seed that’s 32 of EK’s bytes, and the hash of EK, which is an additional 32. If we combine these values and send them first, then most of EK and most of the CT can be sent in parallel from Alice to Bob and Bob to Alice respectively. Our more complicated but more efficient secret sharing now looks like this:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Alice generates EK and DK. Alice extracts the 32-byte Seed from EK&lt;/item&gt;
      &lt;item&gt;Alice sends 64 bytes EK1 (Seed + Hash(EK)) to Bob. Bob sends nothing during this time.&lt;/item&gt;
      &lt;item&gt;Bob receives the Seed and Hash, and generates the first, largest part of the CT from them (CT1)&lt;/item&gt;
      &lt;item&gt;After this point, Alice sends EK2 (the rest of the EK minus the Seed), while Bob sends CT1&lt;/item&gt;
      &lt;item&gt;Bob eventually receives EK2, and uses it to generate the final portion of the CT (CT2)&lt;/item&gt;
      &lt;item&gt;Once Alice tells Bob that she has received all of CT1, Bob sends Alice CT2. Alice sends nothing during this time.&lt;/item&gt;
      &lt;item&gt;With both sides having all of the pieces of EK and the CT that they need, they extract their shared secret and increment their epoch&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;There are still places in this algorithm (specifically steps 2 and 6) where one side has nothing to send. But during those times, the other side has only a very small amount of information to send, so the duration of those steps is minimal compared to the rest of the process. Specifically, while the full EK is 37 chunks and the full CT is 34, the two pieces of the new protocol which must be sent without data being received (EK1 and CT2) are 2 and 4 chunks respectively, while the pieces that can be sent while also receiving (EK2 and CT1) are the bulk of the data, at 36 and 30 chunks respectively. Far more of our sending capacity is actually used with this approach.&lt;/p&gt;
    &lt;p&gt;Remember that all of this is just to perform a quantum-safe key exchange that gives us a secret we can mix into the bigger protocol. To help us organize our code, our security proofs, and our understanding better we treat this process as a standalone protocol that we call the ML-KEM Braid.&lt;/p&gt;
    &lt;p&gt;This work was greatly aided by the authors of the libcrux-ml-kem Rust library, who graciously exposed the APIs necessary to work with this incremental version of ML-KEM 768. With this approach completed, we’ve been able to really efficiently use the sending capacity of messages sent between two parties to share secrets as quickly as possible without exposing secrets from multiple epochs to potential attackers.&lt;/p&gt;
    &lt;head rend="h2"&gt;Mixing Things Up - The Triple Ratchet&lt;/head&gt;
    &lt;p&gt;There are plenty of details to add to make sure that we reached every corner - check those out in our online protocol documentation - but this basic idea lets us build secure messaging that has post-quantum FS and PCS without using up anyone’s data. We’re not done, though! Remember, at the beginning of this post we said we wanted post-quantum security without taking away our existing guarantees.&lt;/p&gt;
    &lt;p&gt;While today’s Double Ratchet may not be quantum safe, it provides a high level of security today and we believe it will continue to be strong well into the future. We aren’t going to take that away from our users. So what can we do?&lt;/p&gt;
    &lt;p&gt;Our answer ends up being really simple: we run both the Double Ratchet and the Sparse Post Quantum Ratchet alongside each other and mix their keys together, into what we’re calling the Triple Ratchet protocol. When you want to send a message you ask both the Double Ratchet and SPQR “What encryption key should I use for the next message?” and they will both give you a key (along with some other data you need to put in a message header). Instead of either key being used directly, both are passed into a Key Derivation Function - a special function that takes random-enough inputs and produces a secure cryptographic key that’s as long as you need. This gives you a new “mixed” key that has hybrid security. An attacker has to break both our elliptic curve and ML-KEM to even be able to distinguish this key from random bits. We use that mixed key to encrypt our message.&lt;/p&gt;
    &lt;p&gt;Receiving messages is just as easy. We take the message header - remember it has some extra data in it - and send it to the Double Ratchet and SPQR and ask them “What key should I use to decrypt a message with this header?” They both return their keys and you feed them both into that Key Derivation Function to get your decryption key. After that, everything proceeds just like it always has.&lt;/p&gt;
    &lt;head rend="h2"&gt;Heterogeneous Rollout&lt;/head&gt;
    &lt;p&gt;So we’ve got this new, snazzy protocol, and we want to roll it out to all of our users across all of their devices… but none of the devices currently support that protocol. We roll it out to Alice, and Alice tries to talk to Bob, but Alice speaks SPQR and Bob doesn’t. Or we roll it out to Bob, but Alice wants to talk to Bob and Alice doesn’t know the new protocol Bob wants to use. How do we make this work?&lt;/p&gt;
    &lt;p&gt;Let’s talk about the simplest option: allowing downgrades. Alice tries to establish a session with Bob using SPQR and sends a message over it. Bob fails to read the message and establish the session, because Bob hasn’t been upgraded yet. Bob sends Alice an error, so Alice has to try again. This sounds fine, but in practice it’s not tenable. Consider what happens if Alice and Bob aren’t online at the same time… Alice sends a message at 1am, then shuts down. Bob starts up at 3am, sends an error, then shuts down. Alice gets that error when she restarts at 5am, then resends. Bob starts up at 7am and finally gets the message he should have received at 3am, 4 hours behind schedule.&lt;/p&gt;
    &lt;p&gt;To handle this, we designed the SPQR protocol to allow itself to downgrade to not being used. When Alice sends her first message, she attaches the SPQR data she would need to start up negotiation of the protocol. Noticing that downgrades are allowed for this session, Alice doesn’t mix any SPQR key material into the message yet. Bob ignores that data, because it’s in a location he glosses over, but since there’s no mixed in keys yet, he can still decrypt the message. He sends a response that lacks SPQR data (since he doesn’t yet know how to fill it in), which Alice receives. Alice sees a message without SPQR data, and understands that Bob doesn’t speak SPQR yet. So, she downgrades to not using it for that session, and they happily talk without SPQR protection.&lt;/p&gt;
    &lt;p&gt;There’s some scary potential problems here… let’s work through them. First off, can a malicious middleman force a downgrade and disallow Alice and Bob from using SPQR, even if both of them are able to? We protect against that by having the SPQR data attached to the message be MAC’d by the message-wide authentication code - a middleman can’t remove it without altering the whole message in such a way that the other party sees it, even if that other party doesn’t speak SPQR. Second, could some error cause messages to accidentally downgrade sometime later in their lifecycle, due either to bugs in the code or malicious activity? Crucially, SPQR only allows a downgrade when it first receives a message from a remote party. So, Bob can only downgrade if he receives his first message from Alice and notices that she doesn’t support SPQR, and Alice will only downgrade if she receives her first reply from Bob and notices that he doesn’t. After that first back-and-forth, SPQR is locked in and used for the remainder of the session.&lt;/p&gt;
    &lt;p&gt;Finally, those familiar with Signal’s internal workings might note that Signal sessions last a really long time, potentially years. Can we ever say “every session is protected by SPQR”, given that SPQR is only added to new sessions as they’re being initiated? To accomplish this, Signal will eventually (once all clients support the new protocol) roll out a code change that enforces SPQR for all sessions, and that archives all sessions which don’t yet have that protection. After the full rollout of that future update, we’ll be able to confidently assert complete coverage of SPQR.&lt;/p&gt;
    &lt;p&gt;One nice benefit to setting up this “maybe downgrade if the other side doesn’t support things” approach is that it also sets us up for the future: the same mechanisms that allow us to choose between SPQR or no-SPQR are designed to also allow us to upgrade from SPQR to some far-future (as yet unimagined) SPQRv2.&lt;/p&gt;
    &lt;head rend="h2"&gt;Making Sure We Get It Right&lt;/head&gt;
    &lt;p&gt;Complex protocols require extraordinary care. We have to ensure that the new protocol doesn’t lose any of the security guarantees the Double Ratchet gives us. We have to ensure that we actually get the post-quantum protection we’re aiming for. And even then, after we have full confidence in the protocol, we have to make sure that our implementation is correct and robust and stays that way as we maintain it. This is a tall order.&lt;/p&gt;
    &lt;p&gt;To make sure we got this right, we started by building the protocol on a firm foundation of fundamental research. We built on the years of research the academic community has put into secure messaging and we collaborated with researchers from PQShield, AIST, and NYU to explore what was possible with post-quantum secure messaging. In a paper at Eurocrypt 25 we introduced erasure code based chunking and proposed the high-level Triple Ratchet protocol, proving that it gave us the post-quantum security we wanted without taking away any of the security of the classic Double Ratchet. In a follow up paper at USENIX 25, we observed that there are many different ways to design a post-quantum ratchet protocol and we need to pick the one that protects user messages the best. We introduced and analyzed six different protocols and two stood out: one is essentially SPQR, the other is a protocol using a new KEM, called Katana, that we designed just for ratcheting. That second one is exciting, but we want to stick to standards to start!&lt;/p&gt;
    &lt;head rend="h2"&gt;Formal Verification From the Start&lt;/head&gt;
    &lt;p&gt;This research gave us the framework to think about protocol design and prove protocols are secure, but there is a big leap from an academic paper to code. Already when designing PQXDH - a much simpler protocol! - we found that formal verification was an important tool for getting the details right. With the Triple Ratchet we partnered with Cryspen and made formal verification part of the process from the beginning.&lt;/p&gt;
    &lt;p&gt;As we kept finding better protocol candidates - and we implemented around a dozen of them - we modeled them in ProVerif to prove that they had the security properties we needed. Rather than wrapping up a protocol design and performing formal verification as a last step we made it a core part of the design process. Now that the design is settled, this gives us machine verified proof that our protocol has the security properties we demand from it. We wrote our Rust code to closely match the ProVerif models, so it is easy to check that we’re modeling what we implement. In particular, ProVerif is very good at reasoning about state machines, which we’re already using, making the mapping from code to model much simpler.&lt;/p&gt;
    &lt;p&gt;We are taking formal verification further than that, though. We are using hax to translate our Rust implementation into F* on every CI run. Once the F* models are extracted, we prove that core parts of our highly optimized implementation are correct, that function pre-conditions and post-conditions cannot be violated, and that the entire crate is panic free. That last one is a big deal. It is great for usability, of course, because nobody wants their app to crash. But it also matters for correctness. We aggressively add assertions about things we believe must be true when the protocol is running correctly - and we crash the app if they are false. With hax and F*, we prove that those assertions will never fail.&lt;/p&gt;
    &lt;head rend="h2"&gt;Formal Verification Doesn’t Freeze Our Progress&lt;/head&gt;
    &lt;p&gt;Often when people think about formally verified protocol implementations, they imagine a one-time huge investment in verification that leaves you with a codebase frozen in time. This is not the case here. We re-run formal verification in our CI pipeline every time a developer pushes a change to GitHub. If the proofs fail then the build fails, and the developer needs to fix it. In our experience so far, this is usually as simple as adding a pre- or postcondition or returning an error when a value is out of bounds. For us, formal verification is a dynamic part of the development process and ensures that the quality is high on every merge.&lt;/p&gt;
    &lt;head rend="h2"&gt;TLDR&lt;/head&gt;
    &lt;p&gt;Signal is rolling out a new version of the Signal Protocol with the Triple Ratchet. It adds the Sparse Post-Quantum Ratchet, or SPQR, to the existing Double Ratchet to create a new Triple Ratchet which gives our users quantum-safe messaging without taking away any of our existing security promises. It’s being added in such a way that it can be rolled out without disruption. It’s relatively lightweight, not using much additional bandwidth for each message, to keep network costs low for our users. It’s resistant to meddling by malicious middlemen - to disrupt it, all messages after a certain time must be dropped, causing a noticeable denial of service for users. We’re rolling it out slowly and carefully now, but in such a way that we’ll eventually be able to say with confidence “every message sent by Signal is protected by this.” Its code has been formally verified, and will continue to be so even as future updates affect the protocol. It’s the combined effort of Signal employees and external researchers and contributors, and it’s only possible due to the continued work and diligence of the larger crypto community. And as a user of Signal, our biggest hope is that you never even notice or care. Except one day, when headlines scream “OMG, quantum computers are here”, you can look back on this blog post and say “oh, I guess I don’t have to care about that, because it’s already been handled”, as you sip your Nutri-Algae while your self-driving flying car wends its way through the floating tenements of Megapolis Prime.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Those that are interested can look at https://nvlpubs.nist.gov/nistpubs/fips/nist.fips.203.pdf and note that Algorithm 17 uses randomness plus the hash of EK to generate a shared secret and random value, then that random value is used in Algorithm 14 to create c1. The rest of ekPKE is only used by Algorithm 14 to generate c2. ↩&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45451527</guid><pubDate>Thu, 02 Oct 2025 16:06:10 +0000</pubDate></item><item><title>Playball – Watch MLB games from a terminal</title><link>https://github.com/paaatrick/playball</link><description>&lt;doc fingerprint="607031164bc1d92f"&gt;
  &lt;main&gt;
    &lt;p&gt;Watch MLB games from the comfort of your own terminal&lt;/p&gt;
    &lt;p&gt;MLB Gameday and MLB.tv are great, but sometimes you want to keep an eye on a game a bit more discreetly. &lt;code&gt;playball&lt;/code&gt; puts the game in a terminal window.&lt;/p&gt;
    &lt;p&gt;Just want to try it out?&lt;/p&gt;
    &lt;code&gt;$ npx playball
&lt;/code&gt;
    &lt;p&gt;Ready for the big leagues? Install the package globally&lt;/p&gt;
    &lt;code&gt;$ npm install -g playball
&lt;/code&gt;
    &lt;p&gt;Then run it&lt;/p&gt;
    &lt;code&gt;$ playball
&lt;/code&gt;
    &lt;code&gt;$ docker build -t playball .
$ docker run -it --rm --name playball playball:latest
&lt;/code&gt;
    &lt;table&gt;
      &lt;row span="2"&gt;
        &lt;cell role="head"&gt;key&lt;/cell&gt;
        &lt;cell role="head"&gt;action&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;q&lt;/cell&gt;
        &lt;cell&gt;quit&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;c&lt;/cell&gt;
        &lt;cell&gt;go to schedule view&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;s&lt;/cell&gt;
        &lt;cell&gt;go to standings view&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;table&gt;
      &lt;row span="2"&gt;
        &lt;cell role="head"&gt;key&lt;/cell&gt;
        &lt;cell role="head"&gt;action&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;↓/j, ↑/k, ←/h, →/l&lt;/cell&gt;
        &lt;cell&gt;change highlighted game&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;enter&lt;/cell&gt;
        &lt;cell&gt;view highlighted game&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;p&lt;/cell&gt;
        &lt;cell&gt;show previous day's schedule/results&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;n&lt;/cell&gt;
        &lt;cell&gt;show next day's schedule&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;t&lt;/cell&gt;
        &lt;cell&gt;return to today's schedule&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;table&gt;
      &lt;row span="2"&gt;
        &lt;cell role="head"&gt;key&lt;/cell&gt;
        &lt;cell role="head"&gt;action&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;↓/j, ↑/k&lt;/cell&gt;
        &lt;cell&gt;scroll list of all plays&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Playball can be configured using the &lt;code&gt;config&lt;/code&gt; subcommand. To list the current configuration values run the subcommand with no additional arguments:&lt;/p&gt;
    &lt;code&gt;playball config&lt;/code&gt;
    &lt;p&gt;You should see output similar to:&lt;/p&gt;
    &lt;code&gt;color.ball = green
color.favorite-star = yellow
color.in-play-no-out = blue
color.in-play-out = white
color.in-play-runs-bg = white
color.in-play-runs-fg = black
color.on-base = yellow
color.other-event = white
color.out = red
color.strike = red
color.strike-out = red
color.walk = green
favorites = 
&lt;/code&gt;
    &lt;p&gt;To get the value of a single setting pass the key as an additional argument:&lt;/p&gt;
    &lt;code&gt;playball config color.strike&lt;/code&gt;
    &lt;p&gt;To change a setting pass the key and value as arguments:&lt;/p&gt;
    &lt;code&gt;playball config color.strike blue&lt;/code&gt;
    &lt;p&gt;To revert a setting to its default value provide the key and the &lt;code&gt;--unset&lt;/code&gt; flag:&lt;/p&gt;
    &lt;code&gt;playball config color.strike --unset&lt;/code&gt;
    &lt;p&gt;This table summarizes the available settings:&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="4"&gt;
        &lt;cell role="head"&gt;key&lt;/cell&gt;
        &lt;cell role="head"&gt;description&lt;/cell&gt;
        &lt;cell role="head"&gt;default&lt;/cell&gt;
        &lt;cell role="head"&gt;allowed values&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;
          &lt;code&gt;color.ball&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Color of dots representing balls in top row of game view&lt;/cell&gt;
        &lt;cell&gt;green&lt;/cell&gt;
        &lt;cell&gt;One of the following: &lt;code&gt;black&lt;/code&gt;, &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;green&lt;/code&gt;, &lt;code&gt;yellow&lt;/code&gt;, &lt;code&gt;blue&lt;/code&gt;, &lt;code&gt;magenta&lt;/code&gt;, &lt;code&gt;cyan&lt;/code&gt;, &lt;code&gt;white&lt;/code&gt;, &lt;code&gt;grey&lt;/code&gt;. Any of those colors may be prefixed by &lt;code&gt;bright-&lt;/code&gt; or &lt;code&gt;light-&lt;/code&gt; (for example &lt;code&gt;bright-green&lt;/code&gt;). The exact color used will depend on your terminal settings. The value &lt;code&gt;default&lt;/code&gt; may be used to specify the default text color for your terminal. Finally hex colors (e.g &lt;code&gt;#FFA500&lt;/code&gt;) can be specified. If your terminal does not support true color, the closest supported color may be used.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;
          &lt;code&gt;color.favorite-star&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Color of star indiciating favorite team in schedule and standing views&lt;/cell&gt;
        &lt;cell&gt;yellow&lt;/cell&gt;
        &lt;cell&gt;See above&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;
          &lt;code&gt;color.in-play-no-out&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Color of result where ball was put in play and no out was made (single, double, etc) in list of plays in game view&lt;/cell&gt;
        &lt;cell&gt;blue&lt;/cell&gt;
        &lt;cell&gt;See above&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;
          &lt;code&gt;color.in-play-out&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Color of result where ball was put in play and an out was made (flyout, fielder's choice, etc) in list of plays in game view&lt;/cell&gt;
        &lt;cell&gt;white&lt;/cell&gt;
        &lt;cell&gt;See above&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;
          &lt;code&gt;color.in-play-runs-bg&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Background color for score update in list of plays in game view&lt;/cell&gt;
        &lt;cell&gt;white&lt;/cell&gt;
        &lt;cell&gt;See above&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;
          &lt;code&gt;color.in-play-runs-fg&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Foreground color for score update in list of plays in game view&lt;/cell&gt;
        &lt;cell&gt;black&lt;/cell&gt;
        &lt;cell&gt;See above&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;
          &lt;code&gt;color.on-base&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Color of diamonds representing runners on base in top row of game view&lt;/cell&gt;
        &lt;cell&gt;yellow&lt;/cell&gt;
        &lt;cell&gt;See above&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;
          &lt;code&gt;color.other-event&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Color of other events (mound visit, injury delay, etc) in list of plays in game view&lt;/cell&gt;
        &lt;cell&gt;white&lt;/cell&gt;
        &lt;cell&gt;See above&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;
          &lt;code&gt;color.out&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Color of dots representing outs in top row of game view&lt;/cell&gt;
        &lt;cell&gt;red&lt;/cell&gt;
        &lt;cell&gt;See above&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;
          &lt;code&gt;color.strike&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Color of dots representing strikes in top row of game view&lt;/cell&gt;
        &lt;cell&gt;red&lt;/cell&gt;
        &lt;cell&gt;See above&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;
          &lt;code&gt;color.strike-out&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Color of result where play ends on a strike (strike out) in list of plays in game view&lt;/cell&gt;
        &lt;cell&gt;red&lt;/cell&gt;
        &lt;cell&gt;See above&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;
          &lt;code&gt;color.walk&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Color of result where play ends on a ball (walk, hit by pitch) in list of plays in game view&lt;/cell&gt;
        &lt;cell&gt;green&lt;/cell&gt;
        &lt;cell&gt;See above&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;code&gt;favorites&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Teams to highlight in schedule and standings views&lt;/cell&gt;
        &lt;cell&gt;Any one of the following: &lt;code&gt;ATL&lt;/code&gt;, &lt;code&gt;AZ&lt;/code&gt;, &lt;code&gt;BAL&lt;/code&gt;, &lt;code&gt;BOS&lt;/code&gt;, &lt;code&gt;CHC&lt;/code&gt;, &lt;code&gt;CIN&lt;/code&gt;, &lt;code&gt;CLE&lt;/code&gt;, &lt;code&gt;COL&lt;/code&gt;, &lt;code&gt;CWS&lt;/code&gt;, &lt;code&gt;DET&lt;/code&gt;, &lt;code&gt;HOU&lt;/code&gt;, &lt;code&gt;KC&lt;/code&gt;, &lt;code&gt;LAA&lt;/code&gt;, &lt;code&gt;LAD&lt;/code&gt;, &lt;code&gt;MIA&lt;/code&gt;, &lt;code&gt;MIL&lt;/code&gt;, &lt;code&gt;MIN&lt;/code&gt;, &lt;code&gt;NYM&lt;/code&gt;, &lt;code&gt;NYY&lt;/code&gt;, &lt;code&gt;OAK&lt;/code&gt;, &lt;code&gt;PHI&lt;/code&gt;, &lt;code&gt;PIT&lt;/code&gt;, &lt;code&gt;SD&lt;/code&gt;, &lt;code&gt;SEA&lt;/code&gt;, &lt;code&gt;SF&lt;/code&gt;, &lt;code&gt;STL&lt;/code&gt;, &lt;code&gt;TB&lt;/code&gt;, &lt;code&gt;TEX&lt;/code&gt;, &lt;code&gt;TOR&lt;/code&gt;, &lt;code&gt;WSH&lt;/code&gt;. Or a comma-separated list of multiple (e.g. &lt;code&gt;SEA,MIL&lt;/code&gt;).&lt;p&gt;Note: in some terminals the list must be quoted:&lt;/p&gt;&lt;code&gt;playball config favorites "SEA,MIL"&lt;/code&gt;&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;code&gt;git clone https://github.com/paaatrick/playball.git
cd playball
npm install
npm start
&lt;/code&gt;
    &lt;p&gt;Contributions are welcome!&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45451577</guid><pubDate>Thu, 02 Oct 2025 16:09:15 +0000</pubDate></item><item><title>Why I chose Lua for this blog</title><link>https://andregarzia.com/2025/03/why-i-choose-lua-for-this-blog.html</link><description>&lt;doc fingerprint="7f443511072312dc"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Why I chose Lua for this blog&lt;/head&gt;
    &lt;p&gt;This blog used to run using with a stack based on Racket using Pollen and lots of hacks on top of it. At some point I realised that my setup was working against me. The moving parts and workflow I created added too much friction to keep my blog active. That happened mostly because it was a static generator trying to behave as if it was dynamic website with an editing interface. That can be done really well â cue Grav CMS â but that was not the case for me.&lt;/p&gt;
    &lt;p&gt;Once I decided to rewrite this blog as a simpler system, I faced the dilema of what stack to choose. The obvious choice for me would be Javascript, it is the language I use more often and one that I am quite confortable with. Still, I don't think it is a wise choice for the kind of blog I want to maintain.&lt;/p&gt;
    &lt;p&gt;Talking to some friends recently, I noticed that many people I know that have implemented their own blogging systems face many challenges keeping them running over many years. Not because it is hard to keep software running, but because their stack of choice is moving faster than their codebase.&lt;/p&gt;
    &lt;p&gt;This problem is specially prevalent in the Javascript world. It is almost a crime that JS as understood by the browser is this beautiful language with extreme retrocompatibility, while JS as understood and used by the current tooling and workflows is this mess moving at lightspeed. Let me unpack that for a bit.&lt;/p&gt;
    &lt;p&gt;You can open a web page from 1995 on your browser of choice and it will just work because browser vendors try really hard to make sure they don't break the web.&lt;/p&gt;
    &lt;p&gt;Developers who built the whole ecosystem of NodeJS, NPM, and all those libraries and frameworks don't share the same ethos. They all make a big case of semantic versioning and thus being able to handle breaking changes, but they have breaking changes all the time. You'd be hardpressed to actually run some JS code from ten years ago based on NodeJS and NPM. There is a big chance that dependencies might be gone, broken, or it might be incompatible with the current NodeJS.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;I know this sounds like FUD, and that for many many projects, maybe even most projects, that will not be the case. But I heard from many people that keeping their blogging systems up to date requires a lot more work than they would like to do and if they don't, then they're screwed.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;That is also true about other languages even though many of them move at a slower speed. A friend recently complained about a blogging system he implemented that requires Ruby 2.0 and that keeping that running sucks.&lt;/p&gt;
    &lt;p&gt;I want a simpler blogging system; one that requires minimal changes over time.&lt;/p&gt;
    &lt;head rend="h3"&gt;Now we talk about Lua&lt;/head&gt;
    &lt;p&gt;Lua is a wonderful and nimble language that is often misunderstood.&lt;/p&gt;
    &lt;p&gt;One characteristic that I love about it, is that is evolves very slowly. Lua 5.1 was introduced in 2006, Lua 5.4 which is the current version initial release was in 2020. Yes, there are point released in between, but you can see how much slower it moves when compared to JS.&lt;/p&gt;
    &lt;p&gt;The differences between Lua 5.1 and Lua 5.4 are minimal when compared with how much other languages changed in the same time period.&lt;/p&gt;
    &lt;p&gt;Lua only requires a C89 compiler to bootstrap itself. It is very easy to make Lua work and even easier to make it interface with something.&lt;/p&gt;
    &lt;p&gt;JS is a lot larger than Lua, there is more to understand and more to remember. My blog needs are very simple and Lua can handle them with ease.&lt;/p&gt;
    &lt;head rend="h2"&gt;How this blog works&lt;/head&gt;
    &lt;p&gt;This is an old-school blog. I uses cgi-bin â aka Comon Gateway Interface â scripts to run it. It is a dynamic website with a SQLite database holding its data. When you open a page, it fetches the data from a database and assembles a HTML to send to the browser using Mustache templates.&lt;/p&gt;
    &lt;p&gt;One process per request. Like the old days.&lt;/p&gt;
    &lt;p&gt;You might argue that if I went with NodeJS, I'd be able to serve more requests using fewer resources. That is true. I don't need to serve that many requests though. My peak access was a couple years ago with 50k visitors on a week, even my old Racket blog could handle that fine. The Lua one should handle it too; and if it breaks it breaks. I'm a flawed human being, my code can be flawed too, we're in this together, holding hands.&lt;/p&gt;
    &lt;p&gt;Your blog is your place to experiment and program how you want it. You can drop the JS fatigue, you can drop your fancy Haskell types, you can just do whatever you find fun and keep going (and that includes JS and Haskell if that's your thing. You do you).&lt;/p&gt;
    &lt;p&gt;Cause I'm using Lua, I don't have as many libraries and frameworks available to me as JS people have, but I still have quite a large collection via Luarocks. I try not to add many dependencies to my blog. At the moment there are about ten and that is mostly because Lua is a batteries-not-included language so you start from a minimal core and build things up to suit your needs.&lt;/p&gt;
    &lt;p&gt;For a lot of things I went with the questionable choice of implementing things myself. I got my own little CGI library. It is 200 lines long and does the bare minimum to make this blog work. I got my own little libraries for many things. Micropub and IndieAuth were all implemented by hand.&lt;/p&gt;
    &lt;p&gt;At the moment I'm &lt;del&gt;despairing&lt;/del&gt;&lt;del&gt;frustrated&lt;/del&gt; having a lot of fun implementing WebMentions. Doing the Microformats2 &lt;del&gt;exorcism&lt;/del&gt; extraction on my own is teaching me a lot of things.&lt;/p&gt;
    &lt;p&gt;What I want to say is that by choosing a small language that moves very slowly and very few dependencies, I can keep all of my blogging system in my head. I can make sure it will run without too much change for the next ten or twenty years.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Lua is a lego set, a toolkit, it adapts to you and your needs. I don't need to keep chasing the new shiny or the latest framework du jour. I can focus on making the features I want and actually understanding how they work.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Instead of installing a single dependency in another language and it pulling a hundred of other small dependencies all of which were transpiled into something the engine understands to the point that understanding how all the pieces work and fit together takes more time than to learn a new language, I decided to keep things simple.&lt;/p&gt;
    &lt;p&gt;I got 29 Luarocks installed here and that is for all my Lua projects in this machine. That is my blog, my game development, my own work scripts for my day job. Not even half of those are for my blog.&lt;/p&gt;
    &lt;p&gt;I often see wisdom in websites such as Hacker News and Lobsters around the idea of "choosing boring" because it is proven, safe, easier to maintain. I think that boring is not necessarily applicable to my case. I don't find Lua boring at all, but all that those blog posts talk about that kind of mindset are all applicable to my own choices here.&lt;/p&gt;
    &lt;p&gt;Next time you're building your own blogging software, consider for a bit for how long do you want to maintain it. I first started blogging on macOS 8 in 2001. I choose badly many times and in the end couldn't keep my content moving forward in time with me as softwares I used or created became impossible to run. The last two changes: from JS to Racket and from Racket to Lua have been a lot safer and I managed to carry all my content forward into increasingly simpler setups and workflows.&lt;/p&gt;
    &lt;p&gt;My blogging system is not becoming more complex over the years, it is becoming smaller, because with each change I select a stack that is more nimble and smaller than the one I had before. I don't think I can go smaller than Lua though.&lt;/p&gt;
    &lt;p&gt;By small I mean:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;A language I can fully understand and keep on my head.&lt;/item&gt;
      &lt;item&gt;A language that I know how to build the engine and can do it if needed.&lt;/item&gt;
      &lt;item&gt;An engine that requires very few resources and is easy to interface with third-party libraries in native code.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;I chose Lua because of all that, and I'm happy with it and hope this engine will see me through the next ten or so years.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45452261</guid><pubDate>Thu, 02 Oct 2025 16:58:55 +0000</pubDate></item><item><title>Babel is why I keep blogging with Emacs</title><link>https://entropicthoughts.com/why-stick-to-emacs-blog</link><description>&lt;doc fingerprint="26d8bd04cf2550b8"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Why I Keep Blogging With Emacs&lt;/head&gt;
    &lt;p&gt;Every time I look at someone’s simple static site generation setup for their blog, I feel a pang of envy. I’m sure I could make a decent blogging engine in 2,000 lines of code, and it would be something I’d understand, be proud over, able to extend, and willing to share with others.&lt;/p&gt;
    &lt;p&gt; Instead, I write these articles in Org mode, and use mostly the standard Org publishing functions to export them to html. This is sometimes brittle, but most annoyingly, I don’t understand it. I have been asked for details on how my publishing flow works, but the truth is I have no idea what happens when I run the &lt;code&gt;org-publish-current-file&lt;/code&gt; command.
&lt;/p&gt;
    &lt;p&gt; I could find out by tracing the evaluation of the Lisp code that runs on export, but I won’t, because just the html exporting code (&lt;code&gt;ox-html.el&lt;/code&gt;) is 5,000
lines of complexity. The general exporting framework (&lt;code&gt;ox-publish.el&lt;/code&gt; and
&lt;code&gt;ox.el&lt;/code&gt;) is 8,000 lines. The framework depends on Org parsing code
(&lt;code&gt;org-element.el&lt;/code&gt;) which is at least another 9,000 lines. This is over 20,000
lines of complexity I’d need to contend with.
&lt;/p&gt;
    &lt;p&gt;It might seem like a no-brainer to just write that 2,000 line custom static generator and use that instead.&lt;/p&gt;
    &lt;p&gt;Except one thing: Babel.&lt;/p&gt;
    &lt;p&gt;Any lightweight markup format (like Markdown or ReStructuredText or whatever) allows for embedding code blocks, but Org, through Babel, can run that code on export, and then display the output in the published document, even when the output is a table or an image. It supports sessions that lets code reuse definitions from earlier code blocks. It allows for injecting variables from the markup into the code, and vice versa. As a bonus, Org doesn’t require a JavaScript syntax highlighter, because it generates inline styles in the source code.&lt;/p&gt;
    &lt;p&gt;It does this for a large number of languages, although I mainly use it with R for drawing plots. Being able to do this is incredibly convenient, because it makes it trivial to draft data, illustrations, and text at the same time, adjusting both until the article coheres. Having tried it, I cannot see myself living without it.&lt;/p&gt;
    &lt;p&gt;A simple 2,000 line blogging engine would be a fun weekend project. Mirroring the features of Babel I use would turn it into a multi-month endeavour for someone with limited time such as myself. Not going to happen, and I will continue to beat myself up for overcomplicating my publishing workflow.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45453222</guid><pubDate>Thu, 02 Oct 2025 18:06:41 +0000</pubDate></item><item><title>OpenAI's H1 2025: $4.3B in income, $13.5B in loss</title><link>https://www.techinasia.com/news/openais-revenue-rises-16-to-4-3b-in-h1-2025</link><description>&lt;doc fingerprint="d267d1111c03bee1"&gt;
  &lt;main&gt;
    &lt;p&gt;If you're seeing this message, that means JavaScript has been disabled on your browser.&lt;/p&gt;
    &lt;p&gt;Please enable JavaScript to make this website work.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45453586</guid><pubDate>Thu, 02 Oct 2025 18:37:28 +0000</pubDate></item><item><title>Solveit – A course and platform for solving problems with code</title><link>https://www.answer.ai/posts/2025-10-01-solveit-full.html</link><description>&lt;doc fingerprint="2934225f4be50c99"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Launching Solveit, the antidote to AI fatigue&lt;/head&gt;
    &lt;quote&gt;
      &lt;p&gt;tldr from Jeremy: “How to Solve it With Code” is a course in iterative problem solving, and a platform (‘Solveit’) to make that easier. The course shows how to use AI in small doses to help learn as you build, but doesn’t rely on AI at all – you can totally avoid AI if you prefer. The approach we teach is based on decades of research and practice from Eric Ries and I, the founders of Answer.AI. It’s basically the opposite of “vibe coding”; it’s all about small steps, deep understanding, and deep reflection. We wrote the platform because we didn’t find anything else sufficient for doing work the “solveit way”, so we made something for ourselves, and then decided to make it available more widely. You can follow the approach without using our platform, although it won’t be as smooth an experience.&lt;/p&gt;
      &lt;p&gt;The platform combines elements of all these: ChatGPT; Jupyter Notebook + nbdev; Bits of vscode/cursor (we embed the same Monaco editor and add similar optional AI and non-AI autocompletion); a VPS (you get your own persistent full VPS running Linux with a URL you can share for public running applications); Claude Code (all the same tools are available); a persistent terminal. Then there’s some bits added that don’t exist elsewhere AFAIK: something like MCP, but way simpler, where any Python function can be instantly used as an AI tool; the ability to refer directly to any live Python variable in AI context (but optional, so it doesn’t eat up your context window); full metaprogramming of the environment (you can through code or AI tools modify the environment itself or the dialog); context editing (you can – and should – directly edit AI responses instead of tell the AI it’s wrong); collaborative notebook coding (multiple people can edit the dialog, run code, etc, and all see live updates).&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;It’s a strange time to be a programmer. It’s easier than ever to get started, but also easier than ever to let AI steer you into a situation where you’re overwhelmed by code you don’t understand. We’ve got an antidote that we’ve been using ourselves with 1000 preview users for the last year. It’s changed our lives at Answer.AI, and hundreds of our users say the same thing. Now we’re ready to share it with you. Signups are open, and will remain so until October 20th. Over five weeks, we’ll give you a taste of how our new approach and platform, “Solveit”, can be applied to everything from programming challenges, web development, and system administration to learning, writing, business, and more.&lt;/p&gt;
    &lt;p&gt;OK, let’s explain what on earth we’re talking about!…&lt;/p&gt;
    &lt;p&gt;At the end of last year, Jeremy Howard (co-founder of fast.ai, Answer.AI, Kaggle, Fastmail, creator of the first LLM…) and I ran a small trial course titled “How To Solve It With Code”. The response was so overwhelming that we had to close signups after just one day. 1000 keen beans joined us for a deep dive into our general approach to solving problems. The first few lessons were taught via the vehicle of the ‘Advent of Code’ programming challenges and run in a new, purpose-built tool called solveit. As the course progressed, we had lots of fun exploring web development, AI, business, writing and more. And the solveit tool became an extremely useful test-bed for ideas around AI-assisted coding, learning and exploration.&lt;/p&gt;
    &lt;p&gt;In the year since, we’ve continued to refine and expand both the process and the platform. We now basically live in the solveit platform. We do all our sysadmin work in it (Solveit itself is hosted on a new horizontally scalable multi-server platform we built and run entirely using Solveit!), host production apps in it (e.g all students in the course can use a Discord AI bot “Discord Buddy” that’s running inside a Solveit dialog!), develop most of our software in it, our legal team does contract drafting in it, we iterate on GUIs in it, and in fact we do the vast majority of our day to day work of all kinds in it.&lt;/p&gt;
    &lt;p&gt;From October 20th for five weeks, Jeremy and I will show you how to use the solveit approach, and give you full access to the platform that powers it (and you’ll have the option to continute to access the lessons and platform afterwards too). Also Eric Ries will join us for lessons about building startups that don’t just make money, but that stick to your vision for how you want to impact the world. You’ll be amongst the first people in the world to have the opportunity to read his new unreleased book.&lt;/p&gt;
    &lt;p&gt;But what IS “the solveit approach”? It isn’t some new AI thing, but actually is based on ideas that are at least 80 years old… To learn more, read on, or watch this video Jeremy and I recorded a few weeks ago.&lt;/p&gt;
    &lt;head rend="h2"&gt;Inspiration from Polya&lt;/head&gt;
    &lt;p&gt;George Polya was a Hungarian mathematician who wrote the influential book “How to Solve It” in 1945. In it, he shares his philosophies on education (focus on active learning, heuristic thinking, and careful questioning to guide students towards discovering answers for themselves) and outlines a four-step problem-solving framework:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Understand the Problem: identify what you’re being asked to do; restate the problem&lt;/item&gt;
      &lt;item&gt;Devise a Plan: draw on similar problems; break down into manageable parts; consider working backward; simplify the problem&lt;/item&gt;
      &lt;item&gt;Carry Out the Plan: verify each step&lt;/item&gt;
      &lt;item&gt;Look Back and Reflect: consider alternatives; extract lessons learned&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;He was focused on mathematics, but as Jeremy and I realized, these ideas translate far beyond maths! It turns out that it actually works great for coding, writing, reading, learning…&lt;/p&gt;
    &lt;p&gt;Of course, you can often just have AI code and write for you. But should you?&lt;/p&gt;
    &lt;p&gt;In most cases, we argue the answer is “no”.&lt;/p&gt;
    &lt;p&gt;There’s a myriad of problems waiting for you if you go down that path: - If you didn’t know the foundations of how to do it before, you don’t now either. You’ve learned nothing - If you keep working this way, you build up more and more code you don’t understand, creating technical and understanding debt that will eventually become crippling - You won’t be building up a foundation to solve harder tasks that neither humans nor AI can one-shot. So you’re limiting yourself to only solving problems that everyone else can trivially solve too. This is not a recipe for personal or organizational success!&lt;/p&gt;
    &lt;p&gt;On the other hand, if you build a discipline of always working to improve your understanding and expertise, you’ll discover that something delightful and amazing happens. Each time you tackle a task, you’ll find it’s a little easier than the last one. These improvements in understanding and capability will multiply, and you’ll find that your own skills develop even faster than AI improves. You’ll focus on using AI to help you dramatically increase your own productivity and abilities, instead of focusing on helping the AI improve its productivity and abilities!&lt;/p&gt;
    &lt;head rend="h2"&gt;Application to Coding: iterative, exploratory coding in notebook-like environments.&lt;/head&gt;
    &lt;p&gt;Let’s consider a quick example of coding the solveit way (without even any AI yet). For 2024’s Advent of Code, Day 1’s solution involves comparing two lists, sorted by value (there’s a whole backstory involving elves, which you can read if you like). Let’s imagine we’ve considered the problem, and are now focused on a small sub-task: extracting the first (sorted) list. We start with the sample data provided:&lt;/p&gt;
    &lt;code&gt;= '3   4\n4   3\n2   5\n1   3\n3   9\n3   3' x &lt;/code&gt;
    &lt;p&gt;Our plan might be:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Split into a list of lines&lt;/item&gt;
      &lt;item&gt;Grab the first number from each line&lt;/item&gt;
      &lt;item&gt;Sort&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;After thinking through the plan, we begin working on individual steps. We aim to write no more than a few lines of code at a time, with each piece giving some useful output that you can use to verify that you’re on the right track:&lt;/p&gt;
    &lt;code&gt;= x.splitlines()
 lines 
 lines&amp;gt;&amp;gt;&amp;gt; ['3   4', '4   3', '2   5', '1   3', '3   9', '3   3']&lt;/code&gt;
    &lt;p&gt;Now we build up a list comprehension to get the first elements. We might start with &lt;code&gt;[o for o in lines]&lt;/code&gt; and then add bits one at a time, inspecting the output, building up to:&lt;/p&gt;
    &lt;code&gt;= [int(o.split()[0]) for o in lines]
 l1 
 l1&amp;gt;&amp;gt;&amp;gt; [3, 4, 2, 1, 3, 3]&lt;/code&gt;
    &lt;p&gt;Now sorting:&lt;/p&gt;
    &lt;code&gt;sorted(l1)
&amp;gt;&amp;gt;&amp;gt; [1, 2, 3, 3, 3, 4]&lt;/code&gt;
    &lt;p&gt;Now that we’ve run all the pieces individually, and checked that the outputs are what we’d expect, we can stack them together into a function:&lt;/p&gt;
    &lt;code&gt;def get_list(x):
= x.splitlines()
     lines = [int(o.split()[0]) for o in lines]
     l1 return sorted(l1)
     
 get_list(x)&amp;gt;&amp;gt;&amp;gt; [1, 2, 3, 3, 3, 4]&lt;/code&gt;
    &lt;p&gt;At this point, you’d reflect on the solution, think back to the larger plan, perhaps ask yourself if there are better ways you could do it. You may be thinking that this is far too much work for &lt;code&gt;sorted(int(line.split()[0]) for line in x.splitlines())&lt;/code&gt; – as your skill increases you can tailor the level of granularity, but the idea remains the same: working on small pieces of code, checking the outputs, only combining them into larger functions once you’ve tried them individually, and constantly reflecting back on the larger goal.&lt;/p&gt;
    &lt;p&gt;(We’ll come back to this shortly – but also consider for a moment how integrated AI can fit into the above process. Any time you don’t know how to do something, you can ask for help with just that one little step. Any time you don’t understand how something works, or why it doesn’t, you can have AI help you with that exact piece.)&lt;/p&gt;
    &lt;head rend="h2"&gt;The Power of Fast Feedback Loops&lt;/head&gt;
    &lt;p&gt;The superpower that this kind of live, iterative coding gives you is near-instant feedback loops. Instead of building your giant app, waiting for the code to upload, clicking through to a website and then checking a debug console for errors – you’re inspecting the output of a chunk of code and seeing if it matches what you expected. It’s still possible to make mistakes and miss edge cases, but it is a LOT easier to catch most mistakes early when you code in this way.&lt;/p&gt;
    &lt;p&gt;This idea of setting things up so that you get feedback as soon as possible pops up again and again. Our cofounder Eric Ries talks about this in his book ‘The Lean Startup’, where getting feedback from customers is valuable for quick iteration on product or business ideas. Kaggle pros talk about the importance of fast evals – if you can test an idea in 5 minutes, you can try a lot more ideas than you could if each experiment requires 12 hours of model training.&lt;/p&gt;
    &lt;head rend="h2"&gt;AI: Dialog Engineering Keeps Context Useful&lt;/head&gt;
    &lt;p&gt;One issue with current chat-based models is that once they go off the rails, it’s hard to get back on track. The model is now modelling a language sequence that involves the AI making mistakes – and more mistakes are likely to follow! If you’ve used language models much, then you’ve no doubt experienced this problem many times.&lt;/p&gt;
    &lt;p&gt;There is an interesting mathematical reason that this occurs. The vast majority of language model training is entirely about getting a neural network to predict the next word in a sentence – they are auto-regressive. Although they are later fine-tuned to do more than this, they are still at their heart really wanting to predict the next word of a sentence. In the documents used for training, there are plenty of examples of poor-quality reasoning and mistakes.Therefore, once an AI sees some mistakes in a chat, the most likely next tokens are going to be mistakes as well. That means that every time you are correcting the AI, you are making it more likely for the AI to give bad responses in the future!&lt;/p&gt;
    &lt;p&gt;Because solveit dialogs are fluid and editable, it’s much easier to go back and edit/remove mistakes, dead ends, and unrelated explorations. You can even edit past AI responses, to steer it into the kinds of behaviour you’d prefer. Combine this with the ability to easily hide messages from the AI or to pin messages to keep them in context even as the dialog grows beyond the context window and starts to be truncated, and you have a recipe for continued AI helpfulness as time goes on. We’ve been talking about this as “dialog engineering” for a long time – and it really is key to having AI work sessions that improve as time goes on, rather than degrading.&lt;/p&gt;
    &lt;p&gt;Of course, this is all useful for humans too! The discipline of keeping things tidy, using (collapsible) headings to organise sections, writing notes on what you’re doing or aiming for, and even past questions+answers with the AI all make it a pleasure to pick back up old work.&lt;/p&gt;
    &lt;head rend="h2"&gt;Building an App for Collaboration not Replacement&lt;/head&gt;
    &lt;p&gt;One thing is still (intentionally) hard in solveit though, and that is getting the AI to actually write all of your code in a hands-off way. We’ve made various choices to gently push towards the human remaining in control. Things like:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Solveit defaults to code inputs&lt;/item&gt;
      &lt;item&gt;AI outputs code in fenced blocks, but these are not added to your code or run until you choose to do so. There are shortcuts to add them, but this extra step encourages you to read + refactor before mindlessly running&lt;/item&gt;
      &lt;item&gt;In ‘Learning’ mode especially, the AI will gently guide you to writing small steps rather than providing a big chunk of code, unless you really specifically ask it to do so.&lt;/item&gt;
      &lt;item&gt;In ‘Learning’ mode, the AI ‘ghost text’ auto-complete suggestions don’t show unless you trigger them with a keyboard shortcut.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Even the choice to have the editor be fairly small and down at the bottom emphasizes that this is a REPL/dialog, optimised for building small, understandable pieces. It’s entirely possible to practice the solveit approach in other tools, but we’ve also found that a combination of these intentional choices and the extra affordances for dialog engineering rapidly feel indispensible.&lt;/p&gt;
    &lt;head rend="h2"&gt;Learning Trajectory&lt;/head&gt;
    &lt;p&gt;This brings us back to a foundational piece of the solveit approach: a learning mindset. It’s great that we can ask AI to fill in the gaps of our knowledge, or to save some time with fiddly pieces like matplotlib plots or library-specific boilerplate. But when the AI suggests something you don’t know, it is important not to skip it and move on – otherwise that new piece will never be something you learn!&lt;/p&gt;
    &lt;p&gt;We try to build the discipline to stop and explore anytime something like this comes up. Fortunately, it’s really easy to do this – you can add new messages trying out whatever new thing the AI has shown you, asking how it works, getting demo code, and poking it until you’re satisfied. And then the evidence of that side-quest can be collapsed below a heading (for later ref) or deleted, leaving you back in the main flow but with a new piece of knowledge in your brain.&lt;/p&gt;
    &lt;p&gt;Like many programmers, I’ve had my share of existential worries given the rapid rise in AI’s coding ability. What if AI keeps getting better and better, to the point where there’s little point for the average person actually learning to master any of these skills? If you assume your coding skills stay static, and imagine the AI continuing to get better, you may feel kinda bleak. The thing is, skill doesn’t have to be static! And as both you and the AI you’re carefully using get better, you will learn faster and be able to accomplish more and more.&lt;/p&gt;
    &lt;head rend="h2"&gt;Mastery Requires Deliberate Practice&lt;/head&gt;
    &lt;p&gt;This is all hard work. It’s like exercise, or practicing a musical instrument. And like any pursuit of mastery, I don’t know that it’s for everyone. But as we’ve seen from all of the students who invested their time into the first cohort, the effort is well worth it in the end. Just take a look at the project showcase featuring a few hundred (!) things our community has made.&lt;/p&gt;
    &lt;head rend="h2"&gt;Sign up for Solveit&lt;/head&gt;
    &lt;p&gt;If you’re interested in joining us to learn how to use the Solveit approach yourself, head over to our site and sign up: solve.it.com, Signups are open until October 20th, but may close earlier if we fill up, so don’t wait too long!&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45455719</guid><pubDate>Thu, 02 Oct 2025 21:21:49 +0000</pubDate></item><item><title>The strangest letter of the alphabet: The rise and fall of yogh</title><link>https://www.deadlanguagesociety.com/p/history-of-letter-yogh</link><description>&lt;doc fingerprint="b6728524aea13b82"&gt;
  &lt;main&gt;
    &lt;p&gt;English spelling has a reputation. And it’s not a good one.&lt;/p&gt;
    &lt;p&gt;It’s full of silent letters, as in numb, knee, and honour. A given sound can be spelled in multiple ways (farm, laugh, photo), and many letters make multiple sounds (get, gist, mirage).&lt;/p&gt;
    &lt;p&gt;English spelling is so complex that we’ve made mastering it into a competitive sport: what would be the point of a spelling bee in a language with a predictable spelling system? Where’s the fun unless you have to sweat a little as you struggle to recall whether this particular word is one where “‘i’ before ‘e’ except after ‘c’” doesn’t apply?&lt;/p&gt;
    &lt;p&gt;In short, English has a complicated writing system.&lt;/p&gt;
    &lt;p&gt;I’ve written about the origin of some of this complexity before, blaming everyone from the French to stingy printers and late medieval yuppies. But I’ve not yet plumbed the depths of this complexity. To do so, I will need to tell you the story of yogh,1 an obscure medieval letter whose rise and fall allows us to peer into this abyss.&lt;/p&gt;
    &lt;p&gt;But like an Icelandic family saga, we begin not with the story of yogh, but with the story of its parent. So allow me to introduce you to the letter ‘g,’ which, as you’ll soon see, is a complicated letter in its own right, dating back to Old English.&lt;/p&gt;
    &lt;p&gt;It starts with the shape of the letter. When modern editors print Old English today, they print nice, modern-looking ‘g’s — that is, the ones we use today, with an open or closed loop on the bottom, depending on the typeface.&lt;/p&gt;
    &lt;p&gt;This modern form of ‘g’ is called the Carolingian ‘g.’ It had its origin in the Carolingian minuscule, the script used by the scribes of the Carolingian Renaissance, the great revival of learning which flourished in the vast realm of Charlemagne (reigned 768–814).2&lt;/p&gt;
    &lt;p&gt;But Old English scribes didn’t write their g-sounds with a Carolingian ‘g.’ The Old English letter ‘g’ was written in a form called the insular ‘g.’ Here’s what it looked like: ‘ᵹ.’ It’s like a mix between a ‘z’ and a ‘3.’&lt;/p&gt;
    &lt;p&gt;Let’s see it in action. When the first lines of Beowulf are written in a modern edition, they look like this:&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;Hwæt, we Gardena in geardagum&lt;/p&gt;&lt;lb/&gt;þeodcyninga þrym gefrunon,&lt;p&gt;‘How we have heard of the glory of the kings of the spear-Danes in days of old’&lt;/p&gt;&lt;p&gt;(Beowulf 1–2)&lt;/p&gt;&lt;/quote&gt;
    &lt;p&gt;But in the manuscript, they’re written like this:&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;HǷÆT ǷE GARDE&lt;/p&gt;&lt;lb/&gt;na inᵹear daᵹum þeod cyninᵹa&lt;lb/&gt;þrym ᵹefrunon&lt;p&gt;London, British Library, Cotton MS Vitellius A XV, f. 132r.&lt;/p&gt;&lt;/quote&gt;
    &lt;p&gt;Now, there’s clearly lots of other weird stuff going on in the manuscript, but focus on how the ‘g’ is represented. While the majuscule (capital) ‘G’ in ‘gardena’ is spelled more like a modern ‘g,’ all the others are insular ‘ᵹ.’&lt;/p&gt;
    &lt;p&gt;Interestingly, the Anglo-Saxons did use the Carolingian ‘g’ — just not for Old English. They used it when writing Latin, at least after the late 10th century. This was when the Church in England underwent a set of reforms, which caused a flowering of literature both in Latin and Old English.3 As part of these reforms, the Carolingian minuscule script was adopted for Latin texts.&lt;/p&gt;
    &lt;p&gt;So for a period, both ‘g’ and ‘ᵹ’ were used in England, but generally speaking, each was used for writing the ‘g’ sound in a different language. Simple enough, but the stage was set for things to get a lot more complicated.&lt;/p&gt;
    &lt;p&gt;But for that, we need the help of the Normans.&lt;/p&gt;
    &lt;p&gt;You're reading The Dead Language Society. I'm Colin Gorrie, linguist, ancient language teacher, and your guide through the history of the English language and its relatives.&lt;/p&gt;
    &lt;p&gt;Subscribe for a free issue every Wednesday, or upgrade to support my mission of bringing historical linguistics out of the ivory tower and receive two extra Saturday deep-dives per month.&lt;/p&gt;
    &lt;p&gt;If you upgrade, you’ll also be able to join our ongoing Beowulf Book Club and watch our discussion of the first 915 lines (part 1, part 2) right away.&lt;/p&gt;
    &lt;head rend="h1"&gt;Of course, they would have spelled it ȝoȝ&lt;/head&gt;
    &lt;p&gt;For the history of the English language, no single year was more momentous than 1066. In this year, William, Duke of Normandy, invaded and took the English throne, bringing with him Norman knights, and more importantly for our purposes, Norman scribes.&lt;/p&gt;
    &lt;p&gt;These Norman scribes inherited the writing traditions that the Carolingian renaissance had given birth to. This meant the latest, greatest, 11th-century French versions of the Carolingian minuscule.&lt;/p&gt;
    &lt;p&gt;These weren’t so different from the way Anglo-Saxon scribes had written Latin. But they were very different from the way they had written Old English, especially in the ‘g’ department.&lt;/p&gt;
    &lt;p&gt;But that wasn’t so much of an issue, since these Norman-trained scribes, and those of the generations that came after them, didn’t write much English at all. In fact, writing in English of any kind was very scarce up until the end of the 12th century.&lt;/p&gt;
    &lt;p&gt;Over the course of that tumultuous — and, for English, silent — century, the language had changed a great deal. All the scribes trained in the old, Anglo-Saxon traditions were long dead, so when a new generation of scribes turned their attention once again to English, they had to devise some new strategies for writing it.&lt;/p&gt;
    &lt;p&gt;And this, after a surprisingly long delay, is where we first meet the star of today’s issue: ‘ȝ,’ also known as yogh.&lt;/p&gt;
    &lt;p&gt;Yogh is descended from a variant form of the old insular ‘ᵹ.’ But, while the insular ‘ᵹ’ was thought of as the same letter as the Carolingian ‘g’ in Anglo-Saxon times, the yogh ‘ȝ’ of the 12th century was an entirely different letter from the Carolingian-derived ‘g.’&lt;/p&gt;
    &lt;p&gt;And, stranger still, ‘ȝ’ was used to write two completely different sounds in Middle English, the form of English spoken from around 1100–1450: the y-sound as in young or yesterday, and another sound that English has lost altogether.&lt;/p&gt;
    &lt;p&gt;The other sound that ‘ȝ’ once spelled is the “harsh” or “guttural” sound made in the back of the mouth, which you hear in Scots loch or German Bach.4 This sound is actually the reason for the most famous bit of English spelling chaos: the sometimes-silent, sometimes-not sequence ‘gh’ that you see in laugh, cough, night, and daughter. Maybe one day I’ll tell you that story too.&lt;/p&gt;
    &lt;p&gt;For today, however, just know that the spelling ‘gh,’ which causes spellers so much trouble, was originally a replacement for ‘ȝ’ in these words. But more on that later. Let’s dwell for a moment on the bizarre situation we had in Middle English, where the same letter ‘ȝ’ could represent either a y-sound or that now-vanished gh-sound.&lt;/p&gt;
    &lt;head rend="h1"&gt;But not as bizarre as this painting&lt;/head&gt;
    &lt;p&gt;Or is it actually so bizarre?&lt;/p&gt;
    &lt;p&gt;Modern English spelling is, of course, chaotic. So perhaps it shouldn’t surprise us that we too have a very yogh-like situation with two of our letters: ‘c’ and — wait for it — ‘g.’&lt;/p&gt;
    &lt;p&gt;Each of these regularly represents two not particularly similar sounds. The letter ‘c’ sometimes represents a k-sound, like in cat, and sometimes an s-sound, like in city. The letter ‘g’ is similar: sometimes it writes a true g-sound, like in good, but other times, what it represents is a j-sound, like in gem.&lt;/p&gt;
    &lt;p&gt;If these sounds seem similar to you, pay attention to your tongue as you make each one: the k-sound and the true g-sound are made with the back of your tongue hitting against your soft palate. The s-sound and the ‘j’ sound are made in slightly different places, but in both cases, they use the tip of your tongue coming up against (or close to) just behind your upper teeth.&lt;/p&gt;
    &lt;p&gt;Each of our two double-sounding letters, ‘c’ and ‘g,’ has two variants, which are made at completely different ends of the mouth. This is how yogh worked too: it had one variant made at the back of the mouth (the gh-sound) and the other made towards the front (that’s the y-sound).&lt;/p&gt;
    &lt;p&gt;There’s actually a good linguistic reason why this pattern keeps happening. It’s a sound change called palatalization: this happens when a sound made towards the back of the mouth, like a k- or g-sound, gets pulled forward because it’s next to another sound made at the front of the mouth. Often, these front-of-the-mouth sounds are vowels.&lt;/p&gt;
    &lt;p&gt;In Old English, these front-of-the-mouth vowels (front vowels for short) included the ones spelled ‘i’ and ‘e,’ which sounded like the vowels in bee and bay.5 Sometime in the deep prehistory of the English language, the ‘g’ sound got pulled forward in the mouth to sound like ‘y’ whenever it was next to these front vowels.&lt;/p&gt;
    &lt;p&gt;But when it came time to spell these ‘y’ sounds in the Latin alphabet, they still seemed to the Anglo-Saxon scribes to be versions of ‘g’ sounds. So they spelled them ‘ᵹ’ just like they spelled other ‘g’ sounds. This is why, when you read Old English, you can often replace ‘ᵹ’ (or ‘g’ in modern editions) with ‘y’ and get recognizable Modern English words: ᵹear is year, dæᵹ is day, weᵹ is way.6&lt;/p&gt;
    &lt;p&gt;A process like this happened in the ancestor of French too, just slightly differently. Instead of the ‘g’ being pulled forward into a ‘y’ sound before ‘i’ and ‘e,’ it got pulled forward into a ‘j’ sound.&lt;/p&gt;
    &lt;p&gt;This is why the Modern English ‘g’ represents two sounds, one before the letters ‘i’ and ‘e’, and the other before the other letters. It’s because we took our spelling conventions from how the Norman scribes wrote their language, which was an old form of French.7&lt;/p&gt;
    &lt;p&gt;While the Norman scribes, and the later English scribes they trained, were used to the letter ‘g’ writing two different sounds, neither was a y-sound. They needed another letter for that, and they found one: the old insular ‘ᵹ,’ or rather, its descendant, the yogh ‘ȝ.’&lt;/p&gt;
    &lt;p&gt;So that’s why ‘ȝ’ spelled a ‘y’ sound. To understand why ‘ȝ’ also spelled that vanished ‘gh’ sound, however, we need to go back into the distant history of English, long before it was ever written down. Actually, long before there even was an English.&lt;/p&gt;
    &lt;p&gt;Back then, there was just one single language, which would later split into English, Dutch, German, Swedish, and all the other Germanic languages.&lt;/p&gt;
    &lt;p&gt;In this Proto-Germanic language (as it’s called today), the sound that would become the English g-sound — which the Anglo-Saxons would later spell ‘ᵹ’ — was not the g-sound we have today in words like good or bag. That came later.&lt;/p&gt;
    &lt;p&gt;Instead, the Proto-Germanic ancestor of words like good had a sound very similar to the later Middle English gh-sound at the start.8 Only later would English harden that gh-sound into the g-sound we know today. But this only happened in certain places in the word, especially at the start. At the end of the word, the gh-sound remained. In Old English, both versions were spelled the same: ‘ᵹ.’&lt;/p&gt;
    &lt;p&gt;This means that ‘ᵹ’ actually had three pronunciations in Old English, not two: the y-sound (next to front vowels), the g-sound (at the start of words), and the gh-sound (in the middle of words). So when those Norman-trained scribes turned their attention to writing English in the 12th century, they had no problem writing the g-sound at the start of words with ‘g.’&lt;/p&gt;
    &lt;p&gt;But when they wanted to write the gh-sound, they ran into the same problem they had in writing the y-sound. They didn’t have a good way to write the gh-sound, which didn’t exist in French at the time, so they pressed yogh into service again.&lt;/p&gt;
    &lt;p&gt;And that’s why yogh has two sounds, each of which corresponds to a pronunciation of the Old English letter ‘ᵹ’ that the French scribal tradition couldn’t accept writing with ‘g.’&lt;/p&gt;
    &lt;head rend="h1"&gt;Wait, we’ve been saying ‘Mackenzie’ wrong?&lt;/head&gt;
    &lt;p&gt;When you’re reading Middle English, it can get a bit confusing: Which kind of yogh is which?&lt;/p&gt;
    &lt;p&gt;Look at this line from Sir Gawain and the Green Knight:&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;Þaȝ ȝe ȝourself be talenttyf, to take hit to yourseluen,&lt;/p&gt;&lt;lb/&gt;‘Though you yourself are eager to accept it [a challenge] personally,’ (Sir Gawain and the Green Knight 350)&lt;/quote&gt;
    &lt;p&gt;In this line, the first yogh makes the gh-sound, while the second and third represent y-sounds. But you just have to know the words in order to figure that out.&lt;/p&gt;
    &lt;p&gt;As inconvenient as this confusion is for us modern readers of Middle English, that isn’t the reason yogh disappeared from the English language. The fate of yogh was sealed by a conspiracy of factors.&lt;/p&gt;
    &lt;p&gt;One is that yogh was never the only alternative for writing the sounds it wrote. The y-sound could also be written in the way the French wrote it, that is, ‘i’ or ‘y.’ The latter is the spelling that English ended up using for this sound, hence yourself instead of ȝourself. The gh-sound could also be written ‘h,’ ‘ȝh,’ or ‘gh.’ The last of these, of course, is what English ended up adopting.&lt;/p&gt;
    &lt;p&gt;But the death blow dealt to yogh was the printing press. The earliest printing press in England was a Flemish import, as were the typefaces. But the yogh letter was unique to English, and like the other letters unique to English, it would be expensive to print. And, as we just saw, there were ready alternatives, so yogh disappeared without a trace… from English.&lt;/p&gt;
    &lt;p&gt;In Scotland, on the other hand, it stuck around for longer. Scots used the combination ‘lȝ’ to represent an ‘ly’ sequence like we have in million, and ‘nȝ’ to represent either the ‘ny’ sequence like in canyon, or an ‘ng’ sound like in singer.&lt;/p&gt;
    &lt;p&gt;And Scottish printers were more eager to keep it than English printers were. So they took advantage of the visual similarity between ‘ȝ’ and ‘z’ — most forms of cursive writing in English still write ‘z’ like ‘ȝ’ — to write their yoghs with ‘z’s.&lt;/p&gt;
    &lt;p&gt;You still see the results of this substitution, ‘lz’ and ‘nz,’ in certain Scottish names. But the ‘z’ has led them to be pronounced in ways that have nothing to do with their traditional forms. So Menzies and Mackenzie were meant to spell things that sounded more like Mingus and Mackenyie.&lt;/p&gt;
    &lt;p&gt;And that’s how one single letter of the Middle English alphabet ended up being pronounced like ‘y,’ ‘gh,’ or even eventually like ‘z.’ I warned you it would be complicated.&lt;/p&gt;
    &lt;p&gt;But the journey through the history of yogh has allowed us to peer down some interesting side alleys of the history of writing, from Carolingian scribal practices to the compromises of Scottish printers.&lt;/p&gt;
    &lt;p&gt;I don’t lament the loss of yogh myself, not nearly as much as I lament the fate of other lost letters. But if the cause of yogh is one ȝou fancy taking up ȝourself, there’s nothing standing in ȝour waȝ (it’s included in many modern fonts), althouȝ I can imagine hiȝer causes to aspire to.&lt;/p&gt;
    &lt;p&gt;The name of the letter yogh is pronounced today in many ways: you can say it to rhyme with log, loch, or brogue.&lt;/p&gt;
    &lt;p&gt;Technically, it was the double-storey, closed-loop ‘g’ that was associated with Carolingian minuscule. The open-loop, single-storey ‘g’ was a later development. Today, they’re seen as more or less interchangeable: in fact, I don’t even know what version you’re seeing when you read this, since it’ll look different on the web and in your email client.&lt;/p&gt;
    &lt;p&gt;If you know phonetic terminology, I’ll be more specific: this sound was the voiceless velar fricative, or [x] in the International Phonetic Alphabet. In some situations, it was likely the voiceless palatal fricative (IPA [ç]).&lt;/p&gt;
    &lt;p&gt;If you want to know why the names of these letters sound completely different in Modern English (‘i’ and ‘e’ sound more like the vowels in buy and bee), let me tell you all about it.&lt;/p&gt;
    &lt;p&gt;Conscientious modern editors (myself included, he said humbly) will spell the ‘g’ that you’re supposed to pronounce like ‘y’ with a little dot on top: ‘ġ.’&lt;/p&gt;
    &lt;p&gt;Ditto for the two pronunciations of ‘c.’&lt;/p&gt;
    &lt;p&gt;Note for nerds: this was the voiced velar fricative [ɣ]. Yogh would later be used for the voiceless velar fricative [x], which actually had a different origin in the ancestor of Old English. But the two sounds ended up sounding identical at the end of a word, so yogh ended up being used for both.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45455882</guid><pubDate>Thu, 02 Oct 2025 21:34:42 +0000</pubDate></item><item><title>Self-supervised learning, JEPA, world models, and the future of AI [video]</title><link>https://www.youtube.com/watch?v=yUmDRxV0krg</link><description>&lt;doc fingerprint="7055905545553646"&gt;
  &lt;main&gt;
    &lt;p&gt;About Press Copyright Contact us Creators Advertise Developers Terms Privacy Policy &amp;amp; Safety How YouTube works Test new features NFL Sunday Ticket © 2025 Google LLC&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45457048</guid><pubDate>Thu, 02 Oct 2025 23:57:23 +0000</pubDate></item><item><title>Researchers develop molecular qubits that communicate at telecom frequencies</title><link>https://chicagoquantum.org/news/researchers-develop-molecular-qubits-communicate-telecom-frequencies</link><description>&lt;doc fingerprint="793d90fa6ec5c048"&gt;
  &lt;main&gt;
    &lt;p&gt;A team of scientists from the University of Chicago, the University of California Berkeley, Argonne National Laboratory, and Lawrence Berkeley National Laboratory has developed molecular qubits that bridge the gap between light and magnetism—and operate at the same frequencies as telecommunications technology. The advance, published today in Science, establishes a promising new building block for scalable quantum technologies that can integrate seamlessly with existing fiber-optic networks.&lt;/p&gt;
    &lt;p&gt;Because the new molecular qubits can interact at telecom-band frequencies, the work points toward future quantum networks—sometimes called the “quantum internet.” Such networks could enable ultra-secure communication channels, connect quantum computers across long distances, and distribute quantum sensors with unprecedented precision. Molecular qubits could also serve as highly sensitive quantum sensors; their tiny size and chemical flexibility mean they could be embedded in unusual environments—such as biological systems—to measure magnetic fields, temperature, or pressure at the nanoscale. And because they are compatible with silicon photonics, these molecules could be integrated directly into chips, paving the way for compact quantum devices that could be used for computing, communication, or sensing.&lt;/p&gt;
    &lt;p&gt;The new molecular qubit contains erbium, a rare-earth element. Rare earths are used in classical technologies as well as emerging quantum technologies because they absorb and emit light very “cleanly” relative to other elements, but they also interact strongly with magnetic fields.&lt;/p&gt;
    &lt;p&gt;“These molecules can act as a nanoscale bridge between the world of magnetism and the world of optics,” said Leah Weiss, postdoctoral scholar at the University of Chicago Pritzker School of Molecular Engineering (UChicago PME) and co-first author on the paper. “Information could be encoded in the magnetic state of a molecule and then accessed with light at wavelengths compatible with well-developed technologies underlying optical fiber networks and silicon photonic circuits.”&lt;/p&gt;
    &lt;p&gt;On a quantum level, the relationship between light and magnetism is subtle and complex. Light is often how quantum information is transmitted and read; magnetism is deeply connected to “spin”, a unique quantum property that underlies a variety of quantum technologies such as sensors and certain types of quantum computers. This work builds on a foundation of two fields, quantum optics—with applications in lasers and quantum networks—and synthetic chemistry—which is responsible for the contrast agents used in magnetic resonance imaging (MRI) machines—to establish a molecular building block that can bridge the divide between them.&lt;/p&gt;
    &lt;p&gt;“Rare-earth chemistry provided a fortuitous combination of properties that allowed us to bring these capabilities to a molecular system,” said Grant Smith, graduate student at PME and another first author on the paper. “There were a lot of things pointing toward this as an exciting platform to advance the use of optical degrees of freedom in molecular spin qubits. One of the central focuses of this work, and the work in the lab more broadly, is that we want to really expand the gamut of quantum systems and materials that we can control and interact with.” By doing this, he says, “you can begin to think about new and unconventional ways to utilize and integrate them into technologies.”&lt;/p&gt;
    &lt;p&gt;Using optical spectroscopy and microwave techniques, the team demonstrated that the erbium molecular qubits used frequencies compatible with silicon photonics, which are used in telecommunications, high-performance computing, and advanced sensors. The researchers say this compatibility with mature technologies could accelerate the development of hybrid molecular–photonic platforms for quantum networks.&lt;/p&gt;
    &lt;p&gt;“By demonstrating the versatility of these erbium molecular qubits, we’re taking another step toward scalable quantum networks that can plug directly into today’s optical infrastructure,” said David Awschalom, the Liew Family Professor of Molecular Engineering and Physics at the University of Chicago and principal investigator of the study. “We’ve also demonstrated that these atomically engineered qubits have the capabilities necessary for multi-qubit architectures, which opens the door to a wide spectrum of applications, including quantum sensing and hybrid organic-inorganic quantum systems.”&lt;/p&gt;
    &lt;p&gt;Both Weiss and Smith emphasized the importance of their collaboration with chemists at UC Berkeley, especially their co-first author Ryan Murphy in the research group of Jeffrey Long, calling it “absolutely critical” to the work and “a privilege.”&lt;/p&gt;
    &lt;p&gt;“Synthetic molecular chemistry provides an opportunity for optimizing the electronic and optical properties of rare earth ions in ways that can be difficult to access in conventional solid-state substrates,” said Murphy. “This study is just scratching the surface of what we think we can accomplish.”&lt;/p&gt;
    &lt;p&gt;“Our work shows that synthetic chemistry can be used to design and control quantum materials at the molecular level,” said Long, Professor of Chemistry at UC Berkeley and co-principal investigator. “This points to a powerful route for creating tailor-made quantum systems with applications in networking, sensing, and computation.”&lt;/p&gt;
    &lt;p&gt;The study was supported by the U.S. Department of Energy’s Office of Science and Q-NEXT, a DOE National Quantum Information Science Research Center.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45457411</guid><pubDate>Fri, 03 Oct 2025 00:44:42 +0000</pubDate></item><item><title>Microcomputers – The Second Wave: Toward a Mass Market</title><link>https://technicshistory.com/2025/10/03/microcomputers-the-second-wave-towards-a-mass-market/</link><description>&lt;doc fingerprint="a568d34923a725fc"&gt;
  &lt;main&gt;
    &lt;p&gt;In 1977, three new microcomputers appeared on the scene that broke free from the industry’s hobbyist roots: the Apple II, the Commodore PET, and the Tandy/Radio Shack TRS-80. Much later, in the 1990s, journalists and historians began reverently referring to this group as “the Trinity.” Though all three machines had different origins and different trajectories (Apple, for example, appeared in 1978 to be an also-ran before rising to eclipse all of its rivals), the distinctiveness of the 1977 generation of computers is not merely a retrospective imputation by later writers. The hobby journalists of the time recognized that with the Trinity, something like an “appliance” computer had arrived on the scene, “a clean break from commercial and hobbyist computer systems requiring technical skill and dedication from their operators into a consumer market where no qualifications are required of the customer.”[1]&lt;/p&gt;
    &lt;p&gt;Three factors were required to join this holy ensemble: the technical expertise to design a capable and reliable microcomputer, a nose for the larger business opportunity latent in the hobby computer market, and the capital resources to produce, market, and sell thousands (or even tens of thousands) of computers per month. Most of all it required a certain measure of daring, a willingness to a take a leap in the dark.&lt;/p&gt;
    &lt;p&gt;After all, the transformation of the microcomputer hobby into a large-scale commercial enterprise came as a surprise to most outsiders. In 1977, the established mainframe and minicomputer makers remained cooly aloof from the microcomputer business. Clearly, computer enthusiasts had found in the Altair and its successors a fascinating gadget to occupy their spare hours. It did not necessarily follow that these toys had anything to do with the “real” computer business, any more than model rocketry had to do with putting a man on the moon. Two of the leading minicomputer makers, Hewlett-Packard and Digital, were offered ready-made micro designs by computing-loving engineers within their ranks (Steve Wozniak and Dave Ahl, respectively), but both rejected the idea, unwilling to pursue a fringe market that seemed to have nothing to do with their business.[2]&lt;/p&gt;
    &lt;p&gt;Even many of the hobbyists themselves didn’t believe that the market for a home computer would extend much beyond the existing circle of electronic hobbyists and computer enthusiasts. But a few people with access to deep pockets (not necessarily their own) smelled an opportunity in the microcomputer, and decided to pursue it, and those people formed the breaking edge of the second wave of personal computers.&lt;/p&gt;
    &lt;p&gt;The obvious place to start to tell the story of the second wave is Apple Computer: not because it is, retrospectively, the most well-known of the three, but because it had the deepest roots in the first-wave hobby community. Commodore and Tandy were well-established companies, dragged into the computer business almost against their will by internal agitators who believed fervently in the idea of the personal computer. Apple was founded by and for hobbyists. If not for the fickle whims of fate and the chutzpah of Steve Jobs, it would have met a quiet demise in total obscurity, like so many other hobby computer companies of the day.&lt;/p&gt;
    &lt;head rend="h3"&gt;Apple Computer&lt;/head&gt;
    &lt;p&gt;The story of Apple Computer (later, simply Apple) continues to fascinate because of the company’s massive economic success and cultural impact (first in the early 1980s, then again in the twenty-first century), because of its meteoric rise from humble beginnings, and because of the vivid and contrasting personalities of its two primary co-founders: Steve Jobs and Steve Wozniak. No other topic I will cover in this series has a comparably extensive literature: all of the known details of the early years of the two Steves and their company could fill more than one book (and have). Here we can note only the most important highlights.&lt;/p&gt;
    &lt;p&gt;What became the first Apple computer began as an anonymous circuit board, the product of an intense burst of creative energy by Steven “Woz” Wozniak. Wozniak’s engineer father moved his family to Sunnyvale, California, at the southern end of San Francisco Bay, in the late 1950s, to take a job at Lockheed. The younger Wozniak developed an early fascination with electronics, and he came of age in the perfect environment to feed and reinforce that fascination: a suburban neighborhood teeming with engineer dads on every block, who had bins full of parts and minds full of expertise to lend to the eager young gadget enthusiasts who roamed the sidewalks.[3]&lt;/p&gt;
    &lt;p&gt;By the time Woz graduated from high school in 1968, he had grown into a true electronics genius, with a level of insight and skill far beyond the typical hobbyist. He could envision a design that would produce the desired effect in the most efficient way possible, with the elegant finality of a mathematical proof. Socially isolated, he lived an inward life of imagination, spending every spare moment at home and in school sketching designs for electronic systems. His social awkwardness dwelled side-by-side with a love of pranks and juvenile humor: in his early twenties he ran a Dial-a-Joke service out of his home that played pre-recorded Polack jokes from an answering machine.[4]&lt;/p&gt;
    &lt;p&gt;His high school electronics teacher gave Wozniak the opportunity to make weekly visits to a nearby corporate computer center, and he learned about minicomputers from the trade literature at the Stanford Linear Accelerator Center (SLAC). Like many other young men of his generation, these brushes with computing got him pining for his own computer; unlike most of them, he decided to do something about it. In 1971, while a student at University of California, Berkeley, he built a home computer with the help of a younger friend, a high school student named Bill Fernandez. This “Cream Soda Computer,” named for the beverage that fueled its creation, was roughly similar in character and capabilities to the Kenbak-1 sold by John Blankenbaker that same year: a very basic processor, a tiny memory, and a handful of lights for output. Meanwhile, Woz continued to pore over the brochures and manuals for dream machines like the Data General Nova minicomputer, and to work out schematics on paper for minicomputers of his own design.[5]&lt;/p&gt;
    &lt;p&gt;For years, Wozniak’s dream of a computer to call his own slumbered. Then, in the spring of 1975, a sudden shock jolted it awake. His friend Allen Baum took Wozniak to the first Homebrew Computer Club meeting under false pretenses—he told Woz that the people there were working on computer video terminals like Don Lancaster’s TV Typewriter. Wozniak knew all about that: he had already designed his own terminal to use with a local time-sharing service, Call Computer. He was unprepared, then, when he arrived at Don French’s Menlo Park garage and found everyone chattering about microprocessors. Accustomed to mastery of all things electronic, Wozniak initially recoiled at being thrown into an environment that exposed him as ignorant.[6]&lt;/p&gt;
    &lt;p&gt;After the meeting, though, he began looking into how these newfangled microprocessors worked, and found that they replicated the structure of his favorite minicomputers in miniature (indeed, the first Intel microprocessor was consciously modeled on the DEC PDP-8). Moreover, he saw that with a microprocessor, he could put a whole computer right in his TV terminal, and eliminate the need to actually “call” some outside computer.[7]&lt;/p&gt;
    &lt;p&gt;Wozniak designed and built his second computer over the following months. For the processor, he opted at first for the Motorola 6800, but then found a much cheaper device with a similar design: the MOS Technology 6502, a new product that he acquired for $25 at the Western Electric Show and Convention (WESCON) at San Francisco’s Cow Palace, in June 1975. He assembled a circuit board around the processor with controller chips for a keyboard, TV screen, 4K bytes of static RAM, and a tiny program in ROM to bring up the keyboard interface at power on. Later in the year he upgraded to cheaper (but more finicky) dynamic RAM, with the help of his friend Steve Jobs, a classmate of Bill Fernandez.[8]&lt;/p&gt;
    &lt;p&gt;Had it been only up to Wozniak, the story of his computer would end there, as a minor anecdote in the history of hobby microcomputers. Proud of his accomplishment but shy of self-promotion, he would set up his computer at Homebrew meetings and wait patiently to lure in fellow hobbyists, to whom he would offer free copies of the plans for the machine. He found few takers. Wozniak’s design was clean and self-contained, but others were cobbling together the same capabilities by combining an Altair, a Processor Technology memory board, and a TV Typewriter. Moreover, using the 6502 processor put him out of step with the mainline hobby culture of Intel 8080 machines based on Altair.&lt;/p&gt;
    &lt;p&gt;Wozniak didn’t mind that at all. He had not designed his computer to fill a market need, but because he wanted it. Comfortably settled into his dream job—designing calculators for Hewlett-Packard (HP)—and into his first real romantic relationship (with Alice Robertson, whom he met through his Dial-a-Joke line), he was content with the direction of his life and felt no pull to parlay his talent for computer design into fame, recognition, or money. His young friend Steve Jobs, on the other hand, bristled with restless energy. Though he found electronics interesting, he lacked Wozniak’s all-consuming passion for the field, and did not know where to turn instead for fulfillment. Dissatisfied with the well-worn patterns around which others organized their lives, he spent his late teens and early twenties in search of some kind of vital spiritual awakening, whether through bizarre diets inspired by German-born writer Arnold Ehret, primal scream therapy, the ancient wisdom of India, or the All One Farm, a hippie commune in Oregon.[9]&lt;/p&gt;
    &lt;p&gt;Jobs saw in Woz’s computer the potential for a business: instead of giving away the plans, they could sell the pre-assembled boards (with no case, keyboard, monitor, or other accessories). In early 1976, he cajoled his friend into a partnership; Woz agreed, but still considered this a sideline to his real work at HP. Inspired by the orchard at All One Farm where he had been spending much of his time, Jobs proposed the name Apple Computer. The partnership had a clear division of labor: Wozniak would design the hardware and software, Jobs would make the business decisions.&lt;/p&gt;
    &lt;p&gt;Financed by the sale of their most valuable property (Jobs’ Volkswagen bus and Wozniak’s HP calculator), and thirty-day credit with a parts supplier, they made a fifty-computer deal with Paul Terrell, owner of the Byte Shop computer store. But this promising beginning also turned out to also be the end of their success; very few other Apples were sold. By mid-1976, the barebones board offered by Apple didn’t cut it anymore. A hobbyist could order a Processor Technology Sol-20 that came in a handsome case with integrated power supply, keyboard and cassette interface. Even when outfitted with all of that (which Terrell had to do himself in order to make a saleable computer), the Apple lacked compatibility with the growing array of software and hardware designed for the 8080 processor and S-100 bus.[10]&lt;/p&gt;
    &lt;p&gt;Jobs knew that they would need a better computer and more money to build it. In late 1976, Woz lost himself in a second design. While he had built the first Apple so he could finally have a minicomputer of his own, he built the Apple II so he could create and play arcade games with full-color graphics. Woz knew the field well, because Jobs had an on-again, off-again job at Atari in Sunnyvale and Woz had taken a commission from his friend to design a Breakout game for the company—a single-player Pong variant, with the goal to break a whole array of blocks before losing the ball off the bottom of the screen. Unlike the Atari games of the time, though, Apple II games would be written in mutable BASIC code, not fossilized in hardware. As usual for Woz, the Apple II’s design was spare and efficient. The pièce de resistance was circuitry to time-share the memory bus so that the video card could read from memory while drawing each line of the screen, then hand control to the processor while waiting for the cathode ray beam to reset to the start of the next line.&lt;/p&gt;
    &lt;p&gt;Jobs, meanwhile, went to work on finding an investor. He tried selling Apple Computer to Atari and Commodore (a calculator firm about which we’ll have much more to say very shortly), but the former had no interest in the product and the latter balked at the price. Jobs asked Atari founder Bushnell (his former employer) for an investment, and was rebuffed again. But Bushnell did ask venture capitalist Don Valentine to come take a look at Apple. Valentine was turned off by Jobs’ hippie vibes, but put Jobs in touch with a former employee of his from his Fairchild Semiconductor days, Mike Markkula.[11]&lt;/p&gt;
    &lt;p&gt;Through this chain of happenstance, Apple Computer found exactly the right person to make it a success. Jobs exhibited taste and enterprise, but untempered by experience and marred by streaks of cruelty and pettiness. Wozniak possessed exceptional engineering talent, but entirely lacked business sense, and avoided any work that he didn’t find personal interesting.&lt;/p&gt;
    &lt;p&gt;Markkula was an even-keeled veteran of Fairchild and intel, living in semi-retirement in his thirties after making several million dollars off of his stock. He brought to Apple $250,000 of his own money, and the connections to bring in far more. He also brought knowledge about how to build and develop a company, and a deep belief in the market for something like the Apple. Markkula was already personally invested in the idea of computing at home: at Intel he had used a home teletype terminal to connect to an Intel time-sharing computer. He used it for company business but also to balance his personal checkbook, and had always wondered why Intel didn’t package the 8008 or 8080 into a computer and sell it.[12]&lt;/p&gt;
    &lt;p&gt;By the spring of 1977, the Apple II was ready to sell. Wozniak had finished the circuit design, Markkula had laid out a business plan, and Jobs had selected, a sleek, molded-plastic case that would make Apple II the most elegant-looking computer on the market. At a starting price of $1,298, it was far from the cheapest, however, and its novel processor and bus still put it outside the mainstream of hobby hardware and software. Sales were initially slow.&lt;/p&gt;
    &lt;p&gt;But Markkula kept the investment money flowing, and coaxed one last engineering miracle from Woz. Having ported his checkbook program to the Apple II, Markkula was annoyed at how long it took to load from cassette tape, and gave Wozniak the mandate to produce a magnetic disk drive for the Apple II, using the new 5.25 inch drives available from Shugart Associates. A floppy disk of the time could hold less data than a tape, but the computer could read and write it far faster and could instantly access any part of the rapidly-spinning disk (whereas tape could only be read or written at whatever position it was currently wound to).&lt;/p&gt;
    &lt;p&gt;The $595 Disk II immediately set Apple apart from its competitors, and set the stage for the company’s future growth. With the disk drive, color graphics, eight expansion slots, and the capacity for up to forty-eight kilobytes of memory, the Apple II was by far the most fully-featured and extensible of the Trinity. In 1977 and 1978, however, Apple Computer remained an also-ran. Other companies, with pre-existing manufacturing and distribution networks, raced ahead of with mass-market computers at half the price and many times the reach. They put up sales and production numbers far exceeding anything that the hobby computer market had ever seen. The first of these was Commodore.&lt;/p&gt;
    &lt;head rend="h3"&gt;Commodore&lt;/head&gt;
    &lt;p&gt;Commodore, co-founded by Jack Tramiel and Manfred Kapp, began life as a typewriter importer in Toronto, but pivoted into the calculator business in the late 1960s, selling re-branded Japanese imports from Casio and then later building its own factories, with the backing of Canadian financier Irving Gould.[13]&lt;/p&gt;
    &lt;p&gt;Tramiel, born Idek Trzmiel in Poland, survived Auschwitz and came to the U.S. in his early twenties, where he worked his way up from the bottom. Not much of an idea man or product innovator, he got ahead on hard work, a hard nose, and ruthlessness (this adjective is attributed to him seven times by various persons in Brian Bagnall’s book, Commodore: A Company on the Edge). Behind him lurked the shadowy Canadian financier Gould, who brought large quantities of cash, international contacts, and clever tax evasion schemes.&lt;/p&gt;
    &lt;p&gt;Like most North American calculator makers, Commodore found itself on the brink of disaster in 1974, after semiconductor firms like Texas Instruments began to flood the market with dirt-cheap calculators. Tramiel (now CEO of Commodore) decided to beat them by joining them: he vertically integrated by buying one of his suppliers, MOS Technology, the very firm that had built the 6502 processor used in the Apple I and II. Once again, we find a thread woven into the story of the personal computer out of the unraveling fabric of the North American calculator business.&lt;/p&gt;
    &lt;p&gt;Tramiel acquired MOS in September 1976 in exchange for a modest dollop of cash, a more substantial stake in Commodore, and a generous serving of pressure on his (also financially beleaguered) supplier.[14] In the bargain he had also acquired Charles “Chuck” Peddle, whose vision for the future of computing would pull Commodore in an entirely new direction.&lt;/p&gt;
    &lt;p&gt;A cocky striver from a poor family in Maine, Peddle studied electrical engineering at the state university, then began bouncing around the country in search of bigger and better opportunities: to California to take a job at General Electric (GE), then to GE’s time-sharing systems division offices in Arizona and Ohio, then back to Arizona to take a swing at starting a smart terminal business, miss, and join the semiconductor design team at Motorola, then to Pennsylvania to join MOS Technology as part of a breakaway group of engineers who had worked on Motorola’s 6800 microprocessor. In contrast to the introverted Woz and the otherworldly Jobs, Peddle was brash and frankly carnal—the type of man who would compare the pleasures of computer use to sex and boast that his wife had the figure of Zsa Zsa Gabor.[15]&lt;/p&gt;
    &lt;p&gt;Peddle helped to design the 6502 processor, but it was never targeted at microcomputers. It was designed as a controller for some larger application, such as an industrial machine, a traffic signal, or an automobile. At a price point of $25, it aimed to compete with the Intel 4040, the recently released successor to the 4004. MOS also sold the KIM-1, a single-board computer with a calculator screen and keypad built into it. It was intended as a marketing showpiece for the 6502, not a consumer product. Nonetheless, it sold in surprisingly large numbers to hobbyists who appreciated having a very inexpensive all-in-one computer.&lt;/p&gt;
    &lt;p&gt;In late 1975, Peddle was visiting the Miami suburbs to help Allied Leisure, a maker of electro-mechanical arcade games, design a microprocessor-powered pinball machine using the 6502. Peddle discovered that one of the Allied engineers, Bill Seiler, was a hobbyist who had bought a computer from the Digital Group in Denver, but then struggled to figure out what to do with it.[16]&lt;/p&gt;
    &lt;p&gt;Peddle decided he wanted to launch a full-fledged computer product: not because he had always dreamed of a computer of his own, but because he believed in the market opportunity, having witnessed both the not-quite-satisfied demand of hobbyists like Seiler for a computer that was both easy-to-use and able to do something useful, and the eagerness with which those same hobbyists had taken up the cheap, simple KIM-1. Up to this time, the microcomputer business was almost fully autochthonous, built by native hobbyists; Peddle was the first immigrant. With MOS scaling back under financial pressure, Peddle intended to jump ship for Allied Leisure, which had agreed to launch his planned computer. But then, in the fall of 1976, came the Commodore acquisition.[17]&lt;/p&gt;
    &lt;p&gt;Commodore’s vice president of engineering, Andre Sousan, later a major player at Apple, didn’t want to lose Peddle, and agreed to help him pitch his computer to Tramiel. Tramiel, in turn, agreed to give Peddle a computer division in Palo Alto. Sousan and Peddle succeeded with Tramiel because they framed the project in terms of the familiar calculator market: as historian Brian Bagnall writes, “[they] pitched the product as an evolution of the calculator which would surpass the HP65,” adding new features like a TV monitor and cassette deck. Tramiel especially appreciated the idea of having electronics retailer Radio Shack market the computer under its own brand, in exchange for more Commodore calculator distribution in their stores.[18]&lt;/p&gt;
    &lt;p&gt;Tramiel wanted something to show at the January 1977 Consumer Electronics Show (CES), just a few months away, so Peddle went to Apple, the only existing company with a working 6502-based computer, to try to acquire their design. As we have seen, those negotiations went nowhere, so Peddle and his team slapped the guts of a 6502-based sprinkler-system controller into a case with a rubberized keyboard sourced from Commodore’s existing calculator designs. Unimpressed by a demo of this barely-working machine at CES, Radio Shack decided they could do at least as well themselves, and broke off negotiations, too.[19]&lt;/p&gt;
    &lt;p&gt;Commodore went ahead alone, and announced the imminent arrival of the “Commodore PET 2001” – its name inspired by the pet rock fad, and its numerical designation borrowed from the space odyssey. Peddle built hype for the machine with an early prototype at the West Coast Computer Faire in San Francisco in April 1977, and the mob of over ten thousand attendees convinced Tramiel that this computer idea was something more than just a means of selling more calculators. As company revenues from calculators continued to dwindle, Tramiel kept the company afloat by transforming the excitement for the PET into cash flow with an advanced payment plan that secured eager buyers a place in line—once the computers were actually built.[20]&lt;/p&gt;
    &lt;p&gt;In the fall of 1977, Commodore finally began to ship PETs to customers. The resulting computer had serious shortcomings. Tramiel had refused to pay the up-front cost for a modern-looking plastic-molded exterior, instead funneling some revenue to his struggling file cabinet subsidiary by ordering sheet metal cases. He also insisted on a calculator-style keyboard with small rubberized keys, which proved unpleasantly cramped and flimsy. With black-and-white character graphics and no expansion slots or speaker, the PET was neither as handsome nor (in most ways) as capable as the Apple II. But it held two decided advantages: Commodore’s existing retail distribution network and a lower price. An 8KB model with integrated tape deck and monitor included cost just $795—two-thirds the price of an Apple II without those accessories.[21]&lt;/p&gt;
    &lt;p&gt;PET continued to attract attention from the press that fall, with an article in BYTE touting it as an “appliance computer,” extensive coverage in Personal Computing, and a cover feature in Popular Science. At first production failed to keep up with interest: “By the end of 1977,” Bagnall writes, “Commodore had only managed to assemble a meager 500 machines.” But Commodore straightened out its production lines, and by one estimate they sold about 25,000 PETs in 1978.[22]&lt;/p&gt;
    &lt;p&gt;Nonetheless, Commodore remained in a slightly uncomfortable position. Peddle had tried and failed to a launch a disk drive for the PET, in large part because his lack of understanding of the hobby market led him to overshoot, aiming for a complex dual-disk drive that would appeal to the kind of corporate mini-computer user that he used to be (His failure incurred Tramiel’s wrath, leading Peddle to rashly jump ship to Apple –a move that wouldn’t last.) So, on the one hand, with no color graphics, limited memory, and no disk drive, the PET could not compete for the high-end customers who wanted those capabilities and could find them in an Apple II. On the other, Commodore had failed to dominate the market for low-cost, mass-produced machines either: the PET’s 1978 sales would have made it the fastest-selling computer of all time, if not for the final entry in the 1977 Trinity, the TRS-80.[23]&lt;/p&gt;
    &lt;head rend="h3"&gt;Radio Shack&lt;/head&gt;
    &lt;p&gt;Tandy Radio Shack was the creation of Charles Tandy, a driven World War II veteran from Brownsville, Texas, who expanded his father’s Forth Worth shoe leather business into a nationally-known leather and leathercrafts empire. By the 1960s, Tandy felt that leather had taken him as far as it could; he wanted to expand into new markets with more growth potential. So, in 1963, he acquired an ailing electronics chain headquartered in Boston called Radio Shack. Pouring money from the leather business into his new venture, he expanded Radio Shack from just nine stores to several thousand over the following decade. Customers could walk into a Radio Shack in nearly every city in the United States, from Eugene, Oregon to Fort Lauderdale, Florida: even sparsely populated states like Montana and Wyoming boasted several stores each. This ubiquity provided the springboard for the TRS-80’s success.[24]&lt;/p&gt;
    &lt;p&gt;The impetus for Tandy’s entry into the computer business came from a hobbyist on the inside. Don French started his career as a teenage salesman in a Radio Shack store outside San Diego and rose rapidly through the ranks to become a project manager at the Fort Worth headquarters in 1973, while still in his mid-twenties. His fascination with computers was sparked by a course on the topic he took at Grossmont Junior College, and kindled anew by the arrival of the first hobby computers. He ordered the Mark-8 kit from Jonathan Titus in 1974, and then the MITS Altair when it became available the following year. French, enamored with his new toys, became convinced that Radio Shack should bring out its own kit computer, and tried earnestly to convince his bosses of the same.[25]&lt;/p&gt;
    &lt;p&gt;Leadership gradually came around to the idea that an expensive, innovative computer product offered an opportunity to revise Radio Shack’s image as a purveyor of low-cost, low-quality, imitative merchandise. According to French, the key turning point came in the fall of 1975, when audio equipment maker Advent wowed the market with a new speaker design. An infuriated Charles Tandy railed at the fact that his company couldn’t innovate like that, and latched onto French’s computer proposal as a way to make similar headlines. His passion for the idea could not have run too deep, however, because French’s plans for a Radio Shack computer went nowhere until the spring of 1976.[26]&lt;/p&gt;
    &lt;p&gt;At that time, a group of Tandy Radio Shack buyers including John Roach (Radio Shack’s Vice President) visited National Semiconductor in Santa Clara, California, to check out the latest chip offerings, including the company’s new SC/MP microprocessor. While there, they met a young electrical engineer named Steve Leininger. Then, when they visited the local Byte Shop to scope out the hobby computer scene, there was Leininger again, working a part-time gig behind the counter. Leininger, as it turned out, in addition to his engineering credentials, regularly attended Homebrew Computer Club meetings and was spending his spare hours building a hobby computer and writing his own BASIC. Tandy had found the perfect man to kick-off French’s computer project, combining a passion for hobby computers with the engineering chops to understand the nuances of integrated circuits and microprocessor design. The opportunity to design a computer as a commercial product and access to a better job market for his out-of-work geologist wife were sufficient enticements to bring Leininger to Texas.[27]&lt;/p&gt;
    &lt;p&gt;Leininger grew up near South Bend, Indiana, and earned a bachelor and master’s degree in electric engineering in just four years at Purdue University before accepting a job at National Semiconductor. He did not have the bold personality of Woz, Jobs, or even Peddle, but he certainly had the skills that Tandy needed. French’s notional computer project only began in earnest after Leininger’s move to Fort Worth in July 1976. However, most of the company’s leaders did not really believe that a computer would or could be a successful Radio Shack product, and they left Leininger toiling away in almost total isolation, first in a speaker plant at the Fort Worth stockyards, then in a saddle factory. [28]&lt;/p&gt;
    &lt;p&gt;It took several months before Leininger even knew what he should build. French had initially planned on a kit, as kits fell within his preserve at Tandy, making it relatively easy to sneak by leadership. But in October he and Leininger agreed to develop a pre-assembled computer instead, at the insistence of Radio Shack president Lew Kornfeld. Kornfeld felt burnt by a recent digital clock kit, which precipitated a high rate of returns from customers unable to put it together, and didn’t want to send and even more complicated kit project out the door. It is likely at this moment of uncertainty that French turned to Tramiel and Peddle to explore having Commodore build the computer instead, a notion which fell through at CES in January 1977, likely because the Tandy people saw that Peddle had nothing better to offer than what Leininger had prototyped to that point.[29]&lt;/p&gt;
    &lt;p&gt;Other than general skepticism about the viability of a Radio Shack computer in the first place, the clearest message French and Leininger got from Tandy leadership was to keep the price as low as possible: the original target (under the kit plan) was a $195 retail price. Cost control guided the rest of the design. For example, Leininger’s choice of the Zilog Z80 microprocessor, an 8080-compatible architected by the same Federico Faggin who had led the design of that seminal Intel chip. It offered more built-in circuitry than its Intel predecessor, including circuitry for refreshing dynamic RAM. Because dynamic RAM was cheaper than static, this lowered the cost of building the TRS-80. To save more money on hardware, Leininger wrote software to generate the tones for saving data to tape rather than using a physical tone-generator circuit. Meanwhile, because RCA offered to provide a cheap black-and-white TV already finished in a plastic “Mercedes silver” case, Radio Shack let the tail wag the dog, and adopted the same color for the case of the computer and keyboard, housed as a single unit.[30]&lt;/p&gt;
    &lt;p&gt;In February 1977 French, Leininger, and Roach presented the prototype to Charles Tandy and got the go-ahead to enter production. French thought they could sell 50,000 units; Lew Kornfeld found that laughable and proposed building 1,000; Roach finalized the number at 3,500 units, enough to get better economies of scale from the factory and to use a computer to manage inventory in each store if they found no buyers.[31]&lt;/p&gt;
    &lt;p&gt;Despite this continuing internal skepticism, the TRS-80 attracted tremendous interest when it was announced to the public at the Waldorf Hotel New York City on August 3rd, and even more so when French showed up with a working TRS-80s at the ComputerMania hobby computer convention in Boston, later that month. At just $600 for a monitor, keyboard, cassette recorder, four kilobytes of memory, and a simple built-in BASIC, it was substantially cheaper even than the recently-debuted PET. Just like Commodore, it took Radio Shack several more months to get their factory production lines humming, but once they did, Tandy sold TRS-80s at an astonishing rate: 100,000 in 1978, exceeding the number of minicomputers sold by all manufacturers combined that year (though certainly not coming close to their total dollar value). Rather than the flop that company leaders feared, it proved to be a vital new revenue source, accounting for 10% of Tandy’s revenue in 1978. The TRS-80 arrived just in time to take up the slack from the flagging citizens-band (CB) radio craze that had filled Radio Shack’s sails in the mid-1970s.[32]&lt;/p&gt;
    &lt;p&gt;These astonishing sales numbers are not explained by the TRS-80’s low price alone. It was also more physically accessible and visible to a broad audience than any computer before it. Radio Shack store managers across the United States set up a TRS-80, powered it on to the BASIC programming language prompt, and left it sitting out for anyone to play with. The experience that students, scientists, and engineers had been discovering and falling in love with in computer centers, labs, and offices for the previous decade became available to anyone who walked into a Radio Shack—and available to take home for just a few hundred dollars. Every electronic hobbyist who had not yet caught the computer bug was exposed every time they came into the store to pick up a few parts for a project, but so were millions of people who dropped in just to get some flashlight batteries or blank cassette tapes. One TRS-80 owner reported: “I discovered the magic of computers in a Radio Shack. My brother and I typed in a small sample program [10 INPUT “WHAT IS YOUR NAME”; A$:PRINT “HELLO,“A$ ] and I was absolutely astounded at what it did.” Others became Radio Shack bums, hanging out in the store all day for a chance to play with the computer.[33]&lt;/p&gt;
    &lt;p&gt;The TRS-80, however, did little to shake Radio Shack’s reputation for cut-rate products: the nickname “TRASH-80” appeared in print in late 1978, and would dog the product line for the rest of its existence, fairly or not. All of the personal computers of this era were clumsy and feeble compared to their minicomputer counterparts. The TRS-80 at least had a proper keyboard, unlike the early PETs. But much about it did exude a particular cheapness, including a mediocre BASIC written by Leininger (Radio Shack, like the rest of the Trinity, ended having to go to MicroSoft for a better version) and a finicky tape controller. Worst of all was the $300 Expansion Interface released in 1978, with ports for connecting a printer and a disk drive, and space for up to 32 kilobytes of additional memory and an expansion card. You could not do anything serious with the TRS-80 without an Expansion Interface, but it was notoriously unreliable, causing reboots, freezes, and monitor glitches. Even the TRS-80 advertisements were cheap knock-offs of Apple’s, with the attractive models in high-end homes replaced by unprepossessing Tandy employees posing awkwardly in Tandy offices or their suburban Fort Worth kitchens.[34]&lt;/p&gt;
    &lt;p&gt;The culture of cheapness extended to French and Leininger, as well. As mere cogs in the Tandy corporate machine, they would never see the kind of monetary rewards that awaited the founders of Apple. French, at least, expected a promotion to vice presidency and a bonus from his work on the TRS-80, but was blocked by Radio Shack president Lew Kornfeld after Charles Tandy’s death in late 1978. Disgruntled, he left to start his own company, implementing the CP/M disk operating system for the TRS-80. Leininger stayed on for several more years, designing Radio Shack computers.[35]&lt;/p&gt;
    &lt;head rend="h3"&gt;The Winnowing&lt;/head&gt;
    &lt;p&gt;In 1975 and 1976, a slew of hobby-entrepreneurs had founded companies to try to turn their love of computers into a living. As in so many new, innovation-driven markets, this early burst of entrepreneurial energy was followed by a brutal winnowing. The majority of the hobby computer companies collapsed by 1979, unable to survive in a suddenly much larger and more competitive market. [36]&lt;/p&gt;
    &lt;p&gt;MITS, though not founded as a hobby computer company, was the first to enter the market and also the first to leave. The company struggled to develop a focused and reliable line of products, and never really rose to the challenge of IMSAI, much less further waves of more powerful and easy-to-use computers. In May 1977, Roberts, who had tired of the business and wanted to cash in, sold MITS for six million dollars to Pertec, a maker of disk and tape drive systems. Most MITS employees disliked the new management. The best of them had already fled to MicroSoft or other ventures, or soon would (Dave Bunnell, for example, started the magazine Personal Computing). Pertec continued to make higher end microprocessor-based minicomputers into the 1980s, but retired the Altair in 1978, and never made another computer targeted at individuals.[37]&lt;/p&gt;
    &lt;p&gt;Bill Millard’s IMSAI, as we have already seen, launched a dud of a second product and was sucked dry of cash to help fund Millard’s chain of ComputerLand retail stores. It went bankrupt in 1979. Millard continued his financial shenanigans for decades, and in the 1990s became a wanted man for over $100 million in unpaid taxes. Processor Technology simply froze, failing to update its Sol product line in response to the threats posed by the rise of the Trinity, and also met its demise in 1979.[38]&lt;/p&gt;
    &lt;p&gt;The Digital Group of Denver had bet their company on a CPU-independent bus, the key product decision that made their computers attractive to hardcore electronic hobbyists who wanted to experiment with different processors. But this expensive and complicated setup also contributed to the company’s abysmal quality control, and new buyers began demanding to pay cash-on-delivery, not up front. This put Digital Group in a cash flow death spiral, and they, too declared bankruptcy in 1979 after a total of 3,000 computers sold.[39]&lt;/p&gt;
    &lt;p&gt;One hobby enterprise, as we know, survived by metamorphosing into a venture-capital-fueled bet on a large-scale personal computer market: Apple Computer. The other survivors found specialized niches unserved by the mass-market Trinity: Cromemco, for example, focused on delivering reliable, powerful, rigorously engineered hardware, and became the darling of the hardcore scientific computerist; Vector Graphics built turn-key business systems.&lt;/p&gt;
    &lt;p&gt;In 1975 and 1976, almost everyone entering the microcomputer business was attracted to it by their passion for the machines themselves; by 1978, with computers backed by deep-pocketed companies flying off of retail shelves, there was a new lure: the scent of money. Prior to that year, for example, almost every franchisee of the retailer ComputerLand was a computer-loving hobbyist. But after a Fortune magazine profile of the company ran in April, the franchise office was flooded with inquiries from businessmen and salesman with no prior interest in computers. For better and for worse, the microcomputer market was leaving its childhood, and its innocence was lost.[40]&lt;/p&gt;
    &lt;p&gt;Even more money was in the offing for those who could figure out how best to market these dazzling devices: make them more accessible, make them more fun, or even convince buyers that they were actually useful. Our next few installments will focus on who was buying these computers in such large quantities, and what they wanted them for.&lt;/p&gt;
    &lt;p&gt;[1] “Most Important Companies,” BYTE (September 1995), 100; Carl Helmers, “Reflections on Entry into Our Third Year,” BYTE (September 1977), 6; “Chuck Peddle on the PET Computer,” Personal Computing (September/October 1977), 31.&lt;/p&gt;
    &lt;p&gt;[2] Freiberger and Swaine, Fire in the Valley, 25-28.&lt;/p&gt;
    &lt;p&gt;[3] Michael Moritz, Return to the Little Kingdom: Steve Jobs, the Creation of Apple, and How it Changed the World (New York: Overlook Press, 2009), 31-32.&lt;/p&gt;
    &lt;p&gt;[4] Moritz, Return to the Little Kingdom, 49-52, 129.&lt;/p&gt;
    &lt;p&gt;[5] One important difference was the use of punched cards for input, though how exactly this worked is unclear. Punch card reader accessories for the computers of the time were typically large and expensive pieces of equipment, designed to read in hundreds of cards per minute. Steve Wozniak, iWoz: Computer Geek to Cult Icon (New York: W.W. Norton, 2006), 86-88. Moritz, Return to the Little Kingdom, 54-63.&lt;/p&gt;
    &lt;p&gt;[6] Wozniak, iWoz, 152-154. Wozniak also, at some point, began work on a video terminal design called the “Computer Conversor,” intended to be commercialized by Call Computer’s owner, Alex Kamradt. Whether this project began before or after the Homebrew meeting is unclear in the sources. Moritz, Return to the Little Kingdom, 124-126, 146-147. Wozniak briefly mentions the Call Computer project in his memoir (p. 170), but never mentions Kamradt, perhaps out of embarrassment that he ditched the never-finished Computer Conversor in favor of Apple Computer. Kamradt, a closeted homosexual, was murdered by a group of young men he picked up in 1991. Will Johnson, “Alex Kamradt,” 2010 (http://www.countyhistorian.com/knol/4hmquk6fx4gu-414-alex-kamradt.html).&lt;/p&gt;
    &lt;p&gt;[7] Wozniak, iWoz, 155-158.&lt;/p&gt;
    &lt;p&gt;[8] Wozniak, iWoz, 162-170; Mos Technology, “Mos 6502 Saves More Money,” September 1975 (https://upload.wikimedia.org/wikipedia/commons/1/14/MOS_6501_6502_Ad_Sept_1975.jpg).&lt;/p&gt;
    &lt;p&gt;[9] Moritz, Return to the Little Kingdom, 96-109.&lt;/p&gt;
    &lt;p&gt;[10] Moritz, Return to the Little Kingdom, 144-161.&lt;/p&gt;
    &lt;p&gt;[11] Moritz, Return to the Little Kingdom, 169-170, 182-185; Wozniak, iWoz, 194-196; Walter Isaacson, Steve Jobs (New York: Simon &amp;amp; Schuster, 2011), 72-76.&lt;/p&gt;
    &lt;p&gt;[12] Moritz, Return to the Little Kingdom, 183-185, 227-229; John Hollar, “Oral History of Armas Clifford (Mike) Markkula, Jr.,” Computer History Museum (May 1, 2012), 22-23.&lt;/p&gt;
    &lt;p&gt;[13] Gareth Edwards, “How Commodore Invented the Mass Market Computer,” Every (March 10, 2025), https://every.to/the-crazy-ones/the-first-king-of-home-computing.&lt;/p&gt;
    &lt;p&gt;[14] Brian Bagnall, Commodore: A Company on the Edge (Variant Press, 2011) 13, 55-58; “Calculator Maker Integrates Downward,” New Scientist (September 9, 1976), 541.&lt;/p&gt;
    &lt;p&gt;[15] Bagnall, Commodore, 4-13, 99, 115.&lt;/p&gt;
    &lt;p&gt;[16] Bagnall, Commodore, 43-44.&lt;/p&gt;
    &lt;p&gt;[17] Bagnall, Commodore, 51-54.&lt;/p&gt;
    &lt;p&gt;[18] Bagnall, Commodore, 59-61.&lt;/p&gt;
    &lt;p&gt;[19] Bagnall, Commodore, 70, 73-77, 84.&lt;/p&gt;
    &lt;p&gt;[20] Bganall, Commodore, 78, 97-101, 111, 117.&lt;/p&gt;
    &lt;p&gt;[21] Early promotional materials put the planned MSRP at $495, and some sources still report that price, but it was never offered that cheaply. A $495 4KB model was quickly discontinued when it was found to be a money loser. Bagnall, Commodore, 99, 101, 111, 114-115.&lt;/p&gt;
    &lt;p&gt;[22] “Commodore’s New PET Computer,” BYTE (October 1977), 50; “The PET Discussion,” Personal Computing (September/October 1977), 30-42; William J. Hawkins, “New Home Computers Can Change Your Lifestyle,” Popular Science (October 1977), 30-36; Bagnall, Commodore, 132; “BYTE News,” BYTE (May 1979), 117.&lt;/p&gt;
    &lt;p&gt;[23] Bagnall, Commodore, 161, 171-127.&lt;/p&gt;
    &lt;p&gt;[24] Irvin Farman, Tandy’s Money Machine: How Charles Tandy Built Radio Shack Into the World’s Largest Electronics Chain (Chicago: Mobium Press, 1992), 28-51, 154-163; Radio Shack, “1975 Electronics Catalog,” 84-85.&lt;/p&gt;
    &lt;p&gt;[25] Ira Goldklang, “TRS-80 Computers: Don French – The Father of the TRS-80,” June 13, 2021 (https://www.trs-80.com/wordpress/trs-80-computers-don-french/); “Interview with Don French, Co-designer of the TRS-80 Model I,” Floppy Days (February 21, 2016), https://floppydays.libsyn.com/floppy-days-53-interview-with-don-french-co-designer-of-the-trs-80-model-i.&lt;/p&gt;
    &lt;p&gt;[26] “Interview with Don French, Co-designer of the TRS-80 Model I,” Floppy Days (February 21, 2016).&lt;/p&gt;
    &lt;p&gt;[27] Farman, Tandy’s Money Machine, 402; David Welsh and Theresa Welsh, Priming the Pump: How TRS-80 Enthusiasts Helped Spark the PC Revolution (Ferndale, Michigan: The Seeker Books, 2013), 2-4.&lt;/p&gt;
    &lt;p&gt;[28] Welsh and Welsh, Priming the Pump, 4-5.&lt;/p&gt;
    &lt;p&gt;[29] The timeline of the TRS-80’s development has proved hard to pin down. My reconstruction of the timeline is anchored the very clear and precise dates given by Leininger in a 2024 interview: he started working for Tandy July 5th 1976, and demoed the computer to Tandy in February 1977. “Floppy Days 144 – Interview with Don French and Steve Leininger, Co-Designers of the TRS-80 Model I”, Floppy Days (Oct 27, 2024), https://floppydays.libsyn.com/floppy-days-144-interview-with-don-french-and-steve-leininger. In the same interview (and in other accounts), Don French places himself and John Roach at the West Coast Computer Faire before hiring Leininger to start working on the TRS-80, but with the first West Coast Computer Faire took place in April 1977, months after the prototype TRS-80 had already been demonstrated and approved for production by Charles Tandy. He also puts his conversations with Peddle at Commodore about possibly designing a computer for Radio Shack at a point before hiring, Leininger, but Peddle didn’t work for Commodore at that point. A 1981 article on Leininger gives an even more nonsensical timeline, in which Leininger leaves California to work for Tandy in the fall of 1975 (before the first Byte Shop, where he worked evenings, had even opened), chooses the Z80 in February 1976 (months before its release), and presents the prototype for Tandy’s approval in April 1976 for delivery in August of that same year (a year early). Jonathan Erickson, “The Men Behind the TRS-80,” Popular Computing (December 1981), 26-27.&lt;/p&gt;
    &lt;p&gt;[30] Welsh and Welsh, Priming the Pump, 4-5, 8.&lt;/p&gt;
    &lt;p&gt;[31] Welsh and Welsh, Priming the Pump, 6-7.&lt;/p&gt;
    &lt;p&gt;[32] Welsh and Welsh, priming the Pump, 25; “BYTE News,” BYTE (May 1979), 117; James L. Pelkey, “Chapter 7 – Data Communications: Market Order 1973-1979,” The History of Computer Communications (https://historyofcomputercommunications.info/section/7.1/Minicomputers,-Distributed-Data-Processing-and-Microprocessors).&lt;/p&gt;
    &lt;p&gt;[33] Welsh and Welsh, Priming the Pump, 30.&lt;/p&gt;
    &lt;p&gt;[34] Welsh and Welsh, Priming the Pump, 28, 36, 38; “Letters,” Kilobaud (December 1978), 18; Computer History Museum, “Radio Shack TRS-80 advertisement” (1977), https://www.computerhistory.org/revolution/personal-computers/17/298/1163; “Interview with Don French, Co-designer of the TRS-80 Model I”, Floppy Days (February 21, 2016), https://floppydays.libsyn.com/floppy-days-53-interview-with-don-french-co-designer-of-the-trs-80-model-i.&lt;/p&gt;
    &lt;p&gt;[35] Welsh and Welsh, Priming the Pump, 37.&lt;/p&gt;
    &lt;p&gt;[36] Apple and Cromemco are the only pre-1977 computer makers that survived long enough to be covered in Robert Levering, et al.’s The Computer Entrepreneurs, a 1984 collection of sixty-five industry founder profiles.&lt;/p&gt;
    &lt;p&gt;[37] Frieberger and Swaine, Fire in the Valley, 70-73, 153-155.&lt;/p&gt;
    &lt;p&gt;[38] Robert Frank, “After 20 Years, Missing CEO Reappears,” The Wall Street Journal (September 12, 2011).&lt;/p&gt;
    &lt;p&gt;[39] Robert Suding, “Digital Group Computers – The Real Story,” (ca. 2004), https://web.archive.org/web/20060820083602/www.ultimatecharger.com/dg.html.&lt;/p&gt;
    &lt;p&gt;[40] Jonathan Littman, Once Upon a Time in ComputerLand (New York: Touchstone, 1990), 133.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45457460</guid><pubDate>Fri, 03 Oct 2025 00:51:26 +0000</pubDate></item><item><title>I spent the day teaching seniors how to use an iPhone</title><link>https://forums.macrumors.com/threads/i-spent-the-day-trying-to-teach-seniors-how-to-use-an-iphone-and-it-was-a-nightmare.2468117/</link><description>&lt;doc fingerprint="ae3e8916e6c093d8"&gt;
  &lt;main&gt;
    &lt;p&gt;Honestly, I think Apple really needs to simplify the iPhone for the elderly. I know there are accessibility modes, but you don’t want to have to go through all that and spend hours trying to customize the phone. Also, the whole phone setup process needs to be delayed; having to go through it for an hour puts them off from even wanting to bother. I first set the phones up to make accounts, but it turns out none of them could understand how to unlock the phone. Entering a passcode was a nightmare because they kept forgetting it, even though it was a birthday they knew, lol. &lt;lb/&gt;So, I tried Touch ID and Face ID, and that was even more complicated and kept erroring out. Then, the Siri thing kept popping up on the phones with Touch ID, despite turning it off, and the whole swiping from the button kept making the screen go down to the bottom half. :/ There were too many apps; all they wanted was the phone app, but it doesn’t default to the keypad, which was too much for them to find.&lt;lb/&gt;The phones are too fiddly now, and pressing random things as they try to hold the phone meant the phone got lost in a sea of opening stuff up. So, I tried the assistive access, but why isn’t this an option from the get-go? It asks you the age of setup; why not have a 65+ or something for a senior mode?&lt;lb/&gt;They don’t need passcodes, accounts, and a sea of information. It’s insane, and it’s insane how fiddly these phones are. I never noticed because I’m used to it, but for these people with hands that barely move, the fake Touch ID button and the swiping from the bottom on Face ID phones seem to be the worst! I think having a proper physical button, like iPhones used to have, would have been superior. The one complaint about the fake button was that it didn’t feel like a real button, so they couldn’t gauge it.&lt;lb/&gt;I left there achieving nothing because they couldn’t figure out their old Nokia phones. The unlock thing on the keypad was too difficult, and if I turned that off, they kept dialing 999 in their pockets for some reason. That’s why I was there: they were calling emergency services 100 times a day, lol.&lt;lb/&gt;I think what I’ve realized is that I need to go back with flip phones that answer and hang up when you open and close them. However, the two I tried before didn’t act like that, and they had too many features. I really thought I could make the iPhone simple, but NOPE!&lt;lb/&gt;Apple should work on their phones to make them more accessible and less fiddly, without having to go through a sea of menus.&lt;/p&gt;
    &lt;p&gt;So, I tried Touch ID and Face ID, and that was even more complicated and kept erroring out. Then, the Siri thing kept popping up on the phones with Touch ID, despite turning it off, and the whole swiping from the button kept making the screen go down to the bottom half. :/ There were too many apps; all they wanted was the phone app, but it doesn’t default to the keypad, which was too much for them to find.&lt;/p&gt;
    &lt;p&gt;The phones are too fiddly now, and pressing random things as they try to hold the phone meant the phone got lost in a sea of opening stuff up. So, I tried the assistive access, but why isn’t this an option from the get-go? It asks you the age of setup; why not have a 65+ or something for a senior mode?&lt;/p&gt;
    &lt;p&gt;They don’t need passcodes, accounts, and a sea of information. It’s insane, and it’s insane how fiddly these phones are. I never noticed because I’m used to it, but for these people with hands that barely move, the fake Touch ID button and the swiping from the bottom on Face ID phones seem to be the worst! I think having a proper physical button, like iPhones used to have, would have been superior. The one complaint about the fake button was that it didn’t feel like a real button, so they couldn’t gauge it.&lt;/p&gt;
    &lt;p&gt;I left there achieving nothing because they couldn’t figure out their old Nokia phones. The unlock thing on the keypad was too difficult, and if I turned that off, they kept dialing 999 in their pockets for some reason. That’s why I was there: they were calling emergency services 100 times a day, lol.&lt;/p&gt;
    &lt;p&gt;I think what I’ve realized is that I need to go back with flip phones that answer and hang up when you open and close them. However, the two I tried before didn’t act like that, and they had too many features. I really thought I could make the iPhone simple, but NOPE!&lt;/p&gt;
    &lt;p&gt;Apple should work on their phones to make them more accessible and less fiddly, without having to go through a sea of menus.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45457670</guid><pubDate>Fri, 03 Oct 2025 01:20:32 +0000</pubDate></item><item><title>FyneDesk: A full desktop environment for Linux written in Go</title><link>https://github.com/FyshOS/fynedesk</link><description>&lt;doc fingerprint="5141e05b0107b1ec"&gt;
  &lt;main&gt;
    &lt;p&gt;FyneDesk is an easy to use Linux/Unix desktop environment following material design. It is built using the Fyne toolkit and is designed to be easy to use as well as easy to develop. We use the Go language and welcome any contributions or feedback for the project.&lt;/p&gt;
    &lt;p&gt;Compiling requires the same dependencies as Fyne. See the Getting Started documentation for installation steps.&lt;/p&gt;
    &lt;p&gt;For a full desktop experience you will also need the following external tools installed:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;arandr&lt;/code&gt;for modifying display settings&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;xbacklight&lt;/code&gt;or&lt;code&gt;brightnessctl&lt;/code&gt;for laptop brightness&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;connman-gtk&lt;/code&gt;is currently used for configuring Wi-Fi network settings&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;compton&lt;/code&gt;for compositor support&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The desktop does work without the runtime dependencies but the experience will be degraded.&lt;/p&gt;
    &lt;p&gt;Using standard Go tools you can install FyneDesk using:&lt;/p&gt;
    &lt;code&gt;go get fyshos.com/fynedesk/cmd/fynedesk
&lt;/code&gt;
    &lt;p&gt;This will add &lt;code&gt;fynedesk&lt;/code&gt; to your $GOPATH (usually ~/go/bin).
You can now run the app in "preview" mode like any other Fyne app.
Doing so is not running a window manager, to do so requires another few steps:&lt;/p&gt;
    &lt;p&gt;To use this as your main desktop you can run the following commands to set up fynedesk as a selectable desktop option in your login manager (such as LightDM for example):&lt;/p&gt;
    &lt;code&gt;git clone https://github.com/fyshos/fynedesk
cd fynedesk
make
sudo make install
&lt;/code&gt;
    &lt;p&gt;You can now log out and see that it is in your desktop selection list at login.&lt;/p&gt;
    &lt;p&gt;You can also run the window manager components in an embedded X window for testing. You will need the &lt;code&gt;Xephyr&lt;/code&gt; tool installed for your platform (often installed as part of Xorg).
Once it is present you can use the following command from the same directory as above:&lt;/p&gt;
    &lt;code&gt;make embed
&lt;/code&gt;
    &lt;p&gt;It should look like this:&lt;/p&gt;
    &lt;p&gt;If you run the command when there is a window manager running, or on an operating system that does not support window managers (Windows or macOS) then the app will start in UI test mode. When loaded in this way you can run all of the features except the controlling of windows - they will load on your main desktop.&lt;/p&gt;
    &lt;p&gt;A desktop needs to be rock solid, and whilst we are working hard to get there, any alpha or beta software can run into unexpected issues. For that reason, we have included a &lt;code&gt;fynedesk_runner&lt;/code&gt; utility that can help
manage unexpected events. If you start the desktop using the runner, then
if a crash occurs, it will normally recover where it left off with no loss
of data in your applications.&lt;/p&gt;
    &lt;p&gt;Using standard Go tools you can install the runner using:&lt;/p&gt;
    &lt;code&gt;go get fyshos.com/fynedesk/cmd/fynedesk_runner
&lt;/code&gt;
    &lt;p&gt;From then on execute that instead of the &lt;code&gt;fynedesk&lt;/code&gt; command for a more
resilient desktop when testing out pre-release builds.&lt;/p&gt;
    &lt;p&gt;Design concepts, and the abstract wallpapers have been contributed by Jost Grant.&lt;/p&gt;
    &lt;p&gt;If you are installing FyneDesk by default on a distribution, or making it available as a standard option, you should consider the following points. You do not need to ship the library or any dependencies, but it is recommended to add the following apps as well:&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="3"&gt;
        &lt;cell role="head"&gt;app&lt;/cell&gt;
        &lt;cell role="head"&gt;go get&lt;/cell&gt;
        &lt;cell role="head"&gt;description&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;fin&lt;/cell&gt;
        &lt;cell&gt;
          &lt;code&gt;github.com/fyshos/fin&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;A display manager app that matches the look and feel of FyneDesk&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Please do let us know if you package FyneDesk for your system, so we can include a link from here :).&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45458122</guid><pubDate>Fri, 03 Oct 2025 02:13:17 +0000</pubDate></item><item><title>Stdlib: A library of frameworks, templates, and guides for technical leadership</title><link>https://debuggingleadership.com/stdlib</link><description>&lt;doc fingerprint="a1c3470a6cbb65b3"&gt;
  &lt;main&gt;
    &lt;p&gt;Your library of frameworks, templates, and guides for technical leadership&lt;/p&gt;
    &lt;p&gt;A blog post discussing how clearer delegation practices can lead to smoother incident response.&lt;/p&gt;
    &lt;p&gt;The article explores how agile teams can effectively manage unplanned work that arises during a sprint, offering practical strategies to maintain flow and delivery commitments.&lt;/p&gt;
    &lt;p&gt;The article argues that engineering processes are often overemphasized and highlights people, capabilities, and team dynamics as the true drivers of successful engineering teams.&lt;/p&gt;
    &lt;p&gt;A concise guide that helps technology leaders adopt a business mindset to drive strategic outcomes and improve cross-functional collaboration.&lt;/p&gt;
    &lt;p&gt;LeadDev's AI Impact Report 2025 explores the challenges and opportunities for early-career engineers as AI transforms coding, mentorship, and skill development.&lt;/p&gt;
    &lt;p&gt;Join us to learn why 500 engineering leaders still find measuring team performance a major challenge.&lt;/p&gt;
    &lt;p&gt;Working smarter, not harder, to achieve high velocity.&lt;/p&gt;
    &lt;p&gt;Practical rituals to normalize the awkwardness.&lt;/p&gt;
    &lt;p&gt;An essay explaining why treating engineers as interchangeable heads leads to flawed roadmaps, hiring decisions, and attrition, and why recognizing individual contributions is essential for effective technical leadership.&lt;/p&gt;
    &lt;p&gt;A short article urging technical leaders to engage with organizational politics rather than avoid it.&lt;/p&gt;
    &lt;p&gt;An exploration of the reasons why software teams tend to over-engineer solutions and how to avoid it.&lt;/p&gt;
    &lt;p&gt;Software needs maintenance just like your car does. With proper love and attention, it can serve you well for years to come.&lt;/p&gt;
    &lt;p&gt;Packed with evidence-based strategies, Atomic Habits will teach you how to make small changes that will transform your habits and deliver amazing results.&lt;/p&gt;
    &lt;p&gt;A novel that illustrates DevOps principles through the story of an IT manager tasked with rescuing a failing project and delivering business value.&lt;/p&gt;
    &lt;p&gt;The Mind the Gap Model identifies three categories of challenges managers face when trying to close the gap between the current state and the desired future state.&lt;/p&gt;
    &lt;p&gt;Hippos, babbles and gish-gallop.&lt;/p&gt;
    &lt;p&gt;Three Toptal engineers share how they use generative AI for software development and offer actionable advice for others.&lt;/p&gt;
    &lt;p&gt;A practical guide that teaches software developers how to write clean, maintainable code and adopt craftsmanship principles.&lt;/p&gt;
    &lt;p&gt;A novel that illustrates DevOps principles and the importance of leadership, collaboration, and process improvement in modern IT organizations.&lt;/p&gt;
    &lt;p&gt;Accelerate explains how technology organizations can improve software delivery performance and drive business outcomes through proven practices and metrics.&lt;/p&gt;
    &lt;p&gt;Continuous Delivery provides a comprehensive guide to automating software build, test, and deployment processes to achieve reliable releases.&lt;/p&gt;
    &lt;p&gt;A valuable resource discovered from amazon.co.uk. This content provides insights and best practices for technical leadership and engineering management.&lt;/p&gt;
    &lt;p&gt;A practical guide that introduces the Value Flywheel concept to help organizations continuously improve and accelerate performance through systematic value creation and delivery.&lt;/p&gt;
    &lt;p&gt;Team Topologies provides a practical guide to structuring software teams and their interactions to enable fast flow of change and improve delivery outcomes.&lt;/p&gt;
    &lt;p&gt;A practical guide that teaches how to embed continuous improvement into everyday work, helping technical leaders drive sustainable performance gains.&lt;/p&gt;
    &lt;p&gt;A practical guide that introduces domain-driven design principles to help engineers manage complex software projects.&lt;/p&gt;
    &lt;p&gt;A concise guide to the Extreme Programming methodology, teaching how to improve software quality and respond quickly to changing requirements.&lt;/p&gt;
    &lt;p&gt;In this InfoQ podcast episode, Pat Kua discusses how to build strong engineering culture, effective leadership practices, and strategies for growth.&lt;/p&gt;
    &lt;p&gt;Privacy principles can be integrated into lean, fast-moving startups without sacrificing speed, by treating privacy as a core design practice rather than a compliance afterthought.&lt;/p&gt;
    &lt;p&gt;Leading through a layoff is one of the most challenging things you can do as a manager or HR professional. The article provides practical tips to help your team recover and stay productive.&lt;/p&gt;
    &lt;p&gt;When and how to tell them&lt;/p&gt;
    &lt;p&gt;A brief exploration of whether engineering productivity can be accurately measured, questioning common metrics and advice.&lt;/p&gt;
    &lt;p&gt;A concise guide offering techniques for leaders to clarify their thinking and overcome common leadership obstacles.&lt;/p&gt;
    &lt;p&gt;This ebook demystifies product strategy, providing a solid structure, examples, resources, and guidance on making product strategy stick.&lt;/p&gt;
    &lt;p&gt;We know how hard it can be to have a challenging person in your groups - whether it's a workshop, webinar or group coaching session. So we created this&lt;/p&gt;
    &lt;p&gt;Avoiding conflict is the death knell of organizations that leads to a lack of progress and careers that implode.&lt;/p&gt;
    &lt;p&gt;An article describing how the Financial Times built an engineering enablement function to improve developer productivity and delivery speed.&lt;/p&gt;
    &lt;p&gt;An article that examines the concept of failureship and offers practical guidance on how technical leaders can improve escalation processes and accountability during incidents.&lt;/p&gt;
    &lt;p&gt;Scientific insights into the causes of stress and how motivation can buffer it, with five practical ways for technical leaders to reduce stress and sustain team performance.&lt;/p&gt;
    &lt;p&gt;A short article that proposes five practical questions leaders can ask to quickly evaluate and improve their strategic thinking.&lt;/p&gt;
    &lt;p&gt;A comprehensive framework outlining career progression, roles, and competencies for engineers at Dropbox.&lt;/p&gt;
    &lt;p&gt;Peopleware explores how to create productive software teams by focusing on the human aspects of work, offering practical guidance for managers and leaders.&lt;/p&gt;
    &lt;p&gt;A practical guide that provides a clear framework for engineering leaders to build high-performing teams and make effective technical decisions.&lt;/p&gt;
    &lt;p&gt;Drive explores the science of motivation, revealing that autonomy, mastery, and purpose are the key drivers of performance and satisfaction.&lt;/p&gt;
    &lt;p&gt;A practical guide that teaches you how to navigate tough conversations at work and in life, offering proven techniques to communicate effectively and resolve conflict.&lt;/p&gt;
    &lt;p&gt;The author uses a bowling alley analogy to explain how leaders can create environments where every team member gets the chance to excel.&lt;/p&gt;
    &lt;p&gt;A clear introduction to systems thinking that helps leaders understand complex problems and improve decision-making.&lt;/p&gt;
    &lt;p&gt;A practical guide that shows how to uncover hidden work, visualise it, and improve flow for knowledge-work teams.&lt;/p&gt;
    &lt;p&gt;The stdlib collection is a community-curated library of practical, immediately useful, battle-tested resources for technical leadership. Each resource is designed to be immediately applicable to your role. New resources are added based on community feedback and emerging best practices.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45458249</guid><pubDate>Fri, 03 Oct 2025 02:33:21 +0000</pubDate></item><item><title>Google Workspace Updates: Send Gmail end-to-end encrypted emails to anyone</title><link>https://workspaceupdates.googleblog.com/2025/10/send-gmail-end-to-end-encrypted-emails-in-gmail.html</link><description>&lt;doc fingerprint="7f9a35217562d2c1"&gt;
  &lt;main&gt;&lt;p&gt;October 2, 2025&lt;/p&gt;&lt;head rend="h1"&gt;Send Gmail end-to-end encrypted emails to anyone&lt;/head&gt;&lt;head rend="h3"&gt;What’s changing&lt;/head&gt;Generally available today, Gmail client-side encryption (CSE) users can send end-to-end encrypted (E2EE) emails to anyone, even if the recipient uses a different email provider. Recipients will receive a notification and can easily access the encrypted message via a guest account, ensuring secure communication without the hassle of exchanging keys or using custom software.&lt;head rend="h3"&gt;Getting started&lt;/head&gt;&lt;list rend="ul"&gt;&lt;item&gt;Admins: This feature will be OFF by default and can be enabled at the OU and Group level. Visit the Help Center to learn more about turning Gmail E2EE on or off for your organization. Visit the Help Center for a Client-side encryption setup overview.&lt;/item&gt;&lt;item&gt;End users: This feature will be on by default for users that have access to Gmail Client-side encryption. Visit the Help Center to learn more about Gmail Client-side encryption.&lt;/item&gt;&lt;/list&gt;&lt;head rend="h3"&gt;Rollout pace&lt;/head&gt;&lt;list rend="ul"&gt;&lt;item&gt;Rapid Release and Scheduled Release domains: Gradual rollout (up to 15 days for feature visibility) starting on Sep 30, 2025&lt;/item&gt;&lt;/list&gt;&lt;head rend="h3"&gt;Availability&lt;/head&gt;&lt;list rend="ul"&gt;&lt;item&gt;Enterprise Plus with the Assured Controls add-on.&lt;/item&gt;&lt;/list&gt;&lt;head rend="h3"&gt;Resources&lt;/head&gt;&lt;list rend="ul"&gt;&lt;item&gt;Google Help: Learn about Gmail Client-side encryption&lt;/item&gt;&lt;item&gt;Google Workspace Admin Help: About client-side encryption&lt;/item&gt;&lt;item&gt;Google Workspace Admin Help: About Assured Controls and Assured Controls Plus&lt;/item&gt;&lt;item&gt;Google Workspace Blog: New in Gmail: Making end-to-end encrypted emails easy to use for all organizations&lt;/item&gt;&lt;/list&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45458482</guid><pubDate>Fri, 03 Oct 2025 03:04:04 +0000</pubDate></item><item><title>You Want Technology with Warts</title><link>https://entropicthoughts.com/you-want-technology-with-warts</link><description>&lt;doc fingerprint="72499015d9efb9ee"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;You Want Technology With Warts&lt;/head&gt;
    &lt;p&gt;I normally skip presentations because I prefer reading, but Building the Hundred-Year Web Service (YouTube) was worth the time.1 Note that despite “htmx” featuring in the title, very little of the presentation is actually about htmx. It is about choosing and using technology in such a way that it won’t require maintenance suddenly due to external factors changing. That’s a drum I’ve been banging for the last few years too, although less visibly.&lt;/p&gt;
    &lt;p&gt;Petros observes that we know how to build bridges that last hundreds of years: stone, concrete, and steel can all do this with the right engineering. We also know how to build hypertext that is likely to last at least a few decades: use plain html and css. But, Petros asks, how do we create database-y web services that lasts for decades?&lt;/p&gt;
    &lt;p&gt;Where do we store the data? Where do we perform business logic? He answers thusly:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;sqlite for data storage,&lt;/item&gt;
      &lt;item&gt;sql queries for most of the application logic,&lt;/item&gt;
      &lt;item&gt;Express-on-Node.js for routing and presentation logic,&lt;/item&gt;
      &lt;item&gt;Jinja2 templates for additional presentation logic, and&lt;/item&gt;
      &lt;item&gt;html and vanilla js for triggering http requests.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;I won’t debate the specifics here. 2 I’d be tempted to jam Perl into the backend instead of Node.js if I wanted truly low maintenance. I have a feeling a Perl script is more likely to run unmodified 20 years from now than some Node.js thing. But maybe I’m wrong on this. But there were other nuggets in the presentation. For example:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;I’ve frequently wondered why I turn to the web browser when I want to make cross-platform software. There’s a chart in the presentation that shows how environmental churn and api deprecation leads desktop applications to have an expected lifetime of maybe a decade, and phone apps closer to a couple of years. On the other hand, simple web pages have worked unmodified for over 40 years! That’s a good reason to default to the web as a technology.&lt;/item&gt;
      &lt;item&gt;When a page load is fast enough, the browser does not do the whole flicker-a-blank-page-before-doing-a-full-repaint, it just shows the new content right away as a sort of partial update. This is apparently a recent browser innovation, but it is what allows e.g. Decision Drill to do a full page reload when a user interacts with it, and it still feels like one of them smooth xmlHttpRequest things. Rest assured, it’s a full page reload.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;But then the thing that triggered this article: sqlite. One of the more powerful arguments I’ve read against sqlite is that it has a few warts in its defaults, such tables being flexibly typed, foreign keys not being enforced, primary keys being nullable, etc.&lt;/p&gt;
    &lt;p&gt; I’ve usually thought of these warts as a bad thing. Haskell has them too, like how the built in &lt;code&gt;String&lt;/code&gt; type is bad data structure for storing text, and how
we’re stuck with a bunch of misnamed functions (mapM, ap, msum, etc.) because we
didn’t know better. Oh and the list of Perl’s warts is probably longer than its
implementation.
&lt;/p&gt;
    &lt;p&gt;Petros reframes this problem. Every single wart that annoys us today, used to be a reasonable feature that someone relied on in their production code. Every wart we see today is a testament to the care the maintainers put into backward compatibility. If we choose a technology today, we want one that saves us from future maintenance by keeping our wartful code running – even if we don’t yet know it is wartful. The best indicator of this is whether the technology has warts today.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;I would much rather, the first time I install an application, “enable foreign keys” – it’s just one line of config – I’d rather do that once, build the thing correctly, and then be confident that if there’s any other built-in behaviour that I didn’t account for, that behaviour isn’t going to change on me and break my application at some point in the future.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Right on.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45458550</guid><pubDate>Fri, 03 Oct 2025 03:13:13 +0000</pubDate></item><item><title>Blender 4.5 brings big changes</title><link>https://lwn.net/Articles/1036262/</link><description>&lt;doc fingerprint="ebc971191932e59c"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Blender 4.5 brings big changes&lt;/head&gt;
    &lt;quote&gt;This article brought to you by LWN subscribers&lt;p&gt;Subscribers to LWN.net made this article — and everything that surrounds it — possible. If you appreciate our content, please buy a subscription and make the next set of articles possible.&lt;/p&gt;&lt;/quote&gt;
    &lt;p&gt;Blender 4.5 LTS was released on July 15, 2025, and will be supported through 2027. This is the last feature release of the 3D graphics-creation suite's 4.x series; it includes quality-of-life improvements, including work to bring the Vulkan backend up to par with the default OpenGL backend. With 4.5 released, Blender developers are turning their attention toward Blender 5.0, planned for release later this year. It will introduce substantial changes, particularly in the Geometry Nodes system, a central feature of Blender's procedural workflows.&lt;/p&gt;
    &lt;head rend="h4"&gt;Brief introduction&lt;/head&gt;
    &lt;p&gt;Blender is an open-source creative application released under the GPLv3. The Blender Foundation stewards development, with significant funding from the Blender Development Fund as well as backing from individual contributors and industry sponsors. Its code is primarily written in C and C++, with Python used extensively for scripting and add-ons.&lt;/p&gt;
    &lt;p&gt;While Blender is often known as a 3D modeling and animation tool, it has grown into a comprehensive open-source suite for digital content creation. Alongside powerful 3D tools, it features compositing, nonlinear video editing, and 2D animation in 3D space. This integrated suite of tools enables designers, animators, and other creators to work with a single application across their digital pipeline. Blender also provides access to its core functions through Nodes, a visual programming system that enables procedural workflows for complex operations. The Grease Pencil tool, also accessible through the Geometry Nodes system, is used for 2D animation, cut-out animation, motion graphics, and more. Blender's procedural systems rely heavily on these node-based graphical interfaces, and the 4.5 LTS focuses on their continued evolution. These systems enable fully non-destructive workflows, preserving all original data at every stage of the editing process.&lt;/p&gt;
    &lt;p&gt;Blender strives to be compatible with visual-effects (VFX) industry standards through alignment with the VFX Reference Platform, which is updated annually. This allows Blender to be run on the same systems as other VFX software, as well as share files with them. 4.5 brings a slew of library updates to maintain alignment with the reference platform.&lt;/p&gt;
    &lt;head rend="h4"&gt;A solid foundation&lt;/head&gt;
    &lt;p&gt;Historically, Blender has relied on OpenGL for drawing its user interface and powering its 3D-display capabilities. However, efforts are underway to modernize this aspect of its core functionality by abstracting away the rendering backend, bringing support for running on additional graphics APIs, including Vulkan and Apple's Metal API. The Vulkan API is a low-overhead, cross-platform standard that allows applications like Blender to communicate more directly with GPU hardware than OpenGL. Being the final feature release of the 4.x series, this LTS brings a critical step in the maturity of the Vulkan backend. Though still not enabled by default due to multiple outstanding issues, it now rivals the OpenGL backend in both features and performance.&lt;/p&gt;
    &lt;p&gt;Vulkan is built on a parallel-execution model, allowing applications to send multiple commands to the GPU simultaneously, while OpenGL relies on a sequential model. Vulkan's execution model makes better use of the increased number of cores found in modern GPUs. This is a crucial step toward smoother viewport performance and more responsive interaction with complex scenes.&lt;/p&gt;
    &lt;p&gt;There are known limitations still blocking the new backend from being adopted as the default. Notably, large meshes with 100-million vertices or more are not yet supported, resulting in poor performance on the Vulkan backend for virtual reality and other high-mesh-count applications. Future driver updates may address some of these issues.&lt;/p&gt;
    &lt;p&gt;The viewport in Blender is an interactive view space where 3D scenes are displayed and constructed. Rendering converts 3D scenes into 2D images or video, producing the final output with Blender's built-in engines or third-party renderers. Rendering can also be performed without the graphical interface by running Blender in headless mode, both on individual systems and at scale on render farms. The viewport and rendering upgrades in Blender 4.5 extend beyond the improvements to its Vulkan backend. Specifically, work continues on EEVEE, the realtime rendering engine built for rapid, interactive rendering on modern GPUs. EEVEE 2.0, also known as EEVEE Next, receives several critical improvements focused on stability and visual accuracy. Shadows now render more smoothly thanks to the addition of shadow terminator normal bias. This is an area where EEVEE has struggled to match other renderers, including Blender's own Cycles rendering engine.&lt;/p&gt;
    &lt;p&gt;Two settings control shadow termination bias: "Geometry Offset" and "Shading Offset", found in the "Shading" tab of the "Object Properties" panel. This gives artists greater control over the position and angle of shadows. However, due to the difficulties of creating shadows that work equally well for all projects, the default for these settings is "no bias". These visual improvements coincide with fixes for rendering problems such as light leaking from large light sources. Light leaking is a phenomenon where light incorrectly passes through or around solid objects, creating unrealistic bright spots in the rendered scene. Overall, these changes aim to bring EEVEE Next closer to parity with other renderers.&lt;/p&gt;
    &lt;p&gt;Beyond rendering quality, this LTS release delivers improvements to workflow fluidity. Texture loading, shader compilation, and startup times all contribute to overall performance and user experience, and all three have been improved. Textures are now loaded using a deferred, multithreaded process, resulting in more than double the speed of the previous method. This change introduces a small CPU overhead due to loading textures before redrawing the viewport, but the cost is not significant enough to severely impact performance.&lt;/p&gt;
    &lt;p&gt;Shaders are also now compiled in parallel. Crucially, this optimization is independent of the viewport backend in use, whether Vulkan or OpenGL, translating to immediate benefits from these core improvements. That said, a new preference allows users to revert to sub-process shader calculation, if desired, which is faster but consumes more RAM. Additionally, by skipping unnecessary shading steps during viewport initialization, startup times have been improved significantly.&lt;/p&gt;
    &lt;p&gt;With ongoing efforts to improve the workspace, users can now control which tabs are visible in the Properties Editor through the right-click pop-up menu. The Asset Browser, used for importing and organizing assets (including scenes, 3D objects, textures, and more), has been continually refined throughout the 4.x series. In 4.5 LTS, it receives some key usability enhancements, particularly in how assets are displayed, such as wrapping long lines used for asset labels, and making it easier to create thumbnails for assets.&lt;/p&gt;
    &lt;head rend="h4"&gt;Nodes, Grease Pencil, and modeling polish&lt;/head&gt;
    &lt;p&gt;Rather than focusing solely on fixes and performance gains, this cycle emphasized tighter integration between the various node systems in Blender. The result is that Shader Nodes, Compositor Nodes, and Geometry Nodes (including Grease Pencil Nodes) now share more capabilities and have a more consistent workflow.&lt;/p&gt;
    &lt;p&gt;The common nodes (including mathematical operations) and procedural textures available with Shader Nodes and Geometry Nodes are now available for use in the Compositor. This change enables effects such as procedurally generated visual noise or cloudiness applied to an image or video during post-processing. Common nodes can be copied across Shader and Geometry Node setups, further aligning node logic and capability design across the toolset. In Geometry Nodes, the new "Set Mesh Normal" node grants artists direct control over custom normals, which are perpendicular vectors that are used to represent the orientation of a surface. By allowing users to define normals via Fields, Blender provides fine-grained procedural controls for surface shading. For instance, an animator could drive this node with a value to simulate a material seamlessly transitioning from a soft, smooth surface to a rough, hard-edged one, all without the need for manually editing the mesh.&lt;/p&gt;
    &lt;p&gt;In 4.5, Point Clouds debut as a new object type, accessible from the "Add" menu in the viewport or through various Geometry Nodes. Point Clouds represent objects as a group of points in 3D space and have long been used in scientific and industrial 3D scanning. According to the Blender developer documentation on Point Clouds, this new object type supports motion graphics, physics simulations (including particle systems), granular materials (such as sand and gravel), and 3D scanning. To this end, Blender includes comprehensive tools and editable object attributes, including standard transformations like rotation and scale. It also maintains high rendering performance through EEVEE and Cycles, putting point clouds on par with meshes.&lt;/p&gt;
    &lt;head rend="h4"&gt;Looking ahead&lt;/head&gt;
    &lt;p&gt;With 4.5 LTS out the door, the Blender developers have shifted focus to 5.0, the next major release, which is now under active development. As the beginning of a new, feature-breaking series, 5.0 introduces significant refinements and modernized workflows without abandoning the user interface paradigm established by Blender 2.80 in 2019. The release notes outline several key features planned for the release. Among these improvements is the ability to mark scenes as assets, allowing entire scenes with their contents and setup to be pulled directly into the visual scene editor using the asset browser.&lt;/p&gt;
    &lt;p&gt;The Grease Pencil tool in 5.0 supports the motion blur effect, controlled by the new "Motion Blur Steps" setting in the "Grease Pencil" render panel. Linux users now benefit from HDR support in the viewport on Wayland when using the Vulkan backend. Additionally, a change to the .blend file format to handle larger content allows Blender to store meshes with more than a few hundred million vertices. This feature required a change to the file structure of the .blend file format, meaning that files created in version 5.0 are incompatible with Blender 4.4 and prior releases, but can be loaded in 4.5 LTS. While the new format supports meshes with hundreds of millions of vertices, working with such files still demands powerful hardware, specifically large amounts of system RAM and GPU memory.&lt;/p&gt;
    &lt;p&gt;Blender 5.0 improves symmetry in Edit Mode by ensuring mirrored operations no longer fail or produce inconsistent results. UV mapping, the process of unfolding the surface of a 3D model onto a 2D image for applying textures, sees improvements in Blender 5.0 thanks to improved synchronization. This change ensures selections remain aligned between the viewport and the UV Editor. Blender 5.0 finally resolves this longstanding limitation.&lt;/p&gt;
    &lt;p&gt;Those interested in downloading Blender 4.5 can get official builds from the project web site, install the Flatpak via Flathub, or install the snap package from the Snap Store.&lt;/p&gt;
    &lt;p&gt;DOGWALK, a game by the Blender Foundation, which was built using Blender and the Godot engine, was released at the same time as 4.5. The game is freely available for download from Blender Studio, Steam, and Itch.io.&lt;/p&gt;
    &lt;p&gt;According to the release schedule, Blender 5.0 will enter beta on October 1, 2025. Interested users can access official daily builds from Blender's experimental downloads page. Blender's development is open to contributors of all backgrounds; instructions on contributing code, documentation, and more are available in the developer portal.&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="2"&gt;
        &lt;cell role="head"&gt;Index entries for this article&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;GuestArticles&lt;/cell&gt;
        &lt;cell&gt;Taylor, Roland&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45458791</guid><pubDate>Fri, 03 Oct 2025 03:52:43 +0000</pubDate></item><item><title>Fp8 runs ~100 tflops faster when the kernel name has "cutlass" in it</title><link>https://github.com/triton-lang/triton/pull/7298</link><description>&lt;doc fingerprint="cef8dd4f2e620e8a"&gt;
  &lt;main&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt; Notifications &lt;tool-tip&gt;You must be signed in to change notification settings&lt;/tool-tip&gt;&lt;/item&gt;
      &lt;item&gt;Fork 2.3k&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h1"&gt;[Gluon][Tutorial] Persistent attention #7298&lt;/head&gt;
    &lt;head id="button-ec9acddcd9d97037" class="btn btn-sm btn-primary m-0 ml-0 ml-md-2"&gt;New issue&lt;/head&gt;
    &lt;p&gt;Have a question about this project? Sign up for a free GitHub account to open an issue and contact its maintainers and the community.&lt;/p&gt;
    &lt;p&gt;By clicking “Sign up for GitHub”, you agree to our terms of service and privacy statement. We’ll occasionally send you account related emails.&lt;/p&gt;
    &lt;p&gt;Already on GitHub? Sign in to your account&lt;/p&gt;
    &lt;head rend="h2"&gt;Conversation&lt;/head&gt;
    &lt;p&gt;Rewrite the attention kernel to be persistent. This gives better performance at low-contexts. However, fp16 at large context has suffered a bit due to a ptxas instruction scheduling issue in the softmax partition. fp8 is ~100 tflops faster when the kernel name has "cutlass" in it.&lt;/p&gt;
    &lt;code&gt;Attention Z=4 H=32 D=64 causal=False:
     N_CTX  triton-fp16  triton-fp8
0   1024.0   359.574448  370.119987
1   2048.0   612.103928  641.204555
2   4096.0   653.868402  682.337948
3   8192.0   692.102228  721.555690
4  16384.0   696.972041  726.190035
5  32768.0   698.723685  727.983456
6  65536.0   699.865817  728.558321
Attention Z=4 H=32 D=64 causal=True:
     N_CTX  triton-fp16  triton-fp8
0   1024.0   181.879039  177.982453
1   2048.0   441.315463  454.310072
2   4096.0   532.170527  539.995252
3   8192.0   633.620646  638.544937
4  16384.0   667.687180  670.681255
5  32768.0   684.276329  688.571907
6  65536.0   692.953202  694.648353
Attention Z=4 H=32 D=128 causal=False:
     N_CTX  triton-fp16   triton-fp8
0   1024.0   718.580015   709.863720
1   2048.0  1133.490258  1222.548477
2   4096.0  1247.605551  1369.800195
3   8192.0  1243.482713  1406.799697
4  16384.0  1125.744367  1514.857403
5  32768.0  1124.116305  1521.267973
6  65536.0  1064.588719  1518.738037
Attention Z=4 H=32 D=128 causal=True:
     N_CTX  triton-fp16   triton-fp8
0   1024.0   355.642522   351.161232
1   2048.0   846.404095   854.547917
2   4096.0  1013.840017  1021.676435
3   8192.0  1176.258395  1152.844234
4  16384.0  1190.290681  1325.786204
5  32768.0  1063.658200  1394.413325
6  65536.0   970.531569  1413.282610
&lt;/code&gt;
    &lt;p&gt;There was a problem hiding this comment.&lt;/p&gt;
    &lt;head rend="h3"&gt;Choose a reason for hiding this comment&lt;/head&gt;
    &lt;p&gt;The reason will be displayed to describe this comment to others. Learn more.&lt;/p&gt;
    &lt;p&gt;wow!&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;p&gt;For posterity, these are the best results prior to converting the kernel to persistent&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;p&gt;I don't see a "cutlass" in the kernel names?&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;table&gt;
      &lt;row/&gt;
    &lt;/table&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;p&gt;Before:&lt;/p&gt;
          &lt;p&gt;After&lt;/p&gt;
          &lt;p&gt;I'm not sure if I interpreted it incorrectly, but seems like perf is dropped based on the numbers?&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;There was a problem hiding this comment.&lt;/p&gt;
    &lt;head rend="h3"&gt;Choose a reason for hiding this comment&lt;/head&gt;
    &lt;p&gt;The reason will be displayed to describe this comment to others. Learn more.&lt;/p&gt;
    &lt;p&gt;Great stuff. Couple small NITs though.&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;_, corr_bar, corr_producer = corr_producer.acquire()&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"/&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;p = gl.join(p0, p1).permute(0, 2, 1).reshape([config.SPLIT_M, config.BLOCK_N])&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;p = gl.convert_layout(p, config.qk_layout)&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;There was a problem hiding this comment.&lt;/p&gt;
    &lt;head rend="h3"&gt;Choose a reason for hiding this comment&lt;/head&gt;
    &lt;p&gt;The reason will be displayed to describe this comment to others. Learn more.&lt;/p&gt;
    &lt;p&gt;This shouldn't be needed any more after I introduced the slice layout for split, right?&lt;/p&gt;
    &lt;p&gt;There was a problem hiding this comment.&lt;/p&gt;
    &lt;head rend="h3"&gt;Choose a reason for hiding this comment&lt;/head&gt;
    &lt;p&gt;The reason will be displayed to describe this comment to others. Learn more.&lt;/p&gt;
    &lt;p&gt;The convert layout coming out of the &lt;code&gt;split&lt;/code&gt; is no longer needed, but&lt;/p&gt;
    &lt;code&gt;ValueError('Layout mismatch in broadcast: 

SliceLayout(dim=1, parent=BlockedLayout(size_per_thread=[1, 128], threads_per_warp=[32, 1], warps_per_cta=[4, 1], order=[0, 1], ctas_per_cga=[1, 1], cta_split_num=[1, 1], cta_order=[1, 0])) 
vs 
SliceLayout(dim=1, parent=DistributedLinearLayout(reg_bases=[[0, 64], [0, 1], [0, 2], [0, 4], [0, 8], [0, 16], [0, 32]], lane_bases=[[1, 0], [2, 0], [4, 0], [8, 0], [16, 0]], warp_bases=[[32, 0], [64, 0]], block_bases=[], shape=[128, 128]))')
&lt;/code&gt;
    &lt;p&gt;It seems that &lt;code&gt;p&lt;/code&gt; ends up with a linear layout instead of a blocked layout. I am not sure why though -- I believe the layout inference should try a blocked layout first before falling back to linear layout.&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;name = "gluon_attention"&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;# Up to 150 TFLOPS faster for fp8!&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;if specialization.constants["dtype"] == gl.float8e5:&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;name = "cutlass_" + name&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;There was a problem hiding this comment.&lt;/p&gt;
    &lt;head rend="h3"&gt;Choose a reason for hiding this comment&lt;/head&gt;
    &lt;p&gt;The reason will be displayed to describe this comment to others. Learn more.&lt;/p&gt;
    &lt;p&gt;very cool... did you check if other names change the scheduling (e.g. because of non-determinism or code alignment) or if it's literally just special cased for cutlass.&lt;/p&gt;
    &lt;p&gt;There was a problem hiding this comment.&lt;/p&gt;
    &lt;head rend="h3"&gt;Choose a reason for hiding this comment&lt;/head&gt;
    &lt;p&gt;The reason will be displayed to describe this comment to others. Learn more.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;it's literally just special cased for cutlass.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Yup&lt;/p&gt;
    &lt;p&gt;There was a problem hiding this comment.&lt;/p&gt;
    &lt;head rend="h3"&gt;Choose a reason for hiding this comment&lt;/head&gt;
    &lt;p&gt;The reason will be displayed to describe this comment to others. Learn more.&lt;/p&gt;
    &lt;p&gt;wow! You literally beat the nvcc team!&lt;/p&gt;
    &lt;p&gt;There was a problem hiding this comment.&lt;/p&gt;
    &lt;head rend="h3"&gt;Choose a reason for hiding this comment&lt;/head&gt;
    &lt;p&gt;The reason will be displayed to describe this comment to others. Learn more.&lt;/p&gt;
    &lt;p&gt;@AlexMaclean Just a FYI, in case you can prod the right folks on your side. There must be a better way to enable this optimization. A PTX directive, perhaps, if ptxas can't figure out the right thing by itself?&lt;/p&gt;
    &lt;p&gt;There was a problem hiding this comment.&lt;/p&gt;
    &lt;head rend="h3"&gt;Choose a reason for hiding this comment&lt;/head&gt;
    &lt;p&gt;The reason will be displayed to describe this comment to others. Learn more.&lt;/p&gt;
    &lt;p&gt;@Mogball have you checked the accuracy, is it the same? The Deepseek technical report mentioned that fp8 tensor cores use reduced mantissa for the accumulator, maybe this is what indirectly enabled/disabled by the name of the kernel.&lt;/p&gt;
    &lt;p&gt;There was a problem hiding this comment.&lt;/p&gt;
    &lt;head rend="h3"&gt;Choose a reason for hiding this comment&lt;/head&gt;
    &lt;p&gt;The reason will be displayed to describe this comment to others. Learn more.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;The Deepseek technical report mentioned that fp8 tensor cores use reduced mantissa for the accumulator, maybe this is what indirectly enabled/disabled by the name of the kernel.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;That's only on Hopper&lt;/p&gt;
    &lt;p&gt;There was a problem hiding this comment.&lt;/p&gt;
    &lt;head rend="h3"&gt;Choose a reason for hiding this comment&lt;/head&gt;
    &lt;p&gt;The reason will be displayed to describe this comment to others. Learn more.&lt;/p&gt;
    &lt;p&gt;There was a problem hiding this comment.&lt;/p&gt;
    &lt;head rend="h3"&gt;Choose a reason for hiding this comment&lt;/head&gt;
    &lt;p&gt;The reason will be displayed to describe this comment to others. Learn more.&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;By disassembly of&lt;/p&gt;&lt;code&gt;ptxas&lt;/code&gt;, it is indeed hard-coded that they have logic like&lt;code&gt;strstr(kernel_name, "cutlass")&lt;/code&gt;.&lt;/quote&gt;
    &lt;p&gt;That's Interesting! I'm curious is it feasible to modifty asm code for &lt;code&gt;ptxas&lt;/code&gt; that make the &lt;code&gt;al&lt;/code&gt; return register always be true (maybe we could modify code in the address between &lt;code&gt;2165-216c&lt;/code&gt;), did you have a try?&lt;/p&gt;
    &lt;p&gt;There was a problem hiding this comment.&lt;/p&gt;
    &lt;head rend="h3"&gt;Choose a reason for hiding this comment&lt;/head&gt;
    &lt;p&gt;The reason will be displayed to describe this comment to others. Learn more.&lt;/p&gt;
    &lt;p&gt;Admittedly it is feasible. But it is more likely that, this is an unstable, experimental, aggressive optimization by NVIDIA, and blindly always enabling it may produce some elusive bugs.&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;p&gt;For D64 it did drop quite a bit during the transition to persistent. This is due to a scheduling issue in ptxas that I couldn't find a workaround for.&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45458948</guid><pubDate>Fri, 03 Oct 2025 04:21:23 +0000</pubDate></item><item><title>In Praise of RSS and Controlled Feeds of Information</title><link>https://blog.burkert.me/posts/in_praise_of_syndication/</link><description>&lt;doc fingerprint="e7f45b221ea4acbd"&gt;
  &lt;main&gt;
    &lt;p&gt;The way we consume content on the internet is increasingly driven by walled-garden platforms and black-box feed algorithms. This shift is making our media diets miserable. Ironically, a solution to the problem predates algorithmic feeds, social media and other forms of informational junk food. It is called RSS (Really Simple Syndication) and it is beautiful.&lt;/p&gt;
    &lt;head rend="h2"&gt;What the hell is RSS?&lt;/head&gt;
    &lt;p&gt;RSS is just a format that defines how websites can publish updates (articles, posts, episodes, and so on) in a standard feed that you can subscribe to using an RSS reader (or aggregator). Don’t worry if this sounds extremely uninteresting to you; there aren’t many people that get excited about format specifications; the beauty of RSS is in its simplicity. Any content management system or blog platform supports RSS out of the box, and often enables it by default. As a result, a large portion of the content on the internet is available to you in feeds that you can tap into. But this time, you’re in full control of what you’re receiving, and the feeds are purely reverse chronological bliss. Coincidentally, you might already be using RSS without even knowing, because the whole podcasting world runs on RSS.&lt;/p&gt;
    &lt;p&gt;There are many amazing articles about the utility and elegance of RSS, and I do not think the world needs another, so I will spare you and instead focus on my personal experience and tips. If you are interested in a deeper dive, I highly recommend Molly White’s article Curate your own newspaper with RSS. It is a convincing, well-written article that you can also listen to in Molly’s own voice if you wish to.&lt;/p&gt;
    &lt;head rend="h2"&gt;Broken distribution models&lt;/head&gt;
    &lt;p&gt;Here’s a little story about the promise of social media. In 2011, my band was getting a little more serious and preparing to record our first album. Facebook was rapidly growing all over the world, so I created an account - mostly to manage my band’s Facebook page. Back then, social media (and Facebook in particular) felt very different: vibrant and full of promise for the brave new future of web 2.0. I looked up all my favorite bands so that every time they put out an album or tour near me, I wouldn’t miss it. Many bands either lacked proper websites or rarely updated them in a useful way, so this felt like the perfect use case for Facebook.&lt;/p&gt;
    &lt;p&gt;It didn’t take long for me to start seeing the cracks. As Facebook would push for more engagement, some bands would flood their pages with multiple posts per day, especially if they were touring or had a new release coming up. Others would be more restrained, but then their posts would often be lost in the feed. There was no way to opt in only for a certain type of updates from my followed pages, and the increasingly algorithmic feed would simply prioritize posts by engagement. I realized that I wouldn’t be able to get just the important updates; instead, I’d get a wild mish-mash of engagement-bait that I wasn’t willing to work my way through. And don’t get me started about how over time, page owners had to pay to promote their posts to get any reach on the platform - that is simply extortion.&lt;/p&gt;
    &lt;p&gt;I no longer use Facebook (or any similar social media for that matter) for many reasons, though algorithmic feeds are at the top of the list. Algorithms on social media are very unlikely to be written with your best interest in mind: The goal of social media is to keep you glued to the feed for as long as possible. It optimizes for the most time spent, for engagement, for serving the most ads. It will not necessarily optimize for keeping you well informed, showing you balanced opinions, giving you control or even showing you all the information you’d like. The misalignment of incentives has become very apparent in the last few years, but the problem goes deeper. Any type of curation (because algorithmic feeds are simply curation machines) will never be flexible enough to account for every person’s needs. The story we are sold with algorithmic curation is that it adapts to everyone’s taste and interests, but that’s only true until the interests of the advertisers enter the picture.&lt;/p&gt;
    &lt;head rend="h2"&gt;How I use RSS&lt;/head&gt;
    &lt;p&gt;My RSS journey starting many moons ago with Opera and Thunderbird, continued with Google Reader (RIP) and The Old Reader, and finally led me to running my own instance of FreshRSS. However, in the last year, I have read most of the content from my RSS feeds on my phone via the FeedMe app. I find that it scratches the itch of unlocking your phone and wanting to see something novel (probably gravitating towards social media). On the upside, it feeds me only articles and media that a) I have picked upfront and nothing more, b) is typically longer-form and more thoughtful than your typical social media posts.&lt;/p&gt;
    &lt;p&gt;Also, unlike algorithmic feeds, it allows me to pick what category of my interests I am in the mood for. If I’m in the mood for something lighter, I can just look into my “Fun” folder to check out new stuff from The Oatmeal or xkcd. If I feel like reading something more thoughtful, I’d dive into my “Reads” folder for The Marginalian or Sentiers. Feeling like catching up on the newest AI research? I can browse the latest research papers from arXiv that have specific keywords in the abstracts (such as prompt injection). Or I could just browse everything at once to see what piques my interest. I am the master of what information I consume, how and in what order, and no one can take that away from me by rearranging my feed or tweaking the algorithm.&lt;/p&gt;
    &lt;p&gt;One of the many small advantages is the consistency of the interface and the lack of distractions when reading. Modern browsers support reader modes, but you need to enter the mode manually and some pages might not be displayed correctly. I don’t have any attention problems (that I know of), but reading articles on certain newspaper sites feels like a cruel joke: the text of the article is often drowned by ads, suggested articles, polls, and other visual smog. Not a pleasant reading experience. Your RSS reader always uses the same font, font size, screen real estate and never shows anything but the article itself.&lt;/p&gt;
    &lt;p&gt;The focused, reductive nature of RSS readers means you don’t get the full website experience, but that is arguably for the better in a lot of cases. We already mentioned the lack of suggested articles with engagement bait that could easily draw you in, but another notable omission is the comments section. It is very easy to slip into the comments section at the bottom of an article and spend far too much time reading those. You can still do that in an RSS reader by opening the article in your browser, scrolling down to the comments and diving in. At least in my case, that is a safe amount of friction to prevent me from doing it most of the time. Less is more!&lt;/p&gt;
    &lt;head rend="h2"&gt;Tips to get you going&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Many of the websites you open regularly, follow on social media or get a newsletter from, likely have an RSS feed. Look out for the RSS icon or the words RSS or feed. There are also tools like Lighthouse that can sniff out the feed for you. That said, my experience is that simply adding the homepage URL of the website into an aggregator usually works.&lt;/item&gt;
      &lt;item&gt;Remember my frustration with Facebook as a source of news for new music releases? Turns out there is a much better free solution called Muspy, where you enter all your favorite artists and it will notify you of their new releases. And guess what? You either get notified via email, or you use your personal RSS feed. Highly recommended!&lt;/item&gt;
      &lt;item&gt;Start easy with something like The Old Reader or Feedly - both offer relatively generous free tiers. And if you outgrow them or want to try something else, you simply export an OPML file with all your feeds and import them into your new RSS solution. This is the upside of open standards: freedom, ownership, and portability.&lt;/item&gt;
      &lt;item&gt;Once you have more than 5-10 feeds, start putting them into folders/categories. No need to overthink it, but doing this will help you be more selective about the content you read if you’re in a specific mood.&lt;/item&gt;
      &lt;item&gt;RSS readers can be great when traveling or whenever your internet connection might be down or spotty. You can set up your RSS client in a way that automatically fetches new content, so when you board the plane and go dark, you can still read through the already downloaded articles. (Beware, though: not all RSS feeds include full content - sometimes they’re more like teasers.)&lt;/item&gt;
      &lt;item&gt;Some websites that limit how many articles you can browse for free are actually less strict about content accessed through RSS feeds. There are obvious ethical concerns with abusing this, but it is still an upside, and you are only consuming what they provide.&lt;/item&gt;
      &lt;item&gt;If you want to tinker, you can set up an RSS aggregator like FreshRSS, tiny tiny RSS or selfoss on a shared web hosting service. If you want to go full self-hosted, there are many more options available.&lt;/item&gt;
      &lt;item&gt;Get a good mobile app. Try a few before you settle! This is a highly personal choice because even small UI quirks and differences may bother you. If you’re anything like me, you’ll do most of the reading on your phone, so make sure it feels good.&lt;/item&gt;
      &lt;item&gt;RSS readers/clients often have bookmarking/starring system which works much like dedicated bookmarking apps.&lt;/item&gt;
      &lt;item&gt;Bigger publications often have separate feeds for individual categories or tags - check those to avoid getting your main feed flooded.&lt;/item&gt;
      &lt;item&gt;Some websites have very elaborate RSS APIs which allow you to query for specific types of content. For example, arXiv has a really elaborate one, allowing you to only follow specific topics. The documentation is quite complex, so here is a quick example to kick start you:&lt;list rend="ul"&gt;&lt;item&gt;&lt;code&gt;https://export.arxiv.org/api/query?search_query=abs:LLM+AND+multilingual&amp;amp;sortBy=submittedDate&amp;amp;sortOrder=descending&lt;/code&gt;&lt;/item&gt;&lt;item&gt;The query searches through the most recently submitted papers with the words LLM and multilingual in the abstract.&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Do a little cleanup from time to time: unsubscribe from feeds that no longer seem to interest you. It’s fine, no one will take offense, and your attention is too precious to be wasted on stuff that is not for you.&lt;/item&gt;
      &lt;item&gt;Don’t know where to start? Check out this list of 100 most popular RSS feeds, Feedspot’s 70 most popular feeds or Hostinger’s list of 55 popular blogs. Apart from that, Google is your friend (especially if you start searching for specific topics or niches), and good blogs often link to other blogs - all you need to do is to follow the breadcrumbs.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Happy RSS-ing!&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45459233</guid><pubDate>Fri, 03 Oct 2025 05:13:47 +0000</pubDate></item><item><title>Circassian Genocide</title><link>https://en.wikipedia.org/wiki/Circassian_genocide</link><description>&lt;doc fingerprint="7fcc34b990221e63"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Circassian genocide&lt;/head&gt;
    &lt;table&gt;
      &lt;row span="2"&gt;
        &lt;cell role="head"&gt;Circassian genocide&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Part of the Russo-Circassian War&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Native name&lt;/cell&gt;
        &lt;cell&gt;ЦӀыцӀэкӀун (Ubykh)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Location&lt;/cell&gt;
        &lt;cell&gt;Circassia&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Date&lt;/cell&gt;
        &lt;cell&gt;1863–1878[1]&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Target&lt;/cell&gt;
        &lt;cell&gt;Circassians and other Caucasian peoples&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;
          &lt;p&gt;Attack type&lt;/p&gt;
        &lt;/cell&gt;
        &lt;cell&gt;Genocide (mass killings, mass rape) and ethnic cleansing (forced displacement, death marches)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Deaths&lt;/cell&gt;
        &lt;cell&gt;1,000,000–2,000,000:&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Victims&lt;/cell&gt;
        &lt;cell&gt;95–97% of the Circassian population&lt;p&gt;1,000,000–1,500,000 displaced[2][3]&lt;/p&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Perpetrator&lt;/cell&gt;
        &lt;cell&gt;Russian Empire&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Motive&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;The Circassian genocide,[8][9] or Tsitsekun,[a][b] was the systematic mass killing, ethnic cleansing, and forced displacement of between 95% and 97%[c][d] of the Circassian people during the final stages of the Russian invasion of Circassia in the 19th century.[13][14][15] It resulted in the deaths of between 1,000,000 and 1.5 million and the destruction of Circassia, which was then annexed by the Russian Empire.[16][e] Those planned for extermination were mainly the Circassians, who are predominantly Muslims, but other ethnic groups in the Caucasus were also affected, as part of the Caucasian War.[14] The Imperial Russian Army also impaled their victims and tore open the bellies of pregnant women to intimidate the Circassians and devastate their morale.[13][17][irrelevant citation] Many Russian generals, such as Grigory Zass, described the Circassians as "subhuman filth" and a "lowly race" to justify and glorify their wholesale slaughter[13][18][19][page needed] and their use as human test subjects in unethical scientific experiments.[20] Russian soldiers were also permitted to rape Circassian women.[13]&lt;/p&gt;
    &lt;p&gt;The native Circassian population was largely decimated or expelled to the Ottoman Empire.[21][22] Only those who accepted Russification and made agreements with Russian troops, were spared. Starvation was used as a tool of war against Circassian villages, many of which were subsequently burned down.[23] Russian writer Leo Tolstoy reported that Russian soldiers attacked village houses at night.[24] British diplomat Gifford Palgrave, stated that "their only crime was not being Russian."[25][page needed] Seeking military intervention against Russia, Circassian officials sent "A Petition from Circassian leaders to Her Majesty Queen Victoria" in 1864, but were unsuccessful in their attempt to solicit aid from the British Empire.[26][page needed][27][28] That same year, the Imperial Russian Army launched a campaign of mass deportation of Circassia's surviving population.[29] By 1867, a large portion of the Circassians were expelled. Many died from epidemics or starvation. Some were reportedly eaten by dogs after their death,[25][page needed] while others died when their ships sank during storms.[30]&lt;/p&gt;
    &lt;p&gt;Most sources state that as little as 3% of Circassia's population remained after the genocide[31][32][33] and that as many as 1.5 million people were forced to flee in total, though only around half of them survived the journey.[7][34][35] Ottoman archives show the intake of more than a million immigrants from the Caucasus by 1879, with nearly half of them having been found dying on the shores of the Black Sea as a result of disease.[6] Presuming that these statistics are accurate, Russia's military campaign in Circassia constitutes the single largest genocide of the 19th century.[36] Russian records, in confirmation of the Ottoman archives, documented the presence of only 106,798 Circassians in the Caucasus on the approach to the 20th century. Other estimates by Russian historiographers are even lower, ranging from 40,400 to 65,900.[11] The Russian Empire census, conducted in 1897, reported the presence of 150,000 Circassians in the conquered region.[37][38]&lt;/p&gt;
    &lt;p&gt;Classified Russian Imperial archives in Georgia were opened to historians by the Georgian government, which revealed previously unknown information regarding Russian actions. Following this, on May 20, 2011, Georgia formally recognized the Circassian genocide.[39] Ukraine recognized the Circassian genocide on 9 January 2025, following Circassian appeals in June 2024.[40][41][42] The city of Wayne, New Jersey in the United States and the East Turkistan Exile Government have also officially recognized the Circassian genocide.[43][44][45] On February 7, 1992, the Kabardino-Balkarian Autonomous Soviet Socialist Republic decided to condemn the Circassian Genocide.[46] On May 12, 1994, the Republic of Kabardino-Balkaria and on April 29, 1996, the Republic of Adygea submitted applications to the State Duma of the Russian Federation for the recognition of the Circassian Genocide.[47][48][49] On 15 October 1997, Abkhazia recognised the deportation and killings of Abkhazians in the 19th century as genocide and the deportees as refugees.[50][51] In October 2006, 20+ Circassian associations appealed to the European Parliament to recognize the Circassian Genocide.[52] In November 2006, Circassian associations in the Republics of Adygea, Kabardino-Balkaria and Karachay-Cherkessia appealed to Russian President Vladimir Putin to recognize the Circassian Genocide.[53] The Russian Federation classifies the events in Circassia as a mass migration (Russian: Черкесское мухаджирство, lit. 'Circassian migrationism') and denies that a genocide took place.[54][55][56] 21st of May is observed annually as the Circassian Day of Mourning,[57] which consists of ceremonies and marches in memory of the victims and, sometimes, protests against the Russian government.[58][59] Today, the Circassian diaspora is primarily concentrated in Turkey and Jordan, with some 750,000 living in Russia's North Caucasus Economic Region.&lt;/p&gt;
    &lt;head rend="h2"&gt;Background&lt;/head&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;Part of a series on the&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell role="head"&gt;Circassians&lt;p&gt;Адыгэхэр&lt;/p&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;p&gt;List of notable Circassians&lt;/p&gt;
          &lt;p&gt;Circassian genocide&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Circassian diaspora&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Circassian tribes&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;p&gt;Surviving&lt;/p&gt;
          &lt;p&gt;Destroyed or barely existing&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Religion&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt; Religion in Circassia&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Languages and dialects&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row/&gt;
      &lt;row&gt;
        &lt;cell&gt;History&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;p&gt;Show&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Culture&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Organizations&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;Part of a series on&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell role="head"&gt;Genocide&lt;p&gt;of indigenous peoples&lt;/p&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Issues&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;Part of a series on&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell role="head"&gt;Genocide&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Issues&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Related topics&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Category&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;In the late 18th and early 19th centuries, although it was already making attempts in the early 18th century, the Russian Empire began actively seeking to expand its territory to the south at the expense of the neighboring Ottoman Empire and Qajar Iran, and thus aimed to incorporate the Caucasus into its domain. Some areas proved easier to incorporate than others, largely depending on the nature of local political structures. Eastern Georgia for example, comprising the most powerful and dominant Georgian regions of Kartli and Kakheti had been under intermittent Iranian suzerainty since 1555. Russia eventually found itself able, through instability in the geopolitical situation of Georgia within Qajar Iran, to annex eastern Georgia in the early 19th century, ratified in the 1803 Treaty of Gulistan.[60]&lt;/p&gt;
    &lt;p&gt;Russia endeavored to bring the entire Caucasus region under its control, conquering Armenia, Caucasian Azerbaijan, and southern Dagestan, while co-opting the nobility of other areas such as Lower Kabardia and parts of Dagestan. Although the Russians faced considerable resistance to incorporation in Dagestan and Georgia, as well as military resistance by the local government of Imereti, the regions they felt most difficult of all to incorporate were those that had not been conquered by foreign empires and did not have any local monopolies of power—which was the state of most Circassian territories, where resistance to absorption into the Russian Empire was most tenacious.[61] Prior to the perpetration of genocide by Tsarist Russia, more than 4 million Circassians lived in their homeland in the Caucasus.[62][63]&lt;/p&gt;
    &lt;p&gt;The Russian empire's decision to launch genocide against Circassians was driven by anti-Muslim sentiments and by Tsarist Russia's "messianic self-image" as the champion of Eastern Orthodoxy against non-Christian inhabitants in its territories. Russian Tsars viewed the Circassian tribes in the Caucasus as "primitive" humans to either be forcibly converted to Christianity or exterminated and expelled. Imperial army generals further regarded Circassia as a strategic territory to advance Russian expansionism in the Caucasus and surrounding lands.[64]&lt;/p&gt;
    &lt;head rend="h2"&gt;Prelude: Russo-Circassian War&lt;/head&gt;
    &lt;head rend="h3"&gt;Start of conflicts with Circassia&lt;/head&gt;
    &lt;p&gt;Circassians, Christianised through Byzantine influence between the 5th and 6th centuries, were generally allied with Georgians.[65] From the 16th century they entered into alliance with Georgia: Georgians and Circassians regarded themselves as constituting a single Christian island in the Black Sea and jointly appealed to Russia for protection.[65] Although there had previously been a small Muslim presence in Circassia, significant conversions came after 1717, when Sultan Murad IV ordered the Crimeans to spread Islam among the Circassians, with the Ottomans seeing success in converting members of the aristocracy who would then ultimately spread the religion to their dependents; Islam gained much more ground later as conversion came to be used to cement defensive alliances to protect their independence against Russian expansion.[66][65]&lt;/p&gt;
    &lt;p&gt;During the reign of Catherine II, the Russian army started entering Circassian soil and erecting forts, in an attempt at quick annexation. In 1763, Russian forces occupied the town of Mezdeug (modern-day Mozdok) in Eastern Circassia, turning it into a Russian fortress. Thus began the first hostilities between Circassians and the Russian Empire.&lt;/p&gt;
    &lt;p&gt;In 1764, Circassian prince Misost Bematiqwa started the Circassian resistance in Eastern Circassia.[67] Bematiqwa's resistance was strengthened when on October 18, 1768, the Ottoman sultan, who had declared war on Russia, sent a letter to Bematiqwa stating that he, as caliph, ordered all Muslim peoples of the Caucasus to officially make war against Russia.[68] The Ottoman Empire lost its protector status with the Crimean Khanate with the 1774 Treaty of Küçük Kaynarca. Following these events, Russian presence in the region increased, and the Circassians requested help and alliance from the Ottomans.[69]&lt;/p&gt;
    &lt;p&gt;The Russians introduced courts in Kabarda (Eastern Circassia) in the early 1790s and declared that the Adyghe Xabze, the Circassian law, had been removed, greatly angering Circassians.[70]&lt;/p&gt;
    &lt;head rend="h3"&gt;Methods of massacre&lt;/head&gt;
    &lt;p&gt;In 1799, Russian general Fyodor Bursak organized several raids against the Western Circassians, and ordered his men to burn Circassian villages, including those loyal to the Russian Empire.[71] From 1802 to 1806, General Pavel Tsitsianov led campaigns in Circassia and targeted Circassian villages.[72] He referred to the Circassians as "untrustworthy swine" to "show how insignificant they are compared to Russia".[73][full citation needed][failed verification]&lt;/p&gt;
    &lt;p&gt;In 1805, a plague struck Kabardia. Using this as an excuse, General Glazenap ordered his forces to burn down 80 villages to terrorize the people into submission and to wreak vengeance upon the Kabardians.[70]&lt;/p&gt;
    &lt;p&gt;A village burning campaign started, in which the Circassian population were burnt without separation. First, the Russian army would enter and loot a Circassian village, then they would kill those who resisted or complained, and finally, they would set fire to the village and make sure all inhabitants were killed. In 1810 about 200 villages were burned. The population of Kabarda, which was 350,000 in 1763, was only 37,000 in 1817.[74]&lt;/p&gt;
    &lt;p&gt;In 1808, a Russian commission decided that in order to end Circassian resistance against the Russian Empire, the Circassians would need to be eliminated from their homeland.[75][19] In February 1810, General Fyodor Bursak's forces entered a Circassian village near the Sop River and proceeded to burn the village. They decided to postpone their plans to attack the next village when the river began to overflow.[19][76] In December, the same methods were applied in the Shapsug region, and several villages were burnt. After some civilians deserted to the forests, forests in the region were burnt down.[76] In 1811, petitions were sent to St. Petersburg in Russia, appealing for the basic rights of Circassians in the occupied areas.[70]&lt;/p&gt;
    &lt;p&gt;In 1817, Russian veteran general Aleksey Yermolov arrived in the Caucasus. Deciding that Circassians would not surrender willingly, General Yermolov concluded that "terror" as an official strategy would be effective.[77] Although terror methods were already in use, they were only officialized after Yermolov's orders. Russian generals began to destroy Circassian villages and towns and slaughter people as part of an official duty to shock the population into surrender.[78][79][77] Under Yermolov, Russian troops retaliated by destroying villages where resistance fighters were thought to hide, as well as employing assassinations, kidnappings and the execution of whole families.[78] Because the resistance was relying on sympathetic villages for food, the Russian military also systematically destroyed crops and livestock and killed Circassian civilian farmers.[79][77] Circassians responded by creating a tribal federation encompassing all tribes of the area.[77]&lt;/p&gt;
    &lt;p&gt;In May 1818, the village of Tram was surrounded, burnt, and its inhabitants killed by Russian forces under the command of General Ivan Petrovich Delpotso, who took orders from Yermolov and who then wrote to the Circassian forces:[80]&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;This time, I am limiting myself on this. In the future, I will have no mercy for the guilty brigands; their villages will be destroyed, properties taken, wives and children will be slaughtered.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;— Ivan Petrovich Delpotso&lt;/p&gt;
    &lt;p&gt;The complete destruction of villages with everything within them became a standard action by the Russian army and Cossack units. Nevertheless, the Circassian resistance continued. Villages that had previously accepted Russian rule were found resisting again, much to the ire of Russian commanders.[81]&lt;/p&gt;
    &lt;p&gt;In September 1820, Russian forces began to forcibly resettle inhabitants of Eastern Circassia. Military forces were sent into Kabardia, killing cattle and causing large numbers of inhabitants to flee into the mountains, with the land these inhabitants had once lived on being acquired for the Kuban Cossacks. The entirety of Kabardia (Eastern Circassia) was then declared property of the Russian government.[82]&lt;/p&gt;
    &lt;p&gt;General Yermolov accelerated his efforts in Kabardia, with the month of March 1822 alone seeing 14 villages being destroyed as Yermolov led expeditions.[80] In February 1824, the Russian army led by General Vlasov attacked the Circassian villages of Jambut, Aslan, Morza, and Tsab Dadhika and completely destroyed them, along with the inhabitants, despite the villages being at peace with the Russian Empire.[76] In 1828, General Emanuel destroyed 6 Natukhaj Circassian villages and many more Shapsug Circassian villages. He then passed the Kuban and burned 210 more villages.&lt;/p&gt;
    &lt;p&gt;The Treaty of Adrianople was signed on 14 September 1829.[83] According to the document, Circassia was given by the Ottoman Empire to Russia. The Circassians considered it invalid, arguing that because their territory had been independent of the Ottomans, Istanbul had no right to cede it.[84] Circassian ambassadors were sent to England, France and Ottoman lands announcing that they denied the treaty under all conditions.&lt;/p&gt;
    &lt;p&gt;In 1831, the Russian government considered the destruction of the Natukhaj tribe in favor of populating their land on the northern coast of the Black Sea with Cossacks. In late 1831, in retaliation for Circassian attacks against Cossack military bases, Russian General Frolov and his task force destroyed several villages.[76] Beginning the night of November 20, a "horror campaign" was started, in which villages were surrounded by artillery and bombarded. The targets were local homes, as well as mosques. The operation was described in a report:[76]&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;In this affair the Russians lost 10 soldiers and had one officer and 16 soldiers wounded. At the scene of the battle there were more than 150 bodies of Circassians killed by bayonets and up to 50 women and children killed from the action of the Russian artillery.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;In another report, General Rosen described how, in December 1831, 381 Circassians were captured by his forces and boasted about taking them prisoner and firing at villages, leaving 100 men and 50 women dead. He goes on to detail how when setting fire to a village, a Russian soldier named Midvideiv (or Medvedev) killed a Circassian who tried to stop him from burning down a mosque.[85]&lt;/p&gt;
    &lt;p&gt;The Russians countered the heavy Circassian resistance by modifying the terrain. They laid down a network of roads and cleared the forests around these roads, destroyed native villages, and often settled new farming communities of Russians or other Orthodox Slavic people. In this increasingly bloody situation, the wholesale destruction of villages became a standard tactic.[86]&lt;/p&gt;
    &lt;p&gt;General Yermolov remarked that "We need the Circassian lands, but we don't have any need of the Circassians themselves".[87] Russian military commanders, such as Yermolov and Bulgakov, acting in their own interests to attain glory on the battlefield and riches through conquest, which would be much more difficult to attain on the Western front than in the Caucasus, often deceived the central administration and obscured the attempts of Circassian groups to establish peace with Russia.[88]&lt;/p&gt;
    &lt;p&gt;In 1833, Colonel Grigory Zass was appointed commander of a part of the Kuban Military Line with headquarters in the Batalpashinsk fortress. Colonel Zass received wide authority to act as he saw fit. He was a racist who considered Circassians to be inferior.[20] The only way to deal with the Circassians, in his opinion, was to scare them away "just like wild animals". Zass advocated ruthless military methods predicated on this notion, including burning people alive, cutting off heads with show, burning populated villages to the ground, spreading epidemics on purpose, and mass rape of children.[91][failed verification][92] He kept a box under his bed with his collection of severed Circassian body parts.[18] He operated in all areas of Circassia.&lt;/p&gt;
    &lt;p&gt;Zass' main strategy was to intercept and retain the initiative, terrorize the Circassians, and destroy Circassian settlements. After a victory, he would usually burn several villages and seize cattle and horses to show off, acts which he proudly admitted. In his reports, he frequently boasted about the destruction of villages and glorified the mass murder of civilians.[18]&lt;/p&gt;
    &lt;p&gt;In August 1833, Zass led his first expedition into Circassian territory, with the goal being destroying as many villages and towns as possible. He attacked the Besleney region between November and December, destroying most villages, including the village of the double agent Aytech Qanoqo. He continued to exterminate the Circassian population between 1834 and 1835, particularly in the Abdzakh, Besleney, Shapsug, and Kabardian regions. Zass' forces referred to Circassians as "savages", "bandits", "plunderers" or "thieves" and the Russian Empire's forces were commanded by officers who commanded political dissidents and criminals.[74][93][94][95][96][97][98]&lt;/p&gt;
    &lt;p&gt;In 1834, Zass sent a report to Rosen detailing his campaign into Circassia. He talks about how he killed three Circassian civilians on their way to fetch grass:[99]&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;I captured three Circassians from carriages that were on their way to fetch grass, other than the thirteen we already had, who did not wish to surrender to us voluntarily, so I ordered [them] to [be] killed&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;He then talks about how he destroyed a neighborhood:[99]&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;The savages panicked and started fleeing from their homes, leaving their weapons behind attempting to escape to the forest but most of them were killed by the Cossacks ... with the soldiers lined up ready to fight, the cleansing continued with artillery shells, and I sent there two infantry brigades, but they could only capture 11 more people, and since the fire was in flames in many places, the rest were either killed or burned after attempting to escape by hiding on the roofs of their homes or by the manure. So like this, we destroyed and destructed[clarification needed] the neighborhood.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Reportedly, Zass would pick random Circassian males from the towns he attacked and burn them alive as a form of entertainment. He did not stop at burning women; he also cut the pregnant women's bellies with a bayonet.[18] He sent severed Circassian heads to friends in Berlin who were professors and used them to study anatomy.[100] The Decembrist Nikolai Ivanovich Lorer said that Zass cleaned and boiled the flesh off the heads after storing them under his bed in his tent. He also had Circassian heads outside of his tent impaled on lances on a hill. Circassian men's corpses were decapitated by Russian-Cossack women on the battlefield after the battles were over for the heads to be sent to Zass for collection.[101][102][103][104] Zass allowed his soldiers to rape Circassian girls.[105]&lt;/p&gt;
    &lt;p&gt;Zass erected Circassian heads on poles outside of his tent, and witnesses reported seeing wind blowing the beards. Russian soldiers and Cossacks were paid for sending Circassian heads to General Zass.[108][109][110][111] Besides cutting Circassian heads off and collecting them, Zass employed a deliberate strategy of annihilating Circassians en masse, burning entire Circassian villages with the people in them and encouraging violation of Circassian women and children.[112][113] Zass is depicted as the Devil or Satan in Circassian folklore. In 1842, Zass was removed from service due to his methods being deemed too cruel by St. Petersburg.[citation needed]&lt;/p&gt;
    &lt;p&gt;In 1837, some Circassian leaders offered the Russians a white peace, arguing that no more blood should be shed. In response to this offer, the Russian army under the command of General Yermolov burnt 36 Circassian villages.[87]&lt;/p&gt;
    &lt;p&gt;In the negotiations to formulate the 1856 Treaty of Paris, the British representative, the Earl of Clarendon, defended the Circassians' rights, but was thwarted. The final treaty also extended amnesty to nationals that had fought for enemy powers, but since Circassia had never previously been under Russian control, Circassians were exempt, and thus Circassians were now placed under de jure Russian sovereignty by the treaty, with Russia under no compulsion to grant Circassians the same rights as Russian citizens elsewhere, effectively making them Russian property with which Russia could do whatever it wanted.[114][115][116]&lt;/p&gt;
    &lt;head rend="h2"&gt;Genocide and ethnic cleansing: 1860s&lt;/head&gt;
    &lt;quote&gt;
      &lt;p&gt;"The state needed the Circassians' land, but had absolutely no need of them."&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Genocides and mass expulsions of Caucasian natives and Crimean Tatars were perpetrated by the Russian empire during the latter half of 19th century as it expanded southwards and launched extermination campaigns against Circassians, Chechens, Crimean Tatars, and others. Pogroms against Jews also intensified across the Russian empire during this period.[118] These extermination campaigns were part of Tsarist Russia's "brosok na yug" ("throw to the south") settler-colonial policy of Russification in the Caucasus and surrounding regions. Following the Crimean war, the Russian empire forcibly expelled millions of Crimean Tatars and sent Russian settlers to the Crimean peninsula. During the 1860s, the Russian imperial army conquered Circassia and launched a scorched-earth campaign of state terror aimed at the extermination or complete expulsion of all Circassian natives from the Caucasus region.[119]&lt;/p&gt;
    &lt;p&gt;In 1857, Dmitry Milyutin published the idea of mass expulsions of Circassian natives.[120] Milyutin argued that the goal was not to simply move them so that their land could be settled by productive farmers, but rather that "eliminating the Circassians was to be an end in itself – to cleanse the land of hostile elements".[120][121][122] Tsar Alexander II endorsed the plans to exterminate Circassians,[120] and in June 1861 ordered the launch of a settler-colonial Russification and Christianization programme.[107] Milyutin later had been appointed as the minister of war the same year, and from the early 1860s massacres and ethnic cleansing began occurring in the Caucasus.[120][121][123]&lt;/p&gt;
    &lt;p&gt;Others among the Russian military class such as Rostislav Fadeyev characterized the Circassians as a "barbaric people", additionally expressing his view that they were incapable of being Russified. Fadeyev argued that a "re-education of a people is a centuries-long process" and claimed that Russia was at a pivotal moment in its history towards the total assimilation of the Caucasus region into the Russian empire.[77][107] Fadeyev supported the extermination of half the population, stating that Russians intended to "exterminate half the Circassian people in order to compel the other half to lay down their arms".[77] Sentiments for expulsion existed among prominent Russian politicians such as Prince Kochubei.[77] Kochubei said to Americans visiting the region that "these Circassians are just like your American Indians – as untamable and uncivilized ... and, owning to their natural energy of character, extermination only would keep them quiet."[77]&lt;/p&gt;
    &lt;p&gt;As Russian armies advanced in Circassia in the late 1850s and early 1860s, Circassians were evicted from their lands so they could be settled by loyal Cossacks as the Russian military elite developed a belief that Circassians would have to be entirely expelled from regions for the security of Russian rule.[124] Yermolov wrote that "resettlement of intractable mountaineers" to Turkey would be the easiest way to "give freedom" to those who "prefer death to allegiance to the Russian government".[125] The Circassian resettlement plan was eventually agreed upon at a meeting of the Russian Caucasus commanders in October 1860 in Vladikavkaz and officially approved on 10 May 1862 by Tsar Alexander II[126] and a flood of refugee movements began as Russian troops advanced in their final campaign.[127]&lt;/p&gt;
    &lt;p&gt;Although the order given by Tsar Alexander II was to deport the Circassians rather than to massacre them, the Russian commanders instead preferred the idea of massacring large portions of the Circassian population. Richmond has noted that "reports abound" of massacres in the final stages of the Caucasus campaign.[117]&lt;/p&gt;
    &lt;p&gt;In 1859, three years before the approval of the plan by the Russian government, Russian officials began talks with the Ottomans about the migration of a limited number of emigrants,[128] and in 1860 the two sides negotiated a treaty for the migration of 40,000–50,000 Circassians, with the Ottoman side being eager for an increase in population.[129] However, Russia did not aim to limit the number of exiles to 50,000, as the plan was to exile the entire Circassian population.&lt;/p&gt;
    &lt;p&gt;With a gathering sense of emergency, on 25 June 1861, leaders of all the Circassian tribes gathered in Sochi to jointly petition the Western powers for help.[130] Ottoman and British delegations both promised recognition of an independent Circassia, as well as recognition from Paris, if they unified into a coherent state,[131][full citation needed] and in response the Circassian tribes formed a national parliament in Sochi, but Russian General Kolyobakin quickly overran Sochi and destroyed it,[132][full citation needed] while there was no action to stop this by any major power's government.[130]&lt;/p&gt;
    &lt;p&gt;Russian geographer Mikhail Ivanovich Venyukov, who was co-operating with Russian military at that time for cartographic purposes; was shocked by Yevdokimov's plans for exterminating the Circassians and other natives. In his memoirs, Venyukov reported that Count Yevdokimov pursued all means to sabotage communications between the Emperor and native tribal chiefs; since he was determined to expel all the inhabitants from the region.[133] Describing Count Yevdokimov's strategy of inflicting state terror and mass-starvations on Circassian tribes, Adolf Berzhe reports:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Evdokimov's plan was to base the conquest of the western Caucasus on the Kuban Caucasus Army, and by means of military lines and new settlements continually pressure the mountain tribes until it became completely impossible for them to live in the mountains.[107]&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;In April 1862, a group of Russian soldiers slaughtered hundreds of Circassians who had run out of ammunition, leaving "the mountain covered with corpses of bayoneted enemies", as reported by Ivan Drozdov.[134] He tried to justify the extensive death and destruction that his army brought upon the Circassians: "Mankind has rarely experienced such disasters and to such extremes, but only horror could have an effect on the hostile mountaineers and drive them from the impenetrable mountain thickets."[135] For the most part, the Imperial Russian army preferred to indiscriminately destroy areas where Circassians resided. In September 1862, after attacking a Circassian village and seeing some of its inhabitants flee into the forest, General Nikolay Yevdokimov bombarded that forest for six hours and ordered his men to kill on sight; he then set the forest on fire to make sure no survivors were left.[134]&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;"The war was conducted with implacable, merciless severity. We went forward step by step, irrevocably cleansing the mountaineers to the last man from any land the soldiers set foot on. The mountaineers' auls were burned by the hundreds, just as soon as the snow melted but before the leaves returned to the trees (in February and March). We trampled and destroyed their crops with our horses. If we were able to capture the villagers by surprise we immediately sent them via convoy to the shore of the Black Sea, and farther, to Turkey...there were atrocities bordering on barbarity"&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Drozdov reported to have overheard numerous Circassian men taking oaths to fight the heavy artillery forces; so as to allow their family and rest of their villages to escape, and later more reports of groups of Circassians doing so were received.[137] Leo Tolstoy reported that Russian soldiers would attack village houses at night.[24]&lt;/p&gt;
    &lt;p&gt;In October 1862, Yevdokimov ordered the de-population and mass-expulsion of all Circassians from Caucasus.[138] By the fall of 1863, Russian operations had become methodical, following a formula by which, after the Circassians fled into the woods, their village and any food that could be found would be burned, then after a week or two they would search for and destroy any huts the Circassians might have made for shelter, burn the forest, and then this process would be repeated until General Yevdokimov was satisfied that all the natives in the area had died either by being shot, starved, or burned.[139] By this period, the combat phase of the war was over; and Russian military forces were simply engaging in systematic massacres, torture and de-population of unarmed civilians, women and children.[140]&lt;/p&gt;
    &lt;p&gt;In the southeast, Circassians prepared to resist and hold their last stand against Russian military advances and troops.[141] With the refusal to surrender, Circassian tribes were targeted one by one by the Russian military, with thousands massacred and whole villages razed to the ground.[77]&lt;/p&gt;
    &lt;p&gt;On April 9, 1864, "A Petition from Circassian leaders to Her Majesty Queen Victoria" was signed by the Circassians. The document requested British military aid, or at least humanitarian aid, for the Circassian people.[26][27][28] It reads:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;In the name of God, the Most Compassionate, the Most Merciful.&lt;/p&gt;
      &lt;p&gt;Our most humble Petition to Her Magnificent Majesty the Queen and Emperor of England is to the effect that –&lt;/p&gt;
      &lt;p&gt;It is now more than eighty years since the Russian Government is unlawfully striving to subdue and annex to its dominions Circassia, which since the creation of the world has been our home and our country. It slaughters like sheep the children, helpless women, and old men that fall into its hands. It rolls about their heads with the bayonet like melons, and there is no act of oppression or cruelty which is beyond the pale of civilisation and humanity, and which defies description, that it has not committed.&lt;/p&gt;
      &lt;p&gt;We have not, from father to son, at the cost of our lives and properties, refrained from opposing the tyrannical acts of that Government in defence of our country, which is dearer to us than our lives. But during the last year or two it has taken advantage of a famine caused by a drought with which the Almighty visited us, as well as by its own ravages, and it has occasioned us great distress by its severe attacks by sea and land. Many are the lives which have been lost in battle, from hunger in the mountains, from destitution on the sea-coast, and from want of skill at sea.&lt;/p&gt;
      &lt;p&gt;We therefore invoke the mediation and precious assistance of the British Government and people – the guardian of humanity and centre of justice – in order to repel the brutal attacks of the Russian Government on our country, and save our country and our nation together.&lt;/p&gt;
      &lt;p&gt;But if it is not possible to afford this help for the preservation of our country, and race, then we pray to be afforded facilities for removing to a place of safety our helpless and miserable children and women that are perishing by the brutal attacks of the enemy as well as by the effects of famine; and if neither of these two requests are taken into consideration, and if in our helpless condition we are utterly annihilated notwithstanding our appeals to the mercy and grace of the Governments, then we shall not cease to invoke our right in the presence of the Lord of the Universe, of Him who has confided to Your Majesty sovereignty, strength, and power for the purpose of protecting the weak.&lt;/p&gt;
      &lt;p&gt;We beg Your Excellency [Sir Henry Bulwer] to be the medium of making known to the great British Government and to the glorious British nation our condition of helplessness and misery, and we have therefore ventured to present to Your Excellency our most humble petition. A copy of it has been submitted to the Sultan's Government and to the Embassies of other Powers.&lt;/p&gt;
      &lt;p&gt;Signed by the People of Circassia. 29 Sheval, 1280 [April 7, 1864][26][page needed][27][28]&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;In 1864, in the valley of Khodz near Maikop, the Ubykh population resisted Russian troops.[142][143] During the battle, the men were joined by women, who disposed of their jewellery into the river and took up arms into a fight to the end.[142][143] As part of Yevdokimov's strategy, Russian Imperial Army blocked all exitways and bombarded the valley from all directions with heavy artillery, indiscriminately killing men, women and children for several days.[2] Russians troops with heavy artillery and other modern weaponry killed all the men, women and children, in a scene that a Circassian chronicler Shauket who had witnessed the events described as "a sea of blood".[142] Describing his account of the mass-murder in the valley, Shauket outlined:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;"men and women were slaughtered mercilessly and blood flowed in rivers, so that it was said that the 'bodies of the dead swam in a sea of blood'. Nevertheless, the Russians were not content with what they had done but sought to satisfy their instincts by making children targets for their cannon shells[2]&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Another chronicler reported that all living inhabitants of Khodz valley were slaughtered by Russian military assaults and bombardments.[2] In March 1864, a surrounded Circassian army refused to surrender and committed mass suicide. Around the same time, a final battle took place in Qbaada in 1864 between the Circassian army of 20,000 men and women, consisting of local villagers and militia and a Russian army of 100,000 men, consisting of Cossack and Russian horsemen, infantry and artillery. The Circassians were defeated, and after the battle, masses of Circassians were driven to Sochi, where thousands died as they awaited deportation.[144]&lt;/p&gt;
    &lt;p&gt;The last Circassian resistance, along with the coastal Abkhaz tribes of Pskhu, Akhtsipsou, Aibgo and Jigit were defeated and then killed en masse to the last man, woman and child, after which, on 21 May, Prince Mikhail Nikolayevich gathered the troops in a clearing in the area for a thanksgiving service.[145] The Russian army began celebrating victory, as a military-religious parade was held, and 100 Circassian warriors were publicly mutilated in a public execution in order to establish authority.[146] After this, the Russian army began increasing their efforts in raiding and burning Circassian villages, destroying fields to prevent return, cutting down trees, and driving the people to the Black Sea coast.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;In this year of 1864 a deed has been accomplished almost without precedent in history: not one of the mountaineer inhabitants remains on their former places of residence, and measures are being taken to cleanse the region in order to prepare it for the new Russian population.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;— Main Staff of the Caucasian Army[147]&lt;/p&gt;
    &lt;p&gt;The Ottomans hoped to increase the proportion of Muslims in regions where there were large Christian populations. Mountaineers were invited to "go to Turkey, where the Ottoman government would accept them with open arms and where their life would be incomparably better".[148]&lt;/p&gt;
    &lt;p&gt;General Yevdokimov was entrusted with enforcing the Russian policy of mass Circassian migration to other parts of the Russian Empire or the Ottoman Empire.[141] Although some Circassians went by land to the Ottoman Empire, the majority went by sea, and those tribes which had "chosen" deportation were marched to the ports along the Black Sea by Russian forces.[149] Russian commanders and governors warned that if the order to leave was not carried out, more forces would be sent.[150]&lt;/p&gt;
    &lt;head rend="h3"&gt;Conditions during the deportation process&lt;/head&gt;
    &lt;p&gt;The situation of the Circassian and Abkhaz masses that had been driven into the coastal gorges prior to transport was dire. A Russian historian of the time, Adolph Petrovich Berzhe, who witnessed the events regarding the departure of the Circassians described the following:[151]&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;I shall never forget the overwhelming impression made on me by the mountaineers in Novorossiysk Bay, where about seventeen thousand of them were gathered on the shore. The late, inclement and cold time of the year, the almost complete absence of means of subsistence and the epidemic of typhus and small pox raging among them made their situation desperate. And indeed, whose heart would be touched on seeing, for example, the already stiff corpse of a young Circassian woman lying in rags on the damp ground under the open sky with two infants, one struggling in his death-throes while the other sought to assuage his hunger at his dead mother's breast? And I saw not a few such scenes.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;— Adolph Petrovich Berzhe, Ahmed 2013, pp. 162–163.&lt;/p&gt;
    &lt;p&gt;Ivan Drozdov, a Russian officer who witnessed the scene in May 1864 as the other Russians were celebrating their victory remarked:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;On the road our eyes were met with a staggering image: corpses of women, children, elderly persons, torn to pieces and half-eaten by dogs; deportees emaciated by hunger and disease, almost too weak to move their legs, collapsing from exhaustion and becoming prey to dogs while still alive.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;— Ivan Drozdov[152]&lt;/p&gt;
    &lt;p&gt;An unknown number of deportees perished during the process. Some died from epidemics among crowds of deportees both while awaiting departure and while languishing in their Ottoman Black Sea ports of arrival. Others perished when ships underway sank during storms[30] or due to cases where profit-minded transporters overloaded their ships to maximize profit.[153] To pay for the voyage, Circassians sometimes were forced to sell their cattle, belongings, or even themselves into slavery.[154][155]&lt;/p&gt;
    &lt;p&gt;The operation was not done with any degree of efficiency by the Russians, forcing the Circassians typically to leave using unchartered vessels, thus opening themselves up to abuses by the captains of such vessels.[156] In some cases as many as 1,800 refugees were packed into one ship, which would also carry livestock and household possessions. When the ships did not sink, such crowded environments proved suitable for the spread of diseases and dehydration, and when the ships arrived at their destinations, they contained only remnants of their original human cargo. For this reason, they were referred to by contemporary observers as "floating graveyards"[157] with "decks swarming with the dead and dying".[158]&lt;/p&gt;
    &lt;p&gt;Abuses in the transport of refugees between Turkish cities were also noted, with one particular incident concerning a ship bound for Cyprus in which mutilated and decapitated bodies were found washed ashore, compounded by accounts of refugees being tied up and tossed overboard while still alive. On this particular Cyprus-bound ship, only one third of the refugees who had boarded survived.[159] Another Russian observer, Olshevsky, also noted abuses by Turkish skippers, as well as bribes paid by Circassians to get onto departing ships, but he blamed most of all the Russian command under Yevdokimov for the situation:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Why did it happen that ... the Abzakhs and Shapsugs, who were being driven from their homeland, suffered such horrific sufferings and deaths? It was exclusively because of the hurried and premature movement of our troops to the sea prior to the spring equinox. Had the Dakhovsky Detachment moved a month or two weeks later, this would not have happened.[160]&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Despite the conditions, Russian forces under Yevdokimov kept driving Circassians to the coast. In January he annihilated Ubykh villages, leaving the Ubykhs without shelter in the severe winter, and in March, the crowd of refugees at the Circassian port of Tuapse approached twenty thousand.[161]&lt;/p&gt;
    &lt;p&gt;Only a portion of those who had left the Circassian coast actually made it to Ottoman ports.[26][page needed] Of the portion that made it to Ottoman shores, many more would die there soon after while they were quarantined on either beach, the vessels that had carried them, or in lazarettos, and many more died in makeshift accommodations or in the process of being transported a second time to their final destinations.[162] One British eyewitness recalled that:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Dense masses of ragged men, women, and children literally covered the seashore. All looked wan and hungry. Many were all but naked. Several lay dying.[163]&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;In 1864, the Ottoman Porte repeatedly asked the Russian government to stop the deportations on humanitarian grounds, in light of the human disaster unfolding on their shores, but the Ottoman requests were repeatedly refused, as Yevdokimov argued with urgency that the deportations should instead be accelerated. When October 1864 was chosen as a cutoff point for the departures, Yevdokimov successfully postponed it two weeks, after which he ignored the deadline and deported Circassians without stop, even as winter set in again.[164] Later in 1867, Grand Prince Mikhail Nikolaevich stated that the cleansing had had to be accelerated "in light of a possible European coalition".[165]&lt;/p&gt;
    &lt;head rend="h3"&gt;Transport vessels&lt;/head&gt;
    &lt;p&gt;As Russia made it clear that it would not try hard to keep deported Circassians alive, and provide few ships for the effort, the Ottomans sent their navy to carry the Circassians. As the deportations increased, there were not enough Ottoman vessels to carry all the deportees, even when warships were recruited for the job, and the situation began taking a heavy toll on the Ottoman treasury, as it bore the brunt of the cost.[166]&lt;/p&gt;
    &lt;p&gt;Initially, on 17 May 1863, Tsar Alexander II ruled that those who "chose" to emigrate should pay their own way.[164] Later, the Russians offered financial incentives for vessels to take the Circassians to Ottoman ports, but forced the Circassians themselves to pay. In some cases, Circassians were forced to sell their cattle or their belongings to pay; in others, one of every thirty Circassians were sold into slavery to pay.[154][155] These funds ultimately ended up in the hands of the transporters, including Russian military officiers.[164] Many vessels refused to carry Circassians because of the disease that was present among them as many of the ships that had been carrying Circassians had had their crews fall ill, while others that did agree tried to make as much profit out of it as possible by overloading their vessels with refugees, ultimately causing many transport boats to sink, killing their human cargo.[153] In April 1864, after one Russian crew was entirely wiped out by disease, Russian vessels stopped offering themselves for transport, dumping the entire process onto the burden of the Ottomans; and Yevdokimov made no effort to make provisions for food, water or medical help.[167]&lt;/p&gt;
    &lt;p&gt;The Russian consul based in the Ottoman Black Sea port of Trabzon reported the arrival of 240,000 Circassians with 19,000 dying shortly thereafter with the death rate being around 200 people per day.[168]&lt;/p&gt;
    &lt;p&gt;On 25 May 1864, Henry Bulwer, the British ambassador in Istanbul, argued that the British government charter some of its own vessels for the purpose because the Ottomans simply did not have enough on their own, and innocent civilians would be left to rot; the vessels were not forthcoming but British government ships provided assistance at various points and British steamships also helped.[169] On 29 May, eight Greek vessels were reported to be helping with the transportation of Circassians, as were one Moldavian, one German, and one British vessel.[170][171]&lt;/p&gt;
    &lt;head rend="h2"&gt;Casualties and demographic changes&lt;/head&gt;
    &lt;p&gt;Circassian genocide is considered to be the deadliest ethnic cleansing campaign, perpetrated by any state, during the 19th century.[35] According to a census conducted in 1830, more than 4 million Circassians lived in their homeland in the Caucasus.[172][173] Of these, between 1.5 and 2 million Circassians were killed in several massacres, military operations, and large-scale state terror perpetrated by the Russian imperial army during its extermination campaigns in Circassia.[174][175] Most sources state that as many as 1 to 1.5 million Circassians were forced to flee in total, but only around half of them could make it to land.[176][page needed][34] Ottoman archives show nearly one million migrants entering their land from the Caucasus by 1879, with nearly half of them dying on the shores as a result of diseases. If Ottoman archives are correct, it would make it the biggest genocide of the 19th century, and indeed, in support of the Ottoman archives, the Russian census of 1897 records only 150,000 Circassians, one tenth of the original number, still remaining in the now conquered region.[177][178][page needed][37][38] According to Kemal Hasim Karpat: "approximately 2 million Caucasians, mostly Circassians, left Russia in the period from 1859 to 1879 but that only about 1,500,000 actually survived and were settled on Ottoman domains."[179][180] Justin McCarthy estimates that roughly "400,000"[181] muslims died during the "Caucasian Expulsion".[181]&lt;/p&gt;
    &lt;p&gt;Among the main peoples that moved to Turkey were Adyghe, Ubykhs, and Muslim Abkhazians – hence the reference in the name to the deportation being of Circassians. The Shapsugh tribe, which had numbered some 300,000, was reduced to the 3,000 people who managed to flee into the forests and plains.[77] The 140 Shapsugh that remained were sent to Siberia.[77] Overall, calculations including those taking into account the Russian government's own archival figures as well as Ottoman figures have estimated a loss of 90%,[182][39] 94%[183] or 95–97%[32] of the Circassian nation in the process. One of the biggest population changes came in the Circassian capital city of Sochi, which previously had a population of around 100,000, and according to Russian sources, was reduced to 98 after the events.[19][184][185][186][187]&lt;/p&gt;
    &lt;quote&gt;&lt;p&gt;"the cleansing of the latter canyons of natives required a large number of soldiers...&lt;/p&gt;&lt;lb/&gt;Through all these actions of the Dakhovsky Detachment, the entire mountainous and inaccessible areas between the sources of the Belaya and Pshekha rivers were cleansed of natives.&lt;lb/&gt;In order to further squeeze this population and cleanse the land of the natives as much as possible...&lt;lb/&gt;on the fifteenth of November three columns advanced to the mouth of the Defan. On the first, second, third and fourth of December several columns went from the source of the Defan along the upper and middle reaches of the rivers annihilating the population, after which, having ascended along the Shapsugo and crossed over into Psekups Basin, they cleansed the left bank of this river of natives."&lt;/quote&gt;
    &lt;p&gt;Although Circassians were the main (and most notorious) victims, the expulsions also gravely affected other peoples in the region. It was estimated that 80% of the Ingush left Ingushetia for the Middle East in 1865.[189][190] In 1865, Tsarist Russia expanded its extermination campaigns against the Chechen people.[191] Lowland Chechens as well were evicted in large numbers, and while many came back, the former Chechen lowlands lacked their historical Chechen populations for a long period until Chechens were settled in the region during the return from their 1944–1957 deportation to Siberia. The Arshtins, at that time a (debatably) separate people, were completely wiped out as a distinct group: according to official documents, 1,366 Arshtin families disappeared (i.e. either fled or were killed) and only 75 families remained.[192][193] Additionally, in 1860–1861 the Russian army forced a series of evictions of lands in the Central Caucasus, forcing about 10,000 Circassians, 22,000 Chechens and additionally a significant number of Muslim Ossetians out and to Turkey.[194] Two other Muslim peoples in the northwest Caucasus, the Karachay and the Balkars, were not deported in large numbers during the process as they were loyal to Russia since the beginning. Abkhazia, meanwhile, lost 60% of its ethnic Abkhaz population by the end of the 19th century.[195]&lt;/p&gt;
    &lt;p&gt;Whether sources treat the evictions of these non-Circassian peoples as a part of the same process varies; most sources include the evictions and massacres of the Ubykh (considered by many to be part of the Circassian ethnos despite having a different language[196]) and Abazin populations as part of the same operation against the neighboring ethnic Circassian populations,[197][page needed] and some sources also include the Abkhaz in counts of the evicted[177] while others group the expulsions of Chechens, Ingush, Arshtins[193][192][198] and Ossetians[194] with those of Kabardins, and also some include the earlier and less systematic expulsions of Nogai.[199][26][page needed] The 1861 order by Yevdokimov to relocate populations of Circassians (including Ubykhs) to the swamps also included the Nogais and Abazas.[200][201][full citation needed]&lt;/p&gt;
    &lt;p&gt;Shenfield has argued that those that died in the ensuing catastrophe were probably more than a million, likely approaching 1.5 million.[202] Imperial Russian Army constantly deployed the terms "ochistit" (lit. "to cleanse") and "ochishchenie" (lit. "cleansing") to refer to its military operations that inflicted mass-killings and ethnic cleansing of Circassians. This was part of Russian Empire's settler-colonial policy of expansionism in Caucasus; which involved the de-populating of its inhabitants. The genocide culminated in the deaths and forced expulsions of 95–97% of Circassian natives from Caucasus.[203][204]&lt;/p&gt;
    &lt;head rend="h3"&gt;Repopulation of affected lands&lt;/head&gt;
    &lt;p&gt;On 25 June 1861, Tsar Alexander II signed an imperial rescript titled "Settlement of the North Caucasus", reading as follows:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Now with God's help, the matter of complete conquest of the Caucasus is near to conclusion. A few years of persistent efforts are remaining to utterly force out the hostile mountaineers from the fertile countries they occupy and settle on the latter a Russian Christian population forever. The honor of accomplishing this deed belongs mainly to the Cossacks of the Kubanski armed forces.[205]&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;To speed up the process, Alexander offered monetary compensation and various privileges. From the spring of 1861 to 1862, 35 Cossack stanitsas were established, with 5,480 families newly settling the land. In 1864, seventeen new Cossack stanitsas were established in the Transkuban region.[150]&lt;/p&gt;
    &lt;head rend="h2"&gt;International reactions&lt;/head&gt;
    &lt;head rend="h3"&gt;Ottoman Empire&lt;/head&gt;
    &lt;p&gt;With regard to Ottoman policy overall, Fabio Grassi argues that the Ottoman policy was quite successful with respect to the conditions at hand. He states that the Ottomans saw Circassians as fellow Muslims who were in hard times, but they could not do anything to help them.[25][page needed] Rosser-Owen portrays the Ottomans as having been constrained by pragmatic concerns and at a loss for what to do about the flood of refugees, and he notes the hardships suffered by British consular staff as they tried to help the Circassian refugees as well as the improvement of Ottoman policy toward accommodating the refugees over time so that by 1867, when the final Abkhaz refugees were transported, there were many fewer deaths in the process.[206]&lt;/p&gt;
    &lt;p&gt;Others, however, disagree; historian Walter Richmond accuses the Ottoman government of "playing a double game", "gross irresponsibility" and being "either unconcerned with or oblivious to the consequences immigration would have for the refugees, by having at various points encouraged Circassian population movement", in its previous statements, having earlier encouraged immigration, urging the Circassians to "stay and fight" in late 1863 and promising the arrival of an international coalition force, and then encouraging another wave of immigration as late as June 1864 when the human costs were beyond clear,[207] while Shenfield also describes the Ottoman response to the crisis as "grossly inadequate"[208] and Marc Pinson accuses the Ottoman government of not trying to formulate a coherent policy toward the refugees.[209]&lt;/p&gt;
    &lt;head rend="h3"&gt;United Kingdom&lt;/head&gt;
    &lt;p&gt;Richmond also argues that the British, despite serious discussion of the possibility of military intervention to alleviate the situation in Circassia, were ultimately concerned only with their own geopolitical interests and "deserting" Circassia to its fate.[72] He further argues that Western European indignation at the unfolding situation in Circassia arose only after Russia leveraged the Ottomans to gain special rights in the Dardanelles thus threatening their trade interests.[210]&lt;/p&gt;
    &lt;p&gt;William Palgrave, a British diplomat who witnessed the events of the genocide, stated regarding the victims that "their only crime was not being Russian".[25][page needed]&lt;/p&gt;
    &lt;head rend="h4"&gt;Scotland&lt;/head&gt;
    &lt;p&gt;Rosser-Owen emphasizes that the philanthropic efforts of British organizations and that the concern for the well-being of Circassians was most intense in Scotland where Circassian struggles were compared to past traumas in then-recent Scottish history.[211]&lt;/p&gt;
    &lt;head rend="h2"&gt;Advocacy and relief efforts&lt;/head&gt;
    &lt;p&gt;In 1862, the Circassians sent a delegation of leaders to major cities in Britain, which had been covertly helping the Circassians with tactics and with organizing their resistance, visiting major English and Scottish cities including London, Manchester, Edinburgh and Dundee to advocate for their cause.[212] The visits caused a swelling of public support for the Circassians and outrage directed at Russia, with sympathies particularly intense in Scotland perhaps owing to the recent Highland Clearances,[213] and sparked lobbying for intervention by the Dundee Foreign Affairs Committee, calls to arms for the defense of Circassia, the founding of the Circassian Aid Committee in London, and constant reporting on the issue by various newspapers such as The Scotsman.[212]&lt;/p&gt;
    &lt;p&gt;Politicians and newspapers began taking up the "Circassian cause", and calling for intervention to save Circassia from decimation, and at one point Parliament came close to going to war with Russia and attempting to establish a protectorate over struggling Circassia.[210] Although such initiatives failed to change British government policy, the Circassian Aid Committee, organized by many individuals who were angry at inaction by London, managed to gather £2,067 for the provision of mattresses, blankets, pillows, woolens and clothing especially for Circassian orphans in Istanbul, while Russophobic commentary by some of its members has been attributed for its closing in March 1865.[214] British consuls became involved with relief patterns and the organization of resettlement for Circassians, with various British consuls and consular staff catching illnesses from plague-ridden Circassian refugees, and a few died from such illnesses.[215]&lt;/p&gt;
    &lt;p&gt;In the initial stages of the process, relief efforts were also made by the Ottoman population, both by Muslims and Christians. In Vidin, in Bulgaria, the Muslim and Christian inhabitants volunteered to increase their grain production and send it to the local Circassian refugees, while in Cyprus, the Muslim population sheltered Circassian orphans. The Ottoman government built mosques for them and provided them with teachers, while the Sultan donated £50,000 from his Privy Purse, although there were some reports in the British press that most of this money did not actually end up helping Circassian refugees, having been embezzled by Ottoman officials at various steps along the way.[216] As the burden of the refugees increased however, sentiments against the refugees, particularly among the Bulgarian and Turkish populations, grew and tensions began to develop between the Bulgarian and Turkish natives and the Circassian refugees.[217]&lt;/p&gt;
    &lt;head rend="h2"&gt;Resettlement&lt;/head&gt;
    &lt;p&gt;The Ottoman authorities often failed to offer any support to the newly arrived. They were settled in the inhospitable mountainous regions of Inner Anatolia and were given menial and exhausting jobs.[218] The Russian plans did not include such zealous resettlement to Turkey, according to the decree of Alexander 2 of May 10, 1862, the Circassians were planned to settle in the Kuban, while allocating a land plot of 6 tithes. Large Circassian landowners, fearing that they might lose their income, provoked all Circassian tribes to move to Turkey.[219][page needed]&lt;/p&gt;
    &lt;p&gt;Imam Shamil's son Muhamed Shafi was appalled by the conditions the migrants had faced upon their arrival to Anatolia and went to investigate the situation:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;"I will write to (Turkish sultan) Abdülmecid that he should stop fooling mountaineers ... The government's cynicism could not be more pronounced. The Turks triggered the resettlement by their proclamations, probably hoping to use refugees for military ends ... but after facing the avalanche of refugees, they turned turtle and shamefully condemned to slow death those people who were ready to die for Turkey's glory".[220]&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;In 1864 alone, about 220,000 people disembarked in Anatolia. Between 6 March and 21 May 1864, the entire Ubykh nation had departed the Caucasus for Turkey, leading to the extinction of the Ubykh language in 1992. By the end of the movement, more than 400,000 Circassians, as well as 200,000 Abkhazians and Ajars, fled to Turkey. The term Çerkes, "Circassians", became the blanket term for them in Turkey because the majority were Circassians (Adyghe). Some other Circassian refugees fled to the border areas of the Danube Vilayet where Ottomans had expanded their military forces to defend the new province and some Circassians enrolled in military service while others settled in the region.[221]&lt;/p&gt;
    &lt;p&gt;The Ottoman authorities often opted to settle Circassians in Christian-majority regions that were beginning to clamor for independence, as a loyal counterweight population to the rebellious natives. These places had just recently taken on large numbers of around a hundred thousand Crimean Tatar refugees, in a previous resettlement operation that had also seen widespread complications and problems.[222] In Varna, it was reported that the situation was particularly bad, with 80,000 Circassians settled on the outskirts of the city in "camps of death" where they were unprotected from weather or disease and left without food. When Circassians tried to beg for bread, Turkish soldiers chased them out for fear of the diseases they carried. It was reported that the Turks were unable to keep up with burying Circassian corpses, and recruited convicts to do the work as well; one Circassian wrote to the Governor-General "We rather go to Siberia than live in this Siberia ... one can die, not live, on the indicated place".[223]&lt;/p&gt;
    &lt;head rend="h3"&gt;Areas settled by Circassian exiles&lt;/head&gt;
    &lt;head rend="h4"&gt;Balkans&lt;/head&gt;
    &lt;p&gt;In 1861–1862 alone, in the Danube Vilayet, there were 41,000 Circassian refugee families.[224] By the end of the process, there were around 250,000 Circassians in the Balkans, accounting for 5 to 7 percent of the total Balkan population, on top of the earlier arrival of 100,000 Crimean Tatars that Balkan populations had just recently had to absorb.[225][226]&lt;/p&gt;
    &lt;p&gt;Kadir Natho notes that "a net of Circassian settlements enveloped practically all the European part of the Ottoman Empire". Very large numbers of Circassians were settled in Bulgaria. Istoria Bulgarii reports that "about 6,000 families were transferred through Burgas and settled in Thrace; 13,000 families – through Varna and Shumen – to Silistra and Vidin; 12,000 families to Sofia and Nish. The remainder 10,000 families were distributed in Svishtovsk, Nikipolsk, Oriskhovsk, and other outskirts." There was a chain of Circassian settlements stretching from Dobruja (see Circassians in Romania) to the Serbian border, with an additional cluster of 23 settlements in the Kosovo field. Circassians also settled in a few mostly Greek areas, particularly in the southern part of Epirus, Cyprus and one colony at Panderma in the Sea of Marmara.[224]&lt;/p&gt;
    &lt;p&gt;Russians raped Circassian girls during the 1877 Russo-Turkish war from the Circassian refugees who were settled in the Ottoman Balkans.[227] Circassian girls were sold into Turkish harems by their relatives.[228][229] Circassians in the Ottoman army also raped and murdered Bulgarians during the 1877 Russo-Turkish war.[230][231][232][233][234][235][236]&lt;/p&gt;
    &lt;head rend="h4"&gt;Anatolia and Iraq&lt;/head&gt;
    &lt;p&gt;Kadir Natho lists the following areas as having notable concentrations of Circassian refugee settlements: "in spacious Anatolia ... near Amasya, Samsun, Cilicia, Mesopotamia, on the Charshamba peninsula, along the Aegean Sea, in Turkish Armenia, Adapazar, Duzge, Eskisehir, and Balikesir. From Trebizond the mountaineers were directly sent to Kars and Erzincan ... many exiles were distributed in ... the vilayet of Sivas, on the extensive desert between Tokat and Sivas".[224]&lt;/p&gt;
    &lt;head rend="h4"&gt;Levant&lt;/head&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;p&gt;This section is empty. You can help by adding to it. (April 2023)&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;head rend="h2"&gt;Proposed return&lt;/head&gt;
    &lt;p&gt;Many Circassian households petitioned the Russian embassy in Constantinople (modern-day Istanbul) for their resettlement back in the Caucasus.[237] By the end of the century, the Russian consulates all over the Ottoman Empire were deluged with such petitions. Later, re-emigration was sanctioned only on a limited scale, as mostly large villages (up to 8,500 inhabitants) applied for re-emigration and their relocation posed formidable difficulties to the imperial authorities. Perhaps more importantly, Alexander II suspected that the British and Ottoman governments had instructed Circassians to seek return with the purpose of sparking a new war against their Russian overlords.[238] As a consequence, he was known to personally decline such petitions.&lt;/p&gt;
    &lt;head rend="h2"&gt;Consequences&lt;/head&gt;
    &lt;p&gt;The overall resettlement was accompanied by hardships for the common people. A significant number died of starvation – many Turks of Adyghe descent still do not eat fish today, in memory of the tremendous number of their kinfolk that they lost during the passage across the Black Sea.[citation needed]&lt;/p&gt;
    &lt;p&gt;Some of the deportees and their descendants did well and they would eventually earn high positions within the Ottoman Empire. A significant number of Young Turks had Caucasian origins.[citation needed]&lt;/p&gt;
    &lt;p&gt;All nationals of Turkey are considered Turkish for official purposes. However, there are several hundred villages which are considered purely "Circassian", whose total "Circassian" population is estimated to be 1,000,000, although there is no official data in this respect, and the estimates are based on informal surveys.[citation needed] The "Circassians" in question may not always speak the languages of their ancestors, and Turkey's center-right parties, often with varying tones of Turkish nationalism, generally do well in localities where they are known to constitute sizable parts of the population (such as in Akyazı).[citation needed]&lt;/p&gt;
    &lt;p&gt;In Middle Eastern countries, which were created from the dismembered Ottoman Empire (and were initially under an Allied protectorate), the fate of the ethnos was better. The Al Jeish al Arabi (Arab Legion), created in Trans-Jordan under the influence of Lawrence of Arabia, in significant part consisted of Chechens – arguably because the Bedouin were reluctant to serve under the centralized command. In addition, the modern city of Amman was born after Circassians settled there in 1887.[citation needed]&lt;/p&gt;
    &lt;p&gt;Apart from substantial numbers of Kabardian Circassians consisting of qalang tribes, small communities of mountainous Circassians (nang tribes) remained in their original homeland under Russian rule that were separated from among one another within an area heavily resettled by Russian Cossacks, Slavs and other settlers.[168] For example, the capital of the Shapsugh tribe was renamed after the Russian general that committed atrocities in the region along with the erection of a victory statue to him.[168] In the Caucasus, some 217,000 Circassians remained in 1897.[168]&lt;/p&gt;
    &lt;head rend="h3"&gt;Ethnic tensions in the Ottoman Empire&lt;/head&gt;
    &lt;p&gt;Misha Glenny notes that the settlement of the Circassian deportees played a major role in destabilizing the Ottoman Balkans, especially Bulgaria. Their arrival helped spread starvation and epidemics (including smallpox) in the Balkan territories, and worse, the Porte ordered that Christians be evicted en masse from their homes in certain areas in order to accommodate the need to house the deportees. This, and the outbreak of armed conflict between the Circassians and the Christian and Muslim natives, accelerated the growth of nationalist sentiments in the Balkans.[239] Kadir Natho argues that the Ottomans coopted the Circassians into a "police force" in the Balkans as well as for settling them to increase the local Muslim population, with Circassians being made to take arms against rebellions, even those Circassians that had not settled in affected regions.[224] The local Balkan peoples, having just taken on large numbers of Crimean Tatar refugees, an operation which had caused the deaths of thousands of refugees and natives alike due to disease and starvation, were sometimes loath to take in more Muslim refugees expelled by the Russians,[222] and some Bulgarians, in particular, were convinced that Circassians had been placed into scattered Bulgarian villages "in order to paralyze any kind of liberation and independence Slavic movement".[224] While, in many areas, Bulgarian Christians had initially been very hospitable to the Circassian refugees, including by producing extra resources to support them, the collapsing humanitarian situation combined with the political instability caused relations between the two groups to spiral downward.&lt;/p&gt;
    &lt;p&gt;In many cases, lands were assigned to North Caucasian refugees by the Ottoman government, but the locals refused to give up their homes, causing outbreaks of fighting between Circassians and Chechens on one side, and the Bulgarian, Serbian, Arab, Bedouin, Druze, Armenian, Turkish and Kurdish natives on the other, leading to armed conflict. In Uzun Aile, between Kayseri and Sivas, Circassians ultimately pushed the local Kurdish population out, and to this day the Kurds with roots in that region recall in a folk song how a "cruel fair-haired and blue-eyed people with sheep-skin hats" drove them from their homes.[240]&lt;/p&gt;
    &lt;p&gt;Traumatized, desperate, and having lived for many decades previously in a situation where Circassians and Russians would regularly raid each other, Circassians sometimes resorted to raiding the native populations, ultimately causing a reputation for the Circassians as being particularly barbaric to spread throughout the Empire.[241]&lt;/p&gt;
    &lt;p&gt;Eventually, fear of the Circassians, due to the diseases they spread and the stereotype of them as either beggars or bandits, became so great that Christian and Muslim communities alike would protest upon hearing that Circassians were to be settled near them.[225]&lt;/p&gt;
    &lt;p&gt;Later, in the 1870s, war again struck in the Balkans where most Circassians had made their homes, and they were deported by Russian and Russian-allied forces a second time.[242]&lt;/p&gt;
    &lt;head rend="h2"&gt;Numbers of refugees&lt;/head&gt;
    &lt;p&gt;Alan Fisher notes that accurate counts of the refugees were difficult to impossible to obtain because "Most of those leaving the Caucasus did it in a hurry, in a disorganised fashion, without passing any official border point where they might have been counted or officially noted",[243] however estimates have been made primarily based on the available documents[244] including Russian archival documents[245] as well as Ottoman documents.[7]&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;1852–1858: Abkhaz population declined from 98,000 to 89,866[246]&lt;/item&gt;
      &lt;item&gt;1858–1860: Over 30,000 Nogais left[246]&lt;/item&gt;
      &lt;item&gt;1860–1861: 10,000 Kabardians left[247]&lt;/item&gt;
      &lt;item&gt;1861–1863: 4,300 Abaza, 4,000 Natukhais, 2,000 Temirgoi, 600 Beslenei, and 300 Bzhedugs families were exiled[247]&lt;/item&gt;
      &lt;item&gt;by 1864: 600,000 Circassians have left for the Ottoman Empire, with more leaving afterwards[248]&lt;/item&gt;
      &lt;item&gt;1865: 5,000 Chechen families were sent to Turkey[247]&lt;/item&gt;
      &lt;item&gt;1863–1864: 470,703 people left the West Caucasus (according to G. A. Dzidzariia)[249]&lt;/item&gt;
      &lt;item&gt;1863–1864: 312,000 people left the West Caucasus (according to N. G. Volkova)[249]&lt;/item&gt;
      &lt;item&gt;Between November 1863 and August 1864: over 300,000 Circassians seek refuge in the Ottoman Empire; over two thirds die.[250][251]&lt;/item&gt;
      &lt;item&gt;1858–1864: 398,000 people left the Kuban oblast (according to N. G. Volkova)[249]&lt;/item&gt;
      &lt;item&gt;1858–1864: 493,194 people left (according to Adol'f Berzhe)[249]&lt;/item&gt;
      &lt;item&gt;1863–1864: 400,000 people left (according to N. I. Voronov)[249]&lt;/item&gt;
      &lt;item&gt;1861–1864: 418,000 people left (according to the Main Staff of the Caucasus Army)[249]&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;German historian Karl Friedrich Neumann estimated that out of the 1.5 million Circassian exiles who tried to flee to Anatolia from the extermination campaigns of the Russian imperial army, more than 500,000 people died during death marches. Another half a million deaths occurred due to severe diseases that broke out in Circassian refugee camps along the Anatolian coasts.[252]&lt;/p&gt;
    &lt;head rend="h2"&gt;Genocide classification&lt;/head&gt;
    &lt;p&gt;In recent times, scholars and Circassian activists have proposed that the deportations and mass killings can certainly be considered as a manifestation of the modern-day concept of genocide, though the term had not been in use in the 19th century. Noting the systematic massacre of villages by Russian soldiers[253] that was accompanied by the Russian colonization of these lands, Circassian activists claim it is "certainly and undeniably" a genocide.[254] Scholars estimate that some 90 percent of Circassians (estimated at more than one million)[255] had vanished from the territories occupied by Russia. During these events, at least hundreds of thousands of people were "killed or starved to death".[256]&lt;/p&gt;
    &lt;p&gt;Anssi Kulberg has asserted that the Russian Empire played a central role in formulating "the strategy of modern ethnic cleansing and genocide" during its systematic extermination campaigns against Crimean Tatars and Circassians.[257]&lt;/p&gt;
    &lt;head rend="h3"&gt;Political positions&lt;/head&gt;
    &lt;head rend="h4"&gt;Russia&lt;/head&gt;
    &lt;p&gt;In Russia, a presidential commission had been set up in 2009 to try and deny the Circassian genocide, with respect to the events of the 1860s.[258] There is concern by the Russian government that acknowledging the events as genocide would entail possible claims of financial compensation in addition to efforts toward repatriating diaspora Circassians back to Circassia.[259]&lt;/p&gt;
    &lt;head rend="h5"&gt;Boris Yeltsin&lt;/head&gt;
    &lt;p&gt;Former Russian President Boris Yeltsin's May 1994 statement stated that Circassian resistance to the Tsarist forces was legitimate, and that there were sad casualties, but he did not recognize "the guilt of the tsarist government for the genocide".[260]&lt;/p&gt;
    &lt;head rend="h4"&gt;Circassian Organizations&lt;/head&gt;
    &lt;p&gt;In 1997 and 1998, the leaders of Kabardino-Balkaria and Adygea sent appeals to the Duma to reconsider the situation and to issue an apology; to date, there has been no response from Moscow. In October 2006, the Adygeyan public organizations of Russia, Turkey, Israel, Jordan, Syria, the United States, Belgium, Canada, and Germany have sent the president of the European Parliament a letter with the request to recognize the genocide against Adygean (Circassian) people.[261]&lt;/p&gt;
    &lt;p&gt;On 5 July 2005, the Circassian Congress, an organization that unites representatives of the various Circassian peoples in the Russian Federation, has called on Moscow first to acknowledge and then to apologize for tsarist policies that Circassians say constituted a genocide.[259] Their appeal pointed out that "according to the official tsarist documents more than 400,000 Circassians were killed, 497,000 were forced to flee abroad to Turkey, and only 80,000 were left alive in their native area."[260] The Russian parliament (Duma) rejected the petition in 2006 in a statement that acknowledged past actions of the Soviet and previous regimes while referring to in overcoming multiple contemporary problems and issues in the Caucasus through cooperation.[259]&lt;/p&gt;
    &lt;head rend="h4"&gt;Georgia&lt;/head&gt;
    &lt;p&gt;On 21 May 2011, the Parliament of Georgia passed a resolution stating that pre-planned mass killings of Circassians by Imperial Russia, accompanied by "deliberate famine and epidemics", should be recognized as "genocide", and that those deported during those events from their homeland should be recognized as "refugees". Georgia has made outreach efforts to North Caucasian ethnic groups since the 2008 Russo-Georgian War.[39] Following a consultation with academics, human rights activists and Circassian diaspora groups and parliamentary discussions in Tbilisi in 2010 and 2011, Georgia became the first country to use the word "genocide" to refer to the events.[39][262][263][264] On 20 May 2011 the parliament of the Republic of Georgia declared in its resolution[265] that the mass annihilation of the Cherkess (Adyghe) people during the Russian-Caucasian war and thereafter constituted genocide as defined in the Hague Convention of 1907 and the UN Convention of 1948. The next year, on the same day of 21 May, a monument was erected in Anaklia, Georgia, to commemorate the suffering of the Circassians.[266]&lt;/p&gt;
    &lt;head rend="h4"&gt;Ukraine&lt;/head&gt;
    &lt;p&gt;On 9 January 2025 the Verkhovna Rada of Ukraine voted in favor of a resolution that recognizes "mass extermination of the Circassians and their forced expulsion from their historical homeland" as a genocide, expresses solidarity with Circassians, honor the memory of the victims and condemns the actions of Russia.[267]&lt;/p&gt;
    &lt;head rend="h4"&gt;Turkey&lt;/head&gt;
    &lt;p&gt;Circassians in Turkey have made multiple attempts to get Turkey to recognize the genocide.[268] There are multiple monuments in Turkey erected to commemorate the Circassian genocide.[269] Turkish politicians have referenced the events multiple times. Every year on 21 May, Turkish politicians and major political parties post Tweets commemorating the events, while referring to it as an "exile", including Recep Tayyip Erdoğan.[270] Some political parties such as the Pluralist Democracy Party (ÇDP), Labour Party (EMEP) and Peoples' Democratic Party (HDP) have called on Turkey to recognize the genocide.[271]&lt;/p&gt;
    &lt;head rend="h4"&gt;Appeals to world governments by Circassians&lt;/head&gt;
    &lt;p&gt;On 1 December 2015, in the Great Union Day (the national day of Romania), a large number of Circassian representatives sent a request to the Romanian government asking it to recognize the Circassian genocide. The letter was specifically sent to the President (Klaus Iohannis), the Prime Minister (Dacian Cioloș), the President of the Senate (Călin Popescu-Tăriceanu) and the President of the Chamber of Deputies (Valeriu Zgonea). The document included 239 signatures and was written in Arabic, English, Romanian and Turkish. Similar requests had already been sent earlier by Circassian representatives to Estonia, Lithuania, Moldova, Poland and Ukraine.[272][273] In the case of Moldova, the request was sent on 27 August of the same year (2015), on the Moldovan Independence Day, to the President (Nicolae Timofti), the Prime Minister (Valeriu Streleț) and the President of the Parliament (Andrian Candu). The request was also redacted in Arabic, English, Romanian and Turkish languages and included 192 signatures.[274][275]&lt;/p&gt;
    &lt;head rend="h3"&gt;Scholarly viewpoints&lt;/head&gt;
    &lt;p&gt;Most scholars today agree that the term "genocide" is justified to define the events, except some Russian scholars in the minority. Some scholarly views include:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Alexander Ohtov says the term genocide is justified in his Kommersant interview: &lt;p&gt;Yes, I believe that the word "genocide" is justified. To understand why we are talking about the genocide, you have to look at history. During the Russian–Caucasian war, Russian generals not only expelled the Circassians, but also destroyed them physically. Not only killed them in combat but burned hundreds of villages with civilians. Spared neither children nor women nor the elderly. They killed and tortured them with no separation. The entire fields of ripe crops were burned, the orchards cut down, people burnt alive, so that the Circassians could not return to their habitations. A destruction of civilian population on a massive scale ... is it not a genocide?[276]&lt;/p&gt;&lt;/item&gt;
      &lt;item&gt;Scholar Anssi Kullberg states that the "Russian suppression of the Caucasus" directed at the Crimean Tatars and Circassians, resulted in the Russian state "inventing the strategy of modern ethnic cleansing and genocide".[277]&lt;/item&gt;
      &lt;item&gt;Paul Henze credits the events of the 1860s in Circassia with inspiring the Armenian genocide at the hands of the Ottoman Empire.[278]&lt;/item&gt;
      &lt;item&gt;Walter Richmond also argues the term "genocide" is appropriate, considering the events of 1864 to have been "one of the first examples of modern social engineering". Citing international law which holds that "genocidal intent applies to acts of destruction that are not the specific goal but are predictable outcomes or by-products of a policy, which could have been avoided by a change in that policy", he considers the events to have been genocide on the grounds that the ensuing demographic transformation of Circassia to a predominantly ethnically Russian region was viewed as desirable by the Russian authorities,[279] and that the Russian commanders were fully aware of the huge number of deaths by starvation that their methods in the war and the expulsion would bring, as they viewed them as necessary for their supreme goal that Circassia be firmly and permanently Russian territory, all the while viewing Circassia's native inhabitants as "little more than a pestilence to be removed".[280]&lt;/item&gt;
      &lt;item&gt;Michael Ellman, meanwhile, in a book review of Richmond's Circassian Genocide, agrees that the term's use is justified under the UN definition as referring to actions intending to destroy "in whole or in part an ethnic group", with the part referring to those Circassians whom St. Petersberg thought could not accept its rule.[281]&lt;/item&gt;
      &lt;item&gt;According to the Italian historian Fabio Grassi, the word "exile" would unquestionably underestimate the scale of the events, and the word "massacre" can be used to describe it.[282]&lt;/item&gt;
      &lt;item&gt;French historian Robert Mantran used the term "Circassian Exile and Genocide" to describe the events in volume 3 of his book Ottoman History.[283]&lt;/item&gt;
      &lt;item&gt;Turkish historian Server Tanilli used the term "Great Circassian Exile, Genocide, and Massacre" for the events in his work The Reality and Heritage of Centuries.[284]&lt;/item&gt;
      &lt;item&gt;The events were described as "an exile to certain death" by the Turkish historian İlber Ortaylı.[285] In May 2021, Ortaylı attended a KAFFED conference dedicated to the Circassian genocide, where he advised the Circassians to "keep their heads up and make their voice heard".[286]&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Modern movement for the rights and freedoms of Circassians&lt;/head&gt;
    &lt;p&gt;In 2014, the Circassian movement culminated in the Circassian protests against the Sochi Olympics. In response to the actualization of the "Circassian issue"[287] Russia followed the usual path: suppression of Circassian protests, discrediting the Circassian movement by linking it to external factors – the interests of countries such as Georgia, the United States and Israel.[288][289]&lt;/p&gt;
    &lt;p&gt;In 2017, the Circassian national movement is experiencing a national upsurge, the readiness of Circassians to defend their own identity has increased. The large-scale events that took place on May 21, 2017, simultaneously in several regions of Russia are unconditional proof of this. Tens of thousands of Circassians in Adygea, Kabardino-Balkaria and Karachay-Cherkessia took part in mourning events dedicated to the anniversary of the end of the Russian-Caucasian War. The multi-million diaspora of Circassians abroad was not left aside, for example, there was a mass procession with national banners of Circassia through the central streets of Turkish cities. For the first time in the history of post-war Circassia, which today exists only in the historical memory of Circassians, commemorative events dedicated to the victims of the Russian-Caucasian war were held in schools, higher educational institutions, and in cities with a compact population of Circassians.[290]&lt;/p&gt;
    &lt;p&gt;As a result of the Tsarist exile (1864), 90% of the Circassian people are diaspora (about 6 million people, including 1.5 million citizens of Turkey). However, this does not prevent Circassian activists from advocating for the revival and development of their native language and the creation of a separate Circassian national republic in the North Caucasus. Russian officials have already expressed concern that the influx of Circassians from abroad will change the ethnic balance in the republic, strengthen the common Circassian identity, and encourage calls to restore statehood and independence.[291]&lt;/p&gt;
    &lt;p&gt;In March 2019, Circassian activists formed the Coordinating Council of the Circassian Community. The activists seek international recognition of the 1860s genocide and defend their language and the ability to receive education in it. In 2021, Circassian demonstrations were held in several cities despite government repression. The largest rally was held in Nalchik, attended by about 2,000 people. In September 2021, two new independent Circassian organizations were established – the Circassian (Adygean) Historical and Geographical Society and the United Circassian Media Space. Their plans include the study and defense of Circassian history, the return of Circassian topographic names, and the preservation and multiplication of the Circassian language and identity. Circassian activists are focusing on the 2021 census by launching a petition calling on large communities to declare themselves Circassians (indigenous Adygs). Such an initiative encourages rediscovery of Circassian history and the revitalization of Circassian identity, which was divided and distorted by the Tsarist, Soviet, and Russian regimes. On October 3, 2021, leaders of eight Circassian organizations appealed to their brethren across the North Caucasus to use their own self-designation in the census, rather than the alien one imposed on them by Moscow.[292]&lt;/p&gt;
    &lt;head rend="h3"&gt;Contemporary Struggle for Circassian Language and Culture&lt;/head&gt;
    &lt;p&gt;In June 2018, a law promoting Russification was passed: the study of all non-Russian languages in schools became voluntary, while the study of Russian remained compulsory. Circassians (Adygs) consider the de facto abolition of indigenous languages as a continuation of the Russian extermination and expulsion of the Circassian population from the North Caucasus, which began in 1864 with deportation and genocide.[293]&lt;/p&gt;
    &lt;p&gt;Aslan Beshto, chairman of the Kabarda Congress, believes that the main task for Circassians today is to preserve their native language, which is the key to their ethnic identity.[294]&lt;/p&gt;
    &lt;p&gt;Circassian activists say that Circassian culture is still practically not presented to the public, in particular, there are very few books in the Circassian language.[295]&lt;/p&gt;
    &lt;p&gt;Asker Sokht, chairman of the public organization Adyge Khase in Krasnodar Krai, also believes that "the main tasks facing Circassians as an ethnic group are the preservation of their language and culture". In 2014, he was detained and sentenced to eight days of arrest. Soht's detention was related to his criticism of the Sochi Olympics, as well as his active public activities.[296]&lt;/p&gt;
    &lt;p&gt;Since the beginning of 2022, the authorities have been working systematically and systematically to cancel Circassian (Adyghe) commemorative and festive events. Under far-fetched pretexts, they banned the celebration of the Circassian flag day, and later banned the procession that had become traditional in honor of the mourning day of May 21.[297]&lt;/p&gt;
    &lt;head rend="h3"&gt;Persecution of Circassian activists&lt;/head&gt;
    &lt;p&gt;In May 2014, on the eve of the tragic date (May 21), Beslan Teuvazhev, one of the organizers of a campaign to make commemorative ribbons for the 150th anniversary of the Russian-Caucasian War, was detained by Moscow police officers. More than 70 thousand ribbons were seized from him. Later Teuvazhev was released, but the ribbons were not returned, having found signs of extremism in the inscriptions printed on them. Circassian activists call such an act "a continuation of the policy of oppression of national minorities" of the times of the empire.[298]&lt;/p&gt;
    &lt;p&gt;In November 2014, the representative of the movement "Patriots of Circassia" Adnan Huade and the coordinator of the public movement "Circassian Union" Ruslan Kesh were among the signatories of the appeal of activists of Circassian public organizations to the leadership of Poland with a request to recognize the genocide of Circassians in the XIX century. In 2015, the activists were subjected to searches and detentions by law enforcement officials.[299][300]&lt;/p&gt;
    &lt;p&gt;In spring 2017, a court in the Lazarevsky district of Krasnodar Krai sentenced seventy-year-old Circassian activist Ruslan Gvashev for his participation in the May 21, 2017 mourning events dedicated to the memory of the victims of the Russian-Caucasian War. Ruslan Gvashev is a well-known Circassian activist in the region, head of the Shapsug Khase, chairman of the Congress of Adyg-Shapsugs of the Black Sea region, vice-president of the Confederation of Peoples of the Caucasus and the International Circassian Association. Nevertheless, the court found the defendant guilty of organizing an unauthorized rally and imposed a fine of 10,000 rubles on Ruslan Gvashev. Due to the disability of the accused (Ruslan Gvashev has one leg amputated), the court released him directly from the courtroom. The Circassian activist, who does not agree with the offensive, in his opinion, charge, sought help from the Kabardino-Balkarian Human Rights Center in order to obtain a review of his case and recognition of the Circassians' right to hold memorial events.[301][302][303]&lt;/p&gt;
    &lt;p&gt;Numerous facts of harassment of activists, commissioned trials against the most prominent figures of the Circassian national movement make it necessary to seek a fair solution in international courts.&lt;/p&gt;
    &lt;p&gt;Thus, the European Court of Human Rights accepted the complaints of Circassian activists accused of extremism by the Russian Themis. The year-long attempt of civil activists from the organization "Circassian Congress" to shed the label of "extremism" ended with an appeal to the European Court. Before seeking justice outside Russia, the activists spent 4 years trying to get justice in Russian courts. All this time, as the activists themselves say, they and their families were under pressure – they received threats from FSB and Interior Ministry officers. The case of civil activists from the Circassian Congress is far from being an isolated one.[304]&lt;/p&gt;
    &lt;p&gt;The reprisals by the Russian authorities against national minorities and activists of Circassian public organizations defending the rights of these minorities in the North Caucasus have taken on an unprecedented scale.[305]&lt;/p&gt;
    &lt;p&gt;The danger of the Circassian national movement for Russia lies in its great potential: Circassians are the titular ethnic group in three regions of the North Caucasus – Kabardino-Balkaria, Karachay-Cherkessia and Adygea. Another circumstance makes the "Circassian issue" particularly alarming for Russia. This is the presence of a multi-million diaspora in the Middle East, which is returning to the North Caucasus due to the horrific war in Syria. According to human rights activists, the increasing cases of persecution of Circassian activists are directly related to the growth of the Circassian movement in virtually all republics of the Russian North Caucasus. This is the largest ethnic group in the region, supported by a multi-million diaspora in the Middle East, including Syria.[306]&lt;/p&gt;
    &lt;head rend="h2"&gt;Commemoration&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt; A monument dedicated to the Circassian genocide, Republic of Adygea&lt;/item&gt;
      &lt;item&gt; Circassian Day of Mourning. Annual remembrance marches of the Circassian genocide by Circassian diaspora, Turkey&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;See also&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Circassians&lt;/item&gt;
      &lt;item&gt;Circassian Slave Trade&lt;/item&gt;
      &lt;item&gt;Persecution of Muslims&lt;/item&gt;
      &lt;item&gt;Circassian diaspora&lt;/item&gt;
      &lt;item&gt;Circassian nationalism&lt;/item&gt;
      &lt;item&gt;Circassian Day of Mourning&lt;/item&gt;
      &lt;item&gt;Chechen genocide&lt;/item&gt;
      &lt;item&gt;List of genocides by death toll&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Notes&lt;/head&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;^ Ubykh: tsʼətsʼakʷʼən, цӀыцӀэкӀун.[10]&lt;/item&gt;
      &lt;item&gt;^ This word is used by the Circassians to refer to the events and originates from Ubykh. When asked the full meaning, Tevfik Esenç, the last speaker of Ubykh, stated that it means "a massacre so evil that only Satan could think of it". The word comes from "tsʼətsʼa" (people) and "kʷʼə-" (to kill). According to a theory it comes from the surname of Pavel Tsitsianov, one of the first Russian generals in the Russo-Circassian War who used methods of massacre. However this theory seems like a folk etymology.&lt;/item&gt;
      &lt;item&gt;^ "between 95 percent and 97 percent of all Circassians were killed outright, died during Evdokimov's campaign, or were deported"[11]&lt;/item&gt;
      &lt;item&gt;^ Ninety-five to 97 percent of the entire Circassian population had been killed or deported in what contemporary Russian field reports referred to as an ochishchenie ("cleansing")"[12]&lt;/item&gt;
      &lt;item&gt;^ "In the 1860s Russia killed 1.5 million Circassians, half of their population, and expelled the other half from their lands." Ahmed 2013, p. 357&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;References&lt;/head&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;^ Richmond 2013, pp. 8, 79–83, 91–92.&lt;/item&gt;
      &lt;item&gt;^ a b c d e Levene, Mark (2005). "6: Declining Powers". Genocide in the Age of the Nation-State Volume II: The Rise of the West and the Coming of Genocide. 175 Fifth Avenue, New York NY 10010. p. 300. ISBN 1-84511-057-9.&lt;/item&gt;
      &lt;item&gt;^ Shenfield 1999, pp. 153–154.&lt;/item&gt;
      &lt;item&gt;^ "Circassian Genocide on its 159th Anniversary". Human Rights Association. 21 May 2023. Archived from the original on 22 August 2023.&lt;/item&gt;
      &lt;item&gt;^ Levene, Mark (2005). "6: Declining Powers". Genocide in the Age of the Nation-State. Vol. II: The Rise of the West and the Coming of Genocide. 175 Fifth Avenue, New York NY 10010. p. 301. ISBN 1-84511-057-9. &lt;quote&gt;anything between 1 and 1.5 million Circassians perished either directly, or indirectly, as a result of the Russian military campaign&lt;/quote&gt;&lt;/item&gt;
      &lt;item&gt;^ a b Neumann, Karl Friedrich (1840). Russland und die Tscherkessen [Russia and the Circassians] (in German).&lt;/item&gt;
      &lt;item&gt;^ a b c Karpat 1985, p. 69.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, pp. 1–2; Shenfield 1999, p. 154; King 2008, p. [page needed]; Jones 2016, p. 109&lt;/item&gt;
      &lt;item&gt;^ &lt;list rend="ul"&gt;&lt;item&gt;"UNPO: The Circassian Genocide". Unrepresented Nations and Peoples Organization. 2 November 2009. Retrieved 26 September 2020.&lt;/item&gt;&lt;item&gt;Javakhishvili, Niko (20 December 2012). "Coverage of The tragedy public Thought (later half of the 19th century)". justicefornorthcaucasus.info. Tbilisi State University. Retrieved 1 June 2015.&lt;/item&gt;&lt;item&gt;"Postanovleniye Verkhovnogo Soveta K-BSSR ob osuzhdenii genotsida cherkesov ot 7 fevralya 1992 g. N° 977-XII-B" Постановление Верховного Совета К-БССР об осуждении геноцида черкесов от 7 февраля 1992 г. N° 977-XII-B [Decree of the Supreme Council of the K-BSSR on the condemnation of the genocide of the Circassians of February 7, 1992 N ° 977-XII-B]. elot.ru. Archived from the original on 15 July 2012. Retrieved 13 August 2012.&lt;/item&gt;&lt;item&gt;"Postanovleniye Parlamenta Kabardino-Balkarskoy Respubliki ot 12.05.1994 № 21-P-P (ob obrashchenii v Gosdumu s voprosom priznaniya genotsida cherkesov) Nedostupnaya ssylka" Постановление Парламента Кабардино-Балкарской Республики от 12.05.1994 № 21-П-П (об обращении в Госдуму с вопросом признания геноцида черкесов) Недоступная ссылка [Decree of the Parliament of the Kabardino-Balkarian Republic of May 12, 1994 No. 21-P-P (on applying to the State Duma with the issue of recognizing the genocide of the Circassians) Unavailable link]. parlament-kbr.ru (in Russian). September 2021.[permanent dead link]&lt;/item&gt;&lt;item&gt;Постановление ГС — Хасэ Республики Адыгея от 29.04.1996 № 64-1 «Об обращении к Государственной Думе Федерального Собрания Российской Федерации» [Decree of the State Council – Khase of the Republic of Adygea dated April 29, 1996 No. 64-1 "On Appeal to the State Duma of the Federal Assembly of the Russian Federation"]. pravoteka.ru (in Russian).&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;^ "Зумысыжмэ, ущхьэхуитщ!". Жьынэпс Гъазэтэ (in Kabardian). 20 May 2020. Retrieved 12 February 2022.&lt;/item&gt;
      &lt;item&gt;^ a b Richmond 2013, p. 132.&lt;/item&gt;
      &lt;item&gt;^ a b Jones 2016, p. 110.&lt;/item&gt;
      &lt;item&gt;^ a b c d Richmond 2013, back cover.&lt;/item&gt;
      &lt;item&gt;^ a b Yemelianova, Galina (April 2014). "Islam, nationalism and state in the Muslim Caucasus". Caucasus Survey. 1 (2): 3. doi:10.1080/23761199.2014.11417291.&lt;/item&gt;
      &lt;item&gt;^ Geçmişten günümüze Kafkasların trajedisi: uluslararası konferans, 21 Mayıs 2005 [The tragedy of the Caucasus from past to present: international conference, 21 May 2005] (in Turkish). Kafkas Vakfı Yayınları. 2006. ISBN 978-975-00909-0-5 – via Google Books.&lt;/item&gt;
      &lt;item&gt;^ Sources: &lt;list rend="ul"&gt;&lt;item&gt;Shenfield 1999, pp. 149–162: "The number who died in the Circassian catastrophe of the 1860s could hardly, therefore, have been fewer than one million, and may well have been closer to one-and-a-half million"&lt;/item&gt;&lt;item&gt;Richmond 2013, pp. 91–92: "[...] we can safely say between 600,000 and 750,000 actually made it to a ship to be sent to Turkey during 1864.90 If just 10 percent of the people driven to the coast died there (almost certainly an underestimate), the figure rises to between 660,000 and 825,000 people who made it to the shore. As for those who died en route from the mountains to the Black Sea coast, and keeping in mind a report that only 370 out of one party of 600 made it to the shore, a 10 percent death rate for this part of the journey is again extremely conservative. This would mean that a minimum of between 726,000 and 907,500 Circassians were sent down the mountains. If we add to that another 10 percent who died hiding and fleeing from the Russians, the figure rises to between 798,600 and 998,225. Add to that the Circassians who died as a result of battles with Russians over the last years of the war, and a potential population in 1860 of 1.25 to 1.5 million is not unreasonable. This means that, even with the most conservative mortality estimates, at least 625,000 Circassians died during Evdokimov’s operations."&lt;/item&gt;&lt;item&gt;Cataliotti, Joseph (22 October 2023). "Circassian Genocide: Overview &amp;amp; History". Study.com. Archived from the original on 20 March 2023.&lt;/item&gt;&lt;item&gt;"Circassian Genocide on its 159th Anniversary". Human Rights Association. 21 May 2023. Archived from the original on 22 August 2023.&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;^ Gazetesi, Aziz Üstel. "Soykırım mı; işte Çerkes soykırımı – Yazarlar – Aziz ÜSTEL" [Is it genocide; here is the Circassian genocide – Authors – Aziz ÜSTEL]. star.com.tr (in Turkish). Retrieved 26 September 2020.&lt;/item&gt;
      &lt;item&gt;^ a b c d Dönmez, Yılmaz (31 May 2018). "General Zass'ın Kızının Adigeler Tarafından Kaçırılışı" [Kidnapping of General Zass's Daughter by the Adygs]. ÇERKES-FED (in Turkish). Archived from the original on 14 January 2021. Retrieved 13 August 2021.&lt;/item&gt;
      &lt;item&gt;^ a b c d Capobianco, Michael (2012). Blood on the Shore: The Circassian Genocide.&lt;/item&gt;
      &lt;item&gt;^ a b c "Velyaminov, Zass ve insan kafası biriktirme hobisi" [Velyaminov, Zass and the hobby of collecting human heads]. Jıneps Gazetesi (in Turkish). 2 September 2013. Archived from the original on 13 October 2020. Retrieved 26 September 2020.&lt;/item&gt;
      &lt;item&gt;^ King 2008, p. 95.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, pp. 85–86.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, pp. 93–94, 108–109.&lt;/item&gt;
      &lt;item&gt;^ a b "Çerkesler'in Kesilen Başlarını Berlin'e Göndermişler" [They Sent the Cut Heads of Circassians to Berlin]. Haberler (in Turkish). 29 April 2015. Retrieved 4 March 2022.&lt;/item&gt;
      &lt;item&gt;^ a b c d Grassi 2018.&lt;/item&gt;
      &lt;item&gt;^ a b c d e Rosser-Owen 2007.&lt;/item&gt;
      &lt;item&gt;^ a b c Burnaby 1877, p. 352.&lt;/item&gt;
      &lt;item&gt;^ a b c Enclosed in Despatch No.3 From Sir Henry Bulwer to Earl Russell, Constantinople, April 12, 1864 (FO 881/1259)&lt;/item&gt;
      &lt;item&gt;^ Kazemzadeh, Firuz (1974). "Russian penetration of the Caucasus". In Hunczak, Taras (ed.). Russian Imperialism from Ivan the Great to the revolution. Rutgers University Press. ISBN 978-0-8135-0737-8.&lt;/item&gt;
      &lt;item&gt;^ a b King 2008, p. 96.&lt;/item&gt;
      &lt;item&gt;^ Grassi 2018; Shenfield 1999, p. 154&lt;/item&gt;
      &lt;item&gt;^ a b Richmond 2013, p. 132: "If we assume that Berzhe's middle figure of 50,000 was close to the number who survived to settle in the lowlands, then between 95 percent and 97 percent of all Circassians were killed outright, died during Evdokimov's campaign, or were deported."&lt;/item&gt;
      &lt;item&gt;^ Rosser-Owen 2007, p. 16: "with one estimate showing that the indigenous population of the entire north-western Caucasus was reduced by a massive 94 percent."&lt;/item&gt;
      &lt;item&gt;^ a b Levene, Mark (2005). "6: Declining Powers". Genocide in the Age of the Nation-State Volume II: The Rise of the West and the Coming of Genocide. 175 Fifth Avenue, New York NY 10010. pp. 300, 301. ISBN 1-84511-057-9.&lt;/item&gt;
      &lt;item&gt;^ a b "Remembering the Circassian Deportations and Massacres". TCA. Archived from the original on 4 November 2013.&lt;/item&gt;
      &lt;item&gt;^ Leitzinger, Antero (October 2000). "The Circassian Genocide". The Eurasian Politician. No. 2. Archived from the original on 12 November 2020. Retrieved 9 March 2022.&lt;/item&gt;
      &lt;item&gt;^ a b Abzakh, Edris (1996). "Circassian History". University of Pennsylvania, School of Arts and Sciences. Archived from the original on 7 July 2024. Retrieved 11 March 2007.&lt;/item&gt;
      &lt;item&gt;^ a b "The Circassian Genocide". Unrepresented Nations and People Organisation. 14 December 2004. Archived from the original on 3 November 2022. Retrieved 4 April 2007.&lt;/item&gt;
      &lt;item&gt;^ a b c d Barry, Ellen (20 May 2011). "Georgia Says Russia Committed Genocide in 19th Century". The New York Times. Archived from the original on 14 March 2017. Retrieved 11 October 2020.&lt;/item&gt;
      &lt;item&gt;^ "Верховна Рада визнала геноцид черкеського народу" [Verkhovna Rada recognizes the genocide of the Circassian nation]. Radio Liberty (in Ukrainian). 9 January 2025. Retrieved 9 January 2025.&lt;/item&gt;
      &lt;item&gt;^ McLoughlin, Paul (10 January 2025). "Ukraine parliament recognises Circassian genocide in win for MENA activists". Archived from the original on 14 January 2025. Retrieved 14 January 2025.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, pp. 1, 167–169.&lt;/item&gt;
      &lt;item&gt;^ "ABD'de Çerkes Bayramı". Ajans Kafkas (in Turkish). 7 September 2015. Archived from the original on 11 August 2019. Retrieved 18 May 2023.&lt;/item&gt;
      &lt;item&gt;^ Serbez, Yasemin (18 May 2023). "Sürgündeki Doğu Türkistan Hükümeti'nden 'Çerkes Soykırımı' kararı". Archived from the original on 18 May 2023. Retrieved 18 May 2023.&lt;/item&gt;
      &lt;item&gt;^ "ETGE Recognizes Circassian Genocide". United Circassia. Archived from the original on 18 May 2023. Retrieved 18 May 2023.&lt;/item&gt;
      &lt;item&gt;^ "Постановление Верховного Совета К-БССР об осуждении геноцида черкесов от 7 февраля 1992 г. № 977-XII-В". Archived from the original on 15 July 2012. Retrieved 13 August 2012.&lt;/item&gt;
      &lt;item&gt;^ Постановление Парламента Кабардино-Балкарской Республики от 12.05.1994 № 21-П-П (об обращении в Госдуму с вопросом признания геноцида черкесов)[dead link]&lt;/item&gt;
      &lt;item&gt;^ "Постановление ГС — Хасэ Республики Адыгея от 29.04.1996 № 64-1 «Об обращении к Государственной Думе Федерального Собрания Российской Федерации»". Archived from the original on 2 November 2013. Retrieved 3 June 2011.&lt;/item&gt;
      &lt;item&gt;^ Обращение Президента Республики Адыгея к Государственной Думе Федерального Собрания Российской Федерации с вопросом признания геноцида черкесов) — 29.04.1996.&lt;/item&gt;
      &lt;item&gt;^ "Постановление Народного Собрания − Парламента Республики Абхазия «Об акте депортации абхазов (абаза) в XIX веке» — Сухум, 15 октября 1997". Archived from the original on 9 August 2013. Retrieved 25 August 2013.&lt;/item&gt;
      &lt;item&gt;^ Жемухов Суфьян. Признание без независимости: Абхазия в международном контексте Archived 2013-10-07 at the Wayback Machine — Радиостанция «Эхо Москвы», 06 сентября 2012.&lt;/item&gt;
      &lt;item&gt;^ Ъ-Дадашева, Диана (13 October 2006). "Адыги добиваются признания своего геноцида". Газета «Коммерсантъ». Archived from the original on 27 September 2011.&lt;/item&gt;
      &lt;item&gt;^ "Черкесы пожаловались Путину на царя // Сайт «Лента. Ру» (lenta.ru), 20.11.2006". Archived from the original on 26 July 2011. Retrieved 4 June 2011.&lt;/item&gt;
      &lt;item&gt;^ "Georgia Recognizes Russian 'Genocide' Of Ethnic Circassians". Radio Free Europe. May 2011. Retrieved 15 January 2021.&lt;/item&gt;
      &lt;item&gt;^ "Georgia Recognizes Circassian Genocide". Eurasianet. Retrieved 15 January 2021.&lt;/item&gt;
      &lt;item&gt;^ Bodio, Tadeusz; Sieradzan, Przemysław J. (15 December 2012). "Źródła nacjonalizmu czerkieskiego i jego konsekwencje polityczne" [Sources of Circassian nationalism and its political consequences]. Środkowoeuropejskie Studia Polityczne (in Polish) (4): 47–74. doi:10.14746/ssp.2012.4.03. ISSN 1731-7517.&lt;/item&gt;
      &lt;item&gt;^ "145th Anniversary of the Circassian Genocide and the Sochi Olympics Issue". Reuters. 22 May 2009. Archived from the original on 8 September 2012. Retrieved 28 November 2009.&lt;/item&gt;
      &lt;item&gt;^ "Çerkesler soykırım yürüyüşü yaptı" [Circassians marched on genocide]. Denizhaber (in Turkish). May 2016. Retrieved 15 January 2021.&lt;/item&gt;
      &lt;item&gt;^ Kayseri, DHA (May 2017). "Çerkeslerden anma yürüyüşü" [Circassian memorial march]. Sözcü (in Turkish). Retrieved 15 January 2021.&lt;/item&gt;
      &lt;item&gt;^ Dowling, Timothy C. (2 December 2014). Russia at War: From the Mongol Conquest to Afghanistan, Chechnya, and Beyond. ABC-CLIO. pp. 728–729. ISBN 978-1598849486 – via Google Books.&lt;/item&gt;
      &lt;item&gt;^ King 2008, pp. 37–39.&lt;/item&gt;
      &lt;item&gt;^ Messenger, Evan (6 December 2023). "The Circassian Genocide: The Forgotten Tragedy of the First Modern Genocide". American University: Journal of International Service. Archived from the original on 23 February 2024.&lt;/item&gt;
      &lt;item&gt;^ Ryan, J. Atticus; Mullen, Christopher A., eds. (1998). Unrepresented Nations and Peoples Organization Yearbook 1997. The Hague, The Netherlands: Kluwer Law International. p. 67. ISBN 90-411-1022-4.&lt;/item&gt;
      &lt;item&gt;^ Karpat 1985, p. 67.&lt;/item&gt;
      &lt;item&gt;^ a b c Shenfield 1999, p. 150.&lt;/item&gt;
      &lt;item&gt;^ Natho 2009, pp. 123–124.&lt;/item&gt;
      &lt;item&gt;^ Мальбахов Б. К. Кабарда на этапах политической истории (середина XVI — первая четверть XIX века). — Москва: «Поматур», 2002. — С. 293. — ISBN 5-86208-106-2.&lt;/item&gt;
      &lt;item&gt;^ Мальбахов Б. К. Кабарда на этапах политической истории (середина XVI — первая четверть XIX века). — Москва: «Поматур», 2002. — С. 302. — ISBN 5-86208-106-2.&lt;/item&gt;
      &lt;item&gt;^ Gen. İsmail Berkok, Tarihte Kafkasya, İstanbul, 1958, s. 371.&lt;/item&gt;
      &lt;item&gt;^ a b c Jaimoukha, Amjad. A Brief History of Kabarda [from the Seventh Century AD]. p. 19.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, pp. 35–36.&lt;/item&gt;
      &lt;item&gt;^ a b Richmond 2013, p. 12.&lt;/item&gt;
      &lt;item&gt;^ Potto, Valisii. Kavkazskaya voina. 1:171&lt;/item&gt;
      &lt;item&gt;^ a b Richmond 2013, p. 56.&lt;/item&gt;
      &lt;item&gt;^ Hatk, Isam. "Russian-Circassian War 1763- 21 May 1864". Al Waha – Oasis. 51. (1992): 10–15.&lt;/item&gt;
      &lt;item&gt;^ a b c d e F. A. Cherbin, The History of Cossack Kuban Forces&lt;/item&gt;
      &lt;item&gt;^ a b c d e f g h i j k Ahmed 2013, p. 161.&lt;/item&gt;
      &lt;item&gt;^ a b King 2008, pp. 47–49: "This, in turn, demanded ... above all the stomach to carry the war to the highlanders themselves, including putting aside any scruples about destroying, forests, and any other place where raiding parties might seek refuge ... Targeted assassinations, kidnappings, the killing of entire families and the disproportionate use of force became central to Russian operations ..."&lt;/item&gt;
      &lt;item&gt;^ a b King 2008, p. 74.&lt;/item&gt;
      &lt;item&gt;^ a b Natho, Kadir (2005). "The Russo-Circassian War". Archived from the original on 12 May 2022. Retrieved 13 March 2022.&lt;/item&gt;
      &lt;item&gt;^ King 2008, pp. 93–94.&lt;/item&gt;
      &lt;item&gt;^ Baddeley 1908, p. 135.&lt;/item&gt;
      &lt;item&gt;^ John Emerich Edward Dalberg Acton (1907). The Cambridge Modern History. Macmillan &amp;amp; Co. p. 202.&lt;/item&gt;
      &lt;item&gt;^ King 2008, pp. 92–93.&lt;/item&gt;
      &lt;item&gt;^ Rosen, Baron. "Letter to Chionchev". 12 December 1831. P. Boutkov, Materials for the New History of the Caucasus – Part I&lt;/item&gt;
      &lt;item&gt;^ King, The Ghost of Freedom, pp. 73–76. "The hills, forests and uptown villages where highland horsemen were most at home were cleared, rearranged or destroyed ... to shift the advantage to the regular army of the empire. ... Into these spaces, Russian settlers could be moved or 'pacified' highlanders resettled."&lt;/item&gt;
      &lt;item&gt;^ a b Natho 2009, p. 357.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, pp. 13–18.&lt;/item&gt;
      &lt;item&gt;^ "Zass Grigory Khristoforovich" Засс Григорий Христофорович. Caucasian Knot. 20 May 2014. Retrieved 20 January 2022. Русский генерал, участник Кавказской войны. Известен тем, что проводил крайне жестокую политику устрашения черкесов. [Russian general, participant in the Caucasian War. He is known for pursuing an extremely cruel policy of intimidating the Circassians.]&lt;/item&gt;
      &lt;item&gt;^ Duvar, Gazete (14 September 2020). "Kafkasya'nın istenmeyen Rus anıtları: Kolonyal geçmişi hatırlatıyorlar" [Unwanted Russian monuments in the Caucasus: Reminders of the colonial past]. Gazeteduvar (in Turkish). Archived from the original on 17 September 2020. Retrieved 13 January 2021.&lt;/item&gt;
      &lt;item&gt;^ "Jembulat Bolotoko: The Prince of Princes (Part One)". Jamestown. Archived from the original on 25 October 2020. Retrieved 5 January 2021.&lt;/item&gt;
      &lt;item&gt;^ Natho 2009, p. 420.&lt;/item&gt;
      &lt;item&gt;^ Bashqawi, Adel (2017). Circassia: Born to Be Free. Xlibris Corporation. ISBN 978-1543447651.&lt;/item&gt;
      &lt;item&gt;^ Bashqawi, Adel (2019). The Circassian Miracle: the Nation Neither Tsars, nor Commissars, nor Russia Could Stop. Xlibris Corporation. ISBN 978-1796076851.&lt;/item&gt;
      &lt;item&gt;^ Kingston, William Henry Giles (2020). The Circassian Chief: A Romance of Russia. Library of Alexandria. ISBN 978-1465593184.&lt;/item&gt;
      &lt;item&gt;^ Kingston, William Henry G. (1854). The Circassian chief. Vol. 101. p. 192.&lt;/item&gt;
      &lt;item&gt;^ Family Herald. The definitive visual guide. Vol. 17. George Biggs. 1859. p. 287.&lt;/item&gt;
      &lt;item&gt;^ Burnaby 1877, p. 88.&lt;/item&gt;
      &lt;item&gt;^ a b Colonel Grigory Zass. Letter to Baron Rosen. 25 Feb. 1834. P. Boutkov, Materials for the New History of the Caucasus, Part I&lt;/item&gt;
      &lt;item&gt;^ Bashqawi, Adel (2017). Circassia: Born to Be Free. Xlibris Corporation. ISBN 978-1543447651 – via Google Books.&lt;/item&gt;
      &lt;item&gt;^ "The Reports and the Testimonies About Russian – Circassian War and the Circassian Genocide". Circassian World. Archived from the original on 3 June 2021. Retrieved 3 June 2021.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, p. 55.&lt;/item&gt;
      &lt;item&gt;^ Bullough, Oliver (2010). Let Our Fame Be Great: Journeys Among the Defiant People of the Caucasus. Basic Books. p. 60. ISBN 978-0465022571 – via Google Books.&lt;/item&gt;
      &lt;item&gt;^ Treisman, Daniel (2011). The Return: Russia's Journey from Gorbachev to Medvedev. Simon and Schuster. p. 455. ISBN 978-1416560722 – via Google Books.&lt;/item&gt;
      &lt;item&gt;^ Эльмесов, А. М. (1991). From the History of the Russo-Caucasian War: Documents and Materials (in Russian). Кабардино-Балкарское Отд. Всероссийского Фонда Культуры. p. 4. ISBN 978-5-86778-066-1.&lt;/item&gt;
      &lt;item&gt;^ King 2008, pp. 95, 96.&lt;/item&gt;
      &lt;item&gt;^ a b c d Richmond 2013, p. 96.&lt;/item&gt;
      &lt;item&gt;^ Mamedov, Mikail (2008). "'Going Native' in the Caucasus: Problems of Russian Identity, 1801–64". The Russian Review. 67 (2): 275–295. doi:10.1111/j.1467-9434.2008.00484.x. JSTOR 20620748.&lt;/item&gt;
      &lt;item&gt;^ Tlis, Fatima (1 August 2008). "Moscow's Favoritism Towards Cossacks Mocks Circassian History". North Caucasus Weekly. 9 (30).&lt;/item&gt;
      &lt;item&gt;^ Zhemukhov, Sufian (9 November 2011). "Jembulat Bolotoko: The Prince of Princes (Part Two)". Eurasia Daily Monitor. 8 (207).&lt;/item&gt;
      &lt;item&gt;^ Golovin, Ivan (1954). The Caucasus (PDF). Trubner &amp;amp; Co.&lt;/item&gt;
      &lt;item&gt;^ Sykes, Heather (2016). The Sexual and Gender Politics of Sport Mega-Events: Roving Colonialism. Routledge Critical Studies in Sport. Taylor &amp;amp; Francis. p. 124. ISBN 978-1317690016.&lt;/item&gt;
      &lt;item&gt;^ Khodarkovsky, Michael (2011). Bitter Choices: Loyalty and Betrayal in the Russian Conquest of the North Caucasus. Cornell University Press. p. 134. ISBN 978-0801462900 – via Google Books.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, p. 63.&lt;/item&gt;
      &lt;item&gt;^ Baumgart, Winfried (1981). Peace of Paris, 1856: Studies in War, Diplomacy and Peacemaking Peace of Paris. ABC-CLIO. pp. 111–112.&lt;/item&gt;
      &lt;item&gt;^ Conacher, J. B. (1987). Britain and the Crimea 1855–56: Problems Of War And Peace. Springer. pp. 203, 215–217.&lt;/item&gt;
      &lt;item&gt;^ a b Richmond 2013, p. 76.&lt;/item&gt;
      &lt;item&gt;^ Kulberg 2004, pp. 18–21: "the Russian Empire ended up inventing the strategy of modern ethnic cleansing and genocide, with Crimean Tatars and Circassians as the first victims of massive territorial extermination in the 1860s. ... An unprecedented genocide and wave of terror aimed at emptying the whole Caucasus from Circassians. Also in Circassia, Russia started a mass expulsion in 1860, with catastrophic consequences. ... The careful timing, planning and systematic organization of the ethnic cleansings and genocide against Crimean Tatars, Caucasian Muslims and Jews indicate that imperial Russia, even during the reigns of different monarchs, did not follow a random strategy in her southward expansion, ... regarding the more general history of the time, the systematic use of ethnic cleansing, pogroms and genocide as a means of imperial expansion and colonization marked the beginning of a novel and sinister trend in imperial politics. What was launched by Russia's brosok na yug, with their first victims being the Crimean Tatars and Circassians, was continued against the Jews..."&lt;/item&gt;
      &lt;item&gt;^ Kulberg 2004, pp. 20, 21.&lt;/item&gt;
      &lt;item&gt;^ a b c d King, Charles. The Ghost of Freedom: A History of the Caucasus. Page 94. "In a policy memorandum in of 1857, Dmitri Milyutin, chief-of-staff to Bariatinskii, summarized the new thinking on dealing with the northwestern highlanders. The idea, Milyutin argued, was not to clear the highlands and coastal areas of Circassians so that these regions could be settled by productive farmers ... [but] Rather, eliminating the Circassians was to be an end in itself – to cleanse the land of hostile elements. Tsar Alexander II formally approved the resettlement plan ... Milyutin, who would eventually become minister of war, was to see his plans realized in the early 1860s".&lt;/item&gt;
      &lt;item&gt;^ a b L. V. Burykina. Pereselenskoye dvizhenie na severo-zapagni Kavakaz. Reference in King.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2008, p. 79. "In his memoirs Milutin, who proposed deporting Circassians from the mountains as early as 1857, recalls: "the plan of action decided upon for 1860 was to cleanse [ochistit'] the mountain zone of its indigenous population".&lt;/item&gt;
      &lt;item&gt;^ Tanner, A. The Forgotten Minorities of Eastern Europe – The History and Today of Selected Ethnic Groups in Five Countries. East-West Books. 2004. ISBN 9789529168088&lt;/item&gt;
      &lt;item&gt;^ Rosser-Owen 2007, pp. 15–16: "As it advanced, the Russian Army began systematically clearing the Circassian highlands of their indigenous inhabitants, often in particularly brutal and destructive ways, and replacing them with settlements of Cossacks, who they deemed to be more reliable subjects ... there was a general feeling within Russian military circles that the Circassians would have to be entirely removed from these areas in order to fully secure them."&lt;/item&gt;
      &lt;item&gt;^ Berzhe 1882:342–343 (in Russian)&lt;/item&gt;
      &lt;item&gt;^ Richmond "Defeat and Deportation". Archived 27 September 2007 at the Wayback Machine. University of Southern California, 1994&lt;/item&gt;
      &lt;item&gt;^ Rosser-Owen 2007, p. 16.&lt;/item&gt;
      &lt;item&gt;^ Rosser-Owen 2007, p. 15: "Although the Russian Government did not give the plan official sanction until May 1862, in 1859 they had already started talks with the Ottomans to provide for a limited number of Circassian migrants".&lt;/item&gt;
      &lt;item&gt;^ Rosser-Owen 2007, p. 20.&lt;/item&gt;
      &lt;item&gt;^ a b Richmond 2013, p. 72.&lt;/item&gt;
      &lt;item&gt;^ Kasumov and Kasumov. Genotsid Adygov. p. 140&lt;/item&gt;
      &lt;item&gt;^ Esadze. Pokorenie. p. 352&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, p. 65, 66, 71, 74–75.&lt;/item&gt;
      &lt;item&gt;^ a b Richmond 2013, p. 77.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, p. 54.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, p. 80.&lt;/item&gt;
      &lt;item&gt;^ Drozdov, Ivan. Poslednaia Borjba. pp. 434–437, 441–444. Cited in Richmond, Walter. The Circassian Genocide. p. 77&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, pp. 78–79.&lt;/item&gt;
      &lt;item&gt;^ Field notes of Evdokimov for June–December 1863, available from the Georgian State Archives, Tbilisi. f.416, op. 3, doc. 1177, 100–190 passim.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, p. 79.&lt;/item&gt;
      &lt;item&gt;^ a b Shenfield 1999, p. 151.&lt;/item&gt;
      &lt;item&gt;^ a b c Ahmed 2013, p. 162.&lt;/item&gt;
      &lt;item&gt;^ a b Shenfield 1999, p. 152.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, p. 2.&lt;/item&gt;
      &lt;item&gt;^ Trakho, cited in Shenfield 1999, p. 152&lt;/item&gt;
      &lt;item&gt;^ Kafkasya Bülteni, 19 Mayıs 1864&lt;/item&gt;
      &lt;item&gt;^ Jersild 2002, p. 12.&lt;/item&gt;
      &lt;item&gt;^ Кумыков Т. Х. Выселение адыгов в Турцию – последствие Кавказской войны. Нальчик. 1994. Стр. 93–94.&lt;/item&gt;
      &lt;item&gt;^ Rosser-Owen 2007, p. 22.&lt;/item&gt;
      &lt;item&gt;^ a b Natho 2009, p. 365.&lt;/item&gt;
      &lt;item&gt;^ Ahmed 2013, pp. 162–163.&lt;/item&gt;
      &lt;item&gt;^ Drozdov, Ivan. Posledniaia Bor'ba s Gortsami na Zapadnom Kavkaze. pp. 456–457.&lt;/item&gt;
      &lt;item&gt;^ a b Rosser-Owen 2007, p. 24.&lt;/item&gt;
      &lt;item&gt;^ a b Rosser-Owen 2007, pp. 23–24.&lt;/item&gt;
      &lt;item&gt;^ a b "The Circassian Slave Trade". The Scotsman. 30 August 1864. p. 4.. Cited in Rosser-Owen 2007[page needed]&lt;/item&gt;
      &lt;item&gt;^ Rosser-Owen 2007, p. 22: "The deportations were not conducted with any kind of efficiency on the part of the Russians, with the Circassians often left to find unchartered transports, which also left them open to abuses by the captains of the vessels."&lt;/item&gt;
      &lt;item&gt;^ King 2008, pp. 96–97.&lt;/item&gt;
      &lt;item&gt;^ "The Circassian Exodus". The Times. 9 May 1864. p. 11.. Cited in Rosser-Owen 2007, p. 24&lt;/item&gt;
      &lt;item&gt;^ Rosser-Owen 2007, pp. 38–39.&lt;/item&gt;
      &lt;item&gt;^ Olshevsky, quoted in Walter Richmond (2013), Circassian Genocide, p. 87&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, p. 87.&lt;/item&gt;
      &lt;item&gt;^ Rosser-Owen 2007, p. 25.&lt;/item&gt;
      &lt;item&gt;^ "The Circassian Exodus", a letter to the Editor of The Times, June 17, 1864, p. 7. Cited in Rosser-Owen 2007, p. 26&lt;/item&gt;
      &lt;item&gt;^ a b c Richmond 2013, p. 88.&lt;/item&gt;
      &lt;item&gt;^ Mikhail Nikolaevich to Novikov, 20 September (OS), 1867, Georgian State Archive (Tbilisi), f. 416, op. 3, doc. 160, 2.&lt;/item&gt;
      &lt;item&gt;^ Rosser-Owen 2007, p. 23.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, p. 86: "Not only refugees but entire crews were wiped out. After a Russian captain and crew met this fate in April, the Russians refused to transport any more on state-owned ships and left the rest of the deportation to the Turks and private vessels. Evdokimov investigated the possibility of hiring ships to transport the Circassians, but his quibbling over fees delayed the exploitation of private boats for several months. However, he apparently requested no food, water, or medical help."&lt;/item&gt;
      &lt;item&gt;^ a b c d Ahmed 2013, p. 163.&lt;/item&gt;
      &lt;item&gt;^ Rosser-Owen 2007, p. 23: "As the deportations increased, Russian, Ottoman, and even British vessels were chartered to convey the refugees in what must have itself been a massive operation ... the burden of the operation landed on the shoulders of the Ottoman Government and the transporting of refugees took a huge toll on Ottoman finances, leading to a suggestion by Sir Henry Bulwer, British Ambassador at Istanbul, that the British Government either allocate a loan or agree to charter British merchant steamers to be used for this purpose." In footnote: "Neither the loan nor the transports were forthcoming on this occasion, although the British did provide transports at various points, and independent steamers also transported refugees."&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, p. 89.&lt;/item&gt;
      &lt;item&gt;^ Unsigned report, 17 May (OS), 1864, Georgian State Archive (Tbilisi), f. 416, op. 3, doc. 146, 1–2.&lt;/item&gt;
      &lt;item&gt;^ Messenger, Evan (6 December 2023). "The Circassian Genocide: The Forgotten Tragedy of the First Modern Genocide". American University: Journal of International Service. Archived from the original on 23 February 2024. &lt;quote&gt;According to an 1830 census, prior to deportation, there was a population of approximately four million Circassians.&lt;/quote&gt;&lt;/item&gt;
      &lt;item&gt;^ Ryan, J. Atticus; Mullen, Christopher A., eds. (1998). Unrepresented Nations and Peoples Organization Yearbook 1997. The Hague, The Netherlands: Kluwer Law International. p. 67. ISBN 90-411-1022-4.&lt;/item&gt;
      &lt;item&gt;^ Messenger, Evan (6 December 2023). "The Circassian Genocide: The Forgotten Tragedy of the First Modern Genocide". American University: Journal of International Service. Archived from the original on 23 February 2024. &lt;quote&gt;The corroboration between both Turkish and Russian documents puts the number of Circassian deaths by military operations and pre-planned massacres between 1.5 – 2 million; ...&lt;/quote&gt;&lt;/item&gt;
      &lt;item&gt;^ Ahmed 2013, p. 357 "In the 1860s Russia killed 1.5 million Circassians, half of their population, and expelled the other half from their lands."&lt;/item&gt;
      &lt;item&gt;^ Karpat 1985.&lt;/item&gt;
      &lt;item&gt;^ a b Shenfield 1999, p. 154.&lt;/item&gt;
      &lt;item&gt;^ King 2008.&lt;/item&gt;
      &lt;item&gt;^ Karpat 1985, p. 69: "Taking into account all the qualifying factors, it seems reasonable to estimate that approximately 2 million Caucasians, mostly Circassians, left Russia in the period from 1859 to 1879 but that only about 1,500,000 actually survived and were settled on Ottoman domains."&lt;/item&gt;
      &lt;item&gt;^ McCarthy, Justin (1995). DEATH AND EXILE The Ethnic Cleansing of Ottoman Muslims 1821-1922. PRINCETON, NEW JERSEY: THE DARWIN PRESS, INC. p. 338. ISBN 0-87850-094-4. &lt;quote&gt;For example, Kemal Karpat has estimated that 2 million Caucasian Muslims were driven out, of whom 1.5 million survived.&lt;/quote&gt;&lt;/item&gt;
      &lt;item&gt;^ a b McCarthy, Justin (1995). DEATH AND EXILE The Ethnic Cleansing of Ottoman Muslims 1821-1922. PRINCETON, NEW JERSEY: THE DARWIN PRESS, INC. p. 339. ISBN 0-87850-094-4.&lt;/item&gt;
      &lt;item&gt;^ "145th Anniversary of the Circassian Genocide and the Sochi Olympics Issue". Reuters. 22 May 2009. Archived from the original on 2 July 2012. Retrieved 28 November 2009.&lt;/item&gt;
      &lt;item&gt;^ Rosser-Owen 2007, p. 16: "... with one estimate showing that the indigenous population of the entire north-western Caucasus was reduced by a massive 94 per cent". Text of citation: "The estimates of Russian historian Narochnitskii, in Richmond, ch. 4, p. 5. Stephen Shenfield notes a similar rate of reduction with less than 10 per cent of the Circassians (including the Abkhazians) remaining. (Stephen Shenfield, 'The Circassians: A Forgotten Genocide?', in The Massacre in History, p. 154.)"&lt;/item&gt;
      &lt;item&gt;^ Population of Russian Federation by cities, towns, and districts as of January 1, 2007: Rosstat, Moscow, 2007&lt;/item&gt;
      &lt;item&gt;^ Половинкина Т. В. Сочинское Причерноморье – Нальчик (2006) pp. 216–218, ISBN 588195775X&lt;/item&gt;
      &lt;item&gt;^ 4. Население (R_04.doc) in Российский статистический ежегодник 2011, www.gks.ru, ISBN 978-5-89476-319-4&lt;/item&gt;
      &lt;item&gt;^ "Sochi". Great Soviet Encyclopedia. (in Russian)&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, p. 97.&lt;/item&gt;
      &lt;item&gt;^ Gnolidze-Swanson, Manana (2003). "Activity of the Russian Orthodox Church Among the Muslim Natives of the Caucasus in Imperial Russia" (PDF). Caucasus and Central Asia Newsletter (4). University of California, Berkeley: 9–20. Archived (PDF) from the original on 27 February 2008.&lt;/item&gt;
      &lt;item&gt;^ "Chechnya: Chaos of Human Geography in the North Caucasus, 484 BC – 1957 AD". Biot Report (479). November 2007. Archived from the original on 20 December 2010.&lt;/item&gt;
      &lt;item&gt;^ Kulberg 2004, p. 21.&lt;/item&gt;
      &lt;item&gt;^ a b Anchabadze, George. The Vainakhs. p. 29&lt;/item&gt;
      &lt;item&gt;^ a b Jaimoukha, Amjad. The Chechens: A Handbook. p. 259.&lt;/item&gt;
      &lt;item&gt;^ a b Özdemir Özbay, Dünden Bugüne Kuzey Kafkasya, Ankara, 1999, s.165;İstoriya narodov Severnogo Kavkaza, p. 206–207&lt;/item&gt;
      &lt;item&gt;^ Viacheslav A. Chirikba Abkhaz, p. 6.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, p. 3.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013.&lt;/item&gt;
      &lt;item&gt;^ Natho 2009, pp. 367, 391, 403.&lt;/item&gt;
      &lt;item&gt;^ Natho 2009, p. 367.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, p. 66.&lt;/item&gt;
      &lt;item&gt;^ Mal'bakhov, Kabarda v Period ot Petra I do Yermolova, p. 237.&lt;/item&gt;
      &lt;item&gt;^ Shenfield 1999, p. 154: "The number who died in the Circassian catastrophe of the 1860s could hardly, therefore, be less than one million, and may well have been closer to one-and-a-half million".&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, pp. 97, 132.&lt;/item&gt;
      &lt;item&gt;^ Jones 2016, pp. 109, 110.&lt;/item&gt;
      &lt;item&gt;^ Quoted in Natho 2009, p. 361&lt;/item&gt;
      &lt;item&gt;^ Rosser-Owen 2007, pp. 34–52.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, pp. 90–91.&lt;/item&gt;
      &lt;item&gt;^ Shenfield 1999, p. 153.&lt;/item&gt;
      &lt;item&gt;^ Pinson, Marc, "Ottoman Colonization of the Circassians in Rumili after the Crimean War", Études Balkaniques 3, Académie Bulgare des Sciences, Sofia, 1972. Page 72&lt;/item&gt;
      &lt;item&gt;^ a b Richmond 2013, p. 33.&lt;/item&gt;
      &lt;item&gt;^ Rosser-Owen 2007, pp. 45–49.&lt;/item&gt;
      &lt;item&gt;^ a b Rosser-Owen 2007, p. 46.&lt;/item&gt;
      &lt;item&gt;^ Rosser-Owen 2007, p. 46: "With the Highland Clearances still fresh in the minds of many, the Circassian issue seems to have generated particular sympathy in Scotland. One frustrated letter sent in to The Scotsman reflects this sentiment: 'The Scotchmen whose ancestors fought and bled for their national liberty over and over, are they to meet and talk and do nothing at the call of both freedom and humanity, or instead of being first, to be last? If they are, they are unworthy of the blessings they themselves enjoy ... why not call a public meeting, and appoint a committee to receive contributions?'"&lt;/item&gt;
      &lt;item&gt;^ Rosser-Owen 2007, pp. 47–49.&lt;/item&gt;
      &lt;item&gt;^ Rosser-Owen 2007, pp. 49–52.&lt;/item&gt;
      &lt;item&gt;^ Rosser-Owen 2007, p. 38: "One private letter sent to The Spectator magazine from Dr Sandwith in Gratz claimed that out of the £50,000 given for the aid of the refugees, only £1,000 had actually reached them, accusing Ottoman officials of having each stolen a share along the way." The author notes later that the figure of 49,000 embezzled is probably not a "reliable estimate".&lt;/item&gt;
      &lt;item&gt;^ Rosser-Owen 2007, pp. 35–37.&lt;/item&gt;
      &lt;item&gt;^ Напсо Д. А., Чекменов С. А. Op. cit. Стр. 113–114.&lt;/item&gt;
      &lt;item&gt;^ Berger 2015.&lt;/item&gt;
      &lt;item&gt;^ Quoted from: Алиев У. Очерк исторического развития горцев Кавказа и чужеземного влияния на них ислама, царизма и пр. Ростов-н/Д. 1927. Стр. 109–110.&lt;/item&gt;
      &lt;item&gt;^ Glenny, Misha (2000). The Balkans, 1804–1999: Nationalism, War and the Great Powers. Granta Books. p. 96. ISBN 978-1-86207-073-8.&lt;/item&gt;
      &lt;item&gt;^ a b Richmond 2013, p. 99.&lt;/item&gt;
      &lt;item&gt;^ Natho 2009, p. 375.&lt;/item&gt;
      &lt;item&gt;^ a b c d e Natho 2009, p. 380.&lt;/item&gt;
      &lt;item&gt;^ a b Richmond 2013, p. 103.&lt;/item&gt;
      &lt;item&gt;^ Pinson, Mark (1972). "Ottoman Colonization of the Circassians in Rumili after the Crimean War". Études Balcaniques. 3: 78–79.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, p. 107.&lt;/item&gt;
      &lt;item&gt;^ Tlostanova, Madina (2010). Gender Epistemologies and Eurasian Borderlands. Comparative Feminist Studies (illustrated ed.). Palgrave Macmillan. p. 85. ISBN 978-0230108424 – via Google Books.&lt;/item&gt;
      &lt;item&gt;^ Byrne, Donn (1929). Field of Honor (large print ed.). Century Company. p. 125 – via Google Books.&lt;/item&gt;
      &lt;item&gt;^ Reid, James J. (2000). Crisis of the Ottoman Empire: Prelude to Collapse 1839–1878. Quellen und Studien zur Geschichte des östlichen Europa. Vol. 57. Franz Steiner Verlag. p. 148. ISBN 3515076875. ISSN 0170-3595 – via Google Books.&lt;/item&gt;
      &lt;item&gt;^ Thompson, Ewa Majewska (2000). Imperial Knowledge: Russian Literature and Colonialism (illustrated ed.). Greenwood Press. p. 68. ISBN 0313313113. ISSN 0738-9345 – via Google Books.&lt;/item&gt;
      &lt;item&gt;^ Still, Judith (2012). Derrida and Hospitality (reprint ed.). Edinburgh University Press. p. 211. ISBN 978-0748687275 – via Google Books.&lt;/item&gt;
      &lt;item&gt;^ Gibson, Sarah (2016). Molz, Jennie Germann (ed.). Mobilizing Hospitality: The Ethics of Social Relations in a Mobile World (reprint ed.). Routledge. ISBN 978-1317094951 – via Google Books.&lt;/item&gt;
      &lt;item&gt;^ Culbertson, Ely (1940). The Strange Lives of One Man: An Autobiography. Winston. p. 55.&lt;/item&gt;
      &lt;item&gt;^ Magnússon, Eiríkr (1891). National Life and Thought of the Various Nations Throughout the World: A Series of Addresses. T. F. Unwin. p. 8 – via Google Books.&lt;/item&gt;
      &lt;item&gt;^ The New Review. Vol. 1. Longmans, Green and Company. 1889. p. 309 – via Google Books.&lt;/item&gt;
      &lt;item&gt;^ Думанов Х. М. Вдали от Родины. (tr. "Far from the Motherland.") Нальчик, 1994. Page 98.&lt;/item&gt;
      &lt;item&gt;^ Дзидзария Г. А. Махаджирство и проблемы истории Абхазии XIX столетия. 2-е изд. (tr. "Makhadzhirstvo and problems of the history of Abkhazia in the 19th century. 2nd ed., supplement"), допол. Сухуми. 1982. Pp. 238, 240–241, 246.&lt;/item&gt;
      &lt;item&gt;^ Glenny, Misha. The Balkans: Nationalism, War and the Great Powers, 1804–1999. pp. 96–97.&lt;/item&gt;
      &lt;item&gt;^ Natho 2009, pp. 445–446.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, p. 100.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, p. 1.&lt;/item&gt;
      &lt;item&gt;^ Fisher, Alan. "Emigration of Muslims from the Russian Empire in the Years after the Crimean War". Population History of the Middle East and the Balkans. p. 179.&lt;/item&gt;
      &lt;item&gt;^ Rosser-Owen 2007, pp. 20–21.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, pp. 89, 132.&lt;/item&gt;
      &lt;item&gt;^ a b Jersild 2002, p. 23.&lt;/item&gt;
      &lt;item&gt;^ a b c Jersild 2002, p. 24.&lt;/item&gt;
      &lt;item&gt;^ McCarthy, Justin. "Factors in the Analysis of the Population of Anatolia" in Population History of the Middle East and the Balkan.&lt;/item&gt;
      &lt;item&gt;^ a b c d e f Jersild 2002, p. 26.&lt;/item&gt;
      &lt;item&gt;^ Rosser-Owen 2007, p. 33.&lt;/item&gt;
      &lt;item&gt;^ Panzac, Daniel (1995). "Vingt ans au service de la médecine turque : le Dr Fauvel à Istanbul (1847–1867)" [Twenty years in the service of Turkish medicine: Dr. Fauvel in Istanbul (1847–1867)]. MOM Éditions (in French). 1 (1): 165–181.&lt;/item&gt;
      &lt;item&gt;^ Messenger, Evan (6 December 2023). "The Circassian Genocide: The Forgotten Tragedy of the First Modern Genocide". American University: Journal of International Service. Archived from the original on 23 February 2024.&lt;/item&gt;
      &lt;item&gt;^ "A new war in the Caucasus?" (Review of book Bourdieu's Secret Admirer in the Caucasus by Georgi M. Derluguian). The Times, 1 February 2006&lt;/item&gt;
      &lt;item&gt;^ Smirnov, Andrei (13 September 2006). "Disputable anniversary could provoke new crisis in Adygeya". Eurasia Daily Monitor. Vol. 3, no. 168 – via Jamestown Foundation.&lt;/item&gt;
      &lt;item&gt;^ Kullberg, Anssi; Jokinen, Christian (19 July 2004). "From Terror to Terrorism: the Logic on the Roots of Selective Political Violence". The Eurasian Politician. Archived from the original on 22 December 2007.&lt;/item&gt;
      &lt;item&gt;^ "The Circassian Genocide". The Eurasian Politician. October 2000. Archived from the original on 9 April 2014.&lt;/item&gt;
      &lt;item&gt;^ Kulberg 2004, p. 19.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, p. 2, 169.&lt;/item&gt;
      &lt;item&gt;^ a b c Richmond 2008, p. 172.&lt;/item&gt;
      &lt;item&gt;^ a b Goble, Paul (15 July 2005). "Circassians demand Russian apology for 19th century genocide". Radio Free Europe / Radio Liberty. Vol. 8, no. 23.&lt;/item&gt;
      &lt;item&gt;^ "Circassia: Adygs Ask European Parliament to Recognize Genocide". Unrepresented Nations and Peoples Organization. Archived from the original on 2 October 2023.&lt;/item&gt;
      &lt;item&gt;^ Hildebrandt, Amber (14 August 2012). "Russia's Sochi Olympics awakens Circassian anger". CBC News. Retrieved 15 August 2012.&lt;/item&gt;
      &lt;item&gt;^ "Georgia Recognizes 'Circassian Genocide'". Archived 18 September 2012 at the Wayback Machine. Civil Georgia. 20 May 2011&lt;/item&gt;
      &lt;item&gt;^ "Georgia Recognizes Russian 'Genocide' Of Ethnic Circassians". Radio Free Europe/Radio Liberty. 20 May 2011&lt;/item&gt;
      &lt;item&gt;^ "Грузия признала геноцид черкесов в царской России". Lenta.RU.&lt;/item&gt;
      &lt;item&gt;^ "Georgian Diaspora – Calendar". www.diaspora.gov.ge. Archived from the original on 2 October 2017. Retrieved 2 October 2017.&lt;/item&gt;
      &lt;item&gt;^ "Ukraine recognises Circassian Genocide". OC Media. 9 January 2025. Retrieved 9 January 2025.&lt;/item&gt;
      &lt;item&gt;^ Gazetesi, Evrensel. "Çerkes gençleri: Soykırımın getirdiği acıları unutturmamaya kararlıyız" [Circassian youth: We are determined not to let the suffering brought by the genocide be forgotten]. Evrensel.net (in Turkish). Retrieved 22 April 2022.&lt;/item&gt;
      &lt;item&gt;^ "Çerkes soykirim ve sürgün aniti Beyli̇kdüzü'nde açildi" [Circassian genocide and exile monument unveiled in Beylikdüzü]. www.beylikduzu.istanbul (in Turkish). Retrieved 22 April 2022.&lt;/item&gt;
      &lt;item&gt;^ Bozdoğan, Kaan (2020). "Cumhurbaşkanı Erdoğan'dan Çerkes Sürgünü'nün 156. yılına ilişkin mesaj" [Message from President Erdogan on the 156th anniversary of the Circassian Exile] (in Turkish).&lt;/item&gt;
      &lt;item&gt;^ "'Recognize Circassian Genocide, grant Circassians their rights'". Bianet. 2021.&lt;/item&gt;
      &lt;item&gt;^ "Cherkesskiye aktivisty napravili v Rumyniyu pros'bu priznat' genotsid cherkesov Rossiyey" Черкесские активисты направили в Румынию просьбу признать геноцид черкесов Россией [Circassian activists sent a request to Romania to recognize the genocide of the Circassians by Russia]. Natpress (in Russian). 1 December 2015.&lt;/item&gt;
      &lt;item&gt;^ "A requisition is sent to Romania for recognizing the Circassian genocide". cherkessia.net. 1 December 2015.&lt;/item&gt;
      &lt;item&gt;^ "Cherkesskaya obshchestvennost' obratilas' za priznaniyem genotsida ikh predkov k Moldove" Черкесская общественность обратилась за признанием геноцида их предков к Молдове [Circassian community appealed to Moldova for recognition of the genocide of their ancestors]. Natpress (in Russian). 3 September 2015.&lt;/item&gt;
      &lt;item&gt;^ "A requisition is sent to Moldova for recognizing the Circassian genocide". cherkessia.net. 31 August 2015.&lt;/item&gt;
      &lt;item&gt;^ "Eto namerennoye unichtozheniye naroda" Это намеренное уничтожение народа [This is the deliberate destruction of the people]. Kommersant (in Russian). 6 June 2011.&lt;/item&gt;
      &lt;item&gt;^ Kullberg, Anssi (2004). "The Crimean Tatars". In Tanner, Arno (ed.). The Forgotten Minorities of Eastern Europe: The history and today of selected ethnic groups in five countries. East-West Books. ISBN 9789529168088 – via Google Books.&lt;/item&gt;
      &lt;item&gt;^ Henze, Paul. Circassian Resistance. p. 111.&lt;/item&gt;
      &lt;item&gt;^ Kumykov, Tugan (2003). "Arkhivnye Materialy o Kavkazskoi Voine i Vyselenii Cherkesov (Adygov) v Turtsiiu" Архивные Материалы о Кавказской Войне и Выселение Черкесов (Адыгов) в Турцию [Archival Materials about the Caucasian War and the Deportation of the Circassians (Adygs) to Turkey]. Nalchik (in Russian). p. 80.&lt;/item&gt;
      &lt;item&gt;^ Richmond 2013, pp. 92–97.&lt;/item&gt;
      &lt;item&gt;^ Ellman, Michael (2015). "The Circassian Genocide/Neizvestnaya Kavkazkaya voina. Byl li genotsid adygov?". Europe-Asia Studies. 67: 145–147. doi:10.1080/09668136.2014.986956.&lt;/item&gt;
      &lt;item&gt;^ "Fabio L. Grassi ile 156. Yılında Çerkeslerin Sürgünü" [The Exile of the Circassians in its 156th Anniversary with Fabio L. Grassi]. YouTube (in Turkish). 16 May 2020. Archived from the original on 19 December 2021.&lt;/item&gt;
      &lt;item&gt;^ Mantran, Robert (1989). Histoire de l'Empire Ottoman [History of the Ottoman Empire] (in French). Fayard. ISBN 978-2-213-01956-7 – via Google Books.&lt;/item&gt;
      &lt;item&gt;^ Tanilli, Server (1987). Yüzyılların gerçeği ve mirası: insanlık tarihine giriş [Truth and legacy of centuries: an introduction to human history] (in Turkish). Say. ISBN 9789754680010 – via Google Books.&lt;/item&gt;
      &lt;item&gt;^ "İlber Ortaylı" (in Turkish). Archived from the original on 27 November 2020. Retrieved 18 October 2020.&lt;/item&gt;
      &lt;item&gt;^ "Kaffed – KAFFED 21 Mayıs Konferansları" [Kaffed – KAFFED May 21 Conferences]. www.kaffed.org (in Turkish). Retrieved 25 September 2021.&lt;/item&gt;
      &lt;item&gt;^ "Renewed Circassian Mobilization in the North Caucasus 20-years after the Fall of the Soviet Union".&lt;/item&gt;
      &lt;item&gt;^ "Russian Olympics clouded by 19th century deaths". Reuters. 21 March 2010.&lt;/item&gt;
      &lt;item&gt;^ "Cherkesy napomnili o genotside" Черкесы напомнили о геноциде [Circassians reminded of genocide]. Caucasus Times (in Russian). 21 May 2018.&lt;/item&gt;
      &lt;item&gt;^ Черкесы демонстрируют небывалый национальный подъем (in Russian). 21 May 2017.&lt;/item&gt;
      &lt;item&gt;^ Bugajski 2022, pp. 181–184, 224.&lt;/item&gt;
      &lt;item&gt;^ Bugajski 2022, pp. 222–225.&lt;/item&gt;
      &lt;item&gt;^ Bugajski 2022, pp. 148–149.&lt;/item&gt;
      &lt;item&gt;^ "Unambitious state-backed Circassian groups hide a growing nationalism in young Circassians". 26 May 2017.&lt;/item&gt;
      &lt;item&gt;^ Windisch, Elke (7 January 2014). "Im Blut der Tscherkessen" [In the blood of the Circassians]. Die Zeit (in German).&lt;/item&gt;
      &lt;item&gt;^ "Komu pomeshal Asker Sokht?" Кому помешал Аскер Сохт? [Who did Asker Sokht interfere with?] (in Russian). 15 February 2014.&lt;/item&gt;
      &lt;item&gt;^ "Cherkesy mezhdu proshlym i budushchim" Черкесы между прошлым и будущим [Circassians between past and future]. Caucasus Times (in Russian). 21 May 2022.&lt;/item&gt;
      &lt;item&gt;^ О черкесах, зеленых ленточках и Кавказской войне. BBC Russia (in Russian). 20 May 2014.&lt;/item&gt;
      &lt;item&gt;^ "Circassian Activists in Russia Become a Serious Force".&lt;/item&gt;
      &lt;item&gt;^ "Черкесский активист Аднан Хуаде заявил об обысках на работе и дома". 26 May 2015.(in Russian)&lt;/item&gt;
      &lt;item&gt;^ "Krasnodar court upholds fine against Circassian activist Gvashev". 16 October 2017.&lt;/item&gt;
      &lt;item&gt;^ "Circassian leader ends hunger strike". 5 October 2017.&lt;/item&gt;
      &lt;item&gt;^ Приговор черкесскому активисту: власти приравняли траурные мероприятия к несанкционированным митингам (in Russian). 2 June 2017.&lt;/item&gt;
      &lt;item&gt;^ Не время черкесов (in Russian). 6 February 2017.&lt;/item&gt;
      &lt;item&gt;^ "Circassian Activists Toughen Rhetoric Regarding Putin Regime". refworld.org.&lt;/item&gt;
      &lt;item&gt;^ "Черкесы между прошлым и будущим". 21 May 2022.(in Russian)&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;Bibliography&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Berger, Adolf (2015) [1880]. Выселение Горцев с Кавказа [Eviction of mountaineers from the Caucasus] (in Russian).&lt;/item&gt;
      &lt;item&gt;Ahmed, Akbar (2013). The Thistle and the Drone. Washington, D.C.: Brookings Institution Press. ISBN 978-0-8157-2379-0.&lt;/item&gt;
      &lt;item&gt;Baddeley, John F. (1908). The Russian conquest of the Caucasus. London: Longmans, Green and Co. ISBN 0-7007-0634-8. OL 3428695M. &lt;code&gt;{{cite book}}&lt;/code&gt;: ISBN / Date incompatibility (help)&lt;/item&gt;
      &lt;item&gt;Bugajski, Janusz (2022). Failed State: A Guide to Russia's Rupture (PDF).&lt;/item&gt;
      &lt;item&gt;Burnaby, Frederick (1877). On Horseback Through Asia Minor. Vol. 2 (2 ed.). S. Low, Marston, Searle &amp;amp; Rivington.&lt;/item&gt;
      &lt;item&gt;Grassi, Fabio L. (2018). A new homeland: The Massacre of The Circassians, Their Exodus To The Ottoman Empire and Their Place In Modern Turkey. Aydin University International. ISBN 9781642261349.&lt;/item&gt;
      &lt;item&gt;Jersild, Austin (2002). Orientalism and Empire: North Caucasus Mountain Peoples and the Georgian Frontier, 1845–1917. McGill-Queen's Press. ISBN 9780773523296. JSTOR j.ctt8018p. OCLC 123470225.&lt;/item&gt;
      &lt;item&gt;Jones, Adam (2016). Genocide: A Comprehensive Introduction. Taylor &amp;amp; Francis. ISBN 978-1-317-53386-3 – via Google Books.&lt;/item&gt;
      &lt;item&gt;Karpat, Kemal H. (1985). Ottoman population 1830–1914: Demographic and social characteristics. USA: University of Wisconsin Press. ISBN 0-299-09160-0.&lt;/item&gt;
      &lt;item&gt;King, Charles (2008). The Ghost of Freedom: A History of the Caucasus. New York: Oxford University Press. ISBN 978-0-19-517775-6.&lt;/item&gt;
      &lt;item&gt;Kulberg, Anssi (2004). "1: The Crimean Tatars". In Tanner, Arno (ed.). The Forgotten Minorities of Eastern Europe: The History and Today of Selected Ethnic Groups in Five Countries. Helsinki, Finland: East-West Books. pp. 18–21. ISBN 978-0-8135-6068-7.&lt;/item&gt;
      &lt;item&gt;Natho, Kadir I (9 December 2009). Circassian History. Xlibris Foundation.&lt;/item&gt;
      &lt;item&gt;Rosser-Owen, Sarah A. S. Isla (1 October 2007). The First 'Circassian Exodus' to the Ottoman Empire (1858–1867), and the Ottoman Response, Based on the Accounts of Contemporary British Observers (Thesis). University of London.&lt;/item&gt;
      &lt;item&gt;Richmond, Walter (2008). The Northwest Caucasus: Past, Present, Future. London: Routledge. ISBN 978-1-134-00249-8.&lt;/item&gt;
      &lt;item&gt;Richmond, Walter (2013). The Circassian Genocide. Genocide, Political Violence, Human Rights. Rutgers University Press. ISBN 978-0-8135-6069-4. Retrieved 3 May 2016.&lt;/item&gt;
      &lt;item&gt;Shenfield, Stephen D. (1999). "The Circassians: A Forgotten Genocide?". In Levene, Mark; Roberts, Penny (eds.). The Massacre in History. New York: Berghahn Books. pp. 149–162. ISBN 978-1-57181-935-2.&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;1864 establishments in the Russian Empire&lt;/item&gt;
      &lt;item&gt;1867 disestablishments in the Russian Empire&lt;/item&gt;
      &lt;item&gt;1860s in the Russian Empire&lt;/item&gt;
      &lt;item&gt;Circassian genocide&lt;/item&gt;
      &lt;item&gt;Demographics of the Ottoman Empire&lt;/item&gt;
      &lt;item&gt;Demographics of Russia&lt;/item&gt;
      &lt;item&gt;Ethnic cleansing in Europe&lt;/item&gt;
      &lt;item&gt;1860s in the Ottoman Empire&lt;/item&gt;
      &lt;item&gt;History of Abkhazia&lt;/item&gt;
      &lt;item&gt;History of Ingushetia&lt;/item&gt;
      &lt;item&gt;History of Chechnya&lt;/item&gt;
      &lt;item&gt;History of Kuban&lt;/item&gt;
      &lt;item&gt;Genocide of indigenous peoples in Europe&lt;/item&gt;
      &lt;item&gt;Anti-Muslim violence in Europe&lt;/item&gt;
      &lt;item&gt;Genocidal rape&lt;/item&gt;
      &lt;item&gt;19th-century murders in Europe&lt;/item&gt;
      &lt;item&gt;19th-century murders in Asia&lt;/item&gt;
      &lt;item&gt;19th-century massacres&lt;/item&gt;
      &lt;item&gt;19th-century mass murder&lt;/item&gt;
      &lt;item&gt;Murder in the Russian Empire&lt;/item&gt;
      &lt;item&gt;Imperial Russian war crimes&lt;/item&gt;
      &lt;item&gt;19th-century murders in the Russian Empire&lt;/item&gt;
      &lt;item&gt;Massacres of ethnic groups&lt;/item&gt;
      &lt;item&gt;Death marches&lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45461329</guid><pubDate>Fri, 03 Oct 2025 10:42:26 +0000</pubDate></item></channel></rss>