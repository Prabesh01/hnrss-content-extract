<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Hacker News: Front Page</title><link>https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml</link><description>Hacker News RSS</description><atom:link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Thu, 25 Sep 2025 20:37:03 +0000</lastBuildDate><item><title>Data Viz Color Palette Generator (For Charts and Dashboards)</title><link>https://www.learnui.design/tools/data-color-picker.html</link><description>&lt;doc fingerprint="32a83ff73ed5803d"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Palette Generator&lt;/head&gt;
    &lt;head rend="h3"&gt;Number of Colors&lt;/head&gt;
    &lt;head rend="h3"&gt;Background Color&lt;/head&gt;
    &lt;head rend="h2"&gt;In Context&lt;/head&gt;
    &lt;head rend="h2"&gt;How to Use&lt;/head&gt;
    &lt;p&gt;Use the palette chooser to create a series of colors that are visually equidistant. This is useful for many data visualizations, like pie charts, grouped bar charts, and maps.&lt;/p&gt;
    &lt;p&gt;Note: there are two other modes besides palette mode ‚Äì check out single-hue scales and divergent scales as well.&lt;/p&gt;
    &lt;p&gt;Creating visually equidistant palettes is basically impossible to do by hand, yet hugely important for data visualizations. Why? When colors are not visually equidistant, it‚Äôs harder to (a) tell them apart in the chart, and (b) compare the chart to the key. I‚Äôm sure we‚Äôve all looked at charts where you can hardly use the key since the data colors are so similar.&lt;/p&gt;
    &lt;p&gt;For instance, Google Analytics does a terrible job with this:&lt;/p&gt;
    &lt;p&gt;It‚Äôs better to use use a range of hues so users can cross-reference with the key easier. It‚Äôs far simpler for our brains to distinguish, say, yellow from orange than blue from blue-but-15%-lighter.&lt;/p&gt;
    &lt;p&gt;This color picker allows you to specify both endpoints of the palette. You can choose at least one to be a brand color, which gives you significant flexibility in creating a palette that will work for your visualizations, yet be customized for your brand.&lt;/p&gt;
    &lt;p&gt;Here are a few tips for getting the best palette:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Try picking very different endpoint colors ‚Äì e.g. one warm, one cool; one bright, one darker ‚Äì so that your palette covers a wider range&lt;/item&gt;
      &lt;item&gt;If you‚Äôre using a brand color for one endpoint, don‚Äôt be afraid to modify the saturation and brightness a bit if it creates a more pleasing palette. Users will recognize your brand color by its hue much far more than by it‚Äôs exact saturation/brightness.&lt;/item&gt;
      &lt;item&gt;For data visualizations where you‚Äôre showing the strength of a single value, try using the Single Hue Palette Generator instead.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Oh, and...&lt;/p&gt;
    &lt;head rend="h2"&gt;More on Color&lt;/head&gt;
    &lt;p&gt;If you're new to color in UI design, I highly recommend the following resources:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;The HSB Color System: A Practitioner's Primer&lt;/item&gt;
      &lt;item&gt;Color in UI Design: A Practical Framework&lt;/item&gt;
      &lt;item&gt;Gradient Generator tool, by yours truly, built to be the most fully-featured on the web üòé&lt;/item&gt;
      &lt;item&gt;Design Hacks, my email newsletter where I send original design tips and tactics to 60,000+ of my closest friends.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Anyhow, I've created this to be the tool I wish I had for creating data visualization palettes. Is there another feature you'd like to see in it? Let me know.&lt;/p&gt;
    &lt;head rend="h1"&gt;Single Hue Scale&lt;/head&gt;
    &lt;head rend="h3"&gt;Number of Colors&lt;/head&gt;
    &lt;head rend="h3"&gt;Modify Color Scale&lt;/head&gt;
    &lt;p&gt;Brightness&lt;/p&gt;
    &lt;p&gt;Color Intensity&lt;/p&gt;
    &lt;head rend="h3"&gt;Background Color&lt;/head&gt;
    &lt;head rend="h2"&gt;In Context&lt;/head&gt;
    &lt;head rend="h2"&gt;How to Use&lt;/head&gt;
    &lt;p&gt;The Single Hue Scale generator is most useful for visualizations where you‚Äôre showing the value of a single variable. Typically, the darker variation will represent a higher value, and a neutral color (even white) will represent a value closer to zero.&lt;/p&gt;
    &lt;p&gt;In a pie chart or bar chart, size is used to distinguish higher values. But in some visualizations, the size is set and you need to rely on color. Two examples of this are show in the ‚ÄúIn Context‚Äù section above:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;A map in which size represents county size; we need to use color to distinguish the value for each county&lt;/item&gt;
      &lt;item&gt;A week-by-week calendar in which each day is an equally sized box; we need to use color to show the value for a particular day&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Here are a few tips for getting the best single hue scale:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;To transition to a flat gray endpoint, set ‚ÄúColor Intensity‚Äù to zero&lt;/item&gt;
      &lt;item&gt;To transition to a white endpoint, set ‚ÄúBrightness‚Äù to full and ‚ÄúColor Intensity‚Äù to zero&lt;/item&gt;
      &lt;item&gt;If your color scale actually shows a variable that transitions from one end to a neutral midpoint to another end, try the Divergent Scale Generator (e.g. Republican to moderate to Democrat; hotter to same-temperature to cooler)&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h1"&gt;Divergent Color Scale&lt;/head&gt;
    &lt;head rend="h3"&gt;Number of Colors&lt;/head&gt;
    &lt;head rend="h3"&gt;Modify Midpoint Color&lt;/head&gt;
    &lt;p&gt;Brightness&lt;/p&gt;
    &lt;p&gt;Color Intensity&lt;/p&gt;
    &lt;head rend="h3"&gt;Background Color&lt;/head&gt;
    &lt;head rend="h2"&gt;In Context&lt;/head&gt;
    &lt;head rend="h2"&gt;How to Use&lt;/head&gt;
    &lt;p&gt;The Divergent Color Scale generator is most useful for visualizations where you‚Äôre showing a transition from (a) one extreme, through a (b) neutral middle, and finally to a (c) opposite extreme.&lt;/p&gt;
    &lt;p&gt;Perhaps the most common example of this is the ‚Äúhow Democrat/Republican is each state in the US‚Äù chart.&lt;/p&gt;
    &lt;p&gt;By default, the neutral midpoint is a light gray. You can change it with the "Modify Midpoint Color" sliders to be slightly darker or more colorful. For the best results, set the Color Intensity to the minimum when the two endpoint hues are significantly different ‚Äì otherwise, the moderate tones will start to blend together (this will be evident in the map).&lt;/p&gt;
    &lt;p&gt;As with the other visualization styles, this will pick colors that are visually equidistant. However, if one of the two endpoint colors is significantly darker or saturated, the swatches on that side will have more color-space between them.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45372286</guid><pubDate>Thu, 25 Sep 2025 13:13:25 +0000</pubDate></item><item><title>Video models are zero-shot learners and reasoners</title><link>https://video-zero-shot.github.io/</link><description>&lt;doc fingerprint="cf176b948f11fe6e"&gt;
  &lt;main&gt;
    &lt;p&gt;Veo 3 shows emergent zero-shot abilities across many visual tasks, indicating that video models are on a path to becoming vision foundation models‚Äîjust like LLMs became foundation models for language.&lt;/p&gt;
    &lt;p&gt;Perception&lt;/p&gt;
    &lt;p&gt;Modeling&lt;/p&gt;
    &lt;p&gt;Manipulation&lt;/p&gt;
    &lt;p&gt;Reasoning&lt;/p&gt;
    &lt;p&gt; The remarkable zero-shot capabilities of Large Language Models (LLMs) have propelled natural language processing from task-specific models to unified, generalist foundation models. This transformation emerged from simple primitives: large, generative models trained on web-scale data. Curiously, the same primitives apply to today's generative video models. Could video models be on a trajectory towards general-purpose vision understanding, much like LLMs developed general-purpose language understanding?&lt;lb/&gt; We demonstrate that Veo 3 can zero-shot solve a broad variety of tasks it wasn't explicitly trained for: segmenting objects, detecting edges, editing images, understanding physical properties, recognizing object affordances, simulating tool use, and much more. These abilities to perceive, model, and manipulate the visual world enable early forms of visual reasoning like maze and symmetry solving. Veo 3's emergent zero-shot capabilities indicate that video models are on a path to becoming unified, generalist vision foundation models. &lt;/p&gt;
    &lt;p&gt;On a run and want to get a gist of our paper? Listen to the following podcast!&lt;/p&gt;
    &lt;p&gt;Edge detection&lt;/p&gt;
    &lt;p&gt;Segmentation&lt;/p&gt;
    &lt;p&gt;Keypoint localization&lt;/p&gt;
    &lt;p&gt;Super-resolution&lt;/p&gt;
    &lt;p&gt;Blind deblurring&lt;/p&gt;
    &lt;p&gt;Blind denoising&lt;/p&gt;
    &lt;p&gt;Low-light enhancement&lt;/p&gt;
    &lt;p&gt;Conjunctive search / binding problem&lt;/p&gt;
    &lt;p&gt;Dalmatian illusion understanding&lt;/p&gt;
    &lt;p&gt;Shape cue-conflict understanding&lt;/p&gt;
    &lt;p&gt;Rorschach blot interpretation&lt;/p&gt;
    &lt;p&gt;Material properties (flammability)&lt;/p&gt;
    &lt;p&gt;Rigid body transform&lt;/p&gt;
    &lt;p&gt;Soft body transform&lt;/p&gt;
    &lt;p&gt;Gravity (earth)&lt;/p&gt;
    &lt;p&gt;Gravity (moon)&lt;/p&gt;
    &lt;p&gt;Buoyancy (bottle cap)&lt;/p&gt;
    &lt;p&gt;Buoyancy (rock)&lt;/p&gt;
    &lt;p&gt;Visual Jenga&lt;/p&gt;
    &lt;p&gt;Object packing&lt;/p&gt;
    &lt;p&gt;Material optics (glass)&lt;/p&gt;
    &lt;p&gt;Material optics (mirror)&lt;/p&gt;
    &lt;p&gt;Color mixing (additive)&lt;/p&gt;
    &lt;p&gt;Color mixing (subtractive)&lt;/p&gt;
    &lt;p&gt;Categorizing objects&lt;/p&gt;
    &lt;p&gt;Omniglot (recognition)&lt;/p&gt;
    &lt;p&gt;Omniglot (generation)&lt;/p&gt;
    &lt;p&gt;Omniglot (parsing)&lt;/p&gt;
    &lt;p&gt;Memory of world states&lt;/p&gt;
    &lt;p&gt;Background removal&lt;/p&gt;
    &lt;p&gt;Style transfer&lt;/p&gt;
    &lt;p&gt;Colorization&lt;/p&gt;
    &lt;p&gt;Inpainting&lt;/p&gt;
    &lt;p&gt;Outpainting&lt;/p&gt;
    &lt;p&gt;Text manipulation&lt;/p&gt;
    &lt;p&gt;Image editing with doodles&lt;/p&gt;
    &lt;p&gt;Scene composition&lt;/p&gt;
    &lt;p&gt;Novel view synthesis&lt;/p&gt;
    &lt;p&gt;3D-aware reposing&lt;/p&gt;
    &lt;p&gt;Transfiguration&lt;/p&gt;
    &lt;p&gt;Professional headshot&lt;/p&gt;
    &lt;p&gt;Dexterous manipulation (jar)&lt;/p&gt;
    &lt;p&gt;Dexterous manipulation (throw/catch)&lt;/p&gt;
    &lt;p&gt;Dexterous manipulation (baoding balls)&lt;/p&gt;
    &lt;p&gt;Affordance recognition&lt;/p&gt;
    &lt;p&gt;Drawing&lt;/p&gt;
    &lt;p&gt;Visual instruction (burrito)&lt;/p&gt;
    &lt;p&gt;Graph traversal&lt;/p&gt;
    &lt;p&gt;Tree BFS&lt;/p&gt;
    &lt;p&gt;Sequence (dots)&lt;/p&gt;
    &lt;p&gt;Sequence (arrows)&lt;/p&gt;
    &lt;p&gt;Sequence (circles)&lt;/p&gt;
    &lt;p&gt;Sequence (squares)&lt;/p&gt;
    &lt;p&gt;Connecting colors&lt;/p&gt;
    &lt;p&gt;Shape fitting&lt;/p&gt;
    &lt;p&gt;Sorting numbers&lt;/p&gt;
    &lt;p&gt;Tool use&lt;/p&gt;
    &lt;p&gt;Simple sudoku completion&lt;/p&gt;
    &lt;p&gt;Water puzzle solving&lt;/p&gt;
    &lt;p&gt;Maze solving (mouse)&lt;/p&gt;
    &lt;p&gt;Robot navigation&lt;/p&gt;
    &lt;p&gt;Rule extrapolation&lt;/p&gt;
    &lt;p&gt;Analogy (color)&lt;/p&gt;
    &lt;p&gt;Analogy (resize)&lt;/p&gt;
    &lt;p&gt;Analogy (reflect)&lt;/p&gt;
    &lt;p&gt;Analogy (rotate)&lt;/p&gt;
    &lt;p&gt;Maze (5x5)&lt;/p&gt;
    &lt;p&gt;Maze (7x7)&lt;/p&gt;
    &lt;p&gt;Maze (9x9)&lt;/p&gt;
    &lt;p&gt;Maze (irregular)&lt;/p&gt;
    &lt;p&gt;Symmetry (shape)&lt;/p&gt;
    &lt;p&gt;Symmetry (random)&lt;/p&gt;
    &lt;quote&gt;@article{wiedemer2025video, title={Video models are zero-shot learners and reasoners}, author={Wiedemer, Thadd√§us and Li, Yuxuan and Vicol, Paul and Gu, Shixiang Shane and Matarese, Nick and Swersky, Kevin and Kim, Been and Jaini, Priyank and Geirhos, Robert}, journal={arXiv preprint arXiv:TBD}, year={2025} }&lt;/quote&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45372289</guid><pubDate>Thu, 25 Sep 2025 13:13:34 +0000</pubDate></item><item><title>Demand for human radiologists is at an all-time high</title><link>https://www.worksinprogress.news/p/why-ai-isnt-replacing-radiologists</link><description>&lt;doc fingerprint="2fd9d9d02935859e"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;AI isn't replacing radiologists&lt;/head&gt;
    &lt;head rend="h3"&gt;Radiology combines digital images, clear benchmarks, and repeatable tasks. But demand for human radiologists is at an all-time high.&lt;/head&gt;
    &lt;p&gt;Works in Progress is becoming a print magazine. Our first print issue, Issue 21, will land in November. If you live in the United States or the United Kingdom, you can subscribe here. If you live outside the US or UK and want to be notified as soon as subscriptions are live in your country, leave your details here.&lt;/p&gt;
    &lt;p&gt;CheXNet can detect pneumonia with greater accuracy than a panel of board-certified radiologists. It is an AI model released in 2017, trained on more than 100,000 chest X-rays. It is fast, free, and can run on a single consumer-grade GPU. A hospital can use it to classify a new scan in under a second.&lt;/p&gt;
    &lt;p&gt;Since then, companies like Annalise.ai, Lunit, Aidoc, and Qure.ai have released models that can detect hundreds of diseases across multiple types of scans with greater accuracy and speed than human radiologists in benchmark tests. Some products can reorder radiologist worklists to prioritize critical cases, suggest next steps for care teams, or generate structured draft reports that fit into hospital record systems. A few, like IDx-DR, are even cleared to operate without a physician reading the image at all. In total, there are over 700 FDA-cleared radiology models, which account for roughly three-quarters of all medical AI devices.&lt;/p&gt;
    &lt;p&gt;Radiology is a field optimized for human replacement, where digital inputs, pattern recognition tasks, and clear benchmarks predominate. In 2016, Geoffrey Hinton ‚Äì computer scientist and Turing Award winner ‚Äì declared that ‚Äòpeople should stop training radiologists now‚Äô. If the most extreme predictions about the effect of AI on employment and wages were true, then radiology should be the canary in the coal mine.&lt;/p&gt;
    &lt;p&gt;But demand for human labor is higher than ever. In 2025, American diagnostic radiology residency programs offered a record 1,208 positions across all radiology specialties, a four percent increase from 2024, and the field‚Äôs vacancy rates are at all-time highs. In 2025, radiology was the second-highest-paid medical specialty in the country, with an average income of $520,000, over 48 percent higher than the average salary in 2015.&lt;/p&gt;
    &lt;p&gt;Three things explain this. First, while models beat humans on benchmarks, the standardized tests designed to measure AI performance, they struggle to replicate this performance in hospital conditions. Most tools can only diagnose abnormalities that are common in training data, and models often don‚Äôt work as well outside of their test conditions. Second, attempts to give models more tasks have run into legal hurdles: regulators and medical insurers so far are reluctant to approve or cover fully autonomous radiology models. Third, even when they do diagnose accurately, models replace only a small share of a radiologist‚Äôs job. Human radiologists spend a minority of their time on diagnostics and the majority on other activities, like talking to patients and fellow clinicians.&lt;/p&gt;
    &lt;p&gt;Artificial intelligence is rapidly spreading across the economy and society. But radiology shows us that it will not necessarily dominate every field in its first years of diffusion ‚Äî at least until these common hurdles are overcome. Exploiting all of its benefits will involve adapting it to society, and society‚Äôs rules to it.&lt;/p&gt;
    &lt;head rend="h2"&gt;Islands of automation&lt;/head&gt;
    &lt;p&gt;All AIs are functions or algorithms, called models, that take in inputs and spit out outputs. Radiology models are trained to detect a finding, which is a measurable piece of evidence that helps identify or rule out a disease or condition. Most radiology models detect a single finding or condition in one type of image. For example, a model might look at a chest CT and answer whether there are lung nodules, rib fractures, or what the coronary arterial calcium score is.&lt;/p&gt;
    &lt;p&gt;For every individual question, a new model is required. In order to cover even a modest slice of what they see in a day, a radiologist would need to switch between dozens of models and ask the right questions of each one. Several platforms manage, run, and interpret outputs from dozens or even hundreds of separate AI models across vendors, but each model operates independently, analyzing for one finding or disease at a time. The final output is a list of separate answers to specific questions, rather than a single description of an image.&lt;/p&gt;
    &lt;p&gt;Even with hundreds of imaging algorithms approved by the Food and Drug Administration (FDA) on the market, the combined footprint of today‚Äôs radiology AI models still cover only a small fraction of real-world imaging tasks. Many cluster around a few use cases: stroke, breast cancer, and lung cancer together account for about 60 percent of models, but only a minority of the actual radiology imaging volume that is carried out in the US. Other subspecialties, such as vascular, head and neck, spine, and thyroid imaging currently have relatively few AI products. This is in part due to data availability: the scan needs to be common enough for there to be many annotated examples that can be used to train models. Some scans are also inherently more complicated than others. For example, ultrasounds are taken from multiple angles and do not have standard imaging planes, unlike X-rays.&lt;/p&gt;
    &lt;p&gt;Once deployed outside of the hospital where they were initially trained, models can struggle. In a standard clinical trial, samples are taken from multiple hospitals to ensure exposure to a broad range of patients and to avoid site-specific effects, such as a single doctor‚Äôs technique or how a hospital chooses to calibrate its diagnostic equipment.1 But when an algorithm is undergoing regulatory approval in the US, its developers will normally test it on a relatively narrow dataset. Out of the models in 2024 that reported the number of sites where they were tested, 38 percent were tested on data from a single hospital. Public benchmarks tend to rely on multiple datasets from the same hospital.&lt;/p&gt;
    &lt;p&gt;The performance of a tool can drop as much as 20 percentage points when it is tested out of sample, on data from other hospitals. In one study, a pneumonia detection model trained on chest X-rays from a single hospital performed substantially worse when tested at a different hospital. Some of these challenges stemmed from avoidable experimental issues like overfitting, but others are indicative of deeper problems like differences in how hospitals record and generate data, such as using slightly different imaging equipment. This means that individual hospitals or departments would need to retrain or revalidate today‚Äôs crop of tools before adopting them, even if they have been proven elsewhere.&lt;/p&gt;
    &lt;p&gt;The limitations of radiology models stem from deeper problems with building medical AI. Training datasets come with strict inclusion criteria, where the diagnosis must be unambiguous (typically confirmed by a consensus of two to three experts or a pathology result) and without images that are shot at an odd angle, look too dark, or are blurry. This skews performance towards the easiest cases, which doctors are already best at diagnosing, and away from real-world images. In one 2022 study, an algorithm that was meant to spot pneumonia on chest X-rays faltered when the disease presented in subtle or mild forms, or when other lung conditions resembled pneumonia, such as pleural effusions, where fluid builds up in lungs, or in atelectasis (collapsed lung). Humans also benefit from context: one radiologist told me about a model they use that labels surgical staples as hemorrhages, because of the bright streaks they create in the image.&lt;/p&gt;
    &lt;p&gt;Medical imaging datasets used for training also tend to have fewer cases from children, women, and ethnic minorities, making their performance generally worse for these demographics. Many lack information about the gender or race of cases at all, making it difficult to adjust for these issues and address the problem of bias. The result is that radiology models often predict only a narrow slice of the world,2 though there are scenarios where AI models do perform well, including identifying common diseases like pneumonia or certain tumors.&lt;/p&gt;
    &lt;p&gt;The problems don‚Äôt stop there. Even a model for the precise question you need and in the hospital where it was trained is unlikely to perform as well in clinical practice as it did in the benchmark. In benchmark studies, researchers isolate a cohort of scans, define goals in quantitative metrics, such as the sensitivity (the percentage of people with the condition who are correctly identified by the test) and specificity (the percentage of people without the condition who are correctly identified as such), and compare the performance of a model to the score of another reviewer, typically a human doctor. Clinical studies, on the other hand, show how well the model performs in a real healthcare setting without controls. Since the earliest days of computer-aided diagnosis, there has been a gulf between benchmark and clinical performance.&lt;/p&gt;
    &lt;p&gt;In the 1990s, computer-aided diagnosis, effectively rudimentary AI systems, were developed to screen mammograms, or X-rays of breasts that are performed to look for breast cancer. In trials, the combination of humans and computer-aided diagnosis systems outperformed humans alone in accuracy when evaluating mammograms. More controlled experiments followed, which pointed to computer-aided diagnosis helping radiologists pick up more cancer with minimal costs.&lt;/p&gt;
    &lt;p&gt;The FDA approved mammography computer-aided diagnosis in 1998, and Medicare started to reimburse the use of computer-aided diagnosis in 2001. The US government paid radiologists $7 more to report a screening mammogram if they used the technology; by 2010, approximately 74 percent of mammograms in the country were read by computer-aided diagnosis alongside a clinician.&lt;/p&gt;
    &lt;p&gt;But computer-aided diagnosis turned out to be a disappointment. Between 1998 and 2002 researchers analyzed 430,000 screening mammograms from 200,000 women at 43 community clinics in Colorado, New Hampshire, and Washington. Among the seven clinics that turned to computer-aided detection software, the machines flagged more images, leading to clinicians conducting 20 percent more biopsies, but uncovering no more cancer than before. Several other large clinical studies had similar findings.&lt;/p&gt;
    &lt;p&gt;Another way to measure performance is to compare having computerized help to a second clinician reading every film, called ‚Äòdouble reading‚Äô. Across ten trials and seventeen studies of double reading, researchers found that computer aids did not raise the cancer detection rate but led to patients being called back an additional ten percent more often. In contrast, having two readers caught more cancers while slightly lowering callbacks. Computer-aided detection was worse than standard care, and much worse than another pair of eyes. In 2018, Medicare stopped reimbursing doctors more for mammograms read with computer-aided diagnosis than those read by a radiologist alone.&lt;/p&gt;
    &lt;p&gt;One explanation for this gap is that people behave differently if they are treating patients day to day than when they are part of laboratory studies or other controlled experiments.3 In particular, doctors appear to defer excessively to assistive AI tools in clinical settings in a way that they do not in lab settings. They did this even with much more primitive tools than we have today: one clinical trial all the way back in 2004 asked 20 breast screening specialists to read mammogram cases with the computer prompts switched on, then brought in a new group to read the identical films without the software. When guided by computer aids, doctors identified barely half of the malignancies, while those reviewing without the model caught 68 percent. The gap was largest when computer aids failed to recognize the malignancy itself; many doctors seemed to treat an absence of prompts as reassurance that a film was clean. Another review, this time from 2011, found that when a system gave incorrect guidance, clinicians were 26 percent more likely to make a wrong decision than unaided peers.&lt;/p&gt;
    &lt;head rend="h2"&gt;Humans in the loop&lt;/head&gt;
    &lt;p&gt;It would seem as if better models and more automation could together fix the problems of current-day AI for radiology. Without a doctor involved whose behavior might change we might expect real-world results to match benchmark scores. But regulatory requirements and insurance policies are slowing the adoption of fully autonomous radiology AI.&lt;/p&gt;
    &lt;p&gt;The FDA splits imaging software into two regulatory lanes: assistive or triage tools, which require a licensed physician to read the scan and sign the chart, and autonomous tools, which do not. Makers of assistive tools simply have to show that their software can match the performance of tools that are already on the market. Autonomous tools have to clear a much higher bar: they must demonstrate that the AI tool will refuse to read any scan that is blurry, uses an unusual scanner, or is outside its competence. The bar is higher because, once the human disappears, a latent software defect could harm thousands before anyone notices.&lt;/p&gt;
    &lt;p&gt;Meeting that criteria is difficult. Even state-of-the-art vision networks falter with images that lack contrast, have unexpected angles, or lots of different artefacts. IDx-DR, a diabetic retinopathy screener and one of the few cleared to operate autonomously, comes with guardrails: the patient must be an adult with no prior retinopathy diagnosis; there must be two macula-centred photographs of the fundus (the rear of the eye) with a resolution of at least 1,000 times 1,000 pixels; if glare, small pupils or poor focus degrade quality, the software must self-abort and refer the patient to an eye care professional.&lt;/p&gt;
    &lt;p&gt;Stronger evidence and improved performance could eventually clear both hurdles, but other requirements would still delay widespread use. For example, if you retrain a model, you are required to receive new approval even if the previous model was approved. This contributes to the market generally lagging behind frontier capabilities.&lt;/p&gt;
    &lt;p&gt;And when autonomous models are approved, malpractice insurers are not eager to cover them. Diagnostic error is the costliest mistake in American medicine, resulting in roughly a third of all malpractice payouts, and radiologists are perennial defendants. Insurers believe that software makes catastrophic payments more likely than a human clinician, as a broken algorithm can harm many patients at once. Standard contract language now often includes phrases such as: ‚ÄòCoverage applies solely to interpretations reviewed and authenticated by a licensed physician; no indemnity is afforded for diagnoses generated autonomously by software‚Äô. One insurer, Berkley, even carries the blunter label ‚ÄòAbsolute AI Exclusion‚Äô.&lt;/p&gt;
    &lt;p&gt;Without malpractice coverage, hospitals cannot afford to let algorithms sign reports. In the case of IDx-DR, the vendor, Digital Diagnostics, includes a product liability policy and an indemnity clause. This means that if the clinic used the device exactly as the FDA label prescribes, with adult patients, good-quality images, and no prior retinopathy, then the company will reimburse the clinic for damages traceable to algorithmic misclassification.&lt;/p&gt;
    &lt;p&gt;Today, if American hospitals wanted to adopt AI for fully independent diagnostic reads, they would need to believe that autonomous models deliver enough cost savings or throughput gains to justify pushing for exceptions to credentialing and billing norms. For now, usage is too sparse to make a difference. One 2024 investigation estimated that 48 percent of radiologists are using AI at all in their practice. A 2025 survey reported that only 19 percent of respondents who have started piloting or deploying AI use cases in radiology reported a ‚Äòhigh‚Äô degree of success.&lt;/p&gt;
    &lt;head rend="h2"&gt;Better AI, more MRIs&lt;/head&gt;
    &lt;p&gt;Even if AI models become accurate enough to read scans on their own and are cleared to do so, radiologists may still find themselves busier, rather than out of a career.&lt;/p&gt;
    &lt;p&gt;Radiologists are useful for more than reading scans; a study that followed staff radiologists in three different hospitals in 2012 found that only 36 percent of their time was dedicated to direct image interpretation. More time is spent on overseeing imaging examinations, communicating results and recommendations to the treating clinicians and occasionally directly to patients, teaching radiology residents and technologists who conduct the scans, and reviewing imaging orders and changing scanning protocols.4 This means that, if AI were to get better at interpreting scans, radiologists may simply shift their time toward other tasks. This would reduce the substitution effect of AI.&lt;/p&gt;
    &lt;p&gt;As tasks get faster or cheaper to perform, we may also do more of them. In some cases, especially if lower costs or faster turnaround times open the door to new uses, the increase in demand can outweigh the increase in efficiency, a phenomenon known as Jevons paradox. This has historical precedent in the field: in the early 2000s hospitals swapped film jackets for digital systems. Hospitals that digitized improved radiologist productivity, and time to read an individual scan went down. A study at Vancouver General found that the switch boosted radiologist productivity 27 percent for plain radiography and 98 percent for CT within a year of going filmless. This occurred alongside other advancements in imaging technology that made scans faster to execute. Yet, no radiologists were laid off.&lt;/p&gt;
    &lt;p&gt;Instead, the overall American utilization rate per 1,000 insured patients for all imaging increased by 60 percent from 2000 to 2008. This is not explained by a commensurate increase in physician visits. Instead, each visit was associated with more imaging on average. Before digitization, the nonmonetary price of imaging was high: the median reporting turnaround time for x-rays was 76 hours for patients discharged from emergency departments, and 84 hours for admitted patients. After departments digitized, these times dropped to 38 hours and 35 hours, respectively.&lt;/p&gt;
    &lt;p&gt;Faster scans give doctors more options. Until the early 2000s, only exceptional trauma cases would receive whole-body CT scans; the increased speed of CT turnaround times mean that they are now a common choice. This is a reflection of elastic demand, a concept in economics that describes when demand for a product or service is very sensitive to changes in price. In this case, when these scans got cheaper in terms of waiting time, demand for those scans increased.&lt;/p&gt;
    &lt;head rend="h2"&gt;The first decade of diffusion&lt;/head&gt;
    &lt;p&gt;Over the past decade, improvements in image interpretation have run far ahead of their diffusion. Hundreds of models can spot bleeds, nodules, and clots, yet AI is often limited to assistive use on a small subset of scans in any given practice. And despite predictions to the contrary, head counts and salaries have continued to rise. The promise of AI in radiology is overstated by benchmarks alone.&lt;/p&gt;
    &lt;p&gt;Multi‚Äëtask foundation models may widen coverage, and different training sets could blunt data gaps. But many hurdles cannot be removed with better models alone: the need to counsel the patient, shoulder malpractice risk, and receive accreditation from regulators. Each hurdle makes full substitution the expensive, risky option and human plus machine the default. Sharp increases in AI capabilities could certainly alter this dynamic, but it is a useful model for the first years of AI models that benchmark well at tasks associated with a particular career.&lt;/p&gt;
    &lt;p&gt;There are industries where conditions are different. Large platforms rely heavily on AI systems to triage or remove harmful or policy-violating content. At Facebook and Instagram, 94 percent and 98 percent of moderation decisions respectively are made by machines. But many of the more sophisticated knowledge jobs look more like radiology.&lt;/p&gt;
    &lt;p&gt;In many jobs, tasks are diverse, stakes are high, and demand is elastic. When this is the case, we should expect software to initially lead to more human work, not less. The lesson from a decade of radiology models is neither optimism about increased output nor dread about replacement. Models can lift productivity, but their implementation depends on behavior, institutions and incentives. For now, the paradox has held: the better the machines, the busier radiologists have become.&lt;/p&gt;
    &lt;p&gt;Deena Mousa is a lead researcher at Open Philanthropy. Follow her on Twitter.&lt;/p&gt;
    &lt;p&gt;A few groups have started doing this, like the 2025 ‚ÄòOpenMIBOOD‚Äô suite which explicitly scores chest-X-ray models on 14 out-of-distribution collections, but that hasn‚Äôt yet become standard.&lt;/p&gt;
    &lt;p&gt;A few companies and research groups are working to mitigate this, such as by training on multi-site datasets, building synthetic cases, or using self-supervised learning to reduce labeling needs, but these approaches are still early and expensive. This limitation is an important reason why AI models do not yet perform as expected.&lt;/p&gt;
    &lt;p&gt;One study tracked 27 mammographers and compared how well each interpreted real screening films versus a standardised ‚Äòtest-set‚Äô of the same images. The researchers found no meaningful link between a radiologist‚Äôs accuracy in the lab and accuracy on live patients; the statistical correlation in sensitivity-specificity scores was essentially zero.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45372335</guid><pubDate>Thu, 25 Sep 2025 13:19:47 +0000</pubDate></item><item><title>Launch HN: Webhound (YC S23) ‚Äì Research agent that builds datasets from the web</title><link>https://news.ycombinator.com/item?id=45373008</link><description>&lt;doc fingerprint="354a104b23ad844a"&gt;
  &lt;main&gt;
    &lt;div&gt;&lt;p&gt;We're the team behind Webhound (&lt;/p&gt;https://webhound.ai&lt;p&gt;), an AI agent that builds datasets from the web based on natural language prompts. You describe what you're trying to find. The agent figures out how to structure the data and where to look, then searches, extracts the results, and outputs everything in a CSV you can export.&lt;/p&gt;&lt;p&gt;We've set up a special no-signup version for the HN community at https://hn.webhound.ai - just click "Continue as Guest" to try it without signing up.&lt;/p&gt;&lt;p&gt;Here's a demo: https://youtu.be/fGaRfPdK1Sk&lt;/p&gt;&lt;p&gt;We started building it after getting tired of doing this kind of research manually. Open 50 tabs, copy everything into a spreadsheet, realize it's inconsistent, start over. It felt like something an LLM should be able to handle.&lt;/p&gt;&lt;p&gt;Some examples of how people have used it in the past month:&lt;/p&gt;&lt;p&gt;Competitor analysis: "Create a comparison table of internal tooling platforms (Retool, Appsmith, Superblocks, UI Bakery, BudiBase, etc) with their free plan limits, pricing tiers, onboarding experience, integrations, and how they position themselves on their landing pages." (https://www.webhound.ai/dataset/c67c96a6-9d17-4c91-b9a0-ff69...)&lt;/p&gt;&lt;p&gt;Lead generation: "Find Shopify stores launched recently that sell skincare products. I want the store URLs, founder names, emails, Instagram handles, and product categories." (https://www.webhound.ai/dataset/b63d148a-8895-4aab-ac34-455e...)&lt;/p&gt;&lt;p&gt;Pricing tracking: "Track how the free and paid plans of note-taking apps have changed over the past 6 months using official sites and changelogs. List each app with a timeline of changes and the source for each." (https://www.webhound.ai/dataset/c17e6033-5d00-4e54-baf6-8dea...)&lt;/p&gt;&lt;p&gt;Investor mapping: "Find VCs who led or participated in pre-seed or seed rounds for browser-based devtools startups in the past year. Include the VC name, relevant partners, contact info, and portfolio links for context." (https://www.webhound.ai/dataset/1480c053-d86b-40ce-a620-37fd...)&lt;/p&gt;&lt;p&gt;Research collection: "Get a list of recent arXiv papers on weak supervision in NLP. For each, include the abstract, citation count, publication date, and a GitHub repo if available." (https://www.webhound.ai/dataset/e274ca26-0513-4296-85a5-2b7b...)&lt;/p&gt;&lt;p&gt;Hypothesis testing: "Check if user complaints about Figma's performance on large files have increased in the last 3 months. Search forums like Hacker News, Reddit, and Figma's community site and show the most relevant posts with timestamps and engagement metrics." (https://www.webhound.ai/dataset/42b2de49-acbf-4851-bbb7-080b...)&lt;/p&gt;&lt;p&gt;The first version of Webhound was a single agent running on Claude 4 Sonnet. It worked, but sessions routinely cost over $1100 and it would often get lost in infinite loops. We knew that wasn't sustainable, so we started building around smaller models.&lt;/p&gt;&lt;p&gt;That meant adding more structure. We introduced a multi-agent system to keep it reliable and accurate. There's a main agent, a set of search agents that run subtasks in parallel, a critic agent that keeps things on track, and a validator that double-checks extracted data before saving it. We also gave it a notepad for long-term memory, which helps avoid duplicates and keeps track of what it's already seen.&lt;/p&gt;&lt;p&gt;After switching to Gemini 2.5 Flash and layering in the agent system, we were able to cut costs by more than 30x while also improving speed and output quality.&lt;/p&gt;&lt;p&gt;The system runs in two phases. First is planning, where it decides the schema, how to search, what sources to use, and how to know when it's done. Then comes extraction, where it executes the plan and gathers the data.&lt;/p&gt;&lt;p&gt;It uses a text-based browser we built that renders pages as markdown and extracts content directly. We tried full browser use but it was slower and less reliable. Plain text still works better for this kind of task.&lt;/p&gt;&lt;p&gt;We also built scheduled refreshes to keep datasets up to date and an API so you can integrate the data directly into your workflows.&lt;/p&gt;&lt;p&gt;Right now, everything stays in the agent's context during a run. It starts to break down around 1000-5000 rows depending on the number of attributes. We're working on a better architecture for scaling past that.&lt;/p&gt;&lt;p&gt;We'd love feedback, especially from anyone who's tried solving this problem or built similar tools. Happy to answer anything in the thread.&lt;/p&gt;&lt;p&gt;Thanks! Moe&lt;/p&gt;&lt;/div&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45373008</guid><pubDate>Thu, 25 Sep 2025 14:28:24 +0000</pubDate></item><item><title>Cloudflare Email Service: private beta</title><link>https://blog.cloudflare.com/email-service/</link><description>&lt;doc fingerprint="ee97ad5b3f10bcad"&gt;
  &lt;main&gt;
    &lt;div&gt;
      &lt;p&gt;If you are building an application, you rely on email to communicate with your users. You validate their signup, notify them about events, and send them invoices through email. The service continues to find new purpose with agentic workflows and other AI-powered tools that rely on a simple email as an input or output.&lt;/p&gt;
      &lt;p&gt;And it is a pain for developers to manage. It√¢s frequently the most annoying burden for most teams. Developers deserve a solution that is simple, reliable, and deeply integrated into their workflow.√Ç &lt;/p&gt;
      &lt;p&gt;Today, we're excited to announce just that: the private beta of Email Sending, a new capability that allows you to send transactional emails directly from Cloudflare Workers. Email Sending joins and expands our popular Email Routing product, and together they form the new Cloudflare Email Service √¢ a single, unified developer experience for all your email needs.&lt;/p&gt;
      &lt;p&gt;With Cloudflare Email Service, we√¢re distilling our years of experience securing and routing emails, and combining it with the power of the developer platform. Now, sending an email is as easy as adding a binding to a Worker and calling &lt;code&gt;send&lt;/code&gt;:&lt;/p&gt;
      &lt;quote&gt;
        &lt;code&gt;export default {
  async fetch(request, env, ctx) {

    await env.SEND_EMAIL.send({
      to: [{ email: "[email¬†protected]" }],
      from: { email: "[email¬†protected]", name: "Your App" },
      subject: "Hello World",
      text: "Hello World!"
    });

    return new Response(`Successfully sent email!`);
  },
};&lt;/code&gt;
      &lt;/quote&gt;
      &lt;div&gt;
        &lt;head rend="h3"&gt;Email experience is user experience&lt;/head&gt;
      &lt;/div&gt;
      &lt;p&gt;Email is a core tenet of your user experience. It√¢s how you stay in touch with your users when they are outside your applications. Users rely on email to inform them when they need to take actions such as password resets, purchase receipts, magic login links, and onboarding flows. When they fail, your application fails.&lt;/p&gt;
      &lt;p&gt;That means it√¢s crucial that emails need to land in your users√¢ inboxes, both reliably and quickly. A magic link that arrives ten minutes late is a lost user. An email delivered to a spam folder breaks user flows and can erode trust in your product. That√¢s why we√¢re focusing on deliverability and time-to-inbox with Cloudflare Email Service.√Ç &lt;/p&gt;
      &lt;p&gt;To do this, we√¢re tightly integrating with DNS to automatically configure the necessary DNS records √¢ like SPF, DKIM and DMARC √¢ such that email providers can verify your sending domain and trust your emails. Plus, in true Cloudflare fashion, Email Service is a global service. That means that we can deliver your emails with low latency anywhere in the world, without the complexity of managing servers across regions.&lt;/p&gt;
      &lt;div&gt;
        &lt;head rend="h3"&gt;Simple and flexible for developers&lt;/head&gt;
      &lt;/div&gt;
      &lt;p&gt;Treating email as a core piece of your application also means building for every touchpoint in your development workflow. We√¢re building Email Service as part of the Cloudflare stack to make developing with email feels as natural as writing a Worker.√Ç &lt;/p&gt;
      &lt;p&gt;In practice, that means solving for every part of the transactional email workflow:&lt;/p&gt;
      &lt;list rend="ul"&gt;
        &lt;item&gt;
          &lt;p&gt;Starting with Email Service is easy. Instead of managing API keys and secrets, you can use the &lt;code&gt;Email&lt;/code&gt; binding to your &lt;code&gt;wrangler.jsonc&lt;/code&gt; and send emails securely and with no risk of leaked credentials.√Ç¬†&lt;/p&gt;
        &lt;/item&gt;
        &lt;item&gt;
          &lt;p&gt;You can use Workers to process incoming mail, store attachments in R2, and add tasks to Queues to get email sending off the hot path of your application. And you can use &lt;code&gt;wrangler&lt;/code&gt; to emulate Email Sending locally, allowing you to test your user journeys without jumping between tools and environments.&lt;/p&gt;
        &lt;/item&gt;
        &lt;item&gt;
          &lt;p&gt;In production, you have clear observability over your emails with bounce rates and delivery events. And, when a user reports a missing email, you can quickly dive into the delivery status to debug issues quickly and help get your user back on track.&lt;/p&gt;
        &lt;/item&gt;
      &lt;/list&gt;
      &lt;p&gt;We√¢re also making sure Email Service seamlessly fits into your existing applications. If you need to send emails from external services, you can do so using either REST APIs or SMTP. Likewise, if you√¢ve been leaning on existing email frameworks (like React Email) to send rich, HTML-rendered emails to users, you can continue to use them with Email Service. Import the library, render your template, and pass it to the `send` method just as you would elsewhere.&lt;/p&gt;
      &lt;quote&gt;
        &lt;code&gt;import { render, pretty, toPlainText } from '@react-email/render';
import { SignupConfirmation } from './templates';

export default {
  async fetch(request, env, ctx) {

    // Convert React Email template to html
    const html = await pretty(await render(&amp;lt;SignupConfirmation url="https://your-domain.com/confirmation-id"/&amp;gt;));

    // Use the Email Sending binding to send emails
    await env.SEND_EMAIL.send({
      to: [{ email: "[email¬†protected]" }],
      from: { email: "[email¬†protected]", name: "Welcome" },
      subject: "Signup Confirmation",
      html,
      text: toPlainText(html)
    });

    return new Response(`Successfully sent email!`);
  }
};&lt;/code&gt;
      &lt;/quote&gt;
      &lt;div&gt;
        &lt;head rend="h3"&gt;Email Routing and Email Sending: Better together&lt;/head&gt;
      &lt;/div&gt;
      &lt;p&gt;Sending email is only half the story. Applications often need to receive and parse emails to create powerful workflows. By combining Email Sending with our existing Email Routing capabilities, we're providing a complete, end-to-end solution for all your application's email needs.&lt;/p&gt;
      &lt;p&gt;Email Routing allows you to create custom email addresses on your domain and handle incoming messages programmatically with a Worker, which can enable powerful application flows such as:&lt;/p&gt;
      &lt;list rend="ul"&gt;
        &lt;item&gt;
          &lt;p&gt;Using Workers AI to parse, summarize and even label incoming emails: flagging security events from customers, early signs of a bug or incident, and/or generating automatic responses based on those incoming emails.&lt;/p&gt;
        &lt;/item&gt;
        &lt;item&gt;
          &lt;p&gt;Creating support tickets in systems like JIRA or Linear from emails sent to &lt;code&gt;[email¬†protected]&lt;/code&gt;.&lt;/p&gt;
        &lt;/item&gt;
        &lt;item&gt;
          &lt;p&gt;Processing invoices sent to &lt;code&gt;[email¬†protected]&lt;/code&gt; and storing attachments in R2.&lt;/p&gt;
        &lt;/item&gt;
      &lt;/list&gt;
      &lt;p&gt;To use Email Routing, add the &lt;code&gt;email&lt;/code&gt; handler to your Worker application and process it as needed:&lt;/p&gt;
      &lt;quote&gt;
        &lt;code&gt;export default {
  // Create an email handler to process emails delivered to your Worker
  async email(message, env, ctx) {

    // Classify incoming emails using Workers AI
    const { score, label } = env.AI.run("@cf/huggingface/distilbert-sst-2-int8", { text: message.raw" })

    env.PROCESSED_EMAILS.send({score, label, message});
  },
};  &lt;/code&gt;
      &lt;/quote&gt;
      &lt;p&gt;When you combine inbound routing with outbound sending, you can close the loop entirely within Cloudflare. Imagine a user emails your support address. A Worker can receive the email, parse its content, call a third-party API to create a ticket, and then use the Email Sending binding to send an immediate confirmation back to the user with their ticket number. That√¢s the power of a unified Email Service.&lt;/p&gt;
      &lt;p&gt;Email Sending will require a paid Workers subscription, and we'll be charging based on messages sent. We're still finalizing the packaging, and we'll update our documentation, changelog, and notify users as soon as we have final pricing and long before we start charging. Email Routing limits will remain unchanged.&lt;/p&gt;
      &lt;p&gt;Email is core to your application today, and it's becoming essential for the next generation of AI agents, background tasks, and automated workflows. We built the Cloudflare Email Service to be the engine for this new era of applications, we√¢ll be making it available in private beta this November.&lt;/p&gt;
      &lt;list rend="ul"&gt;
        &lt;item&gt;
          &lt;p&gt;Interested in Email Sending? Sign up to the waitlist here.√Ç &lt;/p&gt;
        &lt;/item&gt;
        &lt;item&gt;
          &lt;p&gt;Want to start processing inbound emails? Get started with Email Routing, which is available now, remains free and will be folded into the new email sending APIs coming.&lt;/p&gt;
        &lt;/item&gt;
      &lt;/list&gt;
      &lt;p&gt;We√¢re excited to be adding Email Service to our Developer Platform, and we√¢re looking forward to seeing how you reimagine user experiences that increasingly rely on emails!&lt;/p&gt;
    &lt;/div&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45373081</guid><pubDate>Thu, 25 Sep 2025 14:33:50 +0000</pubDate></item><item><title>The story of DOGE, as told by federal workers</title><link>https://www.wired.com/story/oral-history-doge-federal-workers/</link><description>&lt;doc fingerprint="7e60c110ece257dd"&gt;
  &lt;main&gt;
    &lt;p&gt;In August, months after Elon Musk left the federal government, the director of the Office of Personnel Management offered the first hard estimate of the so-called Department of Government Efficiency‚Äôs impact on the civil service. The government would likely end 2025 with about 300,000 fewer employees than it had at the start of the year, he told reporters. Most resignations were attributable to the incentives DOGE had offered the federal workforce to resign their positions. The total figure amounted to one in eight workers.&lt;/p&gt;
    &lt;p&gt;Well, almost. In recent weeks, hundreds of the employees DOGE pushed out have reportedly been offered reinstatement.&lt;/p&gt;
    &lt;p&gt;The true scope of DOGE‚Äôs attack on the federal government remains unknown. While there is no reason to think it achieved meaningful cost savings or operational efficiencies, the ramifications of building a master database to track and surveil immigrants are just beginning to be felt, and its cadre of Musk prot√©g√©s and tech entrepreneurs remain embedded in agencies throughout the executive branch. The possibilities this opens up‚Äîof private takeovers of government operations, of the government embracing Silicon Valley‚Äôs ethos of moving fast and breaking things‚Äîremain open.&lt;/p&gt;
    &lt;p&gt;WIRED spoke with more than 200 federal workers across dozens of agencies to gather the most comprehensive picture yet of how the American government got to this point, and where it may go from here. Many sources requested anonymity because they fear retaliation. They told WIRED not just what has been going on inside the federal government at a time of unprecedented change‚Äîbut what it‚Äôs been like to experience those changes firsthand.&lt;/p&gt;
    &lt;p&gt;The following is the story, in their words, of what happened when the world‚Äôs most powerful man unleashed the world‚Äôs richest one on the world‚Äôs most complex institution.&lt;/p&gt;
    &lt;p&gt;‚ÄúI kept comparing it to a natural disaster,‚Äù one worker at the Centers for Disease Control and Prevention told WIRED. ‚ÄúBut it wasn‚Äôt natural. Just a stampede of wide-eyed, confused government employees moving files around and looking over their shoulders because they think maybe Elon was creeping behind them with a chain saw.‚Äù&lt;/p&gt;
    &lt;p&gt;Donald Trump established DOGE within hours of taking office on January 20, assigning it the task of ‚Äúmodernizing Federal technology and software to maximize governmental efficiency and productivity.‚Äù Within days, Musk‚Äôs allies and their coterie of young, inexperienced technologists were appearing in the offices of relatively unknown agencies like the General Services Administration and the Office of Personnel Management‚Äîobtaining unprecedented access to government systems and personnel files in the process. The DOGE operatives included young men like Edward ‚ÄúBig Balls‚Äù Coristine, Kyle Schutt, and Ethan Shaotran, all of whom would go on to work at a number of government agencies, from the Department of Education to the Social Security Administration.&lt;/p&gt;
    &lt;p&gt;‚ÄúI met Kyle and Ethan on January 23, and I very briefly bumped into Coristine before anyone was talking about him. I would describe them all as giddy, excited, curious, passionate, and super interested in learning about and jumping in on this new thing. I was super excited too at first.&lt;/p&gt;
    &lt;p&gt;‚ÄúThen the next week it felt like everything shifted and suddenly they were no longer curious or asking questions or on an adventure and instead they were just frantically running around trying to do impossible shit with no context and no flexibility and no ability to push back.&lt;/p&gt;
    &lt;p&gt;‚ÄúI thought maybe it would turn around. But it never did.‚Äù ‚ÄîGeneral Services Administration (GSA) worker&lt;/p&gt;
    &lt;p&gt;‚ÄúThe first meeting with DOGE‚Äîreally the only meeting with DOGE, if I'm going to be honest‚Äîwas ‚Ä¶ a virtual meeting that was 30 minutes long. In typical DOGE fashion, the government organization that we were promised unbelievable transparency on, they don't turn the cameras on, they don't tell you who they are, they don't tell you if anybody else is in the room, so you have no idea who you're talking to.‚Äù ‚ÄîColin O‚ÄôBrien, former head of security at the United States Institute of Peace&lt;/p&gt;
    &lt;p&gt;‚ÄúWe saw them immediately. They acted like new hires but a bit furtive since they were actually instructed not to share their full names with us at first.‚Äù ‚ÄîTechnology Transformation Services worker&lt;/p&gt;
    &lt;p&gt;‚ÄúMy big aha moment came late, because for so long I was giving them the benefit of the doubt. These guys were young, and they had a job to do, and yes, they were doing it aggressively‚Äîbut again, I assumed the best. But then Ethan Shaotran went on Fox News, on Jesse Watters. He just trash-talked us pretty bad, conflating things they‚Äôd found at other agencies, basically implying we were misappropriating grant money. It made my blood boil. Ethan had to know that wasn‚Äôt true. That was it for me‚Äîthere is no good faith at all.‚Äù ‚ÄîFederal worker&lt;/p&gt;
    &lt;p&gt;‚ÄúThe vibe they gave was ‚ÄòSo, what is it that you do here?‚Äô and ‚ÄòWhy can‚Äôt AI do that?‚Äô‚Äù ‚ÄîTechnology Transformation Services worker&lt;/p&gt;
    &lt;p&gt;During the early weeks of the administration, emails from DOGE started showing up in federal workers‚Äô inboxes‚Äîor at least in their spam folders.&lt;/p&gt;
    &lt;p&gt;‚ÄúI logged on to find several emails tagged ‚ÄòExternal,‚Äô because DOGE just brought in their own servers and plugged them into the network. Then there were several subsequent emails from different leaders saying things like, ‚ÄòThank you for all the phishing reports, but the emails are real and need to be followed. But also please keep reporting things that look like phishing. Except from DOGE ‚Ä¶ but probably even then. And this is totally fine and normal.‚Äô‚Äù ‚ÄîContractor for the Veterans Administration&lt;/p&gt;
    &lt;p&gt;Among the emails was the now infamous ‚ÄúFork in the Road,‚Äù encouraging workers to be loyal or quit. It closely tracked the language of an email sent to Twitter employees not long after Musk‚Äôs takeover of that company. A subsequent follow-up was even more insulting.&lt;/p&gt;
    &lt;p&gt;‚ÄúIt was truly so idiotic and looked like it was written by a disturbed child.‚Äù ‚ÄîCDC employee&lt;/p&gt;
    &lt;p&gt;‚ÄúWe‚Äôre used to every little thing done by regulation, and now we‚Äôre just getting crazy emails ‚Ä¶ This is a 5-alarm fire. This is a constitutional crisis.‚Äù ‚ÄîDepartment of Labor employee&lt;/p&gt;
    &lt;p&gt;‚ÄúThat response shocked me. We knew that this administration had little regard for professionals who choose to work for the federal government, but to state it so publicly, dripping with contempt, was truly unbelievable to me.‚Äù ‚ÄîGSA employee&lt;/p&gt;
    &lt;p&gt;Federal employees who remained were forced back to the office. Many found their workplaces increasingly hostile.&lt;/p&gt;
    &lt;p&gt;‚ÄúA woman I did not know in the cubicle next to me broke down. She was literally wailing, inconsolable, because she could not get into a childcare facility she could afford on such short notice. She literally had to choose between her little child and working. Her explaining to her manager the way her child cried and begged Mommy to stay home broke me. Then, as if on cue, an email from a person whose account said they were the acting IRS commissioner arrived in our inboxes, reminding us that it was ‚ÄúMental Health Awareness‚Äù month and that we can do such helpful things as ‚Äúpracticing gratitude‚Äù and breathing techniques to deal with stress. It also reminded us we can take time off to seek professional help ‚Ä¶ I never saw her again, and her cube is now empty.‚Äù ‚ÄîInternal Revenue Service employee&lt;/p&gt;
    &lt;p&gt;‚ÄúBecause we are part of Homeland Security, there‚Äôs always an armed guard at FEMA facilities. That‚Äôs a very standard thing. But the guys we‚Äôre used to seeing are like the contracted-out, office patrol guys‚Äîthey‚Äôre mall cops, to be polite about it. They sit at the desk and make sure you have ID, and that‚Äôs the extent of their policing. We have a pretty good relationship with our local guy at the front desk of our building. He‚Äôs a nice guy; he‚Äôll walk around our office sometimes. We share our snacks with him.&lt;/p&gt;
    &lt;p&gt;‚ÄúOne day he comes in to walk the office, like he does occasionally, and a few minutes after he passes by, another officer walks through. This time, it‚Äôs somebody we‚Äôve never seen before, and he‚Äôs like, kitted out. He‚Äôs dressed in all black from head to toe; he‚Äôs got body armor on. He‚Äôs wearing a tactical helmet. He‚Äôs got a big gun on him, like a rifle, not like a handgun in a side pouch. He did not have a visible name tag, which is not standard at all‚Äîeverybody in a federal facility is required to identify themselves at all times, and he had no individual identifying markings. The only writing on his uniform was the big yellow text on his back that said HOMELAND SECURITY.&lt;/p&gt;
    &lt;p&gt;‚ÄúHe was walking through the office as slowly as he could. He would pause behind you and watch what you were doing for five to 20 seconds and then move on. His entire demeanor, it was very obvious he wanted us to see him, and he wanted to see us watching him. These are fucking office workers working on laptops. We‚Äôre doing spreadsheets and PowerPoints. Like, chill out, dude.&lt;/p&gt;
    &lt;p&gt;‚ÄúMy coworker went over [to the guard] and was like ‚ÄòHey, welcome, can I help you with something, are we in danger? What‚Äôs the problem? The officer announces‚Äînot just to my coworker but to as many people as can hear him‚Äî‚ÄòNo, I don‚Äôt want your help. I‚Äôm just here to patrol you and to desensitize you to my presence.‚Äô Then he just keeps on walking. That‚Äôs the only thing he‚Äôs said to us. He‚Äôs been through a couple times now and never gives anyone the time of day‚Äînever smiles, never says good morning, just walks through, dresses us all down for a few minutes, and leaves.‚Äù ‚ÄîFEMA employee&lt;/p&gt;
    &lt;p&gt;The offices were also quite literally gross‚Äîbecause DOGE had put a $1 spending limit on most government credit cards and didn‚Äôt make exceptions for basic necessities.&lt;/p&gt;
    &lt;p&gt;‚ÄúThe women‚Äôs restroom was out of toilet paper within a week or so of us coming back to the office. I brought this up to Facilities, like, ‚ÄòHey, this is kind of a sanitation and dignity issue, can you hook us up with more toilet paper?‚Äô They were like, ‚ÄòWe‚Äôd love to, but we can‚Äôt purchase anything until they unfreeze the cards, and we don‚Äôt even know what the process is, because they have them sort of indefinitely frozen.‚Äô&lt;/p&gt;
    &lt;p&gt;‚ÄúFor five months we were instructed to bring in our own toilet paper. I literally kept two rolls at my desk. I wish I were joking.‚Äù ‚ÄîFEMA employee&lt;/p&gt;
    &lt;p&gt;Musk and Trump were eagerly filling government agencies with their allies. At the Department of Housing and Urban Development (HUD), Trump installed Scott Turner, a former NFL cornerback.&lt;/p&gt;
    &lt;p&gt;‚Äú[Turner] has two primary sources of anecdotes I keep hearing: his time in the NFL‚Äîspecifically that he was drafted in the last round‚Äîand his father‚Äôs time working as a shelf stocker at Safeway and how he is doing the same thing at HUD by ‚Äòtaking inventory and restocking the shelves.‚Äô For a motivational speaker and pastor he is neither motivational nor inspirational.‚Äù ‚ÄîHUD employee&lt;/p&gt;
    &lt;p&gt;Immigration was a major pillar of the second Trump administration. While the government made crystal clear it did not want foreigners in the country, it carved out an exception for a minority group of white South Africans in an executive order in February‚Äîa topic near and dear to Musk‚Äôs heart, as a white immigrant from South Africa.&lt;/p&gt;
    &lt;p&gt;‚ÄúThis administration has made a complete mockery of the humanitarian side of immigration. I have interviewed parents who saw their children beheaded in front of them. I have interviewed children who saw their parents killed in front of them. I have interviewed women who have been sexually assaulted. I have interviewed children who have been sexually assaulted. I have interviewed teenagers who were beaten and threatened by their own family because they were part of the LGBTQI+ community. What has happened to these people in South Africa that warrants refugee status in the US? Nothing.‚Äù ‚ÄîDepartment of Homeland Security employee&lt;/p&gt;
    &lt;p&gt;Musk said he wanted to downsize the federal workforce. What was the right size, exactly? As lean as possible. Entire agencies were gutted as tens of thousands of federal employees were subjected to reductions in force, or RIFs. Some of these actions have been challenged in court, but the Supreme Court recently ruled that the Trump administration could continue its proposals to potentially lay off federal workers en masse.&lt;/p&gt;
    &lt;p&gt;‚ÄúThe moment everything crystallized for me was the day they came for a respected career deputy. Someone who embodied integrity and competence. His ‚Äòcrime‚Äô? Having the guts to challenge DOGE‚Äôs reckless RIF plans. One afternoon, he returned from lunch to find security waiting at his desk. No explanation, no warning‚Äîjust a quiet escort out of the building while stunned colleagues looked on. Years of dedicated service reduced to a public humiliation.‚Äù ‚ÄîDepartment of Labor employee&lt;/p&gt;
    &lt;p&gt;‚ÄúI knew what the powers that be were doing wasn't legal. So either they were incompetent and didn't know it was illegal, or they knew it was illegal and didn‚Äôt care. Which one is scarier?‚Äù ‚ÄîCDC employee&lt;/p&gt;
    &lt;p&gt;‚ÄúWhat stands out to me is how disorganized and unprofessional the GSA reduction in force was. Staff were instructed to return government IDs ASAP. We lost Google Drive access immediately, and the agency put resources about our RIF on there. We were blocked from sending emails to non-GSA addresses. Even trying to email career documents to your private email address became a huge issue.‚Äù ‚ÄîGSA employee&lt;/p&gt;
    &lt;p&gt;‚ÄúWhen the Consumer Financial Protection Bureau was first gutted, one person left their blazer in the office and was unable to get back into the building to get it. It was the only blazer they owned: They were broke, applying for jobs, and had nothing to wear to interviews because of this.‚Äù ‚ÄîCFPB employee&lt;/p&gt;
    &lt;p&gt;On February 14, tens of thousands of federal workers lost their jobs in an event that would become known to those impacted as the Valentine‚Äôs Day Massacre. Other workers were told they were going to receive firing letters imminently‚Äîonly to wait days with no news.&lt;/p&gt;
    &lt;p&gt;‚ÄúMy fianc√©e and I had just come back from dinner. We‚Äôre getting ready to go to bed. I decide I‚Äôm just going to disconnect from social media and my email. I‚Äôm just going to turn it off ‚Ä¶ I saw I had an unread message. I was fired at 11, 11:30 pm. [My fianc√©e] looks at me, and she sees my demeanor change. [She says,] ‚ÄòThat was the email, wasn't it?‚Äô‚Äù ‚ÄîFired Federal Aviation Administration aeronautical information specialist&lt;/p&gt;
    &lt;p&gt;‚ÄúIt was Valentine‚Äôs Day, and my partner planned a romantic dinner for us that I ate in a catatonic state, in my sweatpants, covered in tears.‚Äù ‚ÄîCDC employee&lt;/p&gt;
    &lt;p&gt;On February 22, in another echo of his Twitter takeover, Musk warned that the entire federal workforce needed to write an email explaining what they‚Äôd gotten done the previous week.&lt;/p&gt;
    &lt;p&gt;‚ÄúIt was so humiliating to have to prove, ostensibly to Elon Musk‚Äîsomeone not in my chain of command or even a government employee‚Äîwhat I was doing. Not only is it none of their business what I was up to (they are not my supervisor), but they wouldn‚Äôt even understand anything I put in there anyway since it‚Äôs far too technical. I put read receipts on my first submission, and after I hadn‚Äôt gotten pinged that it had been read after two subsequent submissions, I just stopped sending them. It made me so mad that not only are they passive-aggressively insinuating I‚Äôm doing nothing, but they‚Äôre wasting tons of federal workers‚Äô time (and taxpayer money) doing this exercise, and they aren‚Äôt even opening the emails. Infuriating.‚Äù ‚ÄîDepartment of Defense employee&lt;/p&gt;
    &lt;p&gt;‚Äú[Employees were responding with] emails in different languages ‚Ä¶ responding with the Constitution, and (for someone coming right back from maternity leave) responding with things such as: ‚Äòbreastfed a newborn for X number of hours, changed Y number of diapers with Z throughput, managed stakeholder input from my in-laws on best ways to burp a child.‚Äô‚Äù ‚ÄîVA IT worker&lt;/p&gt;
    &lt;p&gt;‚ÄúI actually laughed pretty hard [at Musk‚Äôs email]. It‚Äôs just so ridiculous ‚Ä¶ It‚Äôs either [that or] be mad 24/7 (which some of my compatriots have decided to do), and I just don‚Äôt have the energy anymore.‚Äù ‚ÄîFAA air traffic controller&lt;/p&gt;
    &lt;p&gt;On March 14, 2025, Colin O‚ÄôBrien, then the head of security for the United States Institute of Peace, learned that the agency‚Äôs board had purportedly been fired. DOGE associates, including one named Nate Cavanaugh, arrived at USIP headquarters in Washington, DC.&lt;/p&gt;
    &lt;p&gt;‚ÄúThe on-duty security lieutenant called me and said, ‚ÄòHey, DOGE is here.‚Äô The instructions we had given were that any visit by DOGE that was unscheduled, they were not to be permitted entry. If they had a scheduled appointment, absolutely, we‚Äôd have let them in. They stayed outside for a little bit less than 30 minutes and then left.‚Äù&lt;/p&gt;
    &lt;p&gt;Later, O‚ÄôBrien got another call from the front security desk.&lt;/p&gt;
    &lt;p&gt;‚ÄúThey're like, ‚ÄòHey, the FBI is here with DOGE.‚Äô So we step outside. It was two FBI agents to our right and then four DOGE people to the left, sort of standing in a semicircle. They're dressed like college kids‚Äîsneakers and jeans that are too tight‚Äîcertainly not business attire.&lt;/p&gt;
    &lt;p&gt;‚ÄúOur attorney asked the FBI: Why are you guys here? Do you have a court order, a warrant, anything? And they said no, and they said, ‚ÄòWe're here to facilitate a cordial conversation.‚Äô They looked embarrassed to be there, being just very honest.&lt;/p&gt;
    &lt;p&gt;‚ÄúThe conversation lasts maybe five minutes, then the DOGE people leave with the FBI agents. I didn‚Äôt realize at the time that one of the women in the DOGE SUV had run around to the side of the building and was trying to convince one of the guards to let her in through a side door, claiming at first that it was cold and she had to go to the bathroom. Then that changed, when she was told no, to: ‚ÄòI have every right to be in a government building.‚Äô So on one hand you have the intimidation factor of federal agents plus DOGE at your front door. And then you have this juvenile covert attempt in the back door. If she‚Äôd gotten in the door she would‚Äôve probably called 911 and claimed false imprisonment or something.‚Äù&lt;/p&gt;
    &lt;p&gt;DOGE ultimately got into the building (estimated value: $500 million; DOGE attempted to gift GSA the space but was blocked by a federal judge) and fired nearly every employee. On March 28, as staff were receiving termination notices‚Äîand finding out their health care would be cut the same day‚Äîone of O‚ÄôBrien‚Äôs colleagues spied a salad in the office refrigerator with the name ‚ÄúNate C‚Äù on it and promptly threw it in the trash.&lt;/p&gt;
    &lt;p&gt;Elsewhere, DOGE was entering more agencies for the first time. Departments that rarely faced political strain, such as those that support arts and culture programs, were put under a microscope. Others, like the Consumer Financial Protection Bureau, were put on ice.&lt;/p&gt;
    &lt;p&gt;‚ÄúNo one has ever been against museums and libraries before. It seems like a really nonpolitical issue, and here we are facing a hostile takeover in real time ‚Ä¶ We were put on leave on March 31. By April 3, we were already starting to hear about grants being terminated. They were done through email, very generically, not through the official recordkeeping system, saying that they no longer met the priorities of the agencies. We initially heard about it from grantees. They were posting things publicly. On LinkedIn. On social media.‚Äù ‚ÄîInstitute of Museum and Library Services employee&lt;/p&gt;
    &lt;p&gt;‚ÄúPeople‚Äôs livelihoods were gone, wiped out and thoroughly decimated. So many of these grantees work their entire lives to see a project, book, or exhibit come to fruition. These dreams came to a crashing and fiery end in the single hit of a button by someone who likely would never understand the true devastating impact.‚Äù ‚ÄîNational Endowment for the Humanities employee&lt;/p&gt;
    &lt;p&gt;‚ÄúI like to think of it as I am being slightly defiant. I‚Äôll say, ‚ÄòAlthough I was hired to do [certain duties] under the law, I have not been permitted to do work, so my accomplishments are limited to submitting a timesheet.‚Äô‚Äù ‚ÄîCFPB employee&lt;/p&gt;
    &lt;p&gt;After an initial flurry of lawsuits related to DOGE access to sensitive networks, the president decided to unilaterally declare on March 20 that they could go, essentially, wherever they wanted.&lt;/p&gt;
    &lt;p&gt;‚ÄúLearning about that was like getting punched in the stomach. It goes against everything our agency stands for, our mission. I have personally encouraged immigrant parents to file for benefits for their American children because those children needed it, and have promised all of them that they were safe and that we didn‚Äôt share their information, and they trusted me. And now this administration has made a liar out of me.‚Äù ‚ÄîSocial Security Administration employee&lt;/p&gt;
    &lt;p&gt;At some agencies, that access extended to taking control of official social media accounts.&lt;/p&gt;
    &lt;p&gt;‚ÄúI had to turn over access to our website and social media accounts. Ethan Shaotran asked me to turn over the login info to the website, to Facebook, Instagram, and X. I gave the passwords and usernames for those accounts. He came back later and asked for the address to log in to the WordPress account. I tried to just give the exact information they asked for because I wanted to passively resist. That‚Äôs why DOGE didn‚Äôt get access to our LinkedIn‚Äîthey didn‚Äôt ask for it. The public considers these guys to be tech geniuses, but I‚Äôd say WordPress is pretty intuitive. It took them two days to take the website down.‚Äù ‚ÄîFederal worker&lt;/p&gt;
    &lt;p&gt;In March, the Social Security Administration readied a plan ostensibly to combat identity theft. Under the plan, beneficiaries would not be able to verify their identity on the phone as they had in the past. Instead they‚Äôd have to use an online portal or show up in person. (About a week later, the SSA relented and began allowing the phone again.)&lt;/p&gt;
    &lt;p&gt;‚ÄúSome elderly beneficiaries were crying on the phone, terrified that they would lose their benefits if they couldn‚Äôt figure out how to travel to an office and show us their ID. One woman was in her nineties. Another elderly couple showed up at an SSA office to prove they were alive, but it was never clear that this was necessary‚Äîno policy guidance had been issued.&lt;/p&gt;
    &lt;p&gt;‚ÄúWe were told to be patient and wait until guidance could be provided. At one point, we were told that we would receive instructions a week AFTER the policy implementation day.&lt;/p&gt;
    &lt;p&gt;‚ÄúIn the end, the administration discovered that there wasn‚Äôt a problem with fraud in our teleclaims, something that frontline staff could‚Äôve told them from the beginning. Less than 1 percent of claims were even flagged for further investigation. If our leaders would take the time to learn how to read the records, they might know this too.‚Äù ‚ÄîSSA employee&lt;/p&gt;
    &lt;p&gt;The concern for security apparently did not extend to DOGE affiliates themselves.&lt;/p&gt;
    &lt;p&gt;‚ÄúIn April, I happened to come across a partial list of employees and contractors who had not completed some of their mandatory security training. I wasn't surprised to see that DOGE-affiliated names made up more than a quarter of the list. It included [Technology Transformation Services director] Thomas Shedd, [Federal Acquisition Service head] Josh Gruenbaum, Ed Coristine, Luke Farritor, and Steven Davis. ‚ÄîCurrent GSA IT contractor&lt;/p&gt;
    &lt;p&gt;At AmeriCorps, DOGE called home thousands of young volunteers working on infrastructure projects or disaster relief around the country. It was chaos‚Äîa kind of chaos repeated across many agencies as spring wore on.&lt;/p&gt;
    &lt;p&gt;‚ÄúDOGE arrived at our agency in early April. About a week later, on Tuesday, they shut down the National Civilian Community Corps. They wanted to bring all the members home. Members were in the literal field though, like they were in forests and on trails.&lt;/p&gt;
    &lt;p&gt;‚ÄúThe next day, 85 percent of us were placed on administrative leave. They had people booking flights for members to get home, and their computers were cut off while they were booking. It was chaos. People were just disappearing. On April 24, people started receiving RIF notices, except a bunch of them were addressed to the wrong person.‚Äù ‚ÄîCurrent AmeriCorp employee&lt;/p&gt;
    &lt;p&gt;By June, Musk appeared to officially leave DOGE. With him went some key lieutenants: Steve Davis, Musk‚Äôs right-hand man during the Twitter takeover and DOGE‚Äôs de facto leader; Nicole Hollander, Davis‚Äô partner, who played a key role at the GSA; and Katie Miller, communications lead for DOGE and the wife of White House deputy chief of staff for policy Stephen Miller. Musk‚Äôs send-off had included a friendly press conference with Trump, but that fragile peace was shattered a few days later, when Musk went to war with Trump on X. It seemed like Musk‚Äôs ouster from government‚Äîand breakup with the president‚Äîwas complete.&lt;/p&gt;
    &lt;p&gt;‚ÄúFor all the talk that Trump likes teams of rivals, he doesn‚Äôt respect people who are nasty, interpersonally ‚Ä¶ I thought the cabinet secretary fights would be the end. The president was not going to tolerate him going after his cabinet secretaries, publicly or privately ‚Ä¶ The president just didn‚Äôt want that. He‚Äôs not going to tolerate that negativity. He likes all these people. These are his people. Marco‚Äôs a decade-old friend, at least, and a former competitor [with whom] he has a special comradery who he almost picked as his vice president. Peter Navarro went to jail for the guy. Took a federal charge, was found guilty, and ate it. Scott Bessent is his treasury secretary. Stuff like that was not gonna fly for very long.‚Äù ‚ÄîSenior Trump official&lt;/p&gt;
    &lt;p&gt;The era of Musk‚Äôs DOGE, the flashy, so-called agency that garnered Fox News specials and had orchestrated the biggest upheaval the modern US government has ever faced, appeared to be over. But the next phase was just beginning, with DOGE‚Äôs operatives and its ethos occupying every corner of government. And the toll on federal employees still hasn't stopped.&lt;/p&gt;
    &lt;p&gt;‚ÄúWe are in purgatory‚Äînot having enough resources to do our jobs and not knowing what the vision is for the agency moving forward. Leadership by utter neglect.‚Äù ‚ÄîGSA employee&lt;/p&gt;
    &lt;p&gt;‚ÄúI am a clinical psychologist with plenty of lifetime trauma myself, but I had never actually attended therapy or seen a psychiatrist until after the inauguration. I was so upset when I first spoke to the telehealth psychiatrist that I couldn't even speak and almost had to hang up. They said that I was not the first federal employee that they'd talked to.&lt;/p&gt;
    &lt;p&gt;‚ÄúThis was the trauma that they wanted, that they planned, that they promised us. And, for once, they did a great job of delivering.‚Äù ‚ÄîCDC employee&lt;/p&gt;
    &lt;p&gt;‚ÄúI‚Äôm terrified for our country and what all this means for the future. I need medication to help regulate me, because [Trump is] not going away anytime soon. And since I'm in HR, I can't get away from it. I live and breathe this during all my awake hours. If I'm not at work fielding questions from terrified employees or working with another team to terminate tons of people, family and friends are calling to see if I have any inside scoop or to check on the status of my own job.‚Äù ‚ÄîFederal HR employee&lt;/p&gt;
    &lt;p&gt;‚ÄúI‚Äôm the type of person where, like, if you push me I‚Äôll push back. I don‚Äôt like to live in a mindset of despair and negativity. When these people do this shit, it just lights my fire. It makes me more fucking mad. This used to be the best job I‚Äôve ever had, the best environment I‚Äôve ever had, the best culture I‚Äôve ever had‚Äîand they fucking ruined it. I will never ever forget how much they ruined it. I‚Äôm like, fuck these people. They can‚Äôt get me scared. I will not give them what they want. I will not just leave. I‚Äôm going to make it as difficult as possible for these fuckheads.‚Äù ‚ÄîFEMA employee&lt;/p&gt;
    &lt;p&gt;Let us know what you think about this article. Submit a letter to the editor at mail@wired.com.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45373102</guid><pubDate>Thu, 25 Sep 2025 14:36:12 +0000</pubDate></item><item><title>Microsoft blocks Israel‚Äôs use of its tech in mass surveillance of Palestinians</title><link>https://www.theguardian.com/world/2025/sep/25/microsoft-blocks-israels-use-of-its-technology-in-mass-surveillance-of-palestinians</link><description>&lt;doc fingerprint="ad20ab19270ca9c2"&gt;
  &lt;main&gt;
    &lt;p&gt;Microsoft has terminated the Israeli military‚Äôs access to technology it used to operate a powerful surveillance system that collected millions of Palestinian civilian phone calls made each day in Gaza and the West Bank, the Guardian can reveal.&lt;/p&gt;
    &lt;p&gt;Microsoft told Israeli officials late last week that Unit 8200, the military‚Äôs elite spy agency, had violated the company‚Äôs terms of service by storing the vast trove of surveillance data in its Azure cloud platform, sources familiar with the situation said.&lt;/p&gt;
    &lt;p&gt;The decision to cut off Unit 8200‚Äôs ability to use some of its technology results directly from an investigation published by the Guardian last month. It revealed how Azure was being used to store and process the trove of Palestinian communications in a mass surveillance programme.&lt;/p&gt;
    &lt;p&gt;In a joint investigation with the Israeli-Palestinian publication +972 Magazine and the Hebrew-language outlet Local Call, the Guardian revealed how Microsoft and Unit 8200 had worked together on a plan to move large volumes of sensitive intelligence material into Azure.&lt;/p&gt;
    &lt;p&gt;The project began after a meeting in 2021 between Microsoft‚Äôs chief executive, Satya Nadella, and the unit‚Äôs then commander, Yossi Sariel.&lt;/p&gt;
    &lt;p&gt;In response to the investigation, Microsoft ordered an urgent external inquiry to review its relationship with Unit 8200. Its initial findings have now led the company to cancel the unit‚Äôs access to some of its cloud storage and AI services.&lt;/p&gt;
    &lt;p&gt;Equipped with Azure‚Äôs near-limitless storage capacity and computing power, Unit 8200 had built an indiscriminate new system allowing its intelligence officers to collect, play back and analyse the content of cellular calls of an entire population.&lt;/p&gt;
    &lt;p&gt;The project was so expansive that, according to sources from Unit 8200 ‚Äì which is equivalent in its remit to the US National Security Agency ‚Äì a mantra emerged internally that captured its scale and ambition: ‚ÄúA million calls an hour.‚Äù&lt;/p&gt;
    &lt;p&gt;According to several sources, the enormous repository of intercepted calls ‚Äì which amounted to as much as 8,000 terabytes of data ‚Äì was held in a Microsoft datacentre in the Netherlands. Within days of the Guardian publishing the investigation, Unit 8200 appears to have swiftly moved the surveillance data out of the country.&lt;/p&gt;
    &lt;p&gt;According to sources familiar with the huge data transfer outside of the EU country, it occurred in early August. Intelligence sources said Unit 8200 planned to transfer the data to the Amazon Web Services cloud platform. Neither the Israel Defense Forces (IDF) nor Amazon responded to a request for comment.&lt;/p&gt;
    &lt;p&gt;The extraordinary decision by Microsoft to end the spy agency‚Äôs access to key technology was made amid pressure from employees and investors over its work for Israel‚Äôs military and the role its technology has played in the almost two-year offensive in Gaza.&lt;/p&gt;
    &lt;p&gt;A United Nations commission of inquiry recently concluded that Israel had committed genocide in Gaza, a charge denied by Israel but supported by many experts in international law.&lt;/p&gt;
    &lt;p&gt;The Guardian‚Äôs joint investigation prompted protests at Microsoft‚Äôs US headquarters and one of its European datacentres, as well as demands by a worker-led campaign group, No Azure for Apartheid, to end all ties to the Israeli military.&lt;/p&gt;
    &lt;p&gt;On Thursday, Microsoft‚Äôs vice-chair and president, Brad Smith, informed staff of the decision. In an email seen by the Guardian, he said the company had ‚Äúceased and disabled a set of services to a unit within the Israel ministry of defense‚Äù, including cloud storage and AI services.&lt;/p&gt;
    &lt;p&gt;Smith wrote: ‚ÄúWe do not provide technology to facilitate mass surveillance of civilians. We have applied this principle in every country around the world, and we have insisted on it repeatedly for more than two decades.‚Äù&lt;/p&gt;
    &lt;p&gt;The decision brings to an abrupt end a three-year period in which the spy agency operated its surveillance programme using Microsoft‚Äôs technology.&lt;/p&gt;
    &lt;p&gt;Unit 8200 used its own expansive surveillance capabilities to intercept and collect the calls. The spy agency then used a customised and segregated area within the Azure platform, allowing for the data to be retained for extended periods of time and analysed using AI-driven techniques.&lt;/p&gt;
    &lt;p&gt;Although the initial focus of the surveillance system was the West Bank, where an estimated 3 million Palestinians live under Israeli military occupation, intelligence sources said the cloud-based storage platform had been used in the Gaza offensive to facilitate the preparation of deadly airstrikes.&lt;/p&gt;
    &lt;p&gt;The revelations highlighted how Israel has relied on the services and infrastructure of major US technology companies to support its bombardment of Gaza, which has killed more than 65,000 Palestinians, mostly civilians, and created a profound humanitarian and starvation crisis.&lt;/p&gt;
    &lt;p&gt;According to a document seen by the Guardian, a senior Microsoft executive told Israel‚Äôs ministry of defence late last week: ‚ÄúWhile our review is ongoing, we have at this juncture identified evidence that supports elements of the Guardian‚Äôs reporting.‚Äù&lt;/p&gt;
    &lt;p&gt;The executive told Israel officials that Microsoft ‚Äúis not in the business of facilitating the mass surveillance of civilians‚Äù and notified them that it would ‚Äúdisable‚Äù access to services that supported the Unit 8200 surveillance project and suspend its use of some AI products.&lt;/p&gt;
    &lt;p&gt;The termination is the first known case of a US technology company withdrawing services provided to the Israeli military since the beginning of its war on Gaza.&lt;/p&gt;
    &lt;p&gt;The decision has not affected Microsoft‚Äôs wider commercial relationship with the IDF, which is a longstanding client and will retain access to other services. The termination will raise questions within Israel about the policy of holding sensitive military data in a third-party cloud hosted overseas.&lt;/p&gt;
    &lt;p&gt;Last month‚Äôs revelations about Unit 8200‚Äôs use of Microsoft technology followed an earlier investigation by the Guardian and its partners into the broader relationship between the company and the Israeli military.&lt;/p&gt;
    &lt;p&gt;That story, published in January and based on leaked files, showed how the IDF‚Äôs reliance on Azure and its AI systems surged in the most intensive phase of its Gaza campaign.&lt;/p&gt;
    &lt;p&gt;After that report, Microsoft launched its first review of how the IDF uses its services. It said in May it had ‚Äúfound no evidence to date‚Äù the military had failed to comply with its terms of service, or used Azure and its AI technology ‚Äúto target or harm people‚Äù in Gaza.&lt;/p&gt;
    &lt;p&gt;However, the Guardian investigation with +972 and Local Call published in August, which revealed the cloud-based surveillance project had been used to research and identify bombing targets in Gaza, led the company to reassess its conclusions.&lt;/p&gt;
    &lt;p&gt;The disclosures caused alarm among senior Microsoft executives, sparking concerns that some of its Israel-based employees may not have been fully transparent about their knowledge of how Unit 8200 used Azure when questioned as part of the review.&lt;/p&gt;
    &lt;p&gt;The company said its executives, including Nadella, were not aware Unit 8200 planned to use, or ultimately used, Azure to store the content of intercepted Palestinian calls.&lt;/p&gt;
    &lt;p&gt;Microsoft then launched its second and more targeted review, which was overseen by lawyers at the US firm Covington &amp;amp; Burling. In his note to staff, Smith said the inquiry had not accessed any customer data but its findings were based on a review of internal Microsoft documents, emails and messages between staff.&lt;/p&gt;
    &lt;p&gt;‚ÄúI want to note our appreciation for the reporting of the Guardian,‚Äù Smith wrote, noting that it had brought to light ‚Äúinformation we could not access in light of our customer privacy commitments‚Äù. He added: ‚ÄúOur review is ongoing.‚Äù&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45373564</guid><pubDate>Thu, 25 Sep 2025 15:06:47 +0000</pubDate></item><item><title>Amazon fined $2.5B for using deceptive methods to sign up consumers for Prime</title><link>https://www.ftc.gov/news-events/news/press-releases/2025/09/ftc-secures-historic-25-billion-settlement-against-amazon</link><description>&lt;doc fingerprint="2c79c358257e2788"&gt;
  &lt;main&gt;
    &lt;p&gt;The Federal Trade Commission has secured a historic order with Amazon.com, Inc., as well as Senior Vice President Neil Lindsay and Vice President Jamil Ghani, settling allegations that Amazon enrolled millions of consumers in Prime subscriptions without their consent, and knowingly made it difficult for consumers to cancel. Amazon will be required to pay a $1 billion civil penalty, provide $1.5 billion in refunds back to consumers harmed by their deceptive Prime enrollment practices, and cease unlawful enrollment and cancellation practices for Prime.&lt;/p&gt;
    &lt;p&gt;‚ÄúToday, the Trump-Vance FTC made history and secured a record-breaking, monumental win for the millions of Americans who are tired of deceptive subscriptions that feel impossible to cancel,‚Äù said FTC Chairman Andrew N. Ferguson. ‚ÄúThe evidence showed that Amazon used sophisticated subscription traps designed to manipulate consumers into enrolling in Prime, and then made it exceedingly hard for consumers to end their subscription. Today, we are putting billions of dollars back into Americans‚Äô pockets, and making sure Amazon never does this again. The Trump-Vance FTC is committed to fighting back when companies try to cheat ordinary Americans out of their hard-earned pay.‚Äù&lt;/p&gt;
    &lt;p&gt;The FTC has charged Amazon and several Amazon executives with knowingly misleading millions of consumers into enrolling in Prime, violating the FTC Act and the Restore Online Shoppers‚Äô Confidence Act (ROSCA). The FTC alleged Amazon created confusing and deceptive user interfaces to lead consumers to enroll in Prime without their knowledge. Compounding these deceptive enrollment practices, Amazon also created a complex and difficult process for consumers seeking to cancel their Prime subscription, with the goal of preventing consumers from cancelling Prime. Amazon documents discovered in the lead up to trial showed that Amazon executives and employees knowingly discussed these unlawful enrollment and cancellation issues, with comments like ‚Äúsubscription driving is a bit of a shady world‚Äù and leading consumers to unwanted subscriptions is ‚Äúan unspoken cancer.‚Äù&lt;/p&gt;
    &lt;p&gt;The historic monetary judgment contained in the settlement is only the third ROSCA case in which the FTC has obtained a civil penalty. It includes:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;a $1 billion civil penalty, which is the largest ever in a case involving an FTC rule violation;&lt;/item&gt;
      &lt;item&gt;$1.5 billion in consumer redress, providing full relief for the estimated 35 million consumers impacted by unwanted Prime enrollment or deferred cancellation. This is the second-highest restitution award ever obtained by FTC action.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Additionally, the settlement requires Amazon to stop their unlawful practices and make meaningful changes to the Prime enrollment and cancellation flows by:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;including a clear and conspicuous button for customers to decline Prime. Amazon can no longer have a button that says, ‚ÄúNo, I don‚Äôt want Free Shipping.‚Äù&lt;/item&gt;
      &lt;item&gt;including clear and conspicuous disclosures about all material terms of Prime during the Prime enrollment process, such as the cost, the date and frequency of charges to consumers, whether the subscription auto-renews, and cancellation procedures.&lt;/item&gt;
      &lt;item&gt;creating an easy way for consumers to cancel Prime, using the same method that consumers used to sign up. The process cannot be difficult, costly, or time-consuming and must be available using the same method that consumers used to sign up; and&lt;/item&gt;
      &lt;item&gt;paying for an independent, third-party supervisor to monitor Amazon‚Äôs compliance with the consumer redress distribution process.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The Commission vote approving the stipulated final order was 3-0. The FTC filed the proposed order in the U.S. District Court for the Western District of Washington.&lt;/p&gt;
    &lt;p&gt;NOTE: Stipulated final orders have the force of law when approved and signed by the District Court judge.&lt;/p&gt;
    &lt;p&gt;The Federal Trade Commission works to promote competition and protect and educate consumers. The FTC will never demand money, make threats, tell you to transfer money, or promise you a prize. Learn more about consumer topics at consumer.ftc.gov, or report fraud, scams, and bad business practices at ReportFraud.ftc.gov. Follow the FTC on social media, read consumer alerts and the business blog, and sign up to get the latest FTC news and alerts.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45374064</guid><pubDate>Thu, 25 Sep 2025 15:35:19 +0000</pubDate></item><item><title>ChatControl: EU wants to scan all private messages, even in encrypted apps</title><link>https://metalhearf.fr/posts/chatcontrol-wants-your-private-messages/</link><description>&lt;doc fingerprint="b516b17038a1bfe5"&gt;
  &lt;main&gt;
    &lt;head rend="h2"&gt;Introduction #&lt;/head&gt;
    &lt;p&gt;The üá™üá∫ European Union is advancing legislation that could fundamentally change how we communicate online. ChatControl would require all messaging platforms to automatically scan their users‚Äô private messages and images.&lt;/p&gt;
    &lt;p&gt;Yes, even encrypted ones like Signal, WhatsApp and Telegram. No, you can‚Äôt opt out.&lt;/p&gt;
    &lt;p&gt;This isn‚Äôt just another privacy policy update you can ignore. If passed, this EU regulation (strongest and most binding legal instrument in EU law) would automatically apply to all member states without any wiggle room for national interpretation. It would even override constitutional protections for communication privacy and establish unprecedented mass surveillance of private communications.&lt;/p&gt;
    &lt;p&gt;The official justification? Fighting child sexual abuse material (CSAM). Protecting children is undeniably crucial, but the proposed methods would eliminate digital privacy for 450 million Europeans and set a global precedent for mass surveillance.&lt;/p&gt;
    &lt;p&gt;This surveillance trend extends beyond Europe: üá®üá≠ Switzerland is advancing metadata retention requirements, the üá¨üáß UK is implementing comprehensive age verification systems and now the üá™üá∫ EU proposes to scan every private message. Each initiative is positioned as child protection policy, but the implications reach far beyond their stated goals.&lt;/p&gt;
    &lt;head rend="h2"&gt;What is ChatControl #&lt;/head&gt;
    &lt;p&gt;ChatControl is what critics call the EU‚Äôs proposed Regulation to Prevent and Combat Child Sexual Abuse, also known as CSAR (Child Sexual Abuse Regulation).&lt;/p&gt;
    &lt;p&gt;The proposal builds on surveillance techniques already deployed by major tech companies. Meta analyzes all Facebook Messenger conversations and unencrypted WhatsApp data (profile photos, group descriptions). Apple announced similar scanning for iCloud content in 2021, though they later suspended the program.&lt;/p&gt;
    &lt;p&gt;This turns voluntary corporate surveillance into mandatory government-ordered scanning. A temporary 2021 EU regulation allowed platforms to scan content voluntarily for three years. That authorization expired in 2024, which is why CSAR was proposed. The temporary regulation merely permitted scanning; CSAR would make detection obligatory under certain conditions.&lt;/p&gt;
    &lt;p&gt;There‚Äôs also the Roadmap for Lawful Access to Data which has an even bigger goal: making all our digital data readable by authorities upon request. We‚Äôll dive deeper into this broader surveillance agenda later.&lt;/p&gt;
    &lt;head rend="h3"&gt;Scope and Coverage #&lt;/head&gt;
    &lt;p&gt;CSAR casts an extremely wide net. The regulation would apply to all interpersonal communication service providers, not just obvious targets like Signal, WhatsApp, or Telegram, but also:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Email providers&lt;/item&gt;
      &lt;item&gt;Dating apps&lt;/item&gt;
      &lt;item&gt;Gaming platforms with chat features&lt;/item&gt;
      &lt;item&gt;Social media platforms&lt;/item&gt;
      &lt;item&gt;File hosting services (Google Drive, iCloud, DropBox‚Ä¶)&lt;/item&gt;
      &lt;item&gt;App stores&lt;/item&gt;
      &lt;item&gt;Even small community hosting services run by associations&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This means virtually any digital service that allows people to communicate or share content would fall under surveillance requirements. The scope extends far beyond what most people imagine when they hear messaging apps.&lt;/p&gt;
    &lt;head rend="h2"&gt;How it Works #&lt;/head&gt;
    &lt;p&gt;ChatControl relies on Client-Side Scanning. Your device becomes a monitoring station that analyzes your content before encryption happens.&lt;/p&gt;
    &lt;p&gt;This represents a fundamental shift away from traditional surveillance that intercepts messages during transmission. With ChatControl, every message gets automatically checked, assuming everyone is guilty until proven innocent and effectively reversing the presumption of innocence.&lt;/p&gt;
    &lt;head rend="h3"&gt;Technical Implementation #&lt;/head&gt;
    &lt;p&gt;The system would automatically scan for three categories of content before encryption:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Known illegal content: Images or videos already catalogued by authorities as CSAM. Your device creates hash fingerprints of your content and compares them against databases of known illegal material.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Unknown potential content: Photos or videos that might constitute CSAM but haven‚Äôt been previously identified. AI algorithms analyze visual elements (like exposed skin) to flag potentially problematic content based on statistical models.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Grooming behavior: Text analysis using AI to identify communication patterns that match predefined indicators of adults soliciting children. This involves scanning the actual content of your private conversations.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;If something gets flagged, it automatically gets reported to authorities. No human checks it first, that would be impossible given the billions of daily messages. This would be mandatory for all messaging platforms in üá™üá∫ Europe.&lt;/p&gt;
    &lt;head rend="h3"&gt;Why This Breaks Encryption #&lt;/head&gt;
    &lt;p&gt;ChatControl doesn‚Äôt break encryption, it bypasses it entirely. While your messages still get encrypted during transmission, the system defeats the purpose of end-to-end encryption by examining your content before it gets encrypted. True E2EE means only you and your recipient can read messages: no government, no company, no algorithm should peek inside. This surveillance violates that principle by inserting monitoring at the source.&lt;/p&gt;
    &lt;p&gt;Privacy-focused companies like Proton point out this approach might be worse than encryption backdoors. Backdoors give authorities access to communications you share with others. This system examines everything on your device, whether you share it or not.&lt;/p&gt;
    &lt;p&gt;Your encrypted messaging app becomes spyware. Supporters claim this protects privacy because scanning happens locally, but surveillance built into your device makes it impossible to escape.&lt;/p&gt;
    &lt;head rend="h3"&gt;Governance Structure #&lt;/head&gt;
    &lt;p&gt;The proposal would create a centralized EU Centre on Child Sexual Abuse to receive all reports, but EU institutions wouldn‚Äôt control the scanning technology itself.&lt;/p&gt;
    &lt;p&gt;Service providers would face additional obligations beyond scanning. They would need to conduct risk assessments to evaluate and minimize the potential for illegal content sharing on their platforms. This requires collecting detailed information about their users (age groups, content types) that many privacy-focused services deliberately avoid gathering.&lt;/p&gt;
    &lt;p&gt;The regulation also pushes for mandatory age verification systems. No viable, privacy-respecting age verification technology currently exists. These systems would eliminate online anonymity, requiring users to prove their identity to access digital services.&lt;/p&gt;
    &lt;head rend="h2"&gt;Real-World Impact #&lt;/head&gt;
    &lt;head rend="h3"&gt;Encryption Concerns #&lt;/head&gt;
    &lt;p&gt;ChatControl fits into a broader political strategy. Since the 1990s crypto wars, certain states have argued that privacy-protecting technologies, especially encryption, obstruct police investigations. These technologies are designed to do exactly that, protect everyone‚Äôs ability to control their expression and communication.&lt;/p&gt;
    &lt;p&gt;The European Commission‚Äôs Roadmap for Lawful Access to Data wants to make all digital data accessible to authorities by 2030. This involves systematically weakening encryption rather than simply bypassing it.&lt;/p&gt;
    &lt;p&gt;Edward Snowden‚Äôs revelations ten years ago led to widespread adoption of encryption and institutional consensus supporting the right to encrypted communication. But governments remain frustrated by their inability to access private communications. We‚Äôre seeing a return to authoritarian positions using terrorism, organized crime and child exploitation as justifications for undermining encryption.&lt;/p&gt;
    &lt;p&gt;üá©üá∞ Danish Minister of Justice Peter Hummelgaard, chief architect of the current ChatControl proposal, recently stated: ‚ÄúWe must break with the totally erroneous perception that it is everyone‚Äôs civil liberty to communicate on encrypted messaging services.‚Äù Well, there you have it folks: encrypted communication isn‚Äôt a civil liberty anymore. You cypherpunks were wrong all along. /s&lt;/p&gt;
    &lt;p&gt;Similarly in üá´üá∑ France, both Bernard Cazeneuve and Emmanuel Macron have explicitly stated their desire to control encrypted messaging, seeking to pierce the privacy of millions who use these services.&lt;/p&gt;
    &lt;p&gt;CSAR provides the perfect opportunity for member states to finally design and implement a generalized surveillance tool for monitoring population communications. Crossing this threshold means eliminating all confidentiality from communications using digital infrastructure.&lt;/p&gt;
    &lt;head rend="h3"&gt;False Positives #&lt;/head&gt;
    &lt;p&gt;These scanning systems get it wrong most of the time. Studies show approximately 80% of algorithmic reports are false positives: innocent content incorrectly flagged as illegal. üáÆüá™ Irish law enforcement confirms this: only 20.3% of 4,192 automated reports actually contained illegal material.&lt;/p&gt;
    &lt;p&gt;Even with hypothetical 99% accuracy (which current systems don‚Äôt achieve), scanning billions of daily messages would generate millions of false accusations. Police resources would be overwhelmed investigating innocent families sharing vacation photos while real crimes go uninvestigated.&lt;/p&gt;
    &lt;p&gt;Innocent content regularly triggers these systems: family photos, teenage conversations, educational materials and medical communications. Consider this real case: a father was automatically reported to police after sending photos of his child‚Äôs medical condition to their doctor. Google‚Äôs algorithms flagged this legitimate medical consultation as potential abuse, permanently closed his account and refused all appeals. His digital life was destroyed by an algorithm that couldn‚Äôt distinguish between medical care and criminal activity.&lt;/p&gt;
    &lt;head rend="h3"&gt;Scientific Opposition #&lt;/head&gt;
    &lt;p&gt;For the third time in three years, over 600 cryptographers, security researchers and scientists across 35 countries have co-signed an open letter explaining why this mass scanning project is ‚Äútechnically unfeasible‚Äù, constitutes a ‚Äúdanger to democracy‚Äù and would ‚Äúcompletely compromise‚Äù the security and privacy of all European citizens.&lt;/p&gt;
    &lt;p&gt;The letter emphasizes that client-side scanning cannot distinguish between legal and illegal content without fundamentally breaking encryption and creating vulnerabilities that malicious actors can exploit.&lt;/p&gt;
    &lt;p&gt;Meanwhile, the Commission has provided no serious studies demonstrating the effectiveness, reliability or appropriateness of these intrusive measures for actually protecting children. Industry claims appear to have taken precedence over evidence-based policy-making.&lt;/p&gt;
    &lt;p&gt;Genuine security emerges through thoughtful design where security measures and civil liberties function as complementary forces, not opposing ones.&lt;/p&gt;
    &lt;head rend="h3"&gt;Easily Defeated #&lt;/head&gt;
    &lt;p&gt;The fundamental flaw in ChatControl becomes clear when examining how easily determined actors can circumvent these scanning systems. Criminals don‚Äôt need sophisticated techniques to bypass client-side scanning; they use well-documented public knowledge already employed by malicious actors.&lt;/p&gt;
    &lt;p&gt;Layered Encryption&lt;lb/&gt; Encrypt files with standard tools like GPG before messaging. Hell, even a basic Caesar cipher would be sufficient to bypass detection. Since client-side scanning occurs after user encryption but before transport encryption, pre-encrypted content looks like random data to detection algorithms. Recipients decrypt locally with shared keys.&lt;/p&gt;
    &lt;p&gt;External Platform Bypass&lt;lb/&gt; Upload content to any third-party platform (Dropbox, OneDrive, anonymous file hosts, or obscure hosting services) and share links instead of files. The scanner sees innocent text containing a URL while the actual content sits untouched on external servers.&lt;/p&gt;
    &lt;p&gt;Custom Messaging Clients&lt;lb/&gt; Open-source protocols like XMPP and Matrix allow custom client development. Modified clients can automatically implement cloud storage and encryption workflows transparently. Users experience normal messaging while completely evading surveillance infrastructure.&lt;/p&gt;
    &lt;p&gt;Digital Steganography&lt;lb/&gt; Steganographic techniques embed data within innocent images. Family photos can carry hidden payloads invisible to both human operators and AI systems. Tools like OpenStego make this accessible to average users.&lt;/p&gt;
    &lt;p&gt;Platform Migration&lt;lb/&gt; Criminal networks can shift to decentralized platforms, peer-to-peer networks or services outside EU jurisdiction. Tor-based messaging, blockchain communications or servers in non-compliant countries remain beyond ChatControl‚Äôs reach.&lt;/p&gt;
    &lt;p&gt;ChatControl catches only amateur criminals who directly attach problematic content to messages. Professional networks already employ these evasion techniques as standard practice. EU legislation won‚Äôt make them forget how computers work.&lt;/p&gt;
    &lt;p&gt;The system fails at protecting children while succeeding at mass civilian monitoring. It‚Äôs not a bug, it‚Äôs a feature.&lt;/p&gt;
    &lt;head rend="h2"&gt;Business Interests #&lt;/head&gt;
    &lt;head rend="h3"&gt;Industry Players #&lt;/head&gt;
    &lt;p&gt;The child protection narrative masks concerning business interests. The European Commission based its CSAR proposal primarily on claims from industry players rather than independent research.&lt;/p&gt;
    &lt;p&gt;Commercial surveillance companies would manage the technology with guaranteed access to the European market. Organizations like Thorn (co-founded by actor Ashton Kutcher), Microsoft‚Äôs PhotoDNA and other tech companies develop these detection systems while simultaneously lobbying for regulations that would require their adoption across Europe.&lt;/p&gt;
    &lt;p&gt;These companies develop the detection technologies and lobby for laws mandating their adoption, creating a profitable feedback loop. The proposal would secure privileged market positions for surveillance companies across hundreds of millions of European users. Pretty nice, isn‚Äôt it?&lt;/p&gt;
    &lt;p&gt;These systems would be:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Proprietary: Built on closed-source code with methods hidden from public view&lt;/item&gt;
      &lt;item&gt;Unverifiable: Operating without meaningful external examination or accountability&lt;/item&gt;
      &lt;item&gt;Legally powerful: Capable of starting criminal proceedings through algorithmic decisions&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;Rhetorical Tactics #&lt;/head&gt;
    &lt;p&gt;Commissioner Ylva Johansson consistently emphasizes this narrative in her communications:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;‚Äú[Privacy defenders make a lot of noise], but someone has to speak for the children.‚Äù&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;‚ÄúThink of the children‚Äù is a well-documented political rhetoric technique that appeals to emotion rather than evidence. While child protection is genuinely important, this approach frames any opposition as being against child welfare, making nuanced discussion more difficult.&lt;/p&gt;
    &lt;p&gt;This creates a false choice. Privacy isn‚Äôt a luxury for troublemakers, it‚Äôs a fundamental right that protects journalists, whistleblowers, activists and ordinary people from unwarranted intrusion.&lt;/p&gt;
    &lt;p&gt;Critics aren‚Äôt opposing child protection. We‚Äôre questioning whether undermining privacy rights for 450 million üá™üá∫ Europeans is the most effective approach when targeted alternatives exist that preserve rights.&lt;/p&gt;
    &lt;head rend="h2"&gt;EU Country Positions #&lt;/head&gt;
    &lt;p&gt;Understanding how üá™üá∫ EU member states position themselves on this legislation is crucial, as their votes will determine whether ChatControl becomes reality.&lt;/p&gt;
    &lt;head rend="h3"&gt;Vote Breakdown #&lt;/head&gt;
    &lt;p&gt;Countries that support ChatControl (12): üáßüá¨ Bulgaria ‚Ä¢ üá≠üá∑ Croatia ‚Ä¢ üá®üáæ Cyprus ‚Ä¢ üá©üá∞ Denmark ‚Ä¢ üá´üá∑ France ‚Ä¢ üá≠üá∫ Hungary ‚Ä¢ üáÆüá™ Ireland ‚Ä¢ üá±üáπ Lithuania ‚Ä¢ üá≤üáπ Malta ‚Ä¢ üáµüáπ Portugal ‚Ä¢ üá∑üá¥ Romania ‚Ä¢ üá™üá∏ Spain&lt;/p&gt;
    &lt;p&gt;Countries that oppose ChatControl (7): üá¶üáπ Austria ‚Ä¢ üá®üáø Czech Republic ‚Ä¢ üá™üá™ Estonia ‚Ä¢ üá´üáÆ Finland ‚Ä¢ üá±üá∫ Luxembourg ‚Ä¢ üá≥üá± Netherlands ‚Ä¢ üáµüá± Poland&lt;/p&gt;
    &lt;p&gt;Countries still undecided (8): üáßüá™ Belgium ‚Ä¢ üá©üá™ Germany ‚Ä¢ üá¨üá∑ Greece ‚Ä¢ üáÆüáπ Italy ‚Ä¢ üá±üáª Latvia ‚Ä¢ üá∏üá∞ Slovakia ‚Ä¢ üá∏üáÆ Slovenia ‚Ä¢ üá∏üá™ Sweden&lt;/p&gt;
    &lt;head rend="h3"&gt;National Stances #&lt;/head&gt;
    &lt;head&gt;üí™ Strong opposition (the good guys) (click to expand)&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;üá¶üáπ Austria: Constitutional and privacy concerns.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;üá®üáø Czech Republic: Prime Minister explicitly rejects proposals that would allow widespread monitoring of citizens‚Äô private digital communications.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;üá™üá™ Estonia: Acknowledges sincere concerns about child exploitation, but opposes undermining end-to-end encryption and forcing mass surveillance.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;üá´üáÆ Finland: Cannot support the latest compromise proposal because it contains a constitutionally problematic identification order.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;üá±üá∫ Luxembourg: Rejects broad surveillance measures like client-side scanning and insists that EU regulation must ensure proportional, targeted detection to protect citizens‚Äô fundamental rights.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;üá≥üá± Netherlands: Strong privacy protection stance.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;üáµüá± Poland: Opposition to mass surveillance measures.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;head&gt;ü§∑ Undecided positions (click to expand)&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;üáßüá™ Belgium: The N-VA party calls ChatControl a ‚Äúmonster that invades your privacy and cannot be tamed‚Äù. Despite this, Belgium backed Denmark‚Äôs compromise during September meetings. Mixed signals from Brussels.&lt;/item&gt;
      &lt;item&gt;üá©üá™ Germany: Won‚Äôt break encryption but wants to find middle ground. They‚Äôre trying to craft their own compromise instead of rejecting ChatControl outright. Germany‚Äôs fence-sitting could be decisive.&lt;/item&gt;
      &lt;item&gt;üá¨üá∑ Greece: Still figuring out the technical details. No clear stance yet.&lt;/item&gt;
      &lt;item&gt;üáÆüáπ Italy: Has concerns about expanding the scope to cover new CSAM detection. Rome seems hesitant about how far this thing could reach.&lt;/item&gt;
      &lt;item&gt;üá±üáª Latvia: The government likes what they see on paper but worries about political backlash after summer attention. Classic politicians hedging their bets.&lt;/item&gt;
      &lt;item&gt;üá∏üá∞ Slovakia: Playing the wait-and-see game. No commitment either way.&lt;/item&gt;
      &lt;item&gt;üá∏üáÆ Slovenia: Dealing with constitutional headaches around privacy. Another country wrestling with legal implications.&lt;/item&gt;
      &lt;item&gt;üá∏üá™ Sweden: Stockholm is still reading the fine print. Taking their time to decide.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;Current Status #&lt;/head&gt;
    &lt;p&gt;Current situation: Country positions continue shifting regularly since September 12. With 12 countries supporting, 7 opposing, and 8 undecided, ChatControl supporters still fall short of the 65% EU population threshold needed for a qualified majority. The opposition maintains enough demographic weight to block the proposal for now, but the situation remains fluid as the interim regulation approaches expiration.&lt;/p&gt;
    &lt;head&gt;üìÖ Timeline of Events (click to expand)&lt;/head&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;&lt;head rend="h2"&gt;ChatControl Proposal Introduced&lt;/head&gt;&lt;head rend="h3"&gt;May 11, 2022&lt;/head&gt;&lt;head rend="h4"&gt;European Commission&lt;/head&gt;The European Commission unveils the original ChatControl proposal, requiring all email and messaging providers to scan communications for child sexual abuse material.&lt;/item&gt;
      &lt;item&gt;&lt;head rend="h2"&gt;Danish Presidency Takes Charge&lt;/head&gt;&lt;head rend="h3"&gt;Jul 1, 2025&lt;/head&gt;&lt;head rend="h4"&gt;EU Council Presidency&lt;/head&gt;üá©üá∞ Denmark assumes the EU Council Presidency and immediately reintroduces ChatControl as a top legislative priority, targeting October 14, 2025 for adoption.&lt;/item&gt;
      &lt;item&gt;&lt;head rend="h2"&gt;Support Momentum Builds&lt;/head&gt;&lt;head rend="h3"&gt;Jul 28, 2025&lt;/head&gt;&lt;head rend="h4"&gt;15 Member States&lt;/head&gt;Fifteen EU member states back the ChatControl proposal, reversing earlier resistance. üá´üá∑ France has shifted its position and now supports the proposal. üá©üá™ Germany remains the crucial undecided vote.&lt;/item&gt;
      &lt;item&gt;&lt;head rend="h2"&gt;Opposition Wave Begins&lt;/head&gt;&lt;head rend="h3"&gt;Aug 26, 2025&lt;/head&gt;&lt;head rend="h4"&gt;Czech Republic&lt;/head&gt;üá®üáø Czech Prime Minister Petr Fiala announces total opposition on behalf of the entire coalition government.&lt;/item&gt;
      &lt;item&gt;&lt;head rend="h2"&gt;Constitutional Concerns&lt;/head&gt;&lt;head rend="h3"&gt;Aug 29, 2025&lt;/head&gt;&lt;head rend="h4"&gt;Finland&lt;/head&gt;üá´üáÆ Finland rejects the compromise proposal due to constitutionally problematic detection requirements.&lt;/item&gt;
      &lt;item&gt;&lt;head rend="h2"&gt;Blocking Minority Secured&lt;/head&gt;&lt;head rend="h3"&gt;Sep 10, 2025&lt;/head&gt;&lt;head rend="h4"&gt;Germany, Luxembourg, Slovakia&lt;/head&gt;üá©üá™ Germany, üá±üá∫ Luxembourg, and üá∏üá∞ Slovakia officially oppose breaking encryption. This creates the blocking minority needed to stop the proposal.&lt;/item&gt;
      &lt;item&gt;&lt;head rend="h2"&gt;Estonia Joins Opposition&lt;/head&gt;&lt;head rend="h3"&gt;Sep 14, 2025&lt;/head&gt;&lt;head rend="h4"&gt;Privacy Protection&lt;/head&gt;üá™üá™ Estonia acknowledges child exploitation concerns but opposes undermining end-to-end encryption and mass surveillance.&lt;/item&gt;
      &lt;item&gt;&lt;head rend="h2"&gt;Germany Wavers&lt;/head&gt;&lt;head rend="h3"&gt;Sep 16, 2025&lt;/head&gt;&lt;head rend="h4"&gt;Position Unclear&lt;/head&gt;üá©üá™ Germany refrains from taking a definitive stance during the LEWP meeting, despite previous encryption concerns. Position becomes uncertain.&lt;/item&gt;
      &lt;item&gt;&lt;head rend="h2"&gt;Three Countries Flip&lt;/head&gt;&lt;head rend="h3"&gt;Sep 23, 2025&lt;/head&gt;&lt;head rend="h4"&gt;Belgium, Latvia, Italy&lt;/head&gt;üáßüá™ Belgium, üá±üáª Latvia, and üáÆüáπ Italy have moved away from supporting the proposal and are now undecided. Country positions continue changing regularly since September 12.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Consequences #&lt;/head&gt;
    &lt;p&gt;The effects of these proposals go beyond individual privacy concerns.&lt;/p&gt;
    &lt;p&gt;Cybersecurity gets compromised&lt;lb/&gt; Adding deliberate vulnerabilities to encryption creates weaknesses that everyone can exploit. Any backdoor for authorized access becomes a potential entry point for criminals and foreign intelligence services. In February 2024, the üá™üá∫ European Court of Human Rights already determined that mandating weakened encryption ‚Äúcannot be regarded as necessary in a democratic society‚Äù.&lt;/p&gt;
    &lt;p&gt;Innovation suffers&lt;lb/&gt; üá™üá∫ European cybersecurity companies would face an impossible situation in global markets. How could they credibly sell security solutions when regulations require them to build in access mechanisms that undermine those very protections?&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;‚ÄúBuy our ultra-secure encrypted stuff!‚Äù (Terms and conditions apply, government backdoors included)."&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Tech companies will leave Europe&lt;lb/&gt; Privacy-focused services that moved to üá™üá∫ Europe after the Snowden revelations are already signaling they might leave. Signal has explicitly said it would stop operating in üá™üá∫ Europe rather than compromise its security.&lt;/p&gt;
    &lt;p&gt;Even üá®üá≠ Switzerland, traditionally seen as a privacy haven, is facing severe legislative pressures that are forcing tech companies to relocate. Proton has confirmed it has begun moving some of its physical infrastructure out of Switzerland due to ‚Äúlegal uncertainty‚Äù over the proposed surveillance law amendments. Lumo, their AI chatbot, became the first product to relocate, moving to Germany instead of Switzerland specifically because of these legislative concerns.&lt;/p&gt;
    &lt;p&gt;The Swiss OSCPT (Ordinance on the Surveillance of Correspondence by Post and Telecommunications) revision would require VPNs and messaging apps to identify users and retain data for up to six months, plus decrypt communications upon authority request. As Proton‚Äôs CEO Andy Yen explained, these are proposals that ‚Äúhave been outlawed in the EU‚Äù but could soon become reality in Switzerland.&lt;/p&gt;
    &lt;p&gt;Other privacy-focused providers like Tuta have expressed similar concerns and contingency plans to leave üá®üá≠ Switzerland if the surveillance laws pass.&lt;/p&gt;
    &lt;p&gt;Europe might become dependent on US surveillance&lt;lb/&gt; I‚Äôm not so sure on this one, but by outsourcing surveillance technology to American companies, üá™üá∫ Europe may create dangerous dependencies. These companies operate under üá∫üá∏ US jurisdiction and the CLOUD Act, potentially allowing üá∫üá∏ Washington to access data collected on üá™üá∫ European citizens. Under the pretense of child protection, the üá™üá∫ EU risks handing surveillance keys to foreign powers.&lt;/p&gt;
    &lt;p&gt;Social behavior changes&lt;lb/&gt; When people know they‚Äôre being watched, they change how they communicate. People start self-censoring, avoiding certain topics and carefully choosing their words even in private conversations.&lt;/p&gt;
    &lt;p&gt;This is called the chilling effect. Rights don‚Äôt disappear overnight: they erode gradually as people change their behavior to avoid potential problems.&lt;/p&gt;
    &lt;head rend="h2"&gt;Take Action #&lt;/head&gt;
    &lt;p&gt;Here‚Äôs how you can contribute to defending our digital freedoms:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Share this article and educate your network: Use hashtags like &lt;code&gt;#ChatControl&lt;/code&gt;or&lt;code&gt;#StopScanningMe&lt;/code&gt;. Forward resources to friends, family and colleagues.&lt;/item&gt;
      &lt;item&gt;Sign the petition: against ChatControl at change.org.&lt;/item&gt;
      &lt;item&gt;Stay informed and follow updates: @[email protected], x.com/nonchatcontrol, patrick-breyer.de and fightchatcontrol.eu.&lt;/item&gt;
      &lt;item&gt;Contact your national representatives to convince your country to oppose ChatControl, if it‚Äôs not already the case.&lt;/item&gt;
      &lt;item&gt;Join campaigns and support organizations: stopscanningme.eu for local actions, EFF and EDRi for digital rights advocacy.&lt;/item&gt;
      &lt;item&gt;Adopt privacy tools and infrastructure: Use Signal and other privacy-respecting alternatives. Host your own services or support privacy-focused providers.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Conclusion #&lt;/head&gt;
    &lt;p&gt;The irony is kinda painful: the continent that built GDPR to protect digital privacy now designs ChatControl to dismantle it systematically. What was once a fundamental right could become mandatory surveillance.&lt;/p&gt;
    &lt;p&gt;ChatControl represents a historic choice for üá™üá∫ Europe. Either we become the first democracy to normalize mass surveillance of private communications or we defend the digital rights that made Europe a global privacy leader.&lt;/p&gt;
    &lt;p&gt;This decision deserves close attention: authoritarian regimes worldwide are watching, ready to justify their own programs with: ‚ÄúEh, if Europe does it, why shouldn‚Äôt we?‚Äù&lt;/p&gt;
    &lt;p&gt;The next chapter unfolds on October 14, 2025. üòâ&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45374500</guid><pubDate>Thu, 25 Sep 2025 16:01:41 +0000</pubDate></item><item><title>The Harvard-Emory ECG Database</title><link>https://bdsp.io/content/heedb/4.0/</link><description>&lt;doc fingerprint="25dd992d87ba80d0"&gt;
  &lt;main&gt;
    &lt;p&gt;Database Credentialed Access&lt;/p&gt;
    &lt;head rend="h1"&gt;Harvard-Emory ECG Database&lt;/head&gt;
    &lt;p&gt;Zuzana Koscova , Valdery Moura Junior , Matthew Reyna , Shenda Hong , Aditya Gupta , Manohar Ghanta , Reza Sameni , Aaron Aguirre , Qiao Li , Sahar Zafar , Gari Clifford , M Brandon Westover&lt;/p&gt;
    &lt;p&gt;Published: July 28, 2025. Version: 4.0&lt;/p&gt;
    &lt;p&gt; When using this resource, please cite: (show more options) &lt;lb/&gt;Koscova, Z., Moura Junior, V., Reyna, M., Hong, S., Gupta, A., Ghanta, M., Sameni, R., Aguirre, A., Li, Q., Zafar, S., Clifford, G., &amp;amp; Westover, M. B. (2025). Harvard-Emory ECG Database (version 4.0). Brain Data Science Platform. https://doi.org/10.60508/rv6h-7d10. &lt;/p&gt;
    &lt;head rend="h2"&gt;Abstract&lt;/head&gt;
    &lt;p&gt;The Harvard-Emory ECG database (HEEDB) is a large collection of 12-lead electrocardiography (ECG) recordings, prepared through a collaboration between Harvard University and Emory University investigators.&lt;/p&gt;
    &lt;p&gt;In version 1.0 of the database, these ECGs from Massachusetts General Brigham hospital sites were provided without labels or metadata, to enable pre-training of ECG analysis models.&lt;/p&gt;
    &lt;p&gt;In version 2.0, metadata is included.&lt;/p&gt;
    &lt;p&gt;In version 3.0, Emory ECGs are included together with metadata, labels from the 12SL ECG analysis program (GE Healthcare ) and ICD-9/10 codes.&lt;/p&gt;
    &lt;p&gt;In version 4.0, typos were corrected in the data description.&lt;/p&gt;
    &lt;p&gt;HEEDB is published as part of the Human Sleep Project (HSP), funded by a grant (R01HL161253) from the National Heart Lung and Blood Institute (NHLBI) of the NIH to Massachusetts General Hospital, Emory University, Stanford University, Kaiser Permanente, Boston Children's Hospital, and Beth Israel Deaconess Medical Center.&lt;/p&gt;
    &lt;head rend="h2"&gt;Background&lt;/head&gt;
    &lt;p&gt;These ECG data include clinical ECGs captured during routine clinical care over several decades. These are intended to be used to determine associations between cardiac abnormalities (e.g. abnormal rhythms) and sleep, sleep-related medical conditions, and health outcomes.&lt;/p&gt;
    &lt;head rend="h2"&gt;Methods&lt;/head&gt;
    &lt;p&gt;The dataset consists of standard 12-lead ECG recordings, each 10 seconds long, acquired at sampling rates of 250 or 500 Hz. Collection began in the 1980s and continues to the present day. Version 4 of the database includes 10,471,531 ECGs from 1,818,247 unique patients at institution I0001 and 968,680 ECGs from 349,548 patients at institution I0006. All recordings were obtained as part of routine clinical care.&lt;/p&gt;
    &lt;p&gt;Data preprocessing: Data was de-identified following the Safe Harbor method.&lt;/p&gt;
    &lt;head rend="h2"&gt;Data Description&lt;/head&gt;
    &lt;p&gt;ECG data is stored in WFDB (Waveform Database) and Matlab (V4) compatible format. Each ECG recording includes one waveform data file (.mat for I0001 and .dat for I0006) and one header file (.hea). The waveform data file can be read by WFDB library functions, applications, Toolbox, or be loaded to Matlab directly. Waveform files are 12-lead ECG signals recorded at 250 and 500 Hz for 10 s encoded in 16 bits. The header file specifies the name of the associated waveform file and its attributes including sampling rate, units, channel names and the signal gain. It contains line-oriented and field-oriented ASCII text and can be read by the WFDB library or generic text editors.&lt;/p&gt;
    &lt;p&gt;The directory structure of the HEEDB is organized as follows:&lt;/p&gt;
    &lt;code&gt;ECG/
‚îú‚îÄ‚îÄ I0006/
‚îÇ   ‚îú‚îÄ‚îÄ 12SL_diagnoses/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ diagnoses.csv
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ diagnoses_dictionary.csv
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ README
‚îÇ   ‚îú‚îÄ‚îÄ ICD_codes/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ icd9_codes.csv
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ icd10_codes.csv
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ README
‚îÇ   ‚îú‚îÄ‚îÄ metadata/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ metadata.csv
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ README
‚îÇ   ‚îî‚îÄ‚îÄ WFDB/
‚îÇ       ‚îú‚îÄ‚îÄ 2010/
‚îÇ       ‚îú‚îÄ‚îÄ 2011/
‚îÇ       ‚îú‚îÄ‚îÄ ...
‚îÇ       ‚îî‚îÄ‚îÄ 2018/
‚îú‚îÄ‚îÄ I0001/
‚îÇ   ‚îú‚îÄ‚îÄ 12SL_diagnoses/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ diagnoses.csv
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ diagnoses_dictionary.csv
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ README
‚îÇ   ‚îú‚îÄ‚îÄ ICD_codes/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ icd9_codes.csv
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ icd10_codes.csv
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ README
‚îÇ   ‚îú‚îÄ‚îÄ metadata/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ metadata.csv
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ README
‚îÇ   ‚îî‚îÄ‚îÄ WFDB/
‚îÇ       ‚îú‚îÄ‚îÄ S0001/
‚îÇ       ‚îú‚îÄ‚îÄ S0002/
‚îÇ       ‚îú‚îÄ‚îÄ S0003/
‚îÇ       ‚îî‚îÄ‚îÄ S0004/
&lt;/code&gt;
    &lt;p&gt;Each institution (I0001 and I0006) maintains its own subfolders for diagnoses, ICD codes, metadata, and waveform files. The WFDB/ directory contains the ECG waveform data organized either by year (I0006) or by session identifier (I0001).&lt;/p&gt;
    &lt;head rend="h3"&gt;12SL Diagnoses Description&lt;/head&gt;
    &lt;head rend="h3"&gt;The 12SL_diagnoses/ folder contains diagnostic outputs from 12SL (GE Healthcare) software, version 1.&lt;/head&gt;
    &lt;p&gt;File: diagnoses.csv&lt;lb/&gt; This file contains two columns:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;FileName ‚Äì Path to the corresponding WFDB file&lt;/item&gt;
      &lt;item&gt;codes ‚Äì Diagnostic codes, which can be mapped to text labels using diagnoses_dictionary.csv&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;File: diagnoses_dictionary.csv&lt;lb/&gt; This file provides human-readable mappings for 12SL diagnostic codes. It contains the following columns:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;codes ‚Äì Integer codes for diagnoses&lt;/item&gt;
      &lt;item&gt;acronym ‚Äì Abbreviated diagnosis labels&lt;/item&gt;
      &lt;item&gt;diagnoses ‚Äì Full textual descriptions of diagnoses&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;ICD Codes Description&lt;/head&gt;
    &lt;p&gt;The ICD_codes/ folder contains diagnostic information extracted from Electronic Health Records (EHR) for each patient.&lt;/p&gt;
    &lt;p&gt;File: icd10_codes.csv&lt;lb/&gt; This file contains diagnostic codes from the 10th revision of the International Classification of Diseases (ICD-10), developed by the World Health Organization (WHO). These alphanumeric codes represent diagnoses and health conditions.&lt;/p&gt;
    &lt;p&gt;Columns:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;BDSPPatientID ‚Äì Brain Data Science Platform Patient ID&lt;/item&gt;
      &lt;item&gt;RECORDED_DT ‚Äì Shifted date of the diagnosis&lt;/item&gt;
      &lt;item&gt;DIAGNOSIS_ICD10_CD ‚Äì Full ICD-10 diagnosis code&lt;/item&gt;
      &lt;item&gt;DIAGNOSIS_ICD10_DESC ‚Äì Description of the ICD-10 diagnosis code&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;File: icd9_codes.csv&lt;lb/&gt; This file contains diagnostic codes from the 9th revision of the International Classification of Diseases (ICD-9), also developed by the WHO. These codes are also sourced from the EHR system.&lt;/p&gt;
    &lt;p&gt;Columns:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;BDSPPatientID ‚Äì Brain Data Science Platform Patient ID&lt;/item&gt;
      &lt;item&gt;RECORDED_DT ‚Äì Shifted date of the diagnosis&lt;/item&gt;
      &lt;item&gt;DIAGNOSIS_ICD9_CD ‚Äì Full ICD-9 diagnosis code&lt;/item&gt;
      &lt;item&gt;DIAGNOSIS_ICD9_DESC ‚Äì Description of the ICD-9 diagnosis code&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;Metadata Description&lt;/head&gt;
    &lt;p&gt;The metadata/ folder contains demographic and temporal information associated with each ECG recording, including ECG acquisition time, date of birth, date of death, and derived age-related fields.&lt;/p&gt;
    &lt;p&gt;File: metadata.csv&lt;/p&gt;
    &lt;p&gt;Columns:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;BDSPPatientID ‚Äì Patient ID&lt;/item&gt;
      &lt;item&gt;FileName ‚Äì Path to the WFDB file&lt;/item&gt;
      &lt;item&gt;FileID ‚Äì Basename of the WFDB file&lt;/item&gt;
      &lt;item&gt;PatientRace&lt;/item&gt;
      &lt;item&gt;EthnicGroupDSC&lt;/item&gt;
      &lt;item&gt;MaritalStatusDSC&lt;/item&gt;
      &lt;item&gt;ReligionDSC&lt;/item&gt;
      &lt;item&gt;LanguageDSC&lt;/item&gt;
      &lt;item&gt;VeteranStatusDSC&lt;/item&gt;
      &lt;item&gt;SexDSC&lt;/item&gt;
      &lt;item&gt;PrimaryCauseOfDeathDSC&lt;/item&gt;
      &lt;item&gt;PrimaryCauseOfDeathUNOS&lt;/item&gt;
      &lt;item&gt;FirstContributoryCauseOfDeathDSC&lt;/item&gt;
      &lt;item&gt;FirstContributoryCauseOfDeathUNOS&lt;/item&gt;
      &lt;item&gt;SecondContributoryCauseOfDeathDSC&lt;/item&gt;
      &lt;item&gt;SecondContributoryCauseOfDeathUNOS&lt;/item&gt;
      &lt;item&gt;EducationLevelDSC&lt;/item&gt;
      &lt;item&gt;GenderIdentityDSC&lt;/item&gt;
      &lt;item&gt;SexAssignedAtBirthDSC&lt;/item&gt;
      &lt;item&gt;DateOfDeath&lt;/item&gt;
      &lt;item&gt;DateOfDeathMARegistryData ‚Äì Massachusetts (MA) state death registry date of death&lt;/item&gt;
      &lt;item&gt;LastKnownVisitDate ‚Äì Last time the patient had contact with the hospital system&lt;/item&gt;
      &lt;item&gt;ECGAcquisitionTime ‚Äì Time of ECG acquisition&lt;/item&gt;
      &lt;item&gt;DateOfBirth&lt;/item&gt;
      &lt;item&gt;AgeAtAcquisition ‚Äì Age at ECG acquisition&lt;/item&gt;
      &lt;item&gt;AgeAtDeath ‚Äì Age at time of death&lt;/item&gt;
      &lt;item&gt;AgeAtDeathMA ‚Äì Age at death according to MA state registry&lt;/item&gt;
      &lt;item&gt;AgeAtLastVisit ‚Äì Age at the last hospital contact&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;For I0006, the following columns are missing from the metadata.csv file: EthnicGroupDSC, MaritalStatusDSC, ReligionDSC, LanguageDSC, VeteranStatusDSC, PrimaryCauseOfDeathDSC, PrimaryCauseOfDeathUNOS, FirstContributoryCauseOfDeathDSC, FirstContributoryCauseOfDeathUNOS, SecondContributoryCauseOfDeathDSC, SecondContributoryCauseOfDeathUNOS, EducationLevelDSC, GenderIdentityDSC, SexAssignedAtBirthDSC, and DateOfDeathMARegistryData.&lt;/p&gt;
    &lt;head rend="h2"&gt;Usage Notes&lt;/head&gt;
    &lt;p&gt;HEEDB is intended to support a wide range of ECG studies, in particular those exploring the relationship between ECG conditions and sleep.&lt;/p&gt;
    &lt;p/&gt;
    &lt;head rend="h2"&gt;Release Notes&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;v1.0: Initial release containing 10,608,417 ECGs from 1,818,247 subjects (I0001 site only).&lt;/item&gt;
      &lt;item&gt;v2.0: Added additional data files&lt;/item&gt;
      &lt;item&gt;v3.0: Expanded to include two ECG institutions ‚Äî I0001 (10,608,417 ECGs from 1,818,247 subjects) and I0006 (1,061,598 ECGs from 349,548 patients). Metadata, 12SL diagnostic codes, and ICD-9/10 diagnosis codes were also added. Duplicate ECGs were removed from the I0001 site, and incorrect sampling frequencies in header files were corrected.&lt;/item&gt;
      &lt;item&gt;v4.0: Corrected typos in the data description&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Ethics&lt;/head&gt;
    &lt;p&gt;The study protocol was approved by the Institutional Review Boards of the Massachusetts General Hospital (protocol # 2013P001024) and Beth Israel Deaconess Medical Center (protocol # 2022P000417). The written informed consents were waived, because of the retrospective study design. The study also complied with the Declaration of Helsinki.&lt;/p&gt;
    &lt;head rend="h2"&gt;Acknowledgements&lt;/head&gt;
    &lt;p&gt;Publication of HEEDB is supported by a grant (R01HL161253) from the National Heart Lung and Blood Institute (NHLBI) of the NIH to Massachusetts General Hospital, Emory University, Stanford University, Kaiser Permanente, Boston Children's Hospital, and Beth Israel Deaconess Medical Center&lt;/p&gt;
    &lt;head rend="h2"&gt;Conflicts of Interest&lt;/head&gt;
    &lt;p&gt;Dr. Westover is a co-founder, scientific advisor, consultant to, and has personal equity interest in Beacon Biosignals. The other authors declare that they have no conflicts of interest.&lt;/p&gt;
    &lt;head rend="h5"&gt;Parent Projects&lt;/head&gt;
    &lt;head rend="h5"&gt;Access&lt;/head&gt;
    &lt;p&gt; Access Policy: &lt;lb/&gt; Only credentialed users who sign the DUA can access the files. &lt;/p&gt;
    &lt;p&gt; License (for files): &lt;lb/&gt; BDSP Credentialed Health Data License 1.5.0 &lt;/p&gt;
    &lt;p&gt; Data Use Agreement: &lt;lb/&gt; BDSP Credentialed Health Data Use Agreement &lt;/p&gt;
    &lt;p&gt; Required training: &lt;lb/&gt; CITI Data or Specimens Only Research &lt;/p&gt;
    &lt;head rend="h5"&gt;Discovery&lt;/head&gt;
    &lt;head rend="h5"&gt;Corresponding Author&lt;/head&gt;
    &lt;head rend="h5"&gt;Versions&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;4.0 - July 28, 2025&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Files&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;be a credentialed user&lt;/item&gt;
      &lt;item&gt;complete required training:&lt;/item&gt;
      &lt;item&gt;CITI Data or Specimens Only Research You may submit your training here.&lt;/item&gt;
      &lt;item&gt;sign the data use agreement for the project&lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45374961</guid><pubDate>Thu, 25 Sep 2025 16:31:02 +0000</pubDate></item><item><title>ChatGPT Pulse</title><link>https://openai.com/index/introducing-chatgpt-pulse/</link><description>&lt;doc fingerprint="9a26a651bae7d2f3"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Introducing ChatGPT Pulse&lt;/head&gt;
    &lt;p&gt;Now ChatGPT can start the conversation&lt;/p&gt;
    &lt;p&gt;We're building ChatGPT to help you reach your goals. Since ChatGPT launched, that's always meant coming to ask a question. There's magic in being able to simply ask and get answers to help you learn, create or solve problems. However that's limited by what you know to ask for and always puts the burden on you for the next step.&lt;/p&gt;
    &lt;p&gt;Today we're releasing a preview of ChatGPT Pulse to Pro users on mobile. Pulse is a new experience where ChatGPT proactively does research to deliver personalized updates based on your chats, feedback, and connected apps like your calendar. You can curate what ChatGPT researches by letting it know what‚Äôs useful and what isn‚Äôt. The research appears in Pulse as topical visual cards you can scan quickly or open for more detail, so each day starts with a new, focused set of updates.&lt;/p&gt;
    &lt;p&gt;This is the first step toward a more useful ChatGPT that proactively brings you what you need, helping you make more progress so you can get back to your life. We‚Äôll learn and improve from early use before rolling it out to Plus, with the goal of making it available to everyone.&lt;/p&gt;
    &lt;p&gt;ChatGPT can now do asynchronous research on your behalf. Each night, it synthesizes information from your memory, chat history, and direct feedback to learn what‚Äôs most relevant to you, then delivers personalized, focused updates the next day. These could look like follow-ups on topics you discuss often, ideas for quick, healthy dinner to make at home that evening, or next steps toward a longer-term goal such as training for a triathlon.&lt;/p&gt;
    &lt;p&gt;You can also connect Gmail and Google Calendar to provide additional context for more relevant suggestions. When Calendar is connected, ChatGPT might draft a sample meeting agenda, remind you to buy a birthday gift, or surface restaurant recommendations for an upcoming trip. These integrations are off by default and can be turned on or off anytime in settings.&lt;/p&gt;
    &lt;p&gt;Topics shown in Pulse also pass through safety checks to avoid showing harmful content that violates our policies.&lt;/p&gt;
    &lt;p&gt;You can ask for what you‚Äôd like ChatGPT to research for you each day. Tap "curate" to request what you want to see in future editions‚Äîask for a Friday roundup of local events, tips for learning a new skill, or something specific like "focus on professional tennis updates tomorrow." You can also give quick feedback with a thumbs up or thumbs down, and easily view or delete your feedback history. Over time, your guidance makes Pulse more personal and useful.&lt;/p&gt;
    &lt;p&gt;Every morning, ChatGPT delivers a curated set of the most relevant updates, giving you the information you need so you can get back to what matters most. Each update is available for that day only unless you save it as a chat or ask a follow-up question, which adds it to your conversation history. Expand any update to dive deeper, request next steps, or save it for later so you can move forward on goals with clear, timely information.&lt;/p&gt;
    &lt;p&gt;We partnered with college students in the ChatGPT Lab to gather early feedback and improve Pulse. One insight in particular we had was that many started to feel its utility once they started telling ChatGPT what they wanted to see. That insight underscored the importance of simple feedback, so we added more ways to share reactions and guide what appears. Here are a few of the students‚Äô favorite personalized updates.&lt;/p&gt;
    &lt;head rend="h3"&gt;Student use cases&lt;/head&gt;
    &lt;head rend="h3"&gt;Actionable recommendations&lt;/head&gt;
    &lt;p&gt;"Received this based on a conversation that I had yesterday that focused on calendar management/structuring PTO for my grant period in Taiwan. What it produced was several logical steps ahead of where I was at in the conversation. The update was incredibly helpful and exposed me to train and commute information I would have never come across or looked for otherwise."&lt;/p&gt;
    &lt;p&gt;Pulse is a preview and won‚Äôt always get things right. It aims to show you what‚Äôs most relevant and useful but you may still see suggestions that miss the mark. For example, you may get tips for a project you already completed. You can guide what shows up by telling ChatGPT directly. It remembers your feedback for next time and improves as it learns from real use.&lt;/p&gt;
    &lt;p&gt;Pulse is the first step toward a new paradigm for interacting with AI.&lt;/p&gt;
    &lt;p&gt;By combining conversation, memory, and connected apps, ChatGPT is moving from answering questions to a proactive assistant that works on your behalf. Over time, we envision AI systems that can research, plan, and take helpful actions for you‚Äîbased on your direction‚Äîso that progress happens even when you are not asking.&lt;/p&gt;
    &lt;p&gt;Pulse introduces this future in its simplest form: personalized research and timely updates that appear regularly to keep you informed. Soon, Pulse will be able to connect with more of the apps you use so updates capture a more complete picture of your context. We‚Äôre also exploring ways for Pulse to deliver relevant work at the right moments throughout the day, whether it‚Äôs a quick check before a meeting, a reminder to revisit a draft, or a resource that appears right when you need it.&lt;/p&gt;
    &lt;p&gt;As we expand to more apps and richer actions, ChatGPT will evolve from something you consult into something that quietly accelerates the work and ideas that matter to you.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45375477</guid><pubDate>Thu, 25 Sep 2025 16:59:55 +0000</pubDate></item><item><title>Improved Gemini 2.5 Flash and Flash-Lite</title><link>https://developers.googleblog.com/en/continuing-to-bring-you-our-latest-models-with-an-improved-gemini-2-5-flash-and-flash-lite-release/</link><description>&lt;doc fingerprint="bf7738879939489d"&gt;
  &lt;main&gt;
    &lt;p&gt;Today, we are releasing updated versions of Gemini 2.5 Flash and 2.5 Flash-Lite, available on Google AI Studio and Vertex AI, aimed at continuing to deliver better quality while also improving the efficiency.&lt;/p&gt;
    &lt;p&gt;The latest version of Gemini 2.5 Flash-Lite was trained and built based on three key themes:&lt;/p&gt;
    &lt;p&gt;&lt;lb/&gt;You can start testing this version today using the following model string: &lt;code&gt;gemini-2.5-flash-lite-preview-09-2025&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;This latest 2.5 Flash model comes with improvements in two key areas we heard consistent feedback on:&lt;/p&gt;
    &lt;p&gt;We‚Äôre already seeing positive feedback from early testers. As Yichao ‚ÄòPeak‚Äô Ji, Co-Founder &amp;amp; Chief Scientist at Manus, an autonomous AI agent, noted: ‚ÄúThe new Gemini 2.5 Flash model offers a remarkable blend of speed and intelligence. Our evaluation on internal benchmarks revealed a 15% leap in performance for long-horizon agentic tasks. Its outstanding cost-efficiency enables Manus to scale to unprecedented levels‚Äîadvancing our mission to Extend Human Reach.‚Äù&lt;/p&gt;
    &lt;p&gt;You can start testing this preview version today by using the following model string: &lt;code&gt;gemini-2.5-flash-preview-09-2025&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;Over the last year, we‚Äôve learned that shipping preview versions of our models allows you to test our latest improvements and innovations, provide feedback, and build production-ready experiences with the best of Gemini. Today‚Äôs releases are not intended to graduate to a new, stable version but will help us shape our future stable releases, and allow us to continue iterating and bring you the best of Gemini.&lt;/p&gt;
    &lt;p&gt;To make it even easier to access our latest models while also reducing the need to keep track of long model string names, we are also introducing a &lt;code&gt;-latest&lt;/code&gt; alias for each model family. This alias always points to our most recent model versions, allowing you to experiment with new features without needing to update your code for each release. You can access the new previews using:&lt;/p&gt;
    &lt;code&gt;gemini-flash-latest&lt;/code&gt;
    &lt;code&gt;gemini-flash-lite-latest&lt;/code&gt;
    &lt;p&gt;&lt;lb/&gt;To ensure you have time to test new models, we will always provide a 2-week notice (via email) before we make updates or deprecate a specific version behind &lt;code&gt;-latest&lt;/code&gt;. These are just model aliases so the rate limits, cost, and features available may fluctuate between releases.&lt;/p&gt;
    &lt;p&gt;For applications that require more stability, continue to use &lt;code&gt;gemini-2.5-flash&lt;/code&gt; and &lt;code&gt;gemini-2.5-flash-lite&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;We continue to push the frontier of what is possible with Gemini and this release is just another step in that direction. We will have more to share soon, but in the meantime, happy building!&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45375845</guid><pubDate>Thu, 25 Sep 2025 17:20:56 +0000</pubDate></item><item><title>Haydex: From Zero to 178.6B rows a second in 30 days</title><link>https://axiom.co/blog/building-haydex</link><description>&lt;doc fingerprint="ef1899554df0cae3"&gt;
  &lt;main&gt;
    &lt;head rend="h5"&gt;Author&lt;/head&gt;
    &lt;head rend="h5"&gt;Tom√°s Senart&lt;/head&gt;
    &lt;p&gt;Principal Engineer&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;I/O architecture determines scale: One large read instead of thousands of small reads changed everything&lt;/item&gt;
      &lt;item&gt;Profiler-driven optimization: 90% of allocations and 70% of CPU were hiding in unexpected places&lt;/item&gt;
      &lt;item&gt;Distributed redesign unlocks speed: Map-reduce Lambda architecture delivered 6x indexing speedup&lt;/item&gt;
      &lt;item&gt;Compound optimizations multiply: Each optimization amplified others to reach 673 billion rows/second&lt;/item&gt;
      &lt;item&gt;Production beats theory: V0's elegant design failed; V1 succeeded by respecting network physics&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Nearly every great engineering story starts not with a grand plan, but with a nagging, infuriating problem.&lt;/p&gt;
    &lt;p&gt;Ours was simple: our needle-in-the-haystack queries were too slow. For a database company, that's an existential threat. Our customers, especially giants like Hyperscale Customer, were pushing data at a scale that made our brute-force scanning approach look like trying to find a specific grain of sand on a planet-sized beach with a teaspoon. We had to do something drastic.&lt;/p&gt;
    &lt;p&gt;This is the story of that something. It's the story of a project that had been tried before and shelved, a project that rose from the dead.&lt;/p&gt;
    &lt;p&gt;In a single, caffeine-fueled month between June 9 and July 8, 2025, we took Haydex, our dream of a hyper-fast filtering system, and forged it into a production-hardened reality.&lt;/p&gt;
    &lt;p&gt;It was a journey into the abyss of distributed systems, a battle against memory bottlenecks, API limits, and our own assumptions.&lt;/p&gt;
    &lt;p&gt;We started with a Slack message that read "The Grand Haydex Revival" and ended with a system clocking an effective throughput of 178,600,000,000 rows per second-and peaking at a synergistic 673,850,000,000 rows per second with its caching counterpart.&lt;/p&gt;
    &lt;p&gt;This is how we did it.&lt;/p&gt;
    &lt;p&gt;Background&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;In this post we're talking about EventDB, our purpose-built petabyte-scale event datastore which powers Axiom's events, logs, and traces support.&lt;/item&gt;
      &lt;item&gt;EventDB has a custom stateless ingest pipeline, only uses object-storage for storing all ingested data, and has a completely serverless (lambda-powered) query engine.&lt;/item&gt;
      &lt;item&gt;We report effective throughput as &lt;code&gt;effective_rows_per_sec = candidate_rows_before_pruning √∑ wall_clock_seconds&lt;/code&gt;.&lt;/item&gt;
      &lt;item&gt;Numbers in this post come from production runs on Hyperscale Customer‚Äôs dataset (with permission, of course).&lt;/item&gt;
      &lt;item&gt;For ‚ÄúHaydex only,‚Äù the zero‚Äëmatches cache was off; for ‚ÄúHaydex + cache,‚Äù it was on.&lt;/item&gt;
      &lt;item&gt;Hardware and cache state were held constant within each comparison. We fix the filter‚Äôs target false‚Äëpositive rate (FPR) per run.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Micro-glossary&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Field‚Äëscoped filter - One large filter per field (e.g., body) spanning thousands of blocks. Inside that filter, each block is the document.&lt;/item&gt;
      &lt;item&gt;Block - The pruning unit; only surviving blocks fan out to workers.&lt;/item&gt;
      &lt;item&gt;FPR (false‚Äëpositive rate) - Probability the filter returns ‚Äúmaybe‚Äù for a non‚Äëmatching block; it never returns false negatives.&lt;/item&gt;
      &lt;item&gt;Zero‚Äëmatches cache - Caches known‚Äëempty predicate/interval combos to skip re‚Äëevaluation.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;The ghost of Haydex past&lt;/head&gt;
    &lt;p&gt;The idea of using probabilistic filters to accelerate queries wasn't new. At its heart, it's a simple, powerful concept: a data structure that can tell you with blistering speed if the needle you're looking for is definitely NOT in a haystack. It might occasionally lie and say something is there when it's not (a false positive), but it will never lie about something being absent. For query planning, that's a perfect trade-off.&lt;/p&gt;
    &lt;p&gt;We had a V0 that tried to do this. It was, for lack of a better word, a train wreck. Not because the core data structure was wrong, but because our initial execution was naive - a perfect monument to Good Ideas on Paper‚Ñ¢ that crumble on contact with reality.&lt;/p&gt;
    &lt;p&gt;V0's design seemed logical, almost elegant, in the sterile vacuum of a design document. We would create one filter file per data block. Inside that filter, the individual columns of that block were the "documents" (events) we were indexing. We'd then use this with "adaptive execution," a fancy term for letting the query plan change its mind on the fly based on what these fine-grained filters whispered to it.&lt;/p&gt;
    &lt;p&gt;In practice, this was a catastrophic design. While the filter structure was sound, the granularity was wrong! A query spanning thousands of blocks still had to perform thousands of independent, latency-sensitive reads from S3-one for each block's filter file. We would fan out a query to thousands of Lambda workers, and only then would each worker attempt to fetch its own tiny filter file.&lt;/p&gt;
    &lt;p&gt;It was death by a thousand GETs. The I/O overhead didn't just negate the potential gains; it actively made things slower. We also stumbled into a more insidious problem: false positives born from a flawed document model. V0 treated the entire column within a block as a single document. So the filter could correctly tell us, "Yes, the hashes for 'user' and 'failed' and 'login' are all in this block's message column" but it couldn't tell us they weren't in the same row. We were finding the letters but had no idea if they spelled the right word.&lt;/p&gt;
    &lt;p&gt;The whole thing was too slow, too complex, and ultimately, a dead end. I did the only sensible thing: I shut it down, wrote up the post-mortem, and turned the page. I had learned-the hard way. The ghost of Haydex Past would haunt me, but it would also serve as a constant, nagging reminder of what not to do.&lt;/p&gt;
    &lt;p&gt;The problem, of course, didn't go away. The need to find needles in ever-growing haystacks only became more acute. I knew a solution would be a game-changer. I just needed a much, much better plan.&lt;/p&gt;
    &lt;head rend="h2"&gt;The grand Haydex revival&lt;/head&gt;
    &lt;p&gt;By mid-May 2025, the pressure was immense. Hyperscale Customer, a user operating at a scale that stretches the very definition of "web scale," was pushing us to our absolute limits. Their need for fast, targeted searches wasn't a "nice to have"; it was existential for their use case. The ghost of my failed filter experiment lingered in the backlog, but the problem it was meant to solve had metastasized into a five-alarm fire. It was time for a reckoning.&lt;/p&gt;
    &lt;p&gt;On May 16th, after days spent digging through a mountain of research papers on modern filter designs, I dropped a message into our team Slack channel: "The Grand Haydex Revival". This wasn't just a restart; it was a complete teardown and reimagining, informed by the deep scars of V0.&lt;/p&gt;
    &lt;p&gt;Haydex V1 would be V0's antithesis. I threw out everything that had hurt us.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;From Block-Scoped to Field-Scoped. This was the crucial pivot. Instead of creating one small filter file per block, V1 would create one massive, field-scoped filter that covered a single field (like body) across thousands of blocks. Inside this single filter, each block became a 'document'. This flipped the economics of I/O on its head: checking a term across 10,000 blocks now meant one targeted read from one large file, not 10,000 individual reads from 10,000 tiny files.&lt;/item&gt;
      &lt;item&gt;No more "adaptive execution." That was too clever by half, a premature optimization that cost us dearly. V1 would use brutally effective early pruning. We would make the decision to kill or keep blocks right at the beginning, before fanning out a single request to a worker. Save I/O, save compute, save time.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The plan was audacious, borderline reckless: go from concept to a production-ready system, indexing data at scale, in one month. There was no formal design doc, only a vision born from the ashes of failure, a Slack channel that was about to become a war room, and a relentless, unapologetic bias for action.&lt;/p&gt;
    &lt;code&gt;# v0: block-scoped filters
[query]
  ‚îú‚îÄ&amp;gt; [lambda] ‚îÄ‚îÄ GET [filter block #1]
  ‚îú‚îÄ&amp;gt; [lambda] ‚îÄ‚îÄ GET [filter block #2]
  ‚îú‚îÄ&amp;gt;  ‚Ä¶ thousands more ‚Ä¶
  ‚îî‚îÄ&amp;gt; [lambda] ‚îÄ‚îÄ GET [filter block N]
late adaptive execution (pruning after fan‚Äëout)  ‚áí high fan‚Äëout, high latency

# v1: field-scoped filters
[query] ‚îÄ‚îÄ read [field filter: body] ‚îÄ‚îÄ early prune (keep/kill block ids)
  ‚îú‚îÄ&amp;gt; [worker] on surviving blocks
  ‚îî‚îÄ&amp;gt; [worker] ‚Ä¶&lt;/code&gt;
    &lt;head rend="h2"&gt;Week 1 (June 9): Quick wins and brutal truths&lt;/head&gt;
    &lt;p&gt;The first week was a frantic blur of hacking. I revived the shelved code from V0 that we could reuse and massaged it into shape. The core data structures were adapted and the initial indexer service was setup. The plan was simple on the surface: a single service running on a beefy machine with fast storage for temporary data. It would wake up, scan for new data blocks, group them into time scoped batches, and build the filters. Simple.&lt;/p&gt;
    &lt;p&gt;Almost immediately, I slammed head-first into a wall. It wasn't what I expected.&lt;/p&gt;
    &lt;p&gt;The metadata catalog, living in Postgres, was grinding to a halt. The queries to figure out which indexes covered which blocks were a bottleneck of monumental proportions. A trace told the brutal truth: most of the time was just the application staring at Postgres, waiting for it to respond. Before I could even think about indexing performance, emergency surgery had to be performed on our catalog schema.&lt;/p&gt;
    &lt;p&gt;&lt;code&gt;PR #13517 (+588 ‚àí112)&lt;/code&gt; was that surgery. It was a major refactor. We had an inefficient &lt;code&gt;block_nums&lt;/code&gt; array, which was forcing Postgres into painful full scans. It was replaced with a proper mapping table that could be efficiently indexed. An in-memory caching layer was added to shield the database from repetitive lookups. The result was staggering. Catalog query latency plummeted by 94-98%. One bottleneck down.&lt;/p&gt;
    &lt;p&gt;The next one surfaced instantly, like a game of whack-a-mole. Hashing. The simple act of generating hashes for every term in a column was an ecological disaster of CPU cycles and memory allocations. The profiler showed HashColumn allocating memory as if it were free, creating mountains of garbage for the GC to clean up.&lt;/p&gt;
    &lt;p&gt;Time to tear it apart. In &lt;code&gt;PR #13592 (+906 ‚àí29)&lt;/code&gt;, I re-wrote HashColumn from the ground up, eliminating all the intermediate object allocations that were killing performance. It added &lt;code&gt;sync. Pool&lt;/code&gt; for our hash sets to aggressively recycle memory and added fast paths for ASCII string processing to avoid expensive UTF-8 machinery when it wasn't needed. The impact was, frankly, explosive. We observed up to a 73.89% reduction in execution time and a mind-boggling 90.74% reduction in memory allocations.&lt;/p&gt;
    &lt;code&gt;goos: darwin
goarch: arm64
cpu: Apple M3 Max
                                     ‚îÇ  before.txt  ‚îÇ            after.txt             ‚îÇ
                                     ‚îÇ    sec/op    ‚îÇ   sec/op     vs base             ‚îÇ
HashColumn/Ints-16                      604.0¬µ ¬± 2%   176.9¬µ ¬± 2%  -70.72% (p=0.002 n=6)
HashColumn/Floats-16                    631.5¬µ ¬± 7%   202.2¬µ ¬± 2%  -67.97% (p=0.002 n=6)
HashColumn/Strings-16                   5.857m ¬± 3%   1.561m ¬± 0%  -73.35% (p=0.002 n=6)
HashColumn/String_WithNulls-16         190.05¬µ ¬± 4%   59.84¬µ ¬± 0%  -68.51% (p=0.002 n=6)
HashColumn/String_HighCardinality-16    522.6¬µ ¬± 3%   136.4¬µ ¬± 0%  -73.89% (p=0.002 n=6)
HashColumn/String_LowCardinality-16    124.08¬µ ¬± 0%   48.43¬µ ¬± 1%  -60.97% (p=0.002 n=6)
geomean                                 549.5¬µ        167.5¬µ       -69.52%

                                     ‚îÇ  before.txt   ‚îÇ             after.txt             ‚îÇ
                                     ‚îÇ     B/op      ‚îÇ     B/op      vs base             ‚îÇ
HashColumn/Ints-16                      670.2Ki ¬± 0%   160.1Ki ¬± 0%  -76.10% (p=0.002 n=6)
HashColumn/Floats-16                    670.2Ki ¬± 0%   160.2Ki ¬± 0%  -76.10% (p=0.002 n=6)
HashColumn/Strings-16                  7670.0Ki ¬± 0%   710.3Ki ¬± 0%  -90.74% (p=0.002 n=6)
HashColumn/String_WithNulls-16         336.71Ki ¬± 0%   96.08Ki ¬± 0%  -71.46% (p=0.002 n=6)
HashColumn/String_HighCardinality-16   1012.1Ki ¬± 0%   120.1Ki ¬± 0%  -88.13% (p=0.002 n=6)
HashColumn/String_LowCardinality-16    176.31Ki ¬± 0%   80.20Ki ¬± 0%  -54.51% (p=0.002 n=6)
geomean                                 769.1Ki        160.1Ki       -79.18%

                                     ‚îÇ  before.txt   ‚îÇ            after.txt             ‚îÇ
                                     ‚îÇ   allocs/op   ‚îÇ  allocs/op   vs base             ‚îÇ
HashColumn/Ints-16                       15.000 ¬± 0%    4.000 ¬± 0%  -73.33% (p=0.002 n=6)
HashColumn/Floats-16                     15.000 ¬± 0%    4.000 ¬± 0%  -73.33% (p=0.002 n=6)
HashColumn/Strings-16                    50.02k ¬± 0%   10.00k ¬± 0%  -80.00% (p=0.002 n=6)
HashColumn/String_WithNulls-16         2008.000 ¬± 0%    4.000 ¬± 0%  -99.80% (p=0.002 n=6)
HashColumn/String_HighCardinality-16   5006.000 ¬± 0%    4.000 ¬± 0%  -99.92% (p=0.002 n=6)
HashColumn/String_LowCardinality-16    2010.000 ¬± 0%    4.000 ¬± 0%  -99.80% (p=0.002 n=6)
geomean                                   781.3         14.74       -98.11%&lt;/code&gt;
    &lt;p&gt;By Friday, June 13th, we had the first taste of real victory. With these core pieces in place, I enabled indexing for Hyperscale Customer's live production logs. The result: an 8.85x speedup on a real-world query. We were on track.&lt;/p&gt;
    &lt;p&gt;The feeling in the channel was electric. I pasted the lyrics to Queen's "Don't Stop Me Now" into Slack. That was the vibe. Haydex was a shooting star, leaping through the sky.&lt;/p&gt;
    &lt;head rend="h2"&gt;Week 2 (June 14): Hitting the scaling wall&lt;/head&gt;
    &lt;p&gt;The high from our early wins was intoxicating, but it masked a deeper, more fundamental problem. Our single-node indexer, for all its beefy specs, was choking. We were trying to index data for a customer with a truly biblical workload. The indexer would lock up, its memory completely exhausted, the garbage collector thrashing so hard it couldn't even trigger an OOMKill. (This is a phenomenon where the system spends more time cleaning up memory than actually doing work.) It was just... stuck. Frozen in a state of silent, high-CPU agony, a zombie process consuming resources but doing no work.&lt;/p&gt;
    &lt;p&gt;On June 14th, it happened again. I posted a weary message to Slack: "Indexer locked up, will kick it. Glad we'll be moving to Lambdas for the hashing soon"&lt;/p&gt;
    &lt;p&gt;That casual "soon" had to become "now." The single-node architecture was a dead end. We needed to distribute the work. An idea I had floated two days earlier became the new rallying cry: a full-scale distributed architecture.&lt;/p&gt;
    &lt;p&gt;I pivoted our design to a map-reduce-like model that completely changed our approach. The "map" phase involved a massive fan-out to parallel workers, each processing a small, independent chunk of data. This distributed workload was key to breaking the memory bottleneck. Once the parallel processing was complete, a centralized service would then perform the "reduce" phase, efficiently assembling the final, massive filter.&lt;/p&gt;
    &lt;p&gt;This was a massive architectural change, but it paid off almost instantly. By June 18th, the new distributed design was deployed. The indexing latency for a large batch of Hyperscale Customer's columns plummeted from around 3.5 minutes to just 30-40 seconds. We were finally able to start a full backfill, indexing an entire week of their production data. It completed in just 6 hours-a task that would have been physically impossible on the old system.&lt;/p&gt;
    &lt;p&gt;The relief was palpable. We were firing on all cylinders. I posted a picture from a brief time off, a photo of myself intensely trying to relax, with the caption: "Guys I'm touching grass". It was a much-needed moment of levity in the middle of the storm.&lt;/p&gt;
    &lt;head rend="h2"&gt;Week 3 (June 21): Death by a thousand paper cuts&lt;/head&gt;
    &lt;p&gt;Scaling is never a clean process. Solving the CPU bottleneck with our new distributed architecture just revealed the next layer of problems. We had slain the beast, only to find it was a hydra. For every head we lopped off, two more grew in its place. Welcome to the wonderful world of distributed systems.&lt;/p&gt;
    &lt;p&gt;First came the mysterious context canceled errors. They were insidious, popping up randomly and bringing the hashing process to a grinding halt. After a long, painful debugging session that stretched across time zones, we traced it back to our object storage client code. We were using an errgroup context that would prematurely cancel ongoing background reads if another goroutine in the group hit an unrelated error. One goroutine would stumble, and the context would yank the rug out from under all the others that were still happily reading data from S3. One targeted fix in &lt;code&gt;PR #13692 (+151 ‚àí24)&lt;/code&gt; later, that beast was slain.&lt;/p&gt;
    &lt;p&gt;Then, S3 itself began to fight back. We started hitting the &lt;code&gt;DeleteObjects&lt;/code&gt; API limit. The API can only delete 1000 keys in a single request, and our cleanup process for temporary hash files was naively trying to delete thousands at once. In &lt;code&gt;PR #13705 (+110 ‚àí16)&lt;/code&gt;, I refactored our &lt;code&gt;DeleteMany&lt;/code&gt; function to be smarter, splitting the requests into 1000-object chunks and firing them off concurrently. Another head lopped off the hydra. Then came the intermittent &lt;code&gt;InvalidPart&lt;/code&gt; errors on large multipart uploads, which I tackled by making our S3 uploader configuration more robust and tuneable, giving us more control over part sizes and concurrency. Each fix felt like a victory, but the next problem was always just around the corner, waiting.&lt;/p&gt;
    &lt;code&gt;operation error S3: DeleteObjects, https response error StatusCode: 400,
RequestID: 022d5d98230001978435203f0407cd5df403dd06, HostID: akoWM6KLQQfI,
api error MalformedXML: The XML you provided was not well-formed...&lt;/code&gt;
    &lt;code&gt;upload multipart failed...
cause: operation error S3: CompleteMultipartUpload, exceeded maximum number
of attempts, 3,
api error InvalidPart: One or more of the specified parts could not be found.&lt;/code&gt;
    &lt;p&gt;While firefighting, we uncovered another massive optimization, almost by accident. On June 20th, I posted the results of a deep-dive benchmark into our block metadata loading strategy. The results, laid out in a detailed doc, were a slap in the face. We were loading way, way too much data from Postgres before we even got to the pruning stage. The dominant cost was fetching and deserializing the heavy stats data for blocks that we were just going to throw away anyway.&lt;/p&gt;
    &lt;p&gt;This revelation led directly to the "lazy loading" optimization in &lt;code&gt;PR #13737 (+1,807 ‚àí2,891)&lt;/code&gt;. It was a simple but profound change in philosophy. I introduced a &lt;code&gt;block.Tiny struct&lt;/code&gt;, a minimal, skeletal representation of a block containing only what was absolutely necessary for pruning. The query runner would load just these tiny structs for all candidate blocks, run them through the Haydex and zero-matches cache pruners, and only then go back to the database to fetch the full, heavy block metadata for the handful of blocks that survived.&lt;/p&gt;
    &lt;code&gt;// Tiny is a minimal representation of a block, used for efficient pruning.
type Tiny struct {
	Num          Num
	CompactionID uint32
}&lt;/code&gt;
    &lt;p&gt;The impact was a staggering 12.7x speedup for queries where pruning was highly effective. I was seeing the effect of compounding optimizations. The faster catalog made queries viable. The distributed indexer made large-scale filters possible. And the lazy loading made the pruning process itself lightning fast. Each hard-won victory amplified the next.&lt;/p&gt;
    &lt;head rend="h2"&gt;Week 4 (June 28): Ludicrous speed&lt;/head&gt;
    &lt;p&gt;By the last week of June, it felt like Haydex had achieved escape velocity. All the pieces were finally clicking into place. The distributed indexer was stable and chewing through backlogs. The query path was hardened and optimized. The low-hanging fruit had been picked, and I had started to climb the tree towards the real rewards..&lt;/p&gt;
    &lt;p&gt;The weekly update email from July 5th told the story. We had achieved 110 billion rows per second effective throughput in production testing against Hyperscale Customer's live, trillion-scale workloads. This wasn't a sterile lab benchmark with synthetic data. This was real-world performance on a massive, messy, production dataset. This was the moment I knew I had built something special.&lt;/p&gt;
    &lt;p&gt;But we kept pushing.&lt;/p&gt;
    &lt;p&gt;On July 6th, I ran a query with Haydex enabled but with our zero-matches cache (a separate, existing sub-system) turned off. The result popped up on my screen: an effective throughput of 178,600,000,000 rows per second. Then, for the grand finale, we re-enabled the zero-matches cache on the already-pruned results. The synergy was incredible. The two systems, working in concert, peaked at an effective throughput of 673,850,000,000 rows per second.&lt;/p&gt;
    &lt;p&gt;These weren't just vanity metrics. They were the result of a month of compounded, hard-won optimizations. The fast catalog lookups, the hyper-efficient hashing, the distributed indexing, the lazy block metadata loading, a new selective query ramp-up strategy, and a more robust filter normalization system. Even the small details mattered, like improving the query progress reporting so the UI wouldn't look like it was frozen during these new, ultra-fast pruning phases. It all added up.&lt;/p&gt;
    &lt;head rend="h2"&gt;What we hammered into our heads&lt;/head&gt;
    &lt;p&gt;This wasn't just building a feature; it was a month-long, high-stakes crash course in systems engineering. Here are the lessons learned in the crucible.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Design docs don't survive first contact. V0 was a beautiful corpse. It was elegant, logical, and theoretically sound. It was also completely wrong. It taught us a brutal lesson: I/O isn't a detail you figure out later; it's the main character. The "death by a thousand GETs" that killed V0 proved that you can't bolt on performance. You have to design for the harsh, unforgiving physics of the network and storage from day one.&lt;/item&gt;
      &lt;item&gt;The profiler is your only god. Our most profound wins weren't moments of genius. It was an act of forensics. We weren't being clever; we were just staring at a flame graph until our eyes bled and we noticed something catastrophically stupid we were doing. The profiler has no opinions. It doesn't care about your elegant design. It just shows you the brutal, unvarnished truth. You just have to be willing to look.&lt;/item&gt;
      &lt;item&gt;Performance is a game of whack-a-mole. This is the relentless, Sisyphean reality of optimization. You push the boulder of one bottleneck up the hill only to have another, bigger one roll right back down at you. We fixed the database, so hashing became the problem. We fixed hashing, so memory became the problem. We fixed memory, so S3 API limits became the problem. There is no glorious, final victory, only the grind of the next profile, the next trace, the next bottleneck to be smashed.&lt;/item&gt;
      &lt;item&gt;Speed is not free. We made a conscious, unapologetic decision to build a turbocharger, not a more efficient sedan. And turbochargers cost money, parts, and expertise. We embraced the cost. The goal wasn't to make something cheap run a little faster; it was to build a premium capability that delivered an order-of-magnitude performance win.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;The hydra is slain, but more heads will grow&lt;/head&gt;
    &lt;p&gt;The Haydex saga is far from over. We achieved ludicrous speed, but now the work shifts to taming the beast we've created and making it smarter. The road ahead isn't a checklist; it's the next set of boss battles.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Tiered indexing: The current fixed-interval indexing window is a blunt instrument. We want scalpels. The next evolution is a tiered system with "hot" indexes forged for data just seconds old, giving our users near-instant acceleration. These will then be gracefully compacted into "warm" and "cold" tiers over time.&lt;/item&gt;
      &lt;item&gt;The Janitor service: Right now, we create indexes, but we don't clean up after ourselves. An index whose data has been deleted by retention policies is just expensive digital garbage. We're building a janitor service that will relentlessly hunt down and vaporize these orphaned indexes, keeping the system lean and mean.&lt;/item&gt;
      &lt;item&gt;The never-ending hunt: And the search for bottlenecks continues. We're looking at how to teach Haydex to prune even more exotic APL queries. The hydra always grows new heads. We'll be ready.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Built in a month&lt;/head&gt;
    &lt;p&gt;The journey from "The Grand Haydex Revival" to a fully distributed, production-hardened system pushing 178.6 billion rows per second took just over a month. Looking back, it's striking how much ground was covered-wrestling with database performance, memory limits, distributed systems complexity, and the infuriating quirks of third-party APIs. Each problem forced me to measure, learn, and refactor. What emerged wasn't just another feature, but something that quietly shifts what's possible across the entire Axiom platform.&lt;/p&gt;
    &lt;p&gt;None of this would have been possible without standing on the shoulders of giants. Our work relies heavily on brilliant open-source projects. It feels particularly fitting to give a special thanks to Daniel Lemire, whose work inspired this entire project.&lt;/p&gt;
    &lt;p&gt;This is what happens when you combine necessity, obsession, and willingness to chase performance into the deepest corners of the system. Haydex didn't just solve our query speed problem-it fundamentally changed what we thought was possible.&lt;/p&gt;
    &lt;p&gt;From a failed experiment to 178.6 billion rows per second in 30 days. Not bad for a month's work.&lt;/p&gt;
    &lt;p&gt;The real victory isn't the numbers, though they're satisfying. It's that we proved you can take a seemingly impossible problem, break it down into solvable pieces, and build something that shifts the entire performance envelope of your platform. Hyperscale Customer went from struggling with ultra-slow queries to interactive experience on trillion-row datasets. That's the kind of transformation that makes all the late nights and S3 API battles worth it.&lt;/p&gt;
    &lt;p&gt;The hydra will grow new heads. There will always be another bottleneck, another scaling challenge, another "impossible" performance target. But now we know something we didn't know before: with the right approach, enough caffeine, and a willingness to throw out everything that doesn't work, you can build systems that redefine what fast means.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45376559</guid><pubDate>Thu, 25 Sep 2025 18:07:49 +0000</pubDate></item><item><title>Athlon 64: How AMD turned the tables on Intel</title><link>https://dfarq.homeip.net/athlon-64-how-amd-turned-the-tables-on-intel/</link><description>&lt;doc fingerprint="e70d5115fd2265ff"&gt;
  &lt;main&gt;
    &lt;p&gt;22 years ago, on September 23, 2003, AMD changed the game for x86 once and for all. They released the Athlon 64 CPU, a chip that did something Intel didn‚Äôt want. Intel didn‚Äôt want to extend x86 to 64 bits. But when AMD did it, it forced Intel to clone AMD, rather than the other way around.&lt;/p&gt;
    &lt;head rend="h2"&gt;Why Intel didn‚Äôt want to go 64-bit&lt;/head&gt;
    &lt;p&gt;Even in 2001, x86 had decades of baggage attached to it. It was a 32-bit architecture that had been extended from a 16-bit architecture. But that in turn had been extended from an 8-bit CPU design from 1972 that, believe it or not, originated at Datapoint, not Intel.&lt;/p&gt;
    &lt;p&gt;This was great for backward compatibility. 8-bit applications were very easy to port to x86 in the early 1980s, and those early DOS applications still ran flawlessly on modern systems 30 years later. For that matter, it‚Äôs not impossible to get them running even today.&lt;/p&gt;
    &lt;p&gt;Removal of the ability to run 16-bit applications in 64-bit Windows was a design decision, not a technical limitation.&lt;/p&gt;
    &lt;p&gt;Intel wanted to start over to go 64-bit. Without having to worry about backward compatibility, they could design something that would be faster and more efficient. In theory at least, it would be able to scale higher in clock speed. And there was no question a new design would outperform a theoretical 64-bit x86 when running at the same speed because of efficiency.&lt;/p&gt;
    &lt;p&gt;And if you are cynical, there was one more motivation. If Intel could start over, they wouldn‚Äôt have to worry about competing CPU designs, at least not for a very long time. The new design would be encumbered with so many patents, it might be 20 years before someone could clone it.&lt;/p&gt;
    &lt;p&gt;Keep in mind that in 2003, not only was AMD in the picture, but Transmeta was still in the picture, and Cyrix was fading but not completely gone.&lt;/p&gt;
    &lt;p&gt;Starting over with a new CPU architecture outright was massively attractive to Intel.&lt;/p&gt;
    &lt;p&gt;This new 64-bit architecture wasn‚Äôt theoretical, either. Intel was producing it. It was called Itanium, and Intel first released it in June 2001.&lt;/p&gt;
    &lt;head rend="h2"&gt;AMD‚Äôs risky bet and why they made it&lt;/head&gt;
    &lt;p&gt;AMD was well aware of the shortcomings of extending x86 to 64 bits. And they did it anyway. For them, the stakes were completely different.&lt;/p&gt;
    &lt;p&gt;AMD knew that if Itanium caught on, that would be the end for them as a CPU company, unless maybe they wanted to become just another ARM licensee. Being just another ARM licensee is more attractive in 2025 than it was in 2003.&lt;/p&gt;
    &lt;p&gt;But they could see Itanium wasn‚Äôt catching on. It had its uses, and it was doing well enough in those niches, but Windows on Itanium was a non-starter. So much so, The Register called it ‚ÄúItanic.‚Äù&lt;/p&gt;
    &lt;p&gt;AMD bet that there would be appeal in a 64-bit architecture that was fully backward compatible with x86 and natively ran 32-bit applications at full speed. People would be able to run 32-bit Windows and 32-bit applications on it if they needed to, and then when they were ready for 64-bit software, the hardware was there and ready to go. And they could continue to run 32-bit apps in 64-bit operating systems as long as needed to ease the transition.&lt;/p&gt;
    &lt;p&gt;The transition to 32 bits took a decade. AMD reasoned more people would be willing to upgrade to 64 bits if they made that transition as similar as the transition from the 286 to the 386 as possible.&lt;/p&gt;
    &lt;p&gt;They believed the market would willingly trade lower 64-bit performance in the long term for better 32-bit performance right away. They also believed that if Microsoft was willing to build Windows on Itanium, they would be willing to take a chance on 64-bit x86 as well.&lt;/p&gt;
    &lt;p&gt;So on September 23, 2003, AMD launched its Athlon 64, the first 64-bit x86 CPU.&lt;/p&gt;
    &lt;head rend="h2"&gt;Why the Athlon 64 was a hit&lt;/head&gt;
    &lt;p&gt;AMD64 was everything AMD hoped it would be. It was backward compatible with 32-bit x86. The 64-bit builds of Windows weren‚Äôt available immediately, and they didn‚Äôt catch on immediately, but you cannot say nobody used them. People did, in fact, use them. In late 2005, I was in charge of administering the complimentary antivirus software that Charter Communications provided to its subscribers. I‚Äôm not going to say say someone called me every day wanting 64-bit antivirus for 64-bit Windows. But it did happen once a week.&lt;/p&gt;
    &lt;p&gt;The transition took at least as long as AMD expected. When I finally bought an Athlon 64 in 2011, I found native 64-bit software was still scarce. I‚Äôm an outspoken Firefox fan; the reason I briefly switched to Google Chrome was to get a 64-bit web browser.&lt;/p&gt;
    &lt;head rend="h3"&gt;The Athlon 64 in the enterprise&lt;/head&gt;
    &lt;p&gt;A few months later, I got a better job with more pay and better growth potential. I can‚Äôt talk a lot about the job, but I was administering a mission critical system that ran on Windows, mostly on Dell hardware. I mention Dell because they were exclusively an Intel vendor for years. Cofounder and longtime AMD CEO Jerry Sanders once said of Michael Dell, ‚ÄúI can‚Äôt sell him a[n AMD] K6 no matter what I do.‚Äù&lt;/p&gt;
    &lt;p&gt;It was the Athlon 64 that made Dell relent and finally start using AMD CPUs. Not only were they using them on desktop systems, but they were putting AMD CPUs in servers, an idea that would have been extremely controversial 5 years before. At least in the circles I ran in.&lt;/p&gt;
    &lt;p&gt;The Athlon 64 caught on because, in spite of its name, it was an outstanding 32-bit CPU. It was faster than an Intel CPU running at the same clock rate, and it used less power as well. The power consumption was the key to getting into the data center. The Intel name was a security blanket, even though AMD had been making x86 CPUs exactly as long as Intel. But certain decision makers bought Intel marketing and saw AMD as a second tier brand.&lt;/p&gt;
    &lt;p&gt;The thing is, when you have a data center with hundreds of systems in it, the money you save on a more efficient CPU really talks.&lt;/p&gt;
    &lt;p&gt;Replacing Intel Prescott-based servers with AMD64 servers was not a universally popular idea. But you could tell a difference when you were standing behind a rack full of Intel-based servers versus a rack full of AMD based servers. The Intels ran hotter.&lt;/p&gt;
    &lt;p&gt;From an uptime perspective, we couldn‚Äôt see a difference. The performance metrics I collected showed there was a slight difference, and that difference was in AMD‚Äôs favor. So the AMD critics quickly ate their words.&lt;/p&gt;
    &lt;head rend="h3"&gt;Intel giving in and cloning AMD64&lt;/head&gt;
    &lt;p&gt;In 2004, Intel wrote off the Itanium and cloned AMD64. They called it Intel64, but it was a blatant copy of the AMD implementation. A quirk in the agreements that allowed AMD to use the x86 instruction set also gave Intel the rights to use the AMD64 instructions. So there was nothing illegal about what Intel did. Itanium continued to see use in specialized applications, but Intel quietly discontinued it in 2020.&lt;/p&gt;
    &lt;p&gt;AMD and Intel have been chasing and catching each other ever since. One of them will pass the other for a CPU generation or two, and then they will change positions. It‚Äôs not terribly different from the situation in 1999 with the original Athlon, when AMD outperformed Intel for the first time. The question in everyone‚Äôs mind was whether they would do it a second time. The Athlon 64 was the second time.&lt;/p&gt;
    &lt;p&gt;It was a big step forward. Eight years before, AMD was trying to pass off a high-clocked 486 as a Pentium equivalent. With the Athlon 64, AMD was innovating.&lt;/p&gt;
    &lt;p&gt;David Farquhar is a computer security professional, entrepreneur, and author. He has written professionally about computers since 1991, so he was writing about retro computers when they were still new. He has been working in IT professionally since 1994 and has specialized in vulnerability management since 2013. He holds Security+ and CISSP certifications. Today he blogs five times a week, mostly about retro computers and retro gaming covering the time period from 1975 to 2000.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45376605</guid><pubDate>Thu, 25 Sep 2025 18:09:47 +0000</pubDate></item><item><title>Redox OS Development Priorities for 2025/26</title><link>https://www.redox-os.org/news/development-priorities-2025-09/</link><description>&lt;doc fingerprint="3691901340131be1"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Development Priorities for 2025/26&lt;/head&gt;
    &lt;head rend="h5"&gt;By Ron Williams on&lt;/head&gt;
    &lt;p&gt;Redox has made great strides over the past year, with notable improvements in stability, performance, and compatibility.&lt;/p&gt;
    &lt;p&gt;To give a big-picture perspective for where Redox development is headed, here is our view of priorities as of September, 2025. Obviously, we can‚Äôt finish everything on this list in the next 15 months, but it would be nice to have people working on as many of these things as possible.&lt;/p&gt;
    &lt;head rend="h3"&gt;Redox Variants&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;‚ÄúHosted Redox‚Äù as a Web Services Runtime, in a Virtual Machine&lt;/item&gt;
      &lt;item&gt;‚ÄúRedox Server‚Äù for Edge and Cloud&lt;/item&gt;
      &lt;item&gt;‚ÄúRedox Desktop‚Äù for your daily driver&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;Development Priorities&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Building Redox on Redox&lt;/item&gt;
      &lt;item&gt;Compliance and Compatibility&lt;/item&gt;
      &lt;item&gt;Programming Language and Build System Support&lt;/item&gt;
      &lt;item&gt;Performance&lt;/item&gt;
      &lt;item&gt;Security&lt;/item&gt;
      &lt;item&gt;Hardware Support&lt;/item&gt;
      &lt;item&gt;COSMIC, Wayland, and GPU Acceleration&lt;/item&gt;
      &lt;item&gt;Accessibility&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;How can you help?&lt;/head&gt;
    &lt;p&gt;Here are some ways you can help us move Redox closer to our goals.&lt;/p&gt;
    &lt;head rend="h3"&gt;Donating&lt;/head&gt;
    &lt;p&gt;If you would like to support Redox development, please consider donating or buying some merch! We are currently funding a community support/researcher/documentation person, a part-time build engineer, and our Redox Summer of Code program for students, all from donations.&lt;/p&gt;
    &lt;head rend="h3"&gt;Contributing&lt;/head&gt;
    &lt;p&gt;If you would like to help with Redox development or documentation, please read the CONTRIBUTING page and join us on Redox Chat. Try to connect with others who are interested in one of the major areas, create a tracking issue for the work to be done, and start checking things off.&lt;/p&gt;
    &lt;head rend="h3"&gt;Redox is Hiring!&lt;/head&gt;
    &lt;p&gt;Redox is looking for an experienced kernel/core developer. Check out the job description in the July report. Please contact us if you think you are the right person.&lt;/p&gt;
    &lt;p&gt;As well, we are frequently applying for grants. We currently have three students working on grants from NGI Zero and NLnet.&lt;/p&gt;
    &lt;p&gt;If you are a talented Rust developer interested in obtaining a grant to work on Redox, get in touch with us and we will do our best to help. You can also apply for grants for ‚ÄúRedox-adjacent‚Äù work on your own.&lt;/p&gt;
    &lt;p&gt;Send an email to president@redox-os.org, cc info@redox-os.org, with a resume/CV or links to your open source work, and let us know what you are interested in doing.&lt;/p&gt;
    &lt;head rend="h1"&gt;Redox Variants&lt;/head&gt;
    &lt;head rend="h2"&gt;Hosted Redox as a Web Services Runtime, in a Virtual Machine&lt;/head&gt;
    &lt;p&gt;One of the opportunities we would like to pursue is to use Redox as a hosted runtime environment for web services. The goal is to run your web services in a secure Redox environment, but to have the hardware compatibility and management tools delegated to a Linux host. We believe that this is one of the quickest paths to getting Redox into real-world use, and to help us validate it as a secure platform.&lt;/p&gt;
    &lt;p&gt;The set up would be something like the following.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;A Linux server&lt;/item&gt;
      &lt;item&gt;A QEMU Virtual Machine, with KVM, VirtioFS and a virtualized compute acceleration interface like virglrenderer&lt;/item&gt;
      &lt;item&gt;Redox running in QEMU, with some combination of these applications &lt;list rend="ul"&gt;&lt;item&gt;A web server and content manager&lt;/item&gt;&lt;item&gt;A database&lt;/item&gt;&lt;item&gt;WASM/WASI microservices&lt;/item&gt;&lt;item&gt;Custom web services applications of your choice&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;We will need the following improvements to Redox to make this work.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;A faster network stack, including Ring Buffer I/O&lt;/item&gt;
      &lt;item&gt;virtiofs&lt;/item&gt;
      &lt;item&gt;virglrenderer&lt;/item&gt;
      &lt;item&gt;Improvements to our shared memory and IPC&lt;/item&gt;
      &lt;item&gt;General compatibility, performance, security and stability testing&lt;/item&gt;
      &lt;item&gt;Management tools to simplify the use of the system&lt;/item&gt;
      &lt;item&gt;Repeatable builds&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;It would be nice to experiment with making virtualized devices like the GPU or VirtioFS available as a relibc/Redox-RT service, although that is not a major goal for 2026. This would be a configurable option, where the web service has exclusive use of the virtualized device. To the extent possible, the API should be the same whether the virtualized device is available as a library service or as a scheme-type service.&lt;/p&gt;
    &lt;head rend="h2"&gt;Redox Server for Edge and Cloud&lt;/head&gt;
    &lt;p&gt;The most valuable application for Redox is as a secure host for web services, initially as a private server or edge server, and eventually as a multi-tenant cloud server. Redox can provide lightweight but secure sandboxing of web servers, databases and web service applications. We plan to provide heavyweight containerization in the longer-term future, with complete isolation between each tenant in a multi-tenant environment.&lt;/p&gt;
    &lt;p&gt;This represents a substantial effort, but we plan to tackle it in phases to demonstrate value.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Phase 1 - Redox running on bare metal in a single tenant server/edge scenario&lt;/item&gt;
      &lt;item&gt;Phase 2 - Multi-tenant Redox with lightweight containers for WASM microservices and other supported applications&lt;/item&gt;
      &lt;item&gt;Phase 3 - Multi-tenant Redox with heavyweight containers and support for arbitrary applications&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Redox Desktop for your daily driver&lt;/head&gt;
    &lt;p&gt;Redox Desktop will benefit from all the features of Redox Server, but it also needs to be usable for everyone. And Redox security must work in a natural way for the average user.&lt;/p&gt;
    &lt;p&gt;The COSMIC Desktop is being developed at System76, with Jeremy Soller as principal engineer. It√¢s an open source Linux desktop environment that is written almost entirely in Rust.&lt;/p&gt;
    &lt;p&gt;Redox currently supports several key applications, including COSMIC Terminal, COSMIC Files, COSMIC Editor, COSMIC Reader, and COSMIC Store. However, a few important parts of the COSMIC environment are missing due to our lack of Wayland support.&lt;/p&gt;
    &lt;p&gt;Once Wayland is supported, we will be able to support almost the entire COSMIC Desktop. We will also be able to add features for accessibility, i18n/l10n, and other improvements to the desktop experience.&lt;/p&gt;
    &lt;p&gt;We then plan to experiment with ‚Äúsandboxing by default‚Äù, restricting the access of applications to only the resources that they should normally require. We would like to create a consistent experience for sandboxed applications, requesting greater access, and being aware of when you are more-privileged or less-privileged. There are several initiatives in this area, and if we can partner with someone to build a sandboxed desktop, it would be a valuable opportunity for us.&lt;/p&gt;
    &lt;head rend="h1"&gt;Development Priorities&lt;/head&gt;
    &lt;head rend="h2"&gt;Building Redox on Redox&lt;/head&gt;
    &lt;p&gt;Although this has been an important goal for a long time, we are getting closer to supporting development for Redox, on Redox. Having the ability to edit, compile and run your code without having to cross-compile and generate bootable images will make development much faster and more pleasant.&lt;/p&gt;
    &lt;p&gt;I have done some small-scale development on Redox, debugging test suites in C and making one-off changes. It‚Äôs quite pleasant, although it‚Äôs currently easier to mirror the changes manually in a host editor than to move the files back and forth between Redox and the host file system.&lt;/p&gt;
    &lt;head rend="h3"&gt;How it will work&lt;/head&gt;
    &lt;p&gt;In the short/medium-term, Redox developers will be running Redox in QEMU or VirtualBox on their Linux, Windows or MacOS laptops or desktops.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Initially, developers will need to use the GitLab server as their trusted storage, as work in progress might be lost if there is a Redox failure of some sort.&lt;/item&gt;
      &lt;item&gt;We hope to add a VirtioFS file system service so Redox can access the host files. This will greatly improve the developer experience.&lt;/item&gt;
      &lt;item&gt;And, hopefully after a few months of use as a ‚Äúdaily driver‚Äù for developers, we will have the confidence that the Redox file system can be used for persistent storage, and you can push to GitLab when you reach a good stopping point.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;For a small number of systems, we will be able to support Redox development on real hardware. The system will need to have hardware that works well with Redox, including a wired Ethernet connection. But we hope to have at least a few people doing development on real hardware before the end of 2026.&lt;/p&gt;
    &lt;head rend="h3"&gt;Things to do&lt;/head&gt;
    &lt;p&gt;Here are some of the challenges we need to address to make Self-Hosting a reality.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Network performance needs to improve - we have an NGI Zero &amp;amp; NLnet funded project to implement Ring Buffers for disk I/O. We need to implement ring buffers in our network stack as well, once the disk I/O work stabilizes.&lt;/item&gt;
      &lt;item&gt;Move to the upstream Rust compiler - we have mostly solved this, and just need to finish up.&lt;/item&gt;
      &lt;item&gt;Rustc and Cargo reliability - due to past performance issues and a few challenging bugs, we have not had Cargo and the Rust compiler working consistently on Redox. We could use help fighting through the bugs while we wait for the networking improvements.&lt;/item&gt;
      &lt;item&gt;Build system improvements - we have removed a lot of legacy build system code and scripts, and now we are in a position to optimize our custom build tools.&lt;/item&gt;
      &lt;item&gt;Workflow improvements - self-hosting is a different experience from cross-compiling, and we will need to tweak our package manager and some build tools to make the development cycle more straightforward.&lt;/item&gt;
      &lt;item&gt;Redox improvements - self-hosting will be our first opportunity to use Redox as a daily driver, and we expect to find a few bugs or incomplete features that need polishing, and probably one or two unexpected performance bottlenecks.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Compilers and build systems are a real torture test for operating systems, with many processes spawned and lots of files being opened and closed, and lots of small-file reads and writes. Getting Redox working smoothly for development will also greatly improve its general stability.&lt;/p&gt;
    &lt;head rend="h3"&gt;Debugging&lt;/head&gt;
    &lt;p&gt;Currently, Redox supports limited debugging with &lt;code&gt;gdb&lt;/code&gt; running on the Linux host.
This works well for debugging the kernel,
but it is more challenging when debugging applications.&lt;/p&gt;
    &lt;p&gt;We don‚Äôt have a reasonable self-hosted debugger setup yet, as Redox‚Äôs &lt;code&gt;ptrace&lt;/code&gt; implementation needs to be reworked.
That‚Äôs a complex enough project that we consider it a secondary goal for 2026.
If someone is up for a real challenge, please let us know.
Or, if you have ideas on how to improve debugging of user space applications and services
using &lt;code&gt;gdb&lt;/code&gt; on the Linux host, please get in touch.&lt;/p&gt;
    &lt;head rend="h2"&gt;Compliance and Compatibility&lt;/head&gt;
    &lt;p&gt;Redox is not intended to be 100% POSIX compliant, or 100% source compatible with Linux, but we want to come close where it‚Äôs practical. Porting Linux applications to Redox has been the main driver for compatibility, but we have recently set up some compliance tests. Using a test-driven approach, rather than just focusing on porting, will speed up porting, with fewer non-compliance bugs to track down. There are also some chunks of functionality that are medium-high priority that we would love to have help fixing.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Controlling Terminal needs a proper implementation&lt;/item&gt;
      &lt;item&gt;There are several functions related to timers and alarms that need both POSIX and Linux functionality&lt;/item&gt;
      &lt;item&gt;Many other examples will crop up as we do more compliance testing&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;We would also like to polish our Rust compatibility. If you would like to set up tests for the Rust &lt;code&gt;std::&lt;/code&gt; library or other popular crates,
please join us and we can work together to add the tests to our Redox test suites.&lt;/p&gt;
    &lt;head rend="h2"&gt;Programming Language and Build Systems Support&lt;/head&gt;
    &lt;p&gt;Redox intends to support applications developed in any language. However, there are some tricky bits. Rust and C/C++ are well-supported, but we have trouble with languages that come with their own runtime. We need to add some fairly complex hooks in &lt;code&gt;relibc&lt;/code&gt; (our &lt;code&gt;libc&lt;/code&gt; implementation),
or provide a Redox-compatible implementation to support those runtimes,
and then we need to port and test the languages.&lt;/p&gt;
    &lt;p&gt;We can currently run Python programs using RustPython, but it would be nice if we could support the official implementation. We have started porting a couple of JavaScript engines, and we have work underway to support Go.&lt;/p&gt;
    &lt;p&gt;If you have some expertise in x86, ARM and RISC-V assembly, as well as language runtimes, and would like to get into the details of relibc and Redox‚Äôs runtime support for applications, please give us a hand.&lt;/p&gt;
    &lt;p&gt;We also need to port the build tools, scripting languages, and utilities used in build systems. We have decent support for shell scripts, GNU Make, and the most common utilities. But we can use help figuring out if we can get build systems for various libraries and applications working, and what additional utilities are required.&lt;/p&gt;
    &lt;head rend="h2"&gt;Performance&lt;/head&gt;
    &lt;p&gt;Last year, we made really substantial improvements to Redox‚Äôs file system performance, thanks to James Matlik (RedoxFS), Jacob Lorentzon (Kernel) and Jeremy Soller (Disk I/O), which got us to the point where Redox can be usable in realistic scenarios. We are continuing to improve performance, as described above, so much so that by the end of next year, performance should not be a roadblock for using Redox.&lt;/p&gt;
    &lt;p&gt;We do want to continue to make Redox go faster, but that work will be incremental going forward. Here‚Äôs a summary of our upcoming performance work (including things mentioned elsewhere).&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Ring Buffers for the disk and file system&lt;/item&gt;
      &lt;item&gt;Direct process switching (context switching to the target driver with no scheduler intervention) as part of the Ring Buffers work&lt;/item&gt;
      &lt;item&gt;Ring Buffers for the network stack&lt;/item&gt;
      &lt;item&gt;Scheduler improvements (EEVDF, and maybe others)&lt;/item&gt;
      &lt;item&gt;Ongoing improvements to RedoxFS&lt;/item&gt;
      &lt;item&gt;Hardware-accelerated graphics&lt;/item&gt;
      &lt;item&gt;Performance benchmarking - we would like someone to help curate and improve our benchmarking&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Security&lt;/head&gt;
    &lt;p&gt;Redox is implementing Capability Based Security as a fundamental part of how files and resources are accessed. Over the next 12 months, the underlying representation of file descriptors will be replaced by capabilities.&lt;/p&gt;
    &lt;p&gt;The first stage of this work is&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;to implement the machinery to create capabilities and transfer them between processes&lt;/item&gt;
      &lt;item&gt;to have file references be relative to some capability (see openat(2))&lt;/item&gt;
      &lt;item&gt;to have every program running in a resource namespace that can be restricted as appropriate&lt;/item&gt;
      &lt;item&gt;to provide POSIX-style paths and file descriptors as a layer on top of capabilities&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;There will be lots of followup work, to implement Capsicum-style security and mechanisms for requesting additional privileges, and to make security easy to use.&lt;/p&gt;
    &lt;head rend="h2"&gt;Hardware Support&lt;/head&gt;
    &lt;p&gt;To run Redox on real hardware, we need compatible drivers for the full range of system functionality. Linux has literally hundreds of people working on device drivers of all kinds, and we don‚Äôt have that luxury. So we will be focusing on ‚Äúrecommended‚Äù hardware.&lt;/p&gt;
    &lt;p&gt;For Redox Server, we will have to partner with a small number of server vendors, and develop drivers for that particular hardware. Whether it‚Äôs x86_64/amd64, Aarch64/ARM64, or RISC-V 64, we will have to find a vendor that will provide either funding or developers (or both) to create optimized drivers for disk, network, compute acceleration, as well as for system management and other functions.&lt;/p&gt;
    &lt;p&gt;For Redox Desktop, we will support a very small number of desktop and laptop systems for our own development purposes, focusing on drivers that are likely to be compatible with the maximum number of real-world systems. For emerging standards and less common devices, we will look for help from the community to build out a more complete set of drivers.&lt;/p&gt;
    &lt;p&gt;Here are some of the key efforts that we are hoping to complete by the end of 2026.&lt;/p&gt;
    &lt;head rend="h3"&gt;Firmware Support and Hardware Management&lt;/head&gt;
    &lt;p&gt;We need to rework our ACPI support, as the implementation we have needs better integration with the drivers and driver management. As well, Isaac Woods and the Rust-OSDev team have developed an entirely new AML parser, and improved the design of their acpi crate. We hope to take full advantage of their implementation.&lt;/p&gt;
    &lt;p&gt;The goal for 2026 is to ensure we can configure and run the system correctly, with full system management as stretch goals and future work.&lt;/p&gt;
    &lt;p&gt;We are designing our boot/init to handle non-APCI firmware, and we could use help developing drivers for IEEE-1275 and other standards, as well as getting access to hardware that we can use for testing.&lt;/p&gt;
    &lt;head rend="h3"&gt;WiFi&lt;/head&gt;
    &lt;p&gt;WiFi support is a whole collection of functionality, and it is not something we have tackled yet. We would appreciate some help porting an existing written-in-Rust WiFi driver stack, if an appropriate one can be found. It‚Äôs a pretty big project.&lt;/p&gt;
    &lt;head rend="h3"&gt;USB and I2C Support&lt;/head&gt;
    &lt;p&gt;Redox has USB drivers for keyboard, mouse, disk, and hub, but full support for USB on all the varied hardware out there remains a challenge. We could use help with improving our USB implementation, seeing if we can collaborate with other written-in-Rust implementations, adding new devices, and testing on real hardware.&lt;/p&gt;
    &lt;p&gt;We don‚Äôt have an I2C driver, and would love to collaborate with someone on creating one.&lt;/p&gt;
    &lt;head rend="h3"&gt;IOMMU and Virtualization&lt;/head&gt;
    &lt;p&gt;It is our intent that Redox will use IOMMU and hardware virtualization features wherever they are available, to protect against rogue hardware and drivers. However, we have not implemented support for IOMMU yet. We would like to at least get started on this in 2026.&lt;/p&gt;
    &lt;head rend="h3"&gt;Hosted Linux for Driver Support&lt;/head&gt;
    &lt;p&gt;In order to avoid porting thousands of device drivers, we would like to port QEMU to Redox, then run a stripped-down Linux to provide device drivers for less common and older devices. The interface between Redox and Linux-in-QEMU will be designed to be secure, so this approach should give us reasonable safety.&lt;/p&gt;
    &lt;p&gt;This is an experimental approach, and our goal for 2026 is to determine if it is feasible and useful. We want to be able to run QEMU on Redox regardless, so please join us if you want to help out.&lt;/p&gt;
    &lt;head rend="h2"&gt;COSMIC, Wayland, and GPU Acceleration&lt;/head&gt;
    &lt;p&gt;Redox uses the COSMIC Desktop, although we don‚Äôt currently support the COSMIC Compositor, so we are unable to use a lot of the COSMIC features. Porting Wayland will be a big step towards supporting the COSMIC Compositor, so that‚Äôs very high on our list of things to do.&lt;/p&gt;
    &lt;p&gt;The ability to send file descriptors over our Unix Domain Sockets was implemented in one of our Summer of Code projects (thanks Ibuki!), which represents a big step forward.&lt;/p&gt;
    &lt;p&gt;We are still missing some functionality in &lt;code&gt;relibc&lt;/code&gt;,
including timerfds and a few other things,
although most of the underlying machinery exists,
so if you want to help, please join our chat and let us know.&lt;/p&gt;
    &lt;p&gt;We are also looking for a full D-Bus implementation in Rust that can be ported to Redox.&lt;/p&gt;
    &lt;p&gt;For GPU acceleration, our first goal is to support Virtio graphics acceleration, probably using virglrenderer. Then Intel graphics will probably be the easiest next step, with drivers for AMD and NVIDIA graphics dependent on having access to the right information.&lt;/p&gt;
    &lt;head rend="h2"&gt;Accessibility and Internationalization&lt;/head&gt;
    &lt;p&gt;So far, Redox has not accomplished as much as we would like with either Internalization or Accessibility. We have gotten a start in the last few months but there‚Äôs lots to do.&lt;/p&gt;
    &lt;head rend="h3"&gt;Internationalization&lt;/head&gt;
    &lt;p&gt;Our goal with Internationalization (‚Äúi18n‚Äù) is to align with POSIX where possible, and we encourage ideas that go beyond the POSIX standard. Redox is UTF-8 natively, but we allow for opening non-UTF-8 file names on non-RedoxFS file systems.&lt;/p&gt;
    &lt;p&gt;Some of the areas that need work are&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Localization APIs and settings storage&lt;/item&gt;
      &lt;item&gt;Non-US keyboard support (started but not complete)&lt;/item&gt;
      &lt;item&gt;Non-Latin text display (COSMIC supports this, but Redox does not use it yet)&lt;/item&gt;
      &lt;item&gt;Timezones, numeric and currency display, other LC_* types&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Having team members with expertise in i18n/l10n support is would be a great boost to Redox.&lt;/p&gt;
    &lt;head rend="h3"&gt;Accessibility&lt;/head&gt;
    &lt;p&gt;We have started a discussion group for Accessibility. One of our contributors, Bendeguz Pisch, has been working on a screen reader solution for Redox. More help would be appreciated. We would ideally like a written-in-Rust solution with an MIT or other permissive license, but a good screen reader is not a small undertaking, and requires expertise in meeting the expectations of users.&lt;/p&gt;
    &lt;p&gt;There are many other areas of accessibility to address, and we would like to find contributors that can help us ensure that Redox meets the needs of as many users as possible.&lt;/p&gt;
    &lt;head rend="h2"&gt;Join Us!&lt;/head&gt;
    &lt;p&gt;There‚Äôs lots of exciting work ahead, and a great team already working on it. If you would like to be part of the team, or just listen in to the conversation, please join us on Redox Chat.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45376895</guid><pubDate>Thu, 25 Sep 2025 18:29:50 +0000</pubDate></item><item><title>Electron-based apps cause system-wide lag on macOS 26 Tahoe</title><link>https://github.com/electron/electron/issues/48311</link><description>&lt;doc fingerprint="c41447174b3717fe"&gt;
  &lt;main&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt; Notifications &lt;tool-tip&gt;You must be signed in to change notification settings&lt;/tool-tip&gt;&lt;/item&gt;
      &lt;item&gt;Fork 16.4k&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Description&lt;/head&gt;
    &lt;head rend="h3"&gt;Maintainer update&lt;/head&gt;
    &lt;p&gt;From @MarshallOfSound (#48311 (comment)):&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Hey folks, anyone experiencing this issue can you please raise a Feedback (via Feedback Assistant) with Apple. Make sure you send it while the issue is occurring and ensure you include a sysdiagnose with your report (I think that's automatic now, but check the box if there's a box).&lt;/p&gt;
      &lt;p&gt;We need a lot more to go on and this is likely a macOS issue.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;head rend="h3"&gt;Preflight Checklist&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;I have read the Contributing Guidelines for this project.&lt;/item&gt;
      &lt;item&gt;I agree to follow the Code of Conduct that this project adheres to.&lt;/item&gt;
      &lt;item&gt;I have searched the issue tracker for a bug report that matches the one I want to file, without success.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;Electron Version&lt;/head&gt;
    &lt;p&gt;37.3.1&lt;/p&gt;
    &lt;head rend="h3"&gt;What operating system(s) are you using?&lt;/head&gt;
    &lt;p&gt;macOS&lt;/p&gt;
    &lt;head rend="h3"&gt;Operating System Version&lt;/head&gt;
    &lt;p&gt;macOS 26 Tahoe RC&lt;/p&gt;
    &lt;head rend="h3"&gt;What arch are you using?&lt;/head&gt;
    &lt;p&gt;arm64 (including Apple Silicon)&lt;/p&gt;
    &lt;head rend="h3"&gt;Last Known Working Electron version&lt;/head&gt;
    &lt;p&gt;N/A, issue only persists since macOS 26&lt;/p&gt;
    &lt;head rend="h3"&gt;Does the issue also appear in Chromium / Google Chrome?&lt;/head&gt;
    &lt;p&gt;No&lt;/p&gt;
    &lt;head rend="h3"&gt;Expected Behavior&lt;/head&gt;
    &lt;p&gt;Smooth 120fps experience even when Electron-apps are open or not minimized&lt;/p&gt;
    &lt;head rend="h3"&gt;Actual Behavior&lt;/head&gt;
    &lt;p&gt;Using an M1 Max MacBook Pro, having Electron-based apps open / not minimized causes a huge lag.&lt;lb/&gt; CPU and GPU usage remains low, but if I have Discord and VS Code open, moving windows, scrolling is stuttery. It happens even when only Discord is open but it gets worse if I open a second Electron app.&lt;lb/&gt; This is kind of weird because while having Discord open and I'm in Chrome, the lag still occurs, but it's fixed if I minimize Discord (even though Chrome is fully in focus and maximized). This happens since upgrading to macOS 26 RC, macOS 15 didn't have this issue.&lt;lb/&gt; There is a similar lag if I open Settings - Wallpapers, moving the Settings window is laggy then (looks like 60fps instead of 120).&lt;/p&gt;
    &lt;head rend="h3"&gt;Testcase Gist URL&lt;/head&gt;
    &lt;p&gt;No response&lt;/p&gt;
    &lt;head rend="h3"&gt;Additional Information&lt;/head&gt;
    &lt;p&gt;No response&lt;/p&gt;
    &lt;head rend="h2"&gt;Metadata&lt;/head&gt;
    &lt;head rend="h2"&gt;Metadata&lt;/head&gt;
    &lt;head rend="h3"&gt;Assignees&lt;/head&gt;
    &lt;head rend="h3"&gt;Type&lt;/head&gt;
    &lt;head rend="h3"&gt;Projects&lt;/head&gt;
    &lt;p&gt;Status&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45376977</guid><pubDate>Thu, 25 Sep 2025 18:36:20 +0000</pubDate></item><item><title>Tracing JITs in the Real World CPython Core Dev Sprint</title><link>https://antocuni.eu/2025/09/24/tracing-jits-in-the-real-world--cpython-core-dev-sprint/</link><description>&lt;doc fingerprint="23330e932cf522d9"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Tracing JITs in the real world @ CPython Core Dev Sprint¬∂&lt;/head&gt;
    &lt;p&gt;Last week I got to take part in the CPython Core Developer Sprint in Cambridge, hosted by ARM and brilliantly organized by Diego Russo -- about ~50 core devs and guests were there, and I was excited to join as one of the guests.&lt;/p&gt;
    &lt;p&gt;I had three main areas of focus:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;C API: this was a follow up of what we discussed at the C API summit at EuroPython. The current C API is problematic, so we are exploring ideas for the development of PyNI (Python Native Interface), whose design will likely be heavily inspired by HPy. It's important to underline that this is just the beginning and the entire process will require multiple PEPs.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;fancycompleter This is a small PR which I started months ago, to enable colorful tab completions within the Python REPL. I wrote the original version of fancycompleter 15 years ago, but colorful completions work only in combination with PyREPL. Now PyREPL is part of the standard library and enabled by default, so we can finally upstream it. I hope to see it merged soon.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;"JIT stuff": I spent a considerable amount of time talking to the people who are working on the CPython JIT (in particular Mark, Brandt, Savannah, Ken Jin and Diego). Knowledge transfer worked in both ways: I learned a lot about the internal details of CPython's JIT, and conversely I shared with them some of the experience, pain points and gut feelings which I got by working many years on PyPy.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;In particular, on the first day I presented a talk titled Tracing JIT and real world Python (slides and source code).&lt;/p&gt;
    &lt;p&gt;What follows is an annotated version of the slides.&lt;/p&gt;
    &lt;p&gt;CPython's new JIT and PyPy's JIT share fundamental similarities, as they're both tracing JITs.&lt;/p&gt;
    &lt;p&gt;I spent ~7 years of my career optimizing existing code for PyPy at a high-frequency trading firm, and I realized that I'm probably one of the few people in the world with actual experience in optimizing real world Python code for a tracing JIT.&lt;/p&gt;
    &lt;p&gt;I expect that some of the challenges which I faced will still be valid also for CPython, and I wanted to share my experience to make sure that CPython core devs are aware of them.&lt;/p&gt;
    &lt;p&gt;One lesson which I learned is that the set of benchmarks in &lt;code&gt;pyperformance&lt;/code&gt; are
a good starting point, but they are not entirely representative of what you
find in the wild.&lt;/p&gt;
    &lt;p&gt;The main goal of the talk is not to present solutions to these problems, but to raise awareness that they exist.&lt;/p&gt;
    &lt;p&gt;Until now CPython's performance has been particularly predictable, there are well established "performance tricks" to make code faster, and generally speaking you can mostly reason about the speed of a given piece of code "locally".&lt;/p&gt;
    &lt;p&gt;Adding a JIT completely changes how we reason about performance of a given program, for two reasons:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;JITted code can be very fast if your code conforms to the heuristics applied by the JIT compiler, but unexpectedly slow(-ish) otherwise;&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;the speed of a given piece of code might depend heavily on what happens elsewhere in the program, making it much harder to reason about performance locally.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The end result is that modifying a line of code can significantly impact seemingly unrelated code. This effect becomes more pronounced as the JIT becomes more sophisticated.&lt;/p&gt;
    &lt;p&gt;The CPython JIT is still pretty new and doesn‚Äôt give huge speedups yet. I expect that as it gets faster, its performance will start looking more and more like PyPy‚Äôs.&lt;/p&gt;
    &lt;p&gt;I delivered this talk at the Core Dev Sprint: I expected my audience to be familiar with CPython's JIT, and wanted to draw parallels with PyPy's one.&lt;/p&gt;
    &lt;p&gt;Since the audience of this blog is different, let me briefly explain CPython's JIT first.&lt;/p&gt;
    &lt;p&gt;The explanations of both JITs are necessarily short, incomplete and highly simplified.&lt;/p&gt;
    &lt;head rend="h4"&gt;CPython JIT 101¬∂&lt;/head&gt;
    &lt;p&gt;Python source code is turned into bytecode. Bytecode is a sequence of "opcodes" (&lt;code&gt;LOAD_FAST&lt;/code&gt;, &lt;code&gt;BINARY_OP&lt;/code&gt;, etc.), and the CPython VM is an
interpreter for those opcodes. Historically the VM was written by hand, and the
main loop consisted of a big &lt;code&gt;switch&lt;/code&gt; statement which executed the code
corresponding to each opcode.&lt;/p&gt;
    &lt;p&gt;Nowadays things are different: the opcodes are written in a special DSL and the main interpreter loop is generated from this DSL. Additionally, the DSL describes how each opcode can be decomposed into multiple "microops".&lt;/p&gt;
    &lt;p&gt;When the interpreter detects a "hot loop", it starts the JIT. The JIT retroactively looks at the opcodes which were executed in the last iteration of the loop, and creates a "linear trace" which contains the equivalent microops. This process is called trace projection and the result is an unoptimized trace of microops.&lt;/p&gt;
    &lt;p&gt;Then, the JIT can produce an optimized trace, by reordering and removing redundant microops. Finally, the optimized trace is turned into executable code using the "copy &amp;amp; patch" technique.&lt;/p&gt;
    &lt;head rend="h4"&gt;PyPy JIT 101¬∂&lt;/head&gt;
    &lt;p&gt;CPython's Python interpreter is written in C, and then compiled into an executable by &lt;code&gt;gcc&lt;/code&gt; (or any other C compiler).&lt;/p&gt;
    &lt;p&gt;Similarly, PyPy's Python interpreter is written in RPython, and then compiled into an executable by &lt;code&gt;rpython&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;Under the hood, &lt;code&gt;rpython&lt;/code&gt; applies two separate transformations to the source
code:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;p&gt;it turns each function into C code, which is then fed to&lt;/p&gt;&lt;code&gt;gcc&lt;/code&gt;to get the final executable;&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;it turns each function into "jitcodes", which is a way to represent RPython's IR (internal representation). For each RPython function, the final&lt;/p&gt;&lt;code&gt;./pypy&lt;/code&gt;executable contains its compiled representation (generated by GCC) and its jitcode representation (embedded as static data into the executable).&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;In a way, RPython's jitcodes are equivalent to CPython's microops, as they are a low-level representation of the logic of each opcode.&lt;/p&gt;
    &lt;p&gt;When the interpreter detects a hot loop, it enters trace recording mode, which is essentially an interpreter which executes the jitcodes: the result is a linear unoptimized trace of all the jitcodes which were actually executed.&lt;/p&gt;
    &lt;p&gt;Similarly to CPython, PyPy then produces an optimized trace, which is then sent to the JIT backend for actual native code generation.&lt;/p&gt;
    &lt;p&gt;Tracing JITs work by recording a trace of all microops which are executed. The optimizer can then reason about what happens in the trace and remove unneeded operations.&lt;/p&gt;
    &lt;p&gt;However, sometimes we encounter some operation which is a black box from the point of view of the tracer: we call them "trace blocker", because the tracing JIT cannot see through them. In the case of CPython, this happens for example, whenever we call any function implemented in C (because it doesn't have any correspondent "microop").&lt;/p&gt;
    &lt;p&gt;This is a simple function that computes &lt;code&gt;pi&lt;/code&gt;, generated by ChatGPT.  Its
precise content is not important: what matters is that it's a nice purely
numerical loop that the PyPy JIT can optimize very well.&lt;/p&gt;
    &lt;p&gt;Same function as above, with a call to &lt;code&gt;hic_sunt_leones()&lt;/code&gt;. This is actually
an empty function which does absolutely nothing, but annotated in a
special way so that the PyPy JIT cannot "enter" it, so it effectively behaves
as trace blocker.&lt;/p&gt;
    &lt;p&gt;In this example we use the special &lt;code&gt;pypyjit.residual_call&lt;/code&gt; to simulate a trace
blocker, but in real life we get it whenever we have a call to any
non-traceable function, in particular C extensions.&lt;/p&gt;
    &lt;p&gt;The clean version runs 42x faster on PyPy than CPython - that's the JIT working perfectly. But with just one untraceable function call added to the loop, PyPy slows down to only 1.8x faster than CPython. That single line destroyed most of the JIT's effectiveness!&lt;/p&gt;
    &lt;p&gt;This happens because after the call the optimizer no longer knows whether its assumptions about the world are still true, and thus must be much more conservative.&lt;/p&gt;
    &lt;p&gt;I fear that for CPython, this will turn out to be a much bigger problem than for PyPy, for two reasons:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;nowadays it's virtually impossible to run Python code without using any C extension, either directly or indirectly.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;by construction, PyPy's JIT can see much more than CPython's JIT. Remember the slide about "jitcodes": any RPython function gets a "jitcodes" equivalent, which means that the JIT can automatially trace inside builtins and internals of the interpreter, whereas CPython can trace only inside pure python code.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;For example, PyPy's JIT can trace through &lt;code&gt;range()&lt;/code&gt;, &lt;code&gt;zip&lt;/code&gt;, and &lt;code&gt;enumerate()&lt;/code&gt;
automatically. CPython's JIT currently cannot because they are implemented in
C. CPython could add special cases for these common functions, but the
general approach doesn't scale.&lt;/p&gt;
    &lt;p&gt;The second big problem is what I call "data driven control flow". This example has been autogenerated by ChatGPT and it's completely silly, but it's a good representation of what happens in real life code.&lt;/p&gt;
    &lt;p&gt;In this example, &lt;code&gt;fn&lt;/code&gt; takes 9 variables, each of them can be &lt;code&gt;None&lt;/code&gt; or a
number. The function starts with a sequence of &lt;code&gt;if &amp;lt;var&amp;gt; is None: ...&lt;/code&gt;. The
function is then called repeatedly in a loop.&lt;/p&gt;
    &lt;p&gt;One of the assumption of tracing JITs is that control flow tends to stay on the "hot path", and that it's enough to optimize that to get good performance.&lt;/p&gt;
    &lt;p&gt;But in a case like this, each combination of &lt;code&gt;None&lt;/code&gt;ness selects a different
path, and if we assume the data is evenly distributed, we find out that
there is no hot path.&lt;/p&gt;
    &lt;p&gt;Let's see what happens when we execute on CPython and PyPy:&lt;/p&gt;
    &lt;p&gt;PyPy without JIT is "only" 2.3x slower than CPython, but when we enable the JIT, it becomes much worse. This happens because of an exponential explosion of code paths seen by the JIT.&lt;/p&gt;
    &lt;p&gt;In a normal compiler, an &lt;code&gt;if&lt;/code&gt; statement is compiled as a diamond, and the
control flow merges after each &lt;code&gt;if&lt;/code&gt;:&lt;/p&gt;
    &lt;p&gt;A tracing JIT by definition follows what's happening during a concrete execution, so it sees only a concrete path in the control flow, with "guards" to ensure correctness:&lt;/p&gt;
    &lt;p&gt;When &lt;code&gt;guard(a is None)&lt;/code&gt; fails enough times, we create a "bridge" and record
another linear trace, following again the concrete control flow that happens
now:&lt;/p&gt;
    &lt;code&gt;          guard(a is None) ----&amp;gt; FAIL (side exit)
            /                         \
           /                           \
        a = 0                          pass
           \                             \
            \                             \
    guard(b not None)              guard(b not None)
            /                             /
           /                             /
        b = 0                         b = 0
           \                             \
            \                             \
           ...                           ...
&lt;/code&gt;
    &lt;p&gt;Note how &lt;code&gt;b = 0&lt;/code&gt; is effectively duplicated now. By design, PyPy's JIT never
merges execution flow.&lt;/p&gt;
    &lt;p&gt;Looking inside &lt;code&gt;PYPYLOG&lt;/code&gt; confirms our theory: we get "exponential
tracing". The JIT has to compile separate optimized code for every unique
combination of which parameters are None and which aren't. With 9 parameters,
that could be up to 512 different combinations!&lt;/p&gt;
    &lt;p&gt;One possible mitigation is to rewrite conditional code to be "branchless" - using arithmetic tricks instead of if statements. But this makes code ugly and unreadable, and it's not always possible.&lt;/p&gt;
    &lt;p&gt;Despite years of working on this, I never found a really good solution. There were cases in which we had to continue running some piece of code on CPython because I never managed to make the PyPy version faster.&lt;/p&gt;
    &lt;p&gt;This pattern happens quite a lot, although often is more subtle: in this silly example all the &lt;code&gt;if&lt;/code&gt;s are nicely grouped together at the start, but in a long
trace they can be scattered in multiple places, and any kind of control flow
contributes to the problem, not only &lt;code&gt;if&lt;/code&gt;s. In Python, this includes any kind
of dynamic dispatch, exceptions, etc.&lt;/p&gt;
    &lt;p&gt;One possible solution for CPython's JIT is to try to merge (some) traces to avoid or limit the exponential explosion. However, it is worth underlining that tracing JITs shine precisely when they can optimize a long linear trace: if you try to compile shorter traces, you might quickly end up in a situation which is equivalent to the "trace blocker" problem described earlier.&lt;/p&gt;
    &lt;p&gt;I suspect this might be a fundamental limitation of tracing JITs.&lt;/p&gt;
    &lt;p&gt;Compared to the other two problems, this is less serious, but it's worth mentioning because of prevalence of &lt;code&gt;async&lt;/code&gt; (and thus implicitly generators)
in modern Python.&lt;/p&gt;
    &lt;p&gt;Here's another silly function that counts Pythagorean triples using nested loops. This is our baseline version using plain loops.&lt;/p&gt;
    &lt;p&gt;Here's the same algorithm refactored to use a generator function for the nested iteration. The "state of iteration" is implicitly stored inside the local variables of frame object associated to the &lt;code&gt;range_product&lt;/code&gt; generator.&lt;/p&gt;
    &lt;p&gt;Here's the same functionality implemented as a traditional iterator class. The "state of iteration" is explicitly stored as attributes of &lt;code&gt;RangeProductIter&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;On CPython, the generator version is ~29% slower than the explicit loops. The iterator class is much slower, as one would intuitively expect.&lt;/p&gt;
    &lt;p&gt;However, on PyPy we see different results: &lt;code&gt;RangeProductIter&lt;/code&gt; is basically
same speed as the baseline, while the generator version is slower. This
happens because in the case of &lt;code&gt;RangeProductIter&lt;/code&gt; the JIT is able to see the whole
lifetime of the object and optimize it away entirely: instance variables
become local variables, the call to &lt;code&gt;__next__&lt;/code&gt; is inlined and we get the
equivalent of explicit nested loops.&lt;/p&gt;
    &lt;p&gt;However, generators are required to create a frame object and represent a fundamental case in which the JIT cannot trace through them effectively. In more complex real-world scenarios, we saw much worse slowdowns than these examples show.&lt;/p&gt;
    &lt;p&gt;This is a collection of other miscellaneous problems that I had to deal with. Generally speaking, we lack good support for tooling and profilers. CPython needs to have a good story to explain people how to understand what's happening when the JIT is enabled.&lt;/p&gt;
    &lt;p&gt;Warmup is another big problem: in PyPy, very short programs tend to be slower than CPython because JITting costs. Moreover warmup is not an easily definable phase, as the linked paper shows. This is an area where currently CPython shines, as its JIT is very fast. I think that it will become slightly slower when it tries to optimize more aggressively, but hopefully warmup will overall be a lesser problem than on PyPy.&lt;/p&gt;
    &lt;p&gt;Moreover, it's very easy to accidentally make your code 2x, 5x or even 10x slower by changing seemingly innocent pieces of code. This is another reason why good tooling is essential.&lt;/p&gt;
    &lt;p&gt;Finally, the "long tail of JITting": every loop and every guard gets a counter, and we start JITting when it reaches a threshold. Given a sufficiently long running program, all counters reach the threshold eventually and we end up JITting much more than necessary, using too much memory and/or thrashing the cache. In many cases I found beneficial to just disable the JIT "after a while", with manually tuned heuristics.&lt;/p&gt;
    &lt;p&gt;These are slides which I didn't show during the live presentation, and show a case where a tracing JIT can shine: since the JIT sees a complete trace of an entire loop (including nested calls) it can easily removes a lot of temporary objects which usually penalize Python performance.&lt;/p&gt;
    &lt;p&gt;In many cases, we can get the famous "zero-cost abstractions".&lt;/p&gt;
    &lt;p&gt;Let's look at a concrete example. We need to compute the barycenter of triangles that are serialized in a binary format. Each triangle has three points, each point has x and y coordinates. This simulates real world protocols such as protobuf, capnproto, etc.&lt;/p&gt;
    &lt;p&gt;This is what we use a a baseline: a bare loop, using &lt;code&gt;struct.unpack_from&lt;/code&gt; to read 6 floats at a time.&lt;/p&gt;
    &lt;p&gt;Here's the "proper" object-oriented approach, similar to how modern serialization libraries work. We create &lt;code&gt;Triangle&lt;/code&gt; and &lt;code&gt;Point&lt;/code&gt; classes that
provide a nice API for accessing the binary data. Each property access creates
new objects and calls struct.unpack_from. This is much more readable and
reusable, but creates many temporary objects.&lt;/p&gt;
    &lt;p&gt;Here's how you'd use the object-oriented API. The code is much cleaner and more readable than the bare loop version. But notice how many object creations are happening: one &lt;code&gt;Triangle&lt;/code&gt; object, six &lt;code&gt;Point&lt;/code&gt; objects, plus all the
intermediate tuples from &lt;code&gt;struct.unpack_from&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;As expected, on CPython &lt;code&gt;read_proto&lt;/code&gt; is much slower than the bare one,
roughly 6x slower. However, PyPy can fully optimize away all the
abstraction overhead introduced by &lt;code&gt;Triangle&lt;/code&gt; and &lt;code&gt;Point&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;In PyPy jargon we call this form of allocation removal "virtuals" (because we create "virtual objects" whose fields are represented as local variables) and it's probably the single most important optimization that PyPy does.&lt;/p&gt;
    &lt;p&gt;During my week in Cambridge I talked extensively with the CPython JIT devs about this and I hope I convinced them that this is what they should aim for üòä.&lt;/p&gt;
    &lt;p&gt;Note also that &lt;code&gt;read_proto&lt;/code&gt; is actually faster than &lt;code&gt;read_loop&lt;/code&gt;. This
happens because in &lt;code&gt;read_loop&lt;/code&gt; we do a single &lt;code&gt;struct.unpack_from('dddddd', ...)&lt;/code&gt;,
while in &lt;code&gt;read_proto&lt;/code&gt; we do a succession of six individual
&lt;code&gt;struct.unpack_from('d', ...)&lt;/code&gt;. It turns out that the JIT is able to trace
into the second form but not into the first, which means that in &lt;code&gt;read_loop&lt;/code&gt;
we actually need to allocate a pseudo-tuple at each iteration.&lt;/p&gt;
    &lt;p&gt;The funny part is that I did not expect to get this result. I had to take the time to analyze the JIT traces of both versions to understand why &lt;code&gt;read_loop&lt;/code&gt; was slower.  This is probably the best explanation of how
counterintuitive it is to reason about performance in a JITted world.&lt;/p&gt;
    &lt;head rend="h2"&gt;Acknowledgments¬∂&lt;/head&gt;
    &lt;p&gt;Thanks to Carl Friedrich Bolz-Tereick and Hood Chatham for feedback on the slides and the post.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45377030</guid><pubDate>Thu, 25 Sep 2025 18:40:22 +0000</pubDate></item><item><title>Implementing UI translation in SumatraPDF, a C++ Windows application</title><link>https://blog.kowalczyk.info/a-vn0v/implementing-ui-translation-in-sumatrapdf-a-c-windows-application.html</link><description>&lt;doc fingerprint="3c5278dd8a2abbb8"&gt;
  &lt;main&gt;
    &lt;div&gt;
      &lt;p&gt;Translating user interface of SumatraPDF&lt;/p&gt;
      &lt;div&gt;SumatraPDF&lt;p&gt; is the best PDF/eBook/Comic Book viewer for Windows. It‚Äôs small, fast, full of features, free and open-source.&lt;/p&gt;&lt;/div&gt;
      &lt;p&gt;It became popular enough that it made sense to translate the UI for non-English users. Currently we support 72 languages.&lt;/p&gt;
      &lt;p&gt;This article describes how I designed and implemented a translation system in SumatraPDF, a native win32 C++ Windows application.&lt;/p&gt;
      &lt;p&gt;Hard things about translating the UI&lt;/p&gt;
      &lt;p&gt;There are 2 hard things about translating an application&lt;/p&gt;
      &lt;list rend="ul"&gt;
        &lt;item&gt;code for translation system (extracting strings to translate, translate strings from English to user‚Äôs language)&lt;/item&gt;
        &lt;item&gt;translating them into many languages&lt;/item&gt;
      &lt;/list&gt;
      &lt;p&gt;Currently there are 381 strings in SumatraPDF subject to translation. It‚Äôs important that the system requires the least amount of effort when adding new strings to translate.&lt;/p&gt;
      &lt;p&gt;Every string that needs to be translated is marked in &lt;code&gt;.cpp&lt;/code&gt; or &lt;code&gt;.h&lt;/code&gt; file with one of two macros:&lt;/p&gt;
      &lt;list rend="ul"&gt;
        &lt;item&gt;
          &lt;code&gt;_TRA("Rename")&lt;/code&gt;
        &lt;/item&gt;
        &lt;item&gt;
          &lt;code&gt;_TRN("Open")&lt;/code&gt;
        &lt;/item&gt;
      &lt;/list&gt;
      &lt;p&gt;I have a script that extracts those strings from source files. Mine is written in Go but it could just as well be Python or JavaScript. It‚Äôs a simple regex job.&lt;/p&gt;
      &lt;p&gt;&lt;code&gt;_TR&lt;/code&gt; stands for ‚Äútranslation‚Äù.&lt;/p&gt;
      &lt;p&gt;&lt;code&gt;_TRA(s)&lt;/code&gt; expands into &lt;code&gt;const char* trans::GetTranslation(const char* str)&lt;/code&gt; function which returns &lt;code&gt;str&lt;/code&gt; translated to current UI language.&lt;/p&gt;
      &lt;p&gt;We auto-detect language at startup based on Windows settings and allow the user to explicitly set UI language.&lt;/p&gt;
      &lt;p&gt;For English we just return the original string.&lt;/p&gt;
      &lt;p&gt;If a string to be translated is e.g. a part of &lt;code&gt;const char* array[]&lt;/code&gt;, we can‚Äôt use &lt;code&gt;trans::GetTranslation()&lt;/code&gt;.&lt;/p&gt;
      &lt;p&gt;For cases like that we have &lt;code&gt;_TRN()&lt;/code&gt; which expands to English string. We have to write code to translate it at some point.&lt;/p&gt;
      &lt;p&gt;Adding new strings is therefore as simple as wrapping them in &lt;code&gt;_TRA()&lt;/code&gt; or &lt;code&gt;_TRN()&lt;/code&gt; macros.&lt;/p&gt;
      &lt;p&gt;Translating strings into many languages&lt;/p&gt;
      &lt;p&gt;Now that we‚Äôve extracted strings to be translated, we need to translate them into 72 languages.&lt;/p&gt;
      &lt;p&gt;SumatraPDF is a free, open-source program. I don‚Äôt have a budget to hire translators. I don‚Äôt have a budget, period.&lt;/p&gt;
      &lt;p&gt;The only option was to get help from SumatraPDF users.&lt;/p&gt;
      &lt;p&gt;It was vital to make it very easy for users to send me translations. I didn‚Äôt want to ask them, for example, to download some translation software.&lt;/p&gt;
      &lt;p&gt;Design and implementation of AppTranslator web app&lt;/p&gt;
      &lt;p&gt;I designed it to be generic but I don‚Äôt think anyone else is using it.&lt;/p&gt;
      &lt;list rend="ul"&gt;
        &lt;item&gt;4k lines of Go server code&lt;/item&gt;
        &lt;item&gt;451 lines of html code&lt;/item&gt;
        &lt;item&gt;a single dependency: bootstrap CSS framework (the project is old)&lt;/item&gt;
      &lt;/list&gt;
      &lt;p&gt;It‚Äôs simple because I don‚Äôt want to spend a lot of time writing translation software. It‚Äôs just a side project in service of the goal of translating SumatraPDF.&lt;/p&gt;
      &lt;p&gt;Login is exclusively via GitHub.&lt;/p&gt;
      &lt;p&gt;It doesn‚Äôt even use a database. Like in Redis, changes are stored as a series of operations in an append-only log. We keep the whole state in memory and re-create it from the log at startup.&lt;/p&gt;
      &lt;p&gt;Main operation is &lt;code&gt;translate a string from English to language X&lt;/code&gt; represented as &lt;code&gt;[kOpTranslation, english string, language, translation, user who provided translation]&lt;/code&gt;.&lt;/p&gt;
      &lt;p&gt;When user provides a translation in the web UI, we send an API call to the server which appends the translation operation to the log.&lt;/p&gt;
      &lt;p&gt;Simple and reliable.&lt;/p&gt;
      &lt;p&gt;Because the code is written in Go, it‚Äôs very fast and memory efficient. When running it uses mere megabytes of RAM. It can comfortably run on the smallest 256 MB VPS server.&lt;/p&gt;
      &lt;p&gt;I backup the log to S3 so if the server ever fails, I can re-install the program on a new server and re-download the translations from S3.&lt;/p&gt;
      &lt;p&gt;I provide RSS feed for each language so that people who provide translations can monitor for new strings to be translated.&lt;/p&gt;
      &lt;p&gt;Sending strings for translation and receiving translations&lt;/p&gt;
      &lt;p&gt;So I have a web app for collecting translations and a script that extracts strings to be translated from source code.&lt;/p&gt;
      &lt;p&gt;How do they connect?&lt;/p&gt;
      &lt;p&gt;AppTranslator has an API for submitting the current set of strings to be translated in the simplest possible format: a line for each string (I ensure there are no newlines in the string itself by escaping them with &lt;code&gt;\n&lt;/code&gt;)&lt;/p&gt;
      &lt;p&gt;API is password protected because only I can submit the strings.&lt;/p&gt;
      &lt;p&gt;The server compares the strings sent with the current set and records a difference in the log.&lt;/p&gt;
      &lt;p&gt;It also sends a response with translations. Again the simplest possible format:&lt;/p&gt;
      &lt;quote&gt;
        &lt;code&gt;AppTranslator: SumatraPDF
651b739d7fa110911f25563c933f42b1d37590f8
:%s annotation. Ctrl+click to edit.
am:%s ’¥’•’Ø’∂’°’¢’°’∂’∏÷Ç’©’µ’∏÷Ç’∂: Ctrl+÷Ñ’¨’´÷Ñ’ù ’≠’¥’¢’°’£÷Ä’•’¨’∏÷Ç ’∞’°’¥’°÷Ä:
ar:ŸÖŸÑÿßÿ≠ÿ∏ÿ© %s. ÿßÿ∂ÿ∫ÿ∑ Ctrl ŸÑŸÑÿ™ÿ≠ÿ±Ÿäÿ±.
az:Qeyd %s. D√ºz…ôli≈ü etm…ôk √º√ß√ºn Ctrl+d√ºym…ôy…ô basƒ±n.
&lt;/code&gt;
      &lt;/quote&gt;
      &lt;p&gt;As you can see:&lt;/p&gt;
      &lt;list rend="ul"&gt;
        &lt;item&gt;a string to translate is on a line starting with :&lt;/item&gt;
        &lt;item&gt;is followed by translations of that strings in the format: &lt;code&gt;${lang}: ${translation}&lt;/code&gt;&lt;/item&gt;
      &lt;/list&gt;
      &lt;p&gt;An optimization: &lt;code&gt;651b739d7fa110911f25563c933f42b1d37590f8&lt;/code&gt; is a hash of this response. If I submit this hash with my request and translations didn‚Äôt change on the server, the response is empty.&lt;/p&gt;
      &lt;p&gt;Implementing C++ part of translation system&lt;/p&gt;
      &lt;p&gt;So now I have a text file with translation downloaded from the server. How do I get a translation in my C++ code?&lt;/p&gt;
      &lt;p&gt;As with everything in SumatraPDF, I try to do things in a simple and efficient way.&lt;/p&gt;
      &lt;p&gt;The whole &lt;code&gt;Translation.cpp&lt;/code&gt; is only 239 lines of code.&lt;/p&gt;
      &lt;p&gt;The core of translation system is &lt;code&gt;const char* trans::GetTranslation(const char* s);&lt;/code&gt; function.&lt;/p&gt;
      &lt;p&gt;I embed the translations in exact the same format as received from AppTranslator in the executable as data file in resources.&lt;/p&gt;
      &lt;p&gt;If the UI language is English, we do nothing. &lt;code&gt;trans::GetTranslation()&lt;/code&gt; returns its argument.&lt;/p&gt;
      &lt;p&gt;When we switch the language, we load the translations from resources and build an index:&lt;/p&gt;
      &lt;list rend="ul"&gt;
        &lt;item&gt;an array of English strings&lt;/item&gt;
        &lt;item&gt;an array of corresponding translations&lt;/item&gt;
      &lt;/list&gt;
      &lt;div&gt;&lt;p&gt;Both arrays use my own &lt;/p&gt;StrVec&lt;p&gt; class optimized for storing an array of strings.&lt;/p&gt;&lt;/div&gt;
      &lt;p&gt;To find a translation we scan the first array to find an index of the string and return translation from the second array, at the same index.&lt;/p&gt;
      &lt;p&gt;Linear scan seems like it would be slow but it isn‚Äôt.&lt;/p&gt;
      &lt;p&gt;Resizing dialogs&lt;/p&gt;
      &lt;p&gt;I have a few dialogs defined in &lt;code&gt;SumatraPDF.rc&lt;/code&gt; file.&lt;/p&gt;
      &lt;p&gt;The problem with dialogs is that position of UI elements is fixed.&lt;/p&gt;
      &lt;p&gt;A translated string will almost certainly have a different size than the English string which will mess up fixed layout.&lt;/p&gt;
      &lt;p&gt;Thankfully someone wrote DialogSizer that smartly resizes dialogs and solves this problem.&lt;/p&gt;
      &lt;p&gt;The evolution of a solution&lt;/p&gt;
      &lt;p&gt;No AppTranslator&lt;/p&gt;
      &lt;p&gt;My initial implementation was simpler. I didn‚Äôt yet have AppTranslator so I stored the strings in a text file in repository in the same format as what I described above.&lt;/p&gt;
      &lt;p&gt;People would download it, make changes using a text editor and send me the file via email which I would then checkin.&lt;/p&gt;
      &lt;p&gt;It worked for a while but it became worse over time. More strings, more languages created more work for me to manually manage e-mail submissions.&lt;/p&gt;
      &lt;p&gt;I decided to automate the process.&lt;/p&gt;
      &lt;p&gt;Code generation&lt;/p&gt;
      &lt;p&gt;My first implementation of C++ side used code generation instead of embedding the text file in resources.&lt;/p&gt;
      &lt;p&gt;My Go script would generate C++ source code files with static &lt;code&gt;const char* []&lt;/code&gt; arrays.&lt;/p&gt;
      &lt;p&gt;This worked well but I decided to improve it further by making the code use the text file with translations embedded in the app.&lt;/p&gt;
      &lt;p&gt;The main motivation for the change was to open a possibility of downloading latest translations from the server to fix the problem of translations not being all ready when I build the release executable.&lt;/p&gt;
      &lt;p&gt;I haven‚Äôt done that yet but it‚Äôs now easier to implement given that the format of strings embedded in the exe is the same as the one I can download from AppTranslator.&lt;/p&gt;
      &lt;p&gt;Only utf-8&lt;/p&gt;
      &lt;p&gt;SumatraPDF started by using both &lt;code&gt;WCHAR*&lt;/code&gt; Unicode strings and &lt;code&gt;char*&lt;/code&gt; utf8 strings.&lt;/p&gt;
      &lt;p&gt;For that reason the translation system had to support returning translation in both &lt;code&gt;WCHAR*&lt;/code&gt; and &lt;code&gt;char*&lt;/code&gt; version.&lt;/p&gt;
      &lt;p&gt;Over time I refactored the code to use mostly utf8 and at some point I no longer needed to support &lt;code&gt;WCHAR*&lt;/code&gt; version.&lt;/p&gt;
      &lt;p&gt;That made the code even smaller and reduced memory usage.&lt;/p&gt;
      &lt;p&gt;The experience&lt;/p&gt;
      &lt;p&gt;I‚Äôm happy how things turned out.&lt;/p&gt;
      &lt;div&gt;AppTranslator&lt;p&gt; proved to be reliable and hassle free. It runs for many years now and collected 35440 string translations from users.&lt;/p&gt;&lt;/div&gt;
      &lt;p&gt;I automated everything so that all I need to do is to periodically re-run the script that extracts strings from source code, uploads them to AppTranslator and downloads latest translations.&lt;/p&gt;
      &lt;p&gt;One problem is that translations are not always ready in time for release so I make a release and then people start translating strings added since last release.&lt;/p&gt;
      &lt;p&gt;I‚Äôve considered downloading the latest translations from the server, in addition to embedding them in an executable at the time of building the app.&lt;/p&gt;
      &lt;p&gt;Would I do the same today?&lt;/p&gt;
      &lt;p&gt;While AppTranslator is reliable and doesn‚Äôt require on-going work, it would be better to not have to run a server at all.&lt;/p&gt;
      &lt;p&gt;The world has changed since I started SumatraPDF.&lt;/p&gt;
      &lt;p&gt;Namely: people are comfortable using GitHub and you can edit files directly in GitHub UI. It‚Äôs not a great experience but it works.&lt;/p&gt;
      &lt;p&gt;One option would be to generate a translation text file for each language, in this format:&lt;/p&gt;
      &lt;quote&gt;
        &lt;code&gt;:first untranslated string
:second untranslated string
:first translated string
translation of first string
:second translated string
translation of second string
&lt;/code&gt;
      &lt;/quote&gt;
      &lt;p&gt;Untranslated strings are listed at the top, to make it easier to find.&lt;/p&gt;
      &lt;p&gt;A link would send a translator directly to edit this file in GitHub UI.&lt;/p&gt;
      &lt;p&gt;When translator saves translations, it creates a PR for me to review and merge.&lt;/p&gt;
      &lt;p&gt;The roads not taken&lt;/p&gt;
      &lt;quote&gt;
        &lt;p&gt;But why did you re-invent everything? You should do X instead.&lt;/p&gt;
      &lt;/quote&gt;
      &lt;p&gt;All other X that I know about suck.&lt;/p&gt;
      &lt;p&gt;Using per-language .rc resource files&lt;/p&gt;
      &lt;p&gt;Traditional way of localizing / translating Window GUI apps is to store all strings and dialog definitions in an &lt;code&gt;.rc&lt;/code&gt; file. Each language gets its own &lt;code&gt;.rc&lt;/code&gt; file (or files) and the program picks the right resource based on a language.&lt;/p&gt;
      &lt;p&gt;This doesn‚Äôt solve the 2 hard problems:&lt;/p&gt;
      &lt;list rend="ul"&gt;
        &lt;item&gt;having an easy way to add strings for translations&lt;/item&gt;
        &lt;item&gt;having an easy way for users to provide translations&lt;/item&gt;
      &lt;/list&gt;
      &lt;p&gt;XML horror show&lt;/p&gt;
      &lt;p&gt;There was a dark time when the world was under the iron grip of XML fanaticism.&lt;/p&gt;
      &lt;p&gt;Everything had to be an XML file even when it was the worst possible solution for the problem.&lt;/p&gt;
      &lt;p&gt;XML doesn‚Äôt solve the 2 hard problems and a string storage format is an absolute nightmare for human editing.&lt;/p&gt;
      &lt;p&gt;GNU gettext&lt;/p&gt;
      &lt;p&gt;There‚Äôs a C library gettext that uses &lt;code&gt;.po&lt;/code&gt; files.&lt;/p&gt;
      &lt;p&gt;This is much saner solution than XML horror show. &lt;code&gt;.po&lt;/code&gt; files are relatively simple text format. The code is already written.&lt;/p&gt;
      &lt;p&gt;Warning: tooting my own horn.&lt;/p&gt;
      &lt;div&gt;&lt;p&gt;My format is better. It‚Äôs easier for people to edit, it‚Äôs easier to write code to parse it. &lt;/p&gt;This&lt;p&gt; looks like many times more than 239 lines of code.&lt;/p&gt;&lt;/div&gt;
      &lt;p&gt;Ok, gettext probably does a bit more than my code, but clearly nothing than I need.&lt;/p&gt;
      &lt;p&gt;It also doesn‚Äôt solve the 2 hard problems. I would still have to write code to extract strings from source code and build a way to allow users to translate them easily.&lt;/p&gt;
    &lt;/div&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45377572</guid><pubDate>Thu, 25 Sep 2025 19:17:18 +0000</pubDate></item><item><title>Ollama Web Search</title><link>https://ollama.com/blog/web-search</link><description>&lt;doc fingerprint="2d52dc131ca4ae0e"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Web search&lt;/head&gt;
    &lt;head rend="h2"&gt;September 24, 2025&lt;/head&gt;
    &lt;p&gt;A new web search API is now available in Ollama. Ollama provides a generous free tier of web searches for individuals to use, and higher rate limits are available via Ollama‚Äôs cloud.&lt;/p&gt;
    &lt;p&gt;This web search capability can augment models with the latest information from the web to reduce hallucinations and improve accuracy.&lt;/p&gt;
    &lt;p&gt;Web search is provided as a REST API with deeper tool integrations in Ollama‚Äôs Python and JavaScript libraries. This also enables models such as OpenAI‚Äôs &lt;code&gt;gpt-oss&lt;/code&gt; models to conduct long-running research tasks.&lt;/p&gt;
    &lt;head rend="h3"&gt;Get started&lt;/head&gt;
    &lt;p&gt;Create an API key from your Ollama account.&lt;/p&gt;
    &lt;code&gt;export OLLAMA_API_KEY="your_api_key"
&lt;/code&gt;
    &lt;head rend="h4"&gt;cURL&lt;/head&gt;
    &lt;code&gt;curl https://ollama.com/api/web_search \
  --header "Authorization: Bearer $OLLAMA_API_KEY" \
  -d '{
    "query": "what is ollama?"
  }'
&lt;/code&gt;
    &lt;p&gt;Example output&lt;/p&gt;
    &lt;code&gt;{
  "results": [
    {
      "title": "Ollama",
      "url": "https://ollama.com/",
      "content": "Cloud models are now available..."
    },
    {
      "title": "What is Ollama? Introduction to the AI model management tool",
      "url": "https://www.hostinger.com/tutorials/what-is-ollama",
      "content": "Ariffud M. 6min Read..."
    },
    {
      "title": "Ollama Explained: Transforming AI Accessibility and Language ...",
      "url": "https://www.geeksforgeeks.org/artificial-intelligence/ollama-explained-transforming-ai-accessibility-and-language-processing/",
      "content": "Data Science Data Science Projects Data Analysis..."
    }
  ]
}
&lt;/code&gt;
    &lt;head rend="h4"&gt;Python&lt;/head&gt;
    &lt;p&gt;Install and run Ollama‚Äôs Python library&lt;/p&gt;
    &lt;code&gt;pip install 'ollama&amp;gt;=0.6.0'
&lt;/code&gt;
    &lt;p&gt;Then make a request using &lt;code&gt;ollama.web_search&lt;/code&gt;:&lt;/p&gt;
    &lt;code&gt;import ollama
response = ollama.web_search("What is Ollama?")
print(response)
&lt;/code&gt;
    &lt;p&gt;Example output&lt;/p&gt;
    &lt;code&gt;results = [
    {
        "title": "Ollama",
        "url": "https://ollama.com/",
        "content": "Cloud models are now available in Ollama..."
    },
    {
        "title": "What is Ollama? Features, Pricing, and Use Cases - Walturn",
        "url": "https://www.walturn.com/insights/what-is-ollama-features-pricing-and-use-cases",
        "content": "Our services..."
    },
    {
        "title": "Complete Ollama Guide: Installation, Usage &amp;amp; Code Examples",
        "url": "https://collabnix.com/complete-ollama-guide-installation-usage-code-examples",
        "content": "Join our Discord Server..."
    }
]
&lt;/code&gt;
    &lt;head rend="h4"&gt;JavaScript&lt;/head&gt;
    &lt;p&gt;Install and run Ollama‚Äôs JavaScript library&lt;/p&gt;
    &lt;code&gt;npm install 'ollama@&amp;gt;=0.6.0'
&lt;/code&gt;
    &lt;code&gt;import { Ollama } from "ollama";

const client = new Ollama();
const results = await client.webSearch({ query: "what is ollama?" });
console.log(JSON.stringify(results, null, 2));
&lt;/code&gt;
    &lt;p&gt;Example output&lt;/p&gt;
    &lt;code&gt;{
  "results": [
    {
      "title": "Ollama",
      "url": "https://ollama.com/",
      "content": "Cloud models are now available..."
    },
    {
      "title": "What is Ollama? Introduction to the AI model management tool",
      "url": "https://www.hostinger.com/tutorials/what-is-ollama",
      "content": "Ollama is an open-source tool..."
    },
    {
      "title": "Ollama Explained: Transforming AI Accessibility and Language Processing",
      "url": "https://www.geeksforgeeks.org/artificial-intelligence/ollama-explained-transforming-ai-accessibility-and-language-processing/",
      "content": "Ollama is a groundbreaking..."
    }
  ]
}

&lt;/code&gt;
    &lt;head rend="h3"&gt;Building a search agent&lt;/head&gt;
    &lt;p&gt;Use Ollama‚Äôs web search as a tool to build a mini search agent.&lt;/p&gt;
    &lt;p&gt;The example uses Alibaba‚Äôs Qwen 3 model with 4B parameters.&lt;/p&gt;
    &lt;code&gt;ollama pull qwen3:4b
&lt;/code&gt;
    &lt;code&gt;from ollama import chat, web_fetch, web_search

available_tools = {'web_search': web_search, 'web_fetch': web_fetch}

messages = [{'role': 'user', 'content': "what is ollama's new engine"}]

while True:
  response = chat(
    model='qwen3:4b',
    messages=messages,
    tools=[web_search, web_fetch],
    think=True
    )
  if response.message.thinking:
    print('Thinking: ', response.message.thinking)
  if response.message.content:
    print('Content: ', response.message.content)
  messages.append(response.message)
  if response.message.tool_calls:
    print('Tool calls: ', response.message.tool_calls)
    for tool_call in response.message.tool_calls:
      function_to_call = available_tools.get(tool_call.function.name)
      if function_to_call:
        args = tool_call.function.arguments
        result = function_to_call(**args)
        print('Result: ', str(result)[:200]+'...')
        # Result is truncated for limited context lengths
        messages.append({'role': 'tool', 'content': str(result)[:2000 * 4], 'tool_name': tool_call.function.name})
      else:
        messages.append({'role': 'tool', 'content': f'Tool {tool_call.function.name} not found', 'tool_name': tool_call.function.name})
  else:
    break
&lt;/code&gt;
    &lt;p&gt;Result&lt;/p&gt;
    &lt;code&gt;Thinking:  Okay, the user is asking about Ollama's new engine. I need to figure out what they're referring to. Ollama is a company that develops large language models, so maybe they've released a new model or an updated version of their existing engine...

Tool calls:  [ToolCall(function=Function(name='web_search', arguments={'max_results': 3, 'query': 'Ollama new engine'}))]
Result:  results=[WebSearchResult(content='# New model scheduling\n\n## September 23, 2025\n\nOllama now includes a significantly improved model scheduling system. Ahead of running a model, Ollama‚Äôs new engine...

Thinking:  Okay, the user asked about Ollama's new engine. Let me look at the search results.

First result is from September 23, 2025, talking about new model scheduling. It mentions improved memory management, reduced crashes, better GPU utilization, and multi-GPU performance. Examples show speed improvements and accurate memory reporting. Supported models include gemma3, llama4, qwen3, etc...

Content:  Ollama has introduced two key updates to its engine, both released in 2025:

1. **Enhanced Model Scheduling (September 23, 2025)**
   - **Precision Memory Management**: Exact memory allocation reduces out-of-memory crashes and optimizes GPU utilization.
   - **Performance Gains**: Examples show significant speed improvements (e.g., 85.54 tokens/s vs 52.02 tokens/s) and full GPU layer utilization.
   - **Multi-GPU Support**: Improved efficiency across multiple GPUs, with accurate memory reporting via tools like `nvidia-smi`.
   - **Supported Models**: Includes `gemma3`, `llama4`, `qwen3`, `mistral-small3.2`, and more.

2. **Multimodal Engine (May 15, 2025)**
   - **Vision Support**: First-class support for vision models, including `llama4:scout` (109B parameters), `gemma3`, `qwen2.5vl`, and `mistral-small3.1`.
   - **Multimodal Tasks**: Examples include identifying animals in multiple images, answering location-based questions from videos, and document scanning.

These updates highlight Ollama's focus on efficiency, performance, and expanded capabilities for both text and vision tasks.
&lt;/code&gt;
    &lt;p&gt;Recommended models:&lt;/p&gt;
    &lt;p&gt;These models have great tool-use capabilities and are able to have multi-turn interactions with the user and tools to get to a final result.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;code&gt;qwen3&lt;/code&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;code&gt;gpt-oss&lt;/code&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Recommended cloud models:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;code&gt;qwen3:480b-cloud&lt;/code&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;code&gt;gpt-oss:120b-cloud&lt;/code&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;code&gt;deepseek-v3.1-cloud&lt;/code&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The &lt;code&gt;web_search&lt;/code&gt; and &lt;code&gt;web_fetch&lt;/code&gt; tools can return thousands of tokens. It is recommended to increase the context length of the model to ~32000 tokens for reasonable performance. Search agents work best with full context length.&lt;/p&gt;
    &lt;head rend="h3"&gt;Fetching page results&lt;/head&gt;
    &lt;p&gt;To fetch individual pages (e.g. when a user provides a url in the prompt), use the new web fetch API.&lt;/p&gt;
    &lt;head rend="h4"&gt;Python library&lt;/head&gt;
    &lt;code&gt;from ollama import web_fetch

result = web_fetch('https://ollama.com')
print(result)
&lt;/code&gt;
    &lt;p&gt;Result&lt;/p&gt;
    &lt;code&gt;WebFetchResponse(
    title='Ollama',
    content='[Cloud models](https://ollama.com/blog/cloud-models) are now available in Ollama\n\n**Chat &amp;amp; build
with open models**\n\n[Download](https://ollama.com/download) [Explore
models](https://ollama.com/models)\n\nAvailable for macOS, Windows, and Linux',
    links=['https://ollama.com/', 'https://ollama.com/models', 'https://github.com/ollama/ollama']
)
&lt;/code&gt;
    &lt;p&gt;Example Python code is available on GitHub.&lt;/p&gt;
    &lt;head rend="h4"&gt;JavaScript library&lt;/head&gt;
    &lt;code&gt;import { Ollama } from "ollama";

const client = new Ollama();
const fetchResult = await client.webFetch({ url: "https://ollama.com" });
console.log(JSON.stringify(fetchResult, null, 2));
&lt;/code&gt;
    &lt;p&gt;Result&lt;/p&gt;
    &lt;code&gt;{
  "title": "Ollama",
  "content": "[Cloud models](https://ollama.com/blog/cloud-models) are now available in Ollama...",
  "links": [
    "https://ollama.com/",
    "https://ollama.com/models",
    "https://github.com/ollama/ollama"
  ]
}
&lt;/code&gt;
    &lt;p&gt;Example JavaScript code is available on GitHub.&lt;/p&gt;
    &lt;head rend="h4"&gt;cURL&lt;/head&gt;
    &lt;code&gt;curl --request POST \
  --url https://ollama.com/api/web_fetch \
  --header "Authorization: Bearer $OLLAMA_API_KEY" \
  --header 'Content-Type: application/json' \
  --data '{
      "url": "ollama.com"
}'
&lt;/code&gt;
    &lt;p&gt;Result&lt;/p&gt;
    &lt;code&gt;{
  "title": "Ollama",
  "content": "[Cloud models](https://ollama.com/blog/cloud-models) are now available in Ollama...",
  "links": [
    "http://ollama.com/",
    "http://ollama.com/models",
    "https://github.com/ollama/ollama"
  ]
}
&lt;/code&gt;
    &lt;head rend="h3"&gt;Integrations&lt;/head&gt;
    &lt;head rend="h3"&gt;MCP Server (Model Context Protocol server)&lt;/head&gt;
    &lt;p&gt;You can enable web search in any MCP client through the Python MCP server.&lt;/p&gt;
    &lt;head rend="h4"&gt;Cline&lt;/head&gt;
    &lt;p&gt;To integrate with Cline, configure MCP servers in its settings.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Manage MCP Servers &amp;gt; Configure MCP Servers &amp;gt; Add the configuration below&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;{
  "mcpServers": {
    "web_search_and_fetch": {
      "type": "stdio",
      "command": "uv",
      "args": ["run", "path/to/web-search-mcp.py"],
      "env": { "OLLAMA_API_KEY": "your_api_key_here" }
    }
  }
}
&lt;/code&gt;
    &lt;head rend="h4"&gt;Codex&lt;/head&gt;
    &lt;p&gt;Add the following configuration to &lt;code&gt;~/.codex/config.toml&lt;/code&gt;&lt;/p&gt;
    &lt;code&gt;[mcp_servers.web_search]
command = "uv"
args = ["run", "path/to/web-search-mcp.py"]
env = { "OLLAMA_API_KEY" = "your_api_key_here" }
&lt;/code&gt;
    &lt;head rend="h4"&gt;Goose&lt;/head&gt;
    &lt;p&gt;You can integrate with Ollama via Goose‚Äôs extensions.&lt;/p&gt;
    &lt;head rend="h3"&gt;Get started&lt;/head&gt;
    &lt;p&gt;Web search is included with a free Ollama account, with much higher rate limits available by upgrading your Ollama subscription.&lt;/p&gt;
    &lt;p&gt;To get started, sign up for an Ollama account!&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45377641</guid><pubDate>Thu, 25 Sep 2025 19:21:52 +0000</pubDate></item><item><title>Can a model trained on satellite data really find brambles on the ground?</title><link>https://toao.com/blog/can-we-really-see-brambles-from-space</link><description>&lt;doc fingerprint="3d09f083bdbd4a9a"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Can a model trained on satellite data really find brambles on the ground?&lt;/head&gt;
    &lt;p&gt;Over the summer Gabriel Mahler has been conducting research on hedgehog habitat mapping using Agent Based Models (ABMs) and remote sensing. Hedgehogs seem to like brambles and so as part of his work he has produced a bramble map. He did this by combining the TESSERA earth representation embeddings (using the geotessera library) with data from iNaturalist. The current model is an ensemble of logistic regression and a knn classifier.&lt;/p&gt;
    &lt;p&gt;Can we really see brambles from space? What better way to test the model than a quick field trip around Cambridge. Gabriel, Anil, Shane and I did just that today.&lt;/p&gt;
    &lt;p&gt;We started at Milton Community Centre, as the model was relatively confident there were brambles near the car park and along the path to Milton Park. It took us about 20 seconds to find the first one in an area indicated by the model.&lt;/p&gt;
    &lt;p&gt;So it turns out that there's a lot of bramble between the community center and entrance to Milton Country Park. We stopped six or seven times before reaching the park entrance. While the model predicted we'd find brambles all over the park, we went for the few areas of very high confidence near the entrance. In every place we checked, we found pretty significant amounts of bramble.&lt;/p&gt;
    &lt;p&gt;We collected photos of all the places we stopped, as well as recording our GPS location. One thought while out exploring is that the model did a great job predicting where we would find very large quantities of bramble without any cover. It didn't have high confidence in other areas where we found smaller brambles under partial cover. Since TESSERA is learned representation from remote sensing data (Sentinel 1 and 2), it would make sense that bramble partially obscured from above might be harder to spot. This is something we can potentially tease apart when we have more validation data.&lt;/p&gt;
    &lt;p&gt;Finally, we were satisfied the model was doing a good job in the park area and decided to pick a hotspot the model was predicting in part of a residential street. We drove over to find an empty plot that did indeed have a lot of bramble!&lt;/p&gt;
    &lt;p&gt;Another hotspot was on Fen Road and we stopped by to find this absolute unit:&lt;/p&gt;
    &lt;p&gt;Finally, we headed back in to Cambridge to see what one of the big hotspots in North Cambridge was like. To our amusement we ended up at the local nature reserve Bramblefields, which, true to its name, has a lot of bramble.&lt;/p&gt;
    &lt;p&gt;I was pleasantly surprised by how good Gabriel's model was for its simplicity. Great work!&lt;/p&gt;
    &lt;p&gt;We had hoped to actually re-run the model based on the data we were gathering but that proved tricky on a laptop, in a park. Given the richness of the TESSERA embeddings and the simplicity of the classifiers being used, a mobile phone-based human-in-the-loop active learning setup could be practical..&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45377748</guid><pubDate>Thu, 25 Sep 2025 19:28:16 +0000</pubDate></item></channel></rss>