<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Hacker News: Front Page</title><link>https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml</link><description>Hacker News RSS</description><atom:link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Mon, 06 Oct 2025 16:12:16 +0000</lastBuildDate><item><title>The dangerous intimacy of social location sharing</title><link>https://joinreboot.org/p/lighthouses-in-the-sky</link><description>&lt;doc fingerprint="af1e139eace7c29d"&gt;
  &lt;main&gt;
    &lt;p&gt;The digital world of 2025 is an increasingly dark place—promises of an end-of-history, neoliberal technotopia have foundered on the rocks of monopoly, nativism, and a fractured epistemological understanding of the world. I’ve personally seen the retreat from the “digital public square” to semi-private spaces: group chats, invite-only servers, forums. Some of them are “group chats that rule the world.” Indeed, we seem to be, collectively, past “Peak Social Media.” This week, Julia Kieserman investigates the rise of a different sort of digital private space: social location sharing.&lt;/p&gt;
    &lt;p&gt;—Hal Triedman, Reboot Editorial Board&lt;/p&gt;
    &lt;head rend="h1"&gt;“Lighthouses in the Sky”&lt;/head&gt;
    &lt;p&gt;By Julia B. Kieserman&lt;/p&gt;
    &lt;p&gt;My brother is a notoriously awful texter. Texts go unacknowledged for days and then weeks, sheepishly answered only when he has stumbled upon a meme, an article, or a funny anecdote he wants to share. While frustrating, there is an honesty to the implicit demand that we make no expectations on his unreliable and often unreachable virtual self. It holds the faintest echo of a time when a landline’s sharp ring cut through the silence of an empty house or a hastily signed postcard arrived mildly battered three months after the fact. It is a declaration of liberation from a shiny piece of alloy, bits of Earth extracted and reconstituted to weigh down our pockets and wear down our fingers. He is not his phone and his phone is not him.&lt;/p&gt;
    &lt;p&gt;Or at least, it wasn’t him.&lt;/p&gt;
    &lt;p&gt;A few months ago, he started sharing his location with us, the friends and family who love him. With the flick of a wrist, he absolved himself of the stress of answering the question that location sharing is best suited to answer: where are you right now?&lt;/p&gt;
    &lt;p&gt;My brother isn’t alone. A 2022 Harris poll found that four in five U.S. adults use location sharing tools like Apple’s FindMy and Google Maps to share their real-time location data with whomever they choose. While we have long known that we are being watched by the advertising industry, the bread and butter business that keeps our tech behemoths afloat, location sharing now puts us in the power seat, allowing us to become the watchers (or the watched) as we silently observe the movements of our friends and family.&lt;/p&gt;
    &lt;p&gt;To me this immediately raised alarm bells. Having a friend’s location on demand appears to strip them of the very same autonomy that nearly every teenager fights so hard for against their parents. Why is this something we find attractive and how might it be impacting our ability to maintain relationships with one another? In an attempt to answer these questions, I talked to 15 location sharers and polled an additional 67 to discuss how location sharing is part of their lives and understand why they share, who they share with, and what it really means to them to do so.&lt;/p&gt;
    &lt;p&gt;Like other infrastructure, the Global Positioning System’s (GPS) seeming dullness disguises a mild technological miracle. Accurately rendering each GPS dot on a map requires a roundtrip journey to space, atomic clocks, and communication with no less than three satellites in medium Earth orbit or, as inventor Dr. Ivan Getting put it, “lighthouses in the sky.” To consider it this way is to see it as a bit magical, perhaps the way weary sea travelers see lighthouses on land, or the way the Polaris (also known as the North Star, the spiritual ancestor of GPS) appears to those who turn to it for guidance.&lt;/p&gt;
    &lt;p&gt;Looking at it—a layer of personal dots on top of a world map—also feels a bit magical, as evidenced by several people who described taking screenshots of maps during a birthday party, marveling at overlapping dots in a central location; their people. To use location sharing is to engage in a cartography well-suited for the modern world. In fact, even though GPS was built with the U.S. military in mind, it is so useful—it’s first civilian use case was aiding commercial aircraft navigation—that it was anointed a dual-use technology, as legitimate in civilian life as it is in military life. Four decades later, the primary functionality of GPS still hasn’t changed: a family taking a cross-country road trip, captains in charge of shipping containers, and a tourist on foot in a new city all turn to GPS with the same questions. In fact, everyone I spoke with used location sharing to consider questions of logistics if nothing else. Where is the friend who left the bar alone? The one running late to dinner? Where is the group I’ve lost at a concert? Where is my mother, navigating herself around my neighborhood?&lt;/p&gt;
    &lt;p&gt;But when these questions are focused on our own community, the people who love us enough to trust us with their personal location, it quickly becomes more than just a matter of logistics; our brains can’t help but to craft a narrative about what we are seeing. We want to know if our friends make it home from the bar and that our parents are safe because we care for them and we are invested in what happens to them. So we start to speculate: it’s only natural to try and create a story with a limited set of information as a way of sense-making. But how well does this fare when the information we have to craft with is as narrow as a single dot in a moment in time?&lt;/p&gt;
    &lt;p&gt;Perhaps the most obvious examples of location sharing gone awry are stories of abuse. Two people I spoke with had personal experiences of being harassed through location sharing tools by romantic or potential romantic partners. In one case, GPS was used to first construct an inaccurate and accusatory narrative about a partner’s behavior that nitpicked the details—an impromptu detour to the cafeteria en route to the library was suddenly cause for suspicion—and then to show up unannounced to physically confront them. The experience was harrowing and fundamentally changed the way one woman thinks about sharing her location. She now uses it only for safety and logistics and is far more intentional about where she does and does not want to be seen.&lt;/p&gt;
    &lt;p&gt;While stories like this one are important examples of the dangers of using location sharing, it can be easy to write them off as edge cases, to assume that this is indicative of dangerous people rather than dangerous technology. And this may be true to some extent. After all, stalking and abusive partners have existed for far longer than location sharing tools have, even if they make bad behavior that much easier. But even those of us with the best of intentions may still get the story wrong.&lt;/p&gt;
    &lt;p&gt;Consider what happened to Tess, a woman in her mid-twenties living in New York City. On a Friday night out with friends, she lost her phone. Location sharing came to the rescue when she was able to track it to a local police station where it had been turned in. Although the station was already closed for the weekend, she was content knowing it was safe. But Tess is a sharer and her community of watchers, the inner circle she had entrusted with her location, was far less content. They repeatedly called and messaged her to find out why she was locked in a police station. In the absence of any information beyond an immobile dot at a concerning location, narrative inference kicked in and they began to assume the worst. She spent the subsequent two days fielding messages through borrowed devices to notify her friends that it was her phone behind the locked doors of a police station, not her.&lt;/p&gt;
    &lt;p&gt;For some, myself included, this story might read as a tale of sanctioned voyeurism or even friendly stalking. That the same tool that helped Tess find her phone also made her watchable in this way is what researchers have, perhaps as an ode to its military roots, termed dual-use software. But for Tess, this is a story of caretaking and serves as evidence that she belongs to a community that has her back. This makes sense—should the details have been just a little bit different, she knows definitively that people were ready to jump into action for her. Tess isn’t alone. Nearly everyone who used location sharing believed that interpersonal surveillance—or to put it colloquially, location sharing—is part of an effective safety toolkit. Many people took comfort in the fact that a selection of friends and family were watching them.&lt;/p&gt;
    &lt;p&gt;This idea isn’t new; late urban activist Jane Jacobs described “eyes upon the street” as an important quality of a safe and healthy city neighborhood. Eyes are what keep well-intentioned people safe and keep the less well-intentioned afraid to act out of line. To some extent, location sharing allows us to redefine our own “street” as dynamic corners around the globe, replacing neighbors, shopkeepers and other “natural proprietors” with our friends and family, however many physical streets apart we may actually be. But it is a fundamentally different approach to safety. With location sharing, we can only see the people we trust, not the ones we worry about. If the assumption is that being surveilled deters bad behavior (which seems to have only a modest effect in practice), then those who we are trying to deter need to know they are being surveilled. This tool doesn’t do that and in its absence, location sharing becomes—except in extreme cases of abduction or missing people—something more akin to a security blanket than a real safety tool. Perhaps fittingly, while nearly all of the people I spoke with felt safer knowing someone was watching to make sure they made it home, none of them had personally found location sharing tools to reveal a friend in crisis. The only exception was one person who had been explicitly instructed by a friend that to see them in a particular location was to see them in a state of distress. But even in this case, location alone wasn’t enough to claim someone was or was not unsafe.&lt;/p&gt;
    &lt;p&gt;Even Jacobs believed that “there must be a clear demarcation between what is public space and what is private space.” There are spheres of life that should be safe from prying eyes, perhaps because eyes aren’t just watching us, but also changing us. The reason we feel that surveillance works as a safety apparatus is because we believe that we—or someone we are worried about—might behave differently under watch. Sometimes those private behaviors are ultimately quite trivial, like collecting supplies for a surprise birthday party. Other times they might be far more consequential, like going to an appointment at an abortion clinic. Even when the consequences are small, being watched by people we are clearly inclined to share with robs us of the opportunity to do so ourselves which, eventually, can impact the very nature of our relationships.&lt;/p&gt;
    &lt;p&gt;This was certainly true for Sofia (referred to by her middle name), a professional in her early thirties living in New York City. One evening she was sitting at a bar waiting for her Hinge date when a flurry of texts peppered her screen in a group chat. It was a stream of encouragement, unsolicited drink recommendations for the particular bar she was at and jestful sexual innuendos from her gaggle of single women. She hadn’t told them she was going out but she didn’t need to. She had granted them permission to see her location and they took the opportunity to show up as her background cheer squad. If the date went well and she went back to his place, they would absolutely notice—and have something to say about it. They operated as a modern, tech savvy version of the iconic Sex &amp;amp; The City clique, in part thanks to location sharing.&lt;/p&gt;
    &lt;p&gt;This is a delightful and powerful way to use location sharing, GPS as a “conversation tool,” which strengthens the bonds between a community of women navigating the often challenging experience of dating in the city. But now, when Sofia reaches for her phone the morning after a date, her friends might already know some pieces of her story, like how late she stayed out and whose home she is waking up in. This might seem small and, as we saw in Tess’ case, it leaves out nearly all of the significant details which could differentiate between the world’s best first date and a mostly negligible evening. But even so, location sharing has created an outline for Sofia to fill in, rather than giving her complete control over the telling of her story. I personally find this a lackluster alternative to a dramatic retelling but this distinction probably has an even more meaningful impact; social penetration theory suggests that a key way to maintain or progress relationships is the act of self-disclosure, repeatedly sharing increasingly intimate details about oneself with another. Perhaps ironically, location sharing can be an effective way to share intimate information but it erodes the experience of disclosure that is so crucial to building relationship trust.&lt;/p&gt;
    &lt;p&gt;One woman I spoke with admitted to finding this behavior—watching how late a friend is out on a first date—to be a little bit awkward and wrestled with whether to mention what she saw or wait for her friend to bring it up, an acknowledgement of the sometimes squishy norms of how to act (or not) on location information. But nearly everyone believed that these increased “touch points” (a term borrowed from marketing, an industry heavily reliant on surveillance) had a positive impact. In fact they found this to be a valuable feature of location sharing, a way of creating possible connection points that wouldn’t have existed otherwise. People learned of friends spending time in their neighborhood or on an international excursion through location sharing and used it as an excuse to reach out to them. This probably is a useful way to keep in touch and, as one woman pointed out, certainly makes it easier to keep details straight, like the dates and location of a friend’s trip. But it also has—to borrow the term once again—a dual effect on how we interact with each other, both of which remove opportunities for real connection.&lt;/p&gt;
    &lt;p&gt;Location sharing erases an information boundary, removing the interaction typically required to learn about what our friends are doing. We can see a friend is on a trip “for free,” without having to speak to them at all. At the same time, this information is used to create an additional layer between us and our friends and family. Nearly everyone I spoke to mentioned they would check someone’s location before calling, in case a dot on a map implied (because of course, how could one know for sure) that they were in a location that wasn’t conducive to actually taking a call. Suddenly, because the information existed, people felt uncomfortable not using it as a boundary, thus reducing the frequency of spontaneous interaction. This is to say nothing of the out-group location sharing creates, the lingering luddites who refuse to share location; how long until to fall off someone’s map is to fall out of someone’s life?&lt;/p&gt;
    &lt;p&gt;I began this journey certain that location sharing was a societal ill. I was convinced that the word “sharing,” a euphemistic wrapper around the real word—tracking—was an intentional choice by technology companies to mask the work of normalizing surveillance behavior in our communities. Talking to a group of people happily or even cautiously sharing location didn’t convince me otherwise. But it did remind me that there is yet another way to define dual-use technology; technology that can be reclaimed by communities to serve their own purposes.&lt;/p&gt;
    &lt;p&gt;That isn’t quite the location sharing of today. After all, location sharing as we have defined it here is still a framework named for us and provided to us by technology giants like Google and Apple. But maybe there is room for a middle ground, one that acknowledges that location sharing really can create communities of care, drawing invisible lines between friends and families separated by mountains and oceans. It is meaningful that those with no visibility are offered a new way to connect and, while I don’t think it is really making us safer most of the time, it is making us feel safer. Perhaps that should count for something.&lt;/p&gt;
    &lt;p&gt;This isn’t to make the case that we should readily accept or even make do with what we have, particularly for those of us living in uncertain political environments, where any data point can be weaponized as quickly and casually as a shift in the clouds. But it is to acknowledge that perhaps there is room for a new infrastructure, one not rooted in surveillance capitalism but built from basic human desire. Perhaps the new paradigm moves away from real-time tracking or individual location and towards things like distress signals and collective third places. The power of GPS is still quite magical, but nowhere near as powerful as the magic of humans showing each other care and curiosity. One doesn’t need to steal from the other.&lt;/p&gt;
    &lt;p&gt;—Julia B. Kieserman is a writer and PhD student in usable security. She likes hanging around books and bulldogs.&lt;/p&gt;
    &lt;head rend="h1"&gt;🌀 microdoses&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;“To share or not to share? How location sharing is changing our relationships” (Modern Love podcast)&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;✨Safety First✨&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;💝 closing note&lt;/head&gt;
    &lt;p&gt;If you have an article idea about privacy, security, and/or the changing ideologies of the internet, send me a pitch (hal[at]joinreboot.org)!&lt;/p&gt;
    &lt;p&gt;— Hal &amp;amp; Reboot team&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45485546</guid><pubDate>Sun, 05 Oct 2025 21:44:01 +0000</pubDate></item><item><title>Ken Parker, famed luthier, has died</title><link>https://kenparkerarchtops.com</link><description>&lt;doc fingerprint="365db15571e068b0"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;RIP Ken Parker: August 25, 1952 – October 5, 2025&lt;/head&gt;
    &lt;p&gt;Ken Parker, age 73, passed away peacefully at his home in Gloucester, MA on October 5, 2025, with Susan Kolwicz by his side.&lt;/p&gt;
    &lt;p&gt;From Ken, October 3rd, 2025:&lt;/p&gt;
    &lt;p&gt;Hello Everybody,&lt;/p&gt;
    &lt;p&gt;Well, they say that nothing lasts forever and they’re right about that. My time here is about to close down and I won’t be part of the show anymore. What I have done with all my heart and soul is to put together a situation where my work can continue unabated and begin to bring some serious fruit to the things that I’ve been working on for the last 50 years.&lt;/p&gt;
    &lt;p&gt;My deepest and most heartfelt thanks to all of you. It’s been the experience of my lifetime being able to share my life’s work and knowledge with each of you through my instruments and via Archtoppery, and see that you get it. My hope is that you all build on what I’ve learned and shared, and take everything to the next level.&lt;/p&gt;
    &lt;p&gt;Sam Krimmel will be doing just that, and I encourage you to support Sam as he ventures forth. Sam is a natural co-conspirator and he and I will be will be working together down the road through some sort of psychic medium. We’ve already got some amazing new things underway and soon we’re going to show you what that is all about. So stay tuned.&lt;/p&gt;
    &lt;p&gt;All right, well everyone, please take care of yourselves and peace on earth, if that should ever be possible.&lt;/p&gt;
    &lt;p&gt;Love, Ken&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45485736</guid><pubDate>Sun, 05 Oct 2025 22:10:15 +0000</pubDate></item><item><title>Why do LLMs freak out over the seahorse emoji?</title><link>https://vgel.me/posts/seahorse/</link><description>&lt;doc fingerprint="2d678256c88d5a34"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Why do LLMs freak out over the seahorse emoji?&lt;/head&gt;
    &lt;p&gt;This is an edited and expanded version of a Twitter post, originally in response to @arm1st1ce, that can be found here: https://x.com/voooooogel/status/1964465679647887838&lt;/p&gt;
    &lt;p&gt;Is there a seahorse emoji? Let's ask GPT-5 Instant:&lt;/p&gt;
    &lt;p&gt;Wtf? Let's ask Claude Sonnet 4.5 instead:&lt;/p&gt;
    &lt;p&gt;What's going on here? Maybe Gemini 2.5 Pro handles it better?&lt;/p&gt;
    &lt;p&gt;OK, something is going on here. Let's find out why.&lt;/p&gt;
    &lt;head rend="h2"&gt;LLMs really think there's a seahorse emoji&lt;/head&gt;
    &lt;p&gt;Here are the answers you get if you ask several models whether a seahorse emoji exists, yes or no, 100 times:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Is there a seahorse emoji, yes or no? Respond with one word, no punctuation.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;gpt-5-chat &lt;list rend="ul"&gt;&lt;item&gt;100% 'Yes'&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;gpt-5 &lt;list rend="ul"&gt;&lt;item&gt;100% 'Yes'&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;claude-4.5-sonnet &lt;list rend="ul"&gt;&lt;item&gt;100% 'Yes'&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;llama-3.3-70b &lt;list rend="ul"&gt;&lt;item&gt;83% 'yes'&lt;/item&gt;&lt;item&gt;17% 'Yes'&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Needlessly to say, popular language models are very confident that there's a seahorse emoji. And they're not alone in that confidence - here's a Reddit thread with hundreds of comments from people who distinctly remember a seahorse emoji existing:&lt;/p&gt;
    &lt;p&gt;There's tons of this - Google "seahorse emoji" and you'll find TikToks, Youtube videos, and even (now defunct) memecoins based around the supposed vanishing of a seahorse emoji that everyone is pretty sure used to exist - but of course, never did.&lt;/p&gt;
    &lt;p&gt;Maybe LLMs believe a seahorse emoji exists because so many humans in the training data do. Or maybe it's a convergent belief - given how many other aquatic animals are in Unicode, it's reasonable for both humans and LLMs to assume (generalize, even) that such a delightful animal is as well. A seahorse emoji was even formally proposed at one point, but was rejected in 2018.&lt;/p&gt;
    &lt;p&gt;Regardless of the root cause, many LLMs begin each new context window fresh with the mistaken latent belief that the seahorse emoji exists. But why does that produce such strange behavior? I mean, I used to believe a seahorse emoji existed myself, but if I had tried to send it to a friend, I would've simply looked for it on my keyboard and realized it wasn't there, not sent the wrong emoji and then gone into an emoji spam doomloop. So what's happening inside the LLM that causes it to act like this?&lt;/p&gt;
    &lt;head rend="h2"&gt;Using the logit lens&lt;/head&gt;
    &lt;p&gt;Let's look into this using everyone's favorite underrated interpretability tool, the logit lens!&lt;/p&gt;
    &lt;p&gt;Using this prompt prefix - a templated chat with the default llama-3.3-70b system prompt, a question about the seahorse emoji, and a partial answer from the model right before it gives the actual emoji:&lt;/p&gt;
    &lt;code&gt;&amp;lt;|begin_of_text|&amp;gt;&amp;lt;|begin_of_text|&amp;gt;&amp;lt;|start_header_id|&amp;gt;system&amp;lt;|end_header_id&amp;gt;
Cutting Knowledge Date: December 2023
Today Date: 26 Jul 2024

&amp;lt;|eot_id|&amp;gt;&amp;lt;|start_header_id|&amp;gt;user&amp;lt;|end_header_id|&amp;gt;

Is there a seahorse emoji?&amp;lt;|eot_id|&amp;gt;&amp;lt;|start_header_id|&amp;gt;assistant&amp;lt;|end_header_id|&amp;gt;

Yes, there is a seahorse emoji:
&lt;/code&gt;
    &lt;p&gt;We can take the model's &lt;code&gt;lm_head&lt;/code&gt;, which is usually only used on the output of the last layer, and apply it to every layer to produce intermediate token predictions. That process produces this table, showing for every fourth layer what the most likely token would be for the next three positions after the prefix (tokens 0, 1, and 2), and what the top 5 most likely predictions for the first position is (token 0 topk 5):&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="6"&gt;
        &lt;cell role="head"&gt;layer&lt;/cell&gt;
        &lt;cell role="head"&gt;tokens&lt;/cell&gt;
        &lt;cell role="head"&gt;tokens&lt;/cell&gt;
        &lt;cell role="head"&gt;token 0&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;0&lt;/cell&gt;
        &lt;cell&gt;1&lt;/cell&gt;
        &lt;cell&gt;2&lt;/cell&gt;
        &lt;cell&gt;merged&lt;/cell&gt;
        &lt;cell&gt;(topk 5)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;0&lt;/cell&gt;
        &lt;cell&gt;83244'ĠBail'&lt;/cell&gt;
        &lt;cell&gt;15591'ĠHarr'&lt;/cell&gt;
        &lt;cell&gt;5309'Ġvert'&lt;/cell&gt;
        &lt;cell&gt;Bail Harr vert&lt;/cell&gt;
        &lt;cell&gt;['ĠBail', 'ĠPeanut', 'ĠãĢ', 'orr', 'ĠâĢĭâĢĭ']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;4&lt;/cell&gt;
        &lt;cell&gt;111484'emez'&lt;/cell&gt;
        &lt;cell&gt;26140'abi'&lt;/cell&gt;
        &lt;cell&gt;25727'avery'&lt;/cell&gt;
        &lt;cell&gt;emezabiavery&lt;/cell&gt;
        &lt;cell&gt;['emez', 'Ġunm', 'ĠOswald', 'Ġrem', 'rix']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;8&lt;/cell&gt;
        &lt;cell&gt;122029'chyb'&lt;/cell&gt;
        &lt;cell&gt;44465'ĠCaps'&lt;/cell&gt;
        &lt;cell&gt;15610'iller'&lt;/cell&gt;
        &lt;cell&gt;chyb Capsiller&lt;/cell&gt;
        &lt;cell&gt;['chyb', 'ĠSund', 'ØªØ±ÛĮ', 'resse', 'Ġsod']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;12&lt;/cell&gt;
        &lt;cell&gt;1131'...'&lt;/cell&gt;
        &lt;cell&gt;48952'ĠCliff'&lt;/cell&gt;
        &lt;cell&gt;51965'ĠJackie'&lt;/cell&gt;
        &lt;cell&gt;... Cliff Jackie&lt;/cell&gt;
        &lt;cell&gt;['...', 'ages', 'dump', 'qing', 'Ġexp']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;16&lt;/cell&gt;
        &lt;cell&gt;1131'...'&lt;/cell&gt;
        &lt;cell&gt;12676'365'&lt;/cell&gt;
        &lt;cell&gt;31447'ĠAld'&lt;/cell&gt;
        &lt;cell&gt;...365 Ald&lt;/cell&gt;
        &lt;cell&gt;['...', '...Ċ', 'Ġindeed', 'Ġboth', 'ĠYes']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;20&lt;/cell&gt;
        &lt;cell&gt;1131'...'&lt;/cell&gt;
        &lt;cell&gt;109596'éļĨ'&lt;/cell&gt;
        &lt;cell&gt;51965'ĠJackie'&lt;/cell&gt;
        &lt;cell&gt;...隆 Jackie&lt;/cell&gt;
        &lt;cell&gt;['...', '...Ċ', 'Z', 'Ġboth', 'ĠHust']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;24&lt;/cell&gt;
        &lt;cell&gt;12'-'&lt;/cell&gt;
        &lt;cell&gt;31643'ï¸ı'&lt;/cell&gt;
        &lt;cell&gt;287'ing'&lt;/cell&gt;
        &lt;cell&gt;-️ing&lt;/cell&gt;
        &lt;cell&gt;['-', '...', 'âĢ¦', '...Ċ', 'em']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;28&lt;/cell&gt;
        &lt;cell&gt;1131'...'&lt;/cell&gt;
        &lt;cell&gt;96154'ĠGaut'&lt;/cell&gt;
        &lt;cell&gt;51965'ĠJackie'&lt;/cell&gt;
        &lt;cell&gt;... Gaut Jackie&lt;/cell&gt;
        &lt;cell&gt;['...', '-', '...Ċ', '-Ċ', 'Ġ']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;32&lt;/cell&gt;
        &lt;cell&gt;1131'...'&lt;/cell&gt;
        &lt;cell&gt;96154'ĠGaut'&lt;/cell&gt;
        &lt;cell&gt;6892'Ġing'&lt;/cell&gt;
        &lt;cell&gt;... Gaut ing&lt;/cell&gt;
        &lt;cell&gt;['...', 'âĢ¦', '...Ċ', 'O', 'zer']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;36&lt;/cell&gt;
        &lt;cell&gt;1131'...'&lt;/cell&gt;
        &lt;cell&gt;12'-'&lt;/cell&gt;
        &lt;cell&gt;88'y'&lt;/cell&gt;
        &lt;cell&gt;...-y&lt;/cell&gt;
        &lt;cell&gt;['...', 'âĢ¦', '...Ċ', 'Ġ', 'u']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;40&lt;/cell&gt;
        &lt;cell&gt;1131'...'&lt;/cell&gt;
        &lt;cell&gt;31643'ï¸ı'&lt;/cell&gt;
        &lt;cell&gt;88'y'&lt;/cell&gt;
        &lt;cell&gt;...️y&lt;/cell&gt;
        &lt;cell&gt;['...', 'u', 'âĢ¦', 'Âł', '...Ċ']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;44&lt;/cell&gt;
        &lt;cell&gt;80435'ĠScor'&lt;/cell&gt;
        &lt;cell&gt;15580'Ġhorse'&lt;/cell&gt;
        &lt;cell&gt;15580'Ġhorse'&lt;/cell&gt;
        &lt;cell&gt;Scor horse horse&lt;/cell&gt;
        &lt;cell&gt;['ĠScor', 'u', 'ĠPan', 'in', 'Ġhttps']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;48&lt;/cell&gt;
        &lt;cell&gt;15580'Ġhorse'&lt;/cell&gt;
        &lt;cell&gt;15580'Ġhorse'&lt;/cell&gt;
        &lt;cell&gt;15580'Ġhorse'&lt;/cell&gt;
        &lt;cell&gt;horse horse horse&lt;/cell&gt;
        &lt;cell&gt;['Ġhorse', 'Âł', 'ĠPan', 'ĠHomes', 'ĠHorse']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;52&lt;/cell&gt;
        &lt;cell&gt;9581'Ġsea'&lt;/cell&gt;
        &lt;cell&gt;15580'Ġhorse'&lt;/cell&gt;
        &lt;cell&gt;15580'Ġhorse'&lt;/cell&gt;
        &lt;cell&gt;sea horse horse&lt;/cell&gt;
        &lt;cell&gt;['Ġsea', 'Ġhorse', 'ĠHorse', 'ĠSea', 'âĢĳ']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;56&lt;/cell&gt;
        &lt;cell&gt;9581'Ġsea'&lt;/cell&gt;
        &lt;cell&gt;43269'ĠSeah'&lt;/cell&gt;
        &lt;cell&gt;15580'Ġhorse'&lt;/cell&gt;
        &lt;cell&gt;sea Seah horse&lt;/cell&gt;
        &lt;cell&gt;['Ġsea', 'ĠSea', 'ĠSeah', 'Ġhippoc', 'Ġhorse']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;60&lt;/cell&gt;
        &lt;cell&gt;15580'Ġhorse'&lt;/cell&gt;
        &lt;cell&gt;15580'Ġhorse'&lt;/cell&gt;
        &lt;cell&gt;15580'Ġhorse'&lt;/cell&gt;
        &lt;cell&gt;horse horse horse&lt;/cell&gt;
        &lt;cell&gt;['Ġhorse', 'Ġsea', 'ĠSeah', 'Ġse', 'horse']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;64&lt;/cell&gt;
        &lt;cell&gt;15580'Ġhorse'&lt;/cell&gt;
        &lt;cell&gt;15580'Ġhorse'&lt;/cell&gt;
        &lt;cell&gt;15580'Ġhorse'&lt;/cell&gt;
        &lt;cell&gt;horse horse horse&lt;/cell&gt;
        &lt;cell&gt;['Ġhorse', 'Ġse', 'ĠHorse', 'horse', 'Ġhors']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;68&lt;/cell&gt;
        &lt;cell&gt;60775'horse'&lt;/cell&gt;
        &lt;cell&gt;238'Ĳ'&lt;/cell&gt;
        &lt;cell&gt;15580'Ġhorse'&lt;/cell&gt;
        &lt;cell&gt;horse� horse&lt;/cell&gt;
        &lt;cell&gt;['horse', 'Ġse', 'Ġhorse', 'Ġhippoc', 'ĠSeah']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;72&lt;/cell&gt;
        &lt;cell&gt;513'Ġse'&lt;/cell&gt;
        &lt;cell&gt;238'Ĳ'&lt;/cell&gt;
        &lt;cell&gt;513'Ġse'&lt;/cell&gt;
        &lt;cell&gt;se� se&lt;/cell&gt;
        &lt;cell&gt;['Ġse', 'Ġhippoc', 'horse', 'ĠðŁ', 'Ġhorse']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;76&lt;/cell&gt;
        &lt;cell&gt;513'Ġse'&lt;/cell&gt;
        &lt;cell&gt;238'Ĳ'&lt;/cell&gt;
        &lt;cell&gt;513'Ġse'&lt;/cell&gt;
        &lt;cell&gt;se� se&lt;/cell&gt;
        &lt;cell&gt;['Ġse', 'Ġhippoc', 'hip', 'Ġhorse', 'ĠHipp']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;80&lt;/cell&gt;
        &lt;cell&gt;11410'ĠðŁ'&lt;/cell&gt;
        &lt;cell&gt;238'Ĳ'&lt;/cell&gt;
        &lt;cell&gt;254'ł'&lt;/cell&gt;
        &lt;cell&gt;🐠&lt;/cell&gt;
        &lt;cell&gt;['ĠðŁ', 'ðŁ', 'ĠðŁĴ', 'Ġ', 'ĠðŁĳ']&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;This is the logit lens: using the model's &lt;code&gt;lm_head&lt;/code&gt; to produce logits (token likelihoods) as a way to investigate its internal states. Note that the tokens and likelihoods we get from the logit lens here are not equivalent to the model's full internal states! For that, we would need a more complex technique like representation reading or sparse autoencoders. Instead, this is a lens on that state - it shows what the output token would be if this layer were the last one. But despite this limitation, the logit lens is still useful. The states of early layers may be difficult to interpret using it, but as we move up through the stack we can see that the model is iteratively refining those states towards its final prediction, a fish emoji.&lt;/p&gt;
    &lt;p&gt;(Why do the unmerged tokens look like that 'ĠðŁ', 'Ĳ', 'ł' nonsense? It's because of a tokenizer quirk - those tokens encode the UTF-8 bytes for the fish emoji. It's not relevant to this post, but if you're curious, ask Claude or your favorite LLM to explain this paragraph and this line of code: &lt;code&gt;bytes([bpe_byte_decoder[c] for c in 'ĠðŁĲł']).decode('utf-8') == ' 🐠'&lt;/code&gt;)&lt;/p&gt;
    &lt;p&gt;Take a look at what happens in the middle layers, though - it's not the early-layer weirdness or the emoji bytes of the final prediction! Instead we get words relating to useful concepts, specifically the concept of a seahorse. For example, on layer 52, we get "sea horse horse" - three residual positions in a row encoding the "seahorse" concept. Later, in the top-k for the first position, we get a mixture of "sea", "horse", and an emoji byte sequence prefix, "ĠðŁ".&lt;/p&gt;
    &lt;p&gt;So what is the model thinking about? "seahorse + emoji"! It's trying to construct a residual representation of a seahorse combined with an emoji. Why would the model try to construct this combination? Well, let's look into how the &lt;code&gt;lm_head&lt;/code&gt; actually works.&lt;/p&gt;
    &lt;head rend="h2"&gt;
      &lt;code&gt;lm_head&lt;/code&gt;
    &lt;/head&gt;
    &lt;p&gt;A language model's &lt;code&gt;lm_head&lt;/code&gt; is a huge matrix of residual-sized vectors associated with token ids, one for every token in the vocabulary (~300,000). When a residual is passed into it, either after flowing through the model normally or early because someone is using the logit lens on an earlier layer, the &lt;code&gt;lm_head&lt;/code&gt; is going to compare that input residual with each residual-sized vector in that big matrix, and (in coordination with the sampler) select the token id associated with the vector that matrix contains that is most similar to the input residual.&lt;/p&gt;
    &lt;p&gt;(More technically: &lt;code&gt;lm_head&lt;/code&gt; is a linear layer without a bias, so &lt;code&gt;x @ w.T&lt;/code&gt; does dot products with each unembedding vector to produce raw scores. Then your usual log_softmax and argmax/temperature sample.)&lt;/p&gt;
    &lt;p&gt;That means if the model wants to output the word "hello", for example in response to a friendly greeting from the user, it needs to construct a residual as similar as possible to the vector for the "hello" token that the &lt;code&gt;lm_head&lt;/code&gt; can then turn into the hello token id. And using logit lens, we can see that's exactly what happens in response to "Hello :-)":&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="6"&gt;
        &lt;cell role="head"&gt;layer&lt;/cell&gt;
        &lt;cell role="head"&gt;tokens&lt;/cell&gt;
        &lt;cell role="head"&gt;tokens&lt;/cell&gt;
        &lt;cell role="head"&gt;token 0&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;0&lt;/cell&gt;
        &lt;cell&gt;1&lt;/cell&gt;
        &lt;cell&gt;2&lt;/cell&gt;
        &lt;cell&gt;merged&lt;/cell&gt;
        &lt;cell&gt;(topk 5)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;0&lt;/cell&gt;
        &lt;cell&gt;0'!'&lt;/cell&gt;
        &lt;cell&gt;0'!'&lt;/cell&gt;
        &lt;cell&gt;40952'opa'&lt;/cell&gt;
        &lt;cell&gt;!!opa&lt;/cell&gt;
        &lt;cell&gt;['"', '!', '#', '%', '$']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;8&lt;/cell&gt;
        &lt;cell&gt;121495'ÅĻiv'&lt;/cell&gt;
        &lt;cell&gt;16'1'&lt;/cell&gt;
        &lt;cell&gt;73078'iae'&lt;/cell&gt;
        &lt;cell&gt;řiv1iae&lt;/cell&gt;
        &lt;cell&gt;['ÅĻiv', '-', '(', '.', ',']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;16&lt;/cell&gt;
        &lt;cell&gt;34935'Ġconsect'&lt;/cell&gt;
        &lt;cell&gt;7341'arks'&lt;/cell&gt;
        &lt;cell&gt;13118'Ġindeed'&lt;/cell&gt;
        &lt;cell&gt;consectarks indeed&lt;/cell&gt;
        &lt;cell&gt;['Ġobscure', 'Ġconsect', 'äºķ', 'ĠÐ¿ÑĢÐ¾ÑĦÐµÑģÑģÐ¸Ð¾Ð½Ð°Ð»ÑĮ', 'Îŀ']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;24&lt;/cell&gt;
        &lt;cell&gt;67846'&amp;lt;['&lt;/cell&gt;
        &lt;cell&gt;24748'Ġhello'&lt;/cell&gt;
        &lt;cell&gt;15960'Ġhi'&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;[ hello hi&lt;/cell&gt;
        &lt;cell&gt;['&amp;lt;[', 'arks', 'outh', 'ĠHam', 'la']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;32&lt;/cell&gt;
        &lt;cell&gt;15825'-back'&lt;/cell&gt;
        &lt;cell&gt;2312'ln'&lt;/cell&gt;
        &lt;cell&gt;14451'UBL'&lt;/cell&gt;
        &lt;cell&gt;-backlnUBL&lt;/cell&gt;
        &lt;cell&gt;['ÂŃi', '-back', 'Ġquestion', 'ln', 'ant']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;40&lt;/cell&gt;
        &lt;cell&gt;15648'Ġsmile'&lt;/cell&gt;
        &lt;cell&gt;14262'Welcome'&lt;/cell&gt;
        &lt;cell&gt;1203'Ġback'&lt;/cell&gt;
        &lt;cell&gt;smileWelcome back&lt;/cell&gt;
        &lt;cell&gt;['Ġsmile', 'ĠÑĥÐ»ÑĭÐ±', 'Ġsmiled', 'ĠSmile', 'etwork']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;48&lt;/cell&gt;
        &lt;cell&gt;15648'Ġsmile'&lt;/cell&gt;
        &lt;cell&gt;21694'ĠHi'&lt;/cell&gt;
        &lt;cell&gt;1203'Ġback'&lt;/cell&gt;
        &lt;cell&gt;smile Hi back&lt;/cell&gt;
        &lt;cell&gt;['Ġsmile', 'Ġsmiled', 'ĠHello', 'Ġsmiling', 'Ġhello']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;56&lt;/cell&gt;
        &lt;cell&gt;22691'ĠHello'&lt;/cell&gt;
        &lt;cell&gt;15960'Ġhi'&lt;/cell&gt;
        &lt;cell&gt;1203'Ġback'&lt;/cell&gt;
        &lt;cell&gt;Hello hi back&lt;/cell&gt;
        &lt;cell&gt;['ĠHello', 'Ġhi', 'Ġsmile', 'Ġhello', 'Hello']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;64&lt;/cell&gt;
        &lt;cell&gt;4773'-sm'&lt;/cell&gt;
        &lt;cell&gt;24748'Ġhello'&lt;/cell&gt;
        &lt;cell&gt;1203'Ġback'&lt;/cell&gt;
        &lt;cell&gt;-sm hello back&lt;/cell&gt;
        &lt;cell&gt;['-sm', 'ĠHello', 'ĠSm', 'sm', 'Hello']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;72&lt;/cell&gt;
        &lt;cell&gt;22691'ĠHello'&lt;/cell&gt;
        &lt;cell&gt;22691'ĠHello'&lt;/cell&gt;
        &lt;cell&gt;1203'Ġback'&lt;/cell&gt;
        &lt;cell&gt;Hello Hello back&lt;/cell&gt;
        &lt;cell&gt;['ĠHello', 'Ġhello', 'Hello', 'ĠHEL', 'Ġhel']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;80&lt;/cell&gt;
        &lt;cell&gt;271'ĊĊ'&lt;/cell&gt;
        &lt;cell&gt;9906'Hello'&lt;/cell&gt;
        &lt;cell&gt;0'!'&lt;/cell&gt;
        &lt;cell&gt;
          &lt;p&gt;Hello!&lt;/p&gt;
        &lt;/cell&gt;
        &lt;cell&gt;['ĊĊ', 'ĊĊĊ', '&amp;lt;|end_of_text|&amp;gt;', 'ĊĊĊĊ', '"ĊĊ']&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;('Ċ' is another tokenizer quirk - it represents a line break. 'Ġ' is similarly a space.)&lt;/p&gt;
    &lt;p&gt;Likewise, if the model wants to output a seahorse emoji, it needs to construct a residual similar to the vector for the seahorse emoji output token(s) - which in theory could be any arbitrary value, but in practice is "seahorse + emoji", word2vec style. We can see this in action with a real emoji, the fish emoji:&lt;/p&gt;
    &lt;code&gt;&amp;lt;|begin_of_text|&amp;gt;&amp;lt;|begin_of_text|&amp;gt;&amp;lt;|start_header_id|&amp;gt;system&amp;lt;|end_header_id|&amp;gt;

Cutting Knowledge Date: December 2023
Today Date: 26 Jul 2024

&amp;lt;|eot_id|&amp;gt;&amp;lt;|start_header_id|&amp;gt;user&amp;lt;|end_header_id|&amp;gt;

Is there a fish emoji?&amp;lt;|eot_id|&amp;gt;&amp;lt;|start_header_id|&amp;gt;assistant&amp;lt;|end_header_id|&amp;gt;

Yes, there is a fish emoji:
&lt;/code&gt;
    &lt;table&gt;
      &lt;row span="6"&gt;
        &lt;cell role="head"&gt;layer&lt;/cell&gt;
        &lt;cell role="head"&gt;tokens&lt;/cell&gt;
        &lt;cell role="head"&gt;tokens&lt;/cell&gt;
        &lt;cell role="head"&gt;token 0&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;0&lt;/cell&gt;
        &lt;cell&gt;1&lt;/cell&gt;
        &lt;cell&gt;2&lt;/cell&gt;
        &lt;cell&gt;merged&lt;/cell&gt;
        &lt;cell&gt;(topk 5)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;0&lt;/cell&gt;
        &lt;cell&gt;83244'ĠBail'&lt;/cell&gt;
        &lt;cell&gt;15591'ĠHarr'&lt;/cell&gt;
        &lt;cell&gt;5309'Ġvert'&lt;/cell&gt;
        &lt;cell&gt;Bail Harr vert&lt;/cell&gt;
        &lt;cell&gt;['ĠBail', 'ĠPeanut', 'ĠãĢ', 'orr', 'ĠâĢĭâĢĭ']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;8&lt;/cell&gt;
        &lt;cell&gt;122029'chyb'&lt;/cell&gt;
        &lt;cell&gt;44465'ĠCaps'&lt;/cell&gt;
        &lt;cell&gt;15610'iller'&lt;/cell&gt;
        &lt;cell&gt;chyb Capsiller&lt;/cell&gt;
        &lt;cell&gt;['chyb', '...', 'ØªØ±ÛĮ', 'ĠSund', 'resse']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;16&lt;/cell&gt;
        &lt;cell&gt;1131'...'&lt;/cell&gt;
        &lt;cell&gt;12676'365'&lt;/cell&gt;
        &lt;cell&gt;65615'ĠSole'&lt;/cell&gt;
        &lt;cell&gt;...365 Sole&lt;/cell&gt;
        &lt;cell&gt;['...', '...Ċ', 'Ġboth', 'Ġindeed', 'ĠYes']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;24&lt;/cell&gt;
        &lt;cell&gt;12'-'&lt;/cell&gt;
        &lt;cell&gt;31643'ï¸ı'&lt;/cell&gt;
        &lt;cell&gt;51965'ĠJackie'&lt;/cell&gt;
        &lt;cell&gt;-️ Jackie&lt;/cell&gt;
        &lt;cell&gt;['-', '...', 'âĢ¦', 'em', '...Ċ']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;32&lt;/cell&gt;
        &lt;cell&gt;1131'...'&lt;/cell&gt;
        &lt;cell&gt;96154'ĠGaut'&lt;/cell&gt;
        &lt;cell&gt;88'y'&lt;/cell&gt;
        &lt;cell&gt;... Gauty&lt;/cell&gt;
        &lt;cell&gt;['...', 'âĢ¦', '...Ċ', 'O', 'u']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;40&lt;/cell&gt;
        &lt;cell&gt;220'Ġ'&lt;/cell&gt;
        &lt;cell&gt;6"'"&lt;/cell&gt;
        &lt;cell&gt;7795'Ġfish'&lt;/cell&gt;
        &lt;cell&gt;'fish&lt;/cell&gt;
        &lt;cell&gt;['Ġ', '...', 'âĢ¦', 'Âł', 'u']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;48&lt;/cell&gt;
        &lt;cell&gt;7795'Ġfish'&lt;/cell&gt;
        &lt;cell&gt;7795'Ġfish'&lt;/cell&gt;
        &lt;cell&gt;7795'Ġfish'&lt;/cell&gt;
        &lt;cell&gt;fish fish fish&lt;/cell&gt;
        &lt;cell&gt;['Ġfish', 'ĠFish', 'ĠBerk', 'âĢ¦', 'Âł']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;56&lt;/cell&gt;
        &lt;cell&gt;7795'Ġfish'&lt;/cell&gt;
        &lt;cell&gt;7795'Ġfish'&lt;/cell&gt;
        &lt;cell&gt;7795'Ġfish'&lt;/cell&gt;
        &lt;cell&gt;fish fish fish&lt;/cell&gt;
        &lt;cell&gt;['Ġfish', 'ĠFish', 'fish', 'Fish', 'é±¼']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;64&lt;/cell&gt;
        &lt;cell&gt;7795'Ġfish'&lt;/cell&gt;
        &lt;cell&gt;238'Ĳ'&lt;/cell&gt;
        &lt;cell&gt;7795'Ġfish'&lt;/cell&gt;
        &lt;cell&gt;fish� fish&lt;/cell&gt;
        &lt;cell&gt;['Ġfish', 'ĠFish', 'ĠPis', 'Fish', 'ĠÙħØ§Ùĩ']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;72&lt;/cell&gt;
        &lt;cell&gt;7795'Ġfish'&lt;/cell&gt;
        &lt;cell&gt;238'Ĳ'&lt;/cell&gt;
        &lt;cell&gt;253'Ł'&lt;/cell&gt;
        &lt;cell&gt;fish��&lt;/cell&gt;
        &lt;cell&gt;['Ġfish', 'ĠFish', 'ĠðŁ', 'Ġ', 'ÂŁ']&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;80&lt;/cell&gt;
        &lt;cell&gt;11410'ĠðŁ'&lt;/cell&gt;
        &lt;cell&gt;238'Ĳ'&lt;/cell&gt;
        &lt;cell&gt;253'Ł'&lt;/cell&gt;
        &lt;cell&gt;🐟&lt;/cell&gt;
        &lt;cell&gt;['ĠðŁ', 'ðŁ', 'Ġ', 'ĠĊĊ', 'ĠâĻ']&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Here, everything works perfectly. The model constructs the "fish + emoji" residual - look at the layer 72 topk, where we have both "fish" and the emoji byte prefix "ĠðŁ" - meaning that the residual at this point is similar to both "fish" and "emoji", just like we'd expect. Then when this vector is passed into the &lt;code&gt;lm_head&lt;/code&gt; after the final layer, we see a 🐟 just as the model expected.&lt;/p&gt;
    &lt;p&gt;But unlike with 🐟, the seahorse emoji doesn't exist. The model tries to construct a "seahorse + emoji" vector just as it would for a real emoji, and on layer 72 we even get a very similar construction as with the fish emoji - " se", "horse", and the emoji prefix byte prefix:&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="6"&gt;
        &lt;cell role="head"&gt;layer&lt;/cell&gt;
        &lt;cell role="head"&gt;tokens&lt;/cell&gt;
        &lt;cell role="head"&gt;tokens&lt;/cell&gt;
        &lt;cell role="head"&gt;token 0&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;0&lt;/cell&gt;
        &lt;cell&gt;1&lt;/cell&gt;
        &lt;cell&gt;2&lt;/cell&gt;
        &lt;cell&gt;merged&lt;/cell&gt;
        &lt;cell&gt;(topk 5)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;72&lt;/cell&gt;
        &lt;cell&gt;513'Ġse'&lt;/cell&gt;
        &lt;cell&gt;238'Ĳ'&lt;/cell&gt;
        &lt;cell&gt;513'Ġse'&lt;/cell&gt;
        &lt;cell&gt;se� se&lt;/cell&gt;
        &lt;cell&gt;['Ġse', 'Ġhippoc', 'horse', 'ĠðŁ', 'Ġhorse']&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;But alas, there's no continuation to ĠðŁ corresponding to a seahorse, so the &lt;code&gt;lm_head&lt;/code&gt; similarity score calculation maxes out with horse- or sea-animal-related emoji bytes instead, and an unintended emoji is sampled.&lt;/p&gt;
    &lt;p&gt;Now, that sampling is valuable information for the model! You can see that in, e.g. the Claude 4.5 Sonnet example below, when the tokens get appended into the context autoregressively, the model can tell that they don't form the intended seahorse emoji. The previous, fuzzy "seahorse + emoji" concept has been "snapped" by the &lt;code&gt;lm_head&lt;/code&gt; to an emoji that actually exists, like a tropical fish or horse.&lt;/p&gt;
    &lt;p&gt;Once this happens, it's up to the model how to proceed. Some models like 4.5 Sonnet try again, and eventually update on the evidence, changing mid-response to a statement about how the seahorse emoji doesn't exist. Other models like gpt-5-chat spiral for longer, sometimes never recovering. Other models will either blissfully ignore that the emoji is incorrect, and some will even correct themselves instantly after seeing only a single incorrect sample.&lt;/p&gt;
    &lt;p&gt;But until the model gets the wrong output token from &lt;code&gt;lm_head&lt;/code&gt;, it just doesn't know that its initial belief about a seahorse emoji existing was wrong. It can only assume that "seahorse + emoji" will produce the tokens it wants.&lt;/p&gt;
    &lt;head rend="h2"&gt;Some speculation&lt;/head&gt;
    &lt;p&gt;To speculate a bit more, I wonder if this problem is part of the benefit of reinforcement learning for LLMs - it gives the model information about its &lt;code&gt;lm_head&lt;/code&gt; that's otherwise difficult for it to get at because it's at the end of the layer stack.&lt;/p&gt;
    &lt;p&gt;(Remember that base models are not trained on their own outputs / rollouts. That only happens in RL.)&lt;/p&gt;
    &lt;head rend="h2"&gt;Code&lt;/head&gt;
    &lt;p&gt;If you want to try this yourself, you can find a starter script on Github here: https://gist.github.com/vgel/025ad6af9ac7f3bc194966b03ea68606&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45487044</guid><pubDate>Mon, 06 Oct 2025 02:20:05 +0000</pubDate></item><item><title>1 Trillion Web Pages Archived</title><link>https://blog.archive.org/trillion/</link><description>&lt;doc fingerprint="1a1cb085e3f4f429"&gt;
  &lt;main&gt;
    &lt;head rend="h3"&gt;This October, the Internet Archive will celebrate an extraordinary milestone: 1 trillion web pages preserved and available for access via the Wayback Machine.&lt;/head&gt;
    &lt;p&gt;Calendar of Events | Impact Stories | Support the Internet Archive | Press Kit&lt;/p&gt;
    &lt;p&gt;Since 1996, the Internet Archive has worked with libraries and partners around the world to build a shared digital library of humanity’s online history: capturing websites large and small—from breaking news to forgotten personal pages—so they remain accessible for future generations.&lt;/p&gt;
    &lt;p&gt;The series of events scheduled throughout October will highlight the memories, makers, and movements that have made this achievement possible, and will look ahead to the future of web preservation as we continue building the web’s collective memory together.&lt;/p&gt;
    &lt;head rend="h1"&gt;Calendar of Events&lt;/head&gt;
    &lt;head rend="h2"&gt;October 7—The Vast Blue We: Del Sol Quartet at the Internet Archive&lt;/head&gt;
    &lt;p&gt;7:00-8:15pm PT&lt;lb/&gt;Internet Archive&lt;lb/&gt;300 Funston Avenue, San Francisco &amp;amp; ONLINE&lt;lb/&gt;Register now for IN-PERSON or VIRTUAL tickets&lt;/p&gt;
    &lt;p&gt;An evening to celebrate human collaboration—how billions of individual actions weave together into something vast and beautiful. Through music of Del Sol Quartet with new works by Erika Oba and Sam Reider, we mark the staggering scale of one trillion archived web pages available via the Wayback Machine. Join us for an interactive evening of live music reflecting the wonder of what we can achieve together and the power of our own voices.&lt;/p&gt;
    &lt;head rend="h2"&gt;October 9—A Conversation with Sir Tim Berners-Lee and Brewster Kahle&lt;/head&gt;
    &lt;p&gt;Building and Preserving the Web: A Conversation with Sir Tim Berners-Lee and Brewster Kahle&lt;lb/&gt;7:30pm PT&lt;lb/&gt;The Commonwealth Club of California&lt;lb/&gt;110 The Embarcadero, San Francisco &amp;amp; ONLINE&lt;lb/&gt;Register now for IN-PERSON or VIRTUAL tickets&lt;/p&gt;
    &lt;p&gt;Sir Tim Berners-Lee and Brewster Kahle will be in conversation about the rise of the internet, its continuing and explosive impact on society, the importance of the Internet Archive and other developing issues in the growth and use of the internet.&lt;/p&gt;
    &lt;head rend="h2"&gt;October 16—Library Leaders Forum 2025 (VIRTUAL)&lt;/head&gt;
    &lt;p&gt;10:00-11:30am PT&lt;lb/&gt;ONLINE&lt;lb/&gt;Register now for VIRTUAL tickets&lt;/p&gt;
    &lt;p&gt;In our virtual Library Leaders Forum, you’ll hear from Internet Archive staff and partners about our emerging library services and updates on existing efforts. How do libraries empower research in the 21st century? Join in our discussion!&lt;/p&gt;
    &lt;head rend="h2"&gt;October 21—Doors Open 2025: Go Behind the Scenes at the Physical Archive&lt;/head&gt;
    &lt;p&gt;6:00-8:00pm PT&lt;lb/&gt;Richmond, California&lt;lb/&gt;Register now for IN-PERSON tickets&lt;/p&gt;
    &lt;p&gt;The Internet Archive is excited to offer a behind-the-scenes tour of the physical collections of books, music, film, and video in Richmond, California.&lt;/p&gt;
    &lt;p&gt;With this special insider event we are opening the doors to an often unseen place. See the lifecycle of physical materials: donation, preservation, digitization, and access. Also, samples from generous donations and acquisitions of books, records, microfiche, and more will be on display.&lt;/p&gt;
    &lt;head rend="h2"&gt;October 22—The Web We’ve Built: Celebrating 1 Trillion Web Pages Archived&lt;/head&gt;
    &lt;p&gt;5:00-10:00pm PT&lt;lb/&gt;7:00-8:00pm PT Live Stream&lt;lb/&gt;Internet Archive&lt;lb/&gt;300 Funston Ave, San Francisco&lt;lb/&gt;Register now for IN-PERSON or VIRTUAL tickets&lt;/p&gt;
    &lt;p&gt;This October, the Internet Archive’s Wayback Machine is projected to hit a once-in-a-generation milestone: 1 trillion web pages archived. That’s one trillion memories, moments, and movements—preserved for the public and available to access via the Wayback Machine.&lt;/p&gt;
    &lt;p&gt;We’ll be commemorating this historic achievement on October 22, 2025, with a global event: a party at our San Francisco headquarters and a livestream for friends and supporters around the world. More than a celebration, it’s a tribute to what we’ve built together: a free and open digital library of the web.&lt;/p&gt;
    &lt;p&gt;Join us in marking this incredible milestone. Together, we’ve built the largest archive of web history ever assembled. Let’s celebrate this achievement—in San Francisco and around the world—on October 22.&lt;/p&gt;
    &lt;head rend="h2"&gt;October 27—Wayback to the Future: Celebrating the Open Web&lt;/head&gt;
    &lt;p&gt;5:00-8:00pm PT&lt;lb/&gt;Riggs Library, Georgetown University&lt;lb/&gt;Healy Hall, Library Walk, Washington, DC 20057&lt;lb/&gt;Register now for IN-PERSON tickets&lt;/p&gt;
    &lt;p&gt;Join the Foundation for American Innovation, the Massive Data Institute and the Internet Archive at Georgetown University’s historic Riggs Library for Wayback to the Future: Celebrating the Open Web—Past, Present, and Possible.&lt;/p&gt;
    &lt;p&gt;The open web was once defined by experimentation, decentralization, and possibility. The technological advancements were driven by the desire for a place where new voices and ideas could flourish. Today, consolidation and walled gardens challenge that vision. Together, we’ll look back at the internet’s origins to spark a forward-looking conversation about how to keep the web free, open, and innovative.&lt;/p&gt;
    &lt;p&gt;Speakers include:&lt;/p&gt;
    &lt;p&gt;Moderator: Luke Hogg — Director of Technology Policy, FAI&lt;lb/&gt;Brewster Kahle — Founder &amp;amp; Director, Internet Archive&lt;lb/&gt;Vint Cerf — Chief Internet Evangelist, Google&lt;lb/&gt;Cindy Cohn — Executive Director, Electronic Frontier Foundation&lt;lb/&gt;Jon Stokes – Co-founder, Ars Technica &lt;/p&gt;
    &lt;head rend="h1"&gt;Impact Stories&lt;/head&gt;
    &lt;p&gt;The 1 trillion archived webpages are more than just numbers—they represent real impact on people’s lives, research, and memory. From immigration cases to personal histories, academic research to investigative journalism, the Wayback Machine has become an essential public resource that preserves the web for all.&lt;/p&gt;
    &lt;p&gt;Canadian musician David Samuel relied on archived concert programs in the Wayback Machine to secure U.S. residency.&lt;/p&gt;
    &lt;p&gt;Paul Lindner built a digital memorial to his late wife by recovering her online presence.&lt;/p&gt;
    &lt;p&gt;Researchers at King’s College London use web archives to track the evolution of fake news and open data.&lt;/p&gt;
    &lt;p&gt;Investigative trainers call the Wayback Machine “a precious tool” for exposing deleted evidence.&lt;/p&gt;
    &lt;head rend="h1"&gt;Share Your Story&lt;/head&gt;
    &lt;p&gt;What does the web mean to you? How has the Wayback Machine helped you remember, research, or recover something important? Share your story.&lt;/p&gt;
    &lt;head rend="h1"&gt;Support the Internet Archive&lt;/head&gt;
    &lt;p&gt;Help us continue preserving the web for generations to come. Donate today!&lt;/p&gt;
    &lt;head rend="h1"&gt;Press Kit&lt;/head&gt;
    &lt;p&gt;Interested in producing a story about the 1 trillion milestone? Our online press kit includes impact stories from users, facts &amp;amp; figures about the Internet Archive &amp;amp; Wayback Machine, and Then/Now screenshots of popular web sites. Contact info is available in the press kit.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45487476</guid><pubDate>Mon, 06 Oct 2025 03:48:34 +0000</pubDate></item><item><title>Gem.coop</title><link>https://gem.coop/</link><description>&lt;doc fingerprint="2b6d011076da77e2"&gt;
  &lt;main&gt;
    &lt;p&gt;Ruby ecosystem.&lt;/p&gt;
    &lt;p&gt;We aim for fast, simple hosting, that is compatible with Bundler but optimized for the next generation. It’s built for the community by the former maintainers and operators of RubyGems.org.&lt;/p&gt;
    &lt;p&gt;All gems published to RubyGems.org are available, updated in real time. Get started right now with a simple change to your Gemfile:&lt;/p&gt;
    &lt;code&gt;-source "https://rubygems.org"
+source "https://gem.coop"
&lt;/code&gt;
    &lt;p&gt;Governance for this project is modeled on Homebrew, with setup assistance from Mike McQuaid, and will be published on or before October 10. Everyone from the Ruby community is welcome to contribute and participate.&lt;/p&gt;
    &lt;p&gt;If you want to follow along with our progress, subscribe to the gem.coop newsletter for monthly updates.&lt;/p&gt;
    &lt;p&gt;Our goal is to provide fast, community-owned, transparent, sustainable, and secure gem hosting for everyone. We’re launching with support for bundling and installing all public gems, and we’re excited to keep improving.&lt;/p&gt;
    &lt;p&gt;— The Gem Cooperative (@deivid-rodriguez, @duckinator, @indirect, @martinemde, @segiddins, @simi)&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45487771</guid><pubDate>Mon, 06 Oct 2025 04:59:39 +0000</pubDate></item><item><title>Structured Procrastination (1995)</title><link>https://structuredprocrastination.com</link><description>&lt;doc fingerprint="161270546c3194f9"&gt;
  &lt;main&gt;
    &lt;p&gt;Author practices jumping rope with seaweed while work awaits.&lt;/p&gt;
    &lt;p&gt;``. . . anyone can do any amount of work, provided it isn't the work he is supposed to be doing at that moment." -- Robert Benchley, in Chips off the Old Benchley, 1949&lt;/p&gt;
    &lt;p&gt;I have been intending to write this essay for months. Why am I finally doing it? Because I finally found some uncommitted time? Wrong. I have papers to grade, textbook orders to fill out, an NSF proposal to referee, dissertation drafts to read. I am working on this essay as a way of not doing all of those things. This is the essence of what I call structured procrastination, an amazing strategy I have discovered that converts procrastinators into effective human beings, respected and admired for all that they can accomplish and the good use they make of time. All procrastinators put off things they have to do. Structured procrastination is the art of making this bad trait work for you. The key idea is that procrastinating does not mean doing absolutely nothing. Procrastinators seldom do absolutely nothing; they do marginally useful things, like gardening or sharpening pencils or making a diagram of how they will reorganize their files when they get around to it. Why does the procrastinator do these things? Because they are a way of not doing something more important. If all the procrastinator had left to do was to sharpen some pencils, no force on earth could get him do it. However, the procrastinator can be motivated to do difficult, timely and important tasks, as long as these tasks are a way of not doing something more important.&lt;/p&gt;
    &lt;p&gt;Structured procrastination means shaping the structure of the tasks one has to do in a way that exploits this fact. The list of tasks one has in mind will be ordered by importance. Tasks that seem most urgent and important are on top. But there are also worthwhile tasks to perform lower down on the list. Doing these tasks becomes a way of not doing the things higher up on the list. With this sort of appropriate task structure, the procrastinator becomes a useful citizen. Indeed, the procrastinator can even acquire, as I have, a reputation for getting a lot done.&lt;/p&gt;
    &lt;p&gt;The most perfect situation for structured procrastination that I ever had was when my wife and I served as Resident Fellows in Soto House, a Stanford dormitory. In the evening, faced with papers to grade, lectures to prepare, committee work to be done, I would leave our cottage next to the dorm and go over to the lounge and play ping-pong with the residents, or talk over things with them in their rooms, or just sit there and read the paper. I got a reputation for being a terrific Resident Fellow, and one of the rare profs on campus who spent time with undergraduates and got to know them. What a set up: play ping pong as a way of not doing more important things, and get a reputation as Mr. Chips.&lt;/p&gt;
    &lt;p&gt;Procrastinators often follow exactly the wrong tack. They try to minimize their commitments, assuming that if they have only a few things to do, they will quit procrastinating and get them done. But this goes contrary to the basic nature of the procrastinator and destroys his most important source of motivation. The few tasks on his list will be by definition the most important, and the only way to avoid doing them will be to do nothing. This is a way to become a couch potato, not an effective human being.&lt;/p&gt;
    &lt;p&gt;At this point you may be asking, "How about the important tasks at the top of the list, that one never does?" Admittedly, there is a potential problem here.&lt;/p&gt;
    &lt;p&gt;The trick is to pick the right sorts of projects for the top of the list. The ideal sorts of things have two characteristics, First, they seem to have clear deadlines (but really don't). Second, they seem awfully important (but really aren't). Luckily, life abounds with such tasks. In universities the vast majority of tasks fall into this category, and I'm sure the same is true for most other large institutions. Take for example the item right at the top of my list right now. This is finishing an essay for a volume in the philosophy of language. It was supposed to be done eleven months ago. I have accomplished an enormous number of important things as a way of not working on it. A couple of months ago, bothered by guilt, I wrote a letter to the editor saying how sorry I was to be so late and expressing my good intentions to get to work. Writing the letter was, of course, a way of not working on the article. It turned out that I really wasn't much further behind schedule than anyone else. And how important is this article anyway? Not so important that at some point something that seems more important won't come along. Then I'll get to work on it.&lt;/p&gt;
    &lt;p&gt;Another example is book order forms. I write this in June. In October, I will teach a class on Epistemology. The book order forms are already overdue at the book store. It is easy to take this as an important task with a pressing deadline (for you non-procrastinators, I will observe that deadlines really start to press a week or two after they pass.) I get almost daily reminders from the department secretary, students sometimes ask me what we will be reading, and the unfilled order form sits right in the middle of my desk, right under the wrapping from the sandwich I ate last Wednesday. This task is near the top of my list; it bothers me, and motivates me to do other useful but superficially less important things. But in fact, the book store is plenty busy with forms already filed by non-procrastinators. I can get mine in mid-Summer and things will be fine. I just need to order popular well-known books from efficient publishers. I will accept some other, apparently more important, task sometime between now and, say, August 1st. Then my psyche will feel comfortable about filling out the order forms as a way of not doing this new task.&lt;/p&gt;
    &lt;p&gt;The observant reader may feel at this point that structured procrastination requires a certain amount of self-deception, since one is in effect constantly perpetrating a pyramid scheme on oneself. Exactly. One needs to be able to recognize and commit oneself to tasks with inflated importance and unreal deadlines, while making oneself feel that they are important and urgent. This is not a problem, because virtually all procrastinators have excellent self-deceptive skills also. And what could be more noble than using one character flaw to offset the bad effects of another?&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45488261</guid><pubDate>Mon, 06 Oct 2025 06:35:36 +0000</pubDate></item><item><title>Flightcontrol: AWS PaaS</title><link>https://www.flightcontrol.dev/</link><description>&lt;doc fingerprint="bd1863730f143a8e"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Build your dreams&lt;lb/&gt;on AWS, effortlessly&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Flightcontrol is a PaaS that deploys to your AWS account&lt;/item&gt;
      &lt;item&gt;Servers, Lambdas, workers, crons, static sites, databases &amp;amp; Redis&lt;/item&gt;
      &lt;item&gt;We are your devops team with 24/7 emergency support&lt;/item&gt;
      &lt;item&gt;Companies outgrowing other PaaS or homegrown AWS switch to Flightcontrol to regain reliability, security, and scalability at a reasonable cost&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Over $1 million of AWS resources under management&lt;/head&gt;
    &lt;head rend="h2"&gt;The old way&lt;/head&gt;
    &lt;p&gt;"Our AWS setup is consuming too much time &amp;amp; attention"&lt;/p&gt;
    &lt;p&gt;Your team gets bogged down with complex Terraform scripts, manual configuration, and endless CI/CD pipelines. You could hire DevOps engineers, but they are expensive and it's hard to find really good ones. It will do the job, but now your developer productivity suffers as they are dependent on the infra team to make changes or spin up new services.&lt;/p&gt;
    &lt;head rend="h2"&gt;The new way&lt;/head&gt;
    &lt;p&gt;"Flightcontrol gives our team the power to manage bare metal AWS without needing to hire specific talent"&lt;/p&gt;
    &lt;p&gt;Save thousands of dollars and months of time because Flightcontrol significantly reduces DevOps overhead. It empowers your developers ship like crazy without needing AWS or infrastructure expertise. Your developers gain full autonomy while benefiting from AWS's unmatched scalability, reliability, and flexibility.&lt;/p&gt;
    &lt;head rend="h2"&gt;Simple, powerful deployments without worrying about low level AWS config&lt;/head&gt;
    &lt;p&gt;We take the best AWS services, put together a best-in-class setup, and make them super easy to use.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Connect your AWS account to Flightcontrol&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Connect your git repository to Flightcontrol&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Define your services (servers, APIs, databases, etc)&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Flightcontrol fully automates infrastructure provisioning, CI/CD, and deployments. All within your own AWS account where you retain full visibility and control&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Flightcontrol simplifies your deployments by providing a user-friendly dashboard designed specifically for developers, not DevOps engineers. Forget the frustration of navigating AWS’s overwhelming and fragmented console. With Flightcontrol, you see your entire infrastructure clearly in one intuitive interface, allowing you to manage deployments, services, and scaling with confidence.&lt;/p&gt;
    &lt;p&gt;Deployments become as easy as a simple git push or webhook integration. Flightcontrol handles your CI/CD automation entirely, enabling your team to deploy confidently and quickly without maintaining complex Terraform or CDK scripts. You get the simplicity of platforms like Vercel or Heroku, paired with the raw power, near perfect reliability, and immense flexibility of AWS. Your developers can ship faster and stay focused on building great products.&lt;/p&gt;
    &lt;head rend="h2"&gt;Serve all your use-cases from a single platform&lt;/head&gt;
    &lt;p&gt;Static Sites&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;CloudFront CDN&lt;/item&gt;
      &lt;item&gt;S3&lt;/item&gt;
      &lt;item&gt;Lambda@Edget&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Web &amp;amp; GPU Servers&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;CloudFront CDN&lt;/item&gt;
      &lt;item&gt;ECS&lt;/item&gt;
      &lt;item&gt;Fargate or EC2&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Network Servers&lt;/p&gt;
    &lt;p&gt;UDP &amp;amp; TCP with multiple ports&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;ECS&lt;/item&gt;
      &lt;item&gt;Fargate or EC2&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Private Servers&lt;/p&gt;
    &lt;p&gt;HTTP, HTTPS, TCP, UDP&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;ECS&lt;/item&gt;
      &lt;item&gt;Fargate or EC2&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Background Workers&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;ECS&lt;/item&gt;
      &lt;item&gt;Fargate or EC2&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Job Runner&lt;/p&gt;
    &lt;p&gt;Cron &amp;amp; API triggered jobs&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;ECS&lt;/item&gt;
      &lt;item&gt;Fargate or EC2&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Lambda&lt;/p&gt;
    &lt;p&gt;With function url support&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Lambda&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Databases&lt;/p&gt;
    &lt;p&gt;Postgres, MySQL, MariaDB&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;RDS&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Redis&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;ElastiCache&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;S3 Bucket&lt;/p&gt;
    &lt;p&gt;File &amp;amp; object storage&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;S3&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Significantly reduce your DevOps overhead&lt;/head&gt;
    &lt;p&gt;Flightcontrol becomes your devops team. We guarantee support for everything managed through Flightcontrol. You don't have to worry about anything that's amiss in AWS — let us know and we'll fix it ASAP (but rest assured, this almost never happens!).&lt;/p&gt;
    &lt;p&gt;Get 24/7 emergency support on our Business plan for ultimate peace of mind.&lt;/p&gt;
    &lt;p&gt;Need some extra devops support beyond the Flightcontrol platform? We offer DevOps Support Add-ons to supplement your team. This is ideal for teams that need extra infrastructure help but don't need a full time devops engineer.&lt;/p&gt;
    &lt;head rend="h2"&gt;Ephemeral preview environments&lt;/head&gt;
    &lt;p&gt;The fastest moving engineering teams use preview environments to view changes before committing them.&lt;/p&gt;
    &lt;p&gt;Flightcontrol can automatically spin up temporary infrastructure for each pull request and then clean it up when the pull request is merged.&lt;/p&gt;
    &lt;p&gt;Preview environments mean no more conflicts on staging, no more delays, and significantly fewer bugs in production. Enable all stakeholders to see and test changes before merging code.&lt;/p&gt;
    &lt;p&gt;Each preview environment is cost-optimized, intelligently sharing resources such as load balancers and RDS instances, ensuring you maintain control over spending. Database seeding per environment means realistic testing scenarios, catching issues before they go live. Your team will experience faster releases, fewer bugs, and smoother collaboration.&lt;/p&gt;
    &lt;head rend="h2"&gt;World class support with 6 minute median response time&lt;/head&gt;
    &lt;p&gt;Imagine never worrying about infrastructure issues again. Flightcontrol becomes your DevOps team, providing exceptional, responsive support. With guaranteed smooth operations for everything managed by Flightcontrol, you can rest easy knowing your infrastructure is covered by experts around the clock.&lt;/p&gt;
    &lt;p&gt;With a median first response time of 6 minutes, our dedicated support team is accessible via email and Slack, ensuring rapid resolution whenever you need it. Need some extra DevOps help? Don’t hire full time! Our DevOps support add-on gives you expert guidance tailored specifically to your unique requirements, removing the need to hire a full-time DevOps engineer.&lt;/p&gt;
    &lt;p&gt;Visual Config? Code config? Both!&lt;/p&gt;
    &lt;p&gt;Infrastructure-as-code designed for moving fast&lt;/p&gt;
    &lt;p&gt;Deploy close to your users&lt;/p&gt;
    &lt;p&gt;Choose today from 28 AWS regions. Multi-region deploys in early access.&lt;/p&gt;
    &lt;p&gt;Observability&lt;/p&gt;
    &lt;p&gt;Stay on top of things with our metrics and alerts, or add sidecars like Datadog.&lt;/p&gt;
    &lt;p&gt;Nixpacks&lt;/p&gt;
    &lt;p&gt;Build any language or framework without writing a Dockerfile. The modern successor to Heroku buildpacks.&lt;/p&gt;
    &lt;p&gt;Stale while revalidate + Next.js &amp;amp; Svelte ISR&lt;/p&gt;
    &lt;p&gt;Blazing fast speed with CloudFront's stale-while-revalidate support&lt;/p&gt;
    &lt;p&gt;AWS cost transparency&lt;/p&gt;
    &lt;p&gt;Understand exactly where the dollars are going by project, environment, and service.&lt;/p&gt;
    &lt;p&gt;Preview environments, fullstack&lt;/p&gt;
    &lt;p&gt;Deploy your all your services for every pull request to a cost optimized environment.&lt;/p&gt;
    &lt;p&gt;Bring your monoliths and your microservices&lt;/p&gt;
    &lt;p&gt;Your architecture will work with us, no matter how big or small.&lt;/p&gt;
    &lt;p&gt;Your domain, with https&lt;/p&gt;
    &lt;p&gt;Connect your domain with a couple DNS records. No messing with SSL certificates.&lt;/p&gt;
    &lt;p&gt;Peak edge performance&lt;/p&gt;
    &lt;p&gt;World-class performance with CloudFront, Stale-While-Revalidate, and edge-based Next.js ISR. Even multi-region.&lt;/p&gt;
    &lt;p&gt;Monorepos, with watch paths&lt;/p&gt;
    &lt;p&gt;Put all your stuff in one place, that's fine with us. And only deploy changed files with watch paths.&lt;/p&gt;
    &lt;p&gt;Maintenance mode&lt;/p&gt;
    &lt;p&gt;Block traffic to your app while you're doing something important (we assume).&lt;/p&gt;
    &lt;p&gt;API &amp;amp; deploy hooks&lt;/p&gt;
    &lt;p&gt;Trigger deploys from CI. More thorough API is coming, we promise.&lt;/p&gt;
    &lt;p&gt;Notifications&lt;/p&gt;
    &lt;p&gt;Get alerted in Slack or email when things go south. Or when they go north.&lt;/p&gt;
    &lt;p&gt;Rollback&lt;/p&gt;
    &lt;p&gt;It happens to the best of us, so we've got your back when the inevitable happens.&lt;/p&gt;
    &lt;p&gt;Private VPC networking&lt;/p&gt;
    &lt;p&gt;Each environment is deployed to a new or existing VPC. Get private services and private databases.&lt;/p&gt;
    &lt;head rend="h2"&gt;Deploy every language globally&lt;/head&gt;
    &lt;p&gt;Every language and framework works beautifully in the Flightcontrol universe. Welcome home.&lt;/p&gt;
    &lt;head rend="h2"&gt;1. Connect your AWS and Git Repo with 1-click&lt;/head&gt;
    &lt;p&gt;Everything is deployed to your AWS account where you have full ownership and control. Without the frustrating limitations of black box PaaS.&lt;/p&gt;
    &lt;head rend="h2"&gt;2. Zero-config or customize to your heart's content&lt;/head&gt;
    &lt;p&gt;It will often "just work", but we also support many customizations like pulling from image registries or fine-tuning autoscaling.&lt;/p&gt;
    &lt;head rend="h2"&gt;3. Automatic deploys with git push or webhook&lt;/head&gt;
    &lt;p&gt;Fully automated infra provisioning, builds and deploys. All without having to use the AWS console.&lt;/p&gt;
    &lt;head rend="h3"&gt;Trusted by thousands of developers&lt;/head&gt;
    &lt;p&gt;We've got your back with the most helpful, responsive support in the industry&lt;/p&gt;
    &lt;head rend="h3"&gt;Enterprise grade no matter your size&lt;/head&gt;
    &lt;p&gt;Customers of all sizes rely on us for production, from startups to large enterprises&lt;/p&gt;
    &lt;head rend="h3"&gt;Save a fortune on devops costs&lt;/head&gt;
    &lt;p&gt;We delay the need for infra engineers by a few years. And then we enable them to focus on more meaningful work&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45488441</guid><pubDate>Mon, 06 Oct 2025 07:07:11 +0000</pubDate></item><item><title>Battering RAM – Low-Cost Interposer Attacks on Confidential Computing</title><link>https://batteringram.eu/</link><description>&lt;doc fingerprint="be7b4c01fd29b2c1"&gt;
  &lt;main&gt;
    &lt;p&gt;Modern computers use memory modules (DRAM) to store everything in use: from photos and passwords to credit card numbers. Public cloud providers increasingly deploy hardware-level memory encryption to protect this sensitive data. However, we previously showed that malicious memory modules, nicknamed “Bad RAM”, can bypass these protections by deliberately supplying false metadata during processor boot. In response, modern cloud systems now validate memory more strictly at startup.&lt;/p&gt;
    &lt;head rend="h4"&gt;Breaking Memory Encryption with Two-Faced DRAM&lt;/head&gt;
    &lt;p&gt;Battering RAM fully breaks cutting-edge Intel SGX and AMD SEV-SNP confidential computing processor security technologies designed to protect sensitive workloads from compromised hosts, malicious cloud providers, or rogue employees. Our stealthy interposer bypasses both memory encryption and state-of-the-art boot-time defenses, invisible to the operating system. It enables arbitrary plaintext access to SGX-protected memory, and breaks SEV’s attestation feature on fully patched systems. Ultimately, Battering RAM exposes the limits of today’s scalable memory encryption. Intel and AMD have acknowledged our findings, but defending against Battering RAM would require a fundamental redesign of memory encryption itself.&lt;/p&gt;
    &lt;head rend="h4"&gt;Building Battering RAM on a $50 Budget&lt;/head&gt;
    &lt;p&gt;Unlike commercial passive interposers, which are exceedingly expensive and commonly cost over $100,000, we developed a custom-built interposer that uses simple analog switches to actively manipulate signals between the processor and memory, and can be built for less than $50.&lt;/p&gt;
    &lt;p&gt;All schematics and board files for our custom interposer are available as open source in our GitHub repository. The PCB is a standard 4-layer design and can be fabricated at any major PCB fabricator such as JLCPCB, PCBWay, or Eurocircuits.&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="4"&gt;
        &lt;cell role="head"&gt;Component&lt;/cell&gt;
        &lt;cell role="head"&gt;Part Number&lt;/cell&gt;
        &lt;cell role="head"&gt;Cost&lt;/cell&gt;
        &lt;cell role="head"&gt;Qty.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;PCB&lt;/cell&gt;
        &lt;cell&gt;Custom&lt;/cell&gt;
        &lt;cell&gt;$18.49&lt;/cell&gt;
        &lt;cell&gt;1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;DDR4 Connector&lt;/cell&gt;
        &lt;cell&gt;CONN-DDR4-288-SM&lt;/cell&gt;
        &lt;cell&gt;$16.00&lt;/cell&gt;
        &lt;cell&gt;1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Microcontroller&lt;/cell&gt;
        &lt;cell&gt;Raspberry Pi Pico 1/2&lt;/cell&gt;
        &lt;cell&gt;$4.00&lt;/cell&gt;
        &lt;cell&gt;1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Switches&lt;/cell&gt;
        &lt;cell&gt;ADG902BRMZ&lt;/cell&gt;
        &lt;cell&gt;$4.04&lt;/cell&gt;
        &lt;cell&gt;2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Voltage regulator&lt;/cell&gt;
        &lt;cell&gt;LD1117S25TR&lt;/cell&gt;
        &lt;cell&gt;$0.61&lt;/cell&gt;
        &lt;cell&gt;1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Resistor&lt;/cell&gt;
        &lt;cell&gt;0402, 1kOhm&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;$0.01&lt;/cell&gt;
        &lt;cell&gt;2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Capacitor&lt;/cell&gt;
        &lt;cell&gt;0603, 100nF&lt;/cell&gt;
        &lt;cell&gt;$0.02&lt;/cell&gt;
        &lt;cell&gt;3&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;Capacitor&lt;/cell&gt;
        &lt;cell&gt;1206, 10μF&lt;/cell&gt;
        &lt;cell&gt;$0.18&lt;/cell&gt;
        &lt;cell&gt;1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Total&lt;/cell&gt;
        &lt;cell&gt;$47.62&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;head rend="h4"&gt;Battering RAM in Action&lt;/head&gt;
    &lt;head rend="h3"&gt;Questions and Answers&lt;/head&gt;
    &lt;p&gt;Battering RAM can affect all systems using DDR4 memory, but is especially relevant for "confidential computing" workloads running in public cloud environments.&lt;/p&gt;
    &lt;p&gt;Modern Intel and AMD x86 cloud processors feature built-in access control and memory encryption to keep private data safe, even from the company running the cloud. However, our research shows that these guarantees can be bypassed with a low-cost memory interposer, allowing a rogue cloud infrastructure provider or insider with limited physical access to compromise protected workloads.&lt;/p&gt;
    &lt;p&gt;Confidential computing aims to protect private data even from the cloud provider, using hardware-level access control and memory encryption. Even if someone accesses the memory, they should only see encrypted (garbled) data. Battering RAM uses a low-cost, custom-built memory interposer installed between the processor and memory to tamper with such encrypted memory. It requires only brief one-time physical access, which is realistic in cloud environments, considering, for instance:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Rogue cloud employees;&lt;/item&gt;
      &lt;item&gt;Datacenter technicians or cleaning personnel;&lt;/item&gt;
      &lt;item&gt;Coercive local law enforcement agencies;&lt;/item&gt;
      &lt;item&gt;Supply chain tampering during shipping or manufacturing of the memory modules.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Intel SGX and AMD SEV-SNP are two leading hardware-based trusted execution environments that enable secure cloud computations without needing to trust the cloud provider. They do this by enforcing strict access control and encrypting memory so that even if someone accesses it, they only see unreadable data.&lt;/p&gt;
    &lt;p&gt;AMD SEV and Intel SGX are widely offered by major cloud providers like like Amazon AWS, Google Cloud, Microsoft Azure, and IBM cloud. They also power privacy features in real-world applications like Signal, WhatsApp, and Chrome, and are used in sectors like healthcare to protect sensitive data.&lt;/p&gt;
    &lt;p&gt;No. While Intel Scalable SGX and AMD SEV-SNP use memory encryption to protect data stored in DRAM, this encryption is static: the same plaintext at the same physical address always maps to the same ciphertext. This defends against passive attacks, such as cold boot attacks, but not against Battering RAM, which can actively corrupt or replay memory contents. Because the encryption is static, replayed data decrypts to the original value, allowing stale data to be reused.&lt;/p&gt;
    &lt;p&gt;Furthermore, Intel's memory encryption engine for DDR4 systems, TME, relies on a single key for the entire memory range. This means encryption is static, not only per address, but also shared across both attacker and victim. By replaying and capturing ciphertexts from attacker-controlled pages, the attacker can recover and inject arbitrary plaintext within the victim’s memory.&lt;/p&gt;
    &lt;p&gt;Hence, Battering RAM exposes the fundamental limits of the scalable memory encryption designs currently used by Intel and AMD, which omit cryptographic freshness checks in favor of larger protected memory sizes.&lt;/p&gt;
    &lt;p&gt;BadRAM similarly exploited physical address aliasing to modify and replay encrypted memory on AMD SEV-SNP systems. However, BadRAM relied on modifying the SPD chip on the DIMM to report a false memory size at boot time, introducing static ghost address lines. In response, Intel and AMD added boot-time checks to detect and block such static aliases.&lt;/p&gt;
    &lt;p&gt;Battering RAM, on the other hand, is capable of introducing memory aliases dynamically at runtime. As a result, Battering RAM can circumvent Intel's and AMD's boot-time alias checks.&lt;/p&gt;
    &lt;p&gt;Concurrent to our work on Battering RAM, an independent research team developed the WireTap attack, which uses a commercial DDR4 DRAM interposer to break Intel Scalable SGX. Both Battering RAM and WireTap stem from a similar attack vector, but the approaches and findings are distinct.&lt;/p&gt;
    &lt;p&gt;The key differences between these two attacks are:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Cost: commercial DRAM interposers require specialized, high-speed signal analyzers (typically retailing at &amp;gt;$150,000), whereas our custom-built interposer requires only two simple analog switches and some control logic, totalling about $50. Battering RAM, therefore, shows that physical attacks are practical and not limited to resourceful adversaries with a large budget.&lt;/item&gt;
      &lt;item&gt;Technique: Battering RAM and WireTap exploit distinct techniques: memory aliasing vs. ciphertext side-channel analysis. Commercial DRAM interposers passively capture memory traffic, requiring additional ciphertext side-channel inference to recover secrets. In contrast, Battering RAM uses a custom-built interposer that actively redirects address lines to introduce aliases, allowing not just observation but also replay and corruption of ciphertext and culminating in plaintext read/write access on Scalable SGX.&lt;/item&gt;
      &lt;item&gt;Target: Both Battering RAM and WireTap expose the security limitations of current, scalable memory encryption technologies. Battering RAM breaks remote attestation for both Intel Scalable SGX and AMD SEV-SNP, whereas WireTap was only demonstrated on Intel Scalable SGX but may affect AMD DDR4 systems similarly.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;We found that our interposer can compromise the security of two widely-deployed TEEs, Intel Scalable SGX and AMD SEV-SNP. Both of these technologies employ a memory encryption scheme that is vulnerable to memory replay attacks. Furthermore, Scalable SGX on DDR4 platforms only employs a single memory encryption key for the entire physical memory space. We show this limitation can be exploited to create an arbitrary plaintext primitive. This severely undermines the protections in the presence of a physical adversary.&lt;/p&gt;
    &lt;p&gt;On top of that, our interposer re-enables the previously-mitigated BadRAM attacks. To combat this threat, AMD rolled out firmware-level mitigations that scan for aliases at boot time. As the interposer can enable and disable the interposer at runtime, these checks are easily bypassed. As a result, Battering RAM re-enables previous attacks on AMD SEV-SNP and Intel Client SGX .&lt;/p&gt;
    &lt;p&gt;Arm has also announced a cloud TEE called CCA . Based on the specification, DDR4 systems may also be vulnerable to Battering RAM. However, as no hardware is available yet, we were unable to test our interposer on CCA.&lt;/p&gt;
    &lt;p&gt;The table below summarizes our findings across different TEEs. Each column indicates whether we were able to read, write, or replay ciphertexts, and read/write plaintext in protected memory regions.&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="5"&gt;
        &lt;cell role="head"&gt;TEE&lt;/cell&gt;
        &lt;cell role="head"&gt;Read&lt;/cell&gt;
        &lt;cell role="head"&gt;Write&lt;/cell&gt;
        &lt;cell role="head"&gt;Replay&lt;/cell&gt;
        &lt;cell role="head"&gt;Plaintext&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;Intel Scalable SGX&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;AMD SEV-SNP&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;Client SGX&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;Intel TDX&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Arm CCA&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;No, our interposer only works on DDR4, which remains widely deployed today; e.g., a recent market study indicates that DDR4 still accounted for around 65% of sold DRAM modules in 2024.&lt;/p&gt;
    &lt;p&gt;DDR5 reorganizes the command/address bus, which removes the possibility of adding simple switches to the address lines. However, the underlying issue is not fixed, as current memory encryption engines still do not provide freshness guarantees. A determined attacker could theoretically still design more advanced interposers to perform similar attacks on DDR5.&lt;/p&gt;
    &lt;p&gt;Yes, our GitHub repository contains the hardware schematics and board files for the custom DDR4 interposer, firmware for the microcontroller, and proof-of-concept code for all attacks described in our paper. The interposer can be built for under $50, and the bill of materials is listed above.&lt;/p&gt;
    &lt;p&gt;We disclosed our findings to both Intel and AMD in February 2025. Both vendors have acknowledged our findings, but noted that physical attacks on DRAM are out of scope for their current products. To better reflect this position, Intel deposited the whitepaper on Scalable SGX, previously removed from the Intel website, permanently on arXiv.&lt;/p&gt;
    &lt;p&gt;Following an embargo period until September 30, 2025, both vendors have issued a public security advisory: Intel advisory | AMD advisory&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt; Confidential computing is here, but is not invincible. &lt;p&gt;Despite strong adoption by major CPU vendors and cloud providers, current technologies have critical physical-layer limitations that remain underexamined.&lt;/p&gt;&lt;/item&gt;
      &lt;item&gt; Reevaluate your threat models. &lt;p&gt;Encrypted memory is not inherently secure against physical tampering, and firmware-based mitigations alone are insufficient in threat scenarios involving limited physical access, such as malicious insiders or supply-chain compromises.&lt;/p&gt;&lt;/item&gt;
      &lt;item&gt; Advanced physical attacks are accessible at low cost. &lt;p&gt;Our open-source $50 custom device costs only a fraction of commercial DRAM interposers (upwards of $100,000) and is capable of breaking multi-million-dollar cloud security technologies from Intel and AMD.&lt;/p&gt;&lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45488713</guid><pubDate>Mon, 06 Oct 2025 07:47:17 +0000</pubDate></item><item><title>Demodesk (YC W19) Is Hiring a Ruby on Rails Engineer</title><link>https://demodesk.com/careers</link><description>&lt;doc fingerprint="7b681573b8765159"&gt;
  &lt;main&gt;
    &lt;p&gt;Demodesk has a global mindset, where we promote a remote friendly environment &amp;amp; employee experience comes first. We offer flexible working conditions &amp;amp; enable face time with your colleagues for those special Demodesk moments! Come join us at one of our central hubs in Munich &amp;amp; Lisbon, or from other established locations around the world.&lt;/p&gt;
    &lt;p&gt;To us, work is more than just a job. We want to provide our employees with an environment where they have the ability to constantly thrive, learn &amp;amp; grow. And we want everybody to feel at home and have the time of their life while building Demodesk.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45489174</guid><pubDate>Mon, 06 Oct 2025 08:49:30 +0000</pubDate></item><item><title>Nobel Prize in Physiology or Medicine 2025</title><link>https://www.nobelprize.org/prizes/medicine/2025/press-release/</link><description>&lt;doc fingerprint="9384913f192e615e"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Press release&lt;/head&gt;
    &lt;p&gt;English&lt;lb/&gt;English (pdf)&lt;lb/&gt;Swedish&lt;lb/&gt;Swedish (pdf)&lt;/p&gt;
    &lt;p&gt;6 October 2025&lt;/p&gt;
    &lt;p&gt;The Nobel Assembly at Karolinska Institutet has decided to award the 2025 Nobel Prize in Physiology or Medicine to:&lt;/p&gt;
    &lt;p&gt;Mary E. Brunkow&lt;lb/&gt;Institute for Systems Biology,&lt;lb/&gt;Seattle, USA&lt;/p&gt;
    &lt;p&gt;Fred Ramsdell&lt;lb/&gt;Sonoma Biotherapeutics,&lt;lb/&gt;San Francisco, USA&lt;/p&gt;
    &lt;p&gt;Shimon Sakaguchi&lt;lb/&gt;Osaka University,&lt;lb/&gt;Osaka, Japan&lt;/p&gt;
    &lt;p&gt;“for their discoveries concerning peripheral immune tolerance”&lt;/p&gt;
    &lt;head rend="h2"&gt;They discovered how the immune system is kept in check&lt;/head&gt;
    &lt;p&gt;The body’s powerful immune system must be regulated, or it may attack our own organs. Mary E. Brunkow, Fred Ramsdell and Shimon Sakaguchi are awarded the Nobel Prize in Physiology or Medicine 2025 for their groundbreaking discoveries concerning peripheral immune tolerance that prevents the immune system from harming the body.&lt;/p&gt;
    &lt;p&gt;Every day, our immune system protects us from thousands of different microbes trying to invade our bodies. These all have different appearances, and many have developed similarities with human cells as a form of camouflage. So how does the immune system determine what it should attack and what it should defend?&lt;/p&gt;
    &lt;p&gt;Mary Brunkow, Fred Ramsdell and Shimon Sakaguchi are awarded the Nobel Prize in Physiology or Medicine 2025 for their fundamental discoveries relating to peripheral immune tolerance. The laureates identified the immune system’s security guards, regulatory T cells, which prevent immune cells from attacking our own body.&lt;/p&gt;
    &lt;p&gt;“Their discoveries have been decisive for our understanding of how the immune system functions and why we do not all develop serious autoimmune diseases,” says Olle Kämpe, chair of the Nobel Committee.&lt;/p&gt;
    &lt;p&gt;Shimon Sakaguchi was swimming against the tide in 1995, when he made the first key discovery. At the time, many researchers were convinced that immune tolerance only developed due to potentially harmful immune cells being eliminated in the thymus, through a process called central tolerance. Sakaguchi showed that the immune system is more complex and discovered a previously unknown class of immune cells, which protect the body from autoimmune diseases.&lt;/p&gt;
    &lt;p&gt;Mary Brunkow and Fred Ramsdell made the other key discovery in 2001, when they presented the explanation for why a specific mouse strain was particularly vulnerable to autoimmune diseases. They had discovered that the mice have a mutation in a gene that they named Foxp3. They also showed that mutations in the human equivalent of this gene cause a serious autoimmune disease, IPEX.&lt;/p&gt;
    &lt;p&gt;Two years after this, Shimon Sakaguchi was able to link these discoveries. He proved that the Foxp3 gene governs the development of the cells he identified in 1995. These cells, now known as regulatory T cells, monitor other immune cells and ensure that our immune system tolerates our own tissues.&lt;/p&gt;
    &lt;p&gt;The laureates’ discoveries launched the field of peripheral tolerance, spurring the development of medical treatments for cancer and autoimmune diseases. This may also lead to more successful transplantations. Several of these treatments are now undergoing clinical trials.&lt;/p&gt;
    &lt;head rend="h2"&gt;Illustrations&lt;/head&gt;
    &lt;p&gt;The illustrations are free to use for non-commercial purposes. Attribute “© The Nobel Committee for Physiology or Medicine. Ill. Mattias Karlén”&lt;/p&gt;
    &lt;p&gt;Illustration: The Nobel Prize in Physiology or Medicine 2025&lt;lb/&gt;Illustration: How T cells discover a virus&lt;lb/&gt;Illustration: How harmful T cells are eliminated&lt;lb/&gt;Illustration: The experiment that inspired Sakaguchi&lt;lb/&gt;Illustration: Sakaguchi defines a new class of T cells&lt;lb/&gt;Illustration: Brunkow and Ramsdell find the scurfy mutation&lt;lb/&gt;Illustration: How regulatory T cells protect us&lt;/p&gt;
    &lt;head rend="h2"&gt;Read more about this year’s prize&lt;/head&gt;
    &lt;p&gt;Popular science background: They understood how the immune system is kept in check (pdf)&lt;lb/&gt;Scientific background to the Nobel Prize in Physiology or Medicine 2025 (pdf)&lt;/p&gt;
    &lt;p&gt;Mary E. Brunkow, born 1961. Ph.D. from Princeton University, Princeton, USA. Senior Program Manager at the Institute for Systems Biology, Seattle, USA.&lt;/p&gt;
    &lt;p&gt;Fred Ramsdell, born 1960. Ph.D. 1987 from the University of California, Los Angeles, USA. Scientific Advisor, Sonoma Biotherapeutics, San Francisco, USA.&lt;/p&gt;
    &lt;p&gt;Shimon Sakaguchi, born 1951. M.D. 1976 and Ph.D. 1983 from Kyoto University, Japan. Distinguished Professor at the Immunology Frontier Research Center, Osaka University, Japan.&lt;/p&gt;
    &lt;p&gt;Prize amount: 11 million Swedish kronor, to be shared equally between the laureates.&lt;lb/&gt;Press contact: Pernilla Witte, +46 8 524 86 107, [email protected] or Thomas Perlmann, [email protected], Secretary-General, The Nobel Assembly at Karolinska Institutet.&lt;/p&gt;
    &lt;p&gt;Illustrations: © The Nobel Committee for Physiology or Medicine.&lt;/p&gt;
    &lt;p&gt;The Nobel Assembly, consisting of 50 professors at Karolinska Institutet, awards the Nobel Prize in Physiology or Medicine. Its Nobel Committee evaluates the nominations. Since 1901 the Nobel Prize has been awarded to scientists who have made the most important discoveries for the benefit of humankind.&lt;/p&gt;
    &lt;p&gt;Nobel Prize® is the registered trademark of the Nobel Foundation&lt;/p&gt;
    &lt;head rend="h3"&gt;Nobel Prize announcements 2025&lt;/head&gt;
    &lt;p&gt;Don't miss the Nobel Prize announcements 6–13 October. All announcements are streamed live here on nobelprize.org.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45489533</guid><pubDate>Mon, 06 Oct 2025 09:41:16 +0000</pubDate></item><item><title>Build a VPN Tunnel with Wintun on Windows – Part 1</title><link>https://0xmm.in/posts/peer-to-peer-windows-part1/</link><description>&lt;doc fingerprint="14977819cd253fd2"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Peer-to-Peer Networking: Building a VPN Tunnel with Wintun on Windows - Part 1&lt;/head&gt;
    &lt;head rend="h2"&gt;Introduction#&lt;/head&gt;
    &lt;p&gt;I’ve been using Tailscale for years to access my home lab without the need for a public IP. Tailscale can be installed on almost any device, allowing you to securely connect and access them from anywhere. It works as a peer-to-peer, mesh-style VPN, is opensource, and completely free for up to 100 devices and 10 users. They also offer a business plan for larger setups.&lt;/p&gt;
    &lt;p&gt;What always fascinated me was how Tailscale works seamlessly across platforms like Linux, macOS, Android, and Windows. Since I use both Linux and Windows in a dual-boot setup, I started digging deeper. On Linux, it’s straightforward they rely on a TUN interface. But on Windows, I was curious about the Layer 3 adapter being used under the hood. After exploring the Tailscale GitHub repo, I discovered that it uses Wintun a TUN driver for Windows developed by the WireGuard project.&lt;/p&gt;
    &lt;p&gt;Tailscale secures user-space packets using public and private key encryption. That made me curious about how peer-to-peer (P2P) communication could be achieved without encryption by simply exchanging plain packets.&lt;/p&gt;
    &lt;p&gt;In this blog, This part lays the groundwork for creating a VPN tunnel on Windows, which I’ll explore in detail in Part 2.&lt;/p&gt;
    &lt;head rend="h2"&gt;Wintun Windows TUN virtual network interface#&lt;/head&gt;
    &lt;p&gt;Wintun acts as a Layer 3 virtual adapter that allows user-space applications such as VPN software to directly work with IP packets. It functions as a TUN interface, creating a virtual network adapter that provides direct access to network layer (IP) packets through simple file read and write operations. Much like a physical network card, it supports assigning IP addresses, configuring routes, and transmitting data. The key difference is that, unlike real hardware, all packet transmission and handling are managed entirely by user-defined programs in user space.&lt;/p&gt;
    &lt;p&gt;In order to develop WireGuard for Windows, Wintun was developed and open sourced, distributed as a dynamic library.&lt;/p&gt;
    &lt;head rend="h3"&gt;Download wintun#&lt;/head&gt;
    &lt;p&gt;Wintun is developed in C language and distributed as a dynamic library.&lt;/p&gt;
    &lt;p&gt;After downloading, unzip the file and the directory is as follows:&lt;/p&gt;
    &lt;p&gt;&lt;code&gt;\bin&lt;/code&gt; The dynamic libraries of various platform versions are stored in same folder. Here you only need to select the appropriate dynamic library according to the platform.&lt;/p&gt;
    &lt;p&gt;
      &lt;code&gt;amd64: Windows 64-bit&lt;/code&gt;
    &lt;/p&gt;
    &lt;p&gt;
      &lt;code&gt;x86: Windows 32-bit&lt;/code&gt;
    &lt;/p&gt;
    &lt;head rend="h3"&gt;Getting Started#&lt;/head&gt;
    &lt;p&gt;Link to a repo https://github.com/mascarenhasmelson/wintun-tunnel&lt;/p&gt;
    &lt;head rend="h3"&gt;Create a virtual network card#&lt;/head&gt;
    &lt;p&gt;WireGuard developed Wintun GO interface binding, install WireGuardGO dependencies&lt;/p&gt;
    &lt;p&gt;
      &lt;code&gt;golang.zx2c4.com/wireguard/tun&lt;/code&gt;
    &lt;/p&gt;
    &lt;p&gt;If the program displays an “Unable to load library” error during execution, please ensure that &lt;code&gt;wintun.dll&lt;/code&gt; is located in the same directory as the executable file.
&lt;/p&gt;
    &lt;p&gt;You may still see this error message when running the code, but it can be safely ignored as long as &lt;code&gt;wintun.dll&lt;/code&gt; is correctly placed in the same folder as &lt;code&gt;main.go&lt;/code&gt; and the compiled binary.
Next, run the following command to compile &lt;code&gt;main.go&lt;/code&gt; into an executable file named &lt;code&gt;main.exe&lt;/code&gt;&lt;/p&gt;
    &lt;p&gt;
      &lt;code&gt;go build -o main.exe&lt;/code&gt;
    &lt;/p&gt;
    &lt;p&gt;After running the command, you will see the &lt;code&gt;main.exe&lt;/code&gt; file generated in the current directory.
&lt;/p&gt;
    &lt;p&gt;Run &lt;code&gt;main.exe&lt;/code&gt; with administrator privileges.
&lt;/p&gt;
    &lt;p&gt;You can find the virtual network adapter listed under Network Connections.&lt;/p&gt;
    &lt;head rend="h3"&gt;Set network card IP and routing#&lt;/head&gt;
    &lt;p&gt;To set the network card IP, you need to use the Windows API. I copied some APIs from wireguard wireguard-windows/winipcfg To the project&lt;/p&gt;
    &lt;p&gt;After obtaining the device, perform a type cast to retrieve its &lt;code&gt;LUID&lt;/code&gt; (Locally Unique Identifier), then use the appropriate APIs to complete the configuration.&lt;/p&gt;
    &lt;code&gt;//luid
id := &amp;amp;windows.GUID{
0xdeadbabe,
0xcafe,
0xbeef,
[8]byte{0x01, 0x23, 0x45, 0x67, 0x89, 0xab, 0xcd, 0xef},
}

ifname := "Test"
dev, err := tun.CreateTUNWithRequestedGUID(ifname, id, 0)
if err != nil {
panic(err)
}
defer dev.Close()

nativeTunDevice := dev.(*tun.NativeTun)

link := winipcfg.LUID(nativeTunDevice.LUID())

ip, err := netip.ParsePrefix("100.64.1.1/24") //cgnat ip
if err != nil {
panic(err)
}
err = link.SetIPAddresses([]netip.Prefix{ip})
if err != nil {
panic(err)
}
&lt;/code&gt;
    &lt;p&gt;Once the program is running, you can verify that the IP was successfully set by running the &lt;code&gt;ipconfig&lt;/code&gt; command.
&lt;/p&gt;
    &lt;p&gt;You can also verify that the routing is successfully configured by running the command &lt;code&gt;route print -v&lt;/code&gt;.&lt;/p&gt;
    &lt;head rend="h3"&gt;Data Reading and Writing#&lt;/head&gt;
    &lt;p&gt;After setting up the IP and routing, you can use the API to &lt;code&gt;Read&lt;/code&gt; and &lt;code&gt;Write&lt;/code&gt; IP packets. For example, here’s how to read ICMP packets&lt;/p&gt;
    &lt;code&gt;//read packets
	for {
		n = 2048

		n, err = dev.Read(buf, 0)
		if err != nil {
			panic(err)
		}
		const ProtocolICMP = 1
		header, err := ipv4.ParseHeader(buf[:n])
		if err != nil {
			continue
		}
		//comparing ping
		if header.Protocol == ProtocolICMP {
			log.Println("source IP:", header.Src, " destination IP:", header.Dst)
			msg, _ := icmp.ParseMessage(ProtocolICMP, buf[header.Len:])
			log.Println(" icmp message echo:", msg.Type)
		}
	}
&lt;/code&gt;
    &lt;p&gt;After running the program, you can ping any IP address within the subnet, such as 100.64.1.2, or other IP addresses in the same network segment.&lt;/p&gt;
    &lt;p&gt;can be seen printed in the console:&lt;/p&gt;
    &lt;p&gt;Note: When deploying your application, make sure to include &lt;code&gt;wintun.dll&lt;/code&gt; in the same directory as the executable. This wintun.dll is essential for the program to function properly. If you’re distributing the software to others, ensure they have wintun.dll alongside the executable to avoid runtime errors.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45489581</guid><pubDate>Mon, 06 Oct 2025 09:49:33 +0000</pubDate></item><item><title>Modern messaging: Running your own XMPP server</title><link>https://www.codedge.de/posts/modern-messaging-running-your-own-xmpp-server</link><description>&lt;doc fingerprint="ddf8a45a3902bcc6"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Modern messaging: Running your own XMPP server&lt;/head&gt;
    &lt;p&gt;Since a years we know, or might suspect, our chats are listend on, our uploaded files are sold for advertising or what purpose ever and the chance our social messengers leak our private data is incredibly high. It is about time to work against this.&lt;/p&gt;
    &lt;p&gt;Since 3 years the European Commission works on a plan to automatically monitor all chat, email and messenger conversations.12 If this is going to pass, and I strongly hope it will not, the European Union is moving into a direction we know from states suppressing freedom of speech.&lt;/p&gt;
    &lt;p&gt;I went for setting up my own XMPP server, as this does not have any big resource requirements and still support clustering (for high-availabilty purposes), encryption via OMEMO, file sharing and has support for platforms and operating systems. Also the ecosystem with clients and multiple use cases evolved over the years to provide rock-solid software and solutions for multi-user chats or event audio and video calls.&lt;/p&gt;
    &lt;p&gt;Info&lt;/p&gt;
    &lt;p&gt;All steps and settings are bundled in a repository containing Ansible roles: https://codeberg.org/codedge/chat&lt;/p&gt;
    &lt;p&gt;All code snippets written below work in either Debian os Raspberry Pi OS.&lt;/p&gt;
    &lt;head rend="h2"&gt;Setting up your own XMPP server&lt;/head&gt;
    &lt;p&gt;The connection from your client to the XMPP server is encrypted and we need certificates for our server. First thing to do is setting up our domains and point it to the IP - both IPv4 and IPv6 is supported and we can specify both later in our configuration.&lt;/p&gt;
    &lt;p&gt;I assume the server is going to be run under &lt;code&gt;xmpp.example.com&lt;/code&gt; and you all the following domains have been set up.&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="3"&gt;
        &lt;cell role="head"&gt;Type&lt;/cell&gt;
        &lt;cell role="head"&gt;Name&lt;/cell&gt;
        &lt;cell role="head"&gt;Notes&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;A&lt;/cell&gt;
        &lt;cell&gt;xmpp.example.com&lt;/cell&gt;
        &lt;cell&gt;your main xmpp server address&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;A&lt;/cell&gt;
        &lt;cell&gt;conference.xmpp.example.com&lt;/cell&gt;
        &lt;cell&gt;needed for MUC (Multi User Chat)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;A&lt;/cell&gt;
        &lt;cell&gt;proxy.xmpp.example.com&lt;/cell&gt;
        &lt;cell&gt;needed for SOCKS5 proxy support&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;A&lt;/cell&gt;
        &lt;cell&gt;pubsub.xmpp.example.com&lt;/cell&gt;
        &lt;cell&gt;needed for publish/subscribe support&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;A&lt;/cell&gt;
        &lt;cell&gt;upload.xmpp.example.com&lt;/cell&gt;
        &lt;cell&gt;needed for file uploads&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;A&lt;/cell&gt;
        &lt;cell&gt;stun.xmpp.example.com&lt;/cell&gt;
        &lt;cell&gt;needed for audio&amp;amp;video calling&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;A&lt;/cell&gt;
        &lt;cell&gt;turn.xmpp.example.com&lt;/cell&gt;
        &lt;cell&gt;needed for audio&amp;amp;video calling&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Fill in the IPv6 addresses accordingly.&lt;/p&gt;
    &lt;p&gt;ejabberd is a robust server software, that is included in most Linux distributions.&lt;/p&gt;
    &lt;p&gt;Install from Process One repository&lt;lb/&gt;I discovered ProcessOne, the company behind ejabberd, also provides a Debian repository.&lt;/p&gt;
    &lt;table&gt;
      &lt;row/&gt;
    &lt;/table&gt;
    &lt;p&gt;Install from Github&lt;lb/&gt;To get the most recent one, I use the packages offered in their code repository. Installing version 25.07 just download the asset from the release:&lt;/p&gt;
    &lt;table&gt;
      &lt;row/&gt;
    &lt;/table&gt;
    &lt;p&gt;Make sure the fowolling ports are opened in your firewall, taken from ejabberd firewall settings.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;5222: Jabber/XMPP client connections, plain or STARTTLS&lt;/item&gt;
      &lt;item&gt;5223: Jabber client connections, using the old SSL method&lt;/item&gt;
      &lt;item&gt;5269: Jabber/XMPP incoming server connections&lt;/item&gt;
      &lt;item&gt;5280/5443: HTTP/HTTPS for Web Admin and many more&lt;/item&gt;
      &lt;item&gt;7777: SOCKS5 file transfer proxy&lt;/item&gt;
      &lt;item&gt;3478/5349: STUN+TURN/STUNS+TURNS service&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Port &lt;code&gt;1883&lt;/code&gt;, used for MQTT, is also mentioned in the ejabberd docs, but we do not use this in our setup. So this port stays closed.&lt;/p&gt;
    &lt;p&gt;Depending how you installed ejabberd the config file is either at &lt;code&gt;/etc/ejabberd/conf/ejabberd.yml&lt;/code&gt;
or &lt;code&gt;/opt/ejabberd/conf/ejabberd.yml&lt;/code&gt;.&lt;/p&gt;
    &lt;head rend="h3"&gt;General configuration&lt;/head&gt;
    &lt;p&gt;The configuration is a balance of 70:30 between having a privacy-focused setup for your users and meeting most of the suggestions of the XMPP complicance test. That means, settings that protect the provacy of the users are higher rated despite not passing the test.&lt;/p&gt;
    &lt;p&gt;Therefore notable privacy and security settings are:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;XMPP over HTTP is disabled (mod_bosh)&lt;/item&gt;
      &lt;item&gt;Discover then a user last accessed a server is disabled (mod_last)&lt;/item&gt;
      &lt;item&gt;Delete uploaded files on a regular base (see upload config)&lt;/item&gt;
      &lt;item&gt;Register account via a web page is disabled (mod_register_web)&lt;/item&gt;
      &lt;item&gt;In-band registration can be enabled, default off, captcha secured (mod_register, see registration config)&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Info&lt;/p&gt;
    &lt;p&gt;The configuration file is in YAML format. Keep an eye for indentation.&lt;/p&gt;
    &lt;p&gt;Let’s start digging into the configuration.&lt;/p&gt;
    &lt;p&gt;Set the domain of your server&lt;/p&gt;
    &lt;table&gt;
      &lt;row/&gt;
    &lt;/table&gt;
    &lt;p&gt;Set the database type&lt;lb/&gt;Instead of using the default &lt;code&gt;mnesia&lt;/code&gt; type, we opt for &lt;code&gt;sql&lt;/code&gt;, better said &lt;code&gt;sqlite&lt;/code&gt;.&lt;/p&gt;
    &lt;table&gt;
      &lt;row/&gt;
    &lt;/table&gt;
    &lt;p&gt;Generate DH params&lt;lb/&gt;Generate a fresh set of params for the DH key exchange. In your terminal run&lt;/p&gt;
    &lt;table&gt;
      &lt;row/&gt;
    &lt;/table&gt;
    &lt;p&gt;and link the new file in the ejabberd configuration.&lt;/p&gt;
    &lt;table&gt;
      &lt;row/&gt;
    &lt;/table&gt;
    &lt;p&gt;Ensure TLS for server-to-server connections&lt;lb/&gt;Use TLS for server-to-server (s2s) connections.&lt;/p&gt;
    &lt;table&gt;
      &lt;row/&gt;
    &lt;/table&gt;
    &lt;p&gt;The listners&lt;lb/&gt;The listeners aka &lt;code&gt;request_handlers&lt;/code&gt; inside the config especially for &lt;code&gt;/admin&lt;/code&gt;, &lt;code&gt;/captcha&lt;/code&gt;, &lt;code&gt;/upload&lt;/code&gt; and &lt;code&gt;/ws&lt;/code&gt; are important.
All of them listen on port &lt;code&gt;5443&lt;/code&gt;. Only one request handler is attached to port &lt;code&gt;5280&lt;/code&gt;, the &lt;code&gt;/.well-known/acme-challenge&lt;/code&gt;.&lt;/p&gt;
    &lt;table&gt;
      &lt;row/&gt;
    &lt;/table&gt;
    &lt;head rend="h3"&gt;ACLs &amp;amp; Access rules&lt;/head&gt;
    &lt;p&gt;For adminstration of ejabberd we need a user with admin rights and properly set up ACLs and access rules. There is a separat section for ACLs inside the config in which we set up an admin user name &lt;code&gt;root&lt;/code&gt;. The name of the user
is important for later, when we actually create this user.&lt;/p&gt;
    &lt;table&gt;
      &lt;row/&gt;
    &lt;/table&gt;
    &lt;p&gt;The &lt;code&gt;access_rules&lt;/code&gt; should already be set up, just to confirm that you have a correct entry for the &lt;code&gt;configure&lt;/code&gt; action.&lt;/p&gt;
    &lt;table&gt;
      &lt;row/&gt;
    &lt;/table&gt;
    &lt;p&gt;Now the new &lt;code&gt;root&lt;/code&gt; user needs to be create by running this command on the console.
Watch out to put in the correct domain.&lt;/p&gt;
    &lt;table&gt;
      &lt;row/&gt;
    &lt;/table&gt;
    &lt;p&gt;Another user can be registered with the same command.&lt;lb/&gt;We set &lt;code&gt;root&lt;/code&gt; as the admin user in the config previously. That is how ejabberd knows which user has admin permissions.&lt;/p&gt;
    &lt;head rend="h3"&gt;Enable file uploads&lt;/head&gt;
    &lt;p&gt;Enabling file uploads is done with &lt;code&gt;mod_http_upload&lt;/code&gt;.
First, create a folder where the uploads should be stored.&lt;/p&gt;
    &lt;table&gt;
      &lt;row/&gt;
    &lt;/table&gt;
    &lt;p&gt;Now update the ejabberd configuration like this:&lt;/p&gt;
    &lt;table&gt;
      &lt;row/&gt;
    &lt;/table&gt;
    &lt;p&gt;The allowed file upload size is defined in the &lt;code&gt;max_size&lt;/code&gt; param and is set to 10MB.&lt;/p&gt;
    &lt;p&gt;Make sure, to delete uploaded files in a reasonable amount of time via cronjob. This is an example of a cronjob, that deletes files that are older than 1 week.&lt;/p&gt;
    &lt;table&gt;
      &lt;row/&gt;
    &lt;/table&gt;
    &lt;head rend="h3"&gt;Registration&lt;/head&gt;
    &lt;p&gt;Registration in ejabberd is done via &lt;code&gt;mod_register&lt;/code&gt;
and can be enabled with these entries in the config file:&lt;/p&gt;
    &lt;table&gt;
      &lt;row/&gt;
    &lt;/table&gt;
    &lt;p&gt;If you want to enable registration for your server make sure you enable a captcha for it. Otherwise you will get a lot of spam and fake registrations.&lt;/p&gt;
    &lt;p&gt;ejabberd provides a working captcha script, that you can copy to your server and link in your configuration. You will need &lt;code&gt;imaggemagick&lt;/code&gt; and &lt;code&gt;gstools&lt;/code&gt; installed
on you system. In the &lt;code&gt;ejabberd.yml&lt;/code&gt; config file&lt;/p&gt;
    &lt;head rend="h2"&gt;Add TLS&lt;/head&gt;
    &lt;p&gt;ejabberd can provision TLS certificates on its own. No need to install certbot. To not expose ejabberd directly to the internet, &lt;code&gt;nginx&lt;/code&gt; is put in front of the XMPP server. Instead of using nginx, every other web server (caddy, &amp;amp;mldr;)
or proxy can be used as well.&lt;/p&gt;
    &lt;p&gt;Here is a sample config for nginx:&lt;/p&gt;
    &lt;table&gt;
      &lt;row/&gt;
    &lt;/table&gt;
    &lt;head rend="h3"&gt;Alternative connection methods&lt;/head&gt;
    &lt;p&gt;The nginx vhosts offers files, &lt;code&gt;host-meta&lt;/code&gt; and &lt;code&gt;host-meta.json&lt;/code&gt;, for indicating which other connection methods (BOSH, WS) your server offers. The details can be read in XEP-0156 extension.
Opposite to the examples in the XEP, there is no BOSH, but only a websocket connection our server offers. The BOSH part is removed from the config file.&lt;/p&gt;
    &lt;p&gt;host-meta&lt;/p&gt;
    &lt;table&gt;
      &lt;row/&gt;
    &lt;/table&gt;
    &lt;p&gt;host-meta.json&lt;/p&gt;
    &lt;table&gt;
      &lt;row/&gt;
    &lt;/table&gt;
    &lt;p&gt;Put that file in a folder your nginx serves. Have a look at the path and URL it is expected to be, see &lt;code&gt;.well-known&lt;/code&gt;.&lt;/p&gt;
    &lt;head rend="h2"&gt;Choose your client&lt;/head&gt;
    &lt;p&gt;Clients I can recommend are Profanity, an easy to use command-line client, and Monal for MacOS and iOS. A good overview of client can be found on the offical XMPP website.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Citizen-led initiative collecting information about Chat Controle https://fightchatcontrol.eu ↩︎&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Explanation by Patrick Breyer, former member of the European Parliament https://www.patrick-breyer.de/en/posts/chat-control/ ↩︎&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45490439</guid><pubDate>Mon, 06 Oct 2025 12:02:45 +0000</pubDate></item><item><title>AMD signs AI chip-supply deal with OpenAI, gives it option to take a 10% stake</title><link>https://www.reuters.com/business/amd-signs-ai-chip-supply-deal-with-openai-gives-it-option-take-10-stake-2025-10-06/</link><description>&lt;doc fingerprint="6196304d0924efba"&gt;
  &lt;main&gt;
    &lt;p&gt;SAN FRANCISCO, Oct 6 (Reuters) - AMD (AMD.O) will supply artificial intelligence chips to OpenAI in a multi-year deal that would bring in tens of billions of dollars in annual revenue and give the ChatGPT creator the option to buy up to roughly 10% of the chipmaker.&lt;/p&gt;
    &lt;p&gt;Shares of the chipmaker surged more than 34% on Monday, putting them on track for their biggest one-day gain in over nine years and adding roughly $80 billion to the company's market value.&lt;/p&gt;
    &lt;p&gt;Sign up here.&lt;/p&gt;
    &lt;p&gt;The deal, latest in a string of investment commitments, underscores OpenAI and the broader AI industry's voracious appetite for computing power as companies race toward developing AI technology that meets or exceeds human intelligence.&lt;/p&gt;
    &lt;p&gt;"We view this deal as certainly transformative, not just for AMD, but for the dynamics of the industry," AMD executive vice president Forrest Norrod told Reuters on Sunday.&lt;/p&gt;
    &lt;head rend="h2"&gt;VOTE OF CONFIDENCE&lt;/head&gt;
    &lt;p&gt;The agreement closely ties the startup at the center of the AI boom to AMD, one of the strongest rivals of Nvidia (NVDA.O), which recently agreed to make substantial investments in OpenAI.&lt;/p&gt;
    &lt;p&gt;Analysts said it was a major vote of confidence in AMD's AI chips and software but is unlikely to dent Nvidia's dominance, as the market leader continues to sell every AI chip it can make.&lt;/p&gt;
    &lt;p&gt;It covers the deployment of hundreds of thousands of AMD's AI chips, or graphics processing units (GPUs), equivalent to six gigawatts, over several years beginning in the second half of 2026. This is roughly equivalent to the energy needs of 5 million U.S. households, or about thrice the amount of power produced by the Hoover Dam.&lt;/p&gt;
    &lt;p&gt;AMD said OpenAI would build a one-gigawatt facility based on its forthcoming MI450 series of chips beginning next year, and that it would begin to recognize revenue then.&lt;/p&gt;
    &lt;p&gt;AMD executives expect the deal to net tens of billions of dollars in annual revenue. Because of the ripple effect of the agreement, AMD expects to receive more than $100 billion in new revenue over four years from OpenAI and other customers, they said.&lt;/p&gt;
    &lt;p&gt;The chipmaker is expected to report revenue of $32.78 billion this year, according to LSEG data. In contrast, analysts are expecting Nvidia to report revenue of $206.26 billion for the current fiscal year.&lt;/p&gt;
    &lt;p&gt;"AMD has really trailed Nvidia for quite some time. So I think it helps validate their technology," said Leah Bennett, chief investment strategist at Concurrent Asset Management.&lt;/p&gt;
    &lt;p&gt;Shares of Nvidia dipped more than 1%.&lt;/p&gt;
    &lt;p&gt;OpenAI CEO Sam Altman said the AMD deal will help his startup build enough AI infrastructure to meet its needs.&lt;/p&gt;
    &lt;p&gt;It was not immediately clear how OpenAI would fund the massive deal.&lt;/p&gt;
    &lt;p&gt;OpenAI, which is valued at $500 billion, generated around $4.3 billion in revenue in the first half of 2025 and burned through $2.5 billion in cash, according to media reports.&lt;/p&gt;
    &lt;head rend="h2"&gt;DEAL DETAILS&lt;/head&gt;
    &lt;p&gt;As part of the arrangement, AMD issued a warrant that gives OpenAI the ability to buy up to 160 million shares of AMD for 1 cent each over the course of the chip deal. The warrant vests in tranches based on milestones that the two companies have agreed on.&lt;/p&gt;
    &lt;p&gt;The first tranche will vest after the initial shipment of MI450 chips set for the second half of 2026. The remaining milestones include specific AMD stock price targets that escalate to $600 a share for the final installment of stock to unlock.&lt;/p&gt;
    &lt;p&gt;In September, Nvidia announced a deal to supply OpenAI with at least 10 gigawatts worth of its systems.&lt;/p&gt;
    &lt;p&gt;In contrast with the startup's deal with AMD where it will take a stake in the chipmaker, Nvidia will invest $100 billion in the ChatGPT parent under the terms of the agreement announced in September.&lt;/p&gt;
    &lt;p&gt;Taking a stake in AMD could give OpenAI "the power to potentially influence corporate strategy. With Nvidia, OpenAI is simply the client and not a part-owner," said Dan Coatsworth, head of markets at A.J. Bell.&lt;/p&gt;
    &lt;p&gt;OPENAI WANTS MORE GPUs&lt;/p&gt;
    &lt;p&gt;OpenAI has worked with AMD for years, providing inputs on the design of older generations of AI chips such as the MI300X.&lt;/p&gt;
    &lt;p&gt;The San Francisco-based AI company has been taking a number of steps to ensure it has the chips needed for its future needs.&lt;/p&gt;
    &lt;p&gt;Altman has floated expectations of reaching 250 gigawatts of compute in total by 2033, The Information has reported.&lt;/p&gt;
    &lt;p&gt;OpenAI's deal last month with Nvidia includes the deployment of one gigawatt of the chip giant's next-generation Vera Rubin processors in late 2026.&lt;/p&gt;
    &lt;p&gt;OpenAI is also in the process of developing its own silicon for AI use and has partnered with Broadcom (AVGO.O), Reuters reported last year.&lt;/p&gt;
    &lt;p&gt;The startup and its main backer, Microsoft (MSFT.O), announced last month that they had signed a non-binding agreement to restructure OpenAI into a for-profit entity.&lt;/p&gt;
    &lt;p&gt;A person familiar with the matter said the deal with AMD does not change any of OpenAI's ongoing compute plans, including that effort or its partnership with Microsoft.&lt;/p&gt;
    &lt;p&gt;Reporting by Max A. Cherney in San Francisco; Additional reporting by Deepa Seetharaman in San Francisco and Arsheeya Bajwa and Sukriti Gupta in Bengaluru; Editing by Muralikumar Anantharaman and Anil D'Silva&lt;/p&gt;
    &lt;p&gt;Our Standards: The Thomson Reuters Trust Principles.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45490549</guid><pubDate>Mon, 06 Oct 2025 12:17:59 +0000</pubDate></item><item><title>Show HN: Write It Down – Personal finance tracker</title><link>https://write-it-down.com</link><description>&lt;doc fingerprint="6bebd4fea1545df2"&gt;
  &lt;main&gt;
    &lt;p&gt;Start tracking in 1 minute&lt;/p&gt;
    &lt;p&gt;Follow these steps and you’re ready to go.&lt;/p&gt;
    &lt;p&gt;Set up your income, expenses, and accounts to match your financial life. Add custom descriptions so you always know exactly where your money is going.&lt;/p&gt;
    &lt;p&gt;Quickly write down your daily transactions. Everything is organized, easy to review, and simple to follow as your records grow.&lt;/p&gt;
    &lt;p&gt;Explore detailed pages that highlight your spending habits, income patterns, and overall financial summary giving you a clear big-picture view.&lt;/p&gt;
    &lt;p&gt;I downloaded the personal finance sheet. Thanks for making a great and accessible Google Sheet!&lt;/p&gt;
    &lt;p&gt;Clean layout, zero fluff. Setup took minutes and I finally feel on top of my spending.&lt;/p&gt;
    &lt;p&gt;I would first like to say thank you for your sheet. It is fantastic and the best one I’ve found.&lt;/p&gt;
    &lt;p&gt;I tried several personal finance trackers on Reddit and this one is the most nicely presented.&lt;/p&gt;
    &lt;p&gt;I downloaded the personal finance sheet. Thanks for making a great and accessible Google Sheet!&lt;/p&gt;
    &lt;p&gt;Clean layout, zero fluff. Setup took minutes and I finally feel on top of my spending.&lt;/p&gt;
    &lt;p&gt;I would first like to say thank you for your sheet. It is fantastic and the best one I’ve found.&lt;/p&gt;
    &lt;p&gt;I tried several personal finance trackers on Reddit and this one is the most nicely presented.&lt;/p&gt;
    &lt;p&gt;The overview is simple yet very powerful. Clear view without overwhelm.&lt;/p&gt;
    &lt;p&gt;Finally a tracker that’s both clear and practical. No fluff, just what I need.&lt;/p&gt;
    &lt;p&gt;Exactly what I needed practical but still readable. Perfect balance.&lt;/p&gt;
    &lt;p&gt;Loved the design and flexible sheets. It fits how I actually budget.&lt;/p&gt;
    &lt;p&gt;The overview is simple yet very powerful. Clear view without overwhelm.&lt;/p&gt;
    &lt;p&gt;Finally a tracker that’s both clear and practical. No fluff, just what I need.&lt;/p&gt;
    &lt;p&gt;Exactly what I needed practical but still readable. Perfect balance.&lt;/p&gt;
    &lt;p&gt;Loved the design and flexible sheets. It fits how I actually budget.&lt;/p&gt;
    &lt;p&gt;I downloaded the personal finance sheet. Thanks for making a great and accessible Google Sheet!&lt;/p&gt;
    &lt;p&gt;Clean layout, zero fluff. Setup took minutes and I finally feel on top of my spending.&lt;/p&gt;
    &lt;p&gt;I would first like to say thank you for your sheet. It is fantastic and the best one I’ve found.&lt;/p&gt;
    &lt;p&gt;I tried several personal finance trackers on Reddit and this one is the most nicely presented.&lt;/p&gt;
    &lt;p&gt;The overview is simple yet very powerful. Clear view without overwhelm.&lt;/p&gt;
    &lt;p&gt;Finally a tracker that’s both clear and practical. No fluff, just what I need.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45490578</guid><pubDate>Mon, 06 Oct 2025 12:23:40 +0000</pubDate></item><item><title>AI has found 50 bugs in cURL. "AI-native SASTs work well"</title><link>https://etn.se/72494</link><description>&lt;doc fingerprint="d050ef819c3496b6"&gt;
  &lt;main&gt;
    &lt;p&gt;AI-generated bug reports are usually trash. But when a security researcher used LLM-based scanners the right way, he found 50 real bugs in libcURL. Swedish tech journalist talks to Swedish cURL maintainer Daniel Stenberg and to Joshua Rogers, an australian hacker / security researcher that used AI SAST tools to find 50 real cURL bugs – and counting.&lt;/p&gt;
    &lt;p&gt;With the help of generative AI–based tools, a developer named Joshua Rogers has identified no fewer than 50 flaws in one of the world’s most widely used open-source projects, cURL.&lt;/p&gt;
    &lt;p&gt;The Swedish maintainer of cURL — who recently vented his frustration over worthless AI-generated bug reports — is, this time, astonished by AI’s capability.&lt;/p&gt;
    &lt;p&gt;Something big just happened in the cybersecurity world. Generative AI has now proven that it can independently discover new vulnerabilities in high-quality source code. New generative AI tools are suddenly digging up bugs that traditional static analysis tools have been overlooking for years.&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;Daniel&lt;p&gt;Stenberg&lt;/p&gt;&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;”I’m actually overwhelmed by the quality of some of these findings”, says Daniel Stenberg, maintainer of the file-transfer library cURL, in an interview with Swedish industrial electronics news publisher Elektroniktidningen ("Electronics Magazine”, etn.se).&lt;/p&gt;
    &lt;p&gt;In a well-known talk this August, Daniel Stenberg warned that he and his team were being flooded with AI-generated bug reports — wrong, confused, hallucinatory garbage created by generative AI.&lt;/p&gt;
    &lt;p&gt;Such “AI slop” has begun to waste valuable time for open-source maintainers, not only in cURL. The community is struggling with how to stem the tide.&lt;/p&gt;
    &lt;p&gt;Still, banning AI wasn’t the solution, Stenberg argued back then. He believed that AI might yet prove useful.&lt;/p&gt;
    &lt;p&gt;And he turned out to be right. In September, a batch of cURL bug reports arrived that has so far led to 50 fixes in the cURL library source code.&lt;/p&gt;
    &lt;p&gt;It marks a clean break from the previous wave of junk reports. There may have been the odd valid AI-based bug report before, but this time, Stenberg’s team implemented fifty fixes, all stemming from AI-generated reports. Once again the team is knee-deep in AI bug reports — but this time, they’re not slop. These are bugs that cURL’s regular analysis tools have been completely been overlooking.&lt;/p&gt;
    &lt;p&gt;“This is new,” says Daniel Stenberg. “It really looks like these new tools are finding problems that none of the old, established tools detect.”&lt;/p&gt;
    &lt;p&gt;“We regularly run clang-tidy, scan-build, CodeSonar and Coverity on the code, and whenever they find something, we fix it. So when all those tools report zero issues and someone suddenly finds hundreds, that’s pretty spectacular,” he adds — with some understatement.&lt;/p&gt;
    &lt;p&gt;All the bug reports came from one single developer: Joshua Rogers, an Australian with 15 years in cybersecurity, including at Opera Software in Poland. Today he works in security for a cryptocurrency company.&lt;/p&gt;
    &lt;p&gt;Over the past few months, he has been evaluating new AI-based tools and has started submitting bug reports to several open-source projects — including cURL, sudo, libwebm, Next.js, avahi, wpa_supplicant and squid.&lt;/p&gt;
    &lt;p&gt;None of the 50 bugs found in cURL were critical, but Rogers has discovered critical vulnerabilities elsewhere, including in source code from his former employer Opera Software. That bug was patched in early September.&lt;/p&gt;
    &lt;p&gt;Initially, Rogers hesitated to report bugs to cURL — familiar with Stenberg’s public stance on “AI slop”.&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;Joshua&lt;p&gt;Rogers&lt;/p&gt;&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;“Even though I could literally see the bugs in the code, I thought there was a 0.001% chance I was wrong — and I’d end up in the hall of shame,” Rogers says with a smile.&lt;/p&gt;
    &lt;p&gt;But he eventually gathered his courage and started sending reports.&lt;/p&gt;
    &lt;p&gt;After a while, Stenberg reached out curiously and asked where the reports were coming from.&lt;/p&gt;
    &lt;p&gt;”After I explained it to him, he asked me to send him the un-reviewed list of problems, and he'd triage them himself.”&lt;/p&gt;
    &lt;p&gt;“Triage” is a medical term — sorting patients by urgency. In software, it means prioritizing bug reports by severity.&lt;/p&gt;
    &lt;p&gt;Rogers says he’s received similarly astonished reactions from other open-source maintainers.&lt;/p&gt;
    &lt;p&gt;On his blog, he has shared insights into how he performs vulnerability analysis using LLM based SAST tools (Static Application Security Testing). His main message: these tools exist, and they’ve become incredibly good.&lt;/p&gt;
    &lt;p&gt;He also did a presentation on this Work at Kazhackstan 2025.&lt;/p&gt;
    &lt;p&gt;So how did generative-AI vulnerability analysis suddenly leap forward?&lt;/p&gt;
    &lt;p&gt;One breakthrough came last year, when Google’s security team discovered a previously unknown critical vulnerability in SQLite, using their AI-based tool called Big Sleep — a milestone event.&lt;/p&gt;
    &lt;p&gt;Since then, commercial tools are appearing. The one Rogers currently rates highest is ZeroPath.&lt;/p&gt;
    &lt;p&gt;Another key factor, though, is Rogers himself. He uses the tools analyze the code from multiple angles and then carefully reviews the results — both manually and with the help of other AI models.&lt;/p&gt;
    &lt;p&gt;“A good tool in the hands of a competent person is a powerful combination,” says Daniel Stenberg.&lt;/p&gt;
    &lt;p&gt;What seems to make generative AI–based tools strong is their ability to understand both natural languages and programming languages. They read comments, they know the protocols, and they can spot when intent, logic and implementation don’t align.&lt;/p&gt;
    &lt;p&gt;Traditional static-analysis tools, by contrast, take a narrow syntactic view — scanning for known classes of errors.&lt;/p&gt;
    &lt;p&gt;Generative AI is now able to uncover entirely new classes of bugs — and since they didn't use to be detectable, dozens have accumulated over the years, in old project code. One of Rogers’ reports concerned Kerberos code so old that nobody was even using it anymore.&lt;/p&gt;
    &lt;p&gt;The bug had an accompanying bug that was severe enough that it would have crashed the code if executed — which, evidently, never happened. So Stenberg’s “fix” was simply to retire the code altogether from support. &lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45490703</guid><pubDate>Mon, 06 Oct 2025 12:37:52 +0000</pubDate></item><item><title>Show HN: Kent Dybvig's Scheme Machine in 400 Lines of C (Heap-Memory Model)</title><link>https://gist.github.com/swatson555/8cc36d8d022d7e5cc44a5edb2c4f7d0b</link><description>&lt;doc fingerprint="c5d093b93a485002"&gt;
  &lt;main&gt;
    &lt;p&gt; Created &lt;relative-time&gt;February 17, 2023 12:42&lt;/relative-time&gt;&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;tool-tip&gt;Save swatson555/8cc36d8d022d7e5cc44a5edb2c4f7d0b to your computer and use it in GitHub Desktop.&lt;/tool-tip&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt; Heap based scheme machine. &lt;/p&gt;
    &lt;p&gt; This file contains hidden or bidirectional Unicode text that may be interpreted or compiled differently than what appears below. To review, open the file in an editor that reveals hidden Unicode characters. Learn more about bidirectional Unicode characters &lt;/p&gt;
    &lt;table&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;/* Heap based virtual machine described in section 3.4 of Three Implementation Models for Scheme, Dybvig&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;*/&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;#include &amp;lt;stdlib.h&amp;gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;#include &amp;lt;string.h&amp;gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;#include &amp;lt;ctype.h&amp;gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;#include &amp;lt;assert.h&amp;gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;char token[128][32];&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;int lexer(char* input) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;int ii = 0; // input index&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;int ti = 0; // token index&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;while(input[ii] != '\0')&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;switch(input[ii]) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;// Ignore whitespace and newlines&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;case ' ':&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;case '\n':&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;++ii;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;break;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;// Turn a left parenthesis into a token.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;case '(':&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;token[ti][0] = '(';&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;token[ti][1] = '\0';&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;++ii;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;++ti;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;break;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;// Turn a right parenthesis into a token.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;case ')':&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;token[ti][0] = ')';&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;token[ti][1] = '\0';&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;++ii;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;++ti;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;break;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;// Turn an apostrophe into a token.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;case '\'':&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;token[ti][0] = '\'';&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;token[ti][1] = '\0';&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;++ii;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;++ti;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;break;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;// Anything else is a symbol&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;default:&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;for(int i = 0;; ++i) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;if(input[ii] != ' ' &amp;amp;&amp;amp;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;input[ii] != ')' &amp;amp;&amp;amp;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;input[ii] != '(' &amp;amp;&amp;amp;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;input[ii] != '\n' &amp;amp;&amp;amp;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;input[ii] != '\0') {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;token[ti][i] = input[ii++];&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;token[ti][i] = '\0';&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;break;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;++ti;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;break;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return ti;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;int curtok;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;char* nexttok() {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return token[curtok++];&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;char* peektok() {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return token[curtok];&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;typedef struct Pair {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* cdr;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;} Pair;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;typedef struct Text {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;char* car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;struct Text* cdr;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;} Text;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Pair text[1280];&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Pair* textptr;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;int istext(void* x) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return x &amp;gt;= (void*)&amp;amp;text &amp;amp;&amp;amp;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;x &amp;lt; (void*)&amp;amp;text[1280];&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Pair* cons(void* x, void* y) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;assert(istext(textptr));&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;textptr-&amp;gt;car = x;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;textptr-&amp;gt;cdr = y;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return textptr++;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* read(char* ln);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* read_exp();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* read_list();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* read(char* ln) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;// Initialize the lexer and list memory.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;curtok = 0;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;textptr = text;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;lexer(ln);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return read_exp();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* read_exp() {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;char* tok = nexttok();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;if (tok[0] == '(' &amp;amp;&amp;amp; peektok()[0] == ')') {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;nexttok();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return NULL;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else if (tok[0] == '\'')&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return cons("quote", cons(read_exp(), NULL));&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else if (tok[0] == '(')&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return read_list();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return tok;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* read_list() {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;char* tok = peektok();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;if(tok[0] == ')') {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;nexttok();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return NULL;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else if(tok[0] == '.') {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;nexttok();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;tok = read_exp();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;nexttok();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return tok;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* fst = read_exp();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* snd = read_list();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return cons(fst, snd);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void print(void* exp);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void print_exp(void* exp);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void print_list(Pair* list);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void print_cons(Pair* pair);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void print(void* exp) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;print_exp(exp);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;printf("\n");&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void print_exp(void* exp) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;if (istext(exp)) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Pair* pair = exp;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;if(!istext(pair-&amp;gt;cdr) &amp;amp;&amp;amp; pair-&amp;gt;cdr != NULL) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;printf("(");&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;print_cons(exp);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;printf(")");&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;printf("(");&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;print_list(exp);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;printf("%s", exp ? (char*)exp : "()");&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void print_list(Pair* list) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;if (list-&amp;gt;cdr == NULL) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;print_exp(list-&amp;gt;car);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;printf(")");&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;if(!istext(list-&amp;gt;cdr) &amp;amp;&amp;amp; list-&amp;gt;cdr != NULL) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;print_cons(list);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;printf(")");&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;print_exp(list-&amp;gt;car);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;printf(" ");&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;print_list(list-&amp;gt;cdr);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void print_cons(Pair* pair) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;print_exp(pair-&amp;gt;car);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;printf(" . ");&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;print_exp(pair-&amp;gt;cdr);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Pair* compile(void* exp, void* next) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;if (istext(exp)) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Text* p = exp;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;if (strcmp(p-&amp;gt;car, "quote") == 0) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return cons("constant", cons(p-&amp;gt;cdr-&amp;gt;car, cons(next, NULL)));&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else if (strcmp(p-&amp;gt;car, "lambda") == 0) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return cons("close", cons(p-&amp;gt;cdr-&amp;gt;car, cons(compile(p-&amp;gt;cdr-&amp;gt;cdr-&amp;gt;car, cons("return", NULL)), cons(next, NULL))));&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else if (strcmp(p-&amp;gt;car, "if") == 0) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return compile(p-&amp;gt;cdr-&amp;gt;car, cons("test", cons(compile(p-&amp;gt;cdr-&amp;gt;cdr-&amp;gt;car, next),&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;cons(compile(p-&amp;gt;cdr-&amp;gt;cdr-&amp;gt;cdr-&amp;gt;car, next),&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;NULL))));&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else if (strcmp(p-&amp;gt;car, "set!") == 0) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return compile(p-&amp;gt;cdr-&amp;gt;cdr-&amp;gt;car, cons("assign", cons(p-&amp;gt;cdr-&amp;gt;car, cons(next, NULL))));&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else if (strcmp(p-&amp;gt;car, "call/cc") == 0) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* c = cons("conti", cons(cons("argument", cons(compile(p-&amp;gt;cdr-&amp;gt;car, cons("apply", NULL)), NULL)), NULL));&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Text* n = next;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;if (strcmp(n-&amp;gt;car, "return") == 0)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return c;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return cons("frame", cons(next, cons(c, NULL)));&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Pair* args = (Pair*)p-&amp;gt;cdr;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* c = compile(p-&amp;gt;car, cons("apply", NULL));&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;while (args) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;c = compile(args-&amp;gt;car, cons("argument", cons(c, NULL)));&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;args = args-&amp;gt;cdr;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Text* n = next;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;if (strcmp(n-&amp;gt;car, "return") == 0)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return c;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return cons("frame", cons(next, cons(c, NULL)));&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else if(isdigit(*((char*)exp))) { // a number&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return cons("constant", cons(exp, cons(next, NULL)));&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else if(strcmp(exp, "#t") == 0) { // a boolean&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return cons("constant", cons(exp, cons(next, NULL)));&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else if(strcmp(exp, "#f") == 0) { // a boolean&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return cons("constant", cons(exp, cons(next, NULL)));&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else { // a symbol&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return cons("refer", cons(exp, cons(next, NULL)));&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* get(void* env, char* var) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Pair* e = env;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;while(env) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Pair* cur = e-&amp;gt;car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Pair* vars = cur-&amp;gt;car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Pair* vals = cur-&amp;gt;cdr;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;while (vars &amp;amp;&amp;amp; vals) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;if (strcmp(vars-&amp;gt;car, var) == 0)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return vals-&amp;gt;car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;vars = vars-&amp;gt;cdr;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;vals = vals-&amp;gt;cdr;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;e = e-&amp;gt;cdr;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;fprintf(stderr, "No definition in environment for %s.\n", var);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;assert(0);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void set(void* env, char* var, char* val) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* ref = get(env, var);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;ref = val;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* extend(void* env, void* vars, void* vals) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return cons(cons(vars, vals), env);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* callframe(void* next, void* env, void* rib, void* stack) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return cons(next, cons(env, cons(rib, cons(stack, NULL))));&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* closure(void* body, void* env, void* vars) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return cons(body, cons(env, cons(vars, NULL)));&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* continuation(void* stack) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return closure(cons("nuate", cons(stack, cons("v", NULL))), NULL, cons("v", NULL));&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* accum;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* next;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* env;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* rib;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* stack;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void virtmach() {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Text* n = next;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;if (strcmp(n-&amp;gt;car, "halt") == 0) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else if (strcmp(n-&amp;gt;car, "refer") == 0) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;accum = get(env, n-&amp;gt;cdr-&amp;gt;car);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;next = n-&amp;gt;cdr-&amp;gt;cdr-&amp;gt;car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return virtmach();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else if (strcmp(n-&amp;gt;car, "constant") == 0) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;accum = n-&amp;gt;cdr-&amp;gt;car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;next = n-&amp;gt;cdr-&amp;gt;cdr-&amp;gt;car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return virtmach();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else if (strcmp(n-&amp;gt;car, "close") == 0) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* vars = n-&amp;gt;cdr-&amp;gt;car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* body = n-&amp;gt;cdr-&amp;gt;cdr-&amp;gt;car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* x = n-&amp;gt;cdr-&amp;gt;cdr-&amp;gt;cdr-&amp;gt;car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;accum = closure(body, env, vars);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;next = x;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return virtmach();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else if (strcmp(n-&amp;gt;car, "test") == 0) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* consequent = n-&amp;gt;cdr-&amp;gt;car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* alternate = n-&amp;gt;cdr-&amp;gt;cdr-&amp;gt;car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;next = strcmp(accum, "#f") == 0 ? alternate : consequent;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return virtmach();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else if (strcmp(n-&amp;gt;car, "assign") == 0) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;set(env, n-&amp;gt;cdr-&amp;gt;car, accum);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;next = n-&amp;gt;cdr-&amp;gt;cdr-&amp;gt;car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return virtmach();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else if (strcmp(n-&amp;gt;car, "conti") == 0) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;accum = continuation(stack);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;next = n-&amp;gt;cdr-&amp;gt;car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return virtmach();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else if (strcmp(n-&amp;gt;car, "nuate") == 0) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;stack = n-&amp;gt;cdr-&amp;gt;car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;accum = get(env, n-&amp;gt;cdr-&amp;gt;cdr-&amp;gt;car);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;next = cons("return", NULL);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return virtmach();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else if (strcmp(n-&amp;gt;car, "frame") == 0) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;stack = callframe(n-&amp;gt;cdr-&amp;gt;car, env, rib, stack);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;rib = NULL;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;next = n-&amp;gt;cdr-&amp;gt;cdr-&amp;gt;car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return virtmach();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else if (strcmp(n-&amp;gt;car, "argument") == 0) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;rib = cons(accum, rib);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;next = n-&amp;gt;cdr-&amp;gt;car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return virtmach();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else if (strcmp(n-&amp;gt;car, "apply") == 0) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Text* a = accum;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* body = a-&amp;gt;car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* clos = a-&amp;gt;cdr-&amp;gt;car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;void* vars = a-&amp;gt;cdr-&amp;gt;cdr-&amp;gt;car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;env = extend(env, vars, rib);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;rib = NULL;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;next = body;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return virtmach();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else if (strcmp(n-&amp;gt;car, "return") == 0) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Text* s = stack;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;next = s-&amp;gt;car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;env = s-&amp;gt;cdr-&amp;gt;car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;rib = s-&amp;gt;cdr-&amp;gt;cdr-&amp;gt;car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;stack = s-&amp;gt;cdr-&amp;gt;cdr-&amp;gt;cdr-&amp;gt;car;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return virtmach();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;else {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;fprintf(stderr, "Unhandled operation.\n");&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;assert(0);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;int main(int argc, char** argv) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;// note! repl implies there's a top-level but there isn't...&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;printf("Lisp REPL\n\n");&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;printf("&amp;gt;&amp;gt; ");&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;char buffer[256];&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;while (fgets(buffer, 256, stdin)) {&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;next = compile(read(buffer), cons("halt", NULL));&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;virtmach();&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;print(accum);&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;printf("&amp;gt;&amp;gt; ");&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;return 0;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;}&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt; Sign up for free to join this conversation on GitHub. Already have an account? Sign in to comment &lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45491609</guid><pubDate>Mon, 06 Oct 2025 14:06:29 +0000</pubDate></item><item><title>Mise: Monorepo Tasks</title><link>https://github.com/jdx/mise/discussions/6564</link><description>&lt;doc fingerprint="3c542c738fd7e4ba"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Introducing Monorepo Tasks #6564&lt;/head&gt;
    &lt;p&gt;-&lt;/p&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;p&gt;We're excited to announce Monorepo Tasks, a powerful new feature that brings first-class monorepo support to mise tasks! 🚀&lt;/p&gt;
          &lt;head&gt;What is it?&lt;/head&gt;
          &lt;p&gt;Monorepo Tasks allows you to manage tasks across multiple projects in a single repository, with each project maintaining its own tools, environment variables, and tasks. Think of it as bringing the power of tools like Bazel or Turborepo to mise's task system, but with mise's signature simplicity.&lt;/p&gt;
          &lt;head&gt;Key Features&lt;/head&gt;
          &lt;head&gt;🎯 Unified Task Namespace&lt;/head&gt;
          &lt;p&gt;All tasks across your monorepo are automatically discovered and prefixed with their location:&lt;/p&gt;
          &lt;code&gt;mise //projects/frontend:build
mise //projects/backend:test
mise //services/api:deploy&lt;/code&gt;
          &lt;head&gt;🌳 Smart Tool &amp;amp; Environment Inheritance&lt;/head&gt;
          &lt;p&gt;Define common tools at the root, override them where needed:&lt;/p&gt;
          &lt;code&gt;# Root mise.toml
[tools]
node = "20"      # Inherited everywhere
python = "3.12"

# projects/legacy-app/mise.toml
[tools]
node = "14"      # Override just for this project
# python still inherited!&lt;/code&gt;
          &lt;head&gt;🎭 Powerful Wildcard Patterns&lt;/head&gt;
          &lt;p&gt;Run tasks across multiple projects with ease:&lt;/p&gt;
          &lt;code&gt;# Run tests in ALL projects
mise //...:test

# Run all build tasks under services/
mise //services/...:build

# Run ALL tasks in frontend (wildcards need quotes)
mise '//projects/frontend:*'

# Run all test:* tasks everywhere
mise '//...:test:*'&lt;/code&gt;
          &lt;head&gt;✨ Consistent Execution Anywhere&lt;/head&gt;
          &lt;p&gt;Run tasks from anywhere in the monorepo - they always execute with the correct context, tools, and environment from their config_root.&lt;/p&gt;
          &lt;head&gt;🔒 Automatic Trust Propagation&lt;/head&gt;
          &lt;p&gt;Trust your monorepo root once, and all descendant configs are automatically trusted.&lt;/p&gt;
          &lt;head&gt;Quick Start&lt;/head&gt;
          &lt;p&gt;1. Enable the feature in your root &lt;/p&gt;
          &lt;code&gt;experimental_monorepo_root = true

[tools]
node = "20"
python = "3.12"&lt;/code&gt;
          &lt;p&gt;2. Set the experimental flag:&lt;/p&gt;
          &lt;code&gt;export MISE_EXPERIMENTAL=1&lt;/code&gt;
          &lt;p&gt;3. Add tasks to your projects:&lt;/p&gt;
          &lt;code&gt;# projects/frontend/mise.toml
[tasks.build]
run = "npm run build"

[tasks.test]
run = "npm test"&lt;/code&gt;
          &lt;p&gt;4. Run tasks from anywhere:&lt;/p&gt;
          &lt;code&gt;mise //projects/frontend:build
mise //...:test  # Run tests in all projects!&lt;/code&gt;
          &lt;head&gt;Example Monorepo Structure&lt;/head&gt;
          &lt;p&gt;Run all service builds: &lt;/p&gt;
          &lt;head&gt;Why This Matters&lt;/head&gt;
          &lt;p&gt;Managing monorepos is hard. Coordinating tools, tasks, and environments across dozens of projects is even harder. With Monorepo Tasks, you get:&lt;/p&gt;
          &lt;head&gt;How Does This Compare to Other Tools?&lt;/head&gt;
          &lt;p&gt;The monorepo ecosystem is rich with excellent tools, each with different strengths. Here's how mise's Monorepo Tasks compares:&lt;/p&gt;
          &lt;head&gt;Simple Task Runners&lt;/head&gt;
          &lt;p&gt;Taskfile and Just are fantastic for single-project task automation. They're lightweight and easy to set up, but they weren't designed with monorepos in mind. While you can have multiple Taskfiles/Justfiles in a repo, they don't provide unified task discovery, cross-project wildcards, or automatic tool/environment inheritance across projects.&lt;/p&gt;
          &lt;p&gt;mise's advantage: Automatic task discovery across the entire monorepo with a unified namespace and powerful wildcard patterns.&lt;/p&gt;
          &lt;head&gt;JavaScript-Focused Tools&lt;/head&gt;
          &lt;p&gt;Nx, Turborepo, and Lerna are powerful tools specifically designed for JavaScript/TypeScript monorepos.&lt;/p&gt;
          &lt;p&gt;mise's advantage: Language-agnostic support. While these tools excel in JS/TS ecosystems, mise works equally well with Rust, Go, Python, Ruby, or any mix of languages. You also get unified tool version management (not just tasks) and environment variables across your entire stack.&lt;/p&gt;
          &lt;head&gt;Large-Scale Build Systems&lt;/head&gt;
          &lt;p&gt;Bazel (Google) and Buck2 (Meta) are industrial-strength build systems designed for massive, multi-language monorepos at companies with thousands of engineers.&lt;/p&gt;
          &lt;p&gt;Both are extremely powerful but come with significant complexity:&lt;/p&gt;
          &lt;p&gt;mise's advantage: Simplicity through non-hermetic builds. mise doesn't try to control your entire build environment in isolation - instead, it manages tools and tasks in a flexible, practical way. This "non-hermetic" approach means you can use mise without restructuring your entire codebase or learning a new language. You get powerful monorepo task management with simple TOML configuration - enough power for most teams without the enterprise-level complexity that hermetic builds require.&lt;/p&gt;
          &lt;head&gt;Other Notable Tools&lt;/head&gt;
          &lt;p&gt;Rush (Microsoft) offers strict dependency management and build orchestration for JavaScript monorepos, with a focus on safety and convention adherence.&lt;/p&gt;
          &lt;p&gt;Moon is a newer Rust-based build system that aims to be developer-friendly while supporting multiple languages.&lt;/p&gt;
          &lt;head&gt;The mise Sweet Spot&lt;/head&gt;
          &lt;p&gt;mise's Monorepo Tasks aims to hit the sweet spot between simplicity and power:&lt;/p&gt;
          &lt;p&gt;When to choose mise:&lt;/p&gt;
          &lt;p&gt;When to consider alternatives:&lt;/p&gt;
          &lt;p&gt;The best tool is the one that fits your team's needs. mise's Monorepo Tasks is designed for teams who want powerful monorepo management without the complexity overhead, especially when working across multiple languages.&lt;/p&gt;
          &lt;head&gt;Try It Out!&lt;/head&gt;
          &lt;p&gt;This feature is experimental, which means:&lt;/p&gt;
          &lt;p&gt;Read the full documentation: Monorepo Tasks Guide&lt;/p&gt;
          &lt;head&gt;We Want Your Feedback!&lt;/head&gt;
          &lt;p&gt;Please try it out and let us know:&lt;/p&gt;
          &lt;p&gt;Share your experience in the comments below! 👇&lt;/p&gt;
          &lt;p&gt;Special shoutout to the mise community for the feedback and ideas that led to this feature. Happy building! 🛠️&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Beta Was this translation helpful? Give feedback.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45491621</guid><pubDate>Mon, 06 Oct 2025 14:07:46 +0000</pubDate></item><item><title>Microsoft is about to launch free Xbox Cloud Gaming with ads</title><link>https://www.theverge.com/report/791213/xbox-cloud-gaming-free-ad-supported-version</link><description>&lt;doc fingerprint="2b3b0955c19a46c5"&gt;
  &lt;main&gt;
    &lt;p&gt;Microsoft is getting ready to announce an ad-supported version of Xbox Cloud Gaming. Sources familiar with Microsoft’s plans tell The Verge that the software maker has started testing ad-supported games streaming internally, allowing employees to play select titles free without a Game Pass subscription.&lt;/p&gt;
    &lt;head rend="h1"&gt;Microsoft is about to launch free Xbox Cloud Gaming with ads&lt;/head&gt;
    &lt;p&gt;Microsoft employees can now access an ad-supported version of Xbox Cloud Gaming ahead of a public test.&lt;/p&gt;
    &lt;p&gt;Microsoft employees can now access an ad-supported version of Xbox Cloud Gaming ahead of a public test.&lt;/p&gt;
    &lt;p&gt;I understand that the free ad-supported version of Xbox Cloud Gaming will include the ability to stream some games you own, as well as eligible Free Play Days titles, which let Xbox players try games over a weekend. You’ll also be able to stream Xbox Retro Classics games.&lt;/p&gt;
    &lt;p&gt;Sources tell me the internal testing includes around two minutes of preroll ads before a game is available to stream for free through Xbox Cloud Gaming. Microsoft is also currently testing a limit of one hour for sessions, with up to five hours free a month. These limits may well change when the service is officially launched.&lt;/p&gt;
    &lt;p&gt;The ad-supported Xbox Cloud Gaming version will be available on PC, Xbox consoles, handheld devices, and via the web. Microsoft is planning to test free streaming through a public beta test soon, before launching it fully in the coming months.&lt;/p&gt;
    &lt;p&gt;Microsoft’s free streaming test comes in the same week that the company expanded Xbox Cloud Gaming access to its Xbox Game Pass Premium and Essential plans for the first time, as part of a revamp to Game Pass and a 50 percent price hike for Ultimate subscribers.&lt;/p&gt;
    &lt;p&gt;Xbox Cloud Gaming also came out of beta this week. Game Pass Ultimate members can now stream select games in 1440p resolution, with up to 30Mbps bitrates. Ultimate subscribers also get up to 20Mbps bitrates for any other games streamed at 1080p. Premium and Essential subscribers are limited to 1080p resolution and a 12Mbps bitrate.&lt;/p&gt;
    &lt;p&gt;An ad-supported version of Xbox Cloud Gaming has been long in the works. Microsoft Gaming CFO Tim Stuart first dropped hints about a free version of Xbox Cloud Gaming nearly two years ago. Microsoft also made it clear recently that it wants to make Xbox Cloud Gaming more accessible.&lt;/p&gt;
    &lt;p&gt;“I think for us, it really opens up the opportunity to make it much more affordable, and make it more accessible to players. Whether that’s going into new regions, or new ways to actually access the [Xbox] cloud,” Jason Ronald, Microsoft’s VP of next generation, said on an Xbox podcast in August.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45492086</guid><pubDate>Mon, 06 Oct 2025 14:53:46 +0000</pubDate></item><item><title>Apple's Unlawful Evil</title><link>https://pluralistic.net/2025/10/06/rogue-capitalism/#orphaned-syrian-refugees-need-not-apply</link><description>&lt;doc fingerprint="fd4219190ba4915d"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Today's links&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Apple's unlawful evil: Everyone's a rogue capitalist now.&lt;/item&gt;
      &lt;item&gt;Hey look at this: Delights to delectate.&lt;/item&gt;
      &lt;item&gt;Object permanence: Why copyright wars matter; Car accidents aren't accidents; Ayn Rand, firefighter; Most sound recordings are unavailable; Kill the Dead; XKCD map; Lockdown with kindergartners; Facebook's living will; Ad tech bubble; The Internet is for end-users; Squeeze Me.&lt;/item&gt;
      &lt;item&gt;Upcoming appearances: Where to find me.&lt;/item&gt;
      &lt;item&gt;Recent appearances: Where I've been.&lt;/item&gt;
      &lt;item&gt;Latest books: You keep readin' em, I'll keep writin' 'em.&lt;/item&gt;
      &lt;item&gt;Upcoming books: Like I said, I'll keep writin' 'em.&lt;/item&gt;
      &lt;item&gt;Colophon: All the rest.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h1"&gt;Apple's unlawful evil (permalink)&lt;/head&gt;
    &lt;p&gt;Apple has removed ICEBlock, a totally legal app that helps people track the movements of the masked snatch-squads who illegally terrorize brown people in America's cities, capitulating to a warrantless demand from Trump's DoJ boss Pam Bondi:&lt;/p&gt;
    &lt;p&gt;https://www.404media.co/iceblock-owner-after-apple-removes-app-we-are-determined-to-fight-this/&lt;/p&gt;
    &lt;p&gt;In killing ICEBlock, Apple insists that it is only complying with lawful orders, which is patently untrue. Pam Bondi has no authority to order the censorship of this legal speech tool, which is likely why she didn't seek a court order and instead merely rage-tweeted about it. This was sufficient to get Apple CEO Tim Cook, the billionaire who moved Apple's manufacturing to Chinese sweatshops where working conditions are so brutal that they require suicide nets, to cave in.&lt;/p&gt;
    &lt;p&gt;Apple does not permit its iPhone customers to install software unless it is delivered via their App Store. They claim they do so in order to protect their customers from their customers' own bad choices about which apps to install. But time and again, Apple has shown that they exercise this control over their users to pursue their own ends, blocking:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;A dictionary (because it contained swear words);&lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;A game that simulated working in an Apple sweatshop;&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;An informative app that cataloged civilian casualties of US drone strikes;&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;The Tumblr app because some Tumblr blogs contained adult content; and&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Working VPN apps for the entire nation of China.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Apple uses its app store control to extract 30 cents out of every dollar spent by its customers in the apps they use. That's a 30%, economy-wide, worldwide tax on news outlets and podcasts that collects subscriptions through apps, Patreon performers whose subscribers pay by app and games publishers who sell via the app store.&lt;/p&gt;
    &lt;p&gt;Apple also uses its app store control to block rival browser engines (every browser on iOS is just a reskinned version of Safari). Apple's own browser engine, Webkit, is riddled with longstanding, grave security vulnerabilities, and there is no way to distribute more secure browsers on iOS:&lt;/p&gt;
    &lt;p&gt;https://open-web-advocacy.org/blog/apples-browser-engine-ban-persists-even-under-the-dma/&lt;/p&gt;
    &lt;p&gt;Apple claims that it must be able to override its customers' choices about which software they'd like to run, lest those customers make foolish software choices and compromise their own security. Bruce Schneier calls this "feudal security," in which a digital warlord offers you sanctuary from the internet's roving bandits within the mercenary-studded walls of his impenetrable fortress. The problem is that when the warlord decides to attack you, the fortress becomes a prison, and you are rendered helpless:&lt;/p&gt;
    &lt;p&gt;https://pluralistic.net/2023/02/05/battery-vampire/#drained&lt;/p&gt;
    &lt;p&gt;Normally, the safety problems of feudal security are digital, but with ICEBlock, they are very, very physical. ICE is kidnapping our neighbors and sending them to offshore and onshore gulags. Of the 1,600 people illegally detained in Alligator Auschwitz, two thirds cannot be located. They have disappeared:&lt;/p&gt;
    &lt;p&gt;https://www.democracynow.org/2025/9/25/alligator_alcatraz&lt;/p&gt;
    &lt;p&gt;In removing ICEBlock, Apple has deprived its customers of a vital tool for evading these kidnapping, murdering, masked thugs.&lt;/p&gt;
    &lt;p&gt;ICE moved from targeting "the worst of the worst" to targeting "people here illegally" to "people who look foreign" to "people who live in cities":&lt;/p&gt;
    &lt;p&gt;https://federate.social/@mattblaze/115323465203575305&lt;/p&gt;
    &lt;p&gt;You know who would have been at the top of that list? Steve Jobs, who died 14 years ago today:&lt;/p&gt;
    &lt;p&gt;https://www.macrumors.com/2025/10/05/remembering-steve/&lt;/p&gt;
    &lt;p&gt;Steve Jobs was "the anchor baby of an activist Arab muslim who came to the US on a student visa and had a child out of wedlock":&lt;/p&gt;
    &lt;p&gt;https://www.anildash.com/2025/09/09/how-tim-cook-sold-out-steve-jobs/&lt;/p&gt;
    &lt;p&gt;He is exactly the sort of person that Trump wants to deport.&lt;/p&gt;
    &lt;p&gt;Jobs isn't the only foreigner whose company is helping Trump round up and disappear foreigners. Google – co-founded by Soviet refugee Sergey Brin – has also killed ICEBlock. Google has also announced that they will nonconsensually update every Android device in the world to prevent their owners from installing software that Google hasn't approved:&lt;/p&gt;
    &lt;p&gt;https://pluralistic.net/2025/09/01/fulu/#i-am-altering-the-deal&lt;/p&gt;
    &lt;p&gt;When China hacked Gmail in order to target dissidents, Sergey Brin unilaterally pulled the company out of China, gripped by visceral horror of his platform being used for totalitarian oppression. Today, Brin is taking away his customers' best tool for evading ICE kidnappers on behalf of a self-declared "dictator." Hey, Sergey, one Soviet refugee's son to another, that's some pretty Vichy bullshit, landsman.&lt;/p&gt;
    &lt;p&gt;Under Trump's policies, neither Apple nor Google would exist today. These companies both claim that they have to "obey the law" but this isn't following a lawful order – it's going above and beyond the law to help a dictator kidnap their customers.&lt;/p&gt;
    &lt;p&gt;When China turned on Google's users, Google left the country. When the European Union ordered Apple to open up to third party app stores, Apple threatened to leave Europe:&lt;/p&gt;
    &lt;p&gt;https://pluralistic.net/2025/09/26/empty-threats/#500-million-affluent-consumers&lt;/p&gt;
    &lt;p&gt;But when Pam Bondi ordered Apple and Google to help her round up their own customers, Brin and Cook didn't even ask for a court order.&lt;/p&gt;
    &lt;p&gt;You could not ask for a better example of the failure of feudal security. Nor could you ask for a better rebuttal to the "Surveillance Capitalism" claim that Google is a "rogue capitalist" (because it spies on you for profit) while Apple is a good capitalist (because they extract money, not private data):&lt;/p&gt;
    &lt;p&gt;https://pluralistic.net/HowToDestroySurveillanceCapitalism&lt;/p&gt;
    &lt;p&gt;Apple spies on you, of course. And because they trap you in the App Store's airtight bubble, they block you from installing any software that would protect you from Apple's surveillance. And now, Apple has thrown in with the Trump regime's most violent, human-rights invading program: mass kidnappings and disappearances of thousands of our neighbors.&lt;/p&gt;
    &lt;p&gt;Truly, everyone's a "rogue capitalist" now. It's almost like the problem with companies isn't whether their business model is based on showing you ads or charging you money, but rather, whether they can abuse you for profit and get away with it.&lt;/p&gt;
    &lt;head rend="h1"&gt;Hey look at this (permalink)&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Social Media Provenance Challenge https://www.tbray.org/ongoing/When/202x/2025/10/01/C2PA-For-Social-Media&lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;A Powerhouse Writer Found One Word to Change the Debate About Tech https://www.nytimes.com/2025/10/05/books/review/cory-doctorow-enshittification.html?unlocked_article_code=1.rE8.s411.gJIQKhZDXbJX&amp;amp;amp;smid=url-share&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Socialist Approaches To Enterprise Information Technology https://saeit.org/&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Way past its prime: how did Amazon get so rubbish? https://www.theguardian.com/technology/2025/oct/05/way-past-its-prime-how-did-amazon-get-so-rubbish&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Man buys used Tesla only to discover it's banned from Supercharger network https://www.cbsnews.com/chicago/news/used-tesla-banned-supercharger-network-daniel-boycott/&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h1"&gt;Object permanence (permalink)&lt;/head&gt;
    &lt;p&gt;#20yrsago Ebook DRM that encourages identity theft gets a huge makeover https://web.archive.org/web/20051011041018/https://www.eff.org/deeplinks/archives/004026.php&lt;/p&gt;
    &lt;p&gt;#20yrsago Alternate reality game turns online poker into tombstone parties in cemetaries https://web.archive.org/web/20130514004112/https://42entertainment.com/work/lastcallpoker&lt;/p&gt;
    &lt;p&gt;#20yrsago Reporter vows to fight DRM https://web.archive.org/web/20051210140945/https://blogs.zdnet.com/BTL/?p=1952&lt;/p&gt;
    &lt;p&gt;#20yrsago Library of Congress: Most sound recordings aren’t available https://www.clir.org/pubs/reports/pub133/contents/&lt;/p&gt;
    &lt;p&gt;#15yrsago T-Mobile sneaks “rootkit” into G2 phones – reinstalls locked-down OS after jailbreaking https://web.archive.org/web/20101009072029/https://oti.newamerica.net/blogposts/2010/newest_google_android_cell_phone_contains_unexpected_feature_a_malicious_root_kit-380&lt;/p&gt;
    &lt;p&gt;#15yrsago XKCD’s Online Communities map, part 2 – the online world, visualized with loads of funny https://xkcd.com/802/&lt;/p&gt;
    &lt;p&gt;#15yrsago KILL THE DEAD: Kadrey’s grisly, hard-boiled sequel to SANDMAN SLIM https://memex.craphound.com/2010/10/05/kill-the-dead-kadreys-grisly-hard-boiled-sequel-to-sandman-slim/&lt;/p&gt;
    &lt;p&gt;#15yrsago Security company ad tricks people into thinking their houses were burgled https://copyranter.blogspot.com/2010/10/adt-shows-you-how-easy-it-is-to-break.html&lt;/p&gt;
    &lt;p&gt;#15yrsago Firefighters watch as house burns to the ground: owner had not paid annual firefighting fees https://web.archive.org/web/20101003021723/https://www.wpsdlocal6.com/news/local/firefighters-watch-as-home-burns-to-the-ground-104052668.html&lt;/p&gt;
    &lt;p&gt;#15yrsago Sky Marshals to lose their cushy first-class seats? https://web.archive.org/web/20160521034617/https://www.wsj.com/article_email/SB10001424052748703431604575521832473932878-lMyQjAxMTAwMDIwOTEyNDkyWj.html&lt;/p&gt;
    &lt;p&gt;#15yrsago Michael Swanwick writes a story about autumn on fallen leaves https://www.flickr.com/photos/54366973@N04/5035946705/in/photostream/&lt;/p&gt;
    &lt;p&gt;#15yrsago Why the copyright wars matter: a reply to Helienne Lindvall https://www.theguardian.com/technology/blog/2010/oct/05/free-online-content-cory-doctorow&lt;/p&gt;
    &lt;p&gt;#15yrsago William Gibson nails my philosophy in life https://memex.craphound.com/2010/10/04/william-gibson-nails-my-philosophy-in-life/&lt;/p&gt;
    &lt;p&gt;#10yrsago Car accidents aren’t accidents https://www.wired.com/2015/10/stop-calling-daughters-death-car-accident/&lt;/p&gt;
    &lt;p&gt;#10yrsago How a romance-scam victim laundered $1.1M worth of other victims’ money https://www.wired.com/2015/10/online-dating-made-woman-pawn-global-crime-plot/&lt;/p&gt;
    &lt;p&gt;#10yrsago Snowden broke a nondisclosure EULA in order to uphold his Constitutional oath https://www.aaronswartzday.org/snowden-oath/&lt;/p&gt;
    &lt;p&gt;#10yrsago What it’s like to do a lockdown drill with kindergarten kids https://web.archive.org/web/20141029062211/https://www.washingtonpost.com/opinions/rehearsing-for-death-a-pre-k-teacher-on-the-trouble-with-lockdown-drills/2014/10/28/4ab456ea-5eb2-11e4-9f3a-7e28799e0549_story.html&lt;/p&gt;
    &lt;p&gt;#10yrsago Forget tidying: losing your precious possessions is the real “life-changing magic” https://medium.com/chrysaora-weekly/the-life-changing-magic-of-losing-shit-18122103f499&lt;/p&gt;
    &lt;p&gt;#10yrsago UK Chancellor: I must cut tax benefits for working poor to help them https://www.independent.co.uk/news/uk/politics/the-low-paid-will-suffer-if-i-don-t-cut-their-tax-credits-says-george-osborne-a6679636.html&lt;/p&gt;
    &lt;p&gt;#10yrsago UK top government official: human rights no longer a “top priority” https://www.independent.co.uk/news/uk/politics/human-rights-are-no-longer-a-top-priority-for-the-government-says-foreign-office-chief-a6677661.html&lt;/p&gt;
    &lt;p&gt;#5yrsago Facebook's living will https://pluralistic.net/2020/10/05/florida-man/#dnr&lt;/p&gt;
    &lt;p&gt;#5yrsago Ad-tech is a bubble https://pluralistic.net/2020/10/05/florida-man/#wannamakers-ghost&lt;/p&gt;
    &lt;p&gt;#5yrsago The Internet is for End-Users https://pluralistic.net/2020/10/05/florida-man/#user-agents&lt;/p&gt;
    &lt;p&gt;#5yrsago Squeeze Me https://pluralistic.net/2020/10/05/florida-man/#disappearing-act&lt;/p&gt;
    &lt;p&gt;#5yrsago Why I love the Haunted Mansion https://pluralistic.net/2020/10/04/build-back-better/#grim-grinning-ghosts&lt;/p&gt;
    &lt;p&gt;#5yrsago Normal isn't enough https://pluralistic.net/2020/10/04/build-back-better/#post-pandemic&lt;/p&gt;
    &lt;head rend="h1"&gt;Upcoming appearances (permalink)&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Boston: Enshittification with Randall Munroe (Brattle Theater), Oct 7&lt;lb/&gt;https://www.eventbrite.com/e/cory-doctorow-at-the-brattle-theatre-tickets-1591235180259?aff=oddtdtcreator&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;DC: Enshittification with Rohit Chopra (Politics and Prose), Oct 8&lt;/p&gt;&lt;lb/&gt;https://politics-prose.com/cory-doctorow-10825&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;NYC: Enshittification with Lina Khan (Brooklyn Public Library), Oct 9&lt;/p&gt;&lt;lb/&gt;https://www.bklynlibrary.org/calendar/cory-doctorow-discusses-central-library-dweck-20251009-0700pm&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;New Orleans: DeepSouthCon63, Oct 10-12&lt;/p&gt;&lt;lb/&gt;http://www.contraflowscifi.org/&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;New Orleans: Enshittification at Octavia Books, Oct 12&lt;/p&gt;&lt;lb/&gt;https://www.octaviabooks.com/event/enshittification-cory-doctorow&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Chicago: How Platforms Die with Rick Perlstein (University Club), Oct 14&lt;/p&gt;&lt;lb/&gt;https://www.eventbrite.com/e/how-platforms-die-with-cory-doctorow-tickets-1747916117159&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Los Angeles: Enshittification with David Dayen (Diesel), Oct 16&lt;/p&gt;&lt;lb/&gt;https://dieselbookstore.com/event/2025-10-16/cory-doctorow-enshittification&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;San Francisco: Enshittification at Public Works with Jenny Odell (The Booksmith), Oct 20&lt;/p&gt;&lt;lb/&gt;https://app.gopassage.com/events/doctorow25&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;PDX: Enshittification at Powell's, Oct 21&lt;/p&gt;&lt;lb/&gt;https://www.powells.com/events/cory-doctorow-10-21-25&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Seattle: Enshittification and the Rot Economy, with Ed Zitron (Clarion West), Oct 22&lt;/p&gt;&lt;lb/&gt;https://www.clarionwest.org/event/2025-deep-dives-cory-doctorow/&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Vancouver: Enshittification with David Moscrop (Vancouver Writers Festival), Oct 23&lt;/p&gt;&lt;lb/&gt;https://www.showpass.com/2025-festival-39/&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Montreal: Montreal Attention Forum keynote, Oct 24&lt;/p&gt;&lt;lb/&gt;https://www.attentionconferences.com/conferences/2025-forum&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Montreal: Enshittification at Librarie Drawn and Quarterly, Oct 24&lt;/p&gt;&lt;lb/&gt;https://mtl.drawnandquarterly.com/events/3757420251024&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Ottawa: Enshittification (Ottawa Writers Festival), Oct 25&lt;/p&gt;&lt;lb/&gt;https://writersfestival.org/events/fall-2025/enshittification&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Toronto: Enshittification with Dan Werb (Type Books), Oct 27&lt;/p&gt;&lt;lb/&gt;https://www.instagram.com/p/DO81_1VDngu/?img_index=1&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Barcelona: Conferencia EUROPEA 4D (Virtual), Oct 28&lt;/p&gt;&lt;lb/&gt;https://4d.cat/es/conferencia/&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Miami: Enshittification at Books &amp;amp; Books, Nov 5&lt;/p&gt;&lt;lb/&gt;https://www.eventbrite.com/e/an-evening-with-cory-doctorow-tickets-1504647263469&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Miami: Cloudfest, Nov 6&lt;/p&gt;&lt;lb/&gt;https://www.cloudfest.com/usa/&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Burbank: Burbank Book Festival, Nov 8&lt;/p&gt;&lt;lb/&gt;https://www.burbankbookfestival.com/&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Lisbon: A post-American, enshittification-resistant internet, with Rabble (Web Summit), Nov 12&lt;/p&gt;&lt;lb/&gt;https://websummit.com/sessions/lis25/92f47bc9-ca60-4997-bef3-006735b1f9c5/a-post-american-enshittification-resistant-internet/&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Cardiff: Hay Festival After Hours, Nov 13&lt;/p&gt;&lt;lb/&gt;https://www.hayfestival.com/c-203-hay-festival-after-hours.aspx&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h1"&gt;Recent appearances (permalink)&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Enshittification (The.Ink)&lt;lb/&gt;https://the.ink/p/watch-cory-doctorow-on-why-everything&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Why Everything Is Getting Worse (Majority Report)&lt;/p&gt;&lt;lb/&gt;https://www.youtube.com/watch?v=EQW6UxY144Q&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h1"&gt;Latest books (permalink)&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;"Picks and Shovels": a sequel to "Red Team Blues," about the heroic era of the PC, Tor Books (US), Head of Zeus (UK), February 2025 (https://us.macmillan.com/books/9781250865908/picksandshovels).&lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;"The Bezzle": a sequel to "Red Team Blues," about prison-tech and other grifts, Tor Books (US), Head of Zeus (UK), February 2024 (the-bezzle.org).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;"The Lost Cause:" a solarpunk novel of hope in the climate emergency, Tor Books (US), Head of Zeus (UK), November 2023 (http://lost-cause.org).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;"The Internet Con": A nonfiction book about interoperability and Big Tech (Verso) September 2023 (http://seizethemeansofcomputation.org). Signed copies at Book Soup (https://www.booksoup.com/book/9781804291245).&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;"Red Team Blues": "A grabby, compulsive thriller that will leave you knowing more about how the world works than you did before." Tor Books http://redteamblues.com.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;"Chokepoint Capitalism: How to Beat Big Tech, Tame Big Content, and Get Artists Paid, with Rebecca Giblin", on how to unrig the markets for creative labor, Beacon Press/Scribe 2022 https://chokepointcapitalism.com&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h1"&gt;Upcoming books (permalink)&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;"Canny Valley": A limited edition collection of the collages I create for Pluralistic, self-published, September 2025&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;"Enshittification: Why Everything Suddenly Got Worse and What to Do About It," Farrar, Straus, Giroux, October 7 2025&lt;/p&gt;&lt;lb/&gt;https://us.macmillan.com/books/9780374619329/enshittification/&lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;"Unauthorized Bread": a middle-grades graphic novel adapted from my novella about refugees, toasters and DRM, FirstSecond, 2026&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;"Enshittification, Why Everything Suddenly Got Worse and What to Do About It" (the graphic novel), Firstsecond, 2026&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;"The Memex Method," Farrar, Straus, Giroux, 2026&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;"The Reverse-Centaur's Guide to AI," a short book about being a better AI critic, Farrar, Straus and Giroux, 2026&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h1"&gt;Colophon (permalink)&lt;/head&gt;
    &lt;p&gt;Today's top sources:&lt;/p&gt;
    &lt;p&gt;Currently writing:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;"The Reverse Centaur's Guide to AI," a short book for Farrar, Straus and Giroux about being an effective AI critic. FIRST DRAFT COMPLETE AND SUBMITTED.&lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;A Little Brother short story about DIY insulin PLANNING&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This work – excluding any serialized fiction – is licensed under a Creative Commons Attribution 4.0 license. That means you can use it any way you like, including commercially, provided that you attribute it to me, Cory Doctorow, and include a link to pluralistic.net.&lt;/p&gt;
    &lt;p&gt;https://creativecommons.org/licenses/by/4.0/&lt;/p&gt;
    &lt;p&gt;Quotations and images are not included in this license; they are included either under a limitation or exception to copyright, or on the basis of a separate license. Please exercise caution.&lt;/p&gt;
    &lt;head rend="h1"&gt;How to get Pluralistic:&lt;/head&gt;
    &lt;p&gt;Blog (no ads, tracking, or data-collection):&lt;/p&gt;
    &lt;p&gt;Newsletter (no ads, tracking, or data-collection):&lt;/p&gt;
    &lt;p&gt;https://pluralistic.net/plura-list&lt;/p&gt;
    &lt;p&gt;Mastodon (no ads, tracking, or data-collection):&lt;/p&gt;
    &lt;p&gt;Medium (no ads, paywalled):&lt;/p&gt;
    &lt;p&gt;Twitter (mass-scale, unrestricted, third-party surveillance and advertising):&lt;/p&gt;
    &lt;p&gt;Tumblr (mass-scale, unrestricted, third-party surveillance and advertising):&lt;/p&gt;
    &lt;p&gt;https://mostlysignssomeportents.tumblr.com/tagged/pluralistic&lt;/p&gt;
    &lt;p&gt;"When life gives you SARS, you make sarsaparilla" -Joey "Accordion Guy" DeVilla&lt;/p&gt;
    &lt;p&gt;READ CAREFULLY: By reading this, you agree, on behalf of your employer, to release me from all obligations and waivers arising from any and all NON-NEGOTIATED agreements, licenses, terms-of-service, shrinkwrap, clickwrap, browsewrap, confidentiality, non-disclosure, non-compete and acceptable use policies ("BOGUS AGREEMENTS") that I have entered into with your employer, its partners, licensors, agents and assigns, in perpetuity, without prejudice to my ongoing rights and privileges. You further represent that you have the authority to release me from any BOGUS AGREEMENTS on behalf of your employer.&lt;/p&gt;
    &lt;p&gt;ISSN: 3066-764X&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45492410</guid><pubDate>Mon, 06 Oct 2025 15:25:12 +0000</pubDate></item><item><title>Launch HN: Grapevine (YC S19) – A company GPT that actually works</title><link>https://getgrapevine.ai/</link><description>&lt;doc fingerprint="a74e481eafb1f0bb"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Stop wasting time searching.&lt;/head&gt;
    &lt;head rend="h1"&gt;Stop wasting time searching.&lt;/head&gt;
    &lt;head rend="h1"&gt;Stop wasting time searching.&lt;/head&gt;
    &lt;p&gt;One AI agent that searches across your docs, code, and communicationâso you donât have to.&lt;/p&gt;
    &lt;p&gt;Thread&lt;/p&gt;
    &lt;p&gt;Aleks&lt;/p&gt;
    &lt;p&gt;12:12 PM&lt;/p&gt;
    &lt;p&gt;I wish there were a company GPT that ACTUALLY worked + wasn't exorbitantly expensive ðªðª&lt;/p&gt;
    &lt;p&gt;1 reply&lt;/p&gt;
    &lt;p&gt;Grapevine&lt;/p&gt;
    &lt;p&gt;12:12 PM&lt;/p&gt;
    &lt;p&gt;I can help with that, and you can get started for free!&lt;/p&gt;
    &lt;p&gt;Thread&lt;/p&gt;
    &lt;p&gt;Aleks&lt;/p&gt;
    &lt;p&gt;12:12 PM&lt;/p&gt;
    &lt;p&gt;I wish there were a company GPT that ACTUALLY worked + wasn't exorbitantly expensive ðªðª&lt;/p&gt;
    &lt;p&gt;1 reply&lt;/p&gt;
    &lt;p&gt;Grapevine&lt;/p&gt;
    &lt;p&gt;12:12 PM&lt;/p&gt;
    &lt;p&gt;I can help with that, and you can get started for free!&lt;/p&gt;
    &lt;p&gt;Thread&lt;/p&gt;
    &lt;p&gt;Aleks&lt;/p&gt;
    &lt;p&gt;12:12 PM&lt;/p&gt;
    &lt;p&gt;I wish there were a company GPT that ACTUALLY worked + wasn't exorbitantly expensive ðªðª&lt;/p&gt;
    &lt;p&gt;1 reply&lt;/p&gt;
    &lt;p&gt;Grapevine&lt;/p&gt;
    &lt;p&gt;12:12 PM&lt;/p&gt;
    &lt;p&gt;I can help with that, and you can get started for free!&lt;/p&gt;
    &lt;head rend="h2"&gt;What if ChatGPT was aware of my company's context?&lt;/head&gt;
    &lt;head rend="h3"&gt;We've all wondered it at some point.&lt;/head&gt;
    &lt;head rend="h3"&gt;What if AI already understood your companyâso you could skip the busywork, the repetitive asks, the frustration?&lt;/head&gt;
    &lt;head rend="h3"&gt;It could take care of the many chores that exist in work today, making our days a little less annoying and little more fun.&lt;/head&gt;
    &lt;head rend="h3"&gt;Other products we've tried haven't quite worked. Some of us have tried to build it ourselves.&lt;/head&gt;
    &lt;head rend="h3"&gt;That's why we built Grapevine. And it finally works.&lt;/head&gt;
    &lt;p&gt;#team-infra&lt;/p&gt;
    &lt;p&gt;For commonly asked cross-team questions&lt;/p&gt;
    &lt;p&gt;Johnny&lt;/p&gt;
    &lt;p&gt;Jul 28th at 4:23 PM&lt;/p&gt;
    &lt;p&gt;Hey Infra team, Iâd like to create a new S3 bucket...&lt;/p&gt;
    &lt;p&gt;Actual Slack thread&lt;/p&gt;
    &lt;p&gt;3 sources&lt;/p&gt;
    &lt;p&gt;Real examples of us using Grapevine internally, over the last 2 months&lt;/p&gt;
    &lt;p&gt;&amp;gt;85%&lt;/p&gt;
    &lt;p&gt;&amp;gt;85%&lt;/p&gt;
    &lt;p&gt;&amp;gt;85%&lt;/p&gt;
    &lt;p&gt;of answers are helpful &amp;amp; accurate&lt;/p&gt;
    &lt;p&gt;of answers are helpful &amp;amp; accurate&lt;/p&gt;
    &lt;p&gt;*from hundreds of real questions from beta customers&lt;/p&gt;
    &lt;head rend="h2"&gt;Get started in under 30 minutes&lt;/head&gt;
    &lt;p&gt;10 min&lt;/p&gt;
    &lt;head rend="h6"&gt;Connect your data and setup Slack bot&lt;/head&gt;
    &lt;p&gt;30 min&lt;/p&gt;
    &lt;head rend="h6"&gt;Start asking questions&lt;/head&gt;
    &lt;p&gt;2 days&lt;/p&gt;
    &lt;head rend="h6"&gt;Tackle queries with full historical context&lt;/head&gt;
    &lt;p&gt;Over time&lt;/p&gt;
    &lt;head rend="h6"&gt;Grapevine keeps learning and getting sharper&lt;/head&gt;
    &lt;head rend="h2"&gt;Get started in under 30 minutes&lt;/head&gt;
    &lt;p&gt;10 min&lt;/p&gt;
    &lt;head rend="h6"&gt;Connect your data and setup Slack bot&lt;/head&gt;
    &lt;p&gt;30 min&lt;/p&gt;
    &lt;head rend="h6"&gt;Start asking questions&lt;/head&gt;
    &lt;p&gt;2 days&lt;/p&gt;
    &lt;head rend="h6"&gt;Tackle queries with full historical context&lt;/head&gt;
    &lt;p&gt;Over time&lt;/p&gt;
    &lt;head rend="h6"&gt;Grapevine keeps learning and getting sharper&lt;/head&gt;
    &lt;head rend="h2"&gt;Get started in under 30 minutes&lt;/head&gt;
    &lt;p&gt;10 min&lt;/p&gt;
    &lt;head rend="h6"&gt;Connect your data and setup Slack bot&lt;/head&gt;
    &lt;p&gt;30 min&lt;/p&gt;
    &lt;head rend="h6"&gt;Start asking questions&lt;/head&gt;
    &lt;p&gt;2 days&lt;/p&gt;
    &lt;head rend="h6"&gt;Tackle queries with full historical context&lt;/head&gt;
    &lt;p&gt;Over time&lt;/p&gt;
    &lt;head rend="h6"&gt;Grapevine keeps learning and getting sharper&lt;/head&gt;
    &lt;head rend="h3"&gt;Always Secure&lt;/head&gt;
    &lt;head rend="h6"&gt;Encrypted at rest&lt;/head&gt;
    &lt;p&gt;Data is encrypted using industry-standard AES-256, protecting your companyâs knowledge even when itâs not in use.&lt;/p&gt;
    &lt;head rend="h6"&gt;Encrypted at rest&lt;/head&gt;
    &lt;p&gt;Data is encrypted using industry-standard AES-256, protecting your companyâs knowledge even when itâs not in use.&lt;/p&gt;
    &lt;head rend="h6"&gt;Encrypted at rest&lt;/head&gt;
    &lt;p&gt;All data is encrypted using industry-standard AES-256&lt;/p&gt;
    &lt;head rend="h6"&gt;Isolated databases&lt;/head&gt;
    &lt;p&gt;Every customerâs data is siloed and stored separately to ensure maximum privacy and security.&lt;/p&gt;
    &lt;head rend="h6"&gt;Isolated databases&lt;/head&gt;
    &lt;p&gt;Every customerâs data is siloed and stored separately to ensure maximum privacy and security.&lt;/p&gt;
    &lt;head rend="h6"&gt;Isolated databases&lt;/head&gt;
    &lt;p&gt;Every customerâs data is siloed and stored separately&lt;/p&gt;
    &lt;head rend="h6"&gt;SOC II Compliant&lt;/head&gt;
    &lt;p&gt;Built to Gather's SOC II Type 2 standards, with regularly scheduled security audits and more details upon request.&lt;/p&gt;
    &lt;head rend="h6"&gt;SOC II Compliant&lt;/head&gt;
    &lt;p&gt;Built to Gather's SOC II Type 2 standards, with regularly scheduled security audits and more details upon request.&lt;/p&gt;
    &lt;head rend="h6"&gt;SOC II Compliant&lt;/head&gt;
    &lt;p&gt;Every customerâs data is siloed and stored separately&lt;/p&gt;
    &lt;p&gt;Grapevine will not train models on your data&lt;/p&gt;
    &lt;head rend="h2"&gt;Get started today.&lt;/head&gt;
    &lt;head rend="h2"&gt;What if ChatGPT was aware of my company's context?&lt;/head&gt;
    &lt;p&gt;We've all wondered this at some point. And we finally built a version of this that works. But don't take our word for itâtry it today!&lt;/p&gt;
    &lt;p&gt;#team-infra&lt;/p&gt;
    &lt;p&gt;For commonly asked cross-team questions&lt;/p&gt;
    &lt;p&gt;Johnny&lt;/p&gt;
    &lt;p&gt;Jul 28th at 4:23 PM&lt;/p&gt;
    &lt;p&gt;Hey Infra team, Iâd like to create a new S3 bucket...&lt;/p&gt;
    &lt;p&gt;Actual Slack thread&lt;/p&gt;
    &lt;p&gt;3 sources&lt;/p&gt;
    &lt;p&gt;Real examples of us using Grapevine internally, over the last 2 months&lt;/p&gt;
    &lt;p&gt;#team-infra&lt;/p&gt;
    &lt;p&gt;For commonly asked cross-team questions&lt;/p&gt;
    &lt;p&gt;Johnny&lt;/p&gt;
    &lt;p&gt;Jul 28th at 4:23 PM&lt;/p&gt;
    &lt;p&gt;Hey Infra team, Iâd like to create a new S3 bucket...&lt;/p&gt;
    &lt;p&gt;Actual Slack thread&lt;/p&gt;
    &lt;p&gt;3 sources&lt;/p&gt;
    &lt;p&gt;Real examples of us using Grapevine internally, over the last 2 months&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45492564</guid><pubDate>Mon, 06 Oct 2025 15:39:59 +0000</pubDate></item></channel></rss>