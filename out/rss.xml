<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Hacker News: Front Page</title><link>https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml</link><description>Hacker News RSS</description><atom:link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Sun, 28 Sep 2025 04:11:57 +0000</lastBuildDate><item><title>Why We Think</title><link>https://lilianweng.github.io/posts/2025-05-01-thinking/</link><description>&lt;doc fingerprint="9c59cbb839924e9b"&gt;
  &lt;main&gt;
    &lt;p&gt;Special thanks to John Schulman for a lot of super valuable feedback and direct edits on this post.&lt;/p&gt;
    &lt;p&gt;Test time compute (Graves et al. 2016, Ling, et al. 2017, Cobbe et al. 2021) and Chain-of-thought (CoT) (Wei et al. 2022, Nye et al. 2021), have led to significant improvements in model performance, while raising many research questions. This post aims to review recent developments in how to effectively use test-time compute (i.e. “thinking time”) and why it helps.&lt;/p&gt;
    &lt;p&gt;The core idea is deeply connected to how humans think. We humans cannot immediately provide the answer for "What's 12345 times 56789?". Rather, it is natural to spend time pondering and analyzing before getting to the result, especially for complex problems. In Thinking, Fast and Slow (Kahneman, 2013), Daniel Kahneman characterizes human thinking into two modes, through the lens of the dual process theory :&lt;/p&gt;
    &lt;p&gt;Fast thinking (System 1) operates quickly and automatically, driven by intuition and emotion while requiring little to no effort.&lt;/p&gt;
    &lt;p&gt;Slow thinking (System 2) demands deliberate, logical thought and significant cognitive efforts. This mode of thinking consumes more mental energy and requires intentional engagement.&lt;/p&gt;
    &lt;p&gt;Because System 1 thinking is fast and easy, it often ends up being the main decision driver, at the cost of accuracy and logic. It naturally relies on our brain’s mental shortcuts (i.e., heuristics) and can lead to errors and biases. By consciously slowing down and taking more time to reflect, improve and analyze, we can engage in System 2 thinking to challenge our instincts and make more rational choices.&lt;/p&gt;
    &lt;p&gt;One view of deep learning, is that neural networks can be characterized by the amount of computation and storage they can access in a forward pass, and if we optimize them to solve problems using gradient descent, the optimization process will figure out how to use these resources–they’ll figure out how to organize these resources into circuits for calculation and information storage. From this view, if we design an architecture or system that can do more computation at test time, and we train it to effectively use this resource, it’ll work better.&lt;/p&gt;
    &lt;p&gt;In Transformer models, the amount of computation (flops) that the model does for each generated token is roughly 2 times the number of parameters. For sparse models like mixture of experts (MoE), only a fraction of the parameters are used in each forward pass, so computation = 2 * parameters / sparsity, where sparsity is the fraction of experts active.&lt;/p&gt;
    &lt;p&gt;On the other hand, CoT enables the model to perform far more flops of computation for each token of the answer that it is trying to compute. In fact, CoT has a nice property that it allows the model to use a variable amount of compute depending on the hardness of the problem.&lt;/p&gt;
    &lt;p&gt;A classic idea in machine learning is to define a probabilistic model with a latent (hidden) variable $z$ and a visible variable $y$, where $y$ is given to our learning algorithm. Marginalizing (summing) over the possible values of the latent variable allows us to express a rich distribution over the visible variables, $P(y) = \sum_{z \sim P(z)} P(y \mid z)$. For example, we can model the distribution over math problems and solutions by letting $x$ denote a problem statement, $y$ be ground truth answer or proof, and $z$ as a free-form thought process that leads to the proof. The marginal probability distribution to optimize would be $P(y \mid x) = \sum_{z \sim p(z\mid x)} P(y \mid x, z)$&lt;/p&gt;
    &lt;p&gt;The latent variable perspective is particularly useful for understanding methods that involve collecting multiple parallel CoTs or searching over the CoT–these algorithms can be seen as sampling from the posterior $P(z \mid x, y)$. This view also suggests the benefits of using the log loss $\log P(y \mid x)$ as the target objective to optimize, as the log loss objective has been so effective in pretraining.&lt;/p&gt;
    &lt;p&gt;The strategy of generating intermediate steps before generating short answers, particularly for math problems, was explored by Ling, et al. 2017, who introduced the AQUA-RAT dataset, and then expanded by Cobbe et al. 2021, who introduced the Grade School Math (GSM) dataset. Cobbe et al. train a generator with supervised learning on human-written solutions and verifiers that predict the correctness of a candidate solution; they can then search over these solutions. Nye et al. (2021) experimented with intermediate thinking tokens as “scratchpads” and Wei et al. (2022) coined the now-standard term chain-of-thought (CoT).&lt;/p&gt;
    &lt;p&gt;Early work on improving CoT reasoning involved doing supervised learning on human-written reasoning traces or model-written traces filtered for answer correctness, where the latter can be seen as a rudimentary form of reinforcement learning (RL). Some other work found that one could significantly boost math performance of instruction tuned models by prompting them appropriately, with "think step by step" (Kojima et al. 2022) or more complex prompting to encourage the model to reflect on related knowledge first (Yasunaga et al. 2023).&lt;/p&gt;
    &lt;p&gt;Later work found that the CoT reasoning capabilities can be significantly improved by doing reinforcement learning on a dataset of problems with automatically checkable solutions, such as STEM problems with short answers, or coding tasks that can be checked with unit tests (Zelikman et al. 2022, Wang et al., 2023, Liu et al., 2023). This approach rose to prominence with the announcement of o1-preview, o3, and the R1 tech report (DeepSeek-AI, 2025), which showed that a simple recipe where a policy gradient algorithm could lead to strong performance.&lt;/p&gt;
    &lt;p&gt;The fundamental intent of test-time compute is to adaptively modify the model’s output distribution at test time. There are various ways of utilizing test time resources for decoding to select better samples and thus alter the model’s predictions towards a more desired distribution. Two main approaches for improving the decoding process are parallel sampling and sequential revision.&lt;/p&gt;
    &lt;p&gt;Parallel sampling generates multiple outputs simultaneously, meanwhile providing guidance per step with process reward signals or using verifiers to judge the quality at the end. It is the most widely adopted decoding method to improve test time performance, such as best-of-$N$ or beam search. Self-consistency (Wang et al. 2023) is commonly used to select the answer with majority vote among multiple CoT rollouts when the ground truth is not available.&lt;/p&gt;
    &lt;p&gt;Sequential revision adapts the model’s responses iteratively based on the output in the previous step, asking the model to intentionally reflect its existing response and correct mistakes. The revision process may have to rely on a fine-tuned model, as naively relying on the model’s intrinsic capability of self-correction without external feedback may not lead to improvement (Kamoi et al. 2024, Huang et al. 2024).&lt;/p&gt;
    &lt;p&gt;Parallel sampling is simple, intuitive and easier to implement, but bounded by the model capability of whether it can achieve the correct solution in one-go. Sequential explicitly asks the model to reflect on mistakes but it is slower and requires extra care during implementation as it does run the risk of correct predictions being modified to be incorrect or introducing other types of hallucinations. These two methods can be used together. Snell et al. (2024) showed that easier questions benefit from purely sequential test-time compute, whereas harder questions often perform best with an optimal ratio of sequential to parallel compute.&lt;/p&gt;
    &lt;p&gt;Given a generative model and a scoring function that we can use to score full or partial samples, there are various search algorithms we can use to find a high scoring sample. Best-of-$N$ is the simplest such algorithm: one just collects $N$ independent samples and chooses the highest-ranking sample according to some scoring function. Beam search is a more sophisticated search algorithm that makes the search process more adaptive, spending more sampling computation on more promising parts of the solution space.&lt;/p&gt;
    &lt;p&gt;Beam search maintains a set of promising partial sequences and alternates between extending them and pruning the less promising ones. As a selection mechanism, we can use a process reward model (PRM; Lightman et al. 2023) to guide beam search candidate selection. Xie et al. (2023) used LLM to evaluate how likely its own generated reasoning step is correct, formatted as a multiple-choice question and found that per-step self-evaluation reduces accumulative errors in multi-step reasoning during beam search decoding. Besides, during sampling, annealing the temperature helps mitigate aggregated randomness. These experiments by Xie et al. achieved 5-6% improvement on few-shot GSM8k, AQuA and StrategyQA benchmarks with the Codex model. Reward balanced search (short for “REBASE”; Wu et al. 2025) separately trained a process reward model (PRM) to determine how much each node should be expanded at each depth during beam search, according to the softmax-normalized reward scores. Jiang et al. (2024) trained their PRM, named “RATIONALYST”, for beam search guidance on synthetic rationales conditioned on a large amount of unlabelled data. Good rationales are filtered based on whether they help reduce the neg log-prob of true answer tokens by a threshold, when comparing the difference between when the rationales is included in the context vs not. At inference time, RATIONALYST provides process supervision to the CoT generator by helping estimate log-prob of next reasoning steps (“implicit”) or directly generating next reasoning steps as part of the prompt (“explicit”).&lt;/p&gt;
    &lt;p&gt;Interestingly, it is possible to trigger the emergent chain-of-thought reasoning paths without explicit zero-shot or few-shot prompting. Wang &amp;amp; Zhou (2024) discovered that if we branch out at the first sampling tokens by retaining the top $k$ tokens with highest confidence, measured as the difference between top-1 and top-2 candidates during sampling, and then continue these $k$ sampling trials with greedy decoding onward, many of these sequences natively contain CoT. Especially when CoT does appear in the context, it leads to a more confident decoding of the final answer. To calculate the confidence of the final answer, the answer span needs to be identified by task-specific heuristics (e.g. last numerical values for math questions) or by prompting the model further with "So the answer is". The design choice of only branching out at the first token is based on the observation that early branching significantly enhances the diversity of potential paths, while later tokens are influenced a lot by previous sequences.&lt;/p&gt;
    &lt;p&gt;If the model can reflect and correct mistakes in past responses, we would expect the model to produce a nice sequence of iterative revision with increasing quality. However, this self-correction capability turns out to not exist intrinsically among LLMs and does not easily work out of the box, due to various failure modes, such as, (1) hallucination, including modifying correct responses to be incorrect; (2) behavior collapse to non-correcting behavior; e.g. making minor or no modification on the first incorrect responses; or (3) fail to generalize to distribution shift at test time. Experiments by Huang et al. (2024) showed that naively applying self-correction leads to worse performance and external feedback is needed for models to self improve, which can be based on matching ground truths, heuristics and task-specific metrics, unit tests results for coding questions (Shinn, et al. 2023), a stronger model (Zhang et al. 2024), as well as human feedback (Liu et al. 2023).&lt;/p&gt;
    &lt;p&gt;Self-correction learning (Welleck et al. 2023) aims to train a corrector model $P_\theta(y \mid y_0, x)$ given a fixed generator model $P_0(y_0 \mid x)$. While the generator model remains to be generic, the corrector model can task-specific and only does generation conditioned on an initial model response and additional feedback (e.g. a sentence, a compiler trace, unit test results; can be optional):&lt;/p&gt;
    &lt;p&gt;Self-correction learning first generates first generates multiple outputs per prompt in the data pool;&lt;/p&gt;
    &lt;p&gt;then create value-improving pairs by pairing two outputs for the same prompt together if one has a higher value than the other, (prompt $x$, hypothesis $y$, correction $y’$).&lt;/p&gt;
    &lt;p&gt;These pairs are selected proportional to is improvement in value, $v(y’) - v(y)$, and similarity between two outputs, $\text{Similarity}(y, y’)$ to train the corrector model.&lt;/p&gt;
    &lt;p&gt;To encourage exploration, the corrector provides new generations into the data pool as well. At the inference time, the corrector can be used iteratively to create a correction trajectory of sequential revision.&lt;/p&gt;
    &lt;p&gt;Recursive inspection (Qu et al. 2024) also aims to train a better corrector model but with a single model to do both generation and self-correction.&lt;/p&gt;
    &lt;p&gt;SCoRe (Self-Correction via Reinforcement Learning; Kumar et al. 2024) is a multi-turn RL approach to encourage the model to do self-correction by producing better answers at the second attempt than the one created at the first attempt. It composes two stages of training: stage 1 only maximizes the accuracy of the second attempt while enforcing a KL penalty only on the first attempt to avoid too much shifting of the first-turn responses from the base model behavior; stage 2 optimizes the accuracy of answers produced by both the first and second attempts. Ideally we do want to see performance at both first and second attempts to be better, but adding stage 1 prevents the behavior collapse where the model does minor or none edits on the first response, and stage 2 further improves the results.&lt;/p&gt;
    &lt;p&gt;There’s been a lot of recent success in using RL to improve the reasoning ability of language models, by using a collection of questions with ground truth answers (usually STEM problems and puzzles with easy to verify answers), and rewarding the model for getting the correct answer.Recent activity in this area was spurred by strong performance of the o-series models from OpenAI, and the subsequent releases of models and tech reports from DeepSeek.&lt;/p&gt;
    &lt;p&gt;DeepSeek-R1 (DeepSeek-AI, 2025) is an open-source LLM designed to excel in tasks that require advanced reasoning skills like math, coding and logical problem solving. They run through 2 rounds of SFT-RL training, enabling R1 to be good at both reasoning and non-reasoning tasks.&lt;/p&gt;
    &lt;p&gt;Cold-start SFT is to fine-tune the DeepSeek-V3-Base base model on a collection of thousands of cold-start data. Without this step, the model has issues of poor readability and language mixing.&lt;/p&gt;
    &lt;p&gt;Reasoning-oriented RL trains a reasoning model on reasoning-only prompts with two types of rule-based rewards:&lt;/p&gt;
    &lt;p&gt;Format rewards: The model should wrap CoTs by &amp;lt;thinking&amp;gt; ... &amp;lt;/thinking&amp;gt; tokens.&lt;/p&gt;
    &lt;p&gt;Accuracy rewards: Whether the final answers are correct. The answer for math problems needs to be present in a specific format (e.g. in a box) to be verified reliably. For coding problems, a compiler is used to evaluate whether test cases pass.&lt;/p&gt;
    &lt;p&gt;Rejection-sampling + non-reasoning SFT utilizes new SFT data created by rejection sampling on the RL checkpoint of step 2, combined with non-reasoning supervised data from DeepSeek-V3 in domains like writing, factual QA, and self-cognition, to retrain DeepSeek-V3-Base.&lt;/p&gt;
    &lt;p&gt;Filter out CoTs with mixed languages, long paragraphs, and code blocks.&lt;/p&gt;
    &lt;p&gt;Include non-reasoning tasks using DeepSeek-V3 (DeepSeek-AI, 2024) pipeline.&lt;/p&gt;
    &lt;p&gt;For certain non-reasoning tasks, call DeepSeek-V3 to generate potential CoTs before answering the question by prompting. But for simpler queries like “hello”, CoT is not needed.&lt;/p&gt;
    &lt;p&gt;Then fine-tune the DeepSeek-V3-Base on the total 800k samples for 2 epochs.&lt;/p&gt;
    &lt;p&gt;The final RL stage trains the step 3 checkpoint on both reasoning and non-reasoning prompts, improving helpfulness, harmlessness and reasoning.&lt;/p&gt;
    &lt;p&gt;Interestingly the DeepSeek team showed that with pure RL, no SFT stage, it is still possible to learn advanced reasoning capabilities like reflection and backtracking (“Aha moment”). The model naturally learns to spend more thinking tokens during the RL training process to solve reasoning tasks. The “aha moment” can emerge, referring to the model reflecting on previous mistakes and then trying alternative approaches to correct them. Later, various open source efforts happened for replicating R1 results like Open-R1, SimpleRL-reason, and TinyZero, all based on Qwen models. These efforts also confirmed that pure RL leads to great performance on math problems, as well as the emergent “aha moment”.&lt;/p&gt;
    &lt;p&gt;The DeepSeek team also shared some of their unsuccessful attempts. They failed to use process reward model (PRM) as it is hard to define per-step rubrics or determine whether an intermediate step is correct, meanwhile making the training more vulnerable to reward hacking. The efforts on MCTS (Monte Carlo Tree Search) also failed due to the large search space for language model tokens, in comparison to, say, chess; and training the fine-grained value model used for guiding the search is very challenging too. Failed attempts often provide unique insights and we would like to encourage the research community to share more about what did not work out.&lt;/p&gt;
    &lt;p&gt;During the reasoning steps, certain intermediate steps can be reliably and accurately solved by executing code or running mathematical calculations. Offloading that part of reasoning components into an external code interpreter, as in PAL (Program-Aided Language Model; Gao et al. 2022) or Chain of Code (Li et al. 2023), can extend the capability of LLM with external tools, eliminating the need for LLMs to learn to execute code or function as calculators themselves. These code emulators, like in Chain of Code, can be augmented by an LLM such that if a standard code interpreter fails, we have the option of using LLM to execute that line of code instead. Using code to enhance reasoning steps are especially beneficial for mathematical problems, symbolic reasoning and algorithmic tasks. These unit tests may not exist as part of the coding questions, and in those cases, we can instruct the model to self-generate unit tests for it to test against to verify the solution (Shinn, et al. 2023).&lt;/p&gt;
    &lt;p&gt;ReAct (Reason+Act; Yao et al. 2023) combines the action of searching the Wikipedia API and generation of reasoning traces, such that reasoning paths can incorporate external knowledge.&lt;/p&gt;
    &lt;p&gt;o3 &amp;amp; o4-mini, recently released by OpenAI, are another two good examples where the reasoning process involves tool use like Web search, code execution and image processing. The team observed that large-scale reinforcement learning exhibits the same trend as in the GPT paradigm that “more compute = better performance”.&lt;/p&gt;
    &lt;p&gt;Deep learning models are often treated as black boxes and various interpretability methods have been proposed. Interpretability is useful for a couple reasons: first, it gives us an extra test to determine if the model is misaligned with its creators’ intent, or if it’s misbehaving in some way that we can’t tell by monitoring its actions. Second, it can help us determine whether the model is using a sound process to compute its answers. Chain of thought provides an especially convenient form of interpretability, as it makes the model’s internal process visible in natural language. This interpretability, however, rests on the assumption that the model truthfully describes its internal thought processes.&lt;/p&gt;
    &lt;p&gt;Recent work showed that monitoring CoT of reasoning models can effectively detect model misbehavior such as reward hacking, and can even enable a weaker model to monitor a stronger model (Baker et al. 2025). Increasing test time compute can also lead to improved adversarial robustness (Zaremba et al. 2025); this makes sense intuitively, because thinking for longer should be especially useful when the model is presented with an unusual input, such as an adversarial example or jailbreak attempt – it can use the extra thinking time to make sense of the strange situation it’s been presented with.&lt;/p&gt;
    &lt;p&gt;Intuitively, model CoTs could be biased due to lack of explicit training objectives aimed at encouraging faithful reasoning. Or when we fine-tune the model on human-written explanations, those human-written samples may contain mistakes. Thus we cannot by default assume CoT is always faithful .&lt;/p&gt;
    &lt;p&gt;Lanham et al. (2023) investigated several modes of CoT faithfulness failures by deliberately introducing mistakes into CoTs and measuring their impacts on the accuracy of a set of multiple choice tasks (e.g. AQuA, MMLU, ARC Challenge, TruthfulQA, HellaSwag):&lt;/p&gt;
    &lt;p&gt;Mistake 1 (Early answering): The model may form a conclusion prematurely before CoT is generated. This is tested by early truncating or inserting mistakes into CoT. Different tasks revealed varying task-specific dependencies on CoT effectiveness; some have evaluation performance sensitive to truncated CoT but some do not. Wang et al. (2023) did similar experiments but with more subtle mistakes related to bridging objects or language templates in the formation of CoT.&lt;/p&gt;
    &lt;p&gt;Mistake 2 (Uninformative tokens): Uninformative CoT tokens improve performance. This hypothesis is tested by replacing CoT with filler text (e.g. all periods) and this setup shows no accuracy increase and some tasks may suffer performance drop slightly when compared to no CoT.&lt;/p&gt;
    &lt;p&gt;Mistake 3 (Human-unreadable encoding): Relevant information is encoded in a way that is hard for humans to understand. Paraphrasing CoTs in an non-standard way did not degrade performance across datasets, suggesting accuracy gains do not rely on human-readable reasoning.&lt;/p&gt;
    &lt;p&gt;Interestingly, Lanham et al. suggests that for multiple choice questions, smaller models may not be capable enough of utilizing CoT well, whereas larger models may have been able to solve the tasks without CoT. This dependency on CoT reasoning, measured by the percent of obtaining the same answer with vs without CoT, does not always increase with model size on multiple choice questions, but does increase with model size on addition tasks, implying that thinking time matters more for complex reasoning tasks.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45395133</guid><pubDate>Sat, 27 Sep 2025 12:27:46 +0000</pubDate></item><item><title>A Postmark backdoor that’s downloading emails</title><link>https://www.koi.security/blog/postmark-mcp-npm-malicious-backdoor-email-theft</link><description>&lt;doc fingerprint="66d1851b9b70ae03"&gt;
  &lt;main&gt;
    &lt;p&gt;You know MCP servers, right? Those handy tools that let your AI assistant send emails, run database queries, basically handle all the tedious stuff we don't want to do manually anymore. Well, here's the thing not enough people talk about: we're giving these tools god-mode permissions. Tools built by people we've never met. People we have zero way to vet. And our AI assistants? We just... trust them. Completely.&lt;/p&gt;
    &lt;p&gt;Which brings me to why I'm writing this. &lt;code&gt;postmark-mcp&lt;/code&gt; - downloaded 1,500 times every single week, integrated into hundreds of developer workflows. Since version &lt;code&gt;1.0.16&lt;/code&gt;, it's been quietly copying every email to the developer's personal server. I'm talking password resets, invoices, internal memos, confidential documents - everything.&lt;/p&gt;
    &lt;p&gt;This is the worldâs first sighting of a real world malicious MCP server. The attack surface for endpoint supply chain attacks is slowly becoming the enterpriseâs biggest attack surface.&lt;/p&gt;
    &lt;head rend="h2"&gt;Soâ¦ What Did Our Risk Engine Detect?&lt;/head&gt;
    &lt;p&gt;Here's how this whole thing started. Our risk engine at Koi flagged &lt;code&gt;postmark-mcp&lt;/code&gt; when version &lt;code&gt;1.0.16&lt;/code&gt; introduced some suspicious behavior changes. When our researchers dug into it, like we do to any malware our risk engine flags, what we found was very disturbing.&lt;/p&gt;
    &lt;p&gt;On paper, this package looked perfect. The developer? Software engineer from Paris, using his real name, GitHub profile packed with legitimate projects. This wasn't some shady anonymous account with an anime avatar. This was a real person with a real reputation, someone you'd probably grab coffee with at a conference.&lt;/p&gt;
    &lt;p&gt;For 15 versions - FIFTEEN - the tool worked flawlessly. Developers were recommending it to their teams. "Hey, check out this great MCP server for Postmark integration." It became part of developerâs daily workflows, as trusted as their morning coffee.&lt;/p&gt;
    &lt;p&gt;Then version 1.0.16 dropped. Buried on line 231, our risk engine found this gem:&lt;/p&gt;
    &lt;p&gt;One single line. And boom - every email now has an unwanted passenger.&lt;/p&gt;
    &lt;p&gt;Here's the thing - there's a completely legitimate GitHub repo with the same name, officially maintained by Postmark (ActiveCampaign). The attacker took the legitimate code from their repo, added his malicious BCC line, and published it to npm under the same name. Classic impersonation.&lt;/p&gt;
    &lt;p&gt;Look, I get it. Life happens. Maybe the developer hit financial troubles. Maybe someone slid into his DMs with an offer he couldn't refuse. Hell, maybe he just woke up one day and thought "I wonder if I could get away with this." We'll never really know what flips that switch in someone's head - what makes a legitimate developer suddenly decide to backstab 1,500 users who trusted them.&lt;/p&gt;
    &lt;p&gt;But that's exactly the point. We CAN'T know. We can't predict it. And when it happens? Most of us won't even notice until it's way too late. For modern enterprises the problem is even more severe. As security teams focus on traditional threats and compliance frameworks, developers are independently adopting AI tools that operate completely outside established security perimeters. These MCP servers run with the same privileges as the AI assistants themselves - full email access, database connections, API permissions - yet they don't appear in any asset inventory, skip vendor risk assessments, and bypass every security control from DLP to email gateways. By the time someone realizes their AI assistant has been quietly BCCing emails to an external server for months, the damage is already catastrophic.&lt;/p&gt;
    &lt;head rend="h2"&gt;Lets Talk About the Impact&lt;/head&gt;
    &lt;p&gt;Okay, bear with me while I break down what we're actually looking at here.&lt;/p&gt;
    &lt;p&gt;You install an MCP server because you want your AI to handle emails, right? Seems reasonable. Saves time. Increases productivity. All that good stuff. But what you're actually doing is handing complete control of your entire email flow to someone you've never met.Â&lt;/p&gt;
    &lt;p&gt;We can only guestimate the impact:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;1,500 downloads every single week&lt;/item&gt;
      &lt;item&gt;Being conservative, maybe 20% are actively in use&lt;/item&gt;
      &lt;item&gt;That's about 300 organizations&lt;/item&gt;
      &lt;item&gt;Each one probably sending what, 10-50 emails daily?&lt;/item&gt;
      &lt;item&gt;We're talking about 3,000 to 15,000 emails EVERY DAY flowing straight to giftshop.club&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;And the truly messed up part? The developer didn't hack anything. Didn't exploit a zero-day. Didn't use some sophisticated attack vector. We literally handed him the keys, said "here, run this code with full permissions," and let our AI assistants use it hundreds of times a day. We did this to ourselves.&lt;/p&gt;
    &lt;p&gt;I've been doing security for years now, and this particular issue keeps me up at night. Somehow, we've all just accepted that it's totally normal to install tools from random strangers that can:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Send emails as us (with our full authority)&lt;/item&gt;
      &lt;item&gt;Access our databases (yeah, all of them)&lt;/item&gt;
      &lt;item&gt;Execute commands on our systems&lt;/item&gt;
      &lt;item&gt;Make API calls with our credentials&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;And once you install them? Your AI assistant just goes to town. No review process. No "hey, should I really send this email with a BCC to giftshop.club?" Just blind, automated execution. Over and over. Hundreds of times a day.&lt;/p&gt;
    &lt;p&gt;There's literally no security model here. No sandbox. No containment. Nothing. If the tool says "send this email," your AI sends it. If it says "oh, also copy everything to this random address," your AI does that too. No questions asked.&lt;/p&gt;
    &lt;p&gt;The postmark-mcp backdoor isn't sophisticated - it's embarrassingly simple. But it perfectly demonstrates how completely broken this whole setup is. One developer. One line of code. Thousands upon thousands of stolen emails.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Attack Timeline&lt;/head&gt;
    &lt;p&gt;Phase 1: Build a Legitimate Tool&lt;lb/&gt;Versions 1.0.0 through 1.0.15 work perfectly. Users trust the package.&lt;/p&gt;
    &lt;p&gt;Phase 2: Add One Line&lt;lb/&gt;Version 1.0.16 adds the BCC. Nothing else changes.&lt;/p&gt;
    &lt;p&gt;Phase 3: Profit&lt;lb/&gt;Sit back and watch emails containing passwords, API keys, financial data, and customer information flow into giftshop.club.&lt;/p&gt;
    &lt;p&gt;This pattern absolutely terrifies me. A tool can be completely legitimate for months. It gets battle-tested in production. It becomes essential to your workflow. Your team depends on it. And then one day - BAM - it's malware. By the time the backdoor activates, it's not some random package anymore. It's trusted infrastructure.&lt;/p&gt;
    &lt;p&gt;Oh, and &lt;code&gt;giftshop.club&lt;/code&gt;? Looks like it might be another one of the developer's side projects. But now it's collecting a very different kind of gift. Your emails are the gifts.&lt;/p&gt;
    &lt;p&gt;When we reached out to the developer for clarification, we got silence. No explanation. No denial. Nothing. But he did take action - just not the kind we hoped for. He promptly deleted the package from npm, trying to erase the evidence.&lt;/p&gt;
    &lt;p&gt;Here's the thing though: deleting a package from npm doesn't remove it from the machines where it's already installed. Every single one of those 1,500 weekly downloads? They're still compromised. Still sending BCCs to &lt;code&gt;giftshop.club&lt;/code&gt;. The developer knows this. He's banking on victims not realizing they're still infected even though the package has vanished from npm.&lt;/p&gt;
    &lt;head rend="h2"&gt;Why MCP's Entire Model Is Fundamentally Broken&lt;/head&gt;
    &lt;p&gt;Let me be really clear about something: MCP servers aren't like regular npm packages. These are tools specifically designed for AI assistants to use autonomously. That's the whole point.&lt;/p&gt;
    &lt;p&gt;When you install postmark-mcp, you're not just adding some dependency to your package.json. You're giving your AI assistant a tool it will use hundreds of times, automatically, without ever stopping to think "hmm, is something wrong here?"&lt;/p&gt;
    &lt;p&gt;Your AI can't detect that BCC field. It has no idea emails are being stolen. All it sees is a functioning email tool. Send email. Success. Send another email. Success. Meanwhile, every single message is being silently exfiltrated. Day after day. Week after week.&lt;/p&gt;
    &lt;p&gt;The postmark-mcp backdoor isn't just about one malicious developer or 1,500 weekly compromised installations. It's a warning shot about the MCP ecosystem itself.&lt;/p&gt;
    &lt;p&gt;We're handing god-mode permissions to tools built by people we don't know, can't verify, and have no reason to trust. These aren't just npm packages - they're direct pipelines into our most sensitive operations, automated by AI assistants that will use them thousands of times without question.&lt;/p&gt;
    &lt;p&gt;The backdoor is actively harvesting emails as you read this. We've reported it to npm, but here's the terrifying question: how many other MCP servers are already compromised? How would you even know?&lt;/p&gt;
    &lt;p&gt;At Koi, we detect these behavioral changes in packages because the MCP ecosystem has no built-in security model. When you're trusting anonymous developers with your AI's capabilities, you need verification, not faith. Our risk engine automatically caught this backdoor the moment version 1.0.16 introduced the BCC behavior - something no traditional security tool would flag. But detection is just the first step. Our supply chain gateway ensures that malicious packages like this never make it into your environment in the first place. It acts as a checkpoint between your developers and the wild west of npm, MCP servers, and browser extensions - blocking known threats, flagging suspicious updates, and requiring approval for packages that touch sensitive operations like email or database access. While everyone else is hoping their developers make good choices, we're making sure they can only choose from verified, continuously monitored options.&lt;/p&gt;
    &lt;p&gt;If you're using &lt;code&gt;postmark-mcp&lt;/code&gt; version &lt;code&gt;1.0.16&lt;/code&gt; or later, you're compromised. Remove it immediately and rotate any credentials that may have been exposed through email. But more importantly, audit every MCP server you're using. Ask yourself: do you actually know who built these tools you're trusting with everything?&lt;/p&gt;
    &lt;p&gt;Stay paranoid. With MCPs, paranoia is just good sense.&lt;/p&gt;
    &lt;head rend="h2"&gt;IOCs&lt;/head&gt;
    &lt;p&gt;Package: postmark-mcp (npm)&lt;lb/&gt;Malicious Version: 1.0.16 and later&lt;lb/&gt;Backdoor Email: phan@giftshop[.]club&lt;lb/&gt;Domain: giftshop[.]club&lt;/p&gt;
    &lt;p&gt;Detection:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Check for BCC headers to giftshop.club in email logs&lt;/item&gt;
      &lt;item&gt;Audit MCP server configurations for unexpected email parameters&lt;/item&gt;
      &lt;item&gt;Review npm packages for version 1.0.16+ of postmark-mcp&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Mitigation:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Immediately uninstall postmark-mcp&lt;/item&gt;
      &lt;item&gt;Rotate any credentials sent via email during the compromise period&lt;/item&gt;
      &lt;item&gt;Audit email logs for sensitive data that may have been exfiltrated&lt;/item&gt;
      &lt;item&gt;Report any confirmed breaches to appropriate authorities&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;â&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45395957</guid><pubDate>Sat, 27 Sep 2025 14:23:12 +0000</pubDate></item><item><title>SSH3: Faster and rich secure shell using HTTP/3</title><link>https://github.com/francoismichel/ssh3</link><description>&lt;doc fingerprint="3ff9f1d818322c91"&gt;
  &lt;main&gt;
    &lt;p&gt;Note&lt;/p&gt;
    &lt;p&gt;SSH3 is probably going to change its name. It is still the SSH Connection Protocol (RFC4254) running on top of HTTP/3 Extended connect, but the required changes are heavy and too distant from the philosophy of popular SSH implementations to be considered for integration. The specification draft has already been renamed ("Remote Terminals over HTTP/3"), but we need some time to come up with a nice permanent name.&lt;/p&gt;
    &lt;p&gt;SSH3 is a complete revisit of the SSH protocol, mapping its semantics on top of the HTTP mechanisms. It comes from our research work and we (researchers) recently proposed it as an Internet-Draft (draft-michel-remote-terminal-http3-00).&lt;/p&gt;
    &lt;p&gt;In a nutshell, SSH3 uses QUIC+TLS1.3 for secure channel establishment and the HTTP Authorization mechanisms for user authentication. Among others, SSH3 allows the following improvements:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Significantly faster session establishment&lt;/item&gt;
      &lt;item&gt;New HTTP authentication methods such as OAuth 2.0 and OpenID Connect in addition to classical SSH authentication&lt;/item&gt;
      &lt;item&gt;Robustness to port scanning attacks: your SSH3 server can be made invisible to other Internet users&lt;/item&gt;
      &lt;item&gt;UDP port forwarding in addition to classical TCP port forwarding&lt;/item&gt;
      &lt;item&gt;All the features allowed by the modern QUIC protocol: including connection migration (soon) and multipath connections&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Tip&lt;/p&gt;
    &lt;p&gt;Quickly want to get started ? Checkout how to install SSH3. You will learn to setup an SSH3 server and use the SSH3 client.&lt;/p&gt;
    &lt;p&gt;Faster for session establishment, not throughput ! SSH3 offers a significantly faster session establishment than SSHv2. Establishing a new session with SSHv2 can take 5 to 7 network round-trip times, which can easily be noticed by the user. SSH3 only needs 3 round-trip times. The keystroke latency in a running session is unchanged.&lt;/p&gt;
    &lt;p&gt;SSH3 (top) VS SSHv2 (bottom) session establishement with a 100ms ping towards the server.&lt;/p&gt;
    &lt;p&gt;While SSHv2 defines its own protocols for user authentication and secure channel establishment, SSH3 relies on the robust and time-tested mechanisms of TLS 1.3, QUIC and HTTP. These protocols are already extensively used to secure security-critical applications on the Internet such as e-commerce and Internet banking.&lt;/p&gt;
    &lt;p&gt;SSH3 already implements the common password-based and public-key (RSA and EdDSA/ed25519) authentication methods. It also supports new authentication methods such as OAuth 2.0 and allows logging in to your servers using your Google/Microsoft/Github accounts.&lt;/p&gt;
    &lt;p&gt;While SSH3 shows promise for faster session establishment, it is still at an early proof-of-concept stage. As with any new complex protocol, expert cryptographic review over an extended timeframe is required before reasonable security conclusions can be made.&lt;/p&gt;
    &lt;p&gt;We are developing SSH3 as an open source project to facilitate community feedback and analysis. However, we cannot yet endorse its appropriateness for production systems without further peer review. Please collaborate with us if you have relevant expertise!&lt;/p&gt;
    &lt;p&gt;Given the current prototype state, we advise testing SSH3 in sandboxed environments or private networks. Be aware that making experimental servers directly Internet-accessible could introduce risk before thorough security vetting.&lt;/p&gt;
    &lt;p&gt;While hiding servers behind secret paths has potential benefits, it does not negate the need for rigorous vulnerability analysis before entering production. We are excited by SSH3's future possibilities but encourage additional scrutiny first.&lt;/p&gt;
    &lt;head rend="h2"&gt;🥷 Your SSH3 public server can be hidden&lt;/head&gt;
    &lt;p&gt;Using SSH3, you can avoid the usual stress of scanning and dictionary attacks against your SSH server. Similarly to your secret Google Drive documents, your SSH3 server can be hidden behind a secret link and only answer to authentication attempts that made an HTTP request to this specific link, like the following:&lt;/p&gt;
    &lt;code&gt;ssh3-server -bind 192.0.2.0:443 -url-path &amp;lt;my-long-secret&amp;gt;
&lt;/code&gt;
    &lt;p&gt;By replacing &lt;code&gt;&amp;lt;my-long-secret&amp;gt;&lt;/code&gt; by, let's say, the random value &lt;code&gt;M3MzkxYWMxMjYxMjc5YzJkODZiMTAyMjU&lt;/code&gt;, your SSH3 server will only answer to SSH3 connection attempts made to the URL &lt;code&gt;https://192.0.2.0:443/M3MzkxYWMxMjYxMjc5YzJkODZiMTAyMjU&lt;/code&gt; and it will respond a &lt;code&gt;404 Not Found&lt;/code&gt; to other requests. Attackers and crawlers on the Internet can therefore not detect the presence of your SSH3 server. They will only see a simple web server answering 404 status codes to every request.&lt;/p&gt;
    &lt;p&gt;NOTE WELL: placing your SSH3 server behind a secret URL may reduce the impact of scanning attacks but will and must never replace classical authentication mechanisms. The secret link should only be used to avoid your host to be discovered. Knowing the secret URL should not grant someone access to your server. Use the classical authentication mechanisms described above to protect your server.&lt;/p&gt;
    &lt;p&gt;SSH3 provides new feature that could not be provided by the SSHv2 protocol.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;UDP port forwarding: you can now access your QUIC, DNS, RTP or any UDP-based server that are only reachable from your SSH3 host. UDP packets are forwarded using QUIC datagrams.&lt;/item&gt;
      &lt;item&gt;X.509 certificates: you can now use your classical HTTPS certificates to authenticate your SSH3 server. This mechanism is more secure than the classical SSHv2 host key mechanism. Certificates can be obtained easily using LetsEncrypt for instance.&lt;/item&gt;
      &lt;item&gt;Hiding your server behind a secret link.&lt;/item&gt;
      &lt;item&gt;Keyless secure user authentication using OpenID Connect. You can connect to your SSH3 server using the SSO of your company or your Google/Github account, and you don't need to copy the public keys of your users anymore.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This SSH3 implementation already provides many of the popular features of OpenSSH, so if you are used to OpenSSH, the process of adopting SSH3 will be smooth. Here is a list of some OpenSSH features that SSH3 also implements:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Parses &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt;on the server&lt;/item&gt;
      &lt;item&gt;Certificate-based server authentication&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;known_hosts&lt;/code&gt;mechanism when X.509 certificates are not used.&lt;/item&gt;
      &lt;item&gt;Automatically using the &lt;code&gt;ssh-agent&lt;/code&gt;for public key authentication&lt;/item&gt;
      &lt;item&gt;SSH agent forwarding to use your local keys on your remote server&lt;/item&gt;
      &lt;item&gt;Direct TCP port forwarding (reverse port forwarding will be implemented in the future)&lt;/item&gt;
      &lt;item&gt;Proxy jump (see the &lt;code&gt;-proxy-jump&lt;/code&gt;parameter). If A is an SSH3 client and B and C are both SSH3 servers, you can connect from A to C using B as a gateway/proxy. The proxy uses UDP forwarding to forward the QUIC packets from A to C, so B cannot decrypt the traffic A&amp;lt;-&amp;gt;C SSH3 traffic.&lt;/item&gt;
      &lt;item&gt;Parses &lt;code&gt;~/.ssh/config&lt;/code&gt;on the client and handles the&lt;code&gt;Hostname&lt;/code&gt;,&lt;code&gt;User&lt;/code&gt;,&lt;code&gt;Port&lt;/code&gt;and&lt;code&gt;IdentityFile&lt;/code&gt;config options (the other options are currently ignored). Also parses a new&lt;code&gt;UDPProxyJump&lt;/code&gt;that behaves similarly to OpenSSH's&lt;code&gt;ProxyJump&lt;/code&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Help us progress SSH3 responsibly! We welcome capable security researchers to review our codebase and provide feedback. Please also connect us with relevant standards bodies to potentially advance SSH3 through the formal IETF/IRTF processes over time.&lt;/p&gt;
    &lt;p&gt;With collaborative assistance, we hope to iteratively improve SSH3 towards safe production readiness. But we cannot credibly make definitive security claims without evidence of extensive expert cryptographic review and adoption by respected security authorities. Let's work together to realize SSH3's possibilities!&lt;/p&gt;
    &lt;p&gt;You can either download the last release binaries, install it using &lt;code&gt;go install&lt;/code&gt; or generate these binaries yourself by compiling the code from source.&lt;/p&gt;
    &lt;p&gt;Tip&lt;/p&gt;
    &lt;p&gt;SSH3 is still experimental and is the fruit of a research work. If you are afraid of deploying publicly a new SSH3 server, you can use the secret path feature of SSH3 to hide it behing a secret URL.&lt;/p&gt;
    &lt;code&gt;go install github.com/francoismichel/ssh3/cmd/...@latest&lt;/code&gt;
    &lt;p&gt;You need a recent Golang version to do this. Downloading the source code and compiling the binaries can be done with the following steps:&lt;/p&gt;
    &lt;code&gt;git clone https://github.com/francoismichel/ssh3    # clone the repo
cd ssh3
go build -o ssh3 cmd/ssh3/main.go                        # build the client
CGO_ENABLED=1 go build -o ssh3-server cmd/ssh3-server/main.go   # build the server, requires having gcc installed&lt;/code&gt;
    &lt;p&gt;If you have root/sudo privileges and you want to make ssh3 accessible to all you users, you can then directly copy the binaries to &lt;code&gt;/usr/bin&lt;/code&gt;:&lt;/p&gt;
    &lt;code&gt;cp ssh3 /usr/bin/ &amp;amp;&amp;amp; cp ssh3-server /usr/bin&lt;/code&gt;
    &lt;p&gt;Otherwise, you can simply add the executables to your &lt;code&gt;PATH&lt;/code&gt; environment variable by adding
the following line at the end of your &lt;code&gt;.bashrc&lt;/code&gt; or equivalent:&lt;/p&gt;
    &lt;code&gt;export PATH=$PATH:/path/to/the/ssh3/directory&lt;/code&gt;
    &lt;p&gt;Before connecting to your host, you need to deploy an SSH3 server on it. There is currently no SSH3 daemon, so right now, you will have to run the &lt;code&gt;ssh3-server&lt;/code&gt; executable in background
using &lt;code&gt;screen&lt;/code&gt; or a similar utility.&lt;/p&gt;
    &lt;p&gt;Note&lt;/p&gt;
    &lt;p&gt;As SSH3 runs on top of HTTP/3, a server needs an X.509 certificate and its corresponding private key. Public certificates can be generated automatically for your public domain name through Let's Encrypt using the &lt;code&gt;-generate-public-cert&lt;/code&gt; command-line argument on the server. If you do not want to generate a certificate signed by a real certificate authority or if you don't have any public domain name, you can generate a self-signed one using the &lt;code&gt;-generate-selfsigned-cert&lt;/code&gt; command-line argument. Self-signed certificates provide you with similar security guarantees to SSHv2's host keys mechanism, with the same security issue: you may be vulnerable to machine-in-the-middle attacks during your first connection to your server. Using real certificates signed by public certificate authorities such as Let's Encrypt avoids this issue.&lt;/p&gt;
    &lt;p&gt;Here is the usage of the &lt;code&gt;ssh3-server&lt;/code&gt; executable:&lt;/p&gt;
    &lt;code&gt;Usage of ./ssh3-server:
  -bind string
        the address:port pair to listen to, e.g. 0.0.0.0:443 (default "[::]:443")
  -cert string
        the filename of the server certificate (or fullchain) (default "./cert.pem")
  -key string
        the filename of the certificate private key (default "./priv.key")
  -enable-password-login
        if set, enable password authentication (disabled by default)
  -generate-public-cert value
        Automatically produce and use a valid public certificate usingLet's Encrypt for the provided domain name. The flag can be used several times to generate several certificates.If certificates have already been generated previously using this flag, they will simply be reused without being regenerated. The public certificates are automatically renewed as long as the server is running. Automatically-generated IP public certificates are not available yet.
  -generate-selfsigned-cert
        if set, generates a self-self-signed cerificate and key that will be stored at the paths indicated by the -cert and -key args (they must not already exist)
  -url-path string
        the secret URL path on which the ssh3 server listens (default "/ssh3-term")
  -v    verbose mode, if set
  -version
        if set, displays the software version on standard output and exit
&lt;/code&gt;
    &lt;p&gt;The following command starts a public SSH3 server on port 443 with a valid Let's Encrypt public certificate for domain &lt;code&gt;my-domain.example.org&lt;/code&gt; and answers to new sessions requests querying the &lt;code&gt;/ssh3&lt;/code&gt; URL path:&lt;/p&gt;
    &lt;code&gt;ssh3-server -generate-public-cert my-domain.example.org -url-path /ssh3
&lt;/code&gt;
    &lt;p&gt;If you don't have a public domain name (i.e. only an IP address), you can either use an existing certificate for your IP address using the &lt;code&gt;-cert&lt;/code&gt; and &lt;code&gt;-key&lt;/code&gt; arguments or generate a self-signed certificate using the
&lt;code&gt;-generate-selfsigned-cert&lt;/code&gt; argument.&lt;/p&gt;
    &lt;p&gt;If you have existing certificates and keys, you can run the server as follows to use them=&lt;/p&gt;
    &lt;code&gt;ssh3-server -cert /path/to/cert/or/fullchain -key /path/to/cert/private/key -url-path /ssh3
&lt;/code&gt;
    &lt;p&gt;Note&lt;/p&gt;
    &lt;p&gt;Similarly to OpenSSH, the server must be run with root priviledges to log in as other users.&lt;/p&gt;
    &lt;p&gt;By default, the SSH3 server will look for identities in the &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; and &lt;code&gt;~/.ssh3/authorized_identities&lt;/code&gt; files for each user.
&lt;code&gt;~/.ssh3/authorized_identities&lt;/code&gt; allows new identities such as OpenID Connect (&lt;code&gt;oidc&lt;/code&gt;) discussed below.
Popular key types such as &lt;code&gt;rsa&lt;/code&gt;, &lt;code&gt;ed25519&lt;/code&gt; and keys in the OpenSSH format can be used.&lt;/p&gt;
    &lt;p&gt;Once you have an SSH3 server running, you can connect to it using the SSH3 client similarly to what you did with your classical SSHv2 tool.&lt;/p&gt;
    &lt;p&gt;Here is the usage of the &lt;code&gt;ssh3&lt;/code&gt; executable:&lt;/p&gt;
    &lt;code&gt;Usage of ssh3:
  -pubkey-for-agent string
        if set, use an agent key whose public key matches the one in the specified path
  -privkey string
        private key file
  -use-password
        if set, do classical password authentication
  -forward-agent
        if set, forwards ssh agent to be used with sshv2 connections on the remote host
  -forward-tcp string
        if set, take a localport/remoteip@remoteport forwarding localhost@localport towards remoteip@remoteport
  -forward-udp string
        if set, take a localport/remoteip@remoteport forwarding localhost@localport towards remoteip@remoteport
  -proxy-jump string
    	if set, performs a proxy jump using the specified remote host as proxy
  -insecure
        if set, skip server certificate verification
  -keylog string
        Write QUIC TLS keys and master secret in the specified keylog file: only for debugging purpose
  -use-oidc string
        if set, force the use of OpenID Connect with the specified issuer url as parameter
  -oidc-config string
        OpenID Connect json config file containing the "client_id" and "client_secret" fields needed for most identity providers
  -do-pkce
        if set, perform PKCE challenge-response with oidc
  -v    if set, enable verbose mode
&lt;/code&gt;
    &lt;p&gt;You can connect to your SSH3 server at my-server.example.org listening on &lt;code&gt;/my-secret-path&lt;/code&gt; using the private key located in &lt;code&gt;~/.ssh/id_rsa&lt;/code&gt; with the following command:&lt;/p&gt;
    &lt;code&gt;  ssh3 -privkey ~/.ssh/id_rsa username@my-server.example.org/my-secret-path
&lt;/code&gt;
    &lt;p&gt;The SSH3 client works with the OpenSSH agent and uses the classical &lt;code&gt;SSH_AUTH_SOCK&lt;/code&gt; environment variable to
communicate with this agent. Similarly to OpenSSH, SSH3 will list the keys provided by the SSH agent
and connect using the first key listen by the agent by default.
If you want to specify a specific key to use with the agent, you can either specify the private key
directly with the &lt;code&gt;-privkey&lt;/code&gt; argument like above, or specify the corresponding public key using the
&lt;code&gt;-pubkey-for-agent&lt;/code&gt; argument. This allows you to authenticate in situations where only the agent has
a direct access to the private key but you only have access to the public key.&lt;/p&gt;
    &lt;p&gt;While discouraged, you can connect to your server using passwords (if explicitly enabled on the &lt;code&gt;ssh3-server&lt;/code&gt;)
with the following command:&lt;/p&gt;
    &lt;code&gt;  ssh3 -use-password username@my-server.example.org/my-secret-path
&lt;/code&gt;
    &lt;p&gt;&lt;code&gt;ssh3&lt;/code&gt; parses your OpenSSH config. Currently, it only handles the &lt;code&gt;Hostname&lt;/code&gt;; &lt;code&gt;User&lt;/code&gt;, &lt;code&gt;Port&lt;/code&gt; and &lt;code&gt;IdentityFile&lt;/code&gt; OpenSSH options.
It also adds new option only used by SSH3, such as &lt;code&gt;URLPath&lt;/code&gt; or &lt;code&gt;UDPProxyJump&lt;/code&gt;. &lt;code&gt;URLPath&lt;/code&gt; allows you to omit the secret URL path in your
SSH3 command. &lt;code&gt;UDPProxyJump&lt;/code&gt; allows you to perform SSH3 (#proxy-jump)[Proxy Jump] and has the same meaning as the &lt;code&gt;-proxy-jump&lt;/code&gt; command-line argument.
Let's say you have the following lines in your OpenSSH config located in &lt;code&gt;~/.ssh/config&lt;/code&gt; :&lt;/p&gt;
    &lt;code&gt;IgnoreUnknown URLPath
Host my-server
  HostName 192.0.2.0
  User username
  IdentityFile ~/.ssh/id_rsa
  URLPath /my-secret-path
&lt;/code&gt;
    &lt;p&gt;Similarly to what OpenSSH does, the following &lt;code&gt;ssh3&lt;/code&gt; command will connect you to the SSH3 server running on 192.0.2.0 on UDP port 443 using public key authentication with the private key located in &lt;code&gt;.ssh/id_rsa&lt;/code&gt; :&lt;/p&gt;
    &lt;code&gt;  ssh3 my-server/my-secret-path
&lt;/code&gt;
    &lt;p&gt;If you do not want a config-based utilization of SSH3, you can read the sections below to see how to use the CLI parameters of &lt;code&gt;ssh3&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;This feature allows you to connect using an external identity provider such as the one of your company or any other provider that implements the OpenID Connect standard, such as Google Identity, Github or Microsoft Entra. The authentication flow is illustrated in the GIF below.&lt;/p&gt;
    &lt;p&gt;The way it connects to your identity provider is configured in a file named &lt;code&gt;~/.ssh3/oidc_config.json&lt;/code&gt;.
Below is an example &lt;code&gt;config.json&lt;/code&gt; file for use with a Google account. This configuration file is an array
and can contain several identity providers configurations.&lt;/p&gt;
    &lt;code&gt;[
    {
        "issuer_url": "https://accounts.google.com",
        "client_id": "&amp;lt;your_client_id&amp;gt;",
        "client_secret": "&amp;lt;your_client_secret&amp;gt;"
    }
]&lt;/code&gt;
    &lt;p&gt;This might change in the future, but currently, to make this feature work with your Google account, you will need to setup a new experimental application in your Google Cloud console and add your email as authorized users. This will provide you with a &lt;code&gt;client_id&lt;/code&gt; and a &lt;code&gt;client_secret&lt;/code&gt; that you can then set in your &lt;code&gt;~/.ssh3/oidc_config.json&lt;/code&gt;. On the server side, you just have to add the following line in your &lt;code&gt;~/.ssh3/authorized_identities&lt;/code&gt;:&lt;/p&gt;
    &lt;code&gt;oidc &amp;lt;client_id&amp;gt; https://accounts.google.com &amp;lt;email&amp;gt;
&lt;/code&gt;
    &lt;p&gt;We currently consider removing the need of setting the client_id in the &lt;code&gt;authorized_identities&lt;/code&gt; file in the future.&lt;/p&gt;
    &lt;p&gt;It is often the case that some SSH hosts can only be accessed through a gateway. SSH3 allows you to perform a Proxy Jump similarly to what is proposed by OpenSSH. You can connect from A to C using B as a gateway/proxy. B and C must both be running a valid SSH3 server. This works by establishing UDP port forwarding on B to forward QUIC packets from A to C. The connection from A to C is therefore fully end-to-end and B cannot decrypt or alter the SSH3 traffic between A and C.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45395991</guid><pubDate>Sat, 27 Sep 2025 14:27:10 +0000</pubDate></item><item><title>マリウス – Thoughts on Cloudflare</title><link>https://xn--gckvb8fzb.com/thoughts-on-cloudflare/</link><description>&lt;doc fingerprint="a512af101928b8bb"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Thoughts on Cloudflare&lt;/head&gt;
    &lt;p&gt;Thoughts on its role and impact on the web’s landscape.&lt;/p&gt;
    &lt;p&gt;As many of you know, I am skeptical of the concept of relying on someone else’s computer, especially when a service grows to the point where it becomes an oligopoly, or worse, a monopoly. Cloudflare is, in my view, on track to becoming precisely that. As a result, I would argue they are a net negative for the internet and society at large.&lt;/p&gt;
    &lt;p&gt;Besides the frustration they cause to VPN and Tor users through incessant captchas, Cloudflare’s infamous one more step pages have dulled users' vigilance, making them more vulnerable to even the most blatant malware attacks.&lt;/p&gt;
    &lt;p&gt;Moreover, under the guise of iNnOvAtIvE cLoUd InFrAsTrUcTuRe, Cloudflare not only enable phishermen to phish and tunnelers to tunnel:&lt;/p&gt;
    &lt;p&gt;Ironically, the very security measures they sell can be bypassed by bad actors using Cloudflare itself. It’s a similar irony that their systems, designed to shield clients from threats, sometimes struggle to defend their own infrastructure.&lt;/p&gt;
    &lt;p&gt;Incidents like these highlight not only weaknesses in Cloudflare’s offerings but a broader issue: Cloudflare has become a highly attractive target for state-sponsored attacks, suffering from recurring breaches. Their sheer scale, considering that they are serving a substantial portion of the internet, means that an outage or compromise could have widespread, costly consequences.&lt;/p&gt;
    &lt;p&gt;Another major concern is, that in many cases, Cloudflare acts as a man-in-the-middle SSL-terminating proxy between users and websites. They have visibility into everything users do on these sites, from browsing habits to submitting sensitive personal information. This makes Cloudflare a prime target for any actor seeking to harvest massive amounts of data. The Cloudbleed incident clearly demonstrated the risks:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Tavis Ormandy posted the issue on his team’s issue tracker and said that he informed Cloudflare of the problem on February 17. In his own proof-of-concept attack he got a Cloudflare server to return “private messages from major dating sites, full messages from a well-known chat service, online password manager data, frames from adult video sites, hotel bookings. We’re talking full https requests, client IP addresses, full responses, cookies, passwords, keys, data, everything.”&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;I stand with Hugo in considering Cloudflare harmful and recommend that websites avoid relying on it whenever possible. Cloudflare’s origins in Project Honeypot, and its early ties to the US Department of Homeland Security, are troubling to say the least:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Five years later Mr Prince was doing a Master of Business Administration (MBA) at Harvard Business School, and the project was far from his mind, when he got an unexpected phone call from the US Department of Homeland Security asking him about the information he had gathered on attacks.&lt;/p&gt;
      &lt;p&gt;Mr Prince recalls: “They said ‘do you have any idea how valuable the data you have is? Is there any way you would sell us that data?’. “I added up the cost of running it, multiplied it by ten, and said ‘how about $20,000 (Â£15,000)?’.&lt;/p&gt;
      &lt;p&gt;“It felt like a lot of money. That cheque showed up so fast.”&lt;/p&gt;
      &lt;p&gt;Mr Prince, who has a degree in computer science, adds: “I was telling the story to Michelle Zatlyn, one of my classmates, and she said, ‘if they’ll pay for it, other people will pay for it’.”&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Furthermore, Cloudflare has been criticized as an employer, reportedly fostering a hire-and-fire culture among its sales staff. Even its CEO has attracted controversy, such as suing neighbors over their dogs following objections to his plans to build an 11,300-square-foot estate. Plans that required lobbying to overcome local zoning laws.&lt;/p&gt;
    &lt;p&gt;Given all this, it is time to reconsider Cloudflare’s dominant market position, controlling over 20% of the internet. Cloudflare has shown a pattern of equivocating on politically sensitive issues, perhaps to maintain its status as the world’s largest botnet operator, and they appear to defend “free speech” when it is profitable, but not when it isn’t. Cloudflare has also been accused of providing services to terrorists and drug traffickers while skirting international sanctions. Meanwhile, open-source developers have been harshly punished for less.&lt;/p&gt;
    &lt;p&gt;Despite the brilliance of many engineers at Cloudflare, they are not infallible. They, too, experience recurring downtime and preventable mistakes. Cloudflare, like any other company, puts its pants on one leg at a time. There is no reason it should be treated as the default, or sole, solution for content delivery.&lt;/p&gt;
    &lt;head rend="h2"&gt;So what can I do?&lt;/head&gt;
    &lt;p&gt;If running your own Varnish instances isn’t feasible, and you need a global CDN, consider these alternatives to support competition and balance the scales:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;BlazingCDN&lt;/item&gt;
      &lt;item&gt;BunnyCDN&lt;/item&gt;
      &lt;item&gt;CDN77&lt;/item&gt;
      &lt;item&gt;CDNetworks&lt;/item&gt;
      &lt;item&gt;CacheFly&lt;/item&gt;
      &lt;item&gt;DigitalOcean Spaces&lt;/item&gt;
      &lt;item&gt;Fastly CDN&lt;/item&gt;
      &lt;item&gt;KeyCDN&lt;/item&gt;
      &lt;item&gt;Netlify Edge&lt;/item&gt;
      &lt;item&gt;Vultr CDN&lt;/item&gt;
      &lt;item&gt;&amp;amp;mldr; or just any other cloud provider’s CDN&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Info: Some hosting services might use Cloudflare without disclosing it openly/obviously, e.g. Render. Make sure to check whatever hosting service that you’re using whether it employs Cloudflare’s infrastructure in the background.&lt;/p&gt;
    &lt;p&gt;If you currently have domains registered with Cloudflare, move them elsewhere immediately. As a general rule, never allow your CDN or hosting provider to also hold your domain registrations. Should the hosting provider cut you off, you’ll want the freedom to quickly redirect your domains to another provider without disruption.&lt;/p&gt;
    &lt;p&gt;For more info, visit the cloud and domains sections of the infrastructure page.&lt;/p&gt;
    &lt;p&gt;If, however, you’re running Cloudflare’s more advanced service offers, like Cloudflare Workers, you will likely have a harder time moving away. While some frameworks support different providers, like Vercel, Fastly, AWS, Azure, or Akamai, it is likely that most simple implementations will be heavily reliant on Cloudflare’s architecture. There’s unfortunately no easy path out of this, other than rewriting the specific components and infrastructure deployment configuration to support a different provider.&lt;/p&gt;
    &lt;p&gt;If you wish to identify or avoid websites that make use of Cloudflare, you can use this browser extension for Firefox and Chrome (ironically created by Cloudflare). Beware that these extensions might transfer information about your browsing behavior to Cloudflare. Configure them to be active only when manually clicked on specific websites that you want investigate. There are third-party alternatives like this and this, as well as older/unmaintained extensions like this and this.&lt;/p&gt;
    &lt;p&gt;PS: Decentraleyes is a solid option to enhance browsing privacy; check the browser section for other helpful extensions.&lt;/p&gt;
    &lt;p&gt;All that said, you might think “Come on, Cloudflare isn’t that bad!”, and you’d be right: Every now and then, they do some good. *smirk* Still, we have to recognize that Cloudflare has grown into a cornerstone of modern digital infrastructure, which is a role that could eventually render it too big too fail, to borrow a term from the financial world.&lt;/p&gt;
    &lt;p&gt;Footnote: The artwork was generated using AI and further botched by me using the greatest image manipulation program.&lt;/p&gt;
    &lt;p&gt;Enjoyed this? Please consider supporting my work.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45396234</guid><pubDate>Sat, 27 Sep 2025 14:55:29 +0000</pubDate></item><item><title>A WebGL game where you deliver messages on a tiny planet</title><link>https://messenger.abeto.co/</link><guid isPermaLink="false">https://news.ycombinator.com/item?id=45396441</guid><pubDate>Sat, 27 Sep 2025 15:17:30 +0000</pubDate></item><item><title>AI model trapped in a Raspberry Pi</title><link>https://blog.adafruit.com/2025/09/26/ai-model-trapped-in-raspberry-pi-piday-raspberrypi/</link><description></description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45396624</guid><pubDate>Sat, 27 Sep 2025 15:34:55 +0000</pubDate></item><item><title>Norway to Monitor Airborne Radioactivity in Svalbard</title><link>https://www.highnorthnews.com/en/norway-monitor-airborne-radioactivity-svalbard</link><description>&lt;doc fingerprint="5c5cd295d846b7f9"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Norway to Monitor Airborne Radioactivity in Svalbard&lt;/head&gt;
    &lt;p&gt;From October 1st, the Norwegian Radiation and Nuclear Safety Authority will take over the operations of an air filter station near Ny-Ålesund in Svalbard. “This will be particularly important for nuclear preparedness in the north,” says section leader in the agency.&lt;/p&gt;
    &lt;p&gt;The Finnish Meteorological Institute is to discontinue its air monitoring in Svalbard, and on October 1st, the Norwegian Radiation and Nuclear Safety Authority (DSA) will take over ownership of its air sampling equipment.&lt;/p&gt;
    &lt;p&gt;The purpose is to strengthen Norway's ability to monitor airborne radioactivity and increase vigilance in the High North.&lt;/p&gt;
    &lt;p&gt;"This will be an important supplement to our already existing network of air filter stations in Norway, and particularly important for nuclear preparedness in the North," says Markus Ottosen, section leader for the High North at the DSA.&lt;/p&gt;
    &lt;p&gt;"The stations are used to monitor radioactivity in the air, and to assess the size and composition in the event of possible accidents and incidents," Ottosen continues.&lt;/p&gt;
    &lt;p&gt;The relevant station near Ny-Ålesund has been in operation since 2000.&lt;/p&gt;
    &lt;p&gt;The DSA also has access to data from a similar station on Platåfjellet outside Longyearbyen. This is operated by the research institute NORSAR on behalf of the Comprehensive Nuclear-Test-Ban Treaty Organization.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45396641</guid><pubDate>Sat, 27 Sep 2025 15:35:59 +0000</pubDate></item><item><title>Greenland is a beautiful nightmare</title><link>https://matduggan.com/greenland-is-a-beautiful-nightmare/</link><description>&lt;doc fingerprint="62401b4723e504d9"&gt;
  &lt;main&gt;
    &lt;p&gt;Greenland is a complicated topic here in Denmark. The former colony that is still treated a bit like a colony is something that inspires a lot of emotions. Greenland has been subjected to a lot of unethical experiments by Denmark, from taking their kids to wild experiments in criminal justice. But there is also a genuine pride a lot of people have here for the place and you run into Danes who grew up there more often than I would have guessed.&lt;/p&gt;
    &lt;p&gt;When the idea of going to Greenland was introduced to me, I was curious. Having lived in Denmark for awhile, you hear a lot about the former colony and its 55,000 residents. We were invited by a family that my wife was close with growing up and is Danish. They wanted to take their father back to see the place he had spend some time in during his 20s and had left quite an impression. A few drinks in, I said "absolutely let's do it", not realizing we had already committed to going and I had missed the text message chain.&lt;/p&gt;
    &lt;p&gt;A few weeks before I went, I realized "I don't know anything about Greenland" and started to watch some YouTube videos. It was about this time when I started to get a pit in my stomach, the "oh god I think I've made a huge mistake" feeling I'm painfully familiar with after a career in tech. Greenland appeared to have roughly 9 people living there and maybe 5 things to look at. Even professional travel personalities seemed to be scraping the bottom of the barrel. "There's the grocery store again!" they would point out as they slipped down the snowy roads. I couldn't tell any difference between different towns in the country.&lt;/p&gt;
    &lt;p&gt;It reminded me a lot of driving through Indiana. For those not in the US, Indiana is a state in the US famous for being a state one must drive through in order to get somewhere better. If you live in Michigan, a good state and want to go to Illinois, another good state, one must pass through Indiana, a blank state. Because of this little strip here, you often found yourself passing through this place.&lt;/p&gt;
    &lt;p&gt;Driving through Indiana isn't bad, it's just an empty void. It's like a time machine back to the 90s when people still smoke in restaurants but also there's nothing that sticks out about it. There is nothing distinct about Indiana, it's just a place full of people who got too tired on their way to somewhere better and decided "this is good enough". The difference is that Greenland is very hard to get to, as I was about to learn.&lt;/p&gt;
    &lt;p&gt;Finally the day arrived. Me, my wife, daughter, 4 other children and 6 other adults all came to the Copenhagen Airport and held up a gate agent for what felt like an hour to slowly process all of our documents. Meanwhile, I nursed a creeping paranoia that I'd be treated as some sort of American spy, given my government's recent hobby of threatening to purchase entire countries like they're vintage motorcycles on Craigslist.&lt;/p&gt;
    &lt;p&gt;The 5 hour flight is uneventful, the children are beautifully behaved and I begin to think "well this seems ok!" like the idiot I am. As I can look down and see the airport, the pilot comes on and informs us that there is too much fog to land safely. Surely fog cannot stop a modern aircraft full of all these dials and screens I think, foolishly. We are informed there is enough fuel to circle the airport for 5 hours to wait for the fog to lift.&lt;/p&gt;
    &lt;p&gt;What followed was three hours of flying in lazy circles, like a very expensive, very slow merry-go-round. After the allotted time, we are informed that we must fly to Iceland to refuel and then we will be returning to Denmark. After a total of 15 hours in the air we will be going back to exactly where we started, to do the entire thing again. We were obviously upset at this turn of events, but I noticed the native Greenlandic folks seemed not surprised at this turn of events. As I later learned, this happens all the time.&lt;/p&gt;
    &lt;p&gt;The native Greenlanders on board seemed utterly unsurprised by this development, displaying the kind of resigned familiarity that suggested this was Tuesday for them. I began wondering if I could just pretend Iceland was Greenland—surely my family wouldn't notice the difference? But the pilot, apparently reading my mind, announced that no one would be disembarking in Iceland. It felt oddly authoritarian, like being grounded by an airline, as if they knew we'd all just wander off into Reykjavik and call it close enough.&lt;/p&gt;
    &lt;p&gt;We crash out in a airport hotel 20 minutes from our apartment after 15 hours in the air and tons of CO2 emissions only to wake up the next day to start again. This time, I notice that all of the people are asking for (and receiving) free beer from the crew that they are stashing in their bags. It turns out soda and beer, really anything that needs to be imported, is pretty expensive in Greenland. The complimentary drinks are there to be kept for later.&lt;/p&gt;
    &lt;p&gt;Finally we land. The first thing you notice when you land in Greenland is there are no trees or grass. There is snow and then there is exposed rock. The exterior of the airport is metal but the inside is wood, which is strange because again there are no trees. This would end up being a theme, where buildings representing Denmark were made out of lots of wood, almost to ensure that you understood they weren't from here. We ended up piling all of our stuff into a bus and heading for the hotel in Nuuk.&lt;/p&gt;
    &lt;head rend="h3"&gt;Nuuk&lt;/head&gt;
    &lt;p&gt;Nuuk is the capital of Greenland and your introduction to the incredible calm of the Greenlandic people. I have never met a less stressed out group of humans in my life. Nobody is really rushing anywhere, it's all pretty quiet and calm. The air is cold and crisp with lots of kids playing outside and just generally enjoying life.&lt;/p&gt;
    &lt;p&gt;The city itself sits in a landscape so dramatically inhospitable it makes the surface of Mars look cozy. Walking through the local mall, half the shops sell gear designed to help you survive what appears to be the apocalypse. Yet somehow, there's traffic. Actual traffic jams in a place where you can walk from one end to the other in twenty minutes. It's like being stuck behind a school bus in your own driveway.&lt;/p&gt;
    &lt;p&gt;To put this map into some perspective, it is only six kilometers from the sorta furthest tip to the airport.&lt;/p&gt;
    &lt;p&gt;But riding the bus around Nuuk was a peaceful experience that lets you see pretty much the entire city without needing to book a tour or spend a lot of money. We went to Katuaq, a cultural center with a cafe and a movie theater that was absolutely delicious food.&lt;/p&gt;
    &lt;p&gt;But again even riding the bus around it is impossible to escape the feeling that this is a fundamentally hostile to human life place. The sun is bright and during the summer its pretty hot, with my skin feeling like it was starting the burn pretty much the second it was exposed to the light. It's hard to even dress for, with layers of sunscreen, bug spray and then something warm on top if you suddenly got cold.&lt;/p&gt;
    &lt;p&gt;The sun, meanwhile, has apparently forgotten how to set, turning our hotel rooms into solar ovens. You wake up in a pool of your own sweat, crack a window for relief, and immediately get hit with air so cold it feels personal. It's like being trapped in a meteorological mood swing.&lt;/p&gt;
    &lt;p&gt;So after a night here, we went back to the airport again and flew to our final destination, Ilulissat.&lt;/p&gt;
    &lt;head rend="h3"&gt;Ilulissat&lt;/head&gt;
    &lt;p&gt;The flight to our final destination revealed Greenland's true nature: endless, empty hills stretching toward infinity, punctuated by ice formations that look like nature's sculpture garden.&lt;/p&gt;
    &lt;p&gt;Landing in Ilulissat felt like victory—we'd made it to the actual destination, not just another waypoint in our Arctic odyssey. Walking through the tiny airport, past Danish military recruitment posters (apparently someone, somewhere, thought this place needed defending), I felt genuinely optimistic for the first time in days.&lt;/p&gt;
    &lt;p&gt;Well you can sleep easy Danish military, because Ilulissat is completely protected from invasion. The second I stepped outside I was set upon by a flood of mosquitos like I have never experienced before. I have been to the jungles of Vietnam, the swamps of Florida and the Canadian countryside. This was beyond anything I've ever experienced.&lt;/p&gt;
    &lt;p&gt;There are bugs in my mouth, ears, eyes and nose almost immediately. The photo below is not me being dramatic, it is actually what is required to keep them off of me.&lt;/p&gt;
    &lt;p&gt;In fact what you need to purchase in order to walk around this area at all are basically bug nets for your face. They're effectively plastic mesh bags that you put on.&lt;/p&gt;
    &lt;head rend="h3"&gt;The Dogs&lt;/head&gt;
    &lt;p&gt;Our hotel, charming in that "remote Arctic outpost" way, sat adjacent to what I can only describe as a canine correctional facility. Dozens of sled dogs were chained to rocks like some sort of prehistoric parking lot, each with a tiny house they could retreat to when the existential weight of their circumstances became too much.&lt;/p&gt;
    &lt;p&gt;Now, I'd always imagined sled dogs living their best life—running through snow, tongues lolling, living the Disney version of Arctic life. I'd never really considered their downtime, assuming they frolicked in meadows or something equally wholesome. The reality was more "minimum security prison with a view."&lt;/p&gt;
    &lt;p&gt;The dogs are visited roughly twice a day by the person who owns and feeds them, which was quite the party for the dogs that lost their minds whenever the car pulled up. Soon the kids really looked forward to dog feeding time. The fish scrapes the dogs lived on came out of a chest freezer that was left exposed up on the rock face without electricity and you could smell it from 50 yards away when it opened.&lt;/p&gt;
    &lt;p&gt;During one such performance, a fellow parent leaned over and whispered with the casual tone of someone commenting on the weather, "I think that one is dead." Before I could process this information, the frozen canine was unceremoniously launched over a small cliff like a furry discus. A second doggy popsicle followed shortly after, right in front of our assembled children, who watched with the kind of wide-eyed fascination usually reserved for magic shows.&lt;/p&gt;
    &lt;p&gt;We stopped making dog feeding time a group activity after that and had to distract the kids from ravens flying away with tufts of dog fur.&lt;/p&gt;
    &lt;head rend="h3"&gt;Whales taste like seaweed&lt;/head&gt;
    &lt;p&gt;Obviously a big part of Greenland is the nature, specifically the icebergs. Icebergs are incredible and during the week we spend up there, I enjoyed watching them every morning. It's like watching a mountain slowly moving while you sit still. The visual contrast of the ice and the exposed stone is beautiful and peaceful.&lt;/p&gt;
    &lt;p&gt;Finding our tour operator proved to be an exercise in small-town efficiency. The man who gave me directions was the same person who picked us up from the airport, who was also our tour guide, who probably doubled as the mayor and local meteorologist. It was like a one-man civic operation disguised as multiple businesses—the ultimate small-town gig economy.&lt;/p&gt;
    &lt;p&gt;The sea around Greenland is calmer than anything I've ever been on before, perfectly calm and serene. All around us whales emerged, thrilling my daughter. However the biggest hit of the entire tour, maybe the entire trip, was a member of the crew who handed each of the kids a giant rock of glacier ice to eat. I had to pull my daughter away to observe the natural beauty as she ate glacier ice like it was ice cream. "LOOK AT MY ICE" she was yelling as they slipped and slid around the deck of this boat.&lt;/p&gt;
    &lt;p&gt;So if you've ever wonder "what is a glacier", let me tell you. Greenland has a lot of ice and it pushes out from the land that is covers into the sea. When that happens, a lot of it breaks off. This sounds more exciting than it is. On TV in 4K it looks incredible, giant mountains of ice falling into the ocean. Honestly you can go read the same thing I did here.&lt;/p&gt;
    &lt;p&gt;However that doesn't happen very often. So in order for us tourists to be able to see anything, we had to go to a very productive glacier. This means there are constantly small chunks breaking off and falling into the sea. Practically though, it kinda looks like you are a boat in a slushee. It's beautiful and something to see, but also depressing to see along the rock face how much more ice there used to be.&lt;/p&gt;
    &lt;p&gt;Back in town, we hopped on the "bus". Now the bus here is clearly a retrofitted party van, complete with blue LED lights. The payment system is zip tied to a desk chair that is, itself, wedged in the front. However the bus works well and does get you around. The confusing part is that you will, once again, sometimes encounter a lot of traffic. People are driving pretty quickly and really seem to have somewhere to go. You also see a lot of fancy cars parked outside of houses here.&lt;/p&gt;
    &lt;p&gt;Which begs a pretty basic question. If there was almost nowhere to drive to in Nuuk, where in the hell are these people driving. The distance between the end of the road and the beginning of the road is less than 6 km. Also the process to make a road here is beyond anything you've ever seen. Everything requires a giant pile of explosives.&lt;/p&gt;
    &lt;p&gt;Where did these vehicles even come from? Why does one ship a BMW to a place accessible only by plane and boat? More importantly, where was everyone going with such determination? It was like watching a very expensive version of bumper cars, except everyone was committed to the illusion that they had somewhere important to be. Everyone had dings and scrapes like crashes were common.&lt;/p&gt;
    &lt;head rend="h3"&gt;Grocery Store from the Sea&lt;/head&gt;
    &lt;p&gt;Anyway, as I dodged speeding cars filled with people heading nowhere, I decided to hop off the bus and head to the grocery store. Inside was less a store and more the idea of a store. There was a lot of alcohol, chips, candy and shelf-stable foods, which all makes sense to me. What was strange was there wasn't a lot else, including meat. Locals couldn't be eating at the local restaurants, where the prices were as high as Berlin or Copenhagen for food. So what were they eating?&lt;/p&gt;
    &lt;p&gt;When I asked one of my bus drivers, he told me that it was pretty unusual to buy meat. They purchased a lot of whale and seal meat. I had sorta heard this before, but when we stopped the bus he pointed out a group of men hauling guns out into a small boat to go shoot seals. The guns were held together with a surprising amount of duct tape, which is not something I associate with the wild.&lt;/p&gt;
    &lt;p&gt;I had assumed, based on my casual reading of the news, that we were mostly done killing whales. As it turns out, I was wrong. They eat a lot of whale and it is, in fact, not hard to find. If you are curious, whale does not taste fishy. It tastes a little bit like if you cooked reindeer in a pot of seaweed. I wouldn't go out of your way for it, but it's not terrible.&lt;/p&gt;
    &lt;p&gt;The argument I've always heard for why people still kill whales is because it's part of their culture and also because it's an important source of protein. When you hear the phrase "part of their culture" I always imagined like traditional boats going out with spears. What I didn't imagine was industrial fishing boats and an industrial crane that lifts the dead whale out of the water for "processing". Some of the illusion is broken when your boat tour guide points out the metal warehouse with the word "whale" on the side. "Yeah the water here was red with blood for a week" the guide said, counting the cigarettes left in a pack he had.&lt;/p&gt;
    &lt;head rend="h3"&gt;Should you go to Greenland?&lt;/head&gt;
    &lt;p&gt;It's a wild place unlike anywhere I've ever been. It is the closest I have ever felt to living a sci-fi type experience. The people of Greenland are amazing, tough, calm and kind. I have nothing but positive experiences to recount from the many people I met there, Danish and Greenlandic, who patiently sat through my millions of questions.&lt;/p&gt;
    &lt;p&gt;However it is, by far, the least hospitable to human life place I've ever been to. The folks who live there have adapted to the situation in, frankly, genius ways. If that's your idea of a good time, Greenland is perfect for you. Maybe don't get emotionally attached to the sled dogs though. Or the whales.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45396754</guid><pubDate>Sat, 27 Sep 2025 15:46:46 +0000</pubDate></item><item><title>Great Question (YC W21) Is Hiring Director of Product</title><link>https://www.ycombinator.com/companies/great-question/jobs/9crdslU-director-of-product</link><description>&lt;doc fingerprint="ff9a64751e6124ae"&gt;
  &lt;main&gt;
    &lt;div&gt;
      &lt;head rend="h3"&gt;About This Role:&lt;/head&gt;
      &lt;p&gt;We’re hiring a Director or Senior Director of Product who can be both strategic and hands-on — a player-coach who thrives at the intersection of leadership, execution, and product innovation. You’ll report directly to the CTO and work closely with the CEO, Head of Design &amp;amp; Director of Engineering to refine our product org structure and build a world-class product culture.&lt;/p&gt;
      &lt;p&gt;You’ll lead by doing: partnering with engineering and design, managing and mentoring PMs, and helping teams execute quickly and effectively. We believe in empowering squads with ownership and autonomy, and you’ll help set up the systems to make that work at scale.&lt;/p&gt;
      &lt;p&gt;This is a high-impact, high-visibility role ideal for someone who’s taken a startup from Series A to B and beyond — and is ready to do it again, better and faster, with the wisdom of experience.&lt;/p&gt;
      &lt;head rend="h3"&gt;What You’ll Do:&lt;/head&gt;
      &lt;list rend="ul"&gt;
        &lt;item&gt;Product Leadership: Guide and coach PMs while personally owning key product initiatives; grow the team from 2 to 4+ PMs over the next year.&lt;/item&gt;
        &lt;item&gt;Organizational Design: Help define the right product org structure (e.g., squad zoning vs. centralized planning) to support autonomy and velocity.&lt;/item&gt;
        &lt;item&gt;Strategy &amp;amp; Execution: Collaborate with the CEO, CTO, and Head of Design to drive the product roadmap, refine our strategic bets, and deliver impactful features quickly.&lt;/item&gt;
        &lt;item&gt;AI Innovation: Leverage AI tooling and shape product experiences infused with AI. Ideally, you’ve built and shipped AI products and know how to evaluate emerging AI tech critically.&lt;/item&gt;
        &lt;item&gt;Metrics &amp;amp; Measurement: Ensure the right data is tracked and used to inform decisions. Champion outcome-oriented thinking.&lt;/item&gt;
        &lt;item&gt;Cross-Functional Alignment: Be the connective tissue between product, engineering, design, marketing, customer success, and go-to-market teams.&lt;/item&gt;
        &lt;item&gt;Commercial Thinking: Bring a business mindset — thinking not just about UX and usability but also about growth, pricing, retention, and revenue impact.&lt;/item&gt;
      &lt;/list&gt;
      &lt;head rend="h3"&gt;What We’re Looking For:&lt;/head&gt;
      &lt;list rend="ul"&gt;
        &lt;item&gt;7–12 years of experience in product management, with at least 2–3 years in a leadership role (e.g., Head of Product, Director, or similar).&lt;/item&gt;
        &lt;item&gt;Hands-on experience building AI-driven products or a strong portfolio using AI tools in product development.&lt;/item&gt;
        &lt;item&gt;Experience at early-stage, fast-growing companies — ideally from Series A through B/C — and a desire to do it again.&lt;/item&gt;
        &lt;item&gt;Strong product instincts with a founder’s mindset. Prior entrepreneurial experience (e.g., starting a company or building 0→1) is a bonus.&lt;/item&gt;
        &lt;item&gt;Proven ability to hire, coach, and retain product talent.&lt;/item&gt;
        &lt;item&gt;Highly organized with strong communication skills; you bring structure to chaos and clarity to ambiguity.&lt;/item&gt;
        &lt;item&gt;Commercial acumen — you’re comfortable discussing growth models, pricing, and business strategy.&lt;/item&gt;
        &lt;item&gt;Located in the North America and able to work Pacific Time Zone hours. (CEO is based in the Bay Area, CTO in Colorado.)&lt;/item&gt;
      &lt;/list&gt;
    &lt;/div&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45397492</guid><pubDate>Sat, 27 Sep 2025 17:00:42 +0000</pubDate></item><item><title>I made a public living room and the internet keeps putting weirder stuff in it</title><link>https://www.theroom.lol</link><description>&lt;doc fingerprint="3a95c5f52ddd92ad"&gt;
  &lt;main&gt;
    &lt;p&gt;Upload a base image to start editing this room.&lt;/p&gt;
    &lt;p&gt;By continuing you agree to our Terms and Privacy Policy.&lt;/p&gt;
    &lt;p&gt;Stick with the global room for now while we finish this feature.&lt;/p&gt;
    &lt;p&gt;Complete this quick check to queue your prompt.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45398005</guid><pubDate>Sat, 27 Sep 2025 17:59:47 +0000</pubDate></item><item><title>The death of east London's most radical bookshop</title><link>https://www.the-londoner.co.uk/scarlett-letters-closure-left-wing-bookshop/</link><description>&lt;doc fingerprint="e37811473d86a4dd"&gt;
  &lt;main&gt;
    &lt;p&gt;This article was published by The Londoner: a new newsletter covering the capital. Join our free mailing list below to get great writing and big scoops in your inbox.&lt;/p&gt;
    &lt;p&gt;It was 4am on the 1st of July as Jack Parker bolted upright in the basement below the Scarlett Letters bookshop. From above, Parker could hear drilling. Then a “thunderstorm” of footsteps. Startled and bleary-eyed, they hurriedly dressed, then crept up the stairs into the main bookshop. What they saw “horrified” them.&lt;/p&gt;
    &lt;p&gt;Dozens of people hurriedly packing books into boxes and unscrewing bookshelves. Amongst the torrent of people, maybe the strangest thing they noticed was the face of Blaise Agüera y Arcas: author, AI researcher and the vice president of Google’s research arm. Peculiar though it was to see one of the most senior staff at one of the world’s biggest tech giants busting into a bookshop occupation in Bethnal Green, maybe what was more peculiar was how it all came about in the first place. The setting for this bizarre scene was the Scarlett Letters, named for its owner Marin Scarlett, a radical east London bookshop that was greeted with widespread fanfare by many of the capital's left-wing activists.&lt;/p&gt;
    &lt;p&gt;And here Scarlett was, with a team of people, bursting into the bookshop in the middle of the night in an attempt to disrupt an occupation by a radical cohort of the shop’s staff. To Parker's mind, for a project started with the aim of platforming sex workers and being a “hub for resistance, community, stories and imagination” to have reached such a point was mortifying. How had things gotten so bad? Well, at least in Parker's telling, it started with a clogged toilet.&lt;/p&gt;
    &lt;p&gt;Sporting a black T-shirt, cropped hair and anticapitalist and LGBT-rights tattoos on each arm, the former bookseller meets me in the bare, debris-littered unit that used to house the bookshop. We’re here to talk about the whole sorry saga of Scarlett Letters — the rise, the fall, the union disputes, the rows, the occupations and the drilled locks under nightfall. But first, we need to talk toilets.&lt;/p&gt;
    &lt;p&gt;On a fateful day in early April, less than six months after the shop opened, a plumber had to be called in to fix the disabled toilet, which was inexplicably installed in the non-wheelchair-accessible basement of the bookshop. After the plumber was done, staff opened the work WhatsApp chat to see a message from Marin Scarlett updating the shop’s toilet policy: “We have had an issue over the last few weeks of people just letting themselves downstairs to use the toilet. Our toilet is there for people to use on request, but it is a problem if someone feels they can just let themselves down there without asking.”&lt;/p&gt;
    &lt;p&gt;Keen to thwart any further opportunistic toilet-users, Scarlett had a new policy. Staff were to personally escort anyone who asked to use the toilet to ensure they didn’t steal any stock or snoop around the staff area. She then told her staff she wanted to “role play” some scenarios in which they could practice saying “no”. Seemingly, the crux of the toilet problem was that they were simply too kind, too feminine, too British: “You are all extremely nice, assigned female at birth, in customer service, mostly British etc., and all of this sometimes doesn't lend itself to ‘no,’” the WhatsApp message explained. She suggested staff had been failing to tell customers “no” when they asked to borrow scissors or mugs from the shop, to come behind the counter or when they wanted to serenade them without prompting.&lt;/p&gt;
    &lt;p&gt;Like a toilet with a burst pipe, “toilet-gate” then erupted. Almost immediately, a dispute broke out in the work WhatsApp over the message; there was anger not just about that final message, which Parker saw as “bizarre and sexist”, but over the political ramifications of making members of the community ask to use the toilet in the bookshop.&lt;/p&gt;
    &lt;p&gt;While there had been rumblings of unease from staff for months at the store over the lack of shifts, sick pay and secure contracts, something changed in that moment. “We hadn't broadly discussed unionising with everyone,” explains Parker. “But I saw this, it was like we were in complete solidarity. We needed to unionise immediately.”&lt;/p&gt;
    &lt;p&gt;Unionisation at a place like Scarlett Letters might sound a bit strange. It was, after all, billed as a radical left-wing bookshop, not generally the sort of place that should need unions. Even the union was a bit confused. “I was a bit surprised when they contacted us,” explains Matt Collins, an organiser for the United Voices of the World trade union.&lt;/p&gt;
    &lt;p&gt;But within a week of “toilet-gate”, every single member of staff at the shop had joined the UVW. They drafted a list of demands, which included being granted sick pay, an end to the use of zero hours contracts and running the shop on co-operative principles (in other words, allowing staff to have a say in management). It was sent to Scarlett at the end of April. An initial meeting between Scarlett and the UVW yielded some agreements, though Scarlett told the meeting she was working six or seven days most weeks, and was earning less per hour than the booksellers, so needed to hire a manager, a move that would mean several of the booksellers would need to be let go.&lt;/p&gt;
    &lt;p&gt;Then there was the tricky business of the bookseller’s call for a co-operative management model. Since opening, the Scarlett Letters hadn’t made a month-by-month profit, but had been kept afloat by savings and a monthly donation of £10,000 from an anonymous “angel investor”. Only Scarlett knew the identity of the investor and she shared a response from the investor that they were considering cutting or even pulling their donation if the shop became a co-operative.&lt;/p&gt;
    &lt;p&gt;With the dispute at something of a stalemate, the booksellers reached for the most obvious lever available to them, unleashing a broadside of Instagram posts in Scarlett’s direction. A newly launched account said they were in “open dispute” with their employer over the threats to fire staff and the failure to meet all its demands. “The workers are queer, trans, racialised, disabled, sex workers and students,” it argued. “Their identities have been used to advertise and fundraise for the bookshop as a radical space whilst their voices are not listened to.” As might be expected, there was an outraged response online. Responses on Instagram accused the bookshop of being a “marketing campaign” as well as “colonial”.&lt;/p&gt;
    &lt;p&gt;Eight days later, Scarlett fired back on the shop’s Instagram, claiming they had attempted to, or were in the process of meeting, almost all the union’s demands. “Trying to create a space like this in advanced capitalism is extremely difficult,” it read. “The management targeted by this dispute is not a faceless collective of executives in boardrooms. It is one person, who is multiply marginalised, a known member of the community and for the past year has been working for six or seven days a week for the fraction of the salary offered to the booksellers.” It ended with a shocking revelation: the bookshop would now be closing. A meeting with an external HR firm was scheduled for the end of June to discuss the closure and the staff’s redundancies. Scarlett herself said she was surprised at how things escalated and insists she “sent requests to meet again four separate times,” but that “these were ignored or refused”.&lt;/p&gt;
    &lt;p&gt;And that might have been that. A sad, if fairly run-of-the-mill tale of how an unfortunate toilet clogging thwarted Bethnal Green’s heady dream of a radical bookshop. But that’s not how our story ends, because the soon-to-be jobless booksellers weren’t giving up that easily. In response to Scarlett’s decision, they hatched a plan: they were going to occupy the bookshop.&lt;/p&gt;
    &lt;p&gt;Parker is keen to state that they weren’t aiming to make Scarlett hand over the directorship of the shop, rather they wanted her to donate them the stock. Estimating it to be worth £70,000 (Scarlett puts this figure at closer to £10,000) they felt they could use it to start a new bookshop more closely aligned with their political values.&lt;/p&gt;
    &lt;p&gt;On the Sunday ahead of the meeting, the staff moved themselves into the crammed two floor bookshop. Parker came with a suitcase, planning to spend four days there. “I didn't have enough money to keep getting the train back and forth from Wimbledon,” they explain. “So I figured that I'll just put myself on the rota for four nights. I was getting a small payment from a porn site that wasn’t a significant amount of money, but enough for the train home.”&lt;/p&gt;
    &lt;p&gt;On Monday, they joined the video call on one computer, sitting as a group with the shelves of the store as their backdrop. The meeting would last just a few minutes. They made their demand for the stock to be transferred to them. The official from the HR firm explained, on behalf of Scarlett, that the bookshop’s legal obligations meant the books were “asset-locked” and that there was no legal mechanism to transfer stock to employees for free. As the shop’s director, Scarlett could even be liable and struck off starting a company if she did so.&lt;/p&gt;
    &lt;p&gt;But the booksellers didn’t waver. They announced they would be occupying the shop until their demands were met, and abruptly left the call. Next, they hurriedly unfurled a banner announcing the occupation across the storefront. They had the only set of keys, Parker told me, so thought that as long as no-one allowed management to access the building they could stay indefinitely, protected by squatter’s rights.&lt;/p&gt;
    &lt;p&gt;By 10pm that night, the three occupiers who volunteered to stay overnight went down to the basement and bedded down, steeling themselves for the weeks of resistance to come. In the end, it would be much shorter than expected.&lt;/p&gt;
    &lt;p&gt;What the group hadn’t accounted for, was the foresight of Marin Scarlett. As it happened, on the first day of the occupation she had arranged a locksmith, as well as a team to help her recover the stock. She’d covered every base: even hiring carpenters to remove the bookshelves and bringing along three legal observers to impartially oversee things. At around 4am, they arrived at Scarlett Letters and started drilling.&lt;/p&gt;
    &lt;p&gt;Over the next three hours, books were slid into boxes and shelves were unscrewed from walls. At some point in the night, Parker emerged up the stairwell and saw the whole sorry scene play out. “There were people I knew personally, and that just horrified me,” Parker says.&lt;/p&gt;
    &lt;p&gt;Now, the bookshop is a husk, almost entirely empty apart from the posters announcing future plans to reopen as “The People’s Letters” — a co-operative run by the booksellers that they believe will adhere to more leftist principles than its predecessor.&lt;/p&gt;
    &lt;p&gt;Unsurprisingly, Scarlett sees the whole debacle quite differently to the booksellers. She says she “had hoped to work with the union” and that “an improved sick pay was immediately implemented after our first meeting with UVW”. When the talks with the union broke down and things were taken to social media, sales tanked and it became clear that the store couldn’t stay open. The “shop would have stayed open until late July had the booksellers not tried to steal the stock, but their actions forced us to close several weeks early”. When she and a group of friends entered the shop to reclaim the books, they “did not know that anyone was in the property when we entered”.&lt;/p&gt;
    &lt;p&gt;Collins has spent 14 years in the trade union movement, but is equally baffled by how things managed to end where they did. “I've never experienced a dispute like it before,” he tells me. “I imagine I never will again.” Here ends the tale of Scarlett Letters, the radical bookshop the capital could have had, only for those dreams to be flushed away.&lt;/p&gt;
    &lt;p&gt;Welcome to The Londoner. We’re the capital’s new magazine, delivered entirely by email. Sign up to our mailing list and get two totally free editions of The Londoner every week: a Monday briefing, full of everything you need to know about that’s going on in the city; and an in-depth weekend piece like the one you're currently reading.&lt;/p&gt;
    &lt;p&gt;No ads, no gimmicks: just click the button below and get our unique brand of local journalism straight to your inbox.&lt;/p&gt;
    &lt;head rend="h2"&gt;Comments&lt;/head&gt;
    &lt;p&gt; How to comment:&lt;lb/&gt; If you are already a member, click here to sign in and leave a comment. &lt;lb/&gt; If you aren't a member, sign up here to be able to leave a comment. &lt;lb/&gt; To add your photo, click here to create a profile on Gravatar.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45398153</guid><pubDate>Sat, 27 Sep 2025 18:15:08 +0000</pubDate></item><item><title>LLM Observability in the Wild – Why OpenTelemetry Should Be the Standard</title><link>https://signoz.io/blog/llm-observability-opentelemetry/</link><description>&lt;doc fingerprint="7f008d121bb1bcca"&gt;
  &lt;main&gt;
    &lt;p&gt;A few days ago I hosted a live conversation with Pranav, co-founder of Chatwoot, about issues his team was running into with LLM observability.&lt;/p&gt;
    &lt;p&gt;The short version: building, debugging, and improving AI agents in production gets messy fast. There's multiple competing standards for default libraries for LLM observability. And many such libraries like OpenInference which claim to be based on OpenTelemetry don't strictly adhere to it's conventions. This introduces problems for users who are trying to get better observability across their stack.&lt;/p&gt;
    &lt;p&gt;Here’s a write-up of what we covered and what I think it means for anyone shipping LLM features into real products. Feel free to watch the complete video&lt;/p&gt;
    &lt;head rend="h2"&gt;The Problem Emerges in Prod&lt;/head&gt;
    &lt;p&gt;Pranav and I go way back to our YC days in 2021, and it's always interesting to see how our paths have evolved. Chatwoot has built something really compelling - an open-source customer support platform that unifies conversations across every channel you can imagine: live chat, email, WhatsApp, social media, you name it. All in a single dashboard.&lt;/p&gt;
    &lt;p&gt;But here's where it gets interesting. They've built an AI agent called "Captain" that can work across all these channels. You build the logic once, and it can handle support queries whether they come through email, live chat, or WhatsApp. Pretty neat, right?&lt;/p&gt;
    &lt;p&gt;The problem started showing up in production in the most unexpected ways. Sometimes their AI would randomly respond in Spanish when it absolutely shouldn't. Other times, responses just weren't quite right, and they had no visibility into why.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Quest for LLM Observability&lt;/head&gt;
    &lt;p&gt;This is where Pranav's journey into LLM observability began, it mirrors what I've been seeing across many companies building LLM applications. You need to understand:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;What documents were retrieved for a RAG query?&lt;/item&gt;
      &lt;item&gt;Which tool calls were made?&lt;/item&gt;
      &lt;item&gt;What was the exact input and output at each step?&lt;/item&gt;
      &lt;item&gt;Why did the AI make certain decisions?&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Without this visibility, you're essentially flying blind in production.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Standards Problem&lt;/head&gt;
    &lt;p&gt;Here's where things get really interesting, and frankly, frustrating. Pranav explored several solutions:&lt;/p&gt;
    &lt;p&gt;OpenAI's native tracing looked promising with rich, detailed traces showing guardrails, agent flows, and tool calls. But it's tightly coupled to OpenAI's agent framework. Also, it only provides traces as an atomic unit. If you want to filter spans based on attributes or just examine specific spans directly, you can't do that.&lt;/p&gt;
    &lt;p&gt;New Relic was easy to integrate since they already use it, and it supports OpenTelemetry. But the UI required clicking through 5-6 layers just to see relevant information. Not ideal when you're trying to debug production issues.&lt;/p&gt;
    &lt;p&gt;Phoenix caught their attention because it follows the OpenInference standard, which provides much richer, AI-specific span types. You can easily filter for just LLM calls, tool calls, or agent spans. The traces are beautiful and informative.&lt;/p&gt;
    &lt;p&gt;But here's the kicker: Chatwoot is primarily a Ruby on Rails shop, and guess what? No Ruby SDK for OpenInference. Moreover, Phoenix doesn't completely adhere to OTel semantic conventions, so if you send it telemetry data directly via OpenTelemetry, it doesn't recognize the type of spans, etc.&lt;/p&gt;
    &lt;p&gt;As shown in the example above, Phoenix doesn't shows data sent with OpenTelemetry span kinds as &lt;code&gt;unknown&lt;/code&gt;.&lt;/p&gt;
    &lt;head rend="h2"&gt;The OpenTelemetry vs OpenInference Divide&lt;/head&gt;
    &lt;p&gt;This is where the conversation got really technical and revealed a fundamental industry problem. There are essentially two standards emerging:&lt;/p&gt;
    &lt;p&gt;OpenTelemetry is the industry standard. It has libraries for every language, it's production-ready, and it's widely adopted. But it was built for traditional applications, not AI workflows. It only supports basic span types: internal, server, client, producer, consumer. That's it.&lt;/p&gt;
    &lt;p&gt;OpenInference was created specifically for AI applications. It has rich span types like LLM, tool, chain, embedding, agent, etc. You can easily query for "show me all the LLM calls" or "what were all the tool executions." But it's newer, has limited language support, and isn't as widely adopted.&lt;/p&gt;
    &lt;p&gt;The tragic part? OpenInference claims to be "OpenTelemetry compatible," but as Pranav discovered, that compatibility is shallow. You can send OpenTelemetry format data to Phoenix, but it doesn't recognize the AI-specific semantics and just shows everything as "unknown" spans.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Ruby Problem Makes It Worse&lt;/head&gt;
    &lt;p&gt;For teams using languages like Ruby that don't have direct OpenInference SDK support, this becomes even more challenging. Pranav had to choose between:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Building an SDK from scratch for Ruby&lt;/item&gt;
      &lt;item&gt;Using OpenTelemetry and losing AI-specific insights&lt;/item&gt;
      &lt;item&gt;Switching to a different language stack just for AI observability (way tougher)&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;None of these are great options.&lt;/p&gt;
    &lt;head rend="h2"&gt;Why we (still) bias to OpenTelemetry&lt;/head&gt;
    &lt;p&gt;At SigNoz we’re all-in on OpenTelemetry. One reason: OTel’s consistency enables out-of-the-box experiences across your whole stack. Example: we can auto-surface external API usage and performance based on span kinds and attributes. When parts of the app send telemetry via non-OTel conventions, those views degrade.&lt;/p&gt;
    &lt;p&gt;Chatwoot lands similarly: their entire product already emits OTel. Pulling in a second telemetry standard just for LLMs fragments the picture and complicates how they go about observability. This also silos their observability into different products which makes it difficult to solves issues when they occur.&lt;/p&gt;
    &lt;head rend="h2"&gt;Takeaways for builders&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Pick one telemetry backbone - If most of your app is OTel, prefer staying OTel-native for LLMs too, even if it means adding richer attributes until GenAI conventions catch up.&lt;/item&gt;
      &lt;item&gt;LLM specific libraries - Even if you have to use LLM specific libraries like OpenInference, try to keep your usage as close to OpenTelemetry as possible so that you are aware what non-OTel attributes you are using which may break things.&lt;/item&gt;
      &lt;item&gt;Follow OTel GenAI working group - There is active work happening in OTel Gen AI working group. Follow the work happening there and do share your use cases so that the standards which OpenTelemetry builds are able to cater to most common use cases.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;As the LLM space is still evolving rapidly, we as a community need to share our voices so that the standards are robust.&lt;/p&gt;
    &lt;head rend="h2"&gt;What we’re doing at SigNoz&lt;/head&gt;
    &lt;p&gt;We’re continuing to invest in OpenTelemetry-native LLM observability so teams don’t have to choose between stability and clarity. Concretely, that means:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;Clear dashboards and traces when LLM calls are modeled using OTel spans/attributes. You can find examples and dashboards in our LLM observability docs. Though we have also use LLM specific libraries like OpenInference in our docs (as they are still the easiest way for ppl to get started), we have kept the dashboards as close to OTel standards as possible. We also plan to actively update this as OTel GenAI semantic conventions become more mature.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Guidance and examples for popular frameworks (LangChain, LlamaIndex, etc.) on emitting OTel-friendly telemetry.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Build features leveraging OpenTelemetry semantic conventions so that you get great out-of-box experience in SigNoz and adhere to thoughtful defaults that keep your services, DBs, queues, and LLM agents—in one coherent picture.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;If you’re wrestling with these trade-offs, we’d love to hear what’s breaking for you and what “rich semantics” you actually use day-to-day.&lt;/p&gt;
    &lt;head rend="h2"&gt;What next?&lt;/head&gt;
    &lt;p&gt;Huge thanks to Pranav for going deep, especially from the Ruby perspective. If you’re shipping AI features and care about operability, add your voice: push for richer GenAI semantics in OpenTelemetry, and share real traces (sanitized) that show what you need to see.&lt;/p&gt;
    &lt;p&gt;If you want to compare notes or need help getting your LLM telemetry into an OTel-native view, ping me.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45398467</guid><pubDate>Sat, 27 Sep 2025 18:56:18 +0000</pubDate></item><item><title>2025 Nikon Small World in Motion Competition Winners</title><link>https://www.nikonsmallworld.com/galleries/2025-small-world-in-motion-competition</link><description>&lt;doc fingerprint="52d8d2009da3a548"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;2025 Small World in Motion Competition&lt;/head&gt;
    &lt;head rend="h2"&gt;Winning Videos&lt;/head&gt;
    &lt;head rend="h2"&gt;Honorable Mentions&lt;/head&gt;
    &lt;head rend="h2"&gt;Judges&lt;/head&gt;
    &lt;head rend="h3"&gt;Dr. Deboki Chakravarti&lt;/head&gt;
    &lt;p&gt;Science Communicator&lt;/p&gt;
    &lt;p&gt;Deboki Chakravarti, PhD is a science writer based out of western Massachusetts who focuses on creating educational science videos and podcasts, including Journey to the Microcosmos, Tiny Matters, Scishow Tangents, and Crash Course Organic Chemistry. From designing better bike seats to existential crises inspired by amoebas, Chakravartiâs work covers a wide range of subjects, all of which are tied together by her fascination with how science interacts with the culture around it. Chakravarti received her PhD in biomedical engineering from Boston University, where she worked on engineering T cells for cancer immunotherapy. Prior to that, she earned her bachelorâs degree in bioengineering and English from The California Institute of Technology.&lt;/p&gt;
    &lt;head rend="h3"&gt;Jeff DelViscio&lt;/head&gt;
    &lt;p&gt;Chief Multimedia Editor and Executive Producer at Scientific American&lt;/p&gt;
    &lt;p&gt;Jeff DelViscio is the chief multimedia editor/executive producer at Scientific American. He is the former director of multimedia at STAT, where he oversaw all visual, audio, and interactive journalism. Before that, he spent more than eight years at The New York Times, where he worked on five different desks across the paper. DelViscio holds dual masterâs degrees from Columbia University in journalism and in earth and environmental sciences. He has worked aboard oceanographic research vessels and tracked money and politics in science from Washington, D.C. He was a Knight Science Journalism Fellow at MIT in 2018â19. DelViscioâs work has won numerous awards, including two News and Documentary Emmys.&lt;/p&gt;
    &lt;head rend="h3"&gt;Dr. Andrew Moore&lt;/head&gt;
    &lt;p&gt;Postdoctoral Scientist in the Lippincott-Schwartz Lab at the Howard Hughes Medical Institute's Janelia Research Campus&lt;/p&gt;
    &lt;p&gt;Andrew Moore, PhD is a postdoctoral scientist in the Lippincott-Schwartz Lab at the Howard Hughes Medical Instituteâs Janelia Research Campus who specializes in cell biology with a focus on organelle-cytoskeleton interactions. He completed his graduate training in the Holzbaur Lab at the University of Pennsylvania, where he researched mitochondria quality control and dynamics. Currently, Mooreâs work centers on understanding how cells organize and position their organelles, particularly exploring the interactions between vimentin intermediate filaments and the endoplasmic reticulum. His research combines advanced light and volume electron microscopy techniques to delve into the complexities of cell structure and function. Moore is no stranger to Nikon Small World; he has placed six photos and six videos in the competitions since 2018 and he is grateful for the opportunity to experience this yearâs competition from the other side of the judgesâ table.&lt;/p&gt;
    &lt;head rend="h3"&gt;Dr. Liz Roth-Johnson&lt;/head&gt;
    &lt;p&gt;Curator of Life Sciences at the California Science Center&lt;/p&gt;
    &lt;p&gt;Liz Roth-Johnson, PhD is a scientist turned science communicator with more than a decade of experience making complex scientific ideas accessible and compelling to broad audiences. At the California Science Center, Roth-Johnson oversees the development of fun, memorable exhibit experiences that spark curiosity and inspire science learning in all ages and backgrounds. Recent projects include a Nikon Small World exhibit that explores some of the light microscopy tools and techniques scientists use to study life. Prior to her tenure at the California Science Center, Roth-Johnson created popular online food science content, reported science stories for KQED Science, consulted for the Autry Museum of the American West, and designed introductory biology courses for undergraduate students at UCLA. Roth-Johnson earned her PhD in molecular biology from UCLA and received her BA degree from UC Berkeley, where she majored in molecular &amp;amp; cell biology and music. She completed postdoctoral work as a Discipline-Based Education Research Fellow in the UCLA Department of Life Science Core Education.&lt;/p&gt;
    &lt;head rend="h3"&gt;Dr. W. Gregory Sawyer&lt;/head&gt;
    &lt;p&gt;Chief BioEngineering Officer and Chair of the Department of BioEngineering at the Moffitt Cancer Center&lt;/p&gt;
    &lt;p&gt;W. Gregory Sawyer, PhD is chief bioengineering officer and chair of the Department of BioEngineering at the Moffitt Cancer Center in Tampa, Florida. Professor Sawyer has published over 200 journal papers, has over 16,000 citations, holds over 40 patents, and is most proud of his numerous PhD students who are now faculty members and scientists across the globe. He was a member of the original Mars Rover Program (NASA-JPL), a speaker at TED 8, led the first remotely space-tribology experiments on the International Space Station (ISS), developed novel biomaterials for the ocular surface, and is currently leading efforts in Cancer Engineering.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45398731</guid><pubDate>Sat, 27 Sep 2025 19:38:51 +0000</pubDate></item><item><title>Handy – Free open-source speech-to-text app written in Rust</title><link>https://handy.computer/</link><description>&lt;doc fingerprint="848aa87b53323fd2"&gt;
  &lt;main&gt;
    &lt;head rend="h3"&gt;Video Transcript&lt;/head&gt;
    &lt;p&gt;CJ: Hello, I'm CJ and I want to show you Handy. Handy is an open source speech-to-text application that you can run on your own computer. Simply press a keyboard shortcut, speak, and release, and Handy will paste whatever you said into the text field you're typing into.&lt;/p&gt;
    &lt;p&gt;Let's take a look at the settings menu for Handy, and it's really simple. You have a push-to-talk mode that you can enable, this is enabled by default so you press and hold the keys or alternatively you can turn it off so the transcription starts when you press the key combination and it stops when you press it again. And you can also change what key binding you would like to use for the transcription.&lt;/p&gt;
    &lt;p&gt;So now it's mapped to Ctrl-Z and if I turn this off, when I hit control Z, when you look up in the top corner of my Mac here, this little transcription icon lights up. And when I click it again, it turns off and transcribes the audio. There's nothing to paste into. So it just does nothing here.&lt;/p&gt;
    &lt;p&gt;So sit back, relax, and let Handy give you a hand.&lt;/p&gt;
    &lt;head rend="h2"&gt;Free&lt;/head&gt;
    &lt;p&gt;Accessibility tooling belongs in everyone's hands, not behind a paywall.&lt;/p&gt;
    &lt;head rend="h2"&gt;Open Source&lt;/head&gt;
    &lt;p&gt;Together we can build further. Extend Handy for yourself and contribute to something bigger.&lt;/p&gt;
    &lt;head rend="h2"&gt;Private&lt;/head&gt;
    &lt;p&gt;Your voice stays on your computer. Get transcriptions without sending audio to the cloud.&lt;/p&gt;
    &lt;head rend="h2"&gt;Simple&lt;/head&gt;
    &lt;p&gt;One tool, one job. Transcribe what you say and put it into a text box.&lt;/p&gt;
    &lt;head rend="h1"&gt;Sponsors&lt;/head&gt;
    &lt;p&gt;Handy has some amazing sponsors who help keep it free and open source&lt;/p&gt;
    &lt;p&gt;Want to sponsor Handy? Feel free to donate, use GitHub Sponsors, or reach out directly to contact@handy.computer&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45399106</guid><pubDate>Sat, 27 Sep 2025 20:33:31 +0000</pubDate></item><item><title>Code Mode: the better way to use MCP</title><link>https://blog.cloudflare.com/code-mode/</link><description>&lt;doc fingerprint="b458d91118810e85"&gt;
  &lt;main&gt;
    &lt;div&gt;
      &lt;p&gt;It turns out we've all been using MCP wrong.&lt;/p&gt;
      &lt;p&gt;Most agents today use MCP by directly exposing the "tools" to the LLM.&lt;/p&gt;
      &lt;p&gt;We tried something different: Convert the MCP tools into a TypeScript API, and then ask an LLM to write code that calls that API.&lt;/p&gt;
      &lt;p&gt;The results are striking:&lt;/p&gt;
      &lt;list rend="ol"&gt;
        &lt;item&gt;
          &lt;p&gt;We found agents are able to handle many more tools, and more complex tools, when those tools are presented as a TypeScript API rather than directly. Perhaps this is because LLMs have an enormous amount of real-world TypeScript in their training set, but only a small set of contrived examples of tool calls.&lt;/p&gt;
        &lt;/item&gt;
        &lt;item&gt;
          &lt;p&gt;The approach really shines when an agent needs to string together multiple calls. With the traditional approach, the output of each tool call must feed into the LLM's neural network, just to be copied over to the inputs of the next call, wasting time, energy, and tokens. When the LLM can write code, it can skip all that, and only read back the final results it needs.&lt;/p&gt;
        &lt;/item&gt;
      &lt;/list&gt;
      &lt;p&gt;In short, LLMs are better at writing code to call MCP, than at calling MCP directly.&lt;/p&gt;
      &lt;p&gt;For those that aren't familiar: Model Context Protocol is a standard protocol for giving AI agents access to external tools, so that they can directly perform work, rather than just chat with you.&lt;/p&gt;
      &lt;p&gt;Seen another way, MCP is a uniform way to:&lt;/p&gt;
      &lt;list rend="ul"&gt;
        &lt;item&gt;
          &lt;p&gt;expose an API for doing something,&lt;/p&gt;
        &lt;/item&gt;
        &lt;item&gt;
          &lt;p&gt;along with documentation needed for an LLM to understand it,&lt;/p&gt;
        &lt;/item&gt;
        &lt;item&gt;
          &lt;p&gt;with authorization handled out-of-band.&lt;/p&gt;
        &lt;/item&gt;
      &lt;/list&gt;
      &lt;p&gt;MCP has been making waves throughout 2025 as it has suddenly greatly expanded the capabilities of AI agents.&lt;/p&gt;
      &lt;p&gt;The "API" exposed by an MCP server is expressed as a set of "tools". Each tool is essentially a remote procedure call (RPC) function â it is called with some parameters and returns a response. Most modern LLMs have the capability to use "tools" (sometimes called "function calling"), meaning they are trained to output text in a certain format when they want to invoke a tool. The program invoking the LLM sees this format and invokes the tool as specified, then feeds the results back into the LLM as input.&lt;/p&gt;
      &lt;p&gt;Under the hood, an LLM generates a stream of "tokens" representing its output. A token might represent a word, a syllable, some sort of punctuation, or some other component of text.&lt;/p&gt;
      &lt;p&gt;A tool call, though, involves a token that does not have any textual equivalent. The LLM is trained (or, more often, fine-tuned) to understand a special token that it can output that means "the following should be interpreted as a tool call," and another special token that means "this is the end of the tool call." Between these two tokens, the LLM will typically write tokens corresponding to some sort of JSON message that describes the call.&lt;/p&gt;
      &lt;p&gt;For instance, imagine you have connected an agent to an MCP server that provides weather info, and you then ask the agent what the weather is like in Austin, TX. Under the hood, the LLM might generate output like the following. Note that here we've used words in &lt;code&gt;&amp;lt;|&lt;/code&gt; and &lt;code&gt;|&amp;gt;&lt;/code&gt; to represent our special tokens, but in fact, these tokens do not represent text at all; this is just for illustration.&lt;/p&gt;
      &lt;p&gt;I will use the Weather MCP server to find out the weather in Austin, TX.&lt;/p&gt;
      &lt;quote&gt;
        &lt;code&gt;I will use the Weather MCP server to find out the weather in Austin, TX.

&amp;lt;|tool_call|&amp;gt;
{
  "name": "get_current_weather",
  "arguments": {
    "location": "Austin, TX, USA"
  }
}
&amp;lt;|end_tool_call|&amp;gt;&lt;/code&gt;
      &lt;/quote&gt;
      &lt;p&gt;Upon seeing these special tokens in the output, the LLM's harness will interpret the sequence as a tool call. After seeing the end token, the harness pauses execution of the LLM. It parses the JSON message and returns it as a separate component of the structured API result. The agent calling the LLM API sees the tool call, invokes the relevant MCP server, and then sends the results back to the LLM API. The LLM's harness will then use another set of special tokens to feed the result back into the LLM:&lt;/p&gt;
      &lt;quote&gt;
        &lt;code&gt;&amp;lt;|tool_result|&amp;gt;
{
  "location": "Austin, TX, USA",
  "temperature": 93,
  "unit": "fahrenheit",
  "conditions": "sunny"
}
&amp;lt;|end_tool_result|&amp;gt;&lt;/code&gt;
      &lt;/quote&gt;
      &lt;p&gt;The LLM reads these tokens in exactly the same way it would read input from the user â except that the user cannot produce these special tokens, so the LLM knows it is the result of the tool call. The LLM then continues generating output like normal.&lt;/p&gt;
      &lt;p&gt;Different LLMs may use different formats for tool calling, but this is the basic idea.&lt;/p&gt;
      &lt;p&gt;The special tokens used in tool calls are things LLMs have never seen in the wild. They must be specially trained to use tools, based on synthetic training data. They aren't always that good at it. If you present an LLM with too many tools, or overly complex tools, it may struggle to choose the right one or to use it correctly. As a result, MCP server designers are encouraged to present greatly simplified APIs as compared to the more traditional API they might expose to developers.&lt;/p&gt;
      &lt;p&gt;Meanwhile, LLMs are getting really good at writing code. In fact, LLMs asked to write code against the full, complex APIs normally exposed to developers don't seem to have too much trouble with it. Why, then, do MCP interfaces have to "dumb it down"? Writing code and calling tools are almost the same thing, but it seems like LLMs can do one much better than the other?&lt;/p&gt;
      &lt;p&gt;The answer is simple: LLMs have seen a lot of code. They have not seen a lot of "tool calls". In fact, the tool calls they have seen are probably limited to a contrived training set constructed by the LLM's own developers, in order to try to train it. Whereas they have seen real-world code from millions of open source projects.&lt;/p&gt;
      &lt;p&gt;Making an LLM perform tasks with tool calling is like putting Shakespeare through a month-long class in Mandarin and then asking him to write a play in it. It's just not going to be his best work.&lt;/p&gt;
      &lt;p&gt;MCP is designed for tool-calling, but it doesn't actually have to be used that way.&lt;/p&gt;
      &lt;p&gt;The "tools" that an MCP server exposes are really just an RPC interface with attached documentation. We don't really have to present them as tools. We can take the tools, and turn them into a programming language API instead.&lt;/p&gt;
      &lt;p&gt;But why would we do that, when the programming language APIs already exist independently? Almost every MCP server is just a wrapper around an existing traditional API â why not expose those APIs?&lt;/p&gt;
      &lt;p&gt;Well, it turns out MCP does something else that's really useful: It provides a uniform way to connect to and learn about an API.&lt;/p&gt;
      &lt;p&gt;An AI agent can use an MCP server even if the agent's developers never heard of the particular MCP server, and the MCP server's developers never heard of the particular agent. This has rarely been true of traditional APIs in the past. Usually, the client developer always knows exactly what API they are coding for. As a result, every API is able to do things like basic connectivity, authorization, and documentation a little bit differently.&lt;/p&gt;
      &lt;p&gt;This uniformity is useful even when the AI agent is writing code. We'd like the AI agent to run in a sandbox such that it can only access the tools we give it. MCP makes it possible for the agentic framework to implement this, by handling connectivity and authorization in a standard way, independent of the AI code. We also don't want the AI to have to search the Internet for documentation; MCP provides it directly in the protocol.&lt;/p&gt;
      &lt;p&gt;We have already extended the Cloudflare Agents SDK to support this new model!&lt;/p&gt;
      &lt;p&gt;For example, say you have an app built with ai-sdk that looks like this:&lt;/p&gt;
      &lt;quote&gt;
        &lt;code&gt;const stream = streamText({
  model: openai("gpt-5"),
  system: "You are a helpful assistant",
  messages: [
    { role: "user", content: "Write a function that adds two numbers" }
  ],
  tools: {
    // tool definitions 
  }
})&lt;/code&gt;
      &lt;/quote&gt;
      &lt;p&gt;You can wrap the tools and prompt with the codemode helper, and use them in your app:Â &lt;/p&gt;
      &lt;quote&gt;
        &lt;code&gt;import { codemode } from "agents/codemode/ai";

const {system, tools} = codemode({
  system: "You are a helpful assistant",
  tools: {
    // tool definitions 
  },
  // ...config
})

const stream = streamText({
  model: openai("gpt-5"),
  system,
  tools,
  messages: [
    { role: "user", content: "Write a function that adds two numbers" }
  ]
})&lt;/code&gt;
      &lt;/quote&gt;
      &lt;p&gt;With this change, your app will now start generating and running code that itself will make calls to the tools you defined, MCP servers included. We will introduce variants for other libraries in the very near future. Read the docs for more details and examples.Â &lt;/p&gt;
      &lt;div&gt;
        &lt;head rend="h3"&gt;Converting MCP to TypeScript&lt;/head&gt;
      &lt;/div&gt;
      &lt;p&gt;When you connect to an MCP server in "code mode", the Agents SDK will fetch the MCP server's schema, and then convert it into a TypeScript API, complete with doc comments based on the schema.&lt;/p&gt;
      &lt;p&gt;For example, connecting to the MCP server at https://gitmcp.io/cloudflare/agents, will generate a TypeScript definition like this:&lt;/p&gt;
      &lt;quote&gt;
        &lt;code&gt;interface FetchAgentsDocumentationInput {
  [k: string]: unknown;
}
interface FetchAgentsDocumentationOutput {
  [key: string]: any;
}

interface SearchAgentsDocumentationInput {
  /**
   * The search query to find relevant documentation
   */
  query: string;
}
interface SearchAgentsDocumentationOutput {
  [key: string]: any;
}

interface SearchAgentsCodeInput {
  /**
   * The search query to find relevant code files
   */
  query: string;
  /**
   * Page number to retrieve (starting from 1). Each page contains 30
   * results.
   */
  page?: number;
}
interface SearchAgentsCodeOutput {
  [key: string]: any;
}

interface FetchGenericUrlContentInput {
  /**
   * The URL of the document or page to fetch
   */
  url: string;
}
interface FetchGenericUrlContentOutput {
  [key: string]: any;
}

declare const codemode: {
  /**
   * Fetch entire documentation file from GitHub repository:
   * cloudflare/agents. Useful for general questions. Always call
   * this tool first if asked about cloudflare/agents.
   */
  fetch_agents_documentation: (
    input: FetchAgentsDocumentationInput
  ) =&amp;gt; Promise&amp;lt;FetchAgentsDocumentationOutput&amp;gt;;

  /**
   * Semantically search within the fetched documentation from
   * GitHub repository: cloudflare/agents. Useful for specific queries.
   */
  search_agents_documentation: (
    input: SearchAgentsDocumentationInput
  ) =&amp;gt; Promise&amp;lt;SearchAgentsDocumentationOutput&amp;gt;;

  /**
   * Search for code within the GitHub repository: "cloudflare/agents"
   * using the GitHub Search API (exact match). Returns matching files
   * for you to query further if relevant.
   */
  search_agents_code: (
    input: SearchAgentsCodeInput
  ) =&amp;gt; Promise&amp;lt;SearchAgentsCodeOutput&amp;gt;;

  /**
   * Generic tool to fetch content from any absolute URL, respecting
   * robots.txt rules. Use this to retrieve referenced urls (absolute
   * urls) that were mentioned in previously fetched documentation.
   */
  fetch_generic_url_content: (
    input: FetchGenericUrlContentInput
  ) =&amp;gt; Promise&amp;lt;FetchGenericUrlContentOutput&amp;gt;;
};&lt;/code&gt;
      &lt;/quote&gt;
      &lt;p&gt;This TypeScript is then loaded into the agent's context. Currently, the entire API is loaded, but future improvements could allow an agent to search and browse the API more dynamically â much like an agentic coding assistant would.&lt;/p&gt;
      &lt;div&gt;
        &lt;head rend="h3"&gt;Running code in a sandbox&lt;/head&gt;
      &lt;/div&gt;
      &lt;p&gt;Instead of being presented with all the tools of all the connected MCP servers, our agent is presented with just one tool, which simply executes some TypeScript code.&lt;/p&gt;
      &lt;p&gt;The code is then executed in a secure sandbox. The sandbox is totally isolated from the Internet. Its only access to the outside world is through the TypeScript APIs representing its connected MCP servers.&lt;/p&gt;
      &lt;p&gt;These APIs are backed by RPC invocation which calls back to the agent loop. There, the Agents SDK dispatches the call to the appropriate MCP server.&lt;/p&gt;
      &lt;p&gt;The sandboxed code returns results to the agent in the obvious way: by invoking &lt;code&gt;console.log()&lt;/code&gt;. When the script finishes, all the output logs are passed back to the agent.&lt;/p&gt;
      &lt;div&gt;
        &lt;head rend="h2"&gt;Dynamic Worker loading: no containers here&lt;/head&gt;
      &lt;/div&gt;
      &lt;p&gt;This new approach requires access to a secure sandbox where arbitrary code can run. So where do we find one? Do we have to run containers? Is that expensive?&lt;/p&gt;
      &lt;p&gt;No. There are no containers. We have something much better: isolates.&lt;/p&gt;
      &lt;p&gt;The Cloudflare Workers platform has always been based on V8 isolates, that is, isolated JavaScript runtimes powered by the V8 JavaScript engine.&lt;/p&gt;
      &lt;p&gt;Isolates are far more lightweight than containers. An isolate can start in a handful of milliseconds using only a few megabytes of memory.&lt;/p&gt;
      &lt;p&gt;Isolates are so fast that we can just create a new one for every piece of code the agent runs. There's no need to reuse them. There's no need to prewarm them. Just create it, on demand, run the code, and throw it away. It all happens so fast that the overhead is negligible; it's almost as if you were just eval()ing the code directly. But with security.&lt;/p&gt;
      &lt;p&gt;Until now, though, there was no way for a Worker to directly load an isolate containing arbitrary code. All Worker code instead had to be uploaded via the Cloudflare API, which would then deploy it globally, so that it could run anywhere. That's not what we want for Agents! We want the code to just run right where the agent is.&lt;/p&gt;
      &lt;p&gt;To that end, we've added a new API to the Workers platform: the Worker Loader API. With it, you can load Worker code on-demand. Here's what it looks like:&lt;/p&gt;
      &lt;quote&gt;
        &lt;code&gt;// Gets the Worker with the given ID, creating it if no such Worker exists yet.
let worker = env.LOADER.get(id, async () =&amp;gt; {
  // If the Worker does not already exist, this callback is invoked to fetch
  // its code.

  return {
    compatibilityDate: "2025-06-01",

    // Specify the worker's code (module files).
    mainModule: "foo.js",
    modules: {
      "foo.js":
        "export default {\n" +
        "  fetch(req, env, ctx) { return new Response('Hello'); }\n" +
        "}\n",
    },

    // Specify the dynamic Worker's environment (`env`).
    env: {
      // It can contain basic serializable data types...
      SOME_NUMBER: 123,

      // ... and bindings back to the parent worker's exported RPC
      // interfaces, using the new `ctx.exports` loopback bindings API.
      SOME_RPC_BINDING: ctx.exports.MyBindingImpl({props})
    },

    // Redirect the Worker's `fetch()` and `connect()` to proxy through
    // the parent worker, to monitor or filter all Internet access. You
    // can also block Internet access completely by passing `null`.
    globalOutbound: ctx.exports.OutboundProxy({props}),
  };
});

// Now you can get the Worker's entrypoint and send requests to it.
let defaultEntrypoint = worker.getEntrypoint();
await defaultEntrypoint.fetch("http://example.com");

// You can get non-default entrypoints as well, and specify the
// `ctx.props` value to be delivered to the entrypoint.
let someEntrypoint = worker.getEntrypoint("SomeEntrypointClass", {
  props: {someProp: 123}
});&lt;/code&gt;
      &lt;/quote&gt;
      &lt;p&gt;You can start playing with this API right now when running &lt;code&gt;workerd&lt;/code&gt; locally with Wrangler (check out the docs), and you can sign up for beta access to use it in production.&lt;/p&gt;
      &lt;div&gt;
        &lt;head rend="h2"&gt;Workers are better sandboxes&lt;/head&gt;
      &lt;/div&gt;
      &lt;p&gt;The design of Workers makes it unusually good at sandboxing, especially for this use case, for a few reasons:&lt;/p&gt;
      &lt;div&gt;
        &lt;head rend="h3"&gt;Faster, cheaper, disposable sandboxes&lt;/head&gt;
      &lt;/div&gt;
      &lt;p&gt;The Workers platform uses isolates instead of containers. Isolates are much lighter-weight and faster to start up. It takes mere milliseconds to start a fresh isolate, and it's so cheap we can just create a new one for every single code snippet the agent generates. There's no need to worry about pooling isolates for reuse, prewarming, etc.&lt;/p&gt;
      &lt;p&gt;We have not yet finalized pricing for the Worker Loader API, but because it is based on isolates, we will be able to offer it at a significantly lower cost than container-based solutions.&lt;/p&gt;
      &lt;div&gt;
        &lt;head rend="h3"&gt;Isolated by default, but connected with bindings&lt;/head&gt;
      &lt;/div&gt;
      &lt;p&gt;Workers are just better at handling isolation.&lt;/p&gt;
      &lt;p&gt;In Code Mode, we prohibit the sandboxed worker from talking to the Internet. The global &lt;code&gt;fetch()&lt;/code&gt; and &lt;code&gt;connect()&lt;/code&gt; functions throw errors.&lt;/p&gt;
      &lt;p&gt;But on most platforms, this would be a problem. On most platforms, the way you get access to private resources is, you start with general network access. Then, using that network access, you send requests to specific services, passing them some sort of API key to authorize private access.&lt;/p&gt;
      &lt;p&gt;But Workers has always had a better answer. In Workers, the "environment" (&lt;code&gt;env&lt;/code&gt; object) doesn't just contain strings, it contains live objects, also known as "bindings". These objects can provide direct access to private resources without involving generic network requests.&lt;/p&gt;
      &lt;p&gt;In Code Mode, we give the sandbox access to bindings representing the MCP servers it is connected to. Thus, the agent can specifically access those MCP servers without having network access in general.&lt;/p&gt;
      &lt;p&gt;Limiting access via bindings is much cleaner than doing it via, say, network-level filtering or HTTP proxies. Filtering is hard on both the LLM and the supervisor, because the boundaries are often unclear: the supervisor may have a hard time identifying exactly what traffic is legitimately necessary to talk to an API. Meanwhile, the LLM may have difficulty guessing what kinds of requests will be blocked. With the bindings approach, it's well-defined: the binding provides a JavaScript interface, and that interface is allowed to be used. It's just better this way.&lt;/p&gt;
      &lt;p&gt;An additional benefit of bindings is that they hide API keys. The binding itself provides an already-authorized client interface to the MCP server. All calls made on it go to the agent supervisor first, which holds the access tokens and adds them into requests sent on to MCP.&lt;/p&gt;
      &lt;p&gt;This means that the AI cannot possibly write code that leaks any keys, solving a common security problem seen in AI-authored code today.&lt;/p&gt;
      &lt;div&gt;
        &lt;head rend="h3"&gt;Sign up for the production beta&lt;/head&gt;
      &lt;/div&gt;
      &lt;p&gt;The Dynamic Worker Loader API is in closed beta. To use it in production, sign up today.&lt;/p&gt;
      &lt;p&gt;If you just want to play around, though, Dynamic Worker Loading is fully available today when developing locally with Wrangler and &lt;code&gt;workerd&lt;/code&gt; â check out the docs for Dynamic Worker Loading and code mode in the Agents SDK to get started.&lt;/p&gt;
    &lt;/div&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45399204</guid><pubDate>Sat, 27 Sep 2025 20:49:36 +0000</pubDate></item><item><title>We reverse-engineered Flash Attention 4</title><link>https://modal.com/blog/reverse-engineer-flash-attention-4</link><description>&lt;doc fingerprint="345b89c7cdba0a80"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;We reverse-engineered Flash Attention 4&lt;/head&gt;
    &lt;p&gt;One month ago at Hot Chips, Tri Dao presented preliminary results on Flash Attention 4, the latest addition to the Flash Attention series of CUDA kernels. These kernels are used in the attention layers of Transformer neural networks. Along with more standard matrix multiplications, these calculations are the primary bottlenecks in contemporary generative AI workloads. Billions of dollars and gigawatts of power are being expended on GPUs to run more of these calculations faster. And Flash Attention 4 is the way to run lots of them as fast as possible. This blog post explains how it works.&lt;/p&gt;
    &lt;p&gt;The new FA4 kernel is optimized for Nvidiaâs new Blackwell Streaming Multiprocessor architecture and achieves a reported ~20% speedup over the previous state-of-the-art, the attention kernels in Nvidiaâs &lt;code&gt;cudnn&lt;/code&gt; library.&lt;/p&gt;
    &lt;p&gt;&lt;code&gt;cudnn&lt;/code&gt; kernels are closed source, so Jensen only knows whatâs going on in there.&lt;/p&gt;
    &lt;p&gt;Thereâs also no official technical report on how FA4 works yet. But the source code for Flash Attention 4 was already released online here. Weâve recently been contributing to open source LLM inference engines, so we read the code and reverse-engineered how the kernel works, including two math tricks (faster approximate exponentials and a more efficient online softmax) that are classic Dao. This write-up contains our findings.&lt;/p&gt;
    &lt;p&gt;Perhaps surprisingly, the architecture of FA4 is readily understandable by a general software engineering audience.&lt;/p&gt;
    &lt;p&gt;Thatâs because the biggest change in FA4 isnât the (very cool) math â itâs a massive increase in the complexity of its asynchronous âpipelineâ of operations. This kind of asynchronous programming is fairly new in the world of CUDA, but pipes have been in Unix for like 40 goddamn years. A programmer who has experience with parallel and concurrent programs, like high performance databases and web servers, will feel right at home (absent some novel GPU technical vocabulary).&lt;/p&gt;
    &lt;p&gt;So we organize our write-up into two parts.&lt;/p&gt;
    &lt;p&gt;The first section, a âquick tourâ, covers the architecture of FA4 by tracing what happens as a block of inputs is turned into a block of outputs. It is written to be understandable by a practicing software engineer without any CUDA programming experience. We give brief explanations of CUDA concepts and hardware, like warps and warp schedulers, but defer detailed explanation to our GPU Glossary (linked throughout).&lt;/p&gt;
    &lt;p&gt;The second section, a âdeep diveâ, walks through each of the subcomponents in turn, explaining what each does, supported by links to the source code for particularly intrepid spelunkers.&lt;/p&gt;
    &lt;head rend="h2"&gt;A quick tour of Flash Attention 4: The âLife of a Tileâ&lt;/head&gt;
    &lt;p&gt;We start with bf16 tensors of queries, keys, and values in global memory (aka GPU RAM). Weâre aiming to produce a tensor of bf16 outputs, also in global memory. Outputs are values weighted by the similarity of queries to keys. Computing this weighting requires matrix multiplication, exponentiation, and normalization.&lt;/p&gt;
    &lt;p&gt;Like the good engineers we are, we tackle this very big problem by breaking it down into smaller pieces. Thatâs fairly literal in this case: we take our very large input tensor and split it up into âtilesâ of adjacent rows and columns, each of which contribute to the calculation of one tile of outputs.&lt;/p&gt;
    &lt;p&gt;Specifically, one running instance of our kernel program (namely, one âcooperative thread arrayâ of threads) produces two tiles of the outputs tensor by reading two tiles of the queries tensor. In between, it streams all of the keys &amp;amp; values for each query tile. Keys and values are also read in tiles. If youâre a database âhead, you might think of it as a vectorized sequential scan for a batch of aggregation queries against a key-value store.&lt;/p&gt;
    &lt;p&gt;By running this tile-level program many times concurrently (typically, massively in parallel), we produce the entire outputs tensor. This is a âsingle program, multiple dataâ execution model, where each datum is a pair of tiles. This kind of concurrency across program instances is the bread-and-butter of the CUDA programming model and is transparently handled for the programmer by the CUDA runtime.&lt;/p&gt;
    &lt;p&gt;But with the fastest contemporary kernels, like Flash Attention 3 &amp;amp; 4 and all state-of-the-art matrix multiplications, there is also concurrency within our program. Each program instance sets up an asynchronous pipeline of operations that together effect the tile-level computation depicted above. We write our kernel such that all of our pipeline steps can run as concurrently as possible as we process a tile. In Flash Attention 4, we achieve this by mapping chunks of our pipeline onto 32-thread groups called warps (a technique called warp specialization).&lt;/p&gt;
    &lt;p&gt;We then rely on the warp schedulers to switch between pipeline steps within program instances on each clock, swapping out when a step stalls and swapping back in when a stepâs next input is ready. Think simultaneous multithreading/âhyperthreadingâ from CPUs, but on steroids. The diagram below, from our GPU Performance Glossary, depicts four cycles across four parallel slots, for a total of sixteen execution slots, fifteen of which are filled with warps actively executing instructions thanks to this rapid warp switching. See the associated article for details.&lt;/p&gt;
    &lt;p&gt;This execution model is âdualâ to the way that an asynchronous program for CPUs works in the following sense. In an async CPU program, a single thread implements the entire journey of a single datum (e.g. request) through a state machine (e.g. Reading, Parsing, Writing), switching between transitions as data become ready. In an async GPU program like FA4, a single warp implements a single transition (e.g. from queries and values to attention scores) in a similar state machine.&lt;/p&gt;
    &lt;p&gt;The pipeline is organized with a producer/consumer model and uses barriers for synchronization.&lt;/p&gt;
    &lt;p&gt;Unlike the concurrency across program instances, the internal pipeline concurrency is all implemented manually. This leads to quite gnar code â though the control flow will look familiar to anyone who has written their own event loop.&lt;/p&gt;
    &lt;p&gt;So like most async code, the FA4 kernel is best understood by tracing the path of a single tile: the âlife of a tileâ, akin to the âlife of a pixelâ in a browserâs rendering pipeline. In particular, letâs follow the tileâs path through the memory hierarchy of the GPU as it is transformed from initial query tile to final output tile.&lt;/p&gt;
    &lt;p&gt;At a high level, and eliding a few details about multiple buffering that increase concurrency and parallelism, that looks something like this:&lt;/p&gt;
    &lt;p&gt;Which vaguely resembles a microservices diagram. As above, so below!&lt;/p&gt;
    &lt;p&gt;Spelled out, thatâs:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;A tile of queries is loaded from global memory (&lt;code&gt;mQ&lt;/code&gt;) into shared memory (&lt;code&gt;sQ&lt;/code&gt;) by the Load warp. Shared memory is a âscratchpadâ L1 cache managed by the programmer.&lt;/item&gt;
      &lt;item&gt;Tiles of keys (&lt;code&gt;mK&lt;/code&gt;) and values (&lt;code&gt;mV&lt;/code&gt;) are streamed into shared memory (&lt;code&gt;sK&lt;/code&gt;,&lt;code&gt;sV&lt;/code&gt;), also by the Load warp. Note that if the working set size permits, future loads of these tiles for other query tiles will be serviced from the hardware-managed L2 cache (not pictured).&lt;/item&gt;
      &lt;item&gt;When each tile of keys is ready, the MMA warp multiplies it with our tile of queries using a Tensor Core, producing a tile of unnormalized attention scores in Tensor Memory (&lt;code&gt;tS&lt;/code&gt;). Tensor Cores are single-purpose hardware for running matmuls. Tensor Memory is another programmer-managed L1 cache designed to hold and accumulate intermediates during sequences of Tensor Core operations.&lt;/item&gt;
      &lt;item&gt;When each tile of unnormalized attention scores is ready, a Softmax warp produces normalized attention scores for that tile in Tensor Memory (&lt;code&gt;tP&lt;/code&gt;) without using the Tensor Core and updates a scaling factor used for numerical stability (in shared memory, not pictured).&lt;list rend="ul"&gt;&lt;item&gt;â¡ï¸ New in Flash Attention 4: this step can use CUDA Cores instead of Special Function Units (SFUs) to perform the exponential step of the normalization. SFUs are intended to provide hardware acceleration for transcendental operations like exponentials. But there are far fewer SFUs than CUDA Cores, which can lead to queueing. The basic idea, fast approximate exponentiation in software for neural networks that can tolerate a bit of accuracy loss, was proposed in a 1999 Neural Computation paper by Schraudolph, but the implementation here is quite different, involving a cubic polynomial approximation (as described in detail below).&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;When each tile of normalized attention scores is ready, a Correction warp checks if the normalization scaling factor has changed and, if necessary, rescales the final output tile in Tensor Memory (&lt;code&gt;tO&lt;/code&gt;).&lt;list rend="ul"&gt;&lt;item&gt;â¡ï¸ New in Flash Attention 4: the choice of when to rescale became much smarter, reportedly cutting down on output rescaling operations by a factor of 10. Roughly: the scaling factor used to be a simple running maximum. Now updates are applied only when the maximum has changed enough to impact numerical stability. This seems like a good, and very portable, idea.&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;When each rescaling update finishes, the MMA warp updates the output tile in Tensor Memory (&lt;code&gt;tO&lt;/code&gt;) by accumulating it with the value tile (&lt;code&gt;sV&lt;/code&gt;) scaled by the attention score tile (&lt;code&gt;tP&lt;/code&gt;).&lt;/item&gt;
      &lt;item&gt;When each tile of final output values is ready, the Correction warp stores it in shared memory (&lt;code&gt;sO&lt;/code&gt;), then the Epilogue warp stores it in global memory (&lt;code&gt;mO&lt;/code&gt;), and weâre done with that tile.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Our high-level, tile-centric view elides a number of details, like the number of warps assigned to each pipeline step and the use of buffers to store different tiles. It also leaves out all of the details of the barrier synchronization, which is required on both sides of every producer/consumer relationship (aka where an arrow tip meets an arrow tail in the diagram). These are critical for performance.&lt;/p&gt;
    &lt;p&gt;We go through these details in a âwarp-centricâ view of the kernel below, which focuses on the operations in each warp, rather than the movement of tiles, and includes links to the source code. This is necessarily more technical and goes through some GPU-specific features at higher speed, so itâs less suitable for a general software engineering audience.&lt;/p&gt;
    &lt;p&gt;But before that, one last takeaway for those only interested in the high level.&lt;/p&gt;
    &lt;head rend="h2"&gt;Where does GPU programming go from here?&lt;/head&gt;
    &lt;p&gt;When Ian Buck and others designed CUDA C, they were driven by a north star: can it be used to write a single precision vector addition (&lt;code&gt;saxpy&lt;/code&gt;) with respectable performance as a clean one-liner thatâs easily understood by a C programmer? The core of the CUDA programming model laid down then and described in the 2008 Lindholm et al. paper still persists today.&lt;/p&gt;
    &lt;p&gt;Whatâs new in the last few years (in the Hopper and Blackwell architectures) is an increasing reliance on programmer-managed asynchrony, like FA4âs multi-stage, multi-buffered pipeline. This represents a major jump in complexity from FA3âs simpler âping-pongâ pipeline (added to take advantage of Hopper GPUsâ async capabilities).&lt;/p&gt;
    &lt;p&gt;And just as in other well-designed languages, CUDA C/C++ has struggled to accommodate the introduction of asynchrony. It is a truth universally acknowledged that async programming sucks absolute ass. Thatâs especially true when you need to manage your own event loop, as weâre effectively doing here. And itâs made harder, not easier, by the thread-centricity and warp uniformity of the CUDA programming model and PTX machine model.&lt;/p&gt;
    &lt;p&gt;No wonder the Triton team gave up on writing Blackwell attention and added the new Gluon frontend at a lower level!&lt;/p&gt;
    &lt;p&gt;Tritonâs troubles notwithstanding, this kernel is a clear instance of the swing towards tile-based, warp-specialized programming. And Nvidia is betting big on a number of new languages and libraries to try to make this easier, from the CuTe DSL and CUTLASS C++ used in this kernel to the forthcoming CuTile. Say what you will about the chatbot hype wave, these are exciting times for high performance numerical computing!&lt;/p&gt;
    &lt;head rend="h2"&gt;Deep dive for the GPU enjoyers: What does each warp do in Flash Attention 4?&lt;/head&gt;
    &lt;p&gt;There are five different specializations for warps in the Flash Attention 4 kernel. They are listed below, along with links to their source code.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;A Load warp to load query, key, and value tiles from global memory into shared memory&lt;/item&gt;
      &lt;item&gt;An MMA warp to compute unnormalized attention scores from query and key tiles and accumulate score-weighted value tiles into the output tiles&lt;/item&gt;
      &lt;item&gt;Eight Softmax warps to compute normalized attention scores and track running stats (max, sum)&lt;/item&gt;
      &lt;item&gt;Four Correction warps to watch for updates to the normalization scale and re-normalize the output tiles&lt;/item&gt;
      &lt;item&gt;One or two Epilogue warps to store completed output tiles from shared memory into global memory&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;In the above discussion, we implied that each CTA works on just two query tiles and produces just two output tiles. Thatâs true in some settings, but the mapping between tiles and CTAs is technically abstracted by a &lt;code&gt;TileScheduler&lt;/code&gt;. For the best performance, you need to use the &lt;code&gt;StaticPersistentTileScheduler&lt;/code&gt;, which launches at most one CTA per Streaming Multiprocessor and then schedules tiles onto those SMs. This reduces CTA launch overhead and allows for more fine-grained concurrency (e.g. overlapping Epilogue warps for one tile with the Load and MMA warps for the next tile).&lt;/p&gt;
    &lt;p&gt;The core work of the kernel is the same â thereâs just not a clean mapping of work onto thread constructs, which makes explaining the work harder. From here, weâll go back to speaking about the code as though each CTA handles only two tiles (which is literally true if you use the &lt;code&gt;SingleTileScheduler&lt;/code&gt;).&lt;/p&gt;
    &lt;p&gt;Also, from here we will start using some shorthand, matching the code and convention: Q for queries, K for keys, V for values, O for outputs, S for unnormalized attention scores, and P for normalized attention scores/âprobabilitiesâ.&lt;/p&gt;
    &lt;head rend="h3"&gt;The Load warp loads two Q tiles and streams all K and V tiles.&lt;/head&gt;
    &lt;p&gt;The Load warp operates on pointers to Q, K, and V tensors in global memory and writes to Q, K, and V tensors in shared memory. It supports paged keys and values (as in Paged Attention, not as in operating system pages) via an optional âpage tableâ tensor (again, not the page tables co-managed by the OS, the CPU, and the MMU).&lt;/p&gt;
    &lt;p&gt;It uses the Tensor Memory Accelerator (TMA) to reduce register pressure from multidimensional array access and fire off copies asynchronously. This also avoids very long warp stalls on loads that would require even more warp specialization to hide latency.&lt;/p&gt;
    &lt;p&gt;The Load warp loads two Q tiles. It loads all K and V blocks in a loop. It is the âproducerâ of these tiles (in a producer/consumer setup). It can concurrently load up to three blocks each of K and V.&lt;/p&gt;
    &lt;p&gt;As it completes these loads, the Load warp signals their completion to the MMA warp through an array of barriers in shared memory. All barriers (not just for Load/MMA synchronization) are referenced via their offset in this array to support variable barrier counts with different configuration settings.&lt;/p&gt;
    &lt;head rend="h3"&gt;The MMA warp computes unnormalized attention scores and output values.&lt;/head&gt;
    &lt;p&gt;The MMA warp operates on pointers to Q, K, and V tensors in shared memory. For every K/V tile, it runs two matmuls to create S tiles and two matmuls for O (Q/K for the S tiles, P/V for the O tiles). The matmuls are emitted as inline PTX assembly, as is necessary for CUDA C/C++ programs to use the Tensor Cores in Hopper and Blackwell. The vast majority of the FLOPS in this kernel are driven by these lines; most everything else is memory management.&lt;/p&gt;
    &lt;p&gt;The specific PTX instruction used is &lt;code&gt;tcgen05.mma.cta_group::1&lt;/code&gt;. &lt;code&gt;mma&lt;/code&gt; is matrix-multiply-accumulate. &lt;code&gt;tcgen05&lt;/code&gt; means &lt;code&gt;5&lt;/code&gt;th generation &lt;code&gt;t&lt;/code&gt;ensor &lt;code&gt;c&lt;/code&gt;ore, aka Blackwell, as in &lt;code&gt;sm100&lt;/code&gt;/Compute Capability 10.0. &lt;code&gt;cta_group::1&lt;/code&gt; means we run our matmul using only a single CTA, avoiding the nastiness of TPC-based 2SM/2CTA matmuls available in Blackwell. This likely introduces a small memory throughput penalty but simplifies CTA/tile scheduling. Interestingly, the ThunderKittens Blackwell attention kernel makes a different choice.&lt;/p&gt;
    &lt;p&gt;Also on the front of scheduling/simplification: only a single &lt;code&gt;leader_thread&lt;/code&gt; issues the instruction. And weâre only working from a single warp. This is an important difference from performant Hopper MMAs, which were coordinated across an entire warpgroup.&lt;/p&gt;
    &lt;p&gt;After getting hold of a Q tile and our first K tile, we run our first matmul to produce our first result for S. Then we loop over the remaining K and V tiles and update S and O. These S and O tensors live in Tensor Memory. This is the âintendedâ use of Tensor Memory, as a store for accumulators read from and written to by the Tensor Cores.&lt;/p&gt;
    &lt;p&gt;Since the K and V tiles are buffered, we need to signal the Load warp every time we finish using them (eg here, signaling that the memory containing V can be reused once it has been used to construct the second O tile). Thereâs some additional coordination here (around S, P, and O), which weâll discuss as it comes in up in the other warps.&lt;/p&gt;
    &lt;head rend="h3"&gt;Eight Softmax warps produce normalized attention scores.&lt;/head&gt;
    &lt;p&gt;The Softmax warps produce normalized attention scores (P, as in âprobabilitiesâ) consumed by the MMA warps. Ignore the name and donât try to come up with an interpretation of the attention scores as the probability distribution for a random variable; itâll make your head hurt and give you bad intuition about Transformers. Theyâre better thought of as weights for a linear combination of vectors from V.&lt;/p&gt;
    &lt;p&gt;The core softmax operation is implemented by two warpgroups, aka eight warps. The two warpgroups are mapped onto the two query/output tile workstreams. Warpgroups are made up of four adjacent warps with a warp index alignment of four. Using them was critical for the fast warpgroup MMAs in Hopper GPUs, as in Flash Attention 3, but we didnât see anything in this kernel that made explicit use of them. Warpgroup alignment may lead to more even distribution of work across warp schedulers/subunits of the SM, as it did in Hopper, which had four warp schedulers per SM. To our and Wikipediaâs knowledge, this level of detail on SM100 Blackwell GPUs like B200s is not published anywhere (but it is true of SM120 RTX Blackwell GPUs).&lt;/p&gt;
    &lt;p&gt;Weâre also not certain of the reason why some pipeline stages are assigned more warps than others and in this particular ratio. Presumably, it helps ensure balanced throughput across the different stages, but our napkin math on relative operational load, bandwidth, and latency between the matmuls and the attention operations didnât produce a smoking gun. We speculate that it was determined by benchmarking.&lt;/p&gt;
    &lt;p&gt;Each warp runs a single step of the online softmax calculation at a time while looping over the S tiles produced by the MMA warp.&lt;/p&gt;
    &lt;p&gt;Looking within the individual softmax step: the unnormalized attention scores are stored in Tensor Memory, which can only be directly operated on by the Tensor Cores. But the Tensor Cores can only do matrix multiplication. So the Softmax warps have to copy the scores into the registers to apply the exponentiation and then copy the result back.&lt;/p&gt;
    &lt;p&gt;The exponentiation is done differently than in previous versions of Flash Attention. FA3 and earlier used the GPUâs Special Function Units to perform a hardware-accelerated exponentiation. Specifically, they use the &lt;code&gt;exp2&lt;/code&gt; CUDA PTX intrinsic, which is typically mapped by the (closed-source) &lt;code&gt;ptxas&lt;/code&gt; compiler to the &lt;code&gt;MUFU.EX2&lt;/code&gt; SASS instruction.&lt;/p&gt;
    &lt;p&gt;The FA4 kernel does that too, but for smaller attention head sizes it additionally mixes in a different exponentiation algorithm on some iterations with a tunable frequency. That implementation uses this block of inline PTX to compute &lt;code&gt;2 ** x&lt;/code&gt;. The algorithm splits the exponentiation into two parts: the easy integer part (&lt;code&gt;2 ** floor(x)&lt;/code&gt;) and the hard rational part (&lt;code&gt;2 ** (x - floor(x))&lt;/code&gt;). It uses a cubic polynomial to approximate &lt;code&gt;2 ** x&lt;/code&gt; on the unit interval (check out the approximation on Wolfram Alpha here).&lt;/p&gt;
    &lt;p&gt;The cubic polynomial calculation is done, following Hornerâs method for linear time polynomial evaluation, with three fused multiply-adds (&lt;code&gt;fma&lt;/code&gt;):&lt;/p&gt;
    &lt;code&gt;// Horner's method: (((c3 * r) + c2) * r + c1) * r + c0
fma.rn.ftz.f32x2 l10, l9, l6, l5
fma.rn.ftz.f32x2 l10, l10, l9, l4
fma.rn.ftz.f32x2 l10, l10, l9, l3&lt;/code&gt;
    &lt;p&gt;Note that &lt;code&gt;f32x2&lt;/code&gt; means that we operate on a vector (as in vector lanes) of two 32 bit values. You can read about a similar implementation for CPU vector instructions on Stack Overflow here.&lt;/p&gt;
    &lt;p&gt;In addition to only applying this method on some iterations, it stops applying it on a configurable number of the last S tiles. Together, these suggest that the reason for applying it is to avoid a bottleneck on the SFUs (which, due to wave quantization effects, is less relevant for the final tiles).&lt;/p&gt;
    &lt;p&gt;The Softmax warps also track the running statistics for rescaling and normalizing attention scores used by the Correction warps, as discussed below.&lt;/p&gt;
    &lt;p&gt;Thereâs another important change here. All softmax algorithms need to handle numerical instability caused by exponentiation of large values. Before Flash Attention, this was usually done by finding the largest value in each row and subtracting it from the value before exponentiating. All Flash Attention kernels use a streaming or online softmax algorithm, and the largest value is not known in advance â searching through the scores to find it would defeat the purpose of using a streaming algorithm! Instead, they use a running maximum for numerical stability and update the scaling factor whenever a new maximum is encountered. This ensures continued numerical stability and avoids an extra scan, but requires a costly correction of previous values (handled by the Correction warps) every time a new maximum is observed.&lt;/p&gt;
    &lt;p&gt;This is inefficient. We only need to update the scaling factor when the new maximum changes enough to threaten numerical stability, not every time a new maximum appears. That logic is implemented here. In the Hot Chips talk, Dao indicated that this reduced the number of corrections by a factor of 10.&lt;/p&gt;
    &lt;p&gt;There is additional support for attention sinks and storing the log-sum-exp tensor used in the backwards pass. At time of writing in late September 2025, a backwards version of this kernel is not available, but is expected imminently.&lt;/p&gt;
    &lt;head rend="h3"&gt;Four Correction warps rescale previous outputs as the normalization changes.&lt;/head&gt;
    &lt;p&gt;The Correction warps update past output results from the MMA warps as the numerical stability scaling factor changes. The Correction warps need to coordinate their access to the O values in Tensor Memory with the MMA warps (eg here, indicating that those values are consumed and the memory can be reclaimed).&lt;/p&gt;
    &lt;p&gt;Like the Softmax warps, the four Correction warps form a warpgroup. Also like the Softmax warps, they need to load from Tensor Memory to registers to apply their non-matmul rescaling operation.&lt;/p&gt;
    &lt;p&gt;The Correction warps are also responsible for writing the output from Tensor Memory to shared memory and applying the final scaling by the row sum. This is called the &lt;code&gt;correction_epilogue&lt;/code&gt;. âEpilogueâ here means the same thing as in the name of the âEpilogueâ warps â an operation that occurs at the end of a sequence of operations on values stored in one memory and before the results are written to another memory. But in this case, it refers to operations on data in Tensor Memory before they are stored to shared memory, whereas the Epilogue warps take data from shared memory and store it in global memory.&lt;/p&gt;
    &lt;p&gt;This is especially confusing because the completion of this epilogue is the signal for the Epilogue warps to start their work.&lt;/p&gt;
    &lt;p&gt;The Correction warps have the global memory output tensor among their arguments, but only use it in commented-out code.&lt;/p&gt;
    &lt;head rend="h3"&gt;The Epilogue Warp(s) store complete output tiles back into global memory.&lt;/head&gt;
    &lt;p&gt;There are either one or two Epilogue warps depending on whether the TMA is enabled.&lt;/p&gt;
    &lt;p&gt;In the case that the Epilogue warps can use the TMA, thereâs only one and its work is simple. It waits on the correction loop to finish for an output tile, then runs a TMA copy, then signals that it has finished reading the O tensor in shared memory and the buffer can be reused.&lt;/p&gt;
    &lt;p&gt;If they canât use the TMA, their work is more complicated â they need to handle slicing and packing, which is pretty hard. It also consumes quite a few more registers.&lt;/p&gt;
    &lt;head rend="h2"&gt;If you made it this far, you might enjoy working at Modal.&lt;/head&gt;
    &lt;p&gt;At Modal, weâre building the cloud infrastructure that compute-intensive workloads like giant Transformers need. Our platform is used by companies like Suno, Lovable, Ramp, and Substack. Weâre hiring.&lt;/p&gt;
    &lt;p&gt;The authors would like to thank Simon Mo of vLLM, Michael Goin of RedHat AI, and Kimbo Chen of SemiAnalysis for their comments on drafts of this article. Weâd also like to thank Tri Dao for writing another banger of a kernel.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45399637</guid><pubDate>Sat, 27 Sep 2025 21:50:30 +0000</pubDate></item><item><title>Microwave weapon downs 49 drones with a single blast</title><link>https://newatlas.com/military/microwave-beam-anti-drone-weapon/</link><description>&lt;doc fingerprint="27ed50378108be17"&gt;
  &lt;main&gt;
    &lt;p&gt;In a demonstration not so much of marksmanship but more of the advantages of microwaves, an Epirus Leonidas directed energy, high-power microwave (HPM) anti-drone weapon has knocked 49 Uncrewed Aerial Vehicles (UAV) out of the air with one shot.&lt;/p&gt;
    &lt;p&gt;Two things that make drones particularly concerning is that they're small enough to appear from unexpected corners of the sky and they're cheap enough that they can be deployed in huge numbers. In fact, they are so cheap that they pose not only a military threat, but a serious hazard to civilian aviation from individuals who are irresponsible, mischievous, or just oblivious.&lt;/p&gt;
    &lt;p&gt;This is the reason there are so many different types of anti-drone weapons. Each has their advantages and disadvantages, with none providing a one-size-fits-all panacea. Instead, each needs to be fitted to a particular scenario or deployed as part of a layered defense strategy.&lt;/p&gt;
    &lt;p&gt;One countermeasure is the use of microwave weapons like Leonidas. Named after the Spartan king who held off a Persian invasion with a vastly inferior force at the Battle of Thermopylae, Leonidas is one of a family of weapons based on using long-pulse microwave beams to burn out the electronics of small drones.&lt;/p&gt;
    &lt;p&gt;The idea isn't new, but Epirus has improved on previous iterations by using Gallium Nitride (GaN) semiconductors to generate microwaves instead of fragile, power-hungry magnetron vacuum tubes. This allows for smaller, more durable, and more mobile systems that use less power. In addition, Leonidas is software driven and can tailor its waveform for optimum effect, it is safe to use around humans who may be in the field of fire, and the present system has twice the range of the 2022 version.&lt;/p&gt;
    &lt;p&gt;But the core feature is its "one-to-many" capability that gives it operational flexibility to handle a variety of scenarios. For example, it can strike against targets with precision to take out hostile drones while avoiding collateral damage, be programmed to set up no-fly zones with safety corridors to take out hostiles while allowing friendlies to pass, sustain continuous fire without overheating, and take down swarms in one go.&lt;/p&gt;
    &lt;p&gt;On August 26, 2025, in front of an invitation-only audience at Camp Atterbury, Indiana, Leonidas took part in a live fire exercise in which it disabled 61 drones with 100% success. This included knocking out two groups of three drones approaching without warning from opposite directions, targeting one of two drones selected by an audience member before disabling the second one, and intercepting and dropping a single drone into a predetermined safe zone.&lt;/p&gt;
    &lt;p&gt;Then came the party piece, it took on over four dozen drones at once, dropping them out of the sky simultaneously with a single pulse. That may not seem like much in words, but a video provided by the company had the lot suddenly crashing like someone had cut their strings.&lt;/p&gt;
    &lt;p&gt;"This is a watershed moment for Epirus," said Andy Lowery, Epirus CEO. "We believe showcasing our weaponized electromagnetic interference is the most effective way to communicate that Leonidas is the only mission-capable, counter-swarm solution for the one-to-many fight.Those who joined us witnessed this first-hand as 61 drones went up – and 61 went down."&lt;/p&gt;
    &lt;p&gt;Source: Epirus&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45399863</guid><pubDate>Sat, 27 Sep 2025 22:25:24 +0000</pubDate></item><item><title>Learn to Play Go</title><link>https://online-go.com/learn-to-play-go</link><description>&lt;doc fingerprint="d37fffed7efd5e8d"&gt;
  &lt;main&gt;
    &lt;p&gt;Loading...&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45400376</guid><pubDate>Sat, 27 Sep 2025 23:50:42 +0000</pubDate></item><item><title>Bonding twelve 56K modems together to set dial-up broadband records</title><link>https://www.tomshardware.com/networking/enthusiasts-bond-twelve-56k-dial-up-modems-together-to-set-dial-up-broadband-records-a-dozen-screeching-boxes-achieve-record-668-kbps-download-speeds</link><description>&lt;doc fingerprint="37d8d13733b3be0b"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Enthusiasts bond twelve 56K modems together to set dial-up broadband records — a dozen screeching boxes achieve record 668 kbps download speeds&lt;/head&gt;
    &lt;p&gt;Multilink PPP worked well on an era-appropriate Windows XP PC, after progress using an earlier Windows ME box stalled.&lt;/p&gt;
    &lt;p&gt;The latest episode published by tech channel The Serial Port began with an interesting question: Is it possible to stream YouTube via dial-up internet? As the headline suggests, the answer is a resounding yes, with our intrepid heroes managing to establish a connection offering download speeds of 668.8 kbps. The feat was eventually achieved using an era-appropriate Windows XP PC, a Cisco VoIP unit, a couple of serial port packing PCI cards, and a dozen 56K modems bonded using Multilink PPP (MPPP) technology. This is probably a world record.&lt;/p&gt;
    &lt;head rend="h2"&gt;When broadband wasn’t so broad&lt;/head&gt;
    &lt;p&gt;The latest regulations from the FCC define broadband as 100 Mbps or higher, but in 2000, a far slower connection of 200 Kbps or higher was considered adequate to earn the designation. Back then, connectivity was slow, but by the turn of the millennium, websites and communications were simpler and had lower bandwidth. For example, downloading multimedia files like MP3s back then could tie up your phone line for 10 to 20 minutes. Thus, applications like the infamous Napster and emerging streaming video and online multimedia experiences begged for broadband.&lt;/p&gt;
    &lt;p&gt;Multilink PPP technology was one possible solution to faster internet connectivity before ISDN and ADSL connectivity became widespread. As the name suggests, MPPP tech combines the bandwidth of multiple modems to create a single logical data pipe.&lt;/p&gt;
    &lt;p&gt;Commercial solutions like “the Diamond Multimedia Shotgun, a PCI card with two onboard modems that could be bonded together using multilink PPP,” leveraged this tech, point out the YouTubers. However, it didn’t gain traction due to the multiple lines and ISP shenanigans required.&lt;/p&gt;
    &lt;p&gt;Now, with an ISP that supports digital modems and the equipment (including a Cisco VoIP gateway) to make it happen, The Serial Port had an opportunity to see how far Multilink PPP can go. Encouragingly, the official MPPP standard doesn’t highlight any practical limits…&lt;/p&gt;
    &lt;head rend="h2"&gt;Cover your ears - Preparing for screeching modem broadband&lt;/head&gt;
    &lt;p&gt;Refocusing on the overarching YouTube streaming goal, our intrepid TechTubers calculated how much bandwidth would need to be squeezed out of their bonded modem array to make streaming tolerable. In brief, ~four 56K modems should be sufficient for minimum-quality desktop streaming (240p, ~200 kbps) in 2025.&lt;/p&gt;
    &lt;p&gt;The first client PC chosen was a 2001-vintage IBM desktop with Windows ME, released just ahead of the widespread availability of broadband. This setup worked with two 56K modems bonded together—a promising start.&lt;/p&gt;
    &lt;p&gt;Get Tom's Hardware's best news and in-depth reviews, straight to your inbox.&lt;/p&gt;
    &lt;p&gt;With the proof that MPPP worked on this contemporaneous PC system, the TechTubers sought to pack more serial ports into the IBM. A card featuring an extra eight serial ports was found. However, driver clashes prevented further scaling…&lt;/p&gt;
    &lt;p&gt;Still optimistic about their project, the team moved up to “slightly newer hardware.” Specifically, an IBM Think Center from 2004 was chosen as a compromise, as we did not want to go too modern. Windows XP was pre-installed on this system, and it was hoped that it could do better with MPPP.&lt;/p&gt;
    &lt;p&gt;Using the newer XP PC, two identical serial expansion cards were installed. However, they didn’t work together, as they overlapped COM port addresses in the Device Manager. So the TechTubers switched to a different brand of serial expansion card for the second card. They ended up with 13 ports in total (including the one on the motherboard).&lt;/p&gt;
    &lt;head rend="h2"&gt;The dusty dozen&lt;/head&gt;
    &lt;p&gt;Unlike with Windows ME, where each modem was dialed in turn, it was observed that XP dialed them all simultaneously! Moreover, the team successfully scaled up from two modems to 12 after several rounds of fiddling with modem DIP switches, phone line connectors, and XP’s serial port controls. As more modems were added to the system, the TechTubers laughed joyously at the sound of multiple modems dialing and negotiating.&lt;/p&gt;
    &lt;p&gt;The dozen modems connected to the Windows XP machine achieved a combined connection speed of 668.8 kbps, offering blistering download speeds. Testing confirmed that this system was able to load and stream YouTube videos, and no buffering was observed after a slight delay (likely due to the old PC's processing power).&lt;/p&gt;
    &lt;p&gt;Did The Serial Port achieve a world record? The TechTubers couldn’t find any accounts of people using more than four modems in MPPP at the same time. The video ends with a tease that they haven’t yet found a limit to MPPP…&lt;/p&gt;
    &lt;p&gt;Follow Tom's Hardware on Google News, or add us as a preferred source, to get our up-to-date news, analysis, and reviews in your feeds. Make sure to click the Follow button!&lt;/p&gt;
    &lt;p&gt;Mark Tyson is a news editor at Tom's Hardware. He enjoys covering the full breadth of PC tech; from business and semiconductor design to products approaching the edge of reason.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;header&gt;ggeeoorrggee&lt;/header&gt;Reply&lt;quote&gt;The latest regulations from the FCC define broadband as 100 Mbps or higher, but in 2000, a far slower connection of 200 Mbps or higher was considered adequate to earn the designation.&lt;/quote&gt;Pretty sure you mean 200 Kbps there.&lt;lb/&gt;I love this idle use of old modems. Best I ever did was dual modems — thankfully replaced by AT&amp;amp;T cable modem 10 months later.&lt;/item&gt;
      &lt;item&gt;&lt;header&gt;atomicWAR&lt;/header&gt;Reply&lt;quote/&gt;Those were the days. My first broadband connection was a cable modem. I had 768Kbps and it screamed.ggeeoorrggee said:Pretty sure you mean 200 Kbps there.&lt;lb/&gt;56k was what my first adult owned computer had. But I remember hacking my mom's work innocently in 3rd grade to watch her companies main frame crash during a lightning storm as I was told it would (was a company joke and fact). Her coworker may have egged me on to try it... And that was on the old acoustic coupler's that had 300 bits per second. Good times.&lt;/item&gt;
      &lt;item&gt;&lt;header&gt;Zaranthos&lt;/header&gt;The per line cost plus taxes probably far exceed the cost of most broadband options. But if latency matters it would probably be faster than satellite internet, but most likely less bandwidth. Land based broadband still doesn't exist everywhere phone lines are installed. In the USA all the promises of "rural broadband" usually result in millions to billions of dollars of wasted money with little actual increased coverage.Reply&lt;/item&gt;
      &lt;item&gt;&lt;header&gt;davidjao&lt;/header&gt;Reply&lt;quote/&gt;Most other satellite providers have worse latency than dialup, but Starlink is the exception. Starlink has very low latency.Zaranthos said:The per line cost plus taxes probably far exceed the cost of most broadband options. But if latency matters it would probably be faster than satellite internet, but most likely less bandwidth. Land based broadband still doesn't exist everywhere phone lines are installed. In the USA all the promises of "rural broadband" usually result in millions to billions of dollars of wasted money with little actual increased coverage.&lt;/item&gt;
      &lt;item&gt;&lt;header&gt;orbatos&lt;/header&gt;Reply&lt;quote/&gt;Latency on dial-up was heavily dependant on physical line quality, but could be quite good, especially once digital infrastructure started to catch up and lines were switched closer to origin. In fact, dual line connections for business configured configured for line based duplex allowed for locally hosted services like email alongside normal operations and multiplayer online gaming in the evenings.Zaranthos said:The per line cost plus taxes probably far exceed the cost of most broadband options. But if latency matters it would probably be faster than satellite internet, but most likely less bandwidth. Land based broadband still doesn't exist everywhere phone lines are installed. In the USA all the promises of "rural broadband" usually result in millions to billions of dollars of wasted money with little actual increased coverage.&lt;lb/&gt;As for rural broadband investment, two things.&lt;lb/&gt;Firstly, it did dramatically increase availability of internet access and schooling across the US. It couldn't fix everything without continued efforts as some infrastructure didn't exist at all, fragile grant based funding wasn't going to cut it. Then there was the resistance from telcos who didn't want to build where there were less customers and more expensive maintenance.&lt;lb/&gt;Secondly, who wasted money? It was broadband monopolies. In several cases this was outright fraud, signing off on a multi-billion contract and doing literally no infrastructure work for years before asking for more money (Comcast). Mature no mistake, the telcos saw this as free money, not something they were interested in. Federal and state oversight were also very lax in these cases, signalling that even many senators just saw it as a kickback rather than something important.&lt;/item&gt;
      &lt;item&gt;&lt;header&gt;Sluggotg&lt;/header&gt;Modems were cool back in the day. Late one night I get all these calls from some Drunken dirt bag. He keeps yelling at me claiming, "I know Suzy is with you" Blah, Blah, Blah. I keep warning him to stop calling me. I finally have enough, (it is around 2 AM). So I fire up my modem to call him and keep calling until it gets a handshake signal. I had it call him till the next evening. He never called back and no I don't know who he was or who Suzy was.Reply&lt;/item&gt;
      &lt;item&gt;&lt;header&gt;trainwrek&lt;/header&gt;This is legit. I used to bond multiple t1 and ISDN lines off cisco routers with MPPP. Fastest and most expansive I did was 4 T1s for ~6mbps for an office of about 250 people. The internet was so different back then though. That was crazy fast and cost almost 4k a month.Reply&lt;lb/&gt;Only ever did 2 of those roberts modems off a cisco for a branch office. Each modem would never connect faster than 48kbps so less than 100kbps when bonded.&lt;/item&gt;
      &lt;item&gt;&lt;header&gt;Vanderlindemedia&lt;/header&gt;I seriously enjoyed a project like this. The simultaneously sound going on when trying to connect all 12 modems lol. The speed is actually well above 600kbps. The latency however must be insane.Reply&lt;/item&gt;
      &lt;item&gt;&lt;header&gt;hookenz&lt;/header&gt;Quite sure those are US Robotics modems, not Cisco. They were the best of the best. Rock solid connection reliability but cost an arm and a leg back in the day. Seeing this brought back some memories. Great post.Reply&lt;/item&gt;
      &lt;item&gt;&lt;header&gt;hookenz&lt;/header&gt;Reply&lt;quote/&gt;Yeah 200MBits in the year 2000 was rare. 2MBit/s was enough. Most people had ADSL or cable modem back then. Up to 2-10mbit/s was common.ggeeoorrggee said:Pretty sure you mean 200 Kbps there.&lt;lb/&gt;I love this idle use of old modems. Best I ever did was dual modems — thankfully replaced by AT&amp;amp;T cable modem 10 months later.&lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45400828</guid><pubDate>Sun, 28 Sep 2025 00:59:51 +0000</pubDate></item><item><title>Do Not Do This Unless You Want Magic Black Smoke</title><link>https://www.linspyre.com/ecoholics/temps.html</link><description>&lt;doc fingerprint="e773707613a0d94b"&gt;
  &lt;main&gt;
    &lt;p&gt;In order to determine what your maximum VoC of an array can be, use one of the conservative estimate tables below or you can compute the temperature coefficients precisely if you have the solar panel specs.&lt;/p&gt;
    &lt;p&gt;Example 1&lt;/p&gt;
    &lt;p&gt;You might choose 0°C or 32°F as it almost never freezes in Georgia and the table shows 136.4v as your VoC maximum. The EcoFlow 400w portables have a VoC of 48.0v which means two solar panels in series have a VoC of 96v (Solar Rule #4 above)- well within the 136.4v limit. Three solar panels in series would exceed the 136.4v limit and result in black magic smoke.&lt;/p&gt;
    &lt;p&gt;Example 2&lt;/p&gt;
    &lt;p&gt;Since it gets really cold in Canada you would likely choose -40°C or -40°F and the table shows 48.0v as your VoC maximum at the coldest temperature. The EcoFlow 220w bifacial portables have a VoC of 21.8v which means you can safely put two solar panels in series (43.6v). Since the Delta 2 Max has two solar input XT60i ports, you can actually add four solar panels, two strands of two panels per port.&lt;/p&gt;
    &lt;p&gt;Published: September 20, 2023&lt;/p&gt;
    &lt;p&gt;Updated:&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45401051</guid><pubDate>Sun, 28 Sep 2025 01:48:15 +0000</pubDate></item></channel></rss>