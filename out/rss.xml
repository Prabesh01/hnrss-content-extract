<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Hacker News: Front Page</title><link>https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml</link><description>Hacker News RSS</description><atom:link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Tue, 23 Sep 2025 14:40:39 +0000</lastBuildDate><item><title>Gamebooks and graph theory (2019)</title><link>https://notes.atomutek.org/gamebooks-and-graph-theory.html</link><description>&lt;doc fingerprint="b28e5a636db0b3bc"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Gamebooks and graph theory&lt;/head&gt;
    &lt;p&gt;Posted on 27 October 2019 in data-science&lt;/p&gt;
    &lt;p&gt;A game book is, contrary to the usual books, a book you don't read pages sequentially. These books are read interactively. You are offered a choice after a paragraph: go to the right turn to section 7, go to the left turn to 138. That's it. Depending on the series, you might have additional rules: fight, magic, psi power, etc.&lt;/p&gt;
    &lt;p&gt;During the winter holidays, I thought a bit more about these books. They could be encoded as directed graph networks. Therefore I could probably apply a bunch of network algorithms to them to extract interesting information such as:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;the shortest path to an instant death,&lt;/item&gt;
      &lt;item&gt;the path with the most fights,&lt;/item&gt;
      &lt;item&gt;etc.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;I chose for my analysis the Lone Wolf series because, luckily for me, some people have put all the books in an electronic format and it's legal. It's a story about Lone Wolf (unexpected I know) the last of his kind, a caste of warrior monks.&lt;/p&gt;
    &lt;p&gt;NB: The Dawn of the Darklords was excluded from the analysis as it was not officially released as a gamebook. It was included in the Magnamund companion.&lt;/p&gt;
    &lt;head rend="h2"&gt;TL;DR&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;The Masters of Darkness has the most action packed with a possible solution path including 65 fights;&lt;/item&gt;
      &lt;item&gt;The shortest path to death is The Kingdoms of Terror with only a 5 section path;&lt;/item&gt;
      &lt;item&gt;The Caverns of Kalte is the most deadly adventure with 19 instant death sections;&lt;/item&gt;
      &lt;item&gt;The shortest adventure is Flight from the Dark with a solution path only 27 sections long;&lt;/item&gt;
      &lt;item&gt;The longest adventure which can be done is The Shadow on the Sand with a touristic path of 224 sections, more than half of the sections (400).&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Summary&lt;/head&gt;
    &lt;p&gt;Here is a summary for the 28 books I've analyzed. For now Lonewolf comprises 4 series:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Kai series: 1 to 5&lt;/item&gt;
      &lt;item&gt;Magnakai series: 6 to 12&lt;/item&gt;
      &lt;item&gt;Grand Master series: 13 to 20&lt;/item&gt;
      &lt;item&gt;New Order series: 21 to 32 (but now only 28 in project aon)&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The values reported below are the average value for each category. Something interesting we can see if that from the 3rd series, there are no more cycles and the shortest path has increased on average 50% compared to the 1st and 2nd series. Also, the shortest path to death has tripled and the number of insta-death was halved.&lt;/p&gt;
    &lt;p&gt;Over time, the books might have become more focused on adventure and story but also less punishing. Having only read the first couple of books, I can't comment on this but if somebody has an opinion on this, I would be happy to hear about it and maybe update the post with your comments.&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="9"&gt;
        &lt;cell role="head"&gt;series&lt;/cell&gt;
        &lt;cell role="head"&gt;shortest path&lt;/cell&gt;
        &lt;cell role="head"&gt;shortest path to death&lt;/cell&gt;
        &lt;cell role="head"&gt;path with the most fights&lt;/cell&gt;
        &lt;cell role="head"&gt;# of fight&lt;/cell&gt;
        &lt;cell role="head"&gt;# of luck&lt;/cell&gt;
        &lt;cell role="head"&gt;# of death&lt;/cell&gt;
        &lt;cell role="head"&gt;# of cycles&lt;/cell&gt;
        &lt;cell role="head"&gt;longest path&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="9"&gt;
        &lt;cell&gt;1-kai&lt;/cell&gt;
        &lt;cell&gt;51&lt;/cell&gt;
        &lt;cell&gt;12&lt;/cell&gt;
        &lt;cell&gt;20&lt;/cell&gt;
        &lt;cell&gt;43&lt;/cell&gt;
        &lt;cell&gt;25&lt;/cell&gt;
        &lt;cell&gt;11&lt;/cell&gt;
        &lt;cell&gt;11&lt;/cell&gt;
        &lt;cell&gt;153&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="9"&gt;
        &lt;cell&gt;2-magnakai&lt;/cell&gt;
        &lt;cell&gt;66&lt;/cell&gt;
        &lt;cell&gt;10&lt;/cell&gt;
        &lt;cell&gt;21&lt;/cell&gt;
        &lt;cell&gt;42&lt;/cell&gt;
        &lt;cell&gt;23&lt;/cell&gt;
        &lt;cell&gt;15&lt;/cell&gt;
        &lt;cell&gt;5&lt;/cell&gt;
        &lt;cell&gt;171&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="9"&gt;
        &lt;cell&gt;3-grand-master&lt;/cell&gt;
        &lt;cell&gt;95&lt;/cell&gt;
        &lt;cell&gt;37&lt;/cell&gt;
        &lt;cell&gt;18&lt;/cell&gt;
        &lt;cell&gt;40&lt;/cell&gt;
        &lt;cell&gt;37&lt;/cell&gt;
        &lt;cell&gt;7&lt;/cell&gt;
        &lt;cell&gt;0&lt;/cell&gt;
        &lt;cell&gt;163&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;4-new-order&lt;/cell&gt;
        &lt;cell&gt;97&lt;/cell&gt;
        &lt;cell&gt;30&lt;/cell&gt;
        &lt;cell&gt;12&lt;/cell&gt;
        &lt;cell&gt;27&lt;/cell&gt;
        &lt;cell&gt;43&lt;/cell&gt;
        &lt;cell&gt;6&lt;/cell&gt;
        &lt;cell&gt;0&lt;/cell&gt;
        &lt;cell&gt;156&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;head rend="h1"&gt;The technical bits&lt;/head&gt;
    &lt;head rend="h2"&gt;The preparation: Turn to 1&lt;/head&gt;
    &lt;p&gt;"Turn to" are the mythic words in these game books. It's also how we will divide the different sections of text, by using regexp. There are 5 types of section and their assigned color:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;normal: you can move forward to another section (white),&lt;/item&gt;
      &lt;item&gt;luck: you are asked to test your luck and you can move forward to another section (green),&lt;/item&gt;
      &lt;item&gt;fight: you are asked to fight some monster(s) and you can move forward to another section (yellow),&lt;/item&gt;
      &lt;item&gt;death: you chose badly and you got yourself killed, you have to restart from the section 1 (red),&lt;/item&gt;
      &lt;item&gt;start/end: first section and last section (blue).&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Once the sections are defined, we have to create the directed graph. To do so, I used two python libraries:&lt;/p&gt;
    &lt;head rend="h2"&gt;Extracting the interesting information: Test your Luck&lt;/head&gt;
    &lt;p&gt;I mainly used &lt;code&gt;networkx&lt;/code&gt; for the graph network analysis. It's a straightforward library and the documentation is good.&lt;/p&gt;
    &lt;head rend="h3"&gt;Do you need a DAGger?&lt;/head&gt;
    &lt;p&gt;Typically a Lonewolf adventure is the equivalent of a Directed (A)Cyclic Graph:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Directed: Lonewolf, your character, goes from the section 1 to hopefully the latest section which is depending on the book the section 300, 350 or 400, without the possibility to come back to the previous section;&lt;/item&gt;
      &lt;item&gt;Acyclic: This is not totally true for the Lonewolf series as 7 books contain cycles, a "circular" path between two nodes which a node is repeated twice. Some algorithms like the shortest path or longest path require a DAG and we need to remove the cycles before running them.&lt;/item&gt;
      &lt;item&gt;Graph: The sections are the nodes of the graph and the vertices the choices for each section.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;Disconnected graphs&lt;/head&gt;
    &lt;p&gt;In several books, graphs are disconnected. It means you can't go from the section 1 to the end section (300 or 350). This indicates usually that there is an enigma or puzzle asking to add numbers discovered along the adventure and reach the section given by the number. The only way to process these graphs is to check the text notes and add the missing edges manually.&lt;/p&gt;
    &lt;head rend="h3"&gt;Cycle removal&lt;/head&gt;
    &lt;p&gt;The cycle removal is an interesting problem as it is one of the first problem to have been shown as NP-complete (NP stands for Non deterministic Polynomial time). This means that there is no known way to find a solution to solve that problem quickly and the time to find a solution grows as the size of the input grows. Nonetheless we are lucky because the data from a gamebook is usually quite small (300 to 400 nodes and 400 to 600 edges)!&lt;/p&gt;
    &lt;p&gt;The idea behind the cycle removal is simple:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;do a DFS search,&lt;/item&gt;
      &lt;item&gt;look at the nodes and their children,&lt;/item&gt;
      &lt;item&gt;if one or more children have been already visited, remove that edge.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h1"&gt;Conclusion&lt;/head&gt;
    &lt;p&gt;I was curious about what could be done with a graph analysis of such textual / interactive games. Besides applying basic algorithms to test if the gamebook is playable, I didn't find much insights from it. I would like to see if there are any correlations between the features I chose and the popularity of the gamebooks. That being said, it was a cool project to do. I brushed up on the graph theory which I never really used outside of university.&lt;/p&gt;
    &lt;head rend="h2"&gt;Future works&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Apply the same methodology to Figthing Fantasy gamebooks&lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45342759</guid><pubDate>Tue, 23 Sep 2025 04:10:15 +0000</pubDate></item><item><title>Zoxide: A Better CD Command</title><link>https://github.com/ajeetdsouza/zoxide</link><description>&lt;doc fingerprint="56bb8c669bcd38dc"&gt;
  &lt;main&gt;
    &lt;p&gt;Special thanks to:&lt;/p&gt;
    &lt;p&gt;zoxide is a smarter cd command, inspired by z and autojump.&lt;/p&gt;
    &lt;p&gt;It remembers which directories you use most frequently, so you can "jump" to them in just a few keystrokes.&lt;lb/&gt; zoxide works on all major shells.&lt;/p&gt;
    &lt;p&gt;Getting started • Installation • Configuration • Integrations&lt;/p&gt;
    &lt;code&gt;z foo              # cd into highest ranked directory matching foo
z foo bar          # cd into highest ranked directory matching foo and bar
z foo /            # cd into a subdirectory starting with foo

z ~/foo            # z also works like a regular cd command
z foo/             # cd into relative path
z ..               # cd one level up
z -                # cd into previous directory

zi foo             # cd with interactive selection (using fzf)

z foo&amp;lt;SPACE&amp;gt;&amp;lt;TAB&amp;gt;  # show interactive completions (zoxide v0.8.0+, bash 4.4+/fish/zsh only)&lt;/code&gt;
    &lt;p&gt;Read more about the matching algorithm here.&lt;/p&gt;
    &lt;p&gt;zoxide can be installed in 4 easy steps:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;&lt;p&gt;Install binary&lt;/p&gt;&lt;p&gt;zoxide runs on most major platforms. If your platform isn't listed below, please open an issue.&lt;/p&gt;&lt;head&gt;Linux / WSL&lt;/head&gt;&lt;p&gt;The recommended way to install zoxide is via the install script:&lt;/p&gt;&lt;code&gt;curl -sSfL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh&lt;/code&gt;&lt;p&gt;Or, you can use a package manager:&lt;/p&gt;&lt;th&gt;Distribution&lt;/th&gt;&lt;th&gt;Repository&lt;/th&gt;&lt;th&gt;Instructions&lt;/th&gt;&lt;td&gt;Any&lt;/td&gt;&lt;td&gt;crates.io&lt;/td&gt;&lt;code&gt;cargo install zoxide --locked&lt;/code&gt;&lt;td&gt;Any&lt;/td&gt;&lt;td&gt;asdf&lt;/td&gt;&lt;code&gt;asdf plugin add zoxide https://github.com/nyrst/asdf-zoxide.git&lt;/code&gt;&lt;code&gt;asdf install zoxide latest&lt;/code&gt;&lt;td&gt;Any&lt;/td&gt;&lt;td&gt;conda-forge&lt;/td&gt;&lt;code&gt;conda install -c conda-forge zoxide&lt;/code&gt;&lt;td&gt;Any&lt;/td&gt;&lt;td&gt;guix&lt;/td&gt;&lt;code&gt;guix install zoxide&lt;/code&gt;&lt;td&gt;Any&lt;/td&gt;&lt;td&gt;Linuxbrew&lt;/td&gt;&lt;code&gt;brew install zoxide&lt;/code&gt;&lt;td&gt;Any&lt;/td&gt;&lt;td&gt;nixpkgs&lt;/td&gt;&lt;code&gt;nix-env -iA nixpkgs.zoxide&lt;/code&gt;&lt;td&gt;AlmaLinux&lt;/td&gt;&lt;code&gt;dnf install zoxide&lt;/code&gt;&lt;td&gt;Alpine Linux 3.13+&lt;/td&gt;&lt;td&gt;Alpine Linux Packages&lt;/td&gt;&lt;code&gt;apk add zoxide&lt;/code&gt;&lt;td&gt;Arch Linux&lt;/td&gt;&lt;td&gt;Arch Linux Extra&lt;/td&gt;&lt;code&gt;pacman -S zoxide&lt;/code&gt;&lt;td&gt;CentOS Stream&lt;/td&gt;&lt;code&gt;dnf install zoxide&lt;/code&gt;&lt;del rend="overstrike"&gt;Debian 11+&lt;/del&gt;1&lt;del rend="overstrike"&gt;Debian Packages&lt;/del&gt;&lt;code&gt;apt install zoxide&lt;/code&gt;&lt;td&gt;Devuan 4.0+&lt;/td&gt;&lt;td&gt;Devuan Packages&lt;/td&gt;&lt;code&gt;apt install zoxide&lt;/code&gt;&lt;td&gt;Exherbo Linux&lt;/td&gt;&lt;td&gt;Exherbo packages&lt;/td&gt;&lt;code&gt;cave resolve -x repository/rust&lt;/code&gt;&lt;code&gt;cave resolve -x zoxide&lt;/code&gt;&lt;td&gt;Fedora 32+&lt;/td&gt;&lt;td&gt;Fedora Packages&lt;/td&gt;&lt;code&gt;dnf install zoxide&lt;/code&gt;&lt;td&gt;Gentoo&lt;/td&gt;&lt;td&gt;Gentoo Packages&lt;/td&gt;&lt;code&gt;emerge app-shells/zoxide&lt;/code&gt;&lt;td&gt;Linux Mint&lt;/td&gt;&lt;td&gt;apt.cli.rs (unofficial)&lt;/td&gt;&lt;td&gt;Setup the repository, then&lt;/td&gt;&lt;code&gt;apt install zoxide&lt;/code&gt;&lt;td&gt;Manjaro&lt;/td&gt;&lt;code&gt;pacman -S zoxide&lt;/code&gt;&lt;td&gt;openSUSE Tumbleweed&lt;/td&gt;&lt;td&gt;openSUSE Factory&lt;/td&gt;&lt;code&gt;zypper install zoxide&lt;/code&gt;&lt;del rend="overstrike"&gt;Parrot OS&lt;/del&gt;1&lt;code&gt;apt install zoxide&lt;/code&gt;&lt;del rend="overstrike"&gt;Raspbian 11+&lt;/del&gt;1&lt;del rend="overstrike"&gt;Raspbian Packages&lt;/del&gt;&lt;code&gt;apt install zoxide&lt;/code&gt;&lt;td&gt;RHEL 8+&lt;/td&gt;&lt;code&gt;dnf install zoxide&lt;/code&gt;&lt;td&gt;Rhino Linux&lt;/td&gt;&lt;td&gt;Pacstall Packages&lt;/td&gt;&lt;code&gt;pacstall -I zoxide-deb&lt;/code&gt;&lt;td&gt;Rocky Linux&lt;/td&gt;&lt;code&gt;dnf install zoxide&lt;/code&gt;&lt;td&gt;Slackware 15.0+&lt;/td&gt;&lt;td&gt;SlackBuilds&lt;/td&gt;&lt;td&gt;Instructions&lt;/td&gt;&lt;td&gt;Solus&lt;/td&gt;&lt;td&gt;Solus Packages&lt;/td&gt;&lt;code&gt;eopkg install zoxide&lt;/code&gt;&lt;td&gt;Ubuntu&lt;/td&gt;&lt;td&gt;apt.cli.rs (unofficial)&lt;/td&gt;&lt;td&gt;Setup the repository, then&lt;/td&gt;&lt;code&gt;apt install zoxide&lt;/code&gt;&lt;td&gt;Void Linux&lt;/td&gt;&lt;td&gt;Void Linux Packages&lt;/td&gt;&lt;code&gt;xbps-install -S zoxide&lt;/code&gt;&lt;head&gt;macOS&lt;/head&gt;&lt;p&gt;To install zoxide, use a package manager:&lt;/p&gt;&lt;th&gt;Repository&lt;/th&gt;&lt;th&gt;Instructions&lt;/th&gt;&lt;td&gt;crates.io&lt;/td&gt;&lt;code&gt;cargo install zoxide --locked&lt;/code&gt;&lt;td&gt;Homebrew&lt;/td&gt;&lt;code&gt;brew install zoxide&lt;/code&gt;&lt;td&gt;asdf&lt;/td&gt;&lt;code&gt;asdf plugin add zoxide https://github.com/nyrst/asdf-zoxide.git&lt;/code&gt;&lt;code&gt;asdf install zoxide latest&lt;/code&gt;&lt;td&gt;conda-forge&lt;/td&gt;&lt;code&gt;conda install -c conda-forge zoxide&lt;/code&gt;&lt;td&gt;MacPorts&lt;/td&gt;&lt;code&gt;port install zoxide&lt;/code&gt;&lt;td&gt;nixpkgs&lt;/td&gt;&lt;code&gt;nix-env -iA nixpkgs.zoxide&lt;/code&gt;&lt;p&gt;Or, run this command in your terminal:&lt;/p&gt;&lt;code&gt;curl -sSfL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh&lt;/code&gt;&lt;head&gt;Windows&lt;/head&gt;&lt;p&gt;zoxide works with PowerShell, as well as shells running in Cygwin, Git Bash, and MSYS2.&lt;/p&gt;&lt;p&gt;The recommended way to install zoxide is via&lt;/p&gt;&lt;code&gt;winget&lt;/code&gt;:&lt;quote&gt;winget install ajeetdsouza.zoxide&lt;/quote&gt;&lt;p&gt;Or, you can use an alternative package manager:&lt;/p&gt;&lt;th&gt;Repository&lt;/th&gt;&lt;th&gt;Instructions&lt;/th&gt;&lt;td&gt;crates.io&lt;/td&gt;&lt;code&gt;cargo install zoxide --locked&lt;/code&gt;&lt;td&gt;Chocolatey&lt;/td&gt;&lt;code&gt;choco install zoxide&lt;/code&gt;&lt;td&gt;conda-forge&lt;/td&gt;&lt;code&gt;conda install -c conda-forge zoxide&lt;/code&gt;&lt;td&gt;Scoop&lt;/td&gt;&lt;code&gt;scoop install zoxide&lt;/code&gt;&lt;p&gt;If you're using Cygwin, Git Bash, or MSYS2, you can also use the install script:&lt;/p&gt;&lt;code&gt;curl -sSfL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh&lt;/code&gt;&lt;head&gt;BSD&lt;/head&gt;&lt;p&gt;To install zoxide, use a package manager:&lt;/p&gt;&lt;th&gt;Distribution&lt;/th&gt;&lt;th&gt;Repository&lt;/th&gt;&lt;th&gt;Instructions&lt;/th&gt;&lt;td&gt;Any&lt;/td&gt;&lt;td&gt;crates.io&lt;/td&gt;&lt;code&gt;cargo install zoxide --locked&lt;/code&gt;&lt;td&gt;DragonFly BSD&lt;/td&gt;&lt;td&gt;DPorts&lt;/td&gt;&lt;code&gt;pkg install zoxide&lt;/code&gt;&lt;td&gt;FreeBSD&lt;/td&gt;&lt;td&gt;FreshPorts&lt;/td&gt;&lt;code&gt;pkg install zoxide&lt;/code&gt;&lt;td&gt;NetBSD&lt;/td&gt;&lt;td&gt;pkgsrc&lt;/td&gt;&lt;code&gt;pkgin install zoxide&lt;/code&gt;&lt;p&gt;Or, run this command in your terminal:&lt;/p&gt;&lt;code&gt;curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash&lt;/code&gt;&lt;head&gt;Android&lt;/head&gt;&lt;p&gt;To install zoxide, use a package manager:&lt;/p&gt;&lt;th&gt;Repository&lt;/th&gt;&lt;th&gt;Instructions&lt;/th&gt;&lt;td&gt;Termux&lt;/td&gt;&lt;code&gt;pkg install zoxide&lt;/code&gt;&lt;p&gt;Or, run this command in your terminal:&lt;/p&gt;&lt;code&gt;curl -sS https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | bash&lt;/code&gt;&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Setup zoxide on your shell&lt;/p&gt;&lt;p&gt;To start using zoxide, add it to your shell.&lt;/p&gt;&lt;head&gt;Bash&lt;/head&gt;&lt;p&gt;Add this to the end of your config file (usually&lt;/p&gt;&lt;code&gt;~/.bashrc&lt;/code&gt;):&lt;quote&gt;eval "$(zoxide init bash)"&lt;/quote&gt;&lt;head&gt;Elvish&lt;/head&gt;&lt;p&gt;Add this to the end of your config file (usually&lt;/p&gt;&lt;code&gt;~/.elvish/rc.elv&lt;/code&gt;):&lt;quote&gt;eval (zoxide init elvish | slurp)&lt;/quote&gt;&lt;p&gt;Note zoxide only supports elvish v0.18.0 and above.&lt;/p&gt;&lt;head&gt;Fish&lt;/head&gt;&lt;p&gt;Add this to the end of your config file (usually&lt;/p&gt;&lt;code&gt;~/.config/fish/config.fish&lt;/code&gt;):&lt;quote&gt;zoxide init fish | source&lt;/quote&gt;&lt;head&gt;Nushell&lt;/head&gt;&lt;p&gt;Add this to the end of your env file (find it by running&lt;/p&gt;&lt;code&gt;$nu.env-path&lt;/code&gt;in Nushell):&lt;quote&gt;zoxide init nushell | save -f ~/.zoxide.nu&lt;/quote&gt;&lt;p&gt;Now, add this to the end of your config file (find it by running&lt;/p&gt;&lt;code&gt;$nu.config-path&lt;/code&gt;in Nushell):&lt;quote&gt;source ~/.zoxide.nu&lt;/quote&gt;&lt;p&gt;Note zoxide only supports Nushell v0.89.0+.&lt;/p&gt;&lt;head&gt;PowerShell&lt;/head&gt;&lt;p&gt;Add this to the end of your config file (find it by running&lt;/p&gt;&lt;code&gt;echo $profile&lt;/code&gt;in PowerShell):&lt;quote&gt;Invoke-Expression (&amp;amp; { (zoxide init powershell | Out-String) })&lt;/quote&gt;&lt;head&gt;Tcsh&lt;/head&gt;&lt;p&gt;Add this to the end of your config file (usually&lt;/p&gt;&lt;code&gt;~/.tcshrc&lt;/code&gt;):&lt;quote&gt;zoxide init tcsh &amp;gt; ~/.zoxide.tcsh source ~/.zoxide.tcsh&lt;/quote&gt;&lt;head&gt;Xonsh&lt;/head&gt;&lt;p&gt;Add this to the end of your config file (usually&lt;/p&gt;&lt;code&gt;~/.xonshrc&lt;/code&gt;):&lt;quote&gt;execx($(zoxide init xonsh), 'exec', __xonsh__.ctx, filename='zoxide')&lt;/quote&gt;&lt;head&gt;Zsh&lt;/head&gt;&lt;p&gt;Add this to the end of your config file (usually&lt;/p&gt;&lt;code&gt;~/.zshrc&lt;/code&gt;):&lt;quote&gt;eval "$(zoxide init zsh)"&lt;/quote&gt;&lt;p&gt;For completions to work, the above line must be added after&lt;/p&gt;&lt;code&gt;compinit&lt;/code&gt;is called. You may have to rebuild your completions cache by running&lt;code&gt;rm ~/.zcompdump*; compinit&lt;/code&gt;.&lt;head&gt;Any POSIX shell&lt;/head&gt;&lt;p&gt;Add this to the end of your config file:&lt;/p&gt;&lt;quote&gt;eval "$(zoxide init posix --hook prompt)"&lt;/quote&gt;&lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Install fzf (optional)&lt;/p&gt;
        &lt;p&gt;fzf is a command-line fuzzy finder, used by zoxide for completions / interactive selection. It can be installed from here.&lt;/p&gt;
        &lt;p&gt;Note The minimum supported fzf version is v0.51.0.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Import your data (optional)&lt;/p&gt;&lt;p&gt;If you currently use any of these plugins, you may want to import your data into zoxide:&lt;/p&gt;&lt;head&gt;autojump&lt;/head&gt;&lt;p&gt;Run this command in your terminal:&lt;/p&gt;&lt;code&gt;zoxide import --from=autojump "/path/to/autojump/db"&lt;/code&gt;&lt;p&gt;The path usually varies according to your system:&lt;/p&gt;&lt;th&gt;OS&lt;/th&gt;&lt;th&gt;Path&lt;/th&gt;&lt;th&gt;Example&lt;/th&gt;&lt;td&gt;Linux&lt;/td&gt;&lt;code&gt;$XDG_DATA_HOME/autojump/autojump.txt&lt;/code&gt;or&lt;code&gt;$HOME/.local/share/autojump/autojump.txt&lt;/code&gt;&lt;code&gt;/home/alice/.local/share/autojump/autojump.txt&lt;/code&gt;&lt;td&gt;macOS&lt;/td&gt;&lt;code&gt;$HOME/Library/autojump/autojump.txt&lt;/code&gt;&lt;code&gt;/Users/Alice/Library/autojump/autojump.txt&lt;/code&gt;&lt;td&gt;Windows&lt;/td&gt;&lt;code&gt;%APPDATA%\autojump\autojump.txt&lt;/code&gt;&lt;code&gt;C:\Users\Alice\AppData\Roaming\autojump\autojump.txt&lt;/code&gt;&lt;head&gt;fasd, z, z.lua, zsh-z&lt;/head&gt;&lt;p&gt;Run this command in your terminal:&lt;/p&gt;&lt;code&gt;zoxide import --from=z "path/to/z/db"&lt;/code&gt;&lt;p&gt;The path usually varies according to your system:&lt;/p&gt;&lt;th&gt;Plugin&lt;/th&gt;&lt;th&gt;Path&lt;/th&gt;&lt;td&gt;fasd&lt;/td&gt;&lt;code&gt;$_FASD_DATA&lt;/code&gt;or&lt;code&gt;$HOME/.fasd&lt;/code&gt;&lt;td&gt;z (bash/zsh)&lt;/td&gt;&lt;code&gt;$_Z_DATA&lt;/code&gt;or&lt;code&gt;$HOME/.z&lt;/code&gt;&lt;td&gt;z (fish)&lt;/td&gt;&lt;code&gt;$Z_DATA&lt;/code&gt;or&lt;code&gt;$XDG_DATA_HOME/z/data&lt;/code&gt;or&lt;code&gt;$HOME/.local/share/z/data&lt;/code&gt;&lt;td&gt;z.lua (bash/zsh)&lt;/td&gt;&lt;code&gt;$_ZL_DATA&lt;/code&gt;or&lt;code&gt;$HOME/.zlua&lt;/code&gt;&lt;td&gt;z.lua (fish)&lt;/td&gt;&lt;code&gt;$XDG_DATA_HOME/zlua/zlua.txt&lt;/code&gt;or&lt;code&gt;$HOME/.local/share/zlua/zlua.txt&lt;/code&gt;or&lt;code&gt;$_ZL_DATA&lt;/code&gt;&lt;td&gt;zsh-z&lt;/td&gt;&lt;code&gt;$ZSHZ_DATA&lt;/code&gt;or&lt;code&gt;$_Z_DATA&lt;/code&gt;or&lt;code&gt;$HOME/.z&lt;/code&gt;&lt;head&gt;ZLocation&lt;/head&gt;&lt;p&gt;Run this command in PowerShell:&lt;/p&gt;&lt;quote&gt;$db = New-TemporaryFile (Get-ZLocation).GetEnumerator() | ForEach-Object { Write-Output ($_.Name+'|'+$_.Value+'|0') } | Out-File $db zoxide import --from=z $db&lt;/quote&gt;&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;When calling &lt;code&gt;zoxide init&lt;/code&gt;, the following flags are available:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;code&gt;--cmd&lt;/code&gt;
        &lt;list rend="ul"&gt;
          &lt;item&gt;Changes the prefix of the &lt;code&gt;z&lt;/code&gt;and&lt;code&gt;zi&lt;/code&gt;commands.&lt;/item&gt;
          &lt;item&gt;&lt;code&gt;--cmd j&lt;/code&gt;would change the commands to (&lt;code&gt;j&lt;/code&gt;,&lt;code&gt;ji&lt;/code&gt;).&lt;/item&gt;
          &lt;item&gt;&lt;code&gt;--cmd cd&lt;/code&gt;would replace the&lt;code&gt;cd&lt;/code&gt;command.&lt;/item&gt;
        &lt;/list&gt;
      &lt;/item&gt;
      &lt;item&gt;Changes the prefix of the &lt;/item&gt;
      &lt;item&gt;
        &lt;code&gt;--hook &amp;lt;HOOK&amp;gt;&lt;/code&gt;
        &lt;list rend="ul"&gt;
          &lt;item&gt;&lt;p&gt;Changes how often zoxide increments a directory's score:&lt;/p&gt;&lt;th&gt;Hook&lt;/th&gt;&lt;th&gt;Description&lt;/th&gt;&lt;code&gt;none&lt;/code&gt;&lt;td&gt;Never&lt;/td&gt;&lt;code&gt;prompt&lt;/code&gt;&lt;td&gt;At every shell prompt&lt;/td&gt;&lt;code&gt;pwd&lt;/code&gt;(default)&lt;td&gt;Whenever the directory is changed&lt;/td&gt;&lt;/item&gt;
        &lt;/list&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;code&gt;--no-cmd&lt;/code&gt;
        &lt;list rend="ul"&gt;
          &lt;item&gt;Prevents zoxide from defining the &lt;code&gt;z&lt;/code&gt;and&lt;code&gt;zi&lt;/code&gt;commands.&lt;/item&gt;
          &lt;item&gt;These functions will still be available in your shell as &lt;code&gt;__zoxide_z&lt;/code&gt;and&lt;code&gt;__zoxide_zi&lt;/code&gt;, should you choose to redefine them.&lt;/item&gt;
        &lt;/list&gt;
      &lt;/item&gt;
      &lt;item&gt;Prevents zoxide from defining the &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Environment variables2 can be used for configuration. They must be set before &lt;code&gt;zoxide init&lt;/code&gt; is called.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;code&gt;_ZO_DATA_DIR&lt;/code&gt;
        &lt;list rend="ul"&gt;
          &lt;item&gt;
            &lt;p&gt;Specifies the directory in which the database is stored.&lt;/p&gt;
          &lt;/item&gt;
          &lt;item&gt;&lt;p&gt;The default value varies across OSes:&lt;/p&gt;&lt;th&gt;OS&lt;/th&gt;&lt;th&gt;Path&lt;/th&gt;&lt;th&gt;Example&lt;/th&gt;&lt;td&gt;Linux / BSD&lt;/td&gt;&lt;code&gt;$XDG_DATA_HOME&lt;/code&gt;or&lt;code&gt;$HOME/.local/share&lt;/code&gt;&lt;code&gt;/home/alice/.local/share&lt;/code&gt;&lt;td&gt;macOS&lt;/td&gt;&lt;code&gt;$HOME/Library/Application Support&lt;/code&gt;&lt;code&gt;/Users/Alice/Library/Application Support&lt;/code&gt;&lt;td&gt;Windows&lt;/td&gt;&lt;code&gt;%LOCALAPPDATA%&lt;/code&gt;&lt;code&gt;C:\Users\Alice\AppData\Local&lt;/code&gt;&lt;/item&gt;
        &lt;/list&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;code&gt;_ZO_ECHO&lt;/code&gt;
        &lt;list rend="ul"&gt;
          &lt;item&gt;When set to 1, &lt;code&gt;z&lt;/code&gt;will print the matched directory before navigating to it.&lt;/item&gt;
        &lt;/list&gt;
      &lt;/item&gt;
      &lt;item&gt;When set to 1, &lt;/item&gt;
      &lt;item&gt;
        &lt;code&gt;_ZO_EXCLUDE_DIRS&lt;/code&gt;
        &lt;list rend="ul"&gt;
          &lt;item&gt;
            &lt;p&gt;Excludes the specified directories from the database.&lt;/p&gt;
          &lt;/item&gt;
          &lt;item&gt;
            &lt;p&gt;This is provided as a list of globs, separated by OS-specific characters:&lt;/p&gt;
            &lt;th&gt;OS&lt;/th&gt;
            &lt;th&gt;Separator&lt;/th&gt;
            &lt;th&gt;Example&lt;/th&gt;
            &lt;td&gt;Linux / macOS / BSD&lt;/td&gt;
            &lt;code&gt;:&lt;/code&gt;
            &lt;code&gt;$HOME:$HOME/private/*&lt;/code&gt;
            &lt;td&gt;Windows&lt;/td&gt;
            &lt;code&gt;;&lt;/code&gt;
            &lt;code&gt;$HOME;$HOME/private/*&lt;/code&gt;
          &lt;/item&gt;
          &lt;item&gt;&lt;p&gt;By default, this is set to&lt;/p&gt;&lt;code&gt;"$HOME"&lt;/code&gt;.&lt;/item&gt;
        &lt;/list&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;code&gt;_ZO_FZF_OPTS&lt;/code&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;code&gt;_ZO_MAXAGE&lt;/code&gt;
        &lt;list rend="ul"&gt;
          &lt;item&gt;Configures the aging algorithm, which limits the maximum number of entries in the database.&lt;/item&gt;
          &lt;item&gt;By default, this is set to 10000.&lt;/item&gt;
        &lt;/list&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;code&gt;_ZO_RESOLVE_SYMLINKS&lt;/code&gt;
        &lt;list rend="ul"&gt;
          &lt;item&gt;When set to 1, &lt;code&gt;z&lt;/code&gt;will resolve symlinks before adding directories to the database.&lt;/item&gt;
        &lt;/list&gt;
      &lt;/item&gt;
      &lt;item&gt;When set to 1, &lt;/item&gt;
    &lt;/list&gt;
    &lt;table&gt;
      &lt;row span="3"&gt;
        &lt;cell role="head"&gt;Application&lt;/cell&gt;
        &lt;cell role="head"&gt;Description&lt;/cell&gt;
        &lt;cell role="head"&gt;Plugin&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;aerc&lt;/cell&gt;
        &lt;cell&gt;Email client&lt;/cell&gt;
        &lt;cell&gt;Natively supported&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;alfred&lt;/cell&gt;
        &lt;cell&gt;macOS launcher&lt;/cell&gt;
        &lt;cell&gt;alfred-zoxide&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;clink&lt;/cell&gt;
        &lt;cell&gt;Improved cmd.exe for Windows&lt;/cell&gt;
        &lt;cell&gt;clink-zoxide&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;emacs&lt;/cell&gt;
        &lt;cell&gt;Text editor&lt;/cell&gt;
        &lt;cell&gt;zoxide.el&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;felix&lt;/cell&gt;
        &lt;cell&gt;File manager&lt;/cell&gt;
        &lt;cell&gt;Natively supported&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;joshuto&lt;/cell&gt;
        &lt;cell&gt;File manager&lt;/cell&gt;
        &lt;cell&gt;Natively supported&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;lf&lt;/cell&gt;
        &lt;cell&gt;File manager&lt;/cell&gt;
        &lt;cell&gt;See the wiki&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;nnn&lt;/cell&gt;
        &lt;cell&gt;File manager&lt;/cell&gt;
        &lt;cell&gt;nnn-autojump&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;ranger&lt;/cell&gt;
        &lt;cell&gt;File manager&lt;/cell&gt;
        &lt;cell&gt;ranger-zoxide&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;raycast&lt;/cell&gt;
        &lt;cell&gt;macOS launcher&lt;/cell&gt;
        &lt;cell&gt;raycast-zoxide&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;rfm&lt;/cell&gt;
        &lt;cell&gt;File manager&lt;/cell&gt;
        &lt;cell&gt;Natively supported&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;sesh&lt;/cell&gt;
        &lt;cell&gt;&lt;code&gt;tmux&lt;/code&gt; session manager&lt;/cell&gt;
        &lt;cell&gt;Natively supported&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;telescope.nvim&lt;/cell&gt;
        &lt;cell&gt;Fuzzy finder for Neovim&lt;/cell&gt;
        &lt;cell&gt;telescope-zoxide&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;tmux-session-wizard&lt;/cell&gt;
        &lt;cell&gt;&lt;code&gt;tmux&lt;/code&gt; session manager&lt;/cell&gt;
        &lt;cell&gt;Natively supported&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;tmux-sessionx&lt;/cell&gt;
        &lt;cell&gt;&lt;code&gt;tmux&lt;/code&gt; session manager&lt;/cell&gt;
        &lt;cell&gt;Natively supported&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;vim / neovim&lt;/cell&gt;
        &lt;cell&gt;Text editor&lt;/cell&gt;
        &lt;cell&gt;zoxide.vim&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;xplr&lt;/cell&gt;
        &lt;cell&gt;File manager&lt;/cell&gt;
        &lt;cell&gt;zoxide.xplr&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;xxh&lt;/cell&gt;
        &lt;cell&gt;Transports shell configuration over SSH&lt;/cell&gt;
        &lt;cell&gt;xxh-plugin-prerun-zoxide&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;yazi&lt;/cell&gt;
        &lt;cell&gt;File manager&lt;/cell&gt;
        &lt;cell&gt;Natively supported&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;zabb&lt;/cell&gt;
        &lt;cell&gt;Finds the shortest possible query for a path&lt;/cell&gt;
        &lt;cell&gt;Natively supported&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;zesh&lt;/cell&gt;
        &lt;cell&gt;&lt;code&gt;zellij&lt;/code&gt; session manager&lt;/cell&gt;
        &lt;cell&gt;Natively supported&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;zsh-autocomplete&lt;/cell&gt;
        &lt;cell&gt;Realtime completions for zsh&lt;/cell&gt;
        &lt;cell&gt;Natively supported&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45342943</guid><pubDate>Tue, 23 Sep 2025 04:48:28 +0000</pubDate></item><item><title>Delete FROM users WHERE location = 'Iran';</title><link>https://gist.github.com/avestura/ce2aa6e55dad783b1aba946161d5fef4</link><description>&lt;doc fingerprint="ee1198109d4361d8"&gt;
  &lt;main&gt;
    &lt;p&gt;Hi! I am an Iranian Software Engineer, and in this torn paper note, I want to talk about some funny moments I had online related to the fact that I was spawned in this specific region of the world: Iran.&lt;/p&gt;
    &lt;p&gt;Back when I was a student, I got access to the Microsoft Imagine, and as a result, I got access to the Microsoft Store as a developer. This inspired me write one of my open-source projects called EyesGuard and publish it on Microsoft Store. However, one day, somebody told me that they can no longer find EyesGuard on the store.&lt;/p&gt;
    &lt;p&gt;I came to the realization that Microsoft deleted my app, my developer account, and all those comments on my app supporting me and suggesting ideas on how to improve the program. I tried to contact the support and email whoever I could, but I was ghosted. Nobody ever explained to me why, but I assume it's because of the sanctions.&lt;/p&gt;
    &lt;p&gt;Notion is a great product, and it was the primary tool I used to manage my personal notes. Not until they suddenly decided to wipe out every data related to the users residing in Iran. Hopefully, they actually responded to my support message:&lt;/p&gt;
    &lt;p&gt;It was because of sanctions. However, they told me that they will not restore the data, even if I leave Iran someday:&lt;/p&gt;
    &lt;p&gt;That said, I am very happy with my own self-hosted Siyuan now.&lt;/p&gt;
    &lt;p&gt;I read hackernews on a daily basis and I visit lots of different websites regularly. I am almost always on my VPN as I am internally firewalled by the government and externally shooed because of the sanctions, so I am probably missing some of these heart-warming messages:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Iranian IPs are blocked here, due to your decision to arm Russia with drones so that they can indiscriminately massacre civilians.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;My VPN turned off, and opening https://www.grepular.com showed me this message. I actually do not blame the people who do this. I think there is a fundamental misconception that people think because "Islamic Republic" has the word "Republic" in it, it must be a government of people in charge. That's not the case. I have yet to see anyone who actually supports Russian aggression in my real life in Iran. Funny enough, Iran's history is full of backstabs by the Russian government.&lt;/p&gt;
    &lt;p&gt;I tried contacting the author by sending this email:&lt;/p&gt;
    &lt;code&gt;Hi Mark,

I hope this message finds you well.

While browsing HackerNews, I came across your website but was greeted with this message:

&amp;gt; Iranian IPs are blocked here, due to your decision to arm Russia with drones so that they can indiscriminately massacre civilians.

I wanted to clarify that the decision to support Russia does not represent the Iranian people. That "your decision" refers to the regime, a theocratic minority that rules Iran without democratic legitimacy. The people of Iran have long protested and revolted against this regime, but unfortunately, they face brutal suppression while unarmed.

In my experience, most Iranians around me, including myself, stand firmly with Ukraine and against Russian aggression.

I’m not asking you to reconsider the IP restriction, you have your reasons and I respect that. I simply wanted to share this perspective and express my solidarity with Ukraine.

Slava Ukraini!

Best regards,
Avestura
&lt;/code&gt;
    &lt;p&gt;I got no replies from them, and I actually didn't expect one.&lt;/p&gt;
    &lt;p&gt;I woke up to the news that GitHub has removed the access of Iranians to their private repositories. Well, that was not good. I tried to launch my own self-hosted instance of Gitea to reduce the damage. However, later, GitHub announced that github is now available in Iran by securing a license from the US government, and we're now good. You see? The weather is good, the birds are singing, GitHub is free again. Fantastic!&lt;/p&gt;
    &lt;p&gt;Similarly, GitLab banned every account that once accessed from an Iranian IP, however, to this day, they never lifted the ban, even on public repositories. I guess they couldn't secure a license from the US government, or they simply never cared. Good luck to them in either case, though. GitLab is an amazing software. One can always self-host it.&lt;/p&gt;
    &lt;p&gt;The list goes on, and almost all of the services you probabelly heard of is banned here: Cloud platforms (AWS, GCP, Azure, ...), Educational platforms (coursera, udemy, etc), Payment software (stripe, paypal, ...).&lt;/p&gt;
    &lt;p&gt;I don't think any of these companies have bad intentions towards any group of people. They are a business after all. They don't hate their customers; they are just playing the game, and the game has such rules. But if someday some law or government forces me to prevent my services from a group, I'll think twice before writing those &lt;code&gt;if&lt;/code&gt; statements. I'll try to have more empathy. People behind those screens are more important than just some rows in my tables.&lt;/p&gt;
    &lt;p&gt;Important&lt;/p&gt;
    &lt;p&gt;In this text, I am NOT asking for the removal of the sanctions targeted at the Islamic Republic of Iran. I am merely remembering some moments on top of my head. For the record, I do not support the actions of the Islamic Republic, and on the contrary, I am in favor of the movements that release the people from such a mafia-like cult ruling a country with thousands of years of history. The actions of the group in charge of Iran are not defensible, and as a matter of fact, the people of Iran are the first layer of victims. Some examples are listed here. I especially feel it differently, as regime thugs put a gun to the throat of a dear person to me, and threatened to kill him if he showed up in protests.&lt;/p&gt;
    &lt;p&gt;By the way, did you know you could return &lt;code&gt;451 Unavailable For Legal Reasons&lt;/code&gt; instead of &lt;code&gt;403 Forbidden&lt;/code&gt; when you're going to ban me next time?&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45343108</guid><pubDate>Tue, 23 Sep 2025 05:30:28 +0000</pubDate></item><item><title>Altoids by the Fistful</title><link>https://www.scottsmitelli.com/articles/altoids-by-the-fistful/</link><description>&lt;doc fingerprint="67519077dbe58b9f"&gt;
  &lt;main&gt;&lt;head rend="h1"&gt;Altoids by the Fistful&lt;/head&gt;&lt;p&gt;“Wh— what did you say?”&lt;/p&gt;&lt;p&gt;It’s close to six o’clock on a weekday afternoon and the bar is starting to get noisy with the after-work crowd. It’s entirely possible I misheard that last part.&lt;/p&gt;&lt;p&gt;“Altoids! I find the spearmint works a little better overall, but recently I’ve started switching flavors depending on the situation.”&lt;/p&gt;&lt;p&gt;I’ve worked with James—“Jim” as everyone on the team knows him—for a little over two years and I’m used to this dance now. He gets a kind of tunnel vision in his excitement about whatever shiny new thing has captured his attention. It’s usually pretty easy to shake him out of it.&lt;/p&gt;&lt;p&gt;“No, Jim, the part before that.”&lt;/p&gt;&lt;p&gt;He looks at me for a moment, inquisitive, before pushing his beer aside. “Here, let me show you.” He reaches underneath the table and produces his beige-on-brown Timbuk2 messenger bag. There is a small wet spot left behind from his drink, and the bag plops right onto it. I watch as one of his stubby hands unbuckles the outermost pouch while the other one pulls out a small green and white tin. I am obviously intended to see this as clearly as possible, evidenced by the way he places it front and center between us.&lt;/p&gt;&lt;p&gt;“Regular everyday Altoids, right? You take about four of them, maybe five.” He flips the lid open and traps the requisite number of small white mints between his fingertips, which he then pops into his mouth. “This is the trick; you gotta half-chew it first.” At least two tiny shards fly in my direction as he speaks these words. It is like listening to a slow K-turn executed on a road covered in gravel and seashells. Three more slow and deliberate chomps, then his bite eases. “Mmm.” The communication style switches to mime: an index finger raised in a “one moment” gesture, followed by an exaggerated point downwards while unzipping the main pouch of the bag. It takes a few seconds of rooting around before the star of this particular show is found.&lt;/p&gt;&lt;p&gt;My eyes barely have enough time to resolve the object under the dismal light at this end of the bar before it’s in his mouth. He’s chewing the full concoction now—mouth closed, thank God. The crunching softens, then fades into the din from a nearby table of sales bros laughing at their sales bro anecdote. Jim is looking at me with a kind of confident smugness I haven’t seen since I bet my buddy at Guitar Center that he couldn’t spontaneously play “Everlong” from memory. A bet I lost, I might add.&lt;/p&gt;&lt;p&gt;There is a degree of intentional spectacle to this, I’d have to imagine. Each jaw movement is deliberate. Precise. He does not break eye contact with me, though I desperately want to break it with him. I can’t though. The absurdity of the scene is absolutely hypnotizing. One final swallow, a smack of his lips, then he opens his mouth wide like a child proving that they finished all their vegetables and have earned their dessert. “Easy peasy, no problem.”&lt;/p&gt;&lt;p&gt;“That was&amp;amp;mldr;” It’s like a significant piece of my brain has just completely locked up. I’m just saying words without thinking, filling the empty air.&lt;/p&gt;&lt;p&gt;“A cat turd!” he proclaims, finishing my sentence.&lt;/p&gt;&lt;p&gt;A beat.&lt;/p&gt;&lt;p&gt;“You just ate a cat turd.” It’s all I can do in this moment to plainly restate the facts as I understand them, although the sense of alarm is definitely carrying in my voice.&lt;/p&gt;&lt;p&gt;“Yup, and it didn’t taste bad at all. The spearmint masks it completely. Watch, I’ll do another one.” My eyes widen in dread as I shake my head weakly. I didn’t want to see him do that the first time; I sure as shit don’t want to see it again.&lt;/p&gt;&lt;p&gt;“No, that’s alright,” I balk.&lt;/p&gt;&lt;p&gt;There is an awkward reach across the bag as he grabs his glass, tips it toward me in a silent toast, then takes a long swill. Whether he admits it or not, there’s evidently something that needs to be washed down. He lets out a contented sigh as the almost-empty glass thumps back down on the table. I glance down at the chicken wings and carrot sticks I had been picking at. A minute ago, they were kinda bland—merely okay by the standards of pub food. With the abrupt loss of my appetite, now they are destined for the dumpster out back.&lt;/p&gt;&lt;p&gt;He lifts the small tin of mints and gives it a little shake in front of my face. It sounds a lot more papery and a lot less metallic than I would’ve guessed. “Altoids. I’m not exaggerating when I say these have completely changed the way I work.” I follow this little miracle box as they get tucked back into the bag, the buckles snapping shut to shield them from the lustful gaze of an angry world. He pauses and looks up at me again. “Would you like to try?”&lt;/p&gt;&lt;p&gt;“No, Jim, I don’t want your cat turds.”&lt;/p&gt;&lt;p&gt;I don’t want your cat turds. Why did I say it like that? I don’t want anybody’s cat turds!&lt;/p&gt;&lt;p&gt;&amp;amp;mldr;Right?&lt;/p&gt;&lt;p&gt;“Completely changed the way I work,” he repeats mechanically, sliding his bag onto the empty seat to his left. I’m finding it quite difficult to look at Jim, so I instead follow the motions of the bag until it is completely out of my view. How many more are in there?&lt;/p&gt;&lt;p&gt;“I used to spend so much of my day on cat turds, psyching myself up, trying strategies that didn’t work, all the cleanup when I was finished. That’s all gone now. I can never go back to the old way.”&lt;/p&gt;&lt;p&gt;“I just&amp;amp;mldr; I mean&amp;amp;mldr;” My brain has started working again, at least superficially, and it has generated so many questions that I’m having a hard time selecting which one to ask first. “How long have you been eating cat turds?” A fine question for this moment, I suppose.&lt;/p&gt;&lt;p&gt;“What do you mean? I’ve always had to eat cat turds. Since I was a kid in school, on through college, in all my jobs&amp;amp;mldr; They keep giving me cat turds and I keep having to eat them, otherwise it starts to pile up and then things really get messy.”&lt;/p&gt;&lt;p&gt;His face turns slightly serious as he parses my expression, his head tilting in suspicion. “You eat cat turds too, yeah?” I choose not to answer that question. He continues anyway. “Sure. We all do. We have to, ya know?”&lt;/p&gt;&lt;p&gt;We all do.&lt;/p&gt;&lt;p&gt;Those words have been repeating in my head with the consistency of a drumline cadence. We all do.&lt;/p&gt;&lt;p&gt;“Walk sign is on to cross Pawk Avenue. Walk sign is on to cross Pawk Avenue.” I’ve heard this prerecorded voice, clearly belonging to the most disgruntled DOT Traffic Signals employee available at the time of this crosswalk’s construction, at least twice per workday for the last two years. It stirs up a half-remembered dream of a career spent shoveling dirt into a hole—something that feels more like the idea of “honest work” than what I get paid to do every day. I bet nobody on the construction crew spent an entire workday fighting around with brittle, poorly designed automation tooling like I did today.&lt;/p&gt;&lt;p&gt;I’m quickly but unintentionally refilling my conscious mind with the task I had gleefully abandoned when Jim invited me out to after-work drinks. Normally I’d be irritated to spend more of my waking life thinking about this stuff, but after what I witnessed at the bar I welcome any distraction at all.&lt;/p&gt;&lt;p&gt;“Okay. So, usually we have a string. This is one of many values inside a mapping type, within a list of similar mappings.” I’m narrating to myself silently, imagining little bits of JSON syntax stamped on rectangles that are kind of stacked on top of each other like playing cards. “But ever since the schema change in V3, sometimes the value is another mapping type that wraps the string we want&amp;amp;mldr;” I’m visualizing another square to the right of the existing one. This one is yellow, distinct from the light blue of all the others, and it never occurs to me to question why that is.&lt;/p&gt;&lt;p&gt;“But because this is actually YAML, and the value comes from a template call, both the string form and the mapping form need to be escaped and indented in a way that works in both cases.” I’m chewing on the problem in pretty much the same mindset I had during work, only now I’m walking across midtown instead of staring at a computer screen. “We could just revert that change, keep the value as JSON like it used to be and insert it verbatim&amp;amp;mldr; but DevEx owns that part and I wouldn’t want to have to fight to get that PR approved.”&lt;/p&gt;&lt;p&gt;“Piece of shit.” I speak that bit out loud without really intending to. I snap back into awareness of my surroundings and look around. Nobody was near enough to hear it. They probably wouldn’t have cared if they were.&lt;/p&gt;&lt;p&gt;It occurs to me that, whenever anybody asks me what I do for a living and I wave my hand and say “Computers,” this is what I’m trying to avoid needing to have to explain. None of these words are being used in a way that would mean anything to most people. If one were to take the time to carefully define them all and how they fit together semantically, they describe concepts so abstract and detached from any kind of tangible shared experience that you’d hit a second wall trying to explain that.&lt;/p&gt;&lt;p&gt;“Oh, but wait, we have the &lt;code&gt;nindent&lt;/code&gt; function. I could just count up the indentation level of the outer list and&amp;amp;mldr; Ah, hell, I forgot this template is transcluded into pod and deployment specs and the nesting levels would be different between the two.” I briefly try to think of which chucklefuck I could blame this design on, but truth be told I rubber-stamped enough questionable pull requests in my time here that a fair amount of this situation is a mess of my own damn making.&lt;/p&gt;&lt;p&gt;Huh. I really do wonder what I would sound like trying to explain this to somebody who had no experience in the industry. I suppose if I was very excited about it, I might come across like an energetic kid going on and on about all the different Pokémon they know about and all the special attacks and vulnerabilities. But without that spark of passion, and in its place a jaded voice tinged with frustration and contempt, I would probably just sound like a raving lunatic. These words don’t mean anything. I’m not describing something that actually exists. I’m playing the part of an observer in a universe of little floating boxes, becoming physically agitated about a superficial difference within the yellow one, and none of it is real.&lt;/p&gt;&lt;p&gt;I’m definitely not feeling the passion on this one. This code runs deep inside a build-deploy pipeline that I have no hope of ever running directly on the computer I’m using. So I write the code, push it to CI, wait for a bunch of stuff I’m not interested in to finish running, then get to watch my change fail to work for either the stupidest typo that I never should’ve made in the first place, or due to some error that is so novel that even the search engines assume I must really be having some other much more popular error instead of the one I provided. It feels like I am performing surgery using a scalpel held by a boardwalk arcade claw machine, complete with the constant squawking and shitting of project management seagulls.&lt;/p&gt;&lt;p&gt;And even if I could concisely explain all of that to my hypothetical interlocutor, there’s the even higher-level question: Why? Why did we even make this change? What was so irredeemably wrong with the last two versions of this thing that we’re now doing it all again a third time? What exactly is the goal we’re trying to achieve here? I can’t really say. It’s a question I never asked, partly because I learned a long time ago that asking questions just causes friction. Just nod and shut up. Put a +1 on a sketchy PR and get it out of here. Don’t hold up the pipeline. Recover enough stamina to face down the next eldritch nightmare that slithers its way to the top of my Jira swimlane. “Sounds great, thanks.” Thumbs-up. Grit my teeth through to the next direct deposit, convince myself it’s not so bad. Do it over and over until some ill-defined end condition is met. I’ll know it when I see it. I hope.&lt;/p&gt;&lt;p&gt;I catch myself at the tail end of a sigh. I fake like I’m yawning to stretch my upper body for a second. Approximately every muscle in my back now aches.&lt;/p&gt;&lt;p&gt;There’s this very real sense that I don’t&amp;amp;mldr; I don’t want to solve this problem. There is no intellectual reward at the end of this journey. It’s not interesting to me. This isn’t something that needs to be fixed, because it’s not a situation that ever should’ve been permitted to happen in the first place. This is just a bunch of contrived nonsense that I must work through because the broader situation dictates it. It doesn’t matter if the solution is good or elegant. It doesn’t matter if it barely works. It doesn’t matter if it causes another problem that I stub my toe on in three weeks. It’s just&amp;amp;mldr; what I have to do.&lt;/p&gt;&lt;p&gt;I stop in my tracks.&lt;/p&gt;&lt;p&gt;These kinds of problems are my cat turds.&lt;/p&gt;&lt;p&gt;Unlike Jim, though, I can’t just cram a bunch of breath mints into my face to make this go away.&lt;/p&gt;&lt;p&gt;The “down” escalator into the train station is out of service, and it has been this way all summer. A pair of orange plastic barricades block the landings at both ends. I walk down two flights of stairs alongside a half-dozen other commuters. Having concluded that the template problem simply isn’t worth thinking any further about, I’m back on the cat turds. I understand what Jim was talking about now. This has been happening for almost my entire life, even going back to my days in elementary school.&lt;/p&gt;&lt;p&gt;All of the homework assignments that were blindly graded against answer keys from the back of a Teacher Edition of the textbook: Cat turds. College admission essays where I profused a longing desire to attend the distinguished universities that my parents and guidance counselor told me I should set my ambitions toward: Cat turds. Probably hundreds of cover letters submitted alongside job applications throughout the years, skimmed by perhaps tens of internal recruiters and hiring managers: Cat turds.&lt;/p&gt;&lt;p&gt;The notion that it was a good idea to manipulate highly whitespace-sensitive YAML data with the Go &lt;code&gt;text/template&lt;/code&gt; package. CI workflows that take 75 minutes to reach the one step in the entire process that fails. Tools and interfaces that force-update and introduce breaking changes for seemingly no justifiable reason, removing or kneecapping features that were being relied on, with issue trackers guarded by thickheaded bots that dismissively auto-close feature requests that kindly ask for consideration for those use cases. Massively over-complicated software that tries to be everything to everybody, but in reality ends up being a gigantic lumbering pile of failure and frustration. Cat turds.&lt;/p&gt;&lt;p&gt;I used to love this stuff. I still do. Except&amp;amp;mldr; I don’t. Not lately, anyway. A long time ago, this was unquestionably what I wanted to do with my life. I would stay up late, pushing back my bedtime for a few more minutes with these glorious machines, hacking away on some little project. Then I’d get up early the following morning, excited to jump back into the project before my day out in the world began. I don’t even clearly remember what I was building toward, but I know it had basically zero utility or market potential. The point of doing the project was simply to do the project—to press through problems, to learn new things, and to end the day with more skills and experience than I started with.&lt;/p&gt;&lt;p&gt;At one point, I had the 7-bit ASCII table memorized. Just the decimal codes; I didn’t really understand the usefulness of the hexadecimal representations, and it never occurred to me that the hex values would work much better in mnemonics. I don’t know why I took the time to learn that. I never really used that knowledge in any real day-to-day work, and it began to fade from my mind as soon as I found some other pointless esoterica to wallpaper over it.&lt;/p&gt;&lt;p&gt;Look at me now, having to Google how to read a text file line-by-line in Python despite having done it a hundred times at this point. The knowledge is up there somewhere, I’m sure of it. I just can’t always think of the idiom in the heat of the moment. Just a little hint to jog the old brain, that’s all I need.&lt;/p&gt;&lt;p&gt;I often wonder what my Younger Self would think of me now, failing to remember a two-line snippet of code that you’d find in the first ten pages of any beginner’s guide to the language. He’d probably sneer and say I need to devote more time to studying. But I’m an adult with things to do; I can’t spend all my time just memorizing things just in case I might need the information someday. Oh, and by the way: Younger Self, if you were such a friggin’ hotshot, why did it take you fifteen years to finally wrap your head around regular expressions? What’s that? Because they were hard? So you spent all your time memorizing easy and pointless trivia rather than tackling anything that was genuinely challenging? And then building up a whole air of superiority based on the number of discrete facts you could rattle off, rather than their practical utility? What, were you trying to become a contestant on Computer Jeopardy! or something?&lt;/p&gt;&lt;p&gt;No wonder Younger Self grew up to be kind of an asshole.&lt;/p&gt;&lt;p&gt;I mean, I didn’t try to be an asshole. It’s just that I tended to gauge my own self-worth relative to others based on the only social currency we could accurately compare: the amount of “stuff” we knew. Some people memorize car engine displacements, others carry in their noggins enough digits of pi to resolve the observable universe down to the width of a hydrogen atom. I had a litany of command-line switches that I never used for anything, HTML character entity names for writing systems I couldn’t comprehend, and tales of tweaking settings deep inside the Windows 98 Device Manager just so I could brag about having been in there in the first place. I also at one time sincerely believed that maybe if I taught myself to—I’m picking one example out of many—decode Code 39 barcodes in my head, it would somehow make me cool and desirable during otherwise awkward social functions. (I did get reasonably good at it. All it takes is memorizing a couple of three-digit sequences. Having a teenager’s near-field visual acuity certainly helped.)&lt;/p&gt;&lt;p&gt;Everybody else who didn’t know those little pieces of nothing? They were the lessers. They didn’t put in the time to grind for this knowledge. They had never scaled the peaks of Mount AltaVista, nor had they knelt in the temple of the MSDN Library for Visual Studio on a banged-up pair of CD-Rs. I knew things they did not, therefore I felt I was higher-and-mightier than they were. I and I alone suffered for this knowledge. This attitude manifested itself in one of two ways: In the first case, I would barge my way into situations where my involvement wasn’t needed or appreciated, thinking I could “save” others from the pain I once had to contend with. More often than not, though, I would simply mock people for not knowing things—usually inside my own head, but sometimes outwardly on mailing lists and message boards. There were times when I judged a person to have failed to put in the necessary amount of work, so therefore they did not deserve to rise anywhere near where I considered my own level to be. It didn’t matter if the subject was deeply technical or a disagreement on the precise phrasing of a Simpsons quote. Somebody got something wrong, and it was my job to rectify that.&lt;/p&gt;&lt;p&gt;I feel bad for the people who worked on teams where Younger Self was the senior engineer. I was full of ideals and convictions back then. “No, we’re not doing that. We’re going to Do It Right instead.” I was full of piss and vinegar. “Here, give me that; I’ll just do it myself.” I was full of shit.&lt;/p&gt;&lt;p&gt;I now realize that everything I lorded over other people—all the things I gatekept without consciously understanding that this was what I was doing—I didn’t need to do that. It really didn’t help anything. For some number of people who interacted with me, I was the problem. I could’ve been more tolerant or forgiving, I could’ve said “let’s find out together,” I could’ve let other people have the fun once in a while. I could have minded my own damn business and saved everybody the hassle.&lt;/p&gt;&lt;p&gt;There were people out there who must’ve felt that I was their cat turds.&lt;/p&gt;&lt;p&gt;I’ll never be able to track down and apologize to every person I treated that way. And why did I even build that fiefdom and protect it so jealously? Why was I so insecure? Why did I have to always be right and have a ready justification for why everybody else was wrong?&lt;/p&gt;&lt;p&gt;It was just me, alone in my tiny sandbox, safe and secure behind my towering fortress of cat turds.&lt;/p&gt;&lt;p&gt;My usual train, the one packed so full that some riders have to stand in the aisles until after the first or second stop, usually leaves at 5:50. Now about three hours later, one can sometimes get an entire car to themselves. I settle down in a window seat looking out at the desolate platform. Evidently there aren’t all that many people interested in traveling across the river at this hour on a Wednesday evening. It feels nice to sit, despite the fact that I’ve probably sat for a cumulative ten hours—at least—over the course of this day.&lt;/p&gt;&lt;p&gt;As sometimes happens, another rider boards the train and enters what had up to this point been my personal rail car. He selects the aisle seat in the row directly in front of me. At least 110 other seats in this car, every single one of them empty, and his choice is to sit right here. Sigh. I could get up and move to another seat but I’m&amp;amp;mldr; exhausted. I’m here, I’m settled in, and above all I’m just completely out of ambition. I guess it’s fine as long as he doesn’t start playing music or TikTok videos without headphones.&lt;/p&gt;&lt;p&gt;A long blow from the locomotive horn, and the train begins to creep forward. Right on schedule. We’re in a tunnel deep below the city’s west side, and the view out the window is pitch black aside from the occasional glow from a mercury-vapor emergency light. On the wall beneath each of these lights, patches of graffiti framed by concrete pillars. I wouldn’t say I’ve memorized them all by heart; I can’t even read the tags on the majority of them. But they are at least familiar, and I’ve found some of them serve as convenient signposts along this portion of the trip. I’m not really paying attention to any of them tonight, instead I’m staring blankly at a little patch of window glass as the scene rolls past.&lt;/p&gt;&lt;p&gt;I refocus my eyes a bit and realize I’m looking at the reflection of a screen, or at least the top corner of one. I turn away from the window and find the source of the light. The man in front of me has opened his laptop—a chunky Dell Latitude or something very close to it—and perched it on a small lap desk fashioned from his leather bag. He opens a web browser and logs into a Microsoft account, one key at a time, hunt-and-peck style. It prompts him for his second factor and he shifts awkwardly in the seat to retrieve his phone. The login process succeeds and, after a few clicks and a fair bit of both of our finite lifetimes spent staring at loading spinners, opens what appears to be a Word document. I can’t read anything on his screen, which is more a testament to how wrecked my eyes have become than anything else, but I can see that there’s about four, perhaps five lines of unformatted text up there already. He strokes his chin while giving it a good read-through, then his hands take their position on the trackpad. Right index finger moves the cursor, left index finger does the clicking. The screen flips to another browser tab, his left hand gratuitously double-clicks on the website suggested by the first tile on the screen, and the page loads.&lt;/p&gt;&lt;p&gt;I never learned to tell any of these sites apart from each other. I see lots of people using the one with the spirograph logo. The one that looks like a cartoon butthole is also quite popular among some departments at my job. This guy is using the one that’s represented by a symmetrical color blob. Not that one, the other color blob one. Yeah.&lt;/p&gt;&lt;p&gt;He has opened a chat session that has evidently been going for some time. The text entry box at the bottom of the window waits patiently for fresh input. Letter by agonizing letter, the keys needed to express his thoughts are pressed. The most-pressed key, however, is Backspace. This man is, using the most generous language possible, not a particularly fast or accurate typist. In total, he enters about ten words before pressing Enter. A short moment later, the machine responds. Entire sentences appear in the time it took him to type a single word. Multiple paragraphs with subheadings and bulleted lists scroll into view. The screen fills completely with this fresh text. He looks at this for a moment, moves his hands back to the trackpad, and selects a complete paragraph. His finger presses down with immense force as he drags the selection area ever wider, as if his catch is in danger of wriggling through his fingers if he doesn’t hold the button down hard enough. He flips back to his Word document and pastes the paragraph. Then back to the chat window. He begins typing again. Slowly. Excruciatingly.&lt;/p&gt;&lt;p&gt;This cycle repeats several times, incrementally building his document up to four or five double-spaced pages in length. It’s not exactly a fast process, but certainly faster than if he had thought up and typed out all that content the old-fashioned way. It’s certainly plausible that he at least read everything that went into the document, but I wouldn’t be able to prove it.&lt;/p&gt;&lt;p&gt;He selects another piece of text, this one substantially smaller than the other specimens that he’d been handling up until this point. This one is pasted into a discussion thread on Teams. He waits a moment for responses, closes the lid, and the laptop goes back into his bag. The man stands up, wraps the strap over his shoulder, and walks to the front of the car as the train brakes to a full stop. This is where our paths diverge, it would seem. The doors open and he steps out into the night.&lt;/p&gt;&lt;p&gt;Alone in the train car again, with nothing interesting to eavesdrop on, my mind begins to wander again. I wonder what the purpose of that document was. Why was it being prepared? Who dictated that a half-dozen input phrases needed to be inflated into a thousand-word wall of text? Who was going to sit and read all of that, anyway? And for what purpose?&lt;/p&gt;&lt;p&gt;I really don’t know. But I do know one thing: It’s cat turds.&lt;/p&gt;&lt;p&gt;This guy obviously didn’t want to do that task. Whether that was due to lack of passion and interest, or lack of skill and ability, he had a cat turd to eat and he found a little pack of Altoids that he could use to get through it with minimal suffering. The people who have to read it? There’s a good chance they’ll be dealing with a cat turd too. Maybe they can choose to employ a chatbot to summarize it back down to his original inputs. Maybe it’ll even do a passable job preserving the essence of the guy’s prompts.&lt;/p&gt;&lt;p&gt;It makes sense why a person or group of people would flock to anything that makes life’s demands a little less difficult for themselves. You’d have to be pretty dumb to want to do a task like that manually.&lt;/p&gt;&lt;p&gt;There’s still the question, though. Why are we all eating cat turds? When did we all collectively agree that we were all a-okay with the idea that we had to subject ourselves to this constant grind of doing shit that doesn’t really need to be done to satisfy requirements that were put in place simply “because” and that seemingly only create more pointless work for other people (or ourselves!) to have to do later?&lt;/p&gt;&lt;p&gt;One of the defining characteristics of humanity is its ability to build and wield tools that make difficult tasks easier. One would presume there would also be a certain wisdom in knowing which of the difficult tasks were worth doing in the first place but&amp;amp;mldr; Well. When you presume, you make a pres out of u and me.&lt;/p&gt;&lt;p&gt;If I had known ahead of time that I’d be out this late, I would’ve brought a jacket. The early autumn air is calm but crisp, and my borough’s train platform offers very little protection from the chill. The crickets are still chirping, but their song has slowed substantially compared to how they sounded a few weeks back. I stopped parking at the station a long time ago—the monthly pass costs well over $150 now, and most days the parking lot is completely full before six o’clock in the morning anyway. It’s only a mile to the house, and this twenty-minute walk is pretty much the only exercise I get nowadays.&lt;/p&gt;&lt;p&gt;Once I cross the main boulevard at the four-way stop, it’s all suburban residential side streets. There is basically no traffic at this time of night in my sleepy little bedroom community. All the dogs have been walked, the kids have been put to bed, and the adults&amp;amp;mldr; Well, I’m sure there are at least a couple people around here drinking or smoking the memory of their cat turds away.&lt;/p&gt;&lt;p&gt;I’m no closer to anything resembling inner peace. I find I’ve grown to despise large swaths of the only thing I’ve ever been able to earn reliable income from. I tire of walking a path that has seemingly shifted beneath my feet to point toward a destination I no longer recognize. I’m embarrassed by the jerk my Younger Self used to be, and simultaneously ashamed of the energy I lost as I matured. I don’t really want to do most of what I have to do, while feeling a deep unsated need to achieve something that I have neither the stamina nor the freedom to pursue. At some point I’m going to reach down deep into the well of ambition to discover there ain’t nothing there to pull out anymore. And then?&lt;/p&gt;&lt;p&gt;Something percent of success is simply showing up. That’s roughly how the quote goes, right? I’ve heard seventy percent, ninety percent, hell, let’s call it seventy-eight. It doesn’t matter because it isn’t a real thing that can be measured in any objective way. The idea is to inspire people to at least try. Put your butt in the chair, log into Teams, trick yourself into thinking, well, I made it all the way here, might as well prune my stale Git branches or something so I can feel like I’m doing real work. Push aside distractions, shake off procrastination, kindle that tiny spark into enough momentum to break through whatever barrier is standing in the way of getting something done. If only that worked with any degree of predictability.&lt;/p&gt;&lt;p&gt;There’s a metaphor that talks about painting the backs of cabinets. The idea is that, when you’re putting paint, stain, varnish, whatever on some cabinets, there’s no need to paint the surfaces that face toward the wall. From the day the units are mounted, to a day forty years from now when they are ripped down and thrown into a construction dumpster during a subsequent kitchen renovation, nobody will see the backs of any of those cabinets. Painting them would be a waste of time and materials. Nobody would know if it was done or not.&lt;/p&gt;&lt;p&gt;“Yes, but I would know.” That’s something my Dad would often say. His tendency has always been to be overly thorough, exacting and precise in any craft he partakes in. Everything—from the doors in the house to the stripes cut into the front lawn—was always level, plumb, square, centered, polished, dust-free, squeak-free, fingerprint-free&amp;amp;mldr; He even demonstrated meticulous care in breaking down cardboard and filling up the waste bins at the curb. I still have no idea how he was able to raise two kids in that house without exploding from the chaos we brought.&lt;/p&gt;&lt;p&gt;Maybe it was genetic, or maybe I voluntarily developed it so my dad would be proud of me just like he was proud of the other things he made. Either way, I definitely started to take after him in those ways and I now recognize this same kind of care in myself all the time. Not just in the way I prefer all my clocks to read the exact correct time or my knack for always noticing the way the receptacle face isn’t exactly flush with the wall plate&amp;amp;mldr; but in a fundamental inability to not care about quality or craft. Even when the task doesn’t matter. Even if it results in an entire afternoon spent painting a piece of carpentry that nobody will ever see. I can’t not care.&lt;/p&gt;&lt;p&gt;All that stuff Younger Self struggled with—the self-superiority, the sense that I had to be the one who did it if it needed to be done correctly, the derision and borderline abuse I gave others—that was all just a big dogmatic ball of caring a whole lot about quality and craft, being rolled around by a kid who didn’t understand what to do with it. I had to work so hard to care so much, and these other people didn’t, and everything worked out for them anyway, and that wasn’t fair. Decades later, I still feel that way sometimes.&lt;/p&gt;&lt;p&gt;My parents still live in that house, surrounded by all the things my dad cared so much about. Aside from a whole bunch of trees that died and needed to be cut down to stumps, everything is still pretty much pristine. But if you start to look around, really scrutinize, you’ll start to notice some things have slipped. There’s a film of dust on the higher wall decorations. Some of the brass knobs are becoming tarnished. A few of the light bulbs in the hallway fixtures don’t match. My dad seemed tired the last time we talked, and more than once he expressed the sentiment that “everything he owns is falling apart.” Is it simply the onset of physical old age that has limited his ability to stay on top of these things, or is he beginning to leave behind his era of caring?&lt;/p&gt;&lt;p&gt;Now that I think about it, I don’t think we’ve ever really talked about how care factored into his career philosophy. I had always implicitly assumed that it was the same as it currently is with me: Work or play, it’s always there. Can’t turn it off even if I wanted to. But what if he could? What if all the care he demonstrated in projects around the house was compensation for all the things he deliberately avoided caring about at work? It would certainly explain how he was able to consistently sustain those standards. But then, that would mean that I modeled my own principles and tastes on a distorted view of my dad, untempered by whatever he didn’t let me see about his workplace persona.&lt;/p&gt;&lt;p&gt;How would I begin to—well, I don’t want to say “not care,” that sounds too extreme. But maybe&amp;amp;mldr; selectively care? To care about the things that matter, the things that spark passion and joy and remind me why I spent so much time practicing this godforsaken occupation. While at the same time recognizing the things that don’t matter, the problems for which the optimal solution is to stop insisting on having that problem in the first place. The kinds of tasks for which the 78% showing-up baseline score is plenty good enough. Tasks on which care would be utterly wasted, the cases where the cabinets are so irredeemably fucked up that the lack of paint on the back is the last thing anybody’s going to worry about. Those are the tasks that hurt the most, because I find it basically impossible to make myself care about them. It offends my soul to try to force it, and it drains me of all ambition to move onto the next potentially heartening opportunity. It’s a real problem, and I find it always has been: If I can’t care about it, I have an extremely hard time bringing myself to do it at all.&lt;/p&gt;&lt;p&gt;Well, I suppose that’s when I open a chatbot session of my own. “Hey there Chat. Uh, we’ve never spoken before but, uh&amp;amp;mldr; Well, my entire system of self-motivation just completely broke down but I still need to keep moving forward. Can you help me out of this bind?” There’s a whole discipline—they call it Prompt Engineering—that’s just a fancy form of throwing your hands up and pressing the Care About It For Me button. That’s pretty much how it works. Provide it with any cat turd under the sun, it doesn’t matter. Chat will gobble them all up for you like a coprophagic dog.&lt;/p&gt;&lt;p&gt;I’d be lying if I said the idea didn’t make my skin crawl a little. Every fiber of my being says that this is a weight to be borne by me and me alone. This is my cat turd to eat; they gave it to me. When it’s done, I can open my grinning maw and say without equivocation that I was the one who got through it. I painted the back of this cabinet. I worked way too hard and poured far too much of my blood, sweat and tears into this thing. And my reward for a job well done is&amp;amp;mldr; debilitating exhaustion, most of the time. Getting a fresh cat turd to eat tomorrow. And the day after.&lt;/p&gt;&lt;p&gt;Of course, Chat can’t really care. It does a passable job pretending like it cares, saying the words that convey the illusion of care to any reader not paying very close attention. Where do I draw the line between fostering real care, versus passing off a degraded third-generation photocopy of some tokenization of what may have at one point been somebody else’s care? Is the line simply the boundary between the tasks I’m excited to do and the ones I put off until I’ve depleted enough mental reserves to sorta care?&lt;/p&gt;&lt;p&gt;It really does feel like the average person has made a choice to abandon a great deal of care, at least in their professional capacity. Take a look around at all these people with their fake shit-eating grins, passing off a machine’s effort as their own and experiencing no consequences. Sometimes they’re rewarded for doing so. There are organizations that are beginning to mandate it now. These people aren’t eating their cat turds anymore, why am I still sitting here eating mine?&lt;/p&gt;&lt;p&gt;I round the final curve leading to the corner of my block. As I pass under the streetlight, I cast a shadow on the asphalt ahead. With each step it grows longer and more distorted. There’s a rustle from the shrubs bordering my neighbor’s driveway, and a small dark form emerges. It crosses the street halfway then abruptly stops. I stop as well. A pair of glowing yellow eyes look back at me. I stare at it, it stares at me. A possum, perhaps? Somebody’s outdoor cat? It’s just watching me, seemingly peering straight into my very soul. Can it see what I’m grappling with here? Is it passing judgement on me for thinking these thoughts? It sizes me up for a moment longer, turns its head, and becomes a black apparition once more. I struggle to track it as it continues across the street, and I lose sight of it entirely.&lt;/p&gt;&lt;p&gt;I arrive at home and shut the door behind me. Sunset was over two hours ago and it’s nearly pitch black in the hallway. I fumble around for the light switch, kick my shoes off next to the doorway, and hang my bag on its hook in the coat closet. Something grabs my attention, just above eye level, slightly overhanging the edge of the top shelf. I slide it out of its resting place and carry it into the kitchen. I sit down at the table and inspect it.&lt;/p&gt;&lt;p&gt;This object is a round metal cookie tin about twelve inches in diameter. Beneath a thin coat of dust, it is a deep red with a repeating pattern of snowmen and white snowflakes, and quite obviously once held winter holiday–themed cookies. I repurposed it many years ago to hold the only vice I currently permit myself to indulge in: a meticulously curated collection of all different types of chocolate candies. I remove the lid and set it aside. I survey the contents, a sea of differently-shaped naked chocolate morsels. I don’t remember why I chose to remove all the foil and paper wrapping before putting these in here. From my vantage point, everything looks vaguely the same—I can’t readily spot any differences between milk chocolate and dark, or those filled with caramel versus crème.&lt;/p&gt;&lt;p&gt;One particular piece near the edge catches my eye, and I carefully select it for inspection. It’s not a very pleasing color or shape—oddly asymmetrical. I roll it around between my fingers. There’s a hair on it. I hold it up to my nose and take a whiff, hoping to detect the aroma of the cacao. Try as I might, I can’t pick up any trace of its scent.&lt;/p&gt;&lt;p&gt;Come to think of it, I can’t remember the last time I smelled anything.&lt;/p&gt;« Back to Articles&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45343449</guid><pubDate>Tue, 23 Sep 2025 06:24:50 +0000</pubDate></item><item><title>Awash in revisionist histories about Apple's web efforts, a look at the evidence</title><link>https://infrequently.org/2025/09/cupertinos-comforting-myths/</link><description>&lt;doc fingerprint="a7d8d93d1a72316c"&gt;
  &lt;main&gt;
    &lt;head rend="h2"&gt;Comforting Myths&lt;/head&gt;
    &lt;head rend="h3"&gt;Awash in revisionist histories about Apple's web efforts, a look at the evidence.&lt;/head&gt;
    &lt;p&gt;In several recent posts, I've attempted to address how the structure of standards bodies, and their adjacent incubation venues, accelerates or suppresses the potential of the web as a platform. The pace of progress matters because platforms are competitions, and actors that prevent expansions of basic capabilities risk consigning the web to the dustbin.&lt;/p&gt;
    &lt;p&gt;Inside that framework, there is much to argue over regarding the relative merits of specific features and evolutionary directions. This is healthy and natural. We should openly discuss features and their risks, try to prevent bad consequences, and work to mend what breaks. This competitive process has made browsers incredibly safe and powerful for 30 years.&lt;/p&gt;
    &lt;p&gt;Until iOS, that is.&lt;/p&gt;
    &lt;p&gt;Imagine my surprise hearing that Apple isn't attempting to freeze the web in amber to make space for its own proprietary platform because it engages to redesign proposals it disagrees with.&lt;/p&gt;
    &lt;p&gt;As I have occasionally documented, this was not my experience. I had relatively broad exposure to the patterns of Apple's collaboration, having designed, advised on, or led teams that built dozens of features across disparate areas of the platform since the Blink fork.1&lt;/p&gt;
    &lt;p&gt;But perhaps this was the wrong slice from which to judge? I've been hearing of Apple's openness to collaboration on challenging APIs so often that either my priors are invalid, or something else is at work. To find out, I needed data.&lt;/p&gt;
    &lt;head rend="h2"&gt;Background&lt;/head&gt;
    &lt;p&gt;A specific parry deployed whenever Apple's sluggish pace is raised: “controversial” features “lack consensus” or “are not standards” or “have privacy and security problems” (unspecified). The corollary being that Apple engages in good-faith to address these developer needs in other ways, even in areas where they have overtly objected.&lt;/p&gt;
    &lt;p&gt;Apple's engine has indisputably trailed Blink and Gecko in all manner of features over the past decade. This would not be a major problem, except that Apple prevents other browsers from delivering better and more competitive web engines on iOS.&lt;/p&gt;
    &lt;p&gt;Normally, consequences for not adopting certain features arrive in the market. Browsers that fail to meet important needs, or drop the ball on quality lose share. This does not hold on iOS because no browser can ship a less-buggy or more capable engine than Apple's WebKit.&lt;/p&gt;
    &lt;p&gt;Because competitors are reduced to rebadging WebKit, Apple has created new responsibilities and expectations for itself.2 Everyone knows iOS is the only way to reach wealthy users, and no browser can afford to be shut out of that slice of the mobile market. Therefore, the quality and features of Apple's implementation matter intensely to the health and competitiveness of the web, as web developers cannot even encourage users to switch to less buggy or feature-impoverished browsers.&lt;/p&gt;
    &lt;p&gt;This put's Apple's actions squarely in the spotlight.&lt;/p&gt;
    &lt;p&gt;The moment iPhone users around the world can install high-quality browsers, the conversational temperature about features and reliability will drop considerably. Apple know this, but it's unclear if those asserting WebKit engages constructively in tricky design areas do.&lt;/p&gt;
    &lt;head rend="h2"&gt;Is Apple Engaged In Constructive API Redesign?&lt;/head&gt;
    &lt;p&gt;It's possible to size up Apple's appetite for problem-solving in several ways. We can look to understand how frequently Apple ships features ahead of, or concurrently with, other engines because near-simultaneous delivery is an indicator of co-design. We can also look for visible indications of willingness to engage on thorny designs, searching for counter-proposals and shipped alternatives along the way.&lt;/p&gt;
    &lt;head rend="h3"&gt;General Trends&lt;/head&gt;
    &lt;p&gt;This chart tracks single-engine omissions over the past decade; a count of designs which two engines have implement but which a single holdout prevents from web-wide availability:&lt;/p&gt;
    &lt;p&gt;Thanks to the same Web Features data set, many views are possible. This data shows that there are currently 185 features in Chromium that are not available in Safari, and 32 features in Safari that are not yet in Chromium. (or 187 and 35 for mobile, respectively). But as I've noted previously, point-in-time evaluations may not tell us very much.&lt;/p&gt;
    &lt;p&gt;I was curious about delays in addition to omissions. How often do we see evidence of simultaneous shipping, indicating strong collaboration? Is that more or less likely than leading vendors feeling the need to go it alone, either because of a lack of collaborative outreach, or because other vendors do not engage when asked?&lt;/p&gt;
    &lt;p&gt;To get a sense, I downloaded all the available data (JSON file), removed features with no implementations, removed features that were not introduced before 2015, filtered to Chrome, Safari, and Firefox, then aggregated by year. The resulting data set is here (JSON file).&lt;/p&gt;
    &lt;p&gt;The data can't determine causality, but can provide directional hints:&lt;/p&gt;
    &lt;p&gt;Safari rarely leads, but that does not mean other vendor's designs will stand the test of time. But if Apple engages in solving the same problems, we would expect to see Safari leading on alternatives3 or driving up the rates of simultaneously shipping features once consensus emerges. But these aren't markedly increased. Apple can, of course, afford to fund work into alternatives for “problematic” APIs, but it doesn't seem to.&lt;/p&gt;
    &lt;p&gt;Narratives about collaboration in tricky areas take more hits from Safari's higher incidence of catch-up launches. These indicate Apple shipping the same design that other vendors led with, but on a delay of two years or more from their first introduction. This is not redesign. If there were true objections to these APIs, we wouldn't expect to see them arrive at all, yet Apple has done more catching up over the past several years than it has shipped APIs with other vendors.&lt;/p&gt;
    &lt;p&gt;This fails to rebut intuitions developed from recent drops of Safari features (1, 2) composed primarily of features that Apple's engineers were not primary designers of.&lt;/p&gt;
    &lt;p&gt;But perhaps this data is misleading, or maybe I analysed it incorrectly. I have heard allusions to engagement regarding APIs that Apple has publicly rejected. Perhaps those are where Cupertino's standards engineers have invested their time?&lt;/p&gt;
    &lt;head rend="h3"&gt;Hard Cases&lt;/head&gt;
    &lt;p&gt;Most of the hard cases concern APIs that Apple (and others) have rightly described as having potentially concerning privacy and security implications. Chromium engineers agreed those concerns have merit and worked to address them; we called it “Project Fugu” for a reason. In addition to meticulous design to mitigate risks, part of the care taken included continually requesting engagement from other vendors.&lt;/p&gt;
    &lt;p&gt;Consider the tricky cases of Web MIDI, Web USB, and Web Bluetooth.&lt;/p&gt;
    &lt;head rend="h4"&gt;Web MIDI&lt;/head&gt;
    &lt;p&gt;Apple has supported MIDI in macOS for at least 20 years — likely much longer — and added support for MIDI on iOS with 2010's introduction of Core MIDI in iOS 4.2. By the time the first Web MIDI proposals broke cover, MIDI hardware and software were the backbone of digital music and a billion dollar business and Apple's physical stores stocked racks of MIDI devices for sale. Today, an overwhelming fraction of MIDI devices explicit list their compatibility with iOS and macOS.&lt;/p&gt;
    &lt;p&gt;It was therefore a clear statement of Apple's intent to cap web capabilities when it objected to Web MIDI's development just before the Blink fork. The objections by Apple were by turns harsh, condescendingly ignorant and imbued with self-fulfilling stop-energy; patterns that would repeat post-fork.&lt;/p&gt;
    &lt;p&gt;After the fork and several years of open development (which Apple declined to participate in), Web MIDI shipped in Chromium in early 2015. Despite a decade to engage, Safari has not shipped Web MIDI, Apple has not provided a “standards position” for it4, and has not proposed an alternative. To the best of my knowledge, Apple have also not engaged in conversations about alternatives, despite being a member of the W3C's Audio Working Group which has published many Working Drafts of the API. That group has consistently included publication of Web MIDI as a goal since 2012.&lt;/p&gt;
    &lt;p&gt;Across 11 charters or re-charters since then, I can find no public objection within the group's mailing list from anyone with an &lt;code&gt;@apple.com&lt;/code&gt; email address.5 Indeed, I can find no mentions of MIDI from anyone at Apple on the public list. Obviously, that is not the same thing as agreeing to publication as a Recommendation, but it also not indicative of any attempts at providing an alternative.&lt;/p&gt;
    &lt;p&gt;But perhaps alternatives emerged elsewhere, e.g., in an Incubation venue? There's no counter-proposal listed in the WebKit explainers repository, but maybe it was developed elsewhere? We can check for features available behind flags in Safari Technology Preview and read the Tech Preview release notes. To check them, I used &lt;code&gt;curl&lt;/code&gt; to fetch each of the 127 JSON files that are, apparently, the format for Safari's release notes, pretty-printed them with &lt;code&gt;jq&lt;/code&gt;, then grepped case-insensitively for mention of “audio” and “midi”. Every mention of “audio” was in relation to the Web Audio API, the Web Speech API, WebRTC,, the &lt;code&gt;&amp;lt;audio&amp;gt;&lt;/code&gt; element,, or general media playback issues. There were zero (0) mentions of MIDI.&lt;/p&gt;
    &lt;p&gt;I also cannot locate any public feedback on Web MIDI from anyone I know to have an &lt;code&gt;@apple.com&lt;/code&gt; email address in the issue tracker for the Web Audio Working Gropup or in WICG except for a single issue requesting that WICG designs look “less official.”&lt;/p&gt;
    &lt;p&gt;The now-closed Web MIDI Community Group, likewise, had zero (0) involvement by Apple employees on its mailing list or on the successor Audio Community Group mailing list. There were also no (0) proposals covering similar ground that I was able to discern on the Audio CG issue list.&lt;/p&gt;
    &lt;p&gt;Instead, Apple have issued a missive decrying Web MIDI as a privacy risk. As far as anyone can tell, this was done without substantive analysis or engagement with the evidence from nearly a decade of deploying it in Chromium-based browsers.&lt;/p&gt;
    &lt;p&gt;If Apple ever offered an alternative, or to collaborate on a redesign, I can find no evidence of it in the public record.6&lt;/p&gt;
    &lt;head rend="h4"&gt;Web USB&lt;/head&gt;
    &lt;p&gt;USB is a security sensitive API, and Web USB was designed with those concerns in mind. All browser that ship Web USB today present “choosers” that force users to affirmatively select each device they provide access to, from which sites, and always show ambient usage indicators that let users revoke access. Further, sensitive device classes that are better covered by more specific APIs (e.g., the Filesystem Access API instead of USB Mass Storage) are restricted.&lt;/p&gt;
    &lt;p&gt;This is far from the Hacker News caricature of "letting any web page talk to all of your USB devices." In fact, it is significantly protected access far beyond what operating systems offer.&lt;/p&gt;
    &lt;p&gt;After two years of public development and a series of public Origin Trials lasting seven months (1, 2), the first version of the API shipped in Chrome 61, released September 2017.&lt;/p&gt;
    &lt;p&gt;I am unable to locate any substantive engagement from Apple about alternatives for the motivating use-cases outlined in the spec, and which have been successfully addressed by Web USB in Chromium since 2017. Web USB has made teaching programming in classrooms better, e.g., more than a decade after Apple was first approached to discuss the use case, it's unclear what Apple's alternative is. Hollowing out school budgets to buy Cupertino's high-end devices to run unsafe, privacy-invading native apps?&lt;/p&gt;
    &lt;p&gt;Apple have included Web USB on the list of APIs they “decline to implement” and quite belatedly issued a “standards position” opposing the design. But no alternative proposal was developed or linked from those threads, despite being asked directly if there might be more palatable alternatives.&lt;/p&gt;
    &lt;p&gt;I can locate no appetite from Apple's standards engineers to address these use-cases, know of no enquiries into data about our experiences shipping them, and can find no constructive counterproposals. Which raises the obvious question: if Apple does engage to develop counterproposals in tricky areas, how long are counterparties meant to wait? More than eight years?&lt;/p&gt;
    &lt;head rend="h4"&gt;Web Bluetooth&lt;/head&gt;
    &lt;p&gt;Like Web USB, Web Bluetooth was designed from the ground-up with safety in mind and, as a result, has been incredibly safe and deployed at massive scale for eight years. It relies on the same chooser model in Chromium-based browsers.&lt;/p&gt;
    &lt;p&gt;As with all Project Fugu device APIs, Web Bluetooth was designed to reduce ambient risks — no access to Bluetooth Classic, available only on secure sites, and only in &lt;code&gt;&amp;lt;iframe&lt;/code&gt;&amp;gt;s with explicit delegation, etc. — and to give implementers flexibility about the UIs they present to maximise trust and minimise risk. This included intentionally designing flexibility for restricting access based on context; e.g., only from installed PWAs, if a vendor chooses that.&lt;/p&gt;
    &lt;p&gt;The parallels with Web USB continue on the standards track. I can locate no engagement from any &lt;code&gt;@apple.com&lt;/code&gt; or &lt;code&gt;@webkit.org&lt;/code&gt; email addresses on the &lt;code&gt;public-web-bluetooth&lt;/code&gt; mailing list. In contrast, when design work began in 2014 and every browser vendor was invited to participate, Mozilla engaged. I can find no evidence of similar openness on the part of Apple, nor constructive counter-proposals.&lt;/p&gt;
    &lt;p&gt;Over more than three years of design and gestation in public, including very public Origin Trials, Apple did not provide constructive feedback, develop counter-proposals, or offer to engage in any other way I can find.&lt;/p&gt;
    &lt;p&gt;This appears to be a pattern.&lt;/p&gt;
    &lt;p&gt;From a deep read of the “standards position” threads for designs Apple opposes, I cannot find evidence that Cupertino has ever offered a constructive counter-proposal for any API it disfavours.&lt;/p&gt;
    &lt;p&gt;These threads do demonstrate downplaying clearly phrased developer needs, but it seems the pattern for parties to beg Apple to belatedly form an opinion. When there is push-back, often after years of radio silence on a topic, requesters (not Apple) also have to invent potential alternatives, which Apple may leave hanging without engagement for years.&lt;/p&gt;
    &lt;p&gt;Worse, there are performative expressions of disinterest which Apple's standards engineers know are in bad-faith. An implementer withholding engagement from a group, then claiming a lack of implementer engagement in that same venue as a reason not to support a design is the sort of self-serving, disingenuous circularity worthy of disdain.&lt;/p&gt;
    &lt;head rend="h2"&gt;Overall Impressions&lt;/head&gt;
    &lt;p&gt;Perhaps both the general trends and these specific high-profile examples are aberrant. Perhaps Apple's modus operandi isn't to:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Ignore new incubations, even when explicitly asked to participate.&lt;/item&gt;
      &lt;item&gt;Fail to register concerns early and collaboratively, where open design processes could address them.&lt;/item&gt;
      &lt;item&gt;Force web developers and other implementers to request “positions” at the end of the design process because Apple's disengagement makes it challenging to understand Cupertino's level of support (or antipathy).&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Mayhaps it's not simply the predicable result of paltry re-investments in the web by a firm that takes eye watering sums from it.&lt;/p&gt;
    &lt;p&gt;If so, I would welcome evidence to that effect. But the burden of proof no longer rests with me.7&lt;/p&gt;
    &lt;head rend="h2"&gt;What's Happening Here?&lt;/head&gt;
    &lt;p&gt;It's hard to say why some folks are under the impression that Apple are generous co-designer, or the idea that Apple's evocative statements about hard-case features are grounded in analysis or evidence. As no concrete evaluation of the supposed risks has been provided, we can only guess as to motive.&lt;/p&gt;
    &lt;p&gt;The most generous case I can construct is that Apple's own privacy and security failures in native apps have scared it away. The more likely reality is that upper management fears PWAs and wants to keep them from threatening the App Store with safe alternatives that don't require paying Apple's vig.&lt;/p&gt;
    &lt;p&gt;Whatever the cause, the data does not support the idea that Apple visibly engages in constructive critique or counter-proposal in these areas.&lt;/p&gt;
    &lt;p&gt;Moreover, it shows that many of Apple's objections and delays were unprincipled. It should be every browser's right to control the features it enables, and Cupertino is entirely within those rights to avoid shipping features in Safari. But the huge number of recent “catch-up” features tells a story that aligns more with covering for embarrassing oversights, rather than holding a line on quality, privacy, or security.&lt;/p&gt;
    &lt;p&gt;On the upside, this suggests that if and when web developers press hard for capabilities that have been safe on other platforms, Cupertino will relent or be regulated into doing so. It scarcely has a choice while simultaneously skimming billions from the web and making arguments like these to regulators (PDF, p35):&lt;/p&gt;
    &lt;head rend="h2"&gt;FOOTNOTES&lt;/head&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;My various roles since the Blink fork have included:&lt;/p&gt;
        &lt;list rend="ul"&gt;
          &lt;item&gt;TC39 representative&lt;/item&gt;
          &lt;item&gt;Co-designer of Service Workers ('12-'15)&lt;/item&gt;
          &lt;item&gt;Co-Tech Lead for Project Fizz ('14-'16)&lt;/item&gt;
          &lt;item&gt;Three-time elected member of the W3C's Technical Architecture Group ('13-'19)&lt;/item&gt;
          &lt;item&gt;Web Standards Tech Lead for Chrome ('15-'21)&lt;/item&gt;
          &lt;item&gt;Co-Tech Lead for Project Fugu ('17-'21)&lt;/item&gt;
          &lt;item&gt;Co-designer of Isolated Web Apps ('19-'21)&lt;/item&gt;
          &lt;item&gt;Blink API OWNER ('18-present)&lt;/item&gt;
          &lt;item&gt;Ongoing advisor to Edge's web standards team&lt;/item&gt;
        &lt;/list&gt;
        &lt;p&gt;In my role as TAG member, Fizz/Fugu TL, and API OWNER I've designed, reviewed, or provided input on dozens of web APIs. All of this work has been collaborative, but these positions have given me a nearly unique perch from to observe the ebb and flow of new designs from, particularly on the "spicy" end of the spectrum. ⇐&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Apple has many options for returning voluntarity to the market for iOS browsers.&lt;/p&gt;
        &lt;p&gt;Most obviously, Apple can simply allow secure browsers to use their own engines. There is no debate that this is possible, that competitors generally do a better job regarding security than Apple, and that competitors would avail themselves of these freedoms if allowed.&lt;/p&gt;
        &lt;p&gt;But Apple has not allowed them.&lt;/p&gt;
        &lt;p&gt;Open Web Advocacy has exhaustively documented the land mines that Apple has strewn in front of competitors that have the temerity to attempt to bring their own engines to EU users. Apple's choice to geofence engine choice to the EU, indefensible implementation roadblocks, poison-pill distribution terms, and the continued prevarications and falsehoods offered in their defence, are choices that Apple is affirmatively and continually making.&lt;/p&gt;
        &lt;p&gt;Less effectively, Apple could provide runtime flags for other browsers to enable features in the engine which Apple itself does not use in Safari. Paired with a commitment to implement features in this way on a short timeline after they are launched in other engines on other OSes, competing vendors could risk their own brands without Apple relenting on its single-implementer demands. This option has been available to Apple since the introduction of competing browsers in the App Store. As I have argued elsewhere, near-simultaneous introduction of features is the minimum developers should expect of a firm that skims something like $19BN/yr in profits from the web (a ~95% profit rate, versus current outlays on Safari and WebKit).&lt;/p&gt;
        &lt;p&gt;Lastly, Apple could simply forbid browsers and web content on iOS. This policy would neatly resolve the entire problem. Removing Safari, along with every other iOS browser, is intellectually and competitively defensible as it removes the “special boy” nature of Safari and WebKit. This would also rid Apple of the ethical stain of continuing to string developers and competitors along within standards venues when it is demonstrably an enemy of those processes. ⇐&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Apple regularly goes it alone when it is convinced about a design. We have seen this in areas as diverse as touch events, notch CSS, web payments, "liquid glass" effects, and much else. It is not credible to assume that Apple will only ship APIs that have an official seal of an SDO given Cupertino's rich track record of launch-and-pray web APIs over the years. ⇐&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;In fairness to Apple regarding a "standards position" for Web MIDI, the feature predates Apple's process. But this brings up the origin of the system.&lt;/p&gt;
        &lt;p&gt;Why does this repository exist? Shouldn't it be rather obvious what other implementers think of that feature, assuming they are engaged in co-design?&lt;/p&gt;
        &lt;p&gt;Yes, but that assumes engagement.&lt;/p&gt;
        &lt;p&gt;Just after the Blink fork, a series of incidents took place in which Chromium engineers extrapolated from vaguely positive-sounding feedback in standards meetings when asked about other vendor's positions as part of the Blink Launch Process. This feedback was not a commitment from Apple (or anyone else) to implement, and various WebKit leaders objected to the charachterisations. As a way to avoid over-reading tea leaves in the absence of more fullsome co-design, the "standards position" process was set in WebKit and Gecko so that Chromium developers could solicit an "offical" position in lieu of clearer engagement.&lt;/p&gt;
        &lt;p&gt;If this does not sound like it augurs well for assertions that Apple engages to help shape designs in a timely way...well, you might very well think that. I couldn't possibly comment. ⇐&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;There may have been Formal Objections (as defined by the W3C process) in private communications, but Member Confidentiality at the W3C precludes me from saying either way. If Apple did object in this way, it will be up to Apple to clarify that for the record. ⇐&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Mozilla objected to Web MIDI on varied ground over the years, and after getting utterly roasted by its own users over failing to support the API, shipped a version in Firefox 108 (Dec '22).&lt;/p&gt;
        &lt;p&gt;The larger question of Mozilla's relationship to device APIs was a winding road. It eventually culminated (for me) in a long discussion at a TAG meeting in Stockholm with EKR of TLS and Mozilla fame. By 2016, Mozilla was licking its wounds from the failure of Firefox OS and retrenching around a less expansive vision of the future of the web. Long gone were the aspirations for "WebAPIs". Just a few short years earlier, Mozilla would have engaged (if not agreed) about work in this space, but an overwhelming tenor of conservativism and desktop-centricity radiated from Mozilla by the time of this overlapping IETF/W3C meeting.&lt;/p&gt;
        &lt;p&gt;It didn't make the notes, but my personal recollection of how we left things late in the afternoon in Stockholm was EKR claiming that bandwidth for security reviews was the biggest blocker that it it was fine if we (Chromium) went ahead with these sorts of designs and proved that they wouldn't blow up the world. Only then would Mozilla perhaps consider versions of them.&lt;/p&gt;
        &lt;p&gt;True to his word, Mozilla eventually shipped Web MIDI on EKR's watch. If past is prologue, we'll only need to wait another three to five years before Web Bluetooth et al. join them. ⇐&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;My memory is famously faulty, and I have been engaged in a long-running battle with Apple's legal folks relating to the suppression of browser choice on iOS. All of that colours my vision, and so here I have tried to disabuse myself of less generous notions by consulting public evidence to support Apple's case.&lt;/p&gt;
        &lt;p&gt;From what I was able to gather over many hours was overwhelmingly inculpatory. It is not possible from reading these threads and data points — rather relying on my own recollections — to sustain a belief that Apple have either provided timely constructive feedback on tricky APIs, or worked to solve the problems they address. But I am, in the end, heavily biased.&lt;/p&gt;
        &lt;p&gt;If my conclusions or evidence are wrong, I would very much appreciate corrections; my inbox and DMs are open.&lt;/p&gt;
        &lt;p&gt;If reliable evidence is provided, I will update this blog post to include it, and I encourage others to post on this topic in opposition to my conclusions. It should not be hard for Apple to make the case, assuming there is evidence to support it, that I've missed important facts. It would have both regulatory and persuasive valence regarding questions I have raised relating to Apple's footprint in the internet standards community. ⇐&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45344186</guid><pubDate>Tue, 23 Sep 2025 08:10:06 +0000</pubDate></item><item><title>The YAML Document from Hell</title><link>https://ruudvanasseldonk.com/2023/01/11/the-yaml-document-from-hell</link><description>&lt;doc fingerprint="e45100779e81da58"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;The yaml document from hell&lt;/head&gt;
    &lt;p&gt;written by Ruud van Asseldonk&lt;lb/&gt;published &lt;/p&gt;
    &lt;p&gt;For a data format, yaml is extremely complicated. It aims to be a human-friendly format, but in striving for that it introduces so much complexity, that I would argue it achieves the opposite result. Yaml is full of footguns and its friendliness is deceptive. In this post I want to demonstrate this through an example.&lt;/p&gt;
    &lt;p&gt;This post is a rant, and more opinionated than my usual writing.&lt;/p&gt;
    &lt;head rend="h2"&gt;Yaml is really, really complex&lt;/head&gt;
    &lt;p&gt;Json is simple. The entire json spec consists of six railroad diagrams. It’s a simple data format with a simple syntax and that’s all there is to it. Yaml on the other hand, is complex. So complex, that its specification consists of 10 chapters with sections numbered four levels deep and a dedicated errata page.&lt;/p&gt;
    &lt;p&gt;The json spec is not versioned. There were two changes to it in 2005 (the removal of comments, and the addition of scientific notation for numbers), but it has been frozen since — almost two decades now. The yaml spec on the other hand is versioned. The latest revision is fairly recent, 1.2.2 from October 2021. Yaml 1.2 differs substantially from 1.1: the same document can parse differently under different yaml versions. We will see multiple examples of this later.&lt;/p&gt;
    &lt;p&gt;Json is so obvious that Douglas Crockford claims to have discovered it — not invented. I couldn’t find any reference for how long it took him to write up the spec, but it was probably hours rather than weeks. The change from yaml 1.2.1 to 1.2.2 on the other hand, was a multi-year effort by a team of experts:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;This revision is the result of years of work by the new YAML language development team. Each person on this team has a deep knowledge of the language and has written and maintains important open source YAML frameworks and tools.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Furthermore this team plans to actively evolve yaml, rather than to freeze it.&lt;/p&gt;
    &lt;p&gt;When you work with a format as complex as yaml, it is difficult to be aware of all the features and subtle behaviors it has. There is an entire website dedicated to picking one of the 63 different multi-line string syntaxes. This means that it can be very difficult for a human to predict how a particular document will parse. Let’s look at an example to highlight this.&lt;/p&gt;
    &lt;head rend="h2"&gt;The yaml document from hell&lt;/head&gt;
    &lt;p&gt;Consider the following document.&lt;/p&gt;
    &lt;code&gt;server_config:
  port_mapping:
    # Expose only ssh and http to the public internet.
    - 22:22
    - 80:80
    - 443:443

  serve:
    - /robots.txt
    - /favicon.ico
    - *.html
    - *.png
    - !.git  # Do not expose our Git repository to the entire world.

  geoblock_regions:
    # The legal team has not approved distribution in the Nordics yet.
    - dk
    - fi
    - is
    - no
    - se

  flush_cache:
    on: [push, memory_pressure]
    priority: background

  allow_postgres_versions:
    - 9.5.25
    - 9.6.24
    - 10.23
    - 12.13&lt;/code&gt;
    &lt;p&gt;Let’s break this down section by section and see how the data maps to json.&lt;/p&gt;
    &lt;head rend="h2"&gt;Sexagesimal numbers&lt;/head&gt;
    &lt;p&gt;Let’s start with something that you might find in a container runtime configuration:&lt;/p&gt;
    &lt;code&gt;port_mapping:
  - 22:22
  - 80:80
  - 443:443&lt;/code&gt;
    &lt;code&gt;{"port_mapping": [1342, "80:80", "443:443"]}&lt;/code&gt;
    &lt;p&gt;Huh, what happened here? As it turns out, numbers from 0 to 59 separated by colons are sexagesimal (base 60) number literals. This arcane feature was present in yaml 1.1, but silently removed from yaml 1.2, so the list element will parse as &lt;code&gt;1342&lt;/code&gt; or &lt;code&gt;"22:22"&lt;/code&gt; depending on which version your parser uses. Although yaml 1.2 is more than 10 years old by now, you would be mistaken to think that it is widely supported: the latest version libyaml at the time of writing (which is used among others by PyYAML) implements yaml 1.1 and parses &lt;code&gt;22:22&lt;/code&gt; as &lt;code&gt;1342&lt;/code&gt;.&lt;/p&gt;
    &lt;head rend="h2"&gt;Anchors, aliases, and tags&lt;/head&gt;
    &lt;p&gt;The following snippet is actually invalid:&lt;/p&gt;
    &lt;code&gt;serve:
  - /robots.txt
  - /favicon.ico
  - *.html
  - *.png
  - !.git&lt;/code&gt;
    &lt;p&gt;Yaml allows you to create an anchor by adding an &lt;code&gt;&amp;amp;&lt;/code&gt; and a name in front of a value, and then you can later reference that value with an alias: a &lt;code&gt;*&lt;/code&gt; followed by the name. In this case no anchors are defined, so the aliases are invalid. Let’s avoid them for now and see what happens.&lt;/p&gt;
    &lt;code&gt;serve:
  - /robots.txt
  - /favicon.ico
  - !.git&lt;/code&gt;
    &lt;code&gt;{"serve": ["/robots.txt", "/favicon.ico", ""]}&lt;/code&gt;
    &lt;p&gt;Now the interpretation depends on the parser you are using. The element starting with &lt;code&gt;!&lt;/code&gt; is a tag. This feature is intended to enable a parser to convert the fairly limited yaml data types into richer types that might exist in the host language. A tag starting with &lt;code&gt;!&lt;/code&gt; is up to the parser to interpret, often by calling a constructor with the given name and providing it the value that follows after the tag. This means that loading an untrusted yaml document is generally unsafe, as it may lead to arbitrary code execution. (In Python, you can avoid this pitfall by using &lt;code&gt;yaml.safe_load&lt;/code&gt; instead of &lt;code&gt;yaml.load&lt;/code&gt;.) In our case above, PyYAML fails to load the document because it doesn’t know the &lt;code&gt;.git&lt;/code&gt; tag. Go’s yaml package is less strict and returns an empty string.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Norway problem&lt;/head&gt;
    &lt;p&gt;This pitfall is so infamous that it became known as “the Norway problem”:&lt;/p&gt;
    &lt;code&gt;geoblock_regions:
  - dk
  - fi
  - is
  - no
  - se&lt;/code&gt;
    &lt;code&gt;{"geoblock_regions": ["dk", "fi", "is", false, "se"]}&lt;/code&gt;
    &lt;p&gt;What is that &lt;code&gt;false&lt;/code&gt; doing there? The literals &lt;code&gt;off&lt;/code&gt;, &lt;code&gt;no&lt;/code&gt;, and &lt;code&gt;n&lt;/code&gt;, in various capitalizations (but not any capitalization!), are all &lt;code&gt;false&lt;/code&gt; in yaml 1.1, while &lt;code&gt;on&lt;/code&gt;, &lt;code&gt;yes&lt;/code&gt;, and &lt;code&gt;y&lt;/code&gt; are true. In yaml 1.2 these alternative spellings of the boolean literals are no longer allowed, but they are so pervasive in the wild that a compliant parser would have a hard time reading many documents. Go’s yaml library therefore made the choice of implementing a custom variant somewhere in between yaml 1.1 and 1.2 that behaves differently depending on the context:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;The yaml package supports most of YAML 1.2, but preserves some behavior from 1.1 for backwards compatibility. YAML 1.1 bools (yes/no, on/off) are supported as long as they are being decoded into a typed bool value. Otherwise they behave as a string.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Note that it only does that since version 3.0.0, which was released in May 2022. Earlier versions behave differently.&lt;/p&gt;
    &lt;head rend="h2"&gt;Non-string keys&lt;/head&gt;
    &lt;p&gt;While keys in json are always strings, in yaml they can be any value, including booleans.&lt;/p&gt;
    &lt;code&gt;flush_cache:
  on: [push, memory_pressure]
  priority: background&lt;/code&gt;
    &lt;code&gt;{
  "flush_cache": {
    "True": ["push", "memory_pressure"],
    "priority": "background"
  }
}&lt;/code&gt;
    &lt;p&gt;Combined with the previous feature of interpreting &lt;code&gt;on&lt;/code&gt; as a boolean, this leads to a dictionary with &lt;code&gt;true&lt;/code&gt; as one of the keys. It depends on the language how that maps to json, if at all. In Python it becomes the string &lt;code&gt;"True"&lt;/code&gt;. The key &lt;code&gt;on&lt;/code&gt; is common in the wild because it is used in GitHub Actions. I would be really curious to know whether GitHub Actions’ parser looks at &lt;code&gt;"on"&lt;/code&gt; or &lt;code&gt;true&lt;/code&gt; under the hood.&lt;/p&gt;
    &lt;head rend="h2"&gt;Accidental numbers&lt;/head&gt;
    &lt;p&gt;Leaving strings unquoted can easily lead to unintentional numbers.&lt;/p&gt;
    &lt;code&gt;allow_postgres_versions:
  - 9.5.25
  - 9.6.24
  - 10.23
  - 12.13&lt;/code&gt;
    &lt;code&gt;{"allow_postgres_versions": ["9.5.25", "9.6.24", 10.23, 12.13]}&lt;/code&gt;
    &lt;p&gt;Maybe the list is a contrived example, but imagine updating a config file that lists a single value of 9.6.24 and changing it to 10.23. Would you remember to add the quotes? What makes this even more insidious is that many dynamically typed applications implicitly convert the number to a string when needed, so your document works fine most of the time, except in some contexts it doesn’t. For example, the following Jinja template accepts both &lt;code&gt;version: "0.0"&lt;/code&gt; and &lt;code&gt;version: 0.0&lt;/code&gt;, but it only takes the true-branch for the former.&lt;/p&gt;
    &lt;code&gt;{% if version %}
  Latest version: {{ version }}
{% else %}
  Version not specified
{% endif %}&lt;/code&gt;
    &lt;head rend="h2"&gt;Runners-up&lt;/head&gt;
    &lt;p&gt;There is only so much I can fit into one artifical example. Some arcane yaml behaviors that did not make it in are directives, integers starting with &lt;code&gt;0&lt;/code&gt; being octal literals (but only in yaml 1.1), &lt;code&gt;~&lt;/code&gt; being an alternative spelling of &lt;code&gt;null&lt;/code&gt;, and &lt;code&gt;?&lt;/code&gt; introducing a complex mapping key.&lt;/p&gt;
    &lt;head rend="h2"&gt;Syntax highlighting will not save you&lt;/head&gt;
    &lt;p&gt;You may have noticed that none of my examples have syntax highlighting enabled. Maybe I am being unfair to yaml, because syntax highlighting would highlight special constructs, so you can at least see that some values are not normal strings. However, due to multiple yaml versions being prevalent, and highlighters having different levels of sophistication, you can’t rely on this. I’m not trying to nitpick here: Vim, my blog generator, GitHub, and Codeberg, all have a unique way to highlight the example document from this post. No two of them pick out the same subset of values as non-strings!&lt;/p&gt;
    &lt;head rend="h2"&gt;Templating yaml is a terrible, terrible idea&lt;/head&gt;
    &lt;p&gt;I hope it is clear by now that working with yaml is subtle at the very least. What is even more subtle is concatenating and escaping arbitrary text fragments in such a way that the result is a valid yaml document, let alone one that does what you expect. Add to this the fact that whitespace is significant in yaml, and the result is a format that is meme-worthily difficult to template correctly. I truly do not understand why tools based on such an error-prone practice have gained so much mindshare, when there is a safer, easier, and more powerful alternative: generating json.&lt;/p&gt;
    &lt;head rend="h2"&gt;Alternative configuration formats&lt;/head&gt;
    &lt;p&gt;I think the main reason that yaml is so prevalent despite its pitfalls, is that for a long time it was the only viable configuration format. Often we need lists and nested data, which rules out flat formats like ini. Xml is noisy and annoying to write by hand. But most of all, we need comments, which rules out json. (As we saw before, json had comments very early on, but they were removed because people started putting parsing directives in there. I think this is the right call for a serialization format, but it makes json unsuitable as a configuration language.) So if what we really need is the json data model but a syntax that allows comments, what are some of the options?&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Toml — Toml is similar to yaml in many ways: it has mostly the same data types; the syntax is not as verbose as json; and it allows comments. Unlike yaml it is not full of footguns, mostly because strings are always quoted, so you don’t have values that look like strings but aren’t. Toml is widely supported, you can probably find a toml parser for your favorite language. It’s even in the Python standard library — unlike yaml! A weak spot of toml is deeply nested data.&lt;/item&gt;
      &lt;item&gt;Json with comments, Json with commas and comments — There exist various extensions of json that extend it just enough to make it a usable config format without introducing too much complexity. Json with comments is probably the most widespread, as it is used as the config format for Visual Studio Code. The main downside of these is that they haven’t really caught on (yet!), so they aren’t as widely supported as json or yaml.&lt;/item&gt;
      &lt;item&gt;A simple subset of yaml — Many of the problems with yaml are caused by unquoted things that look like strings but behave differently. This is easy to avoid: always quote all strings. (Indeed, you can tell that somebody is an experienced yaml engineer when they defensively quote all the strings.) We can choose to always use &lt;code&gt;true&lt;/code&gt;and&lt;code&gt;false&lt;/code&gt;rather than&lt;code&gt;yes&lt;/code&gt;and&lt;code&gt;no&lt;/code&gt;, and generally stay away from the arcane features. The challenge with this is that any construct not explicitly forbidden will eventually make it into your codebase, and I am not aware of any good tool that can enforce a sane yaml subset.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Generating json as a better yaml&lt;/head&gt;
    &lt;p&gt;Often the choice of format is not ours to make, and an application only accepts yaml. Not all is lost though, because yaml is a superset of json, so any tool that can produce json can be used to generate a yaml document.&lt;/p&gt;
    &lt;p&gt;Sometimes an application will start out with a need for just a configuration format, but over time you end up with many many similar stanzas, and you would like to share parts between them, and abstract some repetition away. This tends to happen in for example Kubernetes and GitHub Actions. When the configuration language does not support abstraction, people often reach for templating, which is a bad idea for the reasons explained earlier. Proper programming languages, possibly domain-specific ones, are a better fit. Some of my favorites are Nix and Python:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Nix — Nix is the language used by the Nix package manager. It was created for writing package definitions, but it works remarkably well as a configuration format (and indeed it is used to configure NixOS). Functions, let-bindings, and string interpolation make it powerful for abstracting repetitive configuration. The syntax is light like toml, and it can export to json or xml. It works well for simplifying a repetitive GitHub Actions workflow file, for example.&lt;/item&gt;
      &lt;item&gt;Python — Json documents double as valid Python literals with minimal adaptation, and Python supports trailing commas and comments. It has variables and functions, powerful string interpolation, and &lt;code&gt;json.dump&lt;/code&gt;built in. A self-contained Python file that prints json to stdout goes a long way!&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Finally there are some tools in this category that I haven’t used enough to confidently recommend, but which deserve to be mentioned:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Dhall — Dhall is like Nix, but with types. It is less widespread, and personally I find the built-in function names unwieldy.&lt;/item&gt;
      &lt;item&gt;Cue — Like Dhall, Cue integrates type/schema information into the config format. Cue is a superset of json, but despite that, I find the files that actually use Cue’s features to look foreign to me. Cue is on my radar to evaluate further, but I haven’t encountered a problem where Cue looked like the most suitable solution yet.&lt;/item&gt;
      &lt;item&gt;Hashicorp Configuration Language — I haven’t used HCL extensively enough to have a strong opinion on it, but in the places where I worked with it, the potential for abstraction seemed more limited than what you can achieve with e.g. Nix.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;2025 update: After having used HCL more in practice, I consider it too ad-hoc to seriously recommend. My frustration with HCL is what prompted me to create RCL. It started as a toy project, but is now at a point where it is both usable and useful.&lt;/p&gt;
    &lt;head rend="h2"&gt;Conclusion&lt;/head&gt;
    &lt;p&gt;Yaml aims to be a more human-friendly alternative to json, but with all of its features, it became such a complex format with so many bizarre and unexpected behaviors, that it is difficult for humans to predict how a given yaml document will parse. If you are looking for a configuration format, toml is a friendly format without yaml’s footguns. For cases where you are stuck with yaml, generating json from a more suitable language can be a viable approach. Generating json also opens up the possibility for abstraction and reuse, in a way that is difficult to achieve safely by templating yaml.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45344554</guid><pubDate>Tue, 23 Sep 2025 09:04:43 +0000</pubDate></item><item><title>Go has added Valgrind support</title><link>https://go-review.googlesource.com/c/go/+/674077</link><guid isPermaLink="false">https://news.ycombinator.com/item?id=45344708</guid><pubDate>Tue, 23 Sep 2025 09:26:57 +0000</pubDate></item><item><title>Indoor surfaces act as sponges for harmful chemicals</title><link>https://news.uci.edu/2025/09/22/indoor-surfaces-act-as-massive-sponges-for-harmful-chemicals-uc-irvine-led-study-shows/</link><description>&lt;doc fingerprint="75ffb4ccae8f068c"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Indoor surfaces act as massive sponges for harmful chemicals, UC Irvine-led study shows&lt;/head&gt;
    &lt;p&gt;Permeable materials in homes can retain volatile organic compounds for up to a year&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Scientists injected volatile organic compounds into a test house and found large reservoirs for the potentially hazardous chemicals in porous surfaces such as wood, cement and paint.&lt;/item&gt;
      &lt;item&gt;VOCs contained in insecticides, cigarette smoke and wildfire smoke can remain on indoor surfaces for as long as one year.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Irvine, Calif., Sept. 22, 2025 — Indoor surfaces have an unexpectedly strong ability to absorb and hold harmful chemical compounds that can threaten human health for as long as a year, according to air chemistry researchers at the University of California, Irvine.&lt;/p&gt;
    &lt;p&gt;In a paper published today in Proceedings of the National Academy of Sciences, the UC Irvine scientists quantify how various indoor surfaces absorb volatile organic compounds, which can result in unhealthy conditions for people and animals when inhaled or absorbed through skin contact.&lt;/p&gt;
    &lt;p&gt;The sources of VOCs are many, such as cooking, spray cleaning, personal care and other consumer products. Additional significant contributors include tobacco smoke and, increasingly, air pollution caused by wildfires. The researchers note that health risks come from inhaling compounds when they “off gas” from surfaces and through dermal uptake when contaminated surfaces are touched.&lt;/p&gt;
    &lt;p&gt;In the spring of 2022, co-author Jonathan Abbatt, professor of chemistry at the University of Toronto, led the Chemical Assessment of Surfaces and Air study, which utilized simulation chambers in the National Institute of Standards and Technology’s Net-Zero Energy Residential Test Facility. Contaminants were injected into a structure mimicking a home environment, with typical building materials. The research team used mass spectrometry instruments to track the movement and persistence of VOCs in the controlled indoor environment.&lt;/p&gt;
    &lt;p&gt;“Scientists in the air chemistry research community have known for a long time that many indoor contaminants can be absorbed by indoor surfaces, but the size of indoor surface reservoirs inside homes and buildings had not been established,” said Manabu Shiraiwa, UC Irvine professor of chemistry, who was responsible for modeling observations and is a corresponding author on the PNAS paper. “Our modeling found that surfaces inside homes have a much greater size to absorb and hold chemicals than previously realized. We can think of these surfaces as massive chemical sponges that soak up VOCs.”&lt;/p&gt;
    &lt;p&gt;Before this study, thin organic films with nanometer thickness were thought to be main surface reservoirs. However, this work proves that permeable and porous materials such as painted surfaces, cement and wood are likely the major surface reservoirs in a home.&lt;/p&gt;
    &lt;p&gt;“This discovery has significant implications for human health,” Shiraiwa said. “It means people can be exposed to harmful chemicals long after their initial introduction into indoor spaces, and compounds can later be released back into the air or transferred to humans through direct contact with contaminated surfaces.”&lt;/p&gt;
    &lt;p&gt;He added, “This result significantly impacts our understanding of VOC fate and human exposure in indoor environments. With such a large partitioning capacity, organic contaminants will have much longer indoor residence times than previously predicted.”&lt;/p&gt;
    &lt;p&gt;The research explains why certain odors and contaminants persist indoors even after their sources are removed. For example, it provides scientific evidence for why tobacco smoke odors linger in rooms long after smoking has stopped: The residual compounds, known as “thirdhand smoke,” slowly partition back into the air from surface reservoirs.&lt;/p&gt;
    &lt;p&gt;The findings suggest that regular ventilation alone may be insufficient to remove many indoor contaminants. Physical cleaning activities such as vacuuming, mopping and dusting are necessary to effectively remove compounds with high partition coefficients from surface reservoirs.&lt;/p&gt;
    &lt;p&gt;Joining Shiraiwa and Abbatt in this study were Pascale Lakey, project scientist in chemistry at UC Irvine; Jie Yu and Xing Wang at the University of Toronto; Jenna Ditto at Washington University in St. Louis, Missouri; Han Huynh and Marina Vance at the University of Colorado Boulder; Michael Link, Dustin Poppendieck and Stephen Zimmerman at the National Institute of Standards and Technology; and Delphine Farmer at Colorado State University.&lt;/p&gt;
    &lt;p&gt;The research was supported by funding from the Alfred P. Sloan Foundation.&lt;/p&gt;
    &lt;p&gt;About the University of California, Irvine: Founded in 1965, UC Irvine is a member of the prestigious Association of American Universities and is ranked among the nation’s top 10 public universities by U.S. News &amp;amp; World Report. The campus has produced five Nobel laureates and is known for its academic achievement, premier research, innovation and anteater mascot. Led by Chancellor Howard Gillman, UC Irvine has more than 36,000 students and offers 224 degree programs. It’s located in one of the world’s safest and most economically vibrant communities and is Orange County’s second-largest employer, contributing $7 billion annually to the local economy and $8 billion statewide. For more on UC Irvine, visit www.uci.edu.&lt;/p&gt;
    &lt;p&gt;Media access: Radio programs/stations may, for a fee, use an on-campus studio with a Comrex IP audio codec to interview UC Irvine faculty and experts, subject to availability and university approval. For more UC Irvine news, visit news.uci.edu. Additional resources for journalists may be found at https://news.uci.edu/media-resources.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45344756</guid><pubDate>Tue, 23 Sep 2025 09:33:34 +0000</pubDate></item><item><title>Hyb Error: A Hybrid Metric Combining Absolute and Relative Errors</title><link>https://arxiv.org/abs/2403.07492</link><description>&lt;doc fingerprint="988c360a05dfb08c"&gt;
  &lt;main&gt;&lt;head rend="h1"&gt;Mathematics &amp;gt; Numerical Analysis&lt;/head&gt;&lt;p&gt; [Submitted on 12 Mar 2024 (v1), last revised 21 May 2024 (this version, v2)]&lt;/p&gt;&lt;head rend="h1"&gt;Title:Hyb Error: A Hybrid Metric Combining Absolute and Relative Errors&lt;/head&gt;View PDF HTML (experimental)&lt;quote&gt;Abstract:Suppose $x$ is an approximation of $y$. This paper proposes using $\frac{|x-y|}{1+|y|}$, named Hyb Error, to measure the error. This metric equals half the harmonic mean of absolute error and relative error, effectively combining their advantages while mitigating their limitations. For example, Hyb Error approaches absolute error as $|y|$ approaches 0, thereby avoiding the exaggeration of relative error, and approaches relative error as $|y|$ approaches infinity, thereby avoiding the exaggeration of absolute error. The Hyb Error of $\epsilon$ is equivalent to $|x-y|=\epsilon+\epsilon |y|$, which implies $\mathrm{isclose}(x,y,\epsilon,\epsilon)=\mathrm{True}$, where ``isclose'' is a common floating-point equality check function in numerical libraries. For sequences, this property makes the Maximum Element-wise Hyb Error (MEHE) a pragmatic error metric that reflects the most significant error and equals the decision boundary of the ``isclose'' function.&lt;/quote&gt;&lt;head rend="h2"&gt;Submission history&lt;/head&gt;From: Peichen Xie [view email]&lt;p&gt;[v1] Tue, 12 Mar 2024 10:30:46 UTC (84 KB)&lt;/p&gt;&lt;p&gt;[v2] Tue, 21 May 2024 08:20:36 UTC (62 KB)&lt;/p&gt;&lt;p&gt; Current browse context: &lt;/p&gt;&lt;p&gt;math.NA&lt;/p&gt;&lt;head rend="h3"&gt;References &amp;amp; Citations&lt;/head&gt;&lt;p&gt; export BibTeX citation Loading... &lt;/p&gt;&lt;head rend="h1"&gt;Bibliographic and Citation Tools&lt;/head&gt;&lt;p&gt; Bibliographic Explorer (What is the Explorer?) &lt;/p&gt;&lt;p&gt; Connected Papers (What is Connected Papers?) &lt;/p&gt;&lt;p&gt; Litmaps (What is Litmaps?) &lt;/p&gt;&lt;p&gt; scite Smart Citations (What are Smart Citations?) &lt;/p&gt;&lt;head rend="h1"&gt;Code, Data and Media Associated with this Article&lt;/head&gt;&lt;p&gt; alphaXiv (What is alphaXiv?) &lt;/p&gt;&lt;p&gt; CatalyzeX Code Finder for Papers (What is CatalyzeX?) &lt;/p&gt;&lt;p&gt; DagsHub (What is DagsHub?) &lt;/p&gt;&lt;p&gt; Gotit.pub (What is GotitPub?) &lt;/p&gt;&lt;p&gt; Hugging Face (What is Huggingface?) &lt;/p&gt;&lt;p&gt; Papers with Code (What is Papers with Code?) &lt;/p&gt;&lt;p&gt; ScienceCast (What is ScienceCast?) &lt;/p&gt;&lt;head rend="h1"&gt;Demos&lt;/head&gt;&lt;head rend="h1"&gt;Recommenders and Search Tools&lt;/head&gt;&lt;p&gt; Influence Flower (What are Influence Flowers?) &lt;/p&gt;&lt;p&gt; CORE Recommender (What is CORE?) &lt;/p&gt;&lt;head rend="h1"&gt;arXivLabs: experimental projects with community collaborators&lt;/head&gt;&lt;p&gt;arXivLabs is a framework that allows collaborators to develop and share new arXiv features directly on our website.&lt;/p&gt;&lt;p&gt;Both individuals and organizations that work with arXivLabs have embraced and accepted our values of openness, community, excellence, and user data privacy. arXiv is committed to these values and only works with partners that adhere to them.&lt;/p&gt;&lt;p&gt;Have an idea for a project that will add value for arXiv's community? Learn more about arXivLabs.&lt;/p&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45345148</guid><pubDate>Tue, 23 Sep 2025 10:30:42 +0000</pubDate></item><item><title>Structured Outputs in LLMs</title><link>https://parthsareen.com/blog.html#sampling.md</link><description>&lt;doc fingerprint="d3fff7ff6f587ef7"&gt;
  &lt;main&gt;
    &lt;p&gt;Writings&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45345207</guid><pubDate>Tue, 23 Sep 2025 10:40:41 +0000</pubDate></item><item><title>Cache of Devices Capable of Crashing Cell Network Is Found Near U.N</title><link>https://www.nytimes.com/2025/09/23/us/politics/secret-service-sim-cards-servers-un.html</link><description></description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45345514</guid><pubDate>Tue, 23 Sep 2025 11:29:13 +0000</pubDate></item><item><title>Zinc (YC W14) Is Hiring a Senior Back End Engineer (NYC)</title><link>https://app.dover.com/apply/Zinc/4d32fdb9-c3e6-4f84-a4a2-12c80018fe8f/?rs=76643084</link><description>&lt;doc fingerprint="e10fcdab2cdf53e4"&gt;
  &lt;main&gt;
    &lt;p&gt;You need to enable JavaScript to run this app.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45345742</guid><pubDate>Tue, 23 Sep 2025 12:00:00 +0000</pubDate></item><item><title>Getting More Strategic</title><link>https://cate.blog/2025/09/23/getting-more-strategic/</link><description>&lt;doc fingerprint="66e3193529eb0183"&gt;
  &lt;main&gt;
    &lt;p&gt;Strategy – how to be strategic, and how to be seen as strategic – is one of my ongoing obsessions. Years ago, I read Good Strategy/Bad Strategy, and it’s guided my thinking ever since.&lt;/p&gt;
    &lt;p&gt;One of the things that book helps clarify is that being strategic and being seen as strategic can work against each other – good strategy is obvious, and usually it is executed on more than it’s talked about. An ongoing frustration for other under indexed people in tech I talk to, as we build products and organizations without drama, whilst being told we’re just “not strategic” enough. The strategy required to sidestep problems that never happen or that creates optionality to quickly resolve is somehow invisible.&lt;/p&gt;
    &lt;p&gt;But I think as we rise up the org chart, strategy is the job. Strategy defines your job, and evolves it to meet the organizational need. Not just one strategy, but multiple strategies that need to fit together and be coherent.&lt;/p&gt;
    &lt;p&gt;Your product strategy. Your technical strategy. Your team strategy. Your you-as-a-leader-but-also-a-human-being strategy.&lt;/p&gt;
    &lt;p&gt;As we find our groove in the resource constrained era we are in currently as opposed to the everything strategy of ZIRP (zero interest rates), by definition we need to make more harder choices, and strategy is how we know what those choices are, and when and how to make them.&lt;/p&gt;
    &lt;p&gt;This is the first rule of strategy: strategy is contextual. A crucial insight, because often when leaders fail, it’s because they tried to apply a strategy that worked in one context, to a different one, without considering the difference.&lt;/p&gt;
    &lt;p&gt;This is true when you change companies, and I think the reason why there is such a high failure rate for executive hires*. Ones I’ve watched fail came in with a playbook, usually including the org chart they wanted, and expended all the goodwill and capital in pursuit of that goal, whilst achieving very little.&lt;/p&gt;
    &lt;p&gt;It’s also the case that when the market changes, our strategy must change. One of the core features of ZIRP-era engineering leadership was hiring for the sake of it, and number of people as a proxy for many things it maybe (probably) shouldn’t have been. One of the biggest shifts has been the layoffs and the mantra of “doing more with less”. Regardless of personal feelings on this topic and what is actually realistic, it is apparent that hard choices and discipline are a key feature of the post-ZIRP era.&lt;/p&gt;
    &lt;p&gt;&lt;lb/&gt;We could talk about these strategies – product, technical, team, you, like some balanced stool. But realistically, I think it’s more like the image above. The product strategy is a storm (especially pre-product market fit). The technical strategy is a half built shelter (you’ll get to it properly once you have product market fit). The team strategy is an umbrella (the most flexible and controllable). And the you as a human strategy is nowhere to be found.&lt;/p&gt;
    &lt;p&gt;This is the second rule of strategy: timeframe varies with the level of uncertainty you’re navigating.&lt;/p&gt;
    &lt;p&gt;The idea of a proximate objective is the next logical step in pursuit of your overall strategy, if you achieve it, you confirm your course. If you fail, you learn and reconsider your options.&lt;/p&gt;
    &lt;p&gt;We often talk about strategy like it’s defining the end state, setting and describing the destination. But strategy is about defining the incremental steps – the proximate objectives – that can take us towards that end state. Strategy is understanding where we are at – context – and the path from there to where we need to go**. Any strategic “plan”, is best executed as a set of proximate objectives.&lt;/p&gt;
    &lt;p&gt;This mistake of how strategy is talked about is why it can be so hard for some people to be seen as strategic. When we think strategy is depicting the end state, and undervalue the proximate objective definitions and execution that it takes to get there, the person who talks more about the end state can be seen as more strategic than the person who actually reaches it.&lt;/p&gt;
    &lt;p&gt;We need four things for strategy:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Time – energy – to think deeply about it&lt;/item&gt;
      &lt;item&gt;Context to situate it&lt;/item&gt;
      &lt;item&gt;Direction to identify proximate objectives&lt;/item&gt;
      &lt;item&gt;Expertise to chart the path&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;All of these need to come together to create and deliver an effective strategy. It’s a balance between all of them, leaning into different ones at different times.&lt;/p&gt;
    &lt;p&gt;To illustrate, why each of these are important, I think it’s helpful to consider the extremes of each.&lt;/p&gt;
    &lt;p&gt;When someone is all time, we call them a political operator. This is the person who manages up to get credit, but the people underneath them ask what it is that they do.&lt;/p&gt;
    &lt;p&gt;When someone is all context, we say they can’t see the forest for the trees. They miss the big picture fixating on the details.&lt;/p&gt;
    &lt;p&gt;When someone is all proximate objectives, we call them a thought leader and it’s not a compliment. Execution is an exercise left to the reader.&lt;/p&gt;
    &lt;p&gt;When someone is all expertise, they present solutions in search of problems. They don’t seem to understand impact.&lt;/p&gt;
    &lt;p&gt;Devaluing these things gives us a reason not to do them. So many engineers will tell you they hate politics, and yes, there is definitely toxic workplace politics. But there’s a baseline where politics is getting things done. It’s convincing people that the idea is good, and that it can be executed. My favourite explanation of this is Nik Means talking about Eiffel’s tower.&lt;/p&gt;
    &lt;p&gt;Context is important. Yes, you’re delivering something bigger, but the details need to add up. You can’t gloss over all of them, you need to learn how to distinguish which are important and which are not.&lt;/p&gt;
    &lt;p&gt;Proximate objectives chart your path. They explain the steps you expect to take between where you are and where you plan to be. Explaining them helps bring people along with you.&lt;/p&gt;
    &lt;p&gt;Expertise is ultimately how you deliver things, you need to understand how to deliver and how to validate. Execution is when the strategy becomes real.&lt;/p&gt;
    &lt;p&gt;Strategy is hard, and being seen as strategic – especially for under-indexed people – can be even harder. We need all of these four things to develop our strategy and move things forward. And we need to be recognized as doing all of them in order to be seen as strategic.&lt;/p&gt;
    &lt;p&gt;Coming back to our problems of strategy – the product, technical, team, and you.&lt;/p&gt;
    &lt;p&gt;Product strategy drives your proximate objectives. Whilst product strategy may seem like the job of product management – and to a certain extent it is, but hopefully your product team does not operate in a vacuum. Engineering needs to provide input, but engineering also needs to understand the product strategy, because everything else needs to fit in with it.&lt;/p&gt;
    &lt;p&gt;Your team exists for a purpose, and the clearest part of that purpose is delivery of the product strategy. You need direction and alignment to identify proximate objectives. Direction – where the product strategy is going, alignment on what is most important, and what will be delivered when.&lt;/p&gt;
    &lt;p&gt;Technical strategy evolves the context. Your technical strategy is often about surfacing the underlying work that allows you to deliver on the business need. It has to be well justified, because ideally it’s pro-active rather than reactive – i.e. you implement it before the emergency rather than during it.&lt;/p&gt;
    &lt;p&gt;Any technical strategy needs to start with what problem is being solved. A problem is not the absence of a technology – unless, I understand, that technology is AI – but rather the problems that technology would solve. So “we don’t have containers” is not a problem. Number of incidents or environment inconsistencies is. Good technical strategy changes the context over time – making more possible – like building roads on the territory you’ve chartered.&lt;/p&gt;
    &lt;p&gt;Your team strategy must be grounded in execution. The product and technical strategy define the organizational need. Your team strategy is about how your team is going to meet that organizational need, within the constraints of the business.&lt;/p&gt;
    &lt;p&gt;Post-ZIRP, this has been a big challenge. Doing more with less means having fewer people, less flexibility, less margin of error. You need to figure out how you retain key people when money is tighter and promotions are harder to come by. But amidst all of these challenges, you have to execute. If in a ZIRP era, you could build the team then deliver, now you must deliver as you build the team.&lt;/p&gt;
    &lt;p&gt;The you as a person strategy requires that you carve out time to be strategic. In this market, many of us are doing-doing-doing to prove that we’re worth keeping around, but at some point, your job is no longer what is being done this week, and more about what is possible next quarter (and the quarters after that). It’s never been easier to be DDOS’d by the job and think that means we’re doing a good one, but you could be missing key things if you’re too focused on the day to day, or week to week and not enough on the month to month.&lt;/p&gt;
    &lt;p&gt;To wrap up, strategy is about more than just a vision; it’s about navigating the path to get there. We need to balance time, context, direction, and expertise to ensure we’re not only seen as strategic but are genuinely creating a strategic path forward for the teams we’re responsible for – and our own evolving needs to competently lead them.&lt;/p&gt;
    &lt;p&gt;* I can’t find a great source here, although the search results suggest it’s commonly accepted #. # possibly, which links out to a site requiring login.&lt;/p&gt;
    &lt;p&gt;** I love Tanya Reilly’s description of the map in The Staff Engineer’s Path.&lt;/p&gt;
    &lt;p&gt;Image credit: Joe Groove&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45346219</guid><pubDate>Tue, 23 Sep 2025 12:41:36 +0000</pubDate></item><item><title>AI won't use as much electricity as we are told</title><link>https://johnquigginblog.substack.com/p/ai-wont-use-as-much-electricity-as</link><description></description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45346761</guid><pubDate>Tue, 23 Sep 2025 13:29:23 +0000</pubDate></item><item><title>MrBeast Failed to Disclose Ads and Improperly Collected Children's Data</title><link>https://bbbprograms.org/media/newsroom/decisions/mrbeast-feastables</link><description>&lt;doc fingerprint="6b84dbd117e5d7f2"&gt;
  &lt;main&gt;&lt;head rend="h1"&gt;Children's Advertising Review Unit Recommends MrBeastYouTube, LLC and Feastables Improve Ad Disclosures, Product Claims, and Data Collection Practices&lt;/head&gt;&lt;p&gt; New York, NY – September 18, 2025 - Following its marketplace monitoring of children’s advertising, BBB National Programs’ Children’s Advertising Review Unit (CARU) recommended that MrBeastYouTube, LLC, and its affiliate Feastables, update their advertising and data collection practices for the MrBeast YouTube channel, Feastables’ Sweepstakes, and the Feastables website to comply with CARU’s Advertising Guidelines, CARU’s Privacy Guidelines, and the Children’s Online Privacy Protection Act (COPPA).&lt;lb/&gt;MrBeast, the online persona of Jimmy Donaldson, is one of the world's most popular content creators on the YouTube platform, with a large fan base of children and young adults. The MrBeast YouTube channel has over 400 million subscribers. In 2022, MrBeast launched Feastables, a chocolate brand that generated over $215 million in revenue in 2024.&lt;lb/&gt;CARU’s inquiry focused on whether certain advertising on the MrBeast YouTube channel was identifiable as advertising; whether certain claims for Feastables chocolate bars were misleading; whether promotions for Feastables sweepstakes clearly disclosed free means of entry, odds of winning, and minimum age requirements; and whether personally identifiable information was collected from children prior to obtaining verifiable parental consent (VPC).&lt;lb/&gt;Because it would not be clear to children that the video descriptions and pinned comments were advertising messages, CARU determined that MrBeast’s YouTube channel did not comply with CARU’s Ad Guidelines’ provision that advertising should be presented in a way that makes clear to the child audience that it is advertising.&lt;lb/&gt;CARU accordingly recommended that the channel update its advertising practices to ensure that all advertisements are identifiable as ads to children.&lt;lb/&gt;Although MrBeast contended the taste test demonstration was not intended to be taken seriously, CARU concluded that it would appear to be a valid taste test to children.&lt;lb/&gt;CARU determined Feastables violated CARU’s Ad Guidelines by misrepresenting that the taste test was a valid demonstration that consumers prefer Feastables chocolate bars’ taste compared to similar chocolates.&lt;lb/&gt;CARU recommended that Feastables ensure ad claims are truthful and not misleading to children.&lt;lb/&gt;Contrary to CARU’s Ad Guidelines’ provision that sweepstakes promotions must clearly and conspicuously disclose a free means of entry, the free means of entering the sweepstakes was only disclosed in the FAQ section linked to halfway down the page. The FAQ also stated that the minimum age of participation is 16.&lt;lb/&gt;Based on the overall net impression of the ads for the Blue Wave sweepstakes, CARU determined that the free method of entry was not adequately disclosed. CARU determined that a child may have the reasonable takeaway that they must purchase Feastables chocolate bars to enter the sweepstakes. A second reasonable takeaway is that a child should purchase as many as 10 chocolate bars every day and scan the QR codes to maximize their chances of winning.&lt;lb/&gt;In MrBeast’s 2024 Halloween sweepstakes, Feastables encouraged participants to submit up to 24 entries daily until October 30 for a chance to win $10,000, with a grand prize of $1,000,000 on Halloween Day. The ad copy stated, “$10,000 USD Daily Winner. Enter with Purchase Through October 30.” In very small print was the disclaimer, “No purchase necessary, Click below for details.” The official rules stated that participants must be at least 13 years old with parental permission and entrants under 13 are not allowed.&lt;lb/&gt;CARU noted the sweepstakes did not include an age gate to ensure that participants were at least 13 years old, nor did the sweepstakes provide a method, at any point in the sweepstakes entry flow, where participants could enter their parent or guardian’s information to obtain VPC. The entry form required a participant to enter personal information including full name, phone number, address, and email address. To upload the receipt photo, the prompt, “I affirm that I have read, understand and agree to the Official Rules,” was pre-checked.&lt;lb/&gt;Additionally, the advertisement featured a large countdown timer with the text “Time is Running Out. Buy Feastables for a chance to win $10K,” which CARU determined constituted sales pressure.&lt;lb/&gt;CARU recommended ensuring that material information is disclosed clearly and conspicuously to children in language they can understand, that advertising is clearly identifiable as advertising to the children, and that advertising is truthful, not misleading, and appropriate to the child audience.&lt;lb/&gt;CARU determined that the Feastables website was a mixed audience site that appealed to children under the age of 13 as a secondary audience and, therefore, Feastables had a reasonable expectation that children under 13 would visit the website.&lt;lb/&gt;Therefore, CARU determined that the Feastables Blue Wave $10K and Halloween $10K sweepstakes did not comply with CARU’s Privacy Guidelines and potentially COPPA by failing to provide a neutral age-screening mechanism to ensure the sweepstakes website did not collect personally identifiable information from children under the age of 13 without first obtaining VPC.&lt;lb/&gt;In light of Feastables’ future plans to solely run sweepstakes for ages 18 and up, CARU further recommended that Feastables consider whether a neutral and effective age gate would be appropriate for future sweepstakes and promotions.&lt;lb/&gt;Since the opening of the inquiry, CARU has worked with the MrBeast team, which has cooperated to implement CARU’s recommendations regarding CARU’s Advertising Guidelines, CARU’s Privacy Guidelines, and COPPA.&lt;lb/&gt;In the advertiser statement, MrBeast and Feastables stated that it “appreciates CARU’s mission to promote responsible children's advertising. However, they do not agree with all the conclusions made in the decision or the premises on which they were based. Furthermore, a variety of the issues raised by CARU relate to practices long since revised and/or discontinued. Notwithstanding, MrBeast and Feastables certainly will take CARU's concerns under advisement as it develops future advertisements which appear in children's media.”&lt;lb/&gt;All BBB National Programs case decision summaries can be found in the case decision library. For the full text of NAD, NARB, and CARU decisions, subscribe to the Online Archive.&lt;/p&gt;&lt;p&gt;MrBeast, the online persona of Jimmy Donaldson, is one of the world's most popular content creators on the YouTube platform, with a large fan base of children and young adults. The MrBeast YouTube channel has over 400 million subscribers. In 2022, MrBeast launched Feastables, a chocolate brand that generated over $215 million in revenue in 2024.&lt;/p&gt;&lt;p&gt;CARU’s inquiry focused on whether certain advertising on the MrBeast YouTube channel was identifiable as advertising; whether certain claims for Feastables chocolate bars were misleading; whether promotions for Feastables sweepstakes clearly disclosed free means of entry, odds of winning, and minimum age requirements; and whether personally identifiable information was collected from children prior to obtaining verifiable parental consent (VPC).&lt;/p&gt;&lt;head rend="h2"&gt;MrBeast YouTube Advertising&lt;/head&gt;CARU observed several MrBeast YouTube videos where the video descriptions and pinned comments contained advertising content unrelated to the videos. This content was not clearly labeled or otherwise identifiable as advertising to children in the audience.&lt;p&gt;Because it would not be clear to children that the video descriptions and pinned comments were advertising messages, CARU determined that MrBeast’s YouTube channel did not comply with CARU’s Ad Guidelines’ provision that advertising should be presented in a way that makes clear to the child audience that it is advertising.&lt;/p&gt;&lt;p&gt;CARU accordingly recommended that the channel update its advertising practices to ensure that all advertisements are identifiable as ads to children.&lt;/p&gt;&lt;head rend="h2"&gt;Feastables Advertising&lt;/head&gt;In a promotional video later removed from his YouTube channel, MrBeast posted a “Massive Announcement!” where MrBeast debuted the new Feastables chocolate bars and purported to conduct a blind taste test between the new Feastables chocolate bars and “top European chocolates” that showed all tasters preferring the Feastables bar.&lt;p&gt;Although MrBeast contended the taste test demonstration was not intended to be taken seriously, CARU concluded that it would appear to be a valid taste test to children.&lt;/p&gt;&lt;p&gt;CARU determined Feastables violated CARU’s Ad Guidelines by misrepresenting that the taste test was a valid demonstration that consumers prefer Feastables chocolate bars’ taste compared to similar chocolates.&lt;/p&gt;&lt;p&gt;CARU recommended that Feastables ensure ad claims are truthful and not misleading to children.&lt;/p&gt;&lt;head rend="h2"&gt;Feastables Sweepstakes&lt;/head&gt;At the end of the “Massive Announcement” Feastables video, MrBeast announced the “Blue Wave $10K sweepstakes” saying, “…for 30 days straight, we are giving away $10,000 to a lucky customer who scans the QR code on the back of any new Feastables bar…You might win 10 grand…” and to “Upload Your Receipt &amp;amp; Enter to Win. Confirm your purchase below to enter for a chance to win 10k + a year’s supply of our new chocolate. MORE BARS = MORE ENTRIES.”&lt;p&gt;Contrary to CARU’s Ad Guidelines’ provision that sweepstakes promotions must clearly and conspicuously disclose a free means of entry, the free means of entering the sweepstakes was only disclosed in the FAQ section linked to halfway down the page. The FAQ also stated that the minimum age of participation is 16.&lt;/p&gt;&lt;p&gt;Based on the overall net impression of the ads for the Blue Wave sweepstakes, CARU determined that the free method of entry was not adequately disclosed. CARU determined that a child may have the reasonable takeaway that they must purchase Feastables chocolate bars to enter the sweepstakes. A second reasonable takeaway is that a child should purchase as many as 10 chocolate bars every day and scan the QR codes to maximize their chances of winning.&lt;/p&gt;&lt;p&gt;In MrBeast’s 2024 Halloween sweepstakes, Feastables encouraged participants to submit up to 24 entries daily until October 30 for a chance to win $10,000, with a grand prize of $1,000,000 on Halloween Day. The ad copy stated, “$10,000 USD Daily Winner. Enter with Purchase Through October 30.” In very small print was the disclaimer, “No purchase necessary, Click below for details.” The official rules stated that participants must be at least 13 years old with parental permission and entrants under 13 are not allowed.&lt;/p&gt;&lt;p&gt;CARU noted the sweepstakes did not include an age gate to ensure that participants were at least 13 years old, nor did the sweepstakes provide a method, at any point in the sweepstakes entry flow, where participants could enter their parent or guardian’s information to obtain VPC. The entry form required a participant to enter personal information including full name, phone number, address, and email address. To upload the receipt photo, the prompt, “I affirm that I have read, understand and agree to the Official Rules,” was pre-checked.&lt;/p&gt;&lt;p&gt;Additionally, the advertisement featured a large countdown timer with the text “Time is Running Out. Buy Feastables for a chance to win $10K,” which CARU determined constituted sales pressure.&lt;/p&gt;&lt;head rend="h2"&gt;Sweepstakes Advertising Issues&lt;/head&gt;CARU determined that the Feastables Blue Wave $10K and Halloween $10K sweepstakes did not comply with CARU’s Ad Guidelines by failing to clearly and conspicuously disclose the free means of entry, the minimum age requirements, and the likelihood of winning, and by promoting the overconsumption of chocolate bars.&lt;p&gt;CARU recommended ensuring that material information is disclosed clearly and conspicuously to children in language they can understand, that advertising is clearly identifiable as advertising to the children, and that advertising is truthful, not misleading, and appropriate to the child audience.&lt;/p&gt;&lt;head rend="h2"&gt;Sweepstakes Privacy Issues&lt;/head&gt;CARU’s Privacy Guidelines and COPPA require websites directed to children, including mixed audience sites, to obtain VPC before collecting, using, or disclosing personal information from children under 13. Pursuant to COPPA, mixed audience sites may implement a neutral age-screening mechanism to ensure the site does not collect personally identifiable information from children under 13 without first obtaining VPC.&lt;p&gt;CARU determined that the Feastables website was a mixed audience site that appealed to children under the age of 13 as a secondary audience and, therefore, Feastables had a reasonable expectation that children under 13 would visit the website.&lt;/p&gt;&lt;p&gt;Therefore, CARU determined that the Feastables Blue Wave $10K and Halloween $10K sweepstakes did not comply with CARU’s Privacy Guidelines and potentially COPPA by failing to provide a neutral age-screening mechanism to ensure the sweepstakes website did not collect personally identifiable information from children under the age of 13 without first obtaining VPC.&lt;/p&gt;&lt;head rend="h2"&gt;Other Feastables Website Privacy Issues&lt;/head&gt;In its review of the Feastables website, CARU observed a full-page popup that repeatedly solicited the user’s email address with a call to action stating, “MrBeast Wants You to Join the Crew.” When CARU provided an email address through this popup, it discovered that a second popup would generate, soliciting the user’s phone number this time. When testing the network traffic of the site during this interaction, CARU saw evidence that the email and phone contact information was sent to non-affiliate third parties.&lt;p&gt;In light of Feastables’ future plans to solely run sweepstakes for ages 18 and up, CARU further recommended that Feastables consider whether a neutral and effective age gate would be appropriate for future sweepstakes and promotions.&lt;/p&gt;&lt;p&gt;Since the opening of the inquiry, CARU has worked with the MrBeast team, which has cooperated to implement CARU’s recommendations regarding CARU’s Advertising Guidelines, CARU’s Privacy Guidelines, and COPPA.&lt;/p&gt;&lt;p&gt;In the advertiser statement, MrBeast and Feastables stated that it “appreciates CARU’s mission to promote responsible children's advertising. However, they do not agree with all the conclusions made in the decision or the premises on which they were based. Furthermore, a variety of the issues raised by CARU relate to practices long since revised and/or discontinued. Notwithstanding, MrBeast and Feastables certainly will take CARU's concerns under advisement as it develops future advertisements which appear in children's media.”&lt;/p&gt;&lt;p&gt;All BBB National Programs case decision summaries can be found in the case decision library. For the full text of NAD, NARB, and CARU decisions, subscribe to the Online Archive.&lt;/p&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45346950</guid><pubDate>Tue, 23 Sep 2025 13:44:04 +0000</pubDate></item><item><title>Abundant Intelligence</title><link>https://blog.samaltman.com/abundant-intelligence</link><description>&lt;doc fingerprint="e6f2035843cec2f0"&gt;
  &lt;main&gt;
    &lt;p&gt;Growth in the use of AI services has been astonishing; we expect it to be even more astonishing going forward.&lt;lb/&gt;As AI gets smarter, access to AI will be a fundamental driver of the economy, and maybe eventually something we consider a fundamental human right. Almost everyone will want more AI working on their behalf.&lt;lb/&gt;To be able to deliver what the world needs—for inference compute to run these models, and for training compute to keep making them better and better—we are putting the groundwork in place to be able to significantly expand our ambitions for building out AI infrastructure.&lt;lb/&gt;If AI stays on the trajectory that we think it will, then amazing things will be possible. Maybe with 10 gigawatts of compute, AI can figure out how to cure cancer. Or with 10 gigawatts of compute, AI can figure out how to provide customized tutoring to every student on earth. If we are limited by compute, we’ll have to choose which one to prioritize; no one wants to make that choice, so let’s go build.&lt;lb/&gt;Our vision is simple: we want to create a factory that can produce a gigawatt of new AI infrastructure every week. The execution of this will be extremely difficult; it will take us years to get to this milestone and it will require innovation at every level of the stack, from chips to power to building to robotics. But we have been hard at work on this and believe it is possible. In our opinion, it will be the coolest and most important infrastructure project ever. We are particularly excited to build a lot of this in the US; right now, other countries are building things like chips fabs and new energy production much faster than we are, and we want to help turn that tide.&lt;/p&gt;
    &lt;p&gt;As AI gets smarter, access to AI will be a fundamental driver of the economy, and maybe eventually something we consider a fundamental human right. Almost everyone will want more AI working on their behalf.&lt;/p&gt;
    &lt;p&gt;To be able to deliver what the world needs—for inference compute to run these models, and for training compute to keep making them better and better—we are putting the groundwork in place to be able to significantly expand our ambitions for building out AI infrastructure.&lt;/p&gt;
    &lt;p&gt;If AI stays on the trajectory that we think it will, then amazing things will be possible. Maybe with 10 gigawatts of compute, AI can figure out how to cure cancer. Or with 10 gigawatts of compute, AI can figure out how to provide customized tutoring to every student on earth. If we are limited by compute, we’ll have to choose which one to prioritize; no one wants to make that choice, so let’s go build.&lt;/p&gt;
    &lt;p&gt;Our vision is simple: we want to create a factory that can produce a gigawatt of new AI infrastructure every week. The execution of this will be extremely difficult; it will take us years to get to this milestone and it will require innovation at every level of the stack, from chips to power to building to robotics. But we have been hard at work on this and believe it is possible. In our opinion, it will be the coolest and most important infrastructure project ever. We are particularly excited to build a lot of this in the US; right now, other countries are building things like chips fabs and new energy production much faster than we are, and we want to help turn that tide.&lt;/p&gt;
    &lt;p&gt;Over the next couple of months, we’ll be talking about some of our plans and the partners we are working with to make this a reality. Later this year, we’ll talk about how we are financing it; given how increasing compute is the literal key to increasing revenue, we have some interesting new ideas.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45346968</guid><pubDate>Tue, 23 Sep 2025 13:45:44 +0000</pubDate></item><item><title>The War on Roommates: Why Is Sharing a House Illegal?</title><link>https://marginalrevolution.com/marginalrevolution/2025/08/the-war-on-roommates-why-is-sharing-a-house-illegal.html</link><description>&lt;doc fingerprint="28b9c150fec148ac"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;The War on Roommates: Why Is Sharing a House Illegal?&lt;/head&gt;
    &lt;quote&gt;
      &lt;p&gt;Boarding houses were made illegal by zoning that enforced single family homes and by rules limiting occupancy, demanding every room have a private bathroom, outlawing shared kitchens, requiring parking spaces for every resident etc.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;How States and Cities Decimated Americans’ Lowest-Cost Housing Option is an excellent, hard-hitting piece making and extending these points and significantly it’s not from a libertarian think tank but Pew:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Low-cost micro-units, often called single-room occupancies, or SROs, were once a reliable form of housing for the United States’ poorest residents of, and newcomers to, New York, Chicago, San Francisco, and many other major U.S. cities. Well into the 20th century, SROs were the least expensive option on the housing market, providing a small room with a shared bathroom and sometimes a shared kitchen for a price that is unimaginable today—as little as $100 to $300 a month (in 2025 dollars).&lt;/p&gt;
      &lt;p&gt;In the late 19th and early 20th centuries, landlords converted thousands of houses, hotels, apartment buildings, and commercial buildings into SROs, and by 1950, SRO units made up about 10% of all rental units in some major cities. But beginning in the mid-1950s, as some politicians and vocal members of the public turned against SROs and the people who lived in them, major cities across the country revised zoning and building codes to force or encourage landlords to eliminate SRO units and to prohibit the development of new ones. Over the next several decades, governments and developers gradually demolished thousands of SROs or converted them to other uses, including boutique hotels for tourists. And as SROs disappeared, homelessness—which had been rare from at least the end of the Great Depression to the late 1970s—exploded nationwide.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;The Pew piece does an excellent job of documenting how laws are beginning to change. I especially appreciated this point: the simplest reform is to stop making it illegal for unrelated people to share a home!&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Perhaps the simplest method of creating low-cost shared housing is to allow unrelated individuals to share a house in the same way that relatives are allowed to share a house.67 But many communities limit the number of unrelated people who can live together—in some places, to as few as two. Such laws make sharing a house for a group of roommates—which usually enables rents lower than having an individual apartment—illegal. The U.S. has a record number of unused bedrooms, but many cannot be rented because of restrictions on house sharing by unrelated roommates, even if that would be the most profitable use for the landlord and the most affordable option for the tenants.68 To enable this low-cost housing option, Iowa, Oregon, and Colorado all passed bipartisan legislation to strike down local codes that prohibit house-sharing (in 2017, 2021, and 2024, respectively).69&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;So many of our problems are created by busybodies and do-gooders who prevent people from using their own property.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45347043</guid><pubDate>Tue, 23 Sep 2025 13:51:56 +0000</pubDate></item><item><title>OrangePi 5 Ultra Review: An ARM64 SBC Powerhouse</title><link>https://boilingsteam.com/orange-pi-5-ultra-review/</link><description>&lt;doc fingerprint="7f339c129d878dcd"&gt;
  &lt;main&gt;
    &lt;head rend="h2"&gt;OrangePi 5 Ultra Review: an ARM64 SBC Powerhouse&lt;/head&gt;
    &lt;p&gt;Following our review of their RV2 RISC-V board, OrangePi has offered us to review one of their latest ARM64 based hardware, the OrangePi 5 Ultra. This is currently their highest specs ARM64 SBC.&lt;/p&gt;
    &lt;p&gt;So what can we expect from the OrangePi Pi 5 Ultra board ? Let’s go through the specs first.&lt;/p&gt;
    &lt;head rend="h2"&gt;Specs&lt;/head&gt;
    &lt;p&gt;The board is fairly small in size, very close to what you get with the Raspberry Pi.&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="2"&gt;
        &lt;cell role="head"&gt;Feature&lt;/cell&gt;
        &lt;cell role="head"&gt;Specifications&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Master Chip&lt;/cell&gt;
        &lt;cell&gt;Rockchip RK3588 (8nm LP process)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;CPU&lt;/cell&gt;
        &lt;cell&gt;• 8-core 64-bit processor&lt;p&gt;• 4 Cortex-A76 and 4 Cortex-A55 with independent NEON coprocessor&lt;/p&gt;&lt;p&gt;• Cortex-A76 at 2.4GHz, Cortex-A55 at 1.8GHz&lt;/p&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;GPU&lt;/cell&gt;
        &lt;cell&gt;• Integrated ARM Mali-G610&lt;p&gt;• Built-in 3D GPU&lt;/p&gt;&lt;p&gt;• Fully compatible with OpenGL ES1.½.0/3.2, OpenCL 2.2 and Vulkan 1.2&lt;/p&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;NPU&lt;/cell&gt;
        &lt;cell&gt;Embedded NPU supports INT4/INT8/INT16/FP16 hybrid computing with up to 6TOPS&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;PMU&lt;/cell&gt;
        &lt;cell&gt;RK806-1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;RAM&lt;/cell&gt;
        &lt;cell&gt;LPDDR5 496PIN: 4GB, 8GB, 16GB optional&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Memory&lt;/cell&gt;
        &lt;cell&gt;• eMMC flash socket&lt;p&gt;• eMMC IC&lt;/p&gt;&lt;p&gt;• Note: Either eMMC flash socket or eMMC IC, supports: 32GB, 64GB, 128GB, 256GB optional&lt;/p&gt;&lt;p&gt;• QSPI NOR flash: 16MB&lt;/p&gt;&lt;p&gt;• MicroSD card slot&lt;/p&gt;&lt;p&gt;• M.2 M-KEY slot: supports NVMe SSD (PCIe 3.0 4Lane)&lt;/p&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;USB&lt;/cell&gt;
        &lt;cell&gt;2 × USB3.0; 2 × USB2.0&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Video&lt;/cell&gt;
        &lt;cell&gt;• 1 × HDMI 2.1 output up to 8K@60FPS&lt;p&gt;• 1 × HDMI 2.0 input up to 4K@60FPS&lt;/p&gt;&lt;p&gt;• 1 × MIPI DSI TX 4 Lane&lt;/p&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Camera&lt;/cell&gt;
        &lt;cell&gt;• 2 × MIPI CSI 4 Lane&lt;p&gt;• 1 × MIPI D-PHY RX 4 Lane&lt;/p&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Audio&lt;/cell&gt;
        &lt;cell&gt;CODEC: ES8388&lt;p&gt;• 1 × Audio 3.5mm jack with mic&lt;/p&gt;&lt;p&gt;• 1 × MIC In&lt;/p&gt;&lt;p&gt;• 1 × HDMI 2.1 eARC&lt;/p&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Ethernet&lt;/cell&gt;
        &lt;cell&gt;1 × PCIe 2.5G LAN (RTL8125BG)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Wi-Fi + BT Module&lt;/cell&gt;
        &lt;cell&gt;Onboard Wi-Fi 6E + BT 5.3/BLE module: AP6611&lt;p&gt;• Wi-Fi interface: SDIO3.0&lt;/p&gt;&lt;p&gt;• BT interface: UART/PCM&lt;/p&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Expansion Port&lt;/cell&gt;
        &lt;cell&gt;Dual-row pin: 2.54mm 40Pin&lt;p&gt;• Supports DC 5V and 3.3V power output&lt;/p&gt;&lt;p&gt;• Configurable UART, PWM, I2C, SPI, CAN, GPIO and other functional interfaces&lt;/p&gt;&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Button&lt;/cell&gt;
        &lt;cell&gt;1 × MaskRom key, 1 × On/Off key&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Power Source&lt;/cell&gt;
        &lt;cell&gt;Supports Type-C power supply, 5V @ 5A&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;LED&lt;/cell&gt;
        &lt;cell&gt;RGB LED side illumination&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;FAN&lt;/cell&gt;
        &lt;cell&gt;5V 2PIN 1.25mm socket&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;RTC&lt;/cell&gt;
        &lt;cell&gt;3V 2PIN 1.25mm socket&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Debugging&lt;/cell&gt;
        &lt;cell&gt;Debug serial UART included in 40PIN expansion port&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Supported OS&lt;/cell&gt;
        &lt;cell&gt;Orangepi OS (Droid), Orangepi OS (Arch), Orangepi OS (OH), Ubuntu, Debian, Android 13&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;PCB&lt;/cell&gt;
        &lt;cell&gt;Length: 89mm, Width: 57mm, Thickness: 1.6mm&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Weight&lt;/cell&gt;
        &lt;cell&gt;60.5g&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;The model I received for this review was a 8 GB one. One of the key reasons to use this SBC over other versions, is that it leverages LPDDR5 memory capable of very good speeds.&lt;/p&gt;
    &lt;p&gt;What I like about the specs is the numerous options for storage (one eMMC and another NVME M2 slot), the 2 Gigabit Ethernet port (a single one this time, so don’t expect to make it into a router), the 4 USB ports (sufficient to connect keyboard, mouse, and something else).&lt;/p&gt;
    &lt;p&gt;On paper, the specs are impressive with the fairly recent Rockchip processor. There is a NPU as well, but don’t expect to have it supported easily in Linux, even on AMD the NPU support is shaky at best. For this SBC, it involves cross-compilation, custom binaries before you can exploit a model on this board.&lt;/p&gt;
    &lt;p&gt;This is what the layout of the board looks like:&lt;/p&gt;
    &lt;p&gt;Here’s the back view:&lt;/p&gt;
    &lt;p&gt;Now you should be aware of the following:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Mobile GPUs don’t support OpenGL, only the OpenGLES subtype. You can get some Vulkan support (1.2), but as we will see later, hardware support is unfortunately not there yet.&lt;/item&gt;
      &lt;item&gt;The board is priced at around 130 USD for the 16GB version (it seems to be the main one being sold right now). Which is roughly equivalent to the Raspberry Pi 5 price for the same amount of memory. However, the Orange Pi 5 Ultra board is much more powerful in comparison, so depending on your use case, the Orange Pi 5 Ultra would represent a better value for money.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Of course, the usefulness of such a board depends entirely on the quality of the software support.&lt;/p&gt;
    &lt;head rend="h2"&gt;Software Support&lt;/head&gt;
    &lt;head rend="h3"&gt;A Full Ubuntu Experience&lt;/head&gt;
    &lt;p&gt;There are many images available for this board. Ubuntu, Debian, Arch… at first I was wondering which one to go for. Even in each category you have a bunch of different images:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Focal (20.04 LTS), either desktop with xfce or server version.&lt;/item&gt;
      &lt;item&gt;Jammy (22.04 LTS), desktop with GNOME or Xfce, or a server version. But it goes deeper than that. You get two different kernel available. An old 5.10 kernel or a 6.1.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;I went for the Ubuntu Jammy 22.04 LTS with the 6.1 kernel, the desktop build using Xfce (GNOME was not available for that kernel).&lt;/p&gt;
    &lt;p&gt;As you can see, the Ubuntu 24.04 distro is missing from the list, and this is a shame, since this is a board released late 2024. I contacted OrangePi and they mentioned that they would eventually release a 24.04 version, but there was no clear timeline for that.&lt;/p&gt;
    &lt;p&gt;To install Ubuntu, you use dd or Balena Etcher to image a micro-SD card first, and then you get some helper scripts (using ncurses) that make it super easy to image either a eMMC chip, or a NVME drive that’s attached to the board (I don’t recommend using a micro-SD card as the main media).&lt;/p&gt;
    &lt;p&gt;Once you reach the desktop, you will see that things work pretty much as expected. Wifi, Bluetooth, and even the HDMI port could properly recognize my Ultra Wide Screen and display the full resolution. This was an issue with the RV2 board from Orange Pi (probably hardware/drivers related) but on ARM64 it seems like things are much more robust.&lt;/p&gt;
    &lt;head rend="h3"&gt;GPU Support?&lt;/head&gt;
    &lt;p&gt;Sadly, but this was almost expected, there does not seem to be any kind of GPU support in the version that I have chosen. A quick check with glxgears confirms that there is just a software pipe for rendering.&lt;/p&gt;
    &lt;p&gt;This being said, the software rendering is very very fast - you can see that there’s a lot of power under the hood on the CPU side. The same glxgears was only running at 35 FPS on the RV2, here it’s 10 times faster!&lt;/p&gt;
    &lt;p&gt;There is however hope. It looks like there are efforts to mainline the GPU drivers on the Linux kernel, so when this happens you could expect a standard distro like ARMbian to offer full support of the GPU capabilities. Too early to say, but we will come back on that later.&lt;/p&gt;
    &lt;p&gt;Because of the lack of GPU support, I will be skipping the gaming aspects of this board for now. I will revisit it in another article once we have proper GPU drivers, to actually see what we can expect from this SBC once we have the Mali ready for some action.&lt;/p&gt;
    &lt;head rend="h3"&gt;Applications&lt;/head&gt;
    &lt;p&gt;I installed and tried bunch of things:&lt;/p&gt;
    &lt;p&gt;Chromium is installed by default and works very well, but is limited to the 110 version which is old by now. Using Flathub and Flatpak I could install a much more recent version, that has proper extensions support. Firefox works fine, too - its fork, Zen browser, also works via Flatpak but is very slow for some reason. I also tried a non-Flatpak install for Zen, but it was also slow, so it’s probably not related to Flatpak itself.&lt;/p&gt;
    &lt;p&gt;This is now a good time to talk about Flatpak. When I was reviewing the RV2 board which sports a RISC-V chip, I remarked that there are very few Flatpaks that actually support that architecture. So in effect, while flatpak is supposed to work regardless of the architecture, if you don’t have any binary built for your architecture, you won’t be able to make much use of Flathub and the like. For ARM64, the support is not 100% either, but there is a massive footprint of applications that support ARM64. I tried quite a lot of applications and I was constantly surprised wow, they even have ARM64 for that!. I surmise that this is the effect of having a mainstream ARM64 desktop machine out there running Linux with the Macbooks equipped with the M chipsets, running Asahi. (and a lot of folks who have such machines being developers themselves, of course).&lt;/p&gt;
    &lt;p&gt;While most applications worked with the RV2 (which is roughly equivalent to a Raspberry Pi 3), it showed its limits when you wanted to do video editing for example. Kdenlive and Openshot were barely working. Here, with the OrangePi 5 Ultra, Kdenlive works like a breeze and had no issue dealing with a bit of video editing and rendering. The final video render was certainly not as fast as what you’d expect on a regular X86_64 platform, but you know, it’s workable if you are not dealing with very long videos (also, avoid 4k). We are certainly dealing with a much more capable SOC here.&lt;/p&gt;
    &lt;p&gt;Out of curiosity, I tried some more professional applications like Dbeaver (for databases interactions), and it worked as expected.&lt;/p&gt;
    &lt;p&gt;The same with Memgraph (graph database), used via Docker (since they don’t have a client for ARM64, I used the web client instead). Of course, I did not try to load a massive graph database with this, but the system was very responsive and usable. Honestly, very impressive to see Memgraph running so well on a SBC.&lt;/p&gt;
    &lt;p&gt;I wasted a lot of time trying to make R and Rstudio for ARM64 work togeher from the distro (without success, there was some kind of issue with the tools base package not being recognized), until I switched gears and used a Docker version of R/Rstudio instead. Once again this proved to work very well (Rstudio is a Java application so the browser IDE is basically identical).&lt;/p&gt;
    &lt;p&gt;The only appplication that did not work well was Blender. It launched, but afterwards it was a slideshow with 3 seconds between an interaction and the refresh of the screen. I assume this is because Blender requires GPU support even for its innerworkings, and since we don’t have GPU acceleration in this OS, it’s just not going to cut it.&lt;/p&gt;
    &lt;p&gt;But honestly… that’s it! Everything else I tried worked as expected on a usual desktop or laptop. At no time did I feel this is too slow, I can’t wait to stop my review - instead, if you told me that I would only have that SBC to do regular work, well, I could totally see myself living with it for 90% of my use cases.&lt;/p&gt;
    &lt;p&gt;Very impressive to see this kind of performance in this form factor. And this is a board running only at 1.8 Ghz! I can only imagine how things will improve once they go to a better lithography and manage to increase the frequency of the CPU.&lt;/p&gt;
    &lt;head rend="h2"&gt;Temperature Control&lt;/head&gt;
    &lt;p&gt;The temperature does rise a little when using all cores at once, but it remains at a manageable level. When doing some bursts of compilation the temperature rises up to about 78~80C, and when running LLMs on the CPU (full 100% CPU usage), we get up to 84, 85C.&lt;/p&gt;
    &lt;p&gt;This looks like the hard limit - I am not sure if the SBC goes into throttling then, but I did not observe higher temperature. In any cases, in all situations (apart from Blender), the system remained very responsive.&lt;/p&gt;
    &lt;head rend="h2"&gt;Power Draw&lt;/head&gt;
    &lt;p&gt;I don’t have a way to measure power draw, but according to AndroidPIMP you can expect an idle power draw between 3W and 5W, and an usage under load on average around 10W. Since the power source can produce 25W maximum, I guess you can imagine the board going up to 15W or so in spikes. In any case, its low power profile and the fact that the temperature remains well under control tells me that this is a great little machine for a server.&lt;/p&gt;
    &lt;head rend="h2"&gt;AI - LLM Performance&lt;/head&gt;
    &lt;p&gt;For this part, I compiled both Ollama and llama.cpp and run some benchmarks on llama.cpp. I tried only smaller models, because I had low expectations that it would be running at usable speeds. The results are below.&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="7"&gt;
        &lt;cell role="head"&gt;model&lt;/cell&gt;
        &lt;cell role="head"&gt;size&lt;/cell&gt;
        &lt;cell role="head"&gt;params&lt;/cell&gt;
        &lt;cell role="head"&gt;backend&lt;/cell&gt;
        &lt;cell role="head"&gt;threads&lt;/cell&gt;
        &lt;cell role="head"&gt;test&lt;/cell&gt;
        &lt;cell role="head"&gt;t/s&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="7"&gt;
        &lt;cell&gt;gemma3 1B Q4_K - Medium&lt;/cell&gt;
        &lt;cell&gt;762.49 MiB&lt;/cell&gt;
        &lt;cell&gt;999.89 M&lt;/cell&gt;
        &lt;cell&gt;CPU&lt;/cell&gt;
        &lt;cell&gt;8&lt;/cell&gt;
        &lt;cell&gt;pp512&lt;/cell&gt;
        &lt;cell&gt;23.37 ± 0.94&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="7"&gt;
        &lt;cell&gt;gemma3 1B Q4_K - Medium&lt;/cell&gt;
        &lt;cell&gt;762.49 MiB&lt;/cell&gt;
        &lt;cell&gt;999.89 M&lt;/cell&gt;
        &lt;cell&gt;CPU&lt;/cell&gt;
        &lt;cell&gt;8&lt;/cell&gt;
        &lt;cell&gt;tg128&lt;/cell&gt;
        &lt;cell&gt;2.49 ± 0.62&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="7"&gt;
        &lt;cell&gt;granite 3B Q4_0&lt;/cell&gt;
        &lt;cell&gt;1.36 GiB&lt;/cell&gt;
        &lt;cell&gt;2.53 B&lt;/cell&gt;
        &lt;cell&gt;CPU&lt;/cell&gt;
        &lt;cell&gt;8&lt;/cell&gt;
        &lt;cell&gt;pp512&lt;/cell&gt;
        &lt;cell&gt;36.34 ± 1.78&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;granite 3B Q4_0&lt;/cell&gt;
        &lt;cell&gt;1.36 GiB&lt;/cell&gt;
        &lt;cell&gt;2.53 B&lt;/cell&gt;
        &lt;cell&gt;CPU&lt;/cell&gt;
        &lt;cell&gt;8&lt;/cell&gt;
        &lt;cell&gt;tg128&lt;/cell&gt;
        &lt;cell&gt;5.06 ± 0.10&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;For dense models like Gemma 1B, it’s kind of slow and not really good for chatting. If you plan to use LLMs with this, however, MOE models like granite 3.1 3B work at a decent speed (5 tokens by second, not bad). I would certainly prefer 10 tokens by second minimum, but this is the fact, at least when using the CPU mode. It’s certainly a lot more usable than the RV2 review previously.&lt;/p&gt;
    &lt;p&gt;Once we have a capable Vulkan driver working, I wonder if Vulkan will be able to be leveraged to increase the token generation speed on this board. It works well on AMD because it can expand it shared memory, not sure how much Vulkan can allocate on an AMR64 board like this.&lt;/p&gt;
    &lt;head rend="h2"&gt;Performance&lt;/head&gt;
    &lt;p&gt;The go-to suite to evaluate performance is Geekbench, because it can provide some comparison between the speed of similar tests across different architectures. Here, let’s compare it against another flagship ARM64 board, the Raspberry Pi 5 running at 2.4 ghz.&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="3"&gt;
        &lt;cell role="head"&gt;Spec&lt;/cell&gt;
        &lt;cell role="head"&gt;OrangePi 5 Ultra&lt;/cell&gt;
        &lt;cell role="head"&gt;Raspberry Pi 5 Model B Rev 1.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Operating System&lt;/cell&gt;
        &lt;cell&gt;Ubuntu 22.04.5 LTS&lt;/cell&gt;
        &lt;cell&gt;Debian GNU/Linux 12 (bookworm)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;Processor&lt;/cell&gt;
        &lt;cell&gt;ARM ARMv8 @ 1.80 GHz, 1 Processor, 8 Cores&lt;/cell&gt;
        &lt;cell&gt;ARM ARMv8 @ 2.40 GHz, 1 Processor, 4 Cores”&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Memory&lt;/cell&gt;
        &lt;cell&gt;8 GB model&lt;/cell&gt;
        &lt;cell&gt;8 GB model&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;head rend="h3"&gt;Single Core Performance&lt;/head&gt;
    &lt;p&gt;Both boards end up with a very similar performance on average in single core tests.&lt;/p&gt;
    &lt;p&gt;There are some differences, but it’s fairly marginal.&lt;/p&gt;
    &lt;head rend="h3"&gt;Multi-core performance&lt;/head&gt;
    &lt;p&gt;When doing multi-threaded, multi-core workflows, this is where we see the 8 processors that are available on the Orange Pi 5 Ultra shine.&lt;/p&gt;
    &lt;p&gt;Its performance surpasses the Raspberry Pi 5 in almost all activities, and usually by a good 30% advantage.&lt;/p&gt;
    &lt;head rend="h3"&gt;Performance overview&lt;/head&gt;
    &lt;p&gt;As you can see, for parallel workloads, this board is much better than Raspberry Pi 5.&lt;/p&gt;
    &lt;p&gt;Now let’s look at the potential use of such boards as servers.&lt;/p&gt;
    &lt;head rend="h2"&gt;Server Use&lt;/head&gt;
    &lt;p&gt;You can use this board as a server, of course. You have several distro images just for the server use, too. Docker works very nicely with this SBC, and unlike what we have seen for the RV2 and the general Risc-V ecosystem where there are very few Docker images available for that architecture, the ARM64 scene is completely different.&lt;/p&gt;
    &lt;p&gt;Here, it’s almost rare to find a Docker image where there is no ARM64 build. Not surprising since ARM64 is a thing on servers nowadays - Amazon has famously pushed their own ARM Gravitron servers as an option to reduce cloud computing costs. So most companies and providers operating on the cloud pretty much need to have ARM64 builds.&lt;/p&gt;
    &lt;p&gt;On the server, you also don’t need to care as much about the lack of GPU support since you are running headless, so any distro provided by OrangePi should do: Debian, Ubuntu, or even Arch.&lt;/p&gt;
    &lt;p&gt;Since this is a board that operates at low wattage and passive cooling, it’s an excellent choice if you want to build a small server for the home. For a NAS use case I would probably go for the RV2 instead since it has more storage ports, but this one could also work considering you can have an eMMC drive together with another M2 drive (NVME) at the same time.&lt;/p&gt;
    &lt;head rend="h2"&gt;Verdict&lt;/head&gt;
    &lt;p&gt;Little boards that were previously only used for fun or small projects have come a long way. Desktop environments were rarely usable before even on the later iterations of the Raspberry Pi. Things changed a couple of years ago, and the Raspberry Pi 5 and this Orange Pi 5 Ultra fall into a category where you could actually use them as real, daily general purpose computers and not be bothered by their responsiveness or their performance. Not only will it work well for server use, but it can do desktop work without sweating either.&lt;/p&gt;
    &lt;p&gt;Price wise, the 16G version is competitive. If you want similarly specced Celeron-equipped mini-PCs you would probably need a configuration with a N100 processor (that seems to be faster than the RK3588), but that is more expensive. So the value for money of this SBC seems to be pretty good at the moment, even for the 16G configuration.&lt;/p&gt;
    &lt;p&gt;The only negative points are the moment are:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;lack of recent distro images (Ubuntu 24.04 would be nice)&lt;/item&gt;
      &lt;item&gt;lack of GPU support (potentially because I was using the 6.1 kernel?)&lt;/item&gt;
      &lt;item&gt;incomplete mainline support&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;which may be some killer aspects depending on your use case. The wide availability of software for ARM64 on Flatpak and Docker somewhat mitigates such issues for now.&lt;/p&gt;
    &lt;p&gt;The real solution will come when the RK3588 support will be properly mainlined. Currently only parts of it are supported but it’s not complete and bug-free from what I could read. I am following news around the Arch-based BredOS as they are actively working on bringing proper support for this chip. Once this is done, the benefits should be apparent such as:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Much better Vulkan performance (compared to proprietary driver)&lt;/item&gt;
      &lt;item&gt;Proper video acceleration in browsers like Chrome&lt;/item&gt;
      &lt;item&gt;No more patches to chase from one kernel to the next!&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Once there are news in this regard (hopefully in 2025) I plan to revisit my review of this SBC.&lt;/p&gt;
    &lt;head rend="h2"&gt;Practical Details&lt;/head&gt;
    &lt;p&gt;If you are interested to grab one, there are currently a few shops that sell it online:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Aliexpress store: Orange Pi 5 Ultra 16GB at 220 USD (without shipping). Expensive if you are in the US.&lt;/item&gt;
      &lt;item&gt;Amazon OrangePi Official: Orange Pi 5 Ultra 16GB sells for 158 USD on Amazon.com. (without shipping) - the cheaper option.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;There are probably some more third parties depending on where you are based in the world.&lt;/p&gt;
    &lt;p&gt;Other valuable resources:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;The OrangePi 5 Ultra Product Page&lt;/item&gt;
      &lt;item&gt;The user manual for the board&lt;/item&gt;
      &lt;item&gt;The distro page on the OrangePi website.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Final note, we have been provided with a review unit of this SBC by OrangePi themselves for this article.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45347089</guid><pubDate>Tue, 23 Sep 2025 13:54:51 +0000</pubDate></item><item><title>How are developers using AI? Inside our 2025 DORA report</title><link>https://blog.google/technology/developers/dora-report-2025/</link><description>&lt;doc fingerprint="af439e98eb1325cc"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;How are developers using AI? Inside our 2025 DORA report&lt;/head&gt;
    &lt;p&gt;Today, we're sharing key findings from the 2025 DORA Report, our annual research into the trends shaping modern software development. In our report, State of AI-assisted Software Development, we surveyed nearly 5,000 technology professionals globally, validating what we all suspected: the way software is built has profoundly changed.&lt;/p&gt;
    &lt;p&gt;Google Cloud’s DORA research program has been investigating the capabilities, practices and measures of high-performing technology-driven teams and organizations for more than a decade. And our 2025 research makes it clear that AI is no longer a novelty, but a near-universal part of a developer’s toolkit.&lt;/p&gt;
    &lt;head rend="h2"&gt;Massive adoption meets major productivity gains&lt;/head&gt;
    &lt;p&gt;This year's report reveals a significant finding: AI adoption among software development professionals has surged to 90%, marking a 14% increase from last year. These professionals, from developers to product managers, now integrate AI into their core workflows, typically dedicating a median of two hours daily to working with it.&lt;/p&gt;
    &lt;p&gt;Our findings on the adoption and use of AI by software developers point to a broad adoption of and deep reliance on AI across a range of tasks.&lt;/p&gt;
    &lt;p&gt;A significant majority (65%) of those surveyed are heavily relying on AI for software development, with 37% reporting a "moderate amount" of reliance, 20% "a lot" and 8% "a great deal."&lt;/p&gt;
    &lt;p&gt;This indicates a strong adoption and dependence on AI within the field, and the advantages for users of these tools are evident in this year’s research:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Significant productivity gains: Over 80% of respondents indicate that AI has enhanced their productivity.&lt;/item&gt;
      &lt;item&gt;Improved code quality: A majority (59%) report a positive influence of AI on code quality.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;As AI adoption has increased, developers have reported increased productivity and positive impacts on code quality&lt;/p&gt;
    &lt;head rend="h2"&gt;A trust and productivity paradox&lt;/head&gt;
    &lt;p&gt;Despite the widespread adoption and perceived benefits, some software development professionals remain cautious about using AI in their work. Our report uncovers a surprising "trust paradox": While 24% of respondents report a "great deal" (4%) or "a lot" (20%) of trust in AI, 30% trust it "a little" (23%) or "not at all" (7%). This indicates that AI outputs are perceived as useful and valuable by many of this year’s survey respondents, despite a lack of complete trust in them. This could also imply that AI is being incorporated into workflows as a supportive tool to enhance productivity and efficiency, rather than serving as a full substitute for human judgment.&lt;/p&gt;
    &lt;p&gt;While AI is boosting individual performance, its effect on organizations is more complex. This year's research shows that AI adoption is now linked to higher software delivery throughput, meaning teams are releasing more software and applications, which is a positive reversal of last year's findings. However, the ongoing challenge remains of ensuring software works as intended before it's delivered to users.&lt;/p&gt;
    &lt;head rend="h2"&gt;Reflections on how teams work&lt;/head&gt;
    &lt;p&gt;Our research this year also found that AI can act as a "mirror and a multiplier.” In cohesive organizations, AI boosts efficiency. In fragmented ones, it highlights weaknesses.&lt;/p&gt;
    &lt;p&gt;To better understand these underlying conditions, this year's report moves beyond simple performance metrics to reveal seven distinct team archetypes, providing a deeper, more human-centric view of what drives success in AI adoption. These profiles, from "Harmonious high-achievers" to teams caught in a "Legacy bottleneck," offer a richer narrative that can help organizations understand the unique interplay between performance, well-being and workplace environment.&lt;/p&gt;
    &lt;p&gt;For organizations ready to adopt AI, new tools can help them evolve their work processes - meaning they benefit from both the productivity boost and the resulting transformation.&lt;/p&gt;
    &lt;head rend="h2"&gt;A blueprint for guiding AI in organizations&lt;/head&gt;
    &lt;p&gt;Adoption of AI alone isn't enough to guarantee success though. That’s why this year, we’re also introducing a new blueprint of seven essential capabilities for amplifying AI's impact. The DORA AI Capabilities Model is based on extensive research and identifies a blend of technical and cultural factors that are crucial for success.&lt;/p&gt;
    &lt;p&gt;The DORA AI Capabilities Model provides data-backed guidance for organizations adopting AI&lt;/p&gt;
    &lt;p&gt;The key takeaway is clear: AI is a transformative tool for developers, but realizing its full potential requires more than just adoption. It demands that organizations evolve their culture, processes and systems to support a new era of software development.&lt;/p&gt;
    &lt;p&gt;Get deeper insights and additional findings from this year's research when you download the State of AI-assisted Software Development report.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45347197</guid><pubDate>Tue, 23 Sep 2025 14:02:49 +0000</pubDate></item><item><title>Agents turn simple keyword search into compelling search experiences</title><link>https://softwaredoug.com/blog/2025/09/22/reasoning-agents-need-bad-search</link><description>&lt;doc fingerprint="3b1fda320b812e0a"&gt;
  &lt;main&gt;
    &lt;p&gt;A traditional RAG system often looks like the search we’ve built for years. An LLM calls a search API. We have query understanding and reranking functionality under the hood. All optimized for user engagement.&lt;/p&gt;
    &lt;p&gt;This thick-daddy search API does quite a bit, as shown below:&lt;/p&gt;
    &lt;p&gt;With small modifications (chunking, a focus on vector retrieval) the RAG implementations look familiar.&lt;/p&gt;
    &lt;p&gt;Agents, however, come with the ability to reason. And like human users, they might try a query, see the results, adjust their query, and zero-in on the best search terms to find what they want.&lt;/p&gt;
    &lt;p&gt;Like human users, the agent can build a “mental model” of how the search tool works. If there’s a clear, predictable correspondence between stimulus and output, the agent will figure it out. However, a large, complex system might not be as transparent.&lt;/p&gt;
    &lt;p&gt;Because of this, I’d argue the traditional, thick search APIs are counterproductive to being used by agents. They may be too complex for agents to reason about effectively.&lt;/p&gt;
    &lt;p&gt;So lately, I’ve tried a rather stupid search backend. More like this image:&lt;/p&gt;
    &lt;p&gt;In the furniture search examples I use in my Cheat at Search course, I tried this out.&lt;/p&gt;
    &lt;p&gt;Instead of a big, complex search system, I tell the agent about this dumb thing it can use to search. It then applies its own intelligence to use the tool correctly.&lt;/p&gt;
    &lt;code&gt;def search_products(query: str, top_k: int = 5) -&amp;gt; List[Dict]:
    """
    Search for furniture products.

    This is direct keyword search, no synonyms, only BM25 scoring on product name 
    and description and basic snowball tokenization of query and document.

    Args:
        query: The search query string.
        top_k: The number of top results to return.

    Returns:
        A list of dictionaries containing product information.
    """
   ...
&lt;/code&gt;
    &lt;p&gt;( the doc string here becomes part of the prompt, see the source code)&lt;/p&gt;
    &lt;p&gt;I slimmed the search down to fairly simple keyword search, and told GPT-5 exactly how it works. It behaves predictably, if stupidly.&lt;/p&gt;
    &lt;p&gt;And that’s a good thing.&lt;/p&gt;
    &lt;p&gt;I’m fairly surprised how well it works at solving user queries. Albeit slowly.&lt;/p&gt;
    &lt;p&gt;Here I am finding couches that would be good for a vampire.&lt;/p&gt;
    &lt;code&gt;User: A couch fit for a vampire

...

Assistant: Here are some dramatically tufted, velvet/chesterfield options with a suitably vampiric vibe:

Chesterfield-style sofas (timeless, tufted, dramatic arms/back)
- Porter 80" Velvet Rolled Arm Chesterfield Sofa (ID 4306)
- Rolled Arm Chesterfield Sofa (ID 28854)
- Quitaque 88" Rolled Arm Chesterfield Sofa (ID 17093)

Velvet sofas with luxe flair
- 85" Velvet Tuxedo Arm Sofa (ID 29613) — velvet with nailhead trim
- Camren 72" Velvet Round Arm Sofa (ID 40049)
- 112" Wide Velvet Sofa &amp;amp; Chaise (ID 27546)

Chaise lounges (fainting-couch energy)
- Rosemead Velvet Chaise Lounge (ID 40626)
- Avondale Velvet Chaise Lounge (ID 6452)
- Brighouse Chaise Lounge (ID 6392)
- Tilstone Chaise Lounge (ID 18643) — velvet with silver nailhead accents
&lt;/code&gt;
    &lt;p&gt;Or asking for the ugliest chair&lt;/p&gt;
    &lt;code&gt;User: ugliest chair in the catalog

Assistant: I ran several targeted searches to surface the most over-the-top
chairs. Here are the top contenders for “ugliest chair” in our catalog:

- Zebra Arm Chair (ID 18587) — bold zebra upholstery, statement piece energy
- Toby Cow Print Task Chair (ID 5002) — desk chair in full cow print
- Gaudy 47" Wide Chenille Armchair (ID 8921) — it literally says “Gaudy” in the name
- The Abbey Gothic Revival 19" Wide Side Chair (ID 36608) — ornate, carved gothic look
&lt;/code&gt;
    &lt;head rend="h2"&gt;Helping the agent remember as it goes&lt;/head&gt;
    &lt;p&gt;The agent can track how well a tool call works as it goes. In my code, the agent stores its evaluation of each tool’s results. Essentially “LLM-as-a-judge as you go”. The next time a search happens, the agent can recall what it liked / didn’t like last time.&lt;/p&gt;
    &lt;code&gt;system_prompt = """
    You take user search queries and use a search tool to find furniture products.
    
    Look at the search tools you have, their limitations, how they work, etc when forming your plan.

    Before searching you MUST use the "get_past_queries" to get similar, past queries
    the user has made

    Remember every tool usage you make. After searching with a tool, evaluate the results,
    then save the interaction (immediately after tool usage) with the "save_queries_used" tool
"""

&lt;/code&gt;
    &lt;p&gt;Below are search tool queries my code saved after I searched for the &lt;code&gt;ugliest chair in the catalog&lt;/code&gt;&lt;/p&gt;
    &lt;p&gt;You see the user’s query, along with the query used at the tool (ie &lt;code&gt;cow print chair&lt;/code&gt; ):&lt;/p&gt;
    &lt;code&gt;Saved interaction: user_query='ugliest chair in the catalog' 
search_tool_name='mcp_search-server.search_products' 
search_tool_query='cow print chair'
quality='good'
reasoning="Returned an adult 'cow print task chair' that clearly fits a loud/novelty aesthetic; strong candidate for 'ugliest chair' request."

Saved interaction: user_query='ugliest chair in the catalog'
search_tool_name='mcp_search-server.search_products' 
search_tool_query='patchwork accent chair'
quality='meh'
reasoning="Found a kids patchwork chair; adult options not surfaced. Only tangentially relevant to 'ugliest chair' intent."

Saved interaction: user_query='ugliest chair in the catalog' 
search_tool_name='mcp_search-server.search_products'
search_tool_query='skull chair'
quality='bad'
reasoning='No chair products matched; results were decor and textiles unrelated to chairs.'

&lt;/code&gt;
    &lt;p&gt;I’ll be able to recall what worked well for this query. I could even remember these expansions later if I build a normal site search without LLMs.&lt;/p&gt;
    &lt;p&gt;Semantic caching gives us another bonus. Later, when I search for a similar query, say &lt;code&gt;ugly chair&lt;/code&gt; , I can take &lt;code&gt;ugly chair&lt;/code&gt; and find past queries most similar to this query, like below.&lt;/p&gt;
    &lt;p&gt;The agent can see what’s worked well / hasn’t worked well for friends of &lt;code&gt;ugly chair&lt;/code&gt;:&lt;/p&gt;
    &lt;code&gt;Getting past queries for: ugly chair

Matched query: 
  ugliest chair in the catalog, 
  similarity: 0.8236806392669678, 
  interaction: user_query='ugliest chair in the catalog' 
  search_tool_name='mcp_search-server.search_products'
  search_tool_query='novelty chair'
  quality='meh' reasoning="Found novelty chairs but primarily for kids; may not match adult seating requestfor 'ugliest chair'."
Matched query: ugliest chair in the catalog, 
  similarity: 0.8236806392669678, interaction: user_query='ugliest chair in the catalog' search_tool_name='mcp_search-server.search_products' search_tool_query='weird chair'
  quality='bad'
  reasoning="Keyword 'weird' mostly matched non-chair textiles and generic chair listings; not  helpful for surfacing intentionally odd or gaudy chairs."
Matched query: ugliest chair in the catalog, 
  similarity: 0.8236806392669678,
  interaction: user_query='ugliest chair in the catalog'
  search_tool_name='mcp_search-server.search_products'
  search_tool_query='zebra accent chair'
  quality='good'
  reasoning="Surfaced a 'zebra arm chair' (animal print) that fits an intentionally loud/gaudy aesthetic often perceived as ugly; results include a clear adult armchair option."
&lt;/code&gt;
    &lt;p&gt;As the agent searches, it’s little vector lookup of user queries turns into a knowledge graph. User queries connected to other user queries via similarity. And each with notes on what’s worked / not worked when calling the search tool.&lt;/p&gt;
    &lt;p&gt;It’s the ultimate learning machine.&lt;/p&gt;
    &lt;p&gt;At least as far as its own preferences.&lt;/p&gt;
    &lt;head rend="h2"&gt;Only as good as the agent’s ability to evaluate results&lt;/head&gt;
    &lt;p&gt;The LLM must be able to evaluate the results that come back. It needs to be a reasonable LLM judge. That means:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Did we return useful metadata for the agent to use in its evaluation? (Here we use product / description). But should we return images? Any other metadata?&lt;/item&gt;
      &lt;item&gt;Does the LLM actually have domain expertise to evaluate the results? (Note above it returns a brand “Gaudy”, which is not the adjective “gaudy” — as in ugly)&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Finally the big one:&lt;/p&gt;
    &lt;head rend="h3"&gt;What about the user’s input?&lt;/head&gt;
    &lt;p&gt;The agent’s judgment is bound to be flawed / limited. Even in an ideal setting, it will always be disjoint from what users want. Lack of user clickstream feedback is a huge gap in RAG that continues here.&lt;/p&gt;
    &lt;p&gt;We can’t expect LLMs to have any idea of the crazy, insane things, humans do when nobody is watching. I’ve seen users do all sorts of things:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Users often click black / boring colors, not loud ones&lt;/item&gt;
      &lt;item&gt;Users click on spicy topics or images that have nothing to do with their query&lt;/item&gt;
      &lt;item&gt;Users get what they need from the search page, and never click anything&lt;/item&gt;
      &lt;item&gt;Users click because of the relationship between an image and its neighbor&lt;/item&gt;
      &lt;item&gt;Click data itself is sparse and noisy, and may require a lot in aggregate to make sense of&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;There are dozens of biases cataloged in user clickstream interactions with search results.&lt;/p&gt;
    &lt;p&gt;The search field has spent decades interpreting clickstream data, and the RAG world continues to lack good answers to getting that data back into the agent.&lt;/p&gt;
    &lt;p&gt;Maybe you’ve seen good research here? Please share!&lt;/p&gt;
    &lt;head rend="h2"&gt;Are reasoners actually actively harmful rankers?&lt;/head&gt;
    &lt;p&gt;Reasoning involves taking a base set of facts and deriving a solution. This, however, is different from directly optimizing for what users want (as expressed through clickstream data). We don’t have the technology for an LLM or agent to churn over millions of user sessions to become a better judge of search result quality.&lt;/p&gt;
    &lt;p&gt;Even if we gave the agent an oracle - labeled each result with user engagement data, could it make sense of latent patterns? Or would it simply be confused at the strange inconsistent behavior of humans that don’t act like math proofs or programming conpetitions?&lt;/p&gt;
    &lt;p&gt;Any ranking model optimized to engagement would more likely be implemented outside the agent: In a classic, thick search stack. The agent’s inner LLM judge, might look at model-ranked results and assume they’re bad. Why would users want such bland products? Why would the search have interpreted “Gaudy” to be a brand name, when its obviously “ugly”?&lt;/p&gt;
    &lt;p&gt;In short, users’ chaotic, implicit search expectations — as expressed in their clickstream — go against the agent’s orderly, explicit reasoning + judgment. An agent may issue a search and think “oh this result set was meh” when in reality, its the most engaging search results for that query.&lt;/p&gt;
    &lt;p&gt;Reasoning about search tool output might be very dangerous if the agent discards actually relevant results.&lt;/p&gt;
    &lt;p&gt;So take this article with this big grain of salt and be careful.&lt;/p&gt;
    &lt;p&gt;But still, it’s pretty fun.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45347363</guid><pubDate>Tue, 23 Sep 2025 14:17:23 +0000</pubDate></item></channel></rss>