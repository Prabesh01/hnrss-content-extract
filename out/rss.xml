<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Hacker News: Front Page</title><link>https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml</link><description>Hacker News RSS</description><atom:link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Tue, 02 Sep 2025 15:38:50 +0000</lastBuildDate><item><title>Implementing a Foil Sticker Effect</title><link>https://www.4rknova.com/blog/2025/08/30/foil-sticker</link><description>&lt;doc fingerprint="7aab8b3d79ef373f"&gt;
  &lt;main&gt;
    &lt;p&gt;In this post, I’ll walk you through how to create a custom shader in Three.js that simulates the look of a foil sticker, complete with angle-dependent iridescence and sparkling metallic flakes. The goal is to capture that premium, holographic effect you see on collectible stickers, trading cards, and high-end packaging, but to render it in real time directly in the browser.&lt;/p&gt;
    &lt;head rend="h1"&gt;Iridescence&lt;/head&gt;
    &lt;p&gt;If you’ve ever tilted a holographic sticker or watched sunlight catch on a soap bubble, you’ve seen iridescence in action. In the real world, this rainbow shimmer comes from thin-film interference. When light waves bounce between layers of a surface, some wavelengths are reinforced while others cancel out, causing colors to shift depending on your viewing angle.&lt;/p&gt;
    &lt;p&gt;In real-time computer graphics, we don’t need to simulate the exact physics. Instead, we can approximate this by mapping view angle to hue, as the surface tilts relative to the camera, its color smoothly shifts through a spectrum. This gives that dynamic, “alive” quality you expect from foil stickers.&lt;/p&gt;
    &lt;head rend="h1"&gt;Foil Flakes&lt;/head&gt;
    &lt;p&gt;Alongside the shifting colors, there’s another key detail: foil flakes. Real metallic foils have tiny reflective particles embedded in them, creating hundreds of bright, sharp highlights that twinkle as you move. These aren’t smooth reflections but randomized sparkles, giving the surface its tactile, premium feel.&lt;/p&gt;
    &lt;p&gt;To replicate this in a shader, we’ll introduce procedural noise to generate small random patches of brightness across the surface. When combined with lighting, they look like metallic specks catching the light. Together, angular hue shifts and flake sparkles create a convincing illusion of printed holographic foil without expensive rendering tricks.&lt;/p&gt;
    &lt;head rend="h1"&gt;Implementation&lt;/head&gt;
    &lt;p&gt;This implementation simulates a peeling, iridescent sticker with foil flakes using Three.js. While I will borrow concepts such as metalness, roughness, and Fresnel from Physically Based Rendering (PBR), this shader is not physically based. The goal is to create a visually plausible, artistic effect.&lt;/p&gt;
    &lt;p&gt;Below is a live demo of the shader, where you can modify its parameters and experiment with different configurations. Use your mouse to rotate the sticker around and see how the material reacts to the lighting.&lt;/p&gt;
    &lt;head rend="h2"&gt;Vertex Shader&lt;/head&gt;
    &lt;p&gt;The vertex shader handles the peel geometry and passes useful information to the fragment shader.&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="3"&gt;
        &lt;cell role="head"&gt;Uniform / Varying&lt;/cell&gt;
        &lt;cell role="head"&gt;Type&lt;/cell&gt;
        &lt;cell role="head"&gt;Purpose&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;code&gt;uPeelAmount&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;float&lt;/cell&gt;
        &lt;cell&gt;Overall peel strength (0 = flat, 1 = fully peeled).&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;code&gt;uPeelAngle&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;float&lt;/cell&gt;
        &lt;cell&gt;Peel direction in degrees.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;code&gt;vUv&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;vec2&lt;/cell&gt;
        &lt;cell&gt;UV coordinates for texture mapping.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;code&gt;vWorldPos&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;vec3&lt;/cell&gt;
        &lt;cell&gt;Vertex position in world space.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;code&gt;vNormal&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;vec3&lt;/cell&gt;
        &lt;cell&gt;Transformed normal for lighting.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;code&gt;vAOIntensity&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;float&lt;/cell&gt;
        &lt;cell&gt;Distance moved by vertex, used to darken lifted areas.&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;The shader goes through the following simple steps:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Compute vector from hinge to current vertex.&lt;/item&gt;
      &lt;item&gt;Calculate the peel factor and angle.&lt;/item&gt;
      &lt;item&gt;Define the rotation axis and apply Rodrigues’ rotation formula to rotate the vertex around that axis.&lt;/item&gt;
      &lt;item&gt;Apply the same rotation to the normal.&lt;/item&gt;
      &lt;item&gt;Calculate a fake ambient occlusion term.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Here’s the full vertex shader code:&lt;/p&gt;
    &lt;code&gt;uniform float uPeelAmount;  // Strength of peel (0.0 → no peel, 1.0 → full peel)
uniform float uPeelAngle;   // Peel angle in degrees (converted to radians in shader)
varying vec2  vUv;          // UV coordinates
varying vec3  vWorldPos;    // Vertex position in world space
varying vec3  vNormal;      // Transformed vertex normal
varying float vAOIntensity; // Ambient occlusion or peel intensity factor

void main() {
    vUv = vec2(uv.x, 1.0 - uv.y);
    vec3 pos = position;

    // Define hinge point for peel
    vec3 hinge = vec3(0.0, 0.0, 0.0);

    // Vector from hinge to current vertex
    vec3 toVertex = pos - hinge;

    // Peel factor calculation
    // Interpolates peel strength diagonally
    // (bottom-left → top-right)
    float peelFactor = (uv.x + uv.y) * 0.5;

    // Convert peel angle to radians
    // Final angle is scaled by peelAmount
    // and per-vertex peelFactor
    float radAngle = radians(uPeelAngle);
    float angle = radAngle * uPeelAmount * peelFactor;

    // Define rotation axis for peel
    // Diagonal axis pointing from top-left 
    // to bottom-right
    vec3 axis = normalize(vec3(-1.0, 1.0, 0.0));
    float cosA = cos(angle);
    float sinA = sin(angle);

    // Apply Rodrigues' rotation formula
    // Rotates the vertex around the diagonal axis
    vec3 rotated = toVertex * cosA +
                   cross(axis, toVertex) * sinA +
                   axis * dot(axis, toVertex) * (1.0 - cosA);

    // Update vertex position after rotation
    pos = hinge + rotated;

    // Rotate vertex normal the same way to
    // ensure lighting matches the peeled
    // geometry
    vec3 rotatedNormal = normal * cosA +
                         cross(axis, normal) * sinA +
                         axis * dot(axis, normal) * (1.0 - cosA);

    // Transform normal into view space
    vNormal = normalize(normalMatrix * rotatedNormal);

    // Transform vertex to world space
    vec4 worldPos = modelMatrix * vec4(pos, 1.0);
    vWorldPos = worldPos.xyz;

    // Ambient Occlusion term based on distance moved
    // from original vertex position
    vAOIntensity = length(toVertex - rotated);

    // Final projection
    gl_Position = projectionMatrix * viewMatrix * worldPos;
}
&lt;/code&gt;
    &lt;head rend="h2"&gt;Fragment Shader&lt;/head&gt;
    &lt;p&gt;The fragment shader handles all lighting, reflections, iridescence, and foil flakes. It layers procedural effects to create a rich, dynamic look.&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="3"&gt;
        &lt;cell role="head"&gt;Uniform&lt;/cell&gt;
        &lt;cell role="head"&gt;Type&lt;/cell&gt;
        &lt;cell role="head"&gt;Purpose&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;code&gt;map&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;sampler2D&lt;/cell&gt;
        &lt;cell&gt;Sticker albedo + alpha.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;code&gt;envMap2D&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;sampler2D&lt;/cell&gt;
        &lt;cell&gt;Environment map for reflections.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;code&gt;uCameraPos&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;vec3&lt;/cell&gt;
        &lt;cell&gt;Camera position for view vector.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;code&gt;uAlphaCutoff&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;float&lt;/cell&gt;
        &lt;cell&gt;Discard pixels below this alpha.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;code&gt;uFlakesEnabled&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;float&lt;/cell&gt;
        &lt;cell&gt;Toggle foil flakes.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;code&gt;uFlakeSize&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;float&lt;/cell&gt;
        &lt;cell&gt;Size of flakes.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;code&gt;uFlakeReduction&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;float&lt;/cell&gt;
        &lt;cell&gt;Randomness threshold for flakes.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;code&gt;uFlakeThreshold&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;float&lt;/cell&gt;
        &lt;cell&gt;Brightness threshold to show flakes.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;code&gt;uFlakeBrightness&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;float&lt;/cell&gt;
        &lt;cell&gt;Base brightness of flakes.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;code&gt;uMetalness&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;float&lt;/cell&gt;
        &lt;cell&gt;PBR-like metal reflectivity control.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;code&gt;uRoughness&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;float&lt;/cell&gt;
        &lt;cell&gt;Controls reflection sharpness.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;code&gt;uEnvIntensity&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;float&lt;/cell&gt;
        &lt;cell&gt;Scales environment contribution.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;code&gt;uMetalmask&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;float&lt;/cell&gt;
        &lt;cell&gt;Mask controlling metallic regions.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;
          &lt;code&gt;uIridescence&lt;/code&gt;
        &lt;/cell&gt;
        &lt;cell&gt;float&lt;/cell&gt;
        &lt;cell&gt;Strength of angle-dependent rainbow effect.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="3"&gt;
        &lt;cell&gt;&lt;code&gt;uIriMin&lt;/code&gt;, &lt;code&gt;uIriRange&lt;/code&gt;&lt;/cell&gt;
        &lt;cell&gt;float&lt;/cell&gt;
        &lt;cell&gt;Range for simulated film thickness.&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;&lt;code&gt;uPeelAmount&lt;/code&gt;, &lt;code&gt;uPeelAngle&lt;/code&gt;&lt;/cell&gt;
        &lt;cell&gt;float&lt;/cell&gt;
        &lt;cell&gt;Peel geometry info for shading.&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;This is how this works:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Alpha cutoff to discard transparent pixels early.&lt;/item&gt;
      &lt;item&gt;Back-face shading to render the rear surface as plain white or darkened, depending on peel.&lt;/item&gt;
      &lt;item&gt;Foil flakes are computed using procedural noise. Normals are perturbed slightly to create sparkle variation. The environment map is sampled to get an iridescent tint.&lt;/item&gt;
      &lt;item&gt;Iridescence (thin-film approximation) is calculated using sine-based waves to shift hue by view angle.&lt;/item&gt;
      &lt;item&gt;Environment reflections are modulated by Fresnel.&lt;/item&gt;
      &lt;item&gt;Final shading combines diffuse base, reflections, iridescence, and flakes.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Here’s the full vertex shader code:&lt;/p&gt;
    &lt;code&gt;precision highp float;

#define PI  3.14159265

varying vec2 vUv;
varying vec3 vNormal;
varying vec3 vWorldPos;
varying float vAOIntensity;

uniform sampler2D map;      // sticker albedo + alpha
uniform sampler2D envMap2D; // LDR equirectangular environment

uniform vec3  uCameraPos;
uniform float uAlphaCutoff;
uniform float uMaxMip;
uniform float uFlakesEnabled;
uniform float uFlakeSize;
uniform float uFlakeReduction;
uniform float uFlakeThreshold;
uniform float uFlakeBrightness;
uniform float uPeelAmount;
uniform float uPeelAngle;
uniform float uMetalness;
uniform float uRoughness;
uniform float uEnvIntensity;
uniform float uMetalmask;
uniform float uIridescence;
uniform float uIriMin;
uniform float uIriRange;

float hash(vec2 p) {
    return fract(sin(dot(p, vec2(127.1, 311.7))) * 43758.5453123);
}

// Map 3D dir to 2D equirect UV
vec2 dirToEquirectUv(vec3 dir) {
    dir = normalize(dir);
    float phi = atan(dir.z, dir.x);
    float theta = acos(clamp(dir.y, -1.0, 1.0));
    return vec2((phi + 3.14159265) / (2.0 * 3.14159265), theta / 3.14159265);
}

vec3 sampleEnvRough(vec3 R, float roughness) {
    vec2 uv = dirToEquirectUv(R);

    // Map roughness to LOD level
    float lod = roughness * uMaxMip;
    vec3 color = texture2DLodEXT(envMap2D, uv, lod).rgb;

    return color;
}

// Iridescence / thin-film color
vec3 iridescenceColor(float cosTheta) {
    float thickness = uIriMin + uIriRange * (1.0 - cosTheta);
    float phase = 6.28318 * thickness * 0.01; // scaled for visuals
    vec3 rainbow = 0.5 + 0.5 * vec3(sin(phase), sin(phase + 2.094), sin(phase + 4.188));
    return mix(vec3(1.0), rainbow, uIridescence);
}

// Convert RGB to perceived luminance (Rec.709)
float luminance(vec3 color) {
    return dot(color, vec3(0.2126, 0.7152, 0.0722));
}

void main() {

    vec4 base = texture2D(map, vUv);
    if(base.a &amp;lt; uAlphaCutoff)
        discard;

    if(!gl_FrontFacing) {
        float col = 1.0;
        if(uPeelAngle &amp;gt; 0.0) {
            col = mix(1.0, 0.2, vAOIntensity);
        }
        // Render back side as white
        gl_FragColor = vec4(vec3(col), base.a);
        return;
    }

    vec3 N = normalize(vNormal);
    vec3 V = normalize(uCameraPos - vWorldPos);
    vec3 R = reflect(-V, N);

    // Ambient occlusion / peel shadow
    float peelShadow = 0.0;

    if(uPeelAngle &amp;lt; 0.0) {
        peelShadow = smoothstep(0.0, 0.3, vAOIntensity);
        base.rgb *= mix(1.0, 0.3, peelShadow);
    }

    // Flakes
    float flakeIntensity = 0.0;
    vec3 flakeEnv = vec3(0.0);

    float brightness = luminance(base.rgb);

    if(uFlakesEnabled &amp;gt; 0.5) {
        // Procedural flake mask
        float flake = hash(floor(vUv * uFlakeSize));
        float flakeMask = smoothstep(uFlakeReduction, 1.0, flake);

        // Base brightness influence
        float flakeBoost = smoothstep(uFlakeThreshold, 1.0, brightness);

        // Perturbed flake normal
        float angleOffset = (hash(vec2(flake, flake + 3.0)) - 0.5) * 0.25;
        vec3 perturbedNormal = normalize(N + vec3(angleOffset, 0.0, angleOffset));

        // Reflection for sparkle
        vec3 PR = reflect(-V, perturbedNormal);

        // Dynamic flicker factor (only brightens, never darkens)
        float flakePhase = hash(floor(vUv * uFlakeSize) + floor(PR.xy * 15.0));
        float phaseMod = mix(1.0, 1.8, flakePhase);
        
        // Core sparkle factor (glimmer preserved)
        float flakeSpec = pow(clamp(dot(perturbedNormal, V) * 0.5 + 0.5, 0.0, 1.0), 8.0);
        flakeSpec = max(flakeSpec, 0.15); // always visible

        // Environment tint (never too dark, controlled by uniform)
        float flakeRough = clamp(uRoughness * 0.4, 0.0, 1.0);
        flakeEnv = sampleEnvRough(PR, flakeRough) * mix(0.9, 1.2, brightness);
        flakeEnv = max(flakeEnv, vec3(uFlakeBrightness));

        vec3 flakeIri = iridescenceColor(dot(perturbedNormal, V));
        flakeEnv *= mix(vec3(1.0), flakeIri, 0.9);

        // Final intensity
        flakeIntensity = flakeMask * flakeBoost * flakeSpec * phaseMod * 18.0;
        flakeIntensity = clamp(flakeIntensity, 0.0, 1.0);
    }

    // Final roughness modulation
    float finalRough = clamp(mix(uRoughness, 1.0, flakeIntensity), 0.0, 1.0);

    // Environment reflection
    vec3 env = sampleEnvRough(R, finalRough) * uEnvIntensity;

    // Blend in flake environment contribution
    env = mix(env, flakeEnv, clamp(flakeIntensity, 0.0, 1.0));

    // Fresnel term
    float cosTheta = clamp(dot(N, V), 0.0, 1.0);
    float F0 = mix(0.04, 1.0, uMetalness);
    float fres = F0 + (1.0 - F0) * pow(1.0 - cosTheta, 5.0);

    // Iridescence
    float metalicMask = mix(uMetalmask, 1.0, brightness);
    vec3 iriCol = iridescenceColor(cosTheta) * metalicMask;

    // Final color
    vec3 diffuse = base.rgb * (1.0 - uMetalness);
    vec3 spec = env * fres * iriCol * (1.0 - finalRough * 0.85);
    vec3 color = diffuse + spec;

    gl_FragColor = vec4(color, base.a);
}
&lt;/code&gt;
    &lt;head rend="h1"&gt;Licensing&lt;/head&gt;
    &lt;p&gt;The code in this page is licensed under Creative Commons Attribution-NonCommercial 4.0 International (CC BY-NC 4.0). Feel free to share and adapt the code for non-commercial purposes with proper attribution. If you wish to use the code commercially, please contact me for a separate license agreement.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45095460</guid></item><item><title>The future of 32-bit support in the kernel</title><link>https://lwn.net/SubscriberLink/1035727/4837b0d3dccf1cbb/</link><description>&lt;doc fingerprint="744b191fd8863dfd"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;The future of 32-bit support in the kernel&lt;/head&gt;
    &lt;head rend="h2"&gt;[LWN subscriber-only content]&lt;/head&gt;
    &lt;quote&gt;Nobody covers the Linux kernel like LWN; be in the know with a one-month trial subscription, no credit card needed.People naturally think about desktop machines first, he continued. If you were running Linux in the 1990s, you had a 32-bit, desktop system. Unix systems, though, moved to 64-bit platforms around 30 years ago, and the Linux desktop made that move about 20 years ago. Even phones and related devices have been 64-bit for the last decade. If those systems were all that Linux had to support, 32-bit support would have long since been removed from the kernel. He summarized the situation with this slide, showing how the non-embedded architectures have transitioned to either 64-bit or nonexistence over time:&lt;/quote&gt;
    &lt;p&gt;The world is not all desktops — or servers — though; embedded Linux exists as well. About 90% of those systems are running on Arm processors. The kernel has accumulated a lot of devicetree files describing those systems over the years; only in this last year has the number of devicetrees for armv8 (64-bit) systems exceeded the number for armv7 (32-bit) systems.&lt;/p&gt;
    &lt;p&gt;For Arm processors with pre-armv7 architectures, there are only three for which it is still possible to buy hardware, but a number are still supported by the kernel community:&lt;/p&gt;
    &lt;p&gt;Many other pre-armv7 CPUs are out of production, but the kernel still has support for them. Of those, he said, there are about ten that could be removed now. It would be nice to be able to say that support for the others will be removed after a fixed period, ten years perhaps, but hardware support does not work that way. Instead, one has to think in terms of half lives; every so often, it becomes possible to remove support for half of the platforms. It all depends on whether there are users for the processors in question.&lt;/p&gt;
    &lt;p&gt;The kernel is still adding support for some 32-bit boards, he said, but at least ten new 64-bit boards gain support for each 32-bit one.&lt;/p&gt;
    &lt;p&gt;There are a number of non-Arm 32-bit architectures that still have support in the kernel; these include arc, microblaze, nios2, openrisc, rv32, sparc/leon, and xtensa. All of them are being replaced by RISC-V processors in new products. RISC-V is what you use if you don't care about Arm compatibility, he said.&lt;/p&gt;
    &lt;p&gt; Then, there is the dusty corner where nommu (processors without a memory-management unit) live; these include armv7-m, m68k, superh, and xtensa. Nobody is building anything with this kind of hardware now, and the only people who are working on them in any way are those who have to support existing systems. "&lt;quote&gt;Or to prove that it can be done&lt;/quote&gt;." &lt;/p&gt;
    &lt;p&gt;There are still some people who need to run 32-bit applications that cannot be updated; the solution he has been pushing people toward is to run a 32-bit user space on a 64-bit kernel. This is a good solution for memory-constrained systems; switching to 32-bit halves the memory usage of the system. Since, on most systems, almost all memory is used by user space, running a 64-bit kernel has a relatively small cost. Please, he asked, do not run 32-bit kernels on 64-bit processors.&lt;/p&gt;
    &lt;p&gt;There are some definite pain points that come with maintaining 32-bit support; most of the complaints, he said, come from developers in the memory-management subsystem. The biggest problem there is the need to support high memory; it is complex, and requires support throughout the kernel. High memory is needed when the kernel lacks the address space to map all of the installed physical memory; that tends to be at about 800MB on 32-bit systems. (See this article for more information about high memory).&lt;/p&gt;
    &lt;p&gt; Currently the kernel is able to support 32-bit systems with up to 16GB of installed memory. Such systems are exceedingly rare, though, and support for them will be going away soon. There are a few 4GB systems out there, including some Chromebooks. Systems with 2GB are a bit more common. Even these systems, he said, are "&lt;quote&gt;a bit silly&lt;/quote&gt;" since the memory costs more than the CPU does. There are some use cases for such systems, though. Most 32-bit systems now have less than 1GB of installed memory. The kernel, soon, will not try to support systems with more than 4GB. &lt;/p&gt;
    &lt;p&gt;There are some ideas out there for how to support the larger-memory 32-bit systems without needing the high-memory abstraction. Linus Walleij is working on entirely separating the kernel and user-space address spaces, giving each 4GB to work with; this is a variant on the "4G/4G" approach that has occasionally been tried for many years. It is difficult to make such a system work efficiently, so this effort may never succeed, Bergmann said.&lt;/p&gt;
    &lt;p&gt;Another approach is the proposed "densemem" memory model, which does some fancy remapping to close holes in the physical address space. Densemem can support up to 2GB and is needed to replace the SPARSEMEM memory model, the removal of which which will eventually be necessary in any case. This work has to be completed before high memory can be removed; Bergmann said that he would be interested in hearing from potential users of the densemem approach.&lt;/p&gt;
    &lt;p&gt;One other possibility is to drop high memory, but allow the extra physical memory to be used as a zram swap device. That would not be as efficient as accessing the memory directly, but it is relatively simple and would make it possible to drop the complexity of high memory.&lt;/p&gt;
    &lt;p&gt;Then, there is the year-2038 problem, which he spent several years working on. The kernel-side work was finished in 2020; the musl C library was updated that same year, and the GNU C Library followed the year after. Some distributors have been faster than others to incorporate this work; Debian and Ubuntu have only become year-2038-safe this year.&lt;/p&gt;
    &lt;p&gt;The year-2038 problem is not yet completely solved, though; there are a lot of packages that have unfixed bugs in this area. Anything using futex(), he said, has about a 50% chance of getting time handling right. The legacy 32-bit system calls, which are not year-2038 safe, are still enabled in the kernel, but they will go away at some point, exposing more bugs. There are languages, including Python and Rust, that have a lot of broken language bindings. Overall, he said, he does not expect any 32-bit desktop system to survive the year-2038 apocalypse.&lt;/p&gt;
    &lt;p&gt;A related problem is big-endian support, which is also 32-bit only, and also obsolete. Its removal is blocked because IBM is still supporting big-endian mainframe and PowerPC systems; as long as that support continues, big-endian support will stay in the kernel.&lt;/p&gt;
    &lt;p&gt; A number of other types of support are under discussion. There were once 32-bit systems with more than eight CPUs, but nobody is using those machines anymore, so support could be removed. Support for armv4 processors, such as the DEC StrongARM CPU, should be removed. Support for early armv6 CPUs, including the omap2 and i.mx31, "&lt;quote&gt;complicates everything&lt;/quote&gt;"; he would like to remove it, even though there are still some Nokia 770 systems in the wild. The time is coming for the removal of all non-devicetree board files. Removal of support for Cortex M CPUs, which are nommu systems, is coming in a couple of years. Developers are eyeing i486 CPU support, but that will not come out yet. Bergmann has sent patches to remove support for KVM on 32-bit CPUs, but there is still "&lt;quote&gt;one PowerPC user&lt;/quote&gt;", so that support will be kept for now. &lt;/p&gt;
    &lt;p&gt;To summarize, he said, the kernel will have to retain support for armv7 systems for at least another ten years. Boards are still being produced with these CPUs, so even ten years may be optimistic for removal. Everything else, he said, will probably fade away sooner than that. The removal of high-memory support has been penciled in for sometime around 2027, and nommu support around 2028. There will, naturally, need to be more discussion before these removals can happen.&lt;/p&gt;
    &lt;p&gt;An audience member asked how developers know whether a processor is still in use or not; Bergmann acknowledged that it can be a hard question. For x86 support, he looked at a lot of old web pages to make a list of which systems existed, then showed that each of those systems was already broken in current kernels for other reasons; the lack of complaints showed that there were no users. For others, it is necessary to dig through the Git history, see what kinds of changes are being made, and ask the developers who have worked on the code; they are the ones who will know who is using that support.&lt;/p&gt;
    &lt;p&gt; Another person asked about whether the kernel would support big-endian RISC-V systems. Bergmann answered that those systems are not supported now, and he hoped that it would stay that way. "&lt;quote&gt;With RISC-V, anybody can do anything, so they do, but it is not always a good idea&lt;/quote&gt;". The final question was about support for nommu esp32 CPUs; he answered that patches for those CPUs exist, but have not been sent upstream. Those processors are "&lt;quote&gt;a cool toy&lt;/quote&gt;", but he does not see any practical application for them. &lt;/p&gt;
    &lt;p&gt;The slides for this talk are available. The curious may also want to look at Bergmann's 2020 take on this topic.&lt;/p&gt;
    &lt;p&gt; [Thanks to the Linux Foundation, LWN's travel sponsor, for supporting my travel to this event.]&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="2"&gt;
        &lt;cell role="head"&gt;Index entries for this article&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Kernel&lt;/cell&gt;
        &lt;cell&gt;Architectures&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Conference&lt;/cell&gt;
        &lt;cell&gt;Open Source Summit Europe/2025&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt; Posted Sep 1, 2025 19:55 UTC (Mon) by jrtc27 (subscriber, #107748) [Link] (5 responses) I don't understand this point. 64-bit big-endian systems exist in the form of sparc64 and s390x (and powerpc64, though that's less of a thing given powerpc64le). Posted Sep 1, 2025 21:47 UTC (Mon) by mjw (subscriber, #16740) [Link] (4 responses) Posted Sep 1, 2025 22:27 UTC (Mon) by sam_c (subscriber, #139836) [Link] (1 responses) (Of course, BE isn't the future, I just don't think the platforms are all rotting near-universally as 32-bit ones are on average.) Posted Sep 2, 2025 8:07 UTC (Tue) by arnd (subscriber, #8866) [Link] For the moment, the problems are mainly in newly written code, where portability to both big-endian and 32-bit targets relies on someone actively testing those and submitting fixes. This is in contrast to nommu and highmem systems that no longer have the same level of commercial backing and are much further into the inevitable bitrot. [I believe the article citing "big-endian support, which is also 32-bit only" was a transcription error in an otherwise excellent report -- what I actually said is that the majority of big-endian (embedded) systems are 32-bit, while pointing to s390x/powerpc64 servers as the ones that keep them viable.] Posted Sep 2, 2025 7:05 UTC (Tue) by glaubitz (subscriber, #96452) [Link] (1 responses) Does IBM already know that s390x is supposed to be obsolete now? Posted Sep 2, 2025 12:53 UTC (Tue) by maxfragg (subscriber, #122266) [Link] Posted Sep 1, 2025 19:58 UTC (Mon) by jrtc27 (subscriber, #107748) [Link] (2 responses) That's not really true. Halving is the limit of what you could hope to achieve, if every data type in your system was a machine word or pointer. But char, short, int and long long don't change, (u)intNN_t don't change, and float/double don't change, so depending on what data you're actually operating on you can see anywhere between almost no change (e.g. some purely computational workload on large amounts of raw data) and halving the memory usage. Posted Sep 1, 2025 20:24 UTC (Mon) by arnd (subscriber, #8866) [Link] (1 responses) I had expected to see a much smaller difference between the two environments like you describe, the numbers I saw for anything I tried were always roughly 100% overhead for the 64-bit code compared to armhf. I think this is a combination of multiple effects I measured in addition to the obvious sizeof(long) difference: arm64 has longer instruction words than armv7/thumb2, small malloc() calls are aligned to larger cache lines (128 vs 64 bytes), ELF sections have a larger default alignment (64K vs 4K), etc. For many real workloads, a larger portion of RAM if of course going to be filled with the same user data (text, video, sensor input, network packages, ...) so the difference becomes smaller; for the most memory constrained systems, 100% overhead is surprisingly good estimate that holds true for both kernel data and userland. Posted Sep 2, 2025 5:59 UTC (Tue) by jrtc27 (subscriber, #107748) [Link] Posted Sep 1, 2025 20:03 UTC (Mon) by jrtc27 (subscriber, #107748) [Link] (8 responses) Unfortunately people are building those systems and others are proposing supporting them[1]. It is a real shame this is the approach that's being taken rather than having dedicated byte-swapping load/store instructions to accelerate processing big-endian data structures like network packets, which is the main use case that I'm aware of, outside of being compatible with old software written for big-endian mainframes. [1] https://lore.kernel.org/all/20250822165248.289802-1-ben.d... Posted Sep 2, 2025 7:06 UTC (Tue) by glaubitz (subscriber, #96452) [Link] (7 responses) Why is this unfortunate? I don't understand. Is Linux supposed to run only on architectures that a small group of people likes? Posted Sep 2, 2025 7:55 UTC (Tue) by jrtc27 (subscriber, #107748) [Link] (6 responses) What I have a problem with is needless fragmentation and needless complexity within one specific architecture, in this case RISC-V. Sometimes the right design choice is to say no to options. Nobody was building big-endian RISC-V hardware, nobody was seriously writing big-endian RISC-V software and everything was just fine, but now everyone is expected to support yet another variant of RISC-V that doesn't really achieve anything except create a whole lot of work. It's not some new and interesting architecture that approaches things differently that happens to be big-endian, it is just RISC-V but with big-endian because nobody was willing to say no. Posted Sep 2, 2025 8:06 UTC (Tue) by glaubitz (subscriber, #96452) [Link] (5 responses) I wasn't actually looking at the username and only realized now it was you ;-). &amp;gt; What I have a problem with is needless fragmentation and needless complexity within one specific architecture, in this case RISC-V. I think this is a developer-centric perspective rather than a user-centric perspective. If there are legitimate use cases such as building open-source networking hardware based on RISC-V, then it should be legitimate to add big-endian support if someone is willing to maintain it. Posted Sep 2, 2025 8:43 UTC (Tue) by arnd (subscriber, #8866) [Link] (4 responses) Adding big-endian Armv8 support to Linux made sense in 2013 as users were still porting software from big-endian MIPS/Octeon or PowerPC/QorIQ systems, but it ended up being a mistake for the same reason that Jessica explained about RISC-V: it's an extra ABI that requires testing resources in order to keep running, for very little practical use. Now that all the Linux networking applications moved to arm64le, the only remaining use case for arm64be is to have an easily available platform find and fix endianness bugs, typically in a VM guest running on a LE host. This means we can't easily remove from the arm64 kernel, but it would still be a mistake to add it to riscv64 Linux. Posted Sep 2, 2025 9:01 UTC (Tue) by glaubitz (subscriber, #96452) [Link] (2 responses) How do you know that? Posted Sep 2, 2025 9:14 UTC (Tue) by arnd (subscriber, #8866) [Link] (1 responses) Additionally, all newer networking SoCs come with SystemReady certification these days, but SystemReady requires booting in little-endian UEFI mode rather than the traditional Linux boot interface that supports both big-endian and little-endian kernels. Posted Sep 2, 2025 14:02 UTC (Tue) by hailfinger (subscriber, #76962) [Link] Posted Sep 2, 2025 10:19 UTC (Tue) by pabs (subscriber, #43278) [Link] Posted Sep 1, 2025 20:53 UTC (Mon) by ajb (subscriber, #9694) [Link] (7 responses) There are also going to be many products where it doesn't make much difference whether an ancient processor or an up to date riscv is used, and manufacturers are very likely to continue to choose ones where the licence fee is already paid off. Posted Sep 1, 2025 22:11 UTC (Mon) by smoogen (subscriber, #97) [Link] (5 responses) Posted Sep 2, 2025 1:44 UTC (Tue) by willy (subscriber, #9762) [Link] (3 responses) Posted Sep 2, 2025 4:56 UTC (Tue) by ajb (subscriber, #9694) [Link] (2 responses) Posted Sep 2, 2025 9:56 UTC (Tue) by hailfinger (subscriber, #76962) [Link] (1 responses) The three options for such vendors are: Posted Sep 2, 2025 13:16 UTC (Tue) by foom (subscriber, #14868) [Link] Sounds like that'd make maintenance generally easier, not harder, if your goal is only to check a box for compliance. If there are no security vulnerabilities reported which apply to your particular kernel, obviously that means it has no security issues and therefore requires no updates, so there's no work to do. Yay! Posted Sep 2, 2025 7:30 UTC (Tue) by taladar (subscriber, #68407) [Link] Posted Sep 1, 2025 22:54 UTC (Mon) by iabervon (subscriber, #722) [Link] Posted Sep 2, 2025 0:42 UTC (Tue) by wileypob (subscriber, #139361) [Link] Posted Sep 2, 2025 2:44 UTC (Tue) by wtarreau (subscriber, #51152) [Link] (2 responses) Posted Sep 2, 2025 6:06 UTC (Tue) by jrtc27 (subscriber, #107748) [Link] Posted Sep 2, 2025 14:09 UTC (Tue) by arnd (subscriber, #8866) [Link] The chart is a little hard to read, but what it shows is that the oldest mainline-supported ath79 machine is from 2007, the replacement ipq40xx platform (armv7) was added in 2016, and at least one mips32 chip (i.e. qca9531) is still commercially available and continues to be sold alongside the armv7/v8 successors. As far as I can tell, qca9531 and rtlx3xx are now the only big-endian-only 32-bit chip that is still actively marketed, as coldfire mcf5441x and ppc32 qoriq p4 are at the end of their official 15 year support life this year. The 64-bit qoriq txxxx on the other hand have extended support until 2035 according to NXP. Posted Sep 2, 2025 6:30 UTC (Tue) by andy_shev (subscriber, #75870) [Link] (3 responses) Posted Sep 2, 2025 7:33 UTC (Tue) by taladar (subscriber, #68407) [Link] (2 responses) Posted Sep 2, 2025 12:38 UTC (Tue) by andy_shev (subscriber, #75870) [Link] (1 responses) Posted Sep 2, 2025 13:18 UTC (Tue) by pizza (subscriber, #46) [Link] Uh, modern 32-bit userspace has had the ability to deal with post-2038 dates for a long time. It's just that there's a lot of old binaries out there that won't ever be recompiled. That said, even if you do recompile the old sources with modern libc and -D_TIME_BITS=64, you can still be bitten by binary representations (network protocols, file formats, etc) that directly embed a 32-bit time_t. Posted Sep 2, 2025 7:04 UTC (Tue) by glaubitz (subscriber, #96452) [Link] (2 responses) Neither M68k nor SuperH are nommu only. That statement is simply incorrect. And people are actually building new m68k-based hardware with the help of FPGAs. The retro community around the Amiga, Atari, Macintosh 68k as well as SuperH-based video game consoles such as the Sega Saturn and especially the Sega Dreamcast. Not sure why this article is so much focused on commercial applications. And I don't think big-endian targets are going to be obsolete any time soon unless someone convinces IBM to drop s390x. Posted Sep 2, 2025 10:52 UTC (Tue) by DrMcCoy (subscriber, #86699) [Link] (1 responses) They're not running Linux on these systems, though, are they? Posted Sep 2, 2025 12:40 UTC (Tue) by andy_shev (subscriber, #75870) [Link] Posted Sep 2, 2025 14:36 UTC (Tue) by milek7 (subscriber, #141321) [Link] This reminds me of Linus complaints about PAE (from 2007!): https://www.realworldtech.com/forum/?threadid=76912&amp;amp;c... Posted Sep 2, 2025 14:45 UTC (Tue) by urjaman (subscriber, #130506) [Link] (1 responses) (I'm not expecting actual answers, just expressing frustrating at the whole premise...) Posted Sep 2, 2025 14:53 UTC (Tue) by corbet (editor, #1) [Link] Sorry, but sometimes I get frustrated too... &lt;head&gt;64-bit big-endian&lt;/head&gt;&lt;head&gt;64-bit big-endian&lt;/head&gt;&lt;lb/&gt; The slides don't say that big-endian is 32-bit only, but "Equally obsolete as 32-bit".&lt;head&gt;64-bit big-endian&lt;/head&gt;&lt;head&gt;64-bit big-endian&lt;/head&gt;&lt;head&gt;64-bit big-endian&lt;/head&gt;&lt;head&gt;64-bit big-endian&lt;/head&gt;&lt;head&gt;Not all types are words / pointers&lt;/head&gt;&lt;head&gt;Not all types are words / pointers&lt;/head&gt;&lt;head&gt;Not all types are words / pointers&lt;/head&gt;&lt;head&gt;Big-endian RISC-V&lt;/head&gt;&lt;head&gt;Big-endian RISC-V&lt;/head&gt;&lt;head&gt;Big-endian RISC-V&lt;/head&gt;&lt;head&gt;Big-endian RISC-V&lt;/head&gt;&lt;head&gt;Big-endian RISC-V&lt;/head&gt;&lt;head&gt;Big-endian RISC-V&lt;/head&gt;&lt;head&gt;Big-endian RISC-V&lt;/head&gt;&lt;head&gt;Big-endian RISC-V&lt;/head&gt;&lt;head&gt;Big-endian RISC-V&lt;/head&gt;&lt;head&gt;longevity&lt;/head&gt;&lt;head&gt;longevity&lt;/head&gt;&lt;head&gt;longevity&lt;/head&gt;&lt;head&gt;longevity&lt;/head&gt;&lt;head&gt;longevity&lt;/head&gt;&lt;lb/&gt; 1. maintain an older kernel indefinitely (good luck with that, especially now that older upstream-unsupported kernels won't get CVEs allocated for security issues)&lt;lb/&gt; 2. work hard on keeping the affected chipses supported by the mainline kernel&lt;lb/&gt; 3. scrap their designs and start anew from another incopmatible design (not worth the effort)&lt;head&gt;longevity&lt;/head&gt;&lt;head&gt;longevity&lt;/head&gt;&lt;head&gt;longevity&lt;/head&gt;&lt;head&gt;Embedded systems&lt;/head&gt;&lt;head&gt;MIPS ?&lt;/head&gt;&lt;head&gt;MIPS ?&lt;/head&gt;&lt;head/&gt; The ath79 family is on the second chart linked in the article, along with 7 other mips32 targets that are still supported (I left off a couple of mips and armv5 targets that only support a single reference board but no actual products in mainline kernels, though I did miss the rtl83xx/93xx platform). &lt;head&gt;MIPS ?&lt;/head&gt;&lt;head&gt;Industrial computers&lt;/head&gt;&lt;head&gt;Industrial computers&lt;/head&gt;&lt;head&gt;Industrial computers&lt;/head&gt;&lt;head&gt;Industrial computers&lt;/head&gt;&lt;head&gt;M68k and SuperH are MMU ports!&lt;/head&gt;&lt;head&gt;M68k and SuperH are MMU ports!&lt;/head&gt;&lt;head&gt;M68k and SuperH are MMU ports!&lt;/head&gt;&lt;head&gt;PAE&lt;/head&gt;&lt;head&gt;Why "how soon can we remove X" instead of "how long can we have X"?&lt;/head&gt;&lt;head/&gt; What is the source of your frustration? You have an old system that is nicely supported, and will continue to be supported — a gift you are getting for free from the people who do that work. Rather than condemn them for trying to figure out when they can stop doing work for platforms that are no longer in use, maybe you could try thanking them? &lt;head&gt;Why "how soon can we remove X" instead of "how long can we have X"?&lt;/head&gt;&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45095475</guid></item><item><title>Amazon has mostly sat out the AI talent war</title><link>https://www.businessinsider.com/amazon-ai-talent-wars-internal-document-2025-8</link><description>&lt;doc fingerprint="cf8db5f163666cc"&gt;
  &lt;main&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Amazon struggles to attract AI talent due to its pay model and perception of falling behind others.&lt;/item&gt;
      &lt;item&gt;Amazon's compensation model has long caused complaints from employees.&lt;/item&gt;
      &lt;item&gt;Competitors like Meta and OpenAI offer more attractive packages for AI engineers.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;As the AI talent war sweeps across Silicon Valley, Amazon has largely sat on the sidelines. A confidential internal document, and accounts from people familiar with the matter, reveal why.&lt;/p&gt;
    &lt;p&gt;The company has flagged its unique pay structure, lagging AI reputation, and rigid return-to-office rules as major hurdles. Now, the tech giant is being pushed to rethink its recruiting strategy as it scrambles to compete for top talent.&lt;/p&gt;
    &lt;p&gt;The document, from late last year, was written by the HR team covering Amazon's non-retail businesses, including Amazon Web Services, advertising, devices, entertainment, and the newly formed artificial general intelligence team.&lt;/p&gt;
    &lt;p&gt;"GenAI hiring faces challenges like location, compensation, and Amazon's perceived lag in the space," the document noted. "Competitors often provide more comprehensive and aggressive packages." Business Insider obtained a copy of the document.&lt;/p&gt;
    &lt;p&gt;Amazon's absence from recent splashy AI hires underscores those concerns. Meta has pulled in high-profile talent from ScaleAI, Apple, and OpenAI. Google and OpenAI continue to be top destinations for AI experts, while Microsoft has even drafted a wish list of Meta AI employees it hopes to recruit.&lt;/p&gt;
    &lt;p&gt;Amazon's spokesperson initially told BI that the company continues to "adapt our approach to remain highly competitive, maintaining flexibility in both our compensation packages and work arrangements to attract and retain the best AI talent in this dynamic market."&lt;/p&gt;
    &lt;p&gt;Hours later, the spokesperson updated the statement, saying the premise of the story was "wrong," without providing any specifics.&lt;/p&gt;
    &lt;p&gt;"We continue to attract and retain some of the best people in the world and they're building and deploying GenAI applications at a rapid clip. Our compensation is competitive, but we also want missionaries who are passionate about inventing things that will make a meaningful difference for customers — for those kinds of people, there's no better place in the world to build."&lt;/p&gt;
    &lt;head rend="h2"&gt;Door desks and 'egalitarian' pay&lt;/head&gt;
    &lt;p&gt;Amazon is famously frugal. One of its origin stories recounts how the company bought cheap doors from Home Depot and hacked them together as office desks. This became guiding symbol of Amazon's cautious spending, with founder Jeff Bezos still using door desks today.&lt;/p&gt;
    &lt;p&gt;This penny-pinching culture has smashed straight into an AI hiring battle that's being fueled by unprecedented spending, putting Amazon in a tricky situation.&lt;/p&gt;
    &lt;p&gt;The internal document described compensation as one of the "hotly debated topics" among Amazon recruiters, citing the company's strict use of fixed salary bands for each role. Amazon's "egalitarian philosophy" on pay leaves its offers "below par" compared with top rivals, it added.&lt;/p&gt;
    &lt;p&gt;"The lack of salary range increases for several key job families over the past few years does not position Amazon as an employer of choice for top tech talent," the document warned.&lt;/p&gt;
    &lt;p&gt;For Amazon, missing out on top AI talent is a potential risk. The pool of top-tier AI researchers and engineers is limited, and without experts with deep knowhow, it's hard to compete at the frontier of the field. Indeed, Amazon has yet to find a blockbuster AI product like OpenAI's ChatGPT or Anthropic's Claude, although its Bedrock AI cloud service has made progress.&lt;/p&gt;
    &lt;p&gt;Amazon's pay structure has been a long-standing source of tension.&lt;/p&gt;
    &lt;p&gt;Several people who spoke to Business Insider cited the 2020 departure of Amazon robotics VP Brad Porter as evidence of the company's frugal approach hampering talent recruitment and retention. Porter left in part after Amazon refused to raise his pay band.&lt;/p&gt;
    &lt;p&gt;Amazon's stock vesting schedule is also heavily backloaded, a structure that can be less attractive to new hires. The policy extends even to top executives, who generally receive no cash bonuses.&lt;/p&gt;
    &lt;head rend="h2"&gt;'Voting with their feet'&lt;/head&gt;
    &lt;p&gt;In addition to highlighting Amazon's "perceived lag in the AI space," the internal document said generative AI has further intensified the competition for specialized talent, particularly individuals with expertise in large language models.&lt;/p&gt;
    &lt;p&gt;An August report from venture capital firm SignalFire shows Amazon is on the lower end of engineering retention, far below Meta, OpenAI, and Anthropic. Jarod Reyes, SignalFire's head of developer community, told Business Insider that Amazon rivals are making bigger strides in AI, across open models, foundational research, and developer tooling.&lt;/p&gt;
    &lt;p&gt;"Amazon hasn't clearly positioned itself as a leader in the generative AI wave," Reyes said. "Engineers are paying attention and they're voting with their feet."&lt;/p&gt;
    &lt;p&gt;Some investors share that view. On Amazon's earnings call last month, Morgan Stanley analyst Brian Nowak pressed CEO Andy Jassy on Wall Street's "narrative right now that AWS is falling behind" in AI and fears of losing market share to rivals. Jassy's response fell flat, sending Amazon's stock lower during the call.&lt;/p&gt;
    &lt;p&gt;Amazon intends to tackle these concerns. According to the document, the company will refine its "compensation and location strategy" and host more events designed to highlight its generative AI capabilities. It also intends to set up dedicated recruiting teams for generative AI within business units like AWS to boost efficiency.&lt;/p&gt;
    &lt;head rend="h2"&gt;'Hubs' constrain talent&lt;/head&gt;
    &lt;p&gt;Another point of contention is Amazon's aggressive return-to-office mandate, which has already caused logistical issues.&lt;/p&gt;
    &lt;p&gt;The company's new "hub" policy — which requires employees to relocate to a central office or risk termination — has further limited its access to "high-demand talent like those with GenAI skills," according to the internal document.&lt;/p&gt;
    &lt;p&gt;"Hubs constrain market availability," it stated.&lt;/p&gt;
    &lt;p&gt;Amazon is exploring ways to allow for more "location-flexible" roles, the document added.&lt;/p&gt;
    &lt;p&gt;Amazon's spokesperson told BI that the company is "always looking for ways to optimize our recruiting strategies and looking at alternate talent rich locations."&lt;/p&gt;
    &lt;p&gt;Amazon hasn't been entirely on the sidelines. Last year, it brought on Adept CEO David Luan as part of a licensing deal with the AI startup. Luan now heads Amazon's AI agents lab. But the company has also seen departures, including senior AI leaders like chip designer Rami Sinno and VP Vasi Philomin, who worked on Bedrock.&lt;/p&gt;
    &lt;p&gt;One Amazon recruiter told Business Insider that a growing number of job candidates started declining offers last year because of the company's RTO policy. Even if a competitor pays less, people are open to taking the job if they can stay remote, this person said.&lt;/p&gt;
    &lt;p&gt;"We are losing out on talent," this person added.&lt;/p&gt;
    &lt;p&gt;Indeed, Bloomberg reported recently that Oracle has hired away more than 600 Amazon employees in the past two years because Amazon's strict RTO policy has made poaching easier.&lt;/p&gt;
    &lt;head rend="h2"&gt;Staying the course&lt;/head&gt;
    &lt;p&gt;The internal Amazon document dates to late last year, leaving open the possibility that the company has since adjusted its compensation approach to make exceptions for top AI talent.&lt;/p&gt;
    &lt;p&gt;Still, multiple people familiar with the situation told Business Insider there haven't been any formal updates to internal pay guidelines. One current Amazon manager said it remains almost impossible for the company to enact sweeping changes, given its long track record of sticking to the existing system. The people who spoke with Business Insider asked not to be identified discussing sensitive matters.&lt;/p&gt;
    &lt;p&gt;"Based on how we run our business and what we have achieved, there are more risks than potential benefits from changing an approach that has been so successful for our shareholders over the past several decades," Amazon wrote this year about executive compensation in its annual proxy statement.&lt;/p&gt;
    &lt;p&gt;Of course, the AI talent war may end up being an expensive and misguided strategy, stoked by hype and investor over-exuberance.&lt;/p&gt;
    &lt;p&gt;Some of the high-profile recruits Meta recently lured have already departed.&lt;/p&gt;
    &lt;p&gt;Have a tip? Contact this reporter via email at ekim@businessinsider.com or Signal, Telegram, or WhatsApp at 650-942-3061. Use a personal email address, a nonwork WiFi network, and a nonwork device; here's our guide to sharing information securely.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45095603</guid></item><item><title>Patrick Winston: How to Speak (2018) [video]</title><link>https://www.youtube.com/watch?v=Unzc731iCUY</link><description>&lt;doc fingerprint="7055905545553646"&gt;
  &lt;main&gt;
    &lt;p&gt;About Press Copyright Contact us Creators Advertise Developers Terms Privacy Policy &amp;amp; Safety How YouTube works Test new features NFL Sunday Ticket © 2025 Google LLC&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45095849</guid></item><item><title>Raspberry Pi 5 support (OpenBSD)</title><link>https://marc.info/?l=openbsd-cvs&amp;m=175675287220070&amp;w=2</link><description>&lt;doc fingerprint="e73f12d23de611fc"&gt;
  &lt;main&gt;&lt;quote&gt;[prev in list] [next in list] [prev in thread] [next in thread] List: openbsd-cvs Subject: CVS: cvs.openbsd.org: src From: Marcus Glocker &amp;lt;mglocker () cvs ! openbsd ! org&amp;gt; Date: 2025-09-01 18:56:04 Message-ID: dd1203a530237b22 () cvs ! openbsd ! org [Download RAW message or body] CVSROOT: /cvs Module name: src Changes by: mglocker@cvs.openbsd.org 2025/09/01 12:56:04 Modified files: distrib/arm64/iso: Makefile distrib/arm64/ramdisk: Makefile install.md list Log message: Add Raspberry Pi 5 Model B support for RAMDISK. Known issues: * Booting from PCIe storage HATs doesn't work because of missing U-Boot support. * WiFi on the Raspberry Pi 5 Model B "d0" boards doesn't work. * The active cooler (fan) doesn't work because of missing pwm/clock drivers (some work is in-progress). ok kettenis@, deraadt@ [prev in list] [next in list] [prev in thread] [next in thread] &lt;/quote&gt;&lt;lb/&gt;Configure |
About |
News |
Add a list |
Sponsored by KoreLogic&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45096585</guid></item><item><title>Kazeta: An operating system that brings the console gaming experience of 90s</title><link>https://kazeta.org/</link><description>&lt;doc fingerprint="859b1d2912326fbb"&gt;
  &lt;main&gt;&lt;p&gt;An operating system that brings the console gaming experience of the '90s to modern PC hardware and games: insert cart, power on, play.&lt;/p&gt;Explore Kazeta&lt;p&gt;An operating system that brings the console gaming experience of the '90s to modern PC hardware and games: insert cart, power on, play.&lt;/p&gt;Explore Kazeta&lt;p&gt;Insert a game cart, press power, and you're gaming instantly. Relive that nostalgic golden age where nothing stood between you and the games you love.&lt;/p&gt;&lt;p&gt;Transform your digital library into something tangible and permanent. Create physical game carts from your DRM-free titles and build a collection that you can play forever.&lt;/p&gt;&lt;p&gt;Say goodbye to the complexities of modern gaming and just play.&lt;/p&gt;&lt;p&gt;Save data is captured automatically, so you never lose progress. When no cart is inserted, boot into a retro console inspired BIOS menu to manage your saves.&lt;/p&gt;&lt;p&gt;Play almost any DRM-free game from platforms past or present.&lt;/p&gt;&lt;p&gt;Bring back the family-friendly simplicity of gaming's distant past. Perfect for kids, parents, and grandparents who just want to play.&lt;/p&gt;&lt;p&gt;Download Kazeta today and rediscover the joy of pure gaming.&lt;/p&gt;Download Now&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45098269</guid></item><item><title>FreeDroidWarn</title><link>https://github.com/woheller69/FreeDroidWarn</link><description>&lt;doc fingerprint="27a090d3f3147310"&gt;
  &lt;main&gt;
    &lt;p&gt;This library shows an alert dialog with a deprecation warning informing that Google will require developer verification for Android apps outside the Play Store from 2026/2027 which the developer is not going to provide.&lt;/p&gt;
    &lt;code&gt;Google has announced that, starting in 2026/2027, all apps on certified Android devices
will require the developer to submit personal identity details directly to Google.
Since the developers of this app do not agree to this requirement, this app will no longer 
work on certified Android devices after that time.
&lt;/code&gt;
    &lt;p&gt;https://www.androidauthority.com/android-developer-verification-requirements-3590911/&lt;/p&gt;
    &lt;p&gt;https://developer.android.com/developer-verification&lt;/p&gt;
    &lt;p&gt;Add the JitPack repository to your root build.gradle at the end of repositories:&lt;/p&gt;
    &lt;code&gt;allprojects {
  repositories {
    ...
    maven { url 'https://jitpack.io' }
  }
}&lt;/code&gt;
    &lt;p&gt;Add the library dependency to your build.gradle file.&lt;/p&gt;
    &lt;code&gt;dependencies {
    implementation 'com.github.woheller69:FreeDroidWarn:V1.3'
}&lt;/code&gt;
    &lt;p&gt;In onCreate of your app just add:&lt;/p&gt;
    &lt;code&gt;     FreeDroidWarn.showWarningOnUpgrade(this, BuildConfig.VERSION_CODE);

&lt;/code&gt;
    &lt;p&gt;This library is licensed under the Apache V2.0 license.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45098722</guid></item><item><title>WinBoat: Run Windows apps on Linux with seamless integration</title><link>https://github.com/TibixDev/winboat</link><description>&lt;doc fingerprint="39bff56e5f27b5dc"&gt;
  &lt;main&gt;
    &lt;p&gt;WinBoat is currently in beta, so expect to occasionally run into hiccups and bugs. You should be comfortable with some level of troubleshooting if you decide to try it, however we encourage you to give it a shot anyway.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;🎨 Elegant Interface: Sleek and intuitive interface that seamlessly integrates Windows into your Linux desktop environment, making it feel like a native experience&lt;/item&gt;
      &lt;item&gt;📦 Automated Installs: Simple installation process through our interface - pick your preferences &amp;amp; specs and let us handle the rest&lt;/item&gt;
      &lt;item&gt;🚀 Run Any App: If it runs on Windows, it can run on WinBoat. Enjoy the full range of Windows applications as native OS-level windows in your Linux environment&lt;/item&gt;
      &lt;item&gt;🖥️ Full Windows Desktop: Access the complete Windows desktop experience when you need it, or run individual apps seamlessly integrated into your Linux workflow&lt;/item&gt;
      &lt;item&gt;📁 Filesystem Integration: Your home directory is mounted in Windows, allowing easy file sharing between the two systems without any hassle&lt;/item&gt;
      &lt;item&gt;✨ And many more: Smartcard passthrough, resource monitoring, and more features being added regularly&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Before running WinBoat, ensure your system meets the following requirements:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;RAM: At least 4 GB of RAM&lt;/item&gt;
      &lt;item&gt;CPU: At least 2 CPU threads&lt;/item&gt;
      &lt;item&gt;Storage: At least 32 GB free space in &lt;code&gt;/var&lt;/code&gt;&lt;/item&gt;
      &lt;item&gt;Virtualization: KVM enabled in BIOS/UEFI&lt;/item&gt;
      &lt;item&gt;Docker: Required for containerization&lt;/item&gt;
      &lt;item&gt;Docker Compose v2: Required for compatibility with docker-compose.yml files&lt;/item&gt;
      &lt;item&gt;Docker User Group: Add your user to the &lt;code&gt;docker&lt;/code&gt;group&lt;/item&gt;
      &lt;item&gt;FreeRDP: Required for remote desktop connection (Please make sure you have Version 3.x.x with sound support included)&lt;/item&gt;
      &lt;item&gt;Kernel Modules: &lt;code&gt;iptables&lt;/code&gt;and&lt;code&gt;iptable_nat&lt;/code&gt;modules must be loaded&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;You can download the latest Linux builds under the Releases tab. We currently offer two variants:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;AppImage: A popular &amp;amp; portable app format which should run fine on most distributions&lt;/item&gt;
      &lt;item&gt;Unpacked: The raw unpacked files, simply run the executable (&lt;code&gt;linux-unpacked/winboat&lt;/code&gt;)&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Podman is unsupported for now&lt;/item&gt;
      &lt;item&gt;Docker Desktop is unsupported for now&lt;/item&gt;
      &lt;item&gt;Distros that emulate Docker through a Podman socket are unsupported&lt;/item&gt;
      &lt;item&gt;Any rootless containerization solution is currently unsupported&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;For building you need to have NodeJS and Go installed on your system&lt;/item&gt;
      &lt;item&gt;Clone the repo (&lt;code&gt;git clone https://github.com/TibixDev/WinBoat&lt;/code&gt;)&lt;/item&gt;
      &lt;item&gt;Install the dependencies (&lt;code&gt;npm i&lt;/code&gt;)&lt;/item&gt;
      &lt;item&gt;Build the app and the guest server using &lt;code&gt;npm run build:linux-gs&lt;/code&gt;&lt;/item&gt;
      &lt;item&gt;You can now find the built app under &lt;code&gt;dist&lt;/code&gt;with an AppImage and an Unpacked variant&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Make sure you meet the prerequisites&lt;/item&gt;
      &lt;item&gt;Additionally, for development you need to have NodeJS and Go installed on your system&lt;/item&gt;
      &lt;item&gt;Clone the repo (&lt;code&gt;git clone https://github.com/TibixDev/WinBoat&lt;/code&gt;)&lt;/item&gt;
      &lt;item&gt;Install the dependencies (&lt;code&gt;npm i&lt;/code&gt;)&lt;/item&gt;
      &lt;item&gt;Build the guest server (&lt;code&gt;npm run build-guest-server&lt;/code&gt;)&lt;/item&gt;
      &lt;item&gt;Run the app (&lt;code&gt;npm run dev&lt;/code&gt;)&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Contributions are welcome! Whether it's bug fixes, feature improvements, or documentation updates, we appreciate your help making WinBoat better.&lt;/p&gt;
    &lt;p&gt;Please note: We maintain a focus on technical contributions only. Pull requests containing political/sexual content, or other sensitive/controversial topics will not be accepted. Let's keep things focused on making great software! 🚀&lt;/p&gt;
    &lt;p&gt;Feel free to:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Report bugs and issues&lt;/item&gt;
      &lt;item&gt;Submit feature requests&lt;/item&gt;
      &lt;item&gt;Contribute code improvements&lt;/item&gt;
      &lt;item&gt;Help with documentation&lt;/item&gt;
      &lt;item&gt;Share feedback and suggestions&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Check out our issues page to get started, or feel free to open a new issue if you've found something that needs attention.&lt;/p&gt;
    &lt;p&gt;WinBoat is licensed under the MIT license&lt;/p&gt;
    &lt;p&gt;These past few years some cool projects have surfaced with similar concepts, some of which we've also taken inspirations from.&lt;lb/&gt; They're awesome and you should check them out:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;WinApps&lt;/item&gt;
      &lt;item&gt;Cassowary&lt;/item&gt;
      &lt;item&gt;dockur/windows (🌟 Also used in WinBoat)&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;🌐 Website: winboat.app&lt;/item&gt;
      &lt;item&gt;🐦 Twitter/X: @winboat_app&lt;/item&gt;
      &lt;item&gt;🦋 Bluesky: winboat.app&lt;/item&gt;
      &lt;item&gt;🗨️ Discord: Join our community&lt;/item&gt;
      &lt;item&gt;📧 Email: staff@winboat.app&lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45099124</guid></item><item><title>Keyboards from my collection (2023)</title><link>https://aresluna.org/50-keyboards-from-my-collection/</link><description>&lt;doc fingerprint="7f544c11e59d1554"&gt;
  &lt;main&gt;
    &lt;p&gt;Marcin Wichary&lt;/p&gt;
    &lt;p&gt;12 February 2023 / 50 posts / 60 photos&lt;/p&gt;
    &lt;head rend="h1"&gt;50 keyboards from my collection&lt;/head&gt;
    &lt;p&gt;This is an archive of a Mastodon thread from 2023. You can still read the thread (and all the replies) at its original location, however the photo quality is much better on this page.&lt;/p&gt;
    &lt;p&gt;To celebrate the Kickstarter for Shift Happens going well, I thought I would show you 50 keyboards from my collection of really strange/esoteric/meaningful keyboards that I gathered over the years. (It might be the worldâs strangest keyboard collection!)&lt;/p&gt;
    &lt;p&gt;This is technically a bit of a spoiler for the book, but a) a lot of them are not in the book, and b) the book comes out in half a year, and weâll all forget by then! &lt;lb/&gt;Letâs start!&lt;lb/&gt;Shift Happens on Kickstarter&lt;/p&gt;
    &lt;p&gt;Letâs start!&lt;/p&gt;
    &lt;p&gt;Shift Happens on Kickstarter&lt;/p&gt;
    &lt;p&gt;1.&lt;lb/&gt;I have a SafeType, thanks to a friend who noticed one about to be thrown away. This is among the most notable and interesting âergonomicâ keyboards, complete with mirrors that help you orient yourself when youâre starting out.&lt;/p&gt;
    &lt;p&gt;I have a SafeType, thanks to a friend who noticed one about to be thrown away. This is among the most notable and interesting âergonomicâ keyboards, complete with mirrors that help you orient yourself when youâre starting out.&lt;/p&gt;
    &lt;p&gt;2.&lt;lb/&gt;The Comfort System keyboard is another âergonomicâ device that is honestly pretty frightening to look at (explaining the challenge of making keyboards like these). You can reposition and reorient each of the three parts independently.&lt;/p&gt;
    &lt;p&gt;The Comfort System keyboard is another âergonomicâ device that is honestly pretty frightening to look at (explaining the challenge of making keyboards like these). You can reposition and reorient each of the three parts independently.&lt;/p&gt;
    &lt;p&gt;3.&lt;lb/&gt;I love these DataDesk Little Fingers keyboards with smaller keys because you can see exactly when iMac was introduced and how the company tried to âredesignâÂ the keyboard to fit the new style.&lt;/p&gt;
    &lt;p&gt;I love these DataDesk Little Fingers keyboards with smaller keys because you can see exactly when iMac was introduced and how the company tried to âredesignâÂ the keyboard to fit the new style.&lt;/p&gt;
    &lt;p&gt;4.&lt;lb/&gt;This is another Mac âalternate universeâ keyboard - an Adesso ergonomic keyboard that feels like âwhat if Apple Adjustable still existed when iMac came aroundâ?&lt;/p&gt;
    &lt;p&gt;This is another Mac âalternate universeâ keyboard - an Adesso ergonomic keyboard that feels like âwhat if Apple Adjustable still existed when iMac came aroundâ?&lt;/p&gt;
    &lt;p&gt;5.&lt;lb/&gt;This strange âmedicalâ keyboard is more mechanical than youâd expect! I wrote more about it here: A tale of three skeuomorphs. Cleaning required when flashing!&lt;/p&gt;
    &lt;p&gt;This strange âmedicalâ keyboard is more mechanical than youâd expect! I wrote more about it here: A tale of three skeuomorphs. Cleaning required when flashing!&lt;/p&gt;
    &lt;p&gt;6.&lt;lb/&gt;Once youâre done with your shift (no pun intended) at the hospital, how about some Pizza? This is i-Opener, one of the many shortlived internet appliances, this one with a gimmick that keeps on gimmicking.&lt;/p&gt;
    &lt;p&gt;Once youâre done with your shift (no pun intended) at the hospital, how about some Pizza? This is i-Opener, one of the many shortlived internet appliances, this one with a gimmick that keeps on gimmicking.&lt;/p&gt;
    &lt;p&gt;7.&lt;lb/&gt;Speaking of spacebar-adjacent gimmicks, I am mildly obsessed with how beautiful is this first NeXT keyboard from 1987, with a bunch of cool subtle things including a Command *bar* underneath the spacebar. As a matter of fact, I just finished writing an essay on it today!&lt;/p&gt;
    &lt;p&gt;Speaking of spacebar-adjacent gimmicks, I am mildly obsessed with how beautiful is this first NeXT keyboard from 1987, with a bunch of cool subtle things including a Command *bar* underneath the spacebar. As a matter of fact, I just finished writing an essay on it today!&lt;/p&gt;
    &lt;p&gt;8.&lt;lb/&gt;This is Olivetti Praxis 48: perhaps one of the most beautiful among the most beautiful typewriters, and strangely similar in palette to the above NeXT keyboard. You could turn on this (electric) typewriter just by pressing any key. Thatâs pretty wild.&lt;/p&gt;
    &lt;p&gt;This is Olivetti Praxis 48: perhaps one of the most beautiful among the most beautiful typewriters, and strangely similar in palette to the above NeXT keyboard. You could turn on this (electric) typewriter just by pressing any key. Thatâs pretty wild.&lt;/p&gt;
    &lt;p&gt;9.&lt;lb/&gt;This Olympia Reporter typewriter is not beautiful, but it has a lot of POWER THIS and POWER THAT keys that celebrate its marriage with electricity? Why is X and some other keys red? Those are the ones that auto repeat!â¨&lt;/p&gt;
    &lt;p&gt;This Olympia Reporter typewriter is not beautiful, but it has a lot of POWER THIS and POWER THAT keys that celebrate its marriage with electricity? Why is X and some other keys red? Those are the ones that auto repeat!â¨&lt;/p&gt;
    &lt;p&gt;10.&lt;lb/&gt;This is another typewriter, so proud of a functioning (erasing!) Backspace that it gives this a treatment I have never seen before or after.&lt;/p&gt;
    &lt;p&gt;This is another typewriter, so proud of a functioning (erasing!) Backspace that it gives this a treatment I have never seen before or after.&lt;/p&gt;
    &lt;p&gt;11.&lt;lb/&gt;This Turkish typewriter (another Olympia!) means so much to me â the small success of this article from 2015 was probably what was needed for me to start thinking about the book: What I learned about languages just by looking at a Turkish typewriter&lt;/p&gt;
    &lt;p&gt;This Turkish typewriter (another Olympia!) means so much to me â the small success of this article from 2015 was probably what was needed for me to start thinking about the book: What I learned about languages just by looking at a Turkish typewriter&lt;/p&gt;
    &lt;p&gt;12.&lt;lb/&gt;This keypadâ¦ is so bad.&lt;/p&gt;
    &lt;p&gt;This keypadâ¦ is so bad.&lt;/p&gt;
    &lt;p&gt;13.&lt;lb/&gt;This was meant to be mounted atop Commodore 64 (which I donât have), an interesting reversal from the early typewriters being nothing more than repurposed music keyboards.&lt;/p&gt;
    &lt;p&gt;This was meant to be mounted atop Commodore 64 (which I donât have), an interesting reversal from the early typewriters being nothing more than repurposed music keyboards.&lt;/p&gt;
    &lt;p&gt;14.&lt;lb/&gt;These two are taking this idea even further â mount these overlays on regular keyboards to turn them into new kinds of interfaces.&lt;/p&gt;
    &lt;p&gt;These two are taking this idea even further â mount these overlays on regular keyboards to turn them into new kinds of interfaces.&lt;/p&gt;
    &lt;p&gt;15.&lt;lb/&gt;Thereâs also professional gaming. It was cheaper for me to buy QSENN keyboards and replicate what professional StarCraft gamers were doing in the 1990s, than to find a good existing photo of one of these keyboards.&lt;/p&gt;
    &lt;p&gt;Thereâs also professional gaming. It was cheaper for me to buy QSENN keyboards and replicate what professional StarCraft gamers were doing in the 1990s, than to find a good existing photo of one of these keyboards.&lt;/p&gt;
    &lt;p&gt;16.&lt;lb/&gt;And speaking of gaming â weâre all used to the thumb style of typing from the first photo that it was fun to discover the short moment where the gaming keyboards looked like the one in the second photo.&lt;/p&gt;
    &lt;p&gt;And speaking of gaming â weâre all used to the thumb style of typing from the first photo that it was fun to discover the short moment where the gaming keyboards looked like the one in the second photo.&lt;/p&gt;
    &lt;p&gt;17.&lt;lb/&gt;And a bit earlier, some game consoles tried to reinvent themselves as home computers with keyboard accessories. This is among the strangest of them: a âkeyboardâ to add BASIC to the Atari 2600.&lt;/p&gt;
    &lt;p&gt;And a bit earlier, some game consoles tried to reinvent themselves as home computers with keyboard accessories. This is among the strangest of them: a âkeyboardâ to add BASIC to the Atari 2600.&lt;/p&gt;
    &lt;p&gt;18.&lt;lb/&gt;I commissioned this âjoystickâ from @benjedwards and I am so happy with how it turned out. Itâs technically a joystick without a stick, but software turned it into a one-key keyboard. Itâs F11, currently mapped to muting/unmuting in Zoom. Itâs *incredibly* rewarding to press.&lt;/p&gt;
    &lt;p&gt;I commissioned this âjoystickâ from @benjedwards and I am so happy with how it turned out. Itâs technically a joystick without a stick, but software turned it into a one-key keyboard. Itâs F11, currently mapped to muting/unmuting in Zoom. Itâs *incredibly* rewarding to press.&lt;/p&gt;
    &lt;p&gt;19.&lt;lb/&gt;Speaking of strange keyboards, this is my âspace cadetâ keyboard â a mini keyboard that outputs only spaces, and instead of legends, each key *feels* different. Wrote about it more here: Stop me if youâve seen this one before&lt;/p&gt;
    &lt;p&gt;Speaking of strange keyboards, this is my âspace cadetâ keyboard â a mini keyboard that outputs only spaces, and instead of legends, each key *feels* different. Wrote about it more here: Stop me if youâve seen this one before&lt;/p&gt;
    &lt;p&gt;20.&lt;lb/&gt;And here is a keyboard I built and hid in my shoes, made for one very specific reason. Are you interested what it is? Check out the whole story here: To walk among keyboard magicians&lt;/p&gt;
    &lt;p&gt;And here is a keyboard I built and hid in my shoes, made for one very specific reason. Are you interested what it is? Check out the whole story here: To walk among keyboard magicians&lt;/p&gt;
    &lt;p&gt;21.&lt;lb/&gt;This is one of the most rare keyboards I have âÂ the strange abKey Evolution imported through a friend from Singapore â a keyboard that tried to reinvent perhaps one thing too many. Wrote more about it here: The worst keyboard ever made&lt;/p&gt;
    &lt;p&gt;This is one of the most rare keyboards I have âÂ the strange abKey Evolution imported through a friend from Singapore â a keyboard that tried to reinvent perhaps one thing too many. Wrote more about it here: The worst keyboard ever made&lt;/p&gt;
    &lt;p&gt;22.â¨&lt;lb/&gt;And this one from Commodore is not really that unique, except it has this fun property âÂ it reverses the usual beige colour scheme making the keys inside darker. Itâs kinda neat!&lt;/p&gt;
    &lt;p&gt;And this one from Commodore is not really that unique, except it has this fun property âÂ it reverses the usual beige colour scheme making the keys inside darker. Itâs kinda neat!&lt;/p&gt;
    &lt;p&gt;23.&lt;lb/&gt;This is a really cheap Bulgarian keyboard with such a poor build quality it cannot be unseen! I wrote more about it here: The worst keyboard ever made&lt;/p&gt;
    &lt;p&gt;This is a really cheap Bulgarian keyboard with such a poor build quality it cannot be unseen! I wrote more about it here: The worst keyboard ever made&lt;/p&gt;
    &lt;p&gt;24.&lt;lb/&gt;Oh, it gets worse. This calculator keyboard is so cheap itâs not a keyboard at all â just an exposed PCB with a pen to complete the circuit. More about it here: The worst keyboard ever made&lt;/p&gt;
    &lt;p&gt;Oh, it gets worse. This calculator keyboard is so cheap itâs not a keyboard at all â just an exposed PCB with a pen to complete the circuit. More about it here: The worst keyboard ever made&lt;/p&gt;
    &lt;p&gt;25.&lt;lb/&gt;And this is the opposite, an incredibly well-built IBM Model F banking typewriter with an enclosure made out of zinc. Hefty enough to stop a bank robbery? Perhaps. More here: To save a keyboard, pt. 2&lt;/p&gt;
    &lt;p&gt;And this is the opposite, an incredibly well-built IBM Model F banking typewriter with an enclosure made out of zinc. Hefty enough to stop a bank robbery? Perhaps. More here: To save a keyboard, pt. 2&lt;/p&gt;
    &lt;p&gt;Halfway through! I need a bit of a break. Is this interesting? Should I keep going!?&lt;/p&gt;
    &lt;p&gt;26.&lt;lb/&gt;If your bank robbery goes poorly, you probably end up typing on this Swintec, transparent so that no contraband could be hidden inside. More about transparent tech for prisons in this Techmoan video: YouTube&lt;/p&gt;
    &lt;p&gt;If your bank robbery goes poorly, you probably end up typing on this Swintec, transparent so that no contraband could be hidden inside. More about transparent tech for prisons in this Techmoan video: YouTube&lt;/p&gt;
    &lt;p&gt;27.&lt;lb/&gt;This simple braille keyboard â Tellatouch â was gorgeous and important. Type a key on one side, and the right braille letter assembles itself on the other.&lt;/p&gt;
    &lt;p&gt;This simple braille keyboard â Tellatouch â was gorgeous and important. Type a key on one side, and the right braille letter assembles itself on the other.&lt;/p&gt;
    &lt;p&gt;28.&lt;lb/&gt;This is a more modern version of an adjacent idea. Connect this device to a phone line, and you can speak even if you cannot talk. (Also, I just love any time a keyboard lands itself next to a segmented display.)&lt;/p&gt;
    &lt;p&gt;This is a more modern version of an adjacent idea. Connect this device to a phone line, and you can speak even if you cannot talk. (Also, I just love any time a keyboard lands itself next to a segmented display.)&lt;/p&gt;
    &lt;p&gt;29.&lt;lb/&gt;The creators of this Seiko keyboard recognized a watch with a keyboard wouldnât make sense â so you could dock your watch and type this way. (I donât have the watch itself. Too expensive!)&lt;/p&gt;
    &lt;p&gt;The creators of this Seiko keyboard recognized a watch with a keyboard wouldnât make sense â so you could dock your watch and type this way. (I donât have the watch itself. Too expensive!)&lt;/p&gt;
    &lt;p&gt;30.&lt;lb/&gt;Just kidding! Hereâs a keyboard on another Seiko watch. Itâs an index keyboard â you donât touch the keys directly, just move the cursor left and right like on Apple TV âÂ since the keys are smaller than 1mm.&lt;/p&gt;
    &lt;p&gt;Just kidding! Hereâs a keyboard on another Seiko watch. Itâs an index keyboard â you donât touch the keys directly, just move the cursor left and right like on Apple TV âÂ since the keys are smaller than 1mm.&lt;/p&gt;
    &lt;p&gt;31.&lt;lb/&gt;This TI calculator for school use has tiny keysâ¦ in between other keys. What a strange thing.&lt;/p&gt;
    &lt;p&gt;This TI calculator for school use has tiny keysâ¦ in between other keys. What a strange thing.&lt;/p&gt;
    &lt;p&gt;32.&lt;lb/&gt;This calculator wentâ¦ a different way.&lt;/p&gt;
    &lt;p&gt;This calculator wentâ¦ a different way.&lt;/p&gt;
    &lt;p&gt;33.&lt;lb/&gt;I love hybrid things and in-betweeners. This tiny Panasonic Toughbook asks a question: what if a BlackBerry keyboard, but twice the width?&lt;/p&gt;
    &lt;p&gt;I love hybrid things and in-betweeners. This tiny Panasonic Toughbook asks a question: what if a BlackBerry keyboard, but twice the width?&lt;/p&gt;
    &lt;p&gt;34.&lt;lb/&gt;This one, for TermiFlex, is a one-hand operation, inspired by phone keypads. There are three shifts under your long fingers!&lt;/p&gt;
    &lt;p&gt;This one, for TermiFlex, is a one-hand operation, inspired by phone keypads. There are three shifts under your long fingers!&lt;/p&gt;
    &lt;p&gt;35.&lt;lb/&gt;Speaking of complex shortcuts, look at this Apple keyboard with Avid software keycaps. The icon on Z is my favourite. I donât even wanna know what this function does.&lt;/p&gt;
    &lt;p&gt;Speaking of complex shortcuts, look at this Apple keyboard with Avid software keycaps. The icon on Z is my favourite. I donât even wanna know what this function does.&lt;/p&gt;
    &lt;p&gt;36.&lt;lb/&gt;One among many foldable keyboards â this one for Palm devices (RIP).&lt;/p&gt;
    &lt;p&gt;One among many foldable keyboards â this one for Palm devices (RIP).&lt;/p&gt;
    &lt;p&gt;37.&lt;lb/&gt;This Sony remote had a built-in keyboard for typing in MiniDisc titles.&lt;/p&gt;
    &lt;p&gt;This Sony remote had a built-in keyboard for typing in MiniDisc titles.&lt;/p&gt;
    &lt;p&gt;38.&lt;lb/&gt;And *this* Sony keyboard had two numeric keypads going in two different directions! One for typical calculator use, and one inspired by mobile phones to allow to chat as easily for people who got used to chatting that way.&lt;/p&gt;
    &lt;p&gt;And *this* Sony keyboard had two numeric keypads going in two different directions! One for typical calculator use, and one inspired by mobile phones to allow to chat as easily for people who got used to chatting that way.&lt;/p&gt;
    &lt;p&gt;39.&lt;lb/&gt;Very happy (and also maybe also a little concerned) to report I am in possession of the entire ProHance lineup of the strange pointing device/keyboard hybrids!&lt;/p&gt;
    &lt;p&gt;Very happy (and also maybe also a little concerned) to report I am in possession of the entire ProHance lineup of the strange pointing device/keyboard hybrids!&lt;/p&gt;
    &lt;p&gt;40.&lt;lb/&gt;But itâs amazing how rarely the graphical user interfaces and keyboards intersect. This here â an old AT&amp;amp;T terminal keyboard â is an exception, providing dedicated keys for window management.&lt;/p&gt;
    &lt;p&gt;But itâs amazing how rarely the graphical user interfaces and keyboards intersect. This here â an old AT&amp;amp;T terminal keyboard â is an exception, providing dedicated keys for window management.&lt;/p&gt;
    &lt;p&gt;41.&lt;lb/&gt;I had to get this keyboard for a now-obscure Harris word processor, just because LOOK AT THE SHAPE OF THIS ENTER KEY.&lt;/p&gt;
    &lt;p&gt;I had to get this keyboard for a now-obscure Harris word processor, just because LOOK AT THE SHAPE OF THIS ENTER KEY.&lt;/p&gt;
    &lt;p&gt;42.&lt;lb/&gt;I have seen so many keyboards, but only this one â from a strange titling device meant to be connected to your TV âÂ treats uppercase and lowercase exactly like all the other shifted and unshifted symbols. (With the exception of keyboards for kids, I assume!)&lt;/p&gt;
    &lt;p&gt;I have seen so many keyboards, but only this one â from a strange titling device meant to be connected to your TV âÂ treats uppercase and lowercase exactly like all the other shifted and unshifted symbols. (With the exception of keyboards for kids, I assume!)&lt;/p&gt;
    &lt;p&gt;43.&lt;lb/&gt;Back in the day, keyboards were so expensive that you often started on a âtrainingâ keyboard that came without the machine connected to it. Hereâs a training keyboard for a Linotype, which is itself a fascinating machine.&lt;/p&gt;
    &lt;p&gt;Back in the day, keyboards were so expensive that you often started on a âtrainingâ keyboard that came without the machine connected to it. Hereâs a training keyboard for a Linotype, which is itself a fascinating machine.&lt;/p&gt;
    &lt;p&gt;44.&lt;lb/&gt;Hereâs another one for the first popular line of desk calculators that predates a 10-key keypad.&lt;/p&gt;
    &lt;p&gt;Hereâs another one for the first popular line of desk calculators that predates a 10-key keypad.&lt;/p&gt;
    &lt;p&gt;45.&lt;lb/&gt;(I also have the actual calculator, called a Comptometer. Itâs beautiful, really fun to use, and honestly a work of art. A truly impressive machine from the bygone era. I bought it because I was so impressed reading what it can do.)&lt;/p&gt;
    &lt;p&gt;(I also have the actual calculator, called a Comptometer. Itâs beautiful, really fun to use, and honestly a work of art. A truly impressive machine from the bygone era. I bought it because I was so impressed reading what it can do.)&lt;/p&gt;
    &lt;p&gt;46.&lt;lb/&gt;Hereâs another practice keyboard, with a record to play to teach you how to type!&lt;/p&gt;
    &lt;p&gt;Hereâs another practice keyboard, with a record to play to teach you how to type!&lt;/p&gt;
    &lt;p&gt;47.&lt;lb/&gt;And hereâs the most modern version of a practice keyboard I know of â itself a small computer. After that, the likes of Mavis Beacon took over teaching typing in software.&lt;/p&gt;
    &lt;p&gt;And hereâs the most modern version of a practice keyboard I know of â itself a small computer. After that, the likes of Mavis Beacon took over teaching typing in software.&lt;/p&gt;
    &lt;p&gt;48.&lt;lb/&gt;Speaking of the 1980s, keyboards from failed computers often found a second life as Radio Shack components you could reuse in your DIY projects. Hereâs one from a home computer called Coleco Adam.&lt;/p&gt;
    &lt;p&gt;Speaking of the 1980s, keyboards from failed computers often found a second life as Radio Shack components you could reuse in your DIY projects. Hereâs one from a home computer called Coleco Adam.&lt;/p&gt;
    &lt;p&gt;49.&lt;lb/&gt;While weâre speaking about failed computers, this is One Laptop Per Childâs interesting-looking keyboard. (I think OLPC is considered a failure? Iâm not 100% sure. This computer is not in the book, so I havenât researched that carefully.)&lt;/p&gt;
    &lt;p&gt;While weâre speaking about failed computers, this is One Laptop Per Childâs interesting-looking keyboard. (I think OLPC is considered a failure? Iâm not 100% sure. This computer is not in the book, so I havenât researched that carefully.)&lt;/p&gt;
    &lt;p&gt;50. And here is Canon Cat, maybe my favourite failed machine of all time. Look at these Leap keys! Iâm somewhat in love with this machine.&lt;lb/&gt;Adult-onset felinophilia&lt;/p&gt;
    &lt;p&gt;Adult-onset felinophilia&lt;/p&gt;
    &lt;p&gt;Thatâs it! I hope you liked this sneak peek of my collectionâ if you did, consider backing the book since this is the level of quality Iâve been aiming at for the visual sideâ¦ there are a lot more photos like these, and of course a lot more great stories attached to them. &lt;lb/&gt;Shift Happens on Kickstarter&lt;/p&gt;
    &lt;p&gt;Shift Happens on Kickstarter&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45099192</guid></item><item><title>Collecting All Causal Knowledge</title><link>https://causenet.org/</link><description>&lt;doc fingerprint="ef076201388bcbc9"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Collecting All Causal Knowledge&lt;/head&gt;
    &lt;p&gt;CauseNet aims at creating a causal knowledge base that comprises all human causal knowledge and to separate it from mere causal beliefs, with the goal of enabling large-scale research into causal inference.&lt;/p&gt;
    &lt;head rend="h1"&gt;CauseNet: Towards a Causality Graph Extracted from the Web&lt;/head&gt;
    &lt;p&gt;Causal knowledge is seen as one of the key ingredients to advance artificial intelligence. Yet, few knowledge bases comprise causal knowledge to date, possibly due to significant efforts required for validation. Notwithstanding this challenge, we compile CauseNet, a large-scale knowledge base of claimed causal relations between causal concepts. By extraction from different semi- and unstructured web sources, we collect more than 11 million causal relations with an estimated extraction precision of 83\% and construct the first large-scale and open-domain causality graph. We analyze the graph to gain insights about causal beliefs expressed on the web and we demonstrate its benefits in basic causal question answering. Future work may use the graph for causal reasoning, computational argumentation, multi-hop question answering, and more.&lt;/p&gt;
    &lt;head rend="h2"&gt;Download&lt;/head&gt;
    &lt;p&gt;We provide three versions of our causality graph CauseNet:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;CauseNet-Full: The complete dataset&lt;/item&gt;
      &lt;item&gt;CauseNet-Precision: A subset of CauseNet-Full with higher precision&lt;/item&gt;
      &lt;item&gt;CauseNet-Sample: A small sample dataset for first explorations and experiments without provenance data&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Statistics&lt;/head&gt;
    &lt;table&gt;
      &lt;row span="4"&gt;
        &lt;cell role="head"&gt;Relations&lt;/cell&gt;
        &lt;cell role="head"&gt;Concepts&lt;/cell&gt;
        &lt;cell role="head"&gt;File Size&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;CauseNet-Full&lt;/cell&gt;
        &lt;cell&gt;11,609,890&lt;/cell&gt;
        &lt;cell&gt;12,186,195&lt;/cell&gt;
        &lt;cell&gt;1.8GB&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="4"&gt;
        &lt;cell&gt;CauseNet-Precision&lt;/cell&gt;
        &lt;cell&gt;199,806&lt;/cell&gt;
        &lt;cell&gt;80,223&lt;/cell&gt;
        &lt;cell&gt;135MB&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;CauseNet-Sample&lt;/cell&gt;
        &lt;cell&gt;264&lt;/cell&gt;
        &lt;cell&gt;524&lt;/cell&gt;
        &lt;cell&gt;54KB&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;head rend="h2"&gt;Data Model&lt;/head&gt;
    &lt;p&gt;The core of CauseNet consists of causal concepts which are connected by causal relations. Each causal relation has comprehensive provenance data on where and how it was extracted.&lt;/p&gt;
    &lt;head rend="h2"&gt;Examples of Causal Relations&lt;/head&gt;
    &lt;p&gt;Causal relations are represented as shown in the following example. Provenance data is omitted.&lt;/p&gt;
    &lt;code&gt;{
    "causal_relation": {
        "cause": {
            "concept": "disease"
        },
        "effect": {
            "concept": "death"
        }
    }
}
&lt;/code&gt;
    &lt;p&gt;For CauseNet-Full and CauseNet-Precision, we include comprehensive provenance data. In the following, we give one example per source.&lt;/p&gt;
    &lt;p&gt;For relations extracted from natural language sentences we provide:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;surface&lt;/code&gt;: the surface form of the sentence, i.e., the original string&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;path_pattern&lt;/code&gt;: the linguistic path pattern used for extraction&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h3"&gt;ClueWeb12 Sentences&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;clueweb12_page_id&lt;/code&gt;: page id as provided in the ClueWeb12 corpus&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;clueweb12_page_reference&lt;/code&gt;: page reference as provided in the ClueWeb12 corpus&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;clueweb12_page_timestamp&lt;/code&gt;: page access data as stated in the ClueWeb12 corpus&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;{
    "causal_relation":{
        "cause":{
            "concept":"smoking"
        },
        "effect":{
            "concept":"disability"
        }
    },
    "sources":[
        {
            "type":"clueweb12_sentence",
            "payload":{
                "clueweb12_page_id":"urn:uuid:4cbae00e-8c7f-44b1-9f02-d797f53d448a",
                "clueweb12_page_reference":"http://atlas.nrcan.gc.ca/site/english/maps/health/healthbehaviors/smoking",
                "clueweb12_page_timestamp":"2012-02-23T21:10:45Z",
                "sentence": "In Canada, smoking is the most important cause of preventable illness, disability and premature death.",
                "path_pattern":"[[cause]]/N\t-nsubj\tcause/NN\t+nmod:of\t[[effect]]/N"
            }
        }
    ]
}
&lt;/code&gt;
    &lt;head rend="h3"&gt;Wikipedia Sentences&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;wikipedia_page_id&lt;/code&gt;: the Wikipedia page id&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;wikipedia_page_title&lt;/code&gt;: the Wikipedia page title&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;wikipedia_revision_id&lt;/code&gt;: the Wikipedia revision id of the last edit&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;wikipedia_revision_timestamp&lt;/code&gt;: the timestamp of the Wikipedia revision id of the last edit&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;sentence_section_heading&lt;/code&gt;: the section heading where the sentence comes from&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;sentence_section_level&lt;/code&gt;: the level where the section heading comes from&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;{
    "causal_relation":{
        "cause":{
            "concept":"human_activity"
        },
        "effect":{
            "concept":"climate_change"
        }
    },
    "sources":[
        {
            "type":"wikipedia_sentence",
            "payload":{
                "wikipedia_page_id":"13109",
                "wikipedia_page_title":"Global warming controversy",
                "wikipedia_revision_id":"860220175",
                "wikipedia_revision_timestamp":"2018-09-19T04:52:18Z",
                "sentence_section_heading":"Global warming controversy",
                "sentence_section_level":"1",
                "sentence": "The controversy is, by now, political rather than scientific: there is a scientific consensus that climate change is happening and is caused by human activity.",
                "path_pattern":"[[cause]]/N\t-nmod:agent\tcaused/VBN\t+nsubjpass\t[[effect]]/N"
            }
        }
    ]
}
&lt;/code&gt;
    &lt;head rend="h3"&gt;Wikipedia Lists&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;list_toc_parent_title&lt;/code&gt;: The heading of the parent section the list appears in&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;list_toc_section_heading&lt;/code&gt;: The heading of the section the list appears in&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;list_toc_section_level&lt;/code&gt;: The nesting level of the section within the table of content (toc)&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;{
    "causal_relation":{
        "cause":{
            "concept":"separation_from_parents"
        },
        "effect":{
            "concept":"stress_in_early_childhood"
        }
    },
    "sources":[
        {
            "type":"wikipedia_list",
            "payload":{
                "wikipedia_page_id":"33096801",
                "wikipedia_page_title":"Stress in early childhood",
                "wikipedia_revision_id":"859225864",
                "wikipedia_revision_timestamp":"2018-09-12T16:22:05Z",
                "list_toc_parent_title":"Stress in early childhood",
                "list_toc_section_heading":"Causes",
                "list_toc_section_level":"2"
            }
        }
    ]
}
&lt;/code&gt;
    &lt;head rend="h3"&gt;Wikipedia Infoboxes&lt;/head&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;infobox_template&lt;/code&gt;: The Wikipedia template of the infobox&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;infobox_title&lt;/code&gt;: The title of the Wikipedia infobox&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;infobox_argument&lt;/code&gt;: The argument of the infobox (the key of the key-value pair)&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;{
    "causal_relation":{
        "cause":{
            "concept":"alcohol"
        },
        "effect":{
            "concept":"cirrhosis"
        }
    },
    "sources":[
        {
            "type":"wikipedia_infobox",
            "payload":{
                "wikipedia_page_id":"21365918",
                "wikipedia_page_title":"Cirrhosis",
                "wikipedia_revision_id":"861860835",
                "wikipedia_revision_timestamp":"2018-09-30T15:40:21Z",
                "infobox_template":"Infobox medical condition (new)",
                "infobox_title":"Cirrhosis",
                "infobox_argument":"causes"
            }
        }
    ]
}
&lt;/code&gt;
    &lt;head rend="h2"&gt;Loading CauseNet into Neo4j&lt;/head&gt;
    &lt;p&gt;We provide sample code to load CauseNet into the graph database Neo4j.&lt;/p&gt;
    &lt;p&gt;The following figure shows an excerpt of CauseNet within Neo4j (showing a coronavirus causing the disease SARS):&lt;/p&gt;
    &lt;head rend="h2"&gt;Concept Spotting Datasets&lt;/head&gt;
    &lt;p&gt;For the construction of CauseNet, we employ a causal concept spotter as a causal concept can be composed of multiple words (e.g., “global warming”, “human activity”, or “lack of exercise”). We determine the exact start and end of a causal concept in a sentence with a sequence tagger. Our training and evaluation data is available as part of our concept spotting datasets: one for Wikipedia infoboxes, Wikipedia lists, and ClueWeb sentences. We split each dataset into 80% training, 10% development and 10% test set&lt;/p&gt;
    &lt;head rend="h2"&gt;Paper&lt;/head&gt;
    &lt;p&gt;CauseNet forms the basis for our CIKM 2020 paper CauseNet: Towards a Causality Graph Extracted from the Web. Please make sure to refer to it as follows:&lt;/p&gt;
    &lt;code&gt;@inproceedings{heindorf2020causenet,
  author    = {Stefan Heindorf and
               Yan Scholten and
               Henning Wachsmuth and
               Axel-Cyrille Ngonga Ngomo and
               Martin Potthast},
  title     = {CauseNet: Towards a Causality Graph Extracted from the Web},
  booktitle = {{CIKM}},
  publisher = {{ACM}},
  year      = {2020}
}
&lt;/code&gt;
    &lt;head rend="h2"&gt;Contact&lt;/head&gt;
    &lt;p&gt;For questions and feedback please contact:&lt;/p&gt;
    &lt;p&gt;Stefan Heindorf, Paderborn University&lt;lb/&gt; Yan Scholten, Technical University of Munich&lt;lb/&gt; Henning Wachsmuth, Paderborn University&lt;lb/&gt; Axel-Cyrille Ngonga Ngomo, Paderborn University&lt;lb/&gt; Martin Potthast, Leipzig University&lt;/p&gt;
    &lt;head rend="h2"&gt;Licenses&lt;/head&gt;
    &lt;p&gt;The code is licensed under a MIT license. The data is licensed under a Creative Commons Attribution 4.0 International license.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45099418</guid></item><item><title>Next.js is infuriating</title><link>https://blog.meca.sh/3lxoty3shjc2z</link><description>&lt;doc fingerprint="d05093007b4164b8"&gt;
  &lt;main&gt;
    &lt;p&gt;Hey, it's finally happened. I've decided to write a blog post. And if you're reading this, I've also finished one. I have wanted to do this for a long time, but could never find the motivation to start. But you know what they say: anger is the best motivator. They do say that, right?&lt;/p&gt;
    &lt;head rend="h3"&gt;Some context that's in the background&lt;/head&gt;
    &lt;p&gt;We're going on a journey, you and I. But first, we need to set the scene. Imagine we're working for $COMPANY and one of our Next.js services did an oopsie. This being Next.js, we of course have no idea what actually happened since the default logging is only enabled during development.&lt;/p&gt;
    &lt;p&gt;Our quest is to go in and setup some production ready logging. It's not going to be easy, but then again, nothing ever is.&lt;/p&gt;
    &lt;head rend="h3"&gt;Middleware? Middle of nowhere!&lt;/head&gt;
    &lt;p&gt;The first step of our journey is the middleware. The documentation even states this:&lt;/p&gt;
    &lt;quote&gt;Middleware executes before routes are rendered. It's particularly useful for implementing custom server-side logic like authentication, logging, or handling redirects.&lt;/quote&gt;
    &lt;p&gt;Alright, looks simple enough. Time to pick a logging library. I went with pino since we have used it before. Anything is an upgrade over &lt;code&gt;console.log&lt;/code&gt; anyways. We'll get this done before lunch.&lt;/p&gt;
    &lt;p&gt;Let's set up a basic middleware:&lt;/p&gt;
    &lt;code&gt;// middleware.ts
import { NextResponse, NextRequest } from "next/server";

export async function middleware(request: NextRequest) {
  return new NextResponse.next({
    request: request,
    headers: request.headers,
    // status: 200,
    // statusText: 'OK'
  });
}

export const config = {
  matcher: "/:path*",
};&lt;/code&gt;
    &lt;p&gt;I think we already have a problem here. You can pass a grand total of 4 parameters from your middleware. The only thing that actually affects the invoked route is the &lt;code&gt;headers&lt;/code&gt;. Let's not skip over the fact that you can't have multiple middlewares or chain them either. How do you fuck this up so bad? We've had middlewares since at least the early 2010s when Express came out.&lt;/p&gt;
    &lt;p&gt;Anyways, we're smart and modern Node.js has some pretty nifty tools. Let's reach for &lt;code&gt;AsyncLocalStorage&lt;/code&gt;.&lt;/p&gt;
    &lt;code&gt;// app/logger.ts
import { AsyncLocalStorage } from "async_hooks";
import { Logger, pino } from "pino";

const loggerInstance = pino({
  // Whatever config we need
  level: process.env.LOG_LEVEL ?? "trace",
});

export const LoggerStorage = new AsyncLocalStorage&amp;lt;Logger&amp;gt;();

export function logger(): Logger | null {
  return LoggerStorage.getStore() ?? null;
}

export function requestLogger(): Logger {
  return loggerInstance.child({ requestId: crypto.randomUUID() });
}

// middleware.ts
export async function middleware(request: NextRequest) {
  LoggerStorage.enterWith(requestLogger());
  logger()?.debug({ url: request.url }, "Started processing request!");

  return NextResponse.next();
}&lt;/code&gt;
    &lt;p&gt;Whew, hard work done. Let's test it out. Visit localhost:3000 and we see this:&lt;/p&gt;
    &lt;code&gt;{ requestId: 'ec7718fa-b1a2-473e-b2e2-8f51188efa8f' } { url: 'http://localhost:3000/' } 'Started processing request!'
 GET / 200 in 71ms
{ requestId: '09b526b1-68f4-4e90-971f-b0bc52ad167c' } { url: 'http://localhost:3000/next.svg' } 'Started processing request!'
{ requestId: '481dd2ff-e900-4985-ae15-0b0a1eb5923f' } { url: 'http://localhost:3000/vercel.svg' } 'Started processing request!'
{ requestId: 'e7b29301-171c-4c91-af25-771471502ee4' } { url: 'http://localhost:3000/file.svg' } 'Started processing request!'
{ requestId: '13766de3-dd00-42ce-808a-ac072dcfd4c6' } { url: 'http://localhost:3000/window.svg' } 'Started processing request!'
{ requestId: '317e054c-1a9a-4dd8-ba21-4c0201fbeada' } { url: 'http://localhost:3000/globe.svg' } 'Started processing request!'&lt;/code&gt;
    &lt;p&gt;I don't know if you've ever used pino before, but this is wrong. Can you figure out why?&lt;/p&gt;
    &lt;p&gt;Unlike Next.js I won't keep you waiting in limbo. This is the browser output. Why? Well, it's because the default Next.js middleware runtime is &lt;code&gt;edge&lt;/code&gt;. We can of course switch to the &lt;code&gt;nodejs&lt;/code&gt; runtime which should work. Except, of course, it might not.&lt;/p&gt;
    &lt;p&gt;I've tried it on a fresh Next.js project and it does work. But it didn't when I was trying it out on our actual project. I swear I'm not crazy. Anyways, this isn't the main issue. We're slowly getting there.&lt;/p&gt;
    &lt;head rend="h3"&gt;Paging the local mental asylum&lt;/head&gt;
    &lt;p&gt;Logging in the middleware is cool and all, but it's not where the bulk of the magic happens. For that, we need to log in pages and layouts. Let's try it out.&lt;/p&gt;
    &lt;code&gt;// app/page.tsx
export default function Home() {
  logger()?.info("Logging from the page!");

  return &amp;lt;div&amp;gt;Real simple website!&amp;lt;/div&amp;gt;
}&lt;/code&gt;
    &lt;p&gt;Refresh the page and we get this:&lt;/p&gt;
    &lt;code&gt;✓ Compiled / in 16ms
 GET / 200 in 142ms&lt;/code&gt;
    &lt;p&gt;That's it? That's it. Nothing. Nada. Zilch.&lt;/p&gt;
    &lt;p&gt;For posterity's sake, this is what it's supposed to look like:&lt;/p&gt;
    &lt;code&gt;✓ Compiled / in 2.2s
[11:38:59.259] INFO (12599): Logging from the page!
    requestId: "2ddef9cf-6fee-4d1d-8b1e-6bb16a3e636b"
 GET / 200 in 2520ms&lt;/code&gt;
    &lt;p&gt;Ok,this is getting a bit long, so I'll get to the point. The &lt;code&gt;logger&lt;/code&gt; function returns &lt;code&gt;null&lt;/code&gt;. Why? I'm not entirely sure, but it seems like rendering is not executed in the same async context as the middleware.&lt;/p&gt;
    &lt;p&gt;What's the solution then? You're not going to believe this. Remember how the only value you can pass from the middleware is &lt;code&gt;headers&lt;/code&gt;? Yeah. That's what we need to use.&lt;/p&gt;
    &lt;p&gt;The following is for people with strong stomachs:&lt;/p&gt;
    &lt;code&gt;// app/log/serverLogger.ts
import { pino } from "pino";

export const loggerInstance = pino({
  // Whatever config we need
  level: process.env.LOG_LEVEL ?? "info",
});

// app/log/middleware.ts
// Yes, we need to split up the loggers ...
// Mostly the same as before
import { loggerInstance } from "./serverLogger";

export function requestLogger(requestId: string): Logger {
  return loggerInstance.child({ requestId });
}

// app/log/server.ts
import { headers } from "next/headers";
import { loggerInstance } from "./serverLogger";
import { Logger } from "pino";
import { NextRequest } from "next/server";

const REQUEST_ID_HEADER = "dominik-request-id";

export function requestHeaders(
  request: NextRequest,
  requestId: string,
): Headers {
  const head = new Headers(request.headers);
  head.set(REQUEST_ID_HEADER, requestId);
  return head;
}

// Yeah, this has to be async ...
export async function logger(): Promise&amp;lt;Logger&amp;gt; {
  const hdrs = await headers();
  const requestId = hdrs.get(REQUEST_ID_HEADER);

  return loggerInstance.child({ requestId });
}

// middleware.ts
import { logger, LoggerStorage, requestLogger } from "./app/log/middleware";
import { requestHeaders } from "./app/log/server";

export async function middleware(request: NextRequest) {
  const requestId = crypto.randomUUID();
  LoggerStorage.enterWith(requestLogger(requestId));

  logger()?.debug({ url: request.url }, "Started processing request!");

  return NextResponse.next({ headers: requestHeaders(request, requestId) });
}

// app/page.tsx
export default async function Home() {
  (await logger())?.info("Logging from the page!");

  // ...
}&lt;/code&gt;
    &lt;p&gt;Isn't it beautiful? I especially appreciate how it's now possible to import the middleware logging code from the server. Which of course won't work. Or import the server logging code from the middleware. Which also won't work. Better not mess up. Also, we haven't even touched upon logging in client components, which despite the name also run on the server. Yeah, that's a third split.&lt;/p&gt;
    &lt;head rend="h3"&gt;Congratulations, you're being coddled. Please do not resist.&lt;/head&gt;
    &lt;p&gt;Listen. I wanted to apologize, because I've led you into this trap. You see, I have already fallen into it several times before. A middleware system can be pretty useful when designed correctly and I wanted you to see what it looks like when it's not. The reason for writing this blog post actually started here.&lt;/p&gt;
    &lt;p&gt;I think every one of us has reached a point in their lives where they've had enough. For me, it was right here. Fuck it, let's use a custom server.&lt;/p&gt;
    &lt;quote&gt;A custom Next.js server allows you to programmatically start a server for custom patterns. The majority of the time, you will not need this approach. However, it's available if you need to eject.&lt;/quote&gt;
    &lt;p&gt;Let's take a look at the example from the documentation:&lt;/p&gt;
    &lt;code&gt;import { createServer } from 'http'
import { parse } from 'url'
import next from 'next'
 
const port = parseInt(process.env.PORT || '3000', 10)
const dev = process.env.NODE_ENV !== 'production'
const app = next({ dev })
const handle = app.getRequestHandler()
 
app.prepare().then(() =&amp;gt; {
  createServer((req, res) =&amp;gt; {
    const parsedUrl = parse(req.url!, true)
    handle(req, res, parsedUrl)
  }).listen(port)
 
  console.log(
    `&amp;gt; Server listening at http://localhost:${port} as ${
      dev ? 'development' : process.env.NODE_ENV
    }`
  )
})&lt;/code&gt;
    &lt;p&gt;Note that once again, &lt;code&gt;handle&lt;/code&gt; doesn't really take any parameters. Only the request URL and the raw request and response.&lt;/p&gt;
    &lt;p&gt;Anyways, we still have &lt;code&gt;AsyncLocalStorage&lt;/code&gt; so this doesn't concern us too much. Let's modify the example a bit.&lt;/p&gt;
    &lt;code&gt;// app/logger.ts
// Reverted back to our AsyncLocalStorage variaton
import { pino, Logger } from "pino";
import { AsyncLocalStorage } from "async_hooks";

const loggerInstance = pino({
  // Whatever config we need
  level: process.env.LOG_LEVEL ?? "info",
});

export const LoggerStorage = new AsyncLocalStorage&amp;lt;Logger&amp;gt;();

export function logger(): Logger | null {
  return LoggerStorage.getStore() ?? null;
}

export function requestLogger(): Logger {
  return loggerInstance.child({ requestId: crypto.randomUUID() });
}

// server.ts
import { logger, LoggerStorage, requestLogger } from "./app/logger";

app.prepare().then(() =&amp;gt; {
  createServer(async (req, res) =&amp;gt; {
    // This is new
    LoggerStorage.enterWith(requestLogger());
    logger()?.info({}, "Logging from server!");

    const parsedUrl = parse(req.url!, true);
    await handle(req, res, parsedUrl);
  }).listen(port);
});

// middleware.ts
import { logger } from "./app/logger";

export async function middleware(request: NextRequest) {
  logger()?.info({}, "Logging from middleware!");
  return NextResponse.next();
}

// app/page.tsx
import { logger } from "./logger";

export default async function Home() {
  logger()?.info("Logging from the page!");
  
  // ...
}&lt;/code&gt;
    &lt;p&gt;Ok, let's test it out. Refresh the browser and ...&lt;/p&gt;
    &lt;code&gt;&amp;gt; Server listening at http://localhost:3000 as development
[12:29:52.183] INFO (19938): Logging from server!
    requestId: "2ffab9a2-7e15-4188-8959-a7822592108f"
 ✓ Compiled /middleware in 388ms (151 modules)
 ○ Compiling / ...
 ✓ Compiled / in 676ms (769 modules)&lt;/code&gt;
    &lt;p&gt;That's it. Are you fucking kidding me right now? What the fuck?&lt;/p&gt;
    &lt;p&gt;Now, you might be thinking that this is just not how &lt;code&gt;AsyncLocalStorage&lt;/code&gt; works. And you might be right. But I would like to point out that &lt;code&gt;headers()&lt;/code&gt; and &lt;code&gt;cookies()&lt;/code&gt; use &lt;code&gt;AsyncLocalStorage&lt;/code&gt;. This is a power that the Next.js devs have that we don't.&lt;/p&gt;
    &lt;p&gt;As far as I can tell there are only two ways to pass information from a middleware to a page.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;Headers&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;&lt;code&gt;NextResponse.redirect&lt;/code&gt;/&lt;code&gt;NextResponse.rewrite&lt;/code&gt;to a route with extra params (eg. /[requestId]/page.tsx)&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;As you might have noticed, neither of these are very pleasant to use in this case.&lt;/p&gt;
    &lt;p&gt;You are being coddled. The Next.js devs have a vision and it's either their way or the highway. Note that if it was just the middleware, I wouldn't be sitting here, wasting away my weekend, ranting about a React framework. Believe it or not, I've got better things to do. It's constant pain you encounter daily when working with Next.js.&lt;/p&gt;
    &lt;head rend="h3"&gt;Vercel can do better&lt;/head&gt;
    &lt;p&gt;What's infuriating about this example is that Vercel can very much do better. I don't want to sing too many praises at Svelte(Kit) because I have some misgivings about its recent direction, but it's so much better than Next.js. Let's look at their middleware docs:&lt;/p&gt;
    &lt;quote&gt;handle - This function runs every time the SvelteKit server receives a request [...] This allows you to modify response headers or bodies, or bypass SvelteKit entirely (for implementing routes programmatically, for example).&lt;/quote&gt;
    &lt;p&gt;Looking good so far.&lt;/p&gt;
    &lt;quote&gt;locals - To add custom data to the request, which is passed to handlers in&lt;code&gt;+server.js&lt;/code&gt;and server&lt;code&gt;load&lt;/code&gt;functions, populate the&lt;code&gt;event.locals&lt;/code&gt;object, as shown below.&lt;/quote&gt;
    &lt;p&gt;I'm crying tears of joy right now. You can also stuff real objects/classes in there. Like a logger for instance.&lt;/p&gt;
    &lt;quote&gt;You can define multiple handle functions and execute them with sequence.&lt;/quote&gt;
    &lt;p&gt;This is what real engineering looks like. SvelteKit is a Vercel product. How is the flagship offering worse than what is essentially a side project. What the hell?&lt;/p&gt;
    &lt;head rend="h3"&gt;Scientists discover a new super massive black hole at https://github.com/vercel/next.js/issues&lt;/head&gt;
    &lt;p&gt;I don't have anything else to add, but while I'm here I feel like I have to talk about the GitHub issue tracker. This is perhaps the crown jewel of the dumpster fire that is Next.js. It's a place where hopes and issues come to die. The mean response time for a bug report is never. I've made it a sport to search the issue tracker/discussion for problems I'm currently facing and bet on how many years it takes to even get a response from a Next.js dev.&lt;/p&gt;
    &lt;p&gt;You think I'm joking? There are hundreds of issues with as many 👍 emojis with no official response for years. And when you finally get a response, it's to tell you that what you're doing is wrong and a solution to your real problems is on the way. Then they proceed to keep the "solution" in canary for years on end.&lt;/p&gt;
    &lt;p&gt;I personally reported two issues a year ago. Keep in mind that to have a valid bug report, you need a reproduction.&lt;/p&gt;
    &lt;p&gt;So, what do you get for taking the time to make a minimal reproduction? That's right. Complete silence.&lt;/p&gt;
    &lt;p&gt;I would have reported about a dozen other issues I have encountered, but after this experience I gave up.&lt;/p&gt;
    &lt;p&gt;Honestly, I don't even know if the issues are still valid.&lt;/p&gt;
    &lt;head rend="h3"&gt;Have we learned anything?&lt;/head&gt;
    &lt;p&gt;I don't know. For me, personally, I don't want to use Next.js anymore. You might think that this is just a singular issue and I'm overreacting. But there's bugs and edge cases around every corner. How did they manage to make TypeScript compile slower than Rust? Why make a distinction between code running on client and server and then not give me any tools to take advantage of that? Why? Why? Why?&lt;/p&gt;
    &lt;p&gt;I don't think I quite have enough pull to move us out of Next.js land. But, I think I will voice my opinion if we end up writing another app. We'll see if the grass is any greener on the other side.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45099922</guid></item><item><title>Kapa.ai (YC S23) is hiring research and software engineers</title><link>https://www.ycombinator.com/companies/kapa-ai/jobs</link><description>&lt;doc fingerprint="bdc48a3b7f7b6dd6"&gt;
  &lt;main&gt;
    &lt;p&gt;The fastest way to build AI assistants on technical content&lt;/p&gt;
    &lt;p&gt;We make it easy for technical companies to build AI assistants. Companies like Docker, Grafana and Mixpanel deploy kapa in the following ways:&lt;/p&gt;
    &lt;p&gt;We leverage companies existing technical knowledge sources including documentation, tutorials, forum posts, Slack channels, GitHub issues and many more to generate AI assistants that can handle complicated technical questions. More than 200 companies use kapa and we have answered more than 10 million questions to date.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45099939</guid></item><item><title>Run Erlang/Elixir on Microcontrollers and Embedded Linux</title><link>https://www.grisp.org/software</link><description>&lt;doc fingerprint="3ddf79035115e1e6"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;GRiSP Software Stacks&lt;/head&gt;
    &lt;head rend="h2"&gt;Bring Erlang/Elixir all the way to the edge. Deterministic, fault-tolerant, and production-ready&lt;/head&gt;
    &lt;p&gt;Open-source on GitHub&lt;/p&gt;
    &lt;head rend="h1"&gt;GRiSP Metal&lt;/head&gt;
    &lt;head rend="h2"&gt;Erlang/Elixir on RTEMS. &lt;lb/&gt;Tiny BEAM for devices.&lt;/head&gt;
    &lt;p&gt;GRiSP Metal, formerly just GRiSP, boots straight into the Erlang/Elixir VM on RTEMS for deterministic, real‑time behavior with a minimal footprint. It runs on microcontrollers, and we've made the full stack fit in 16 MB of RAM, ideal when every byte and millisecond matter.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Boots directly to the BEAM (Erlang/Elixir) on RTEMS&lt;/item&gt;
      &lt;item&gt;MCU-class footprint (fits in 16 MB RAM)&lt;/item&gt;
      &lt;item&gt;Real-time scheduling with predictable I/O&lt;/item&gt;
      &lt;item&gt;Direct, low-overhead access to hardware interfaces&lt;/item&gt;
      &lt;item&gt;Supervision trees bring BEAM reliability to the edge&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h1"&gt;GRiSP Alloy&lt;/head&gt;
    &lt;head rend="h2"&gt;Erlang/Elixir on Linux RT. &lt;lb/&gt;Buildroot edition.&lt;/head&gt;
    &lt;p&gt;GRiSP Alloy boots directly into the Erlang/Elixir VM atop a lean, Buildroot-based real-time Linux. Run multiple Erlang/Elixir VMs with distinct priorities and/or pinned to different cores, connected via efficient, secure distributed Erlang links.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Minimal Linux RT image (Buildroot) with BEAM-first boot path&lt;/item&gt;
      &lt;item&gt;Multiple BEAM instances with priority separation and core affinity&lt;/item&gt;
      &lt;item&gt;Local, secure node-to-node links via distributed Erlang&lt;/item&gt;
      &lt;item&gt;Full access to Linux drivers, filesystems, and networking&lt;/item&gt;
      &lt;item&gt;Fast boot, small attack surface, production-ready&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h1"&gt;GRiSP Forge&lt;/head&gt;
    &lt;head rend="h2"&gt;Erlang/Elixir on Linux RT.&lt;lb/&gt;Yocto edition.&lt;/head&gt;
    &lt;p&gt;GRiSP Forge applies the same architecture as GRiSP Alloy to Yocto, for teams requiring long-term, customizable Linux stacks and BSP integration. Boots directly into the Erlang/Elixir VM with the same multi-VM model and secure local links via distributed Erlang.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Yocto-based builds with reproducible, customizable images&lt;/item&gt;
      &lt;item&gt;Multiple Erlang/Elixir VMs by design (priorities and/or core pinning)&lt;/item&gt;
      &lt;item&gt;Efficient, secure local links via distributed Erlang&lt;/item&gt;
      &lt;item&gt;Industrial Linux ecosystem compatibility and tooling&lt;/item&gt;
      &lt;item&gt;Built for long lifecycles and enterprise requirements&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h1"&gt;GRiSP-io: Manage Embedded Systems at Scale&lt;/head&gt;
    &lt;p&gt;GRiSP-io is our cloud and edge platform for deploying, monitoring, and managing distributed embedded systems built with GRiSP stacks. From remote updates to real-time system insights, it helps you stay in control—whether you're testing a prototype or scaling a fleet.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Deploy and manage GRiSP-based devices remotely&lt;/item&gt;
      &lt;item&gt;Monitor system performance and health in real-time&lt;/item&gt;
      &lt;item&gt;Perform over-the-air updates with confidence&lt;/item&gt;
      &lt;item&gt;Integrate cloud and edge control into your workflows&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h1"&gt;Why Use GRiSP Software?&lt;/head&gt;
    &lt;head rend="h2"&gt;GRiSP brings the power of Erlang/Elixir to embedded systems, making development efficient, scalable, and fault-tolerant&lt;/head&gt;
    &lt;head rend="h2"&gt;For Developers&lt;/head&gt;
    &lt;p&gt;GRiSP enables developers to run Erlang and Elixir on bare metal or embedded Linux, reducing complexity with minimal overhead and real-time capabilities. With GRiSP stacks and GRiSP-io, they can build and deploy robust, distributed applications optimized for embedded environments.&lt;/p&gt;
    &lt;head rend="h2"&gt;For IoT &amp;amp; Industrial Systems&lt;/head&gt;
    &lt;p&gt;From prototyping to production, GRiSP provides open-source tools that scale with project needs. Its real-time execution supports automation, robotics, and connected devices, while GRiSP-io enables remote management and monitoring of deployments.&lt;/p&gt;
    &lt;head rend="h1"&gt;Manage Embedded Systems with GRiSP-io&lt;/head&gt;
    &lt;p&gt;Deploy, monitor, and control your connected devices from anywhere. GRiSP-io brings cloud and edge integration to embedded applications, simplifying system management at scale.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45100499</guid></item><item><title>What's New with Firefox 142</title><link>https://www.mozilla.org/en-US/firefox/142.0.1/whatsnew/?oldversion=139.0.4&amp;utm_medium=firefox-desktop&amp;utm_source=update&amp;utm_campaign=142</link><description>&lt;doc fingerprint="df0ca1d73ef8abed"&gt;
  &lt;main&gt;&lt;head rend="h3"&gt;Less clutter and more focus with vertical tabs&lt;/head&gt;&lt;p&gt;Firefox’s new sidebar lets you move tabs to the side, pin key sites and keep your AI assistant handy.&lt;/p&gt;Learn more&lt;p&gt;What’s New | Firefox 142&lt;/p&gt;&lt;p&gt;Firefox Relay generates secure email masks when you sign up for new online accounts, so you can stay anonymous and get less spam in your inbox.&lt;/p&gt;&lt;p&gt;Firefox helps you preview links and keep tabs tidy so nothing slows you down.&lt;/p&gt;&lt;p&gt;Link Previews&lt;/p&gt;&lt;p&gt;Link Previews show a snapshot of a page before you open it, helping you decide what’s worth your time. Just long press any link to preview and reduce distractions.&lt;/p&gt;&lt;p&gt;AI-Enhanced Tab Groups&lt;/p&gt;&lt;p&gt;A local AI model identifies similar tabs, automatically organizes them into groups, and even suggests group names, helping you stay organized. Everything happens on your device to respect your privacy.&lt;/p&gt;&lt;p&gt;Stay organized, find what you need, and browse your way.&lt;/p&gt;&lt;p&gt;Firefox’s new sidebar lets you move tabs to the side, pin key sites and keep your AI assistant handy.&lt;/p&gt;Learn more&lt;p&gt;Create a space that’s uniquely yours. Set the mood with Firefox wallpapers, custom colors, or your own photo. Open a new tab and click the icon to start customizing.&lt;/p&gt;Learn more&lt;p&gt;No more tab overload. Stay organized and in control of your time and attention. Drag one tab onto another to create your first group.&lt;/p&gt;Learn more&lt;p&gt;Get monthly how-tos, advice and news to make your Firefox experience work best for you.&lt;/p&gt;&lt;p&gt;New tools for focus, privacy, and smoother mobile browsing.&lt;/p&gt;&lt;p&gt;Your private tabs lock automatically when you step away — and only unlock with your face, fingerprint, or PIN.&lt;/p&gt;&lt;p&gt;Now translate web pages into Japanese, Chinese, Korean and more, so you can browse in your preferred language.&lt;/p&gt;&lt;p&gt;Firefox suggests strong passwords when you’re creating a new account on any site, and keeps them secure, ready on any device when you sync.&lt;/p&gt;&lt;p&gt;A streamlined UI and upgraded dark mode on Firefox for iOS bring clarity and calm to everything you browse.&lt;/p&gt;&lt;p&gt;Scan the QR code to get Firefox Mobile and browse with calm, focus, and control — wherever you go.&lt;/p&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45101300</guid></item><item><title>Toronto’s underground labyrinth</title><link>https://www.worksinprogress.news/p/torontos-underground-labyrinth</link><description>&lt;doc fingerprint="b1495316a5e1a27c"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Toronto's underground labyrinth&lt;/head&gt;
    &lt;head rend="h3"&gt;How Canada's largest city developed a 30 kilometer network of pedestrian tunnels&lt;/head&gt;
    &lt;p&gt;Toronto has one of the world’s great commercial downtowns. Two metro lines, eight suburban heavy railways, an extensive bus system, a highway, and North America’s greatest surviving tram network all converge on a tiny area by the shores of Lake Ontario. Hundreds of thousands of commuters pour into the downtown every day, filling the great towers that line its nineteenth-century streets.&lt;/p&gt;
    &lt;p&gt;As with many downtowns, this causes congestion. Streets and pavements are thronged at peak times. Bicycles, pedestrians, cars, trams and buses compete for scarce space. As with all traditional radial transport systems, there is an enormous concentration of movement in a tiny area. Pedestrians make slow progress across the urban fabric, stopping every block for a minute or two to wait to cross the road.&lt;/p&gt;
    &lt;p&gt;In the early twentieth century, Toronto’s businesses developed a novel response to this. They began to create pedestrian tunnels from their offices to the metro stations so that their employees could flow in smoothly, avoiding the congested streets (and, in winter, the cold). Shops quickly started to be added. After a few businesses had done this, a ‘network effect’ emerged whereby other businesses started to add their own tunnels to the system, benefiting from the existing tunnels while also making them more useful. It became routine for downtown developers to tie new office blocks into the network. Over many decades, a sort of ‘pedestrian metro’ emerged.&lt;/p&gt;
    &lt;p&gt;Known as the Path, the network today stretches for more than 30 kilometers, linking nearly all central metro and railway stations with many of the major office buildings. Although the Path forms a unified network, it is not in unified ownership: it is divided into some 35 chunks, each of which is still owned and managed separately by descendants of whichever business originally contributed it. Many branches of the Path thus terminate in the lobbies of office buildings, with the curious result that these grand spaces function as metro entrances for the general public. The municipal authorities play only a limited regulatory role.&lt;/p&gt;
    &lt;p&gt;The Path is unlike the gloomy and malodorous underpasses with which most of us are familiar. It is expensively decorated and feels like a high-end shopping mall, which in a way it is. It is extremely clean and closely policed by dozens of private security teams. Until recently, it was thronged with shoppers: this use suffered in the pandemic and has not wholly recovered, but the Path is still used for its original commuting purpose by hundreds of thousands of people every weekday.&lt;/p&gt;
    &lt;p&gt;Urbanists are normally sceptical about pedestrian tunnels, fearing that they kill off street life. This is a reasonable concern and may often be a decisive reason to avoid them. But in a downtown like Toronto’s, human density is so enormous that this worry seems exaggerated. The pavements of Toronto are still busy, even on weekends, despite hundreds of thousands of pedestrians going underground. The carriageways are still congested with vehicles. It is facile to see this as a simple trade-off between walking and driving. The Path frees up space for bicycles, buses and trams as well as cars. It complements the metro and railway system by shaving off five minutes from the station-to-office walk. The Path may well be substantially net positive for a radial system of public and active transport.&lt;/p&gt;
    &lt;p&gt;The Path is also interesting for what it tells us about transport economics. It is exceptionally unusual in forming an integrated network without having been developed by a single body. The equivalent would be a railway that was created piecemeal by uncoordinated landowners, with each adding small chunks until it stretched from one city terminus to another – a thing which, to my knowledge, has never happened.&lt;/p&gt;
    &lt;p&gt;There are at least two reasons for the Path’s distinctive economics. First, pedestrian tunnels are clearly exceptionally valuable to individual landowners, such that they are prepared to bear the entire cost of providing transport infrastructure from which other landowners could subsequently benefit. It wasn’t necessary for the whole network to exist in order for the first landowners to get started: in downtown Toronto, pedestrian tunnels are so good that there was no first-mover problem. This is generally untrue of transport infrastructure: for example, any given stretch of a railway is virtually useless until the entire railway is finished, which is why public authorities usually have to plan entire railways from the start.&lt;/p&gt;
    &lt;p&gt;Second, pedestrian tunnels have an extremely high upper limit on how many people they can take. As a famous 2003 advert illustrated, a human travelling in a vehicle requires space for their vehicle as well as themselves. A human travelling by foot does not, and is thus much more spatially efficient. This means that additional chunks can be added to the Path without normally creating ‘pedestrian jams’ in the existing stretches: there is nearly always space for more people. This is often untrue for roads and railways, where planners constantly worry that adding additional branches will cause congestion on central trunks.&lt;/p&gt;
    &lt;p&gt;This means the Path’s model isn’t easily replicable for other transport modes: roads and railways really do need unified planning. But it isn’t clear why pedestrian metros should be impossible in other cities. In fact, to some extent, they do exist. Montreal has a similar system, while Tokyo, Osaka, Seoul, Hong Kong, Singapore and Houston have systems that resemble the Path in some respects. A few European cities also make considerable use of pedestrian tunnels, including Helsinki, Stockholm and Munich.&lt;/p&gt;
    &lt;p&gt;Overall, though, the list of pedestrian metros is short. It would be interesting to investigate why this is. Why aren’t there pedestrian metros in Manhattan, Boston, Shanghai, Vancouver, Paris and the City of London? Is there some reason why the economics are different? Is the soil already too full of tunnels and utilities? Or are there regulatory constraints that might, in principle, be fixable?&lt;/p&gt;
    &lt;p&gt;Downtowns were one of the great triumphs of nineteenth-century urbanism. Where they have not been destroyed by cars and modernism and civic mismanagement, they remain enormously valuable urban forms today. But they present, and have always presented, unique and interesting transport problems. Maybe pedestrian metros have a role to play in solving them.&lt;/p&gt;
    &lt;p&gt;Samuel is an editor at Works in Progress. He focuses on urbanism and cities. He has previously written The beauty of concrete, Making architecture easy, Against the survival of the prettiest, and In praise of pastiche for Works in Progress.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45101779</guid></item><item><title>RubyMine is now free for non-commercial use</title><link>https://blog.jetbrains.com/ruby/2025/09/rubymine-is-now-free-for-non-commercial-use/</link><description>&lt;doc fingerprint="c4b5fff47a7a3f3"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;RubyMine Is Now Free for Non-Commercial Use&lt;/head&gt;
    &lt;p&gt;Hold on to your helper methods – RubyMine is now FREE for non-commercial use! Whether you’re learning Ruby and Rails, pushing open-source forward, creating dev content, or building your passion project, we want to make sure you have the tools to enjoy what you do even more… for free.&lt;/p&gt;
    &lt;head rend="h2"&gt;Another chapter in the story&lt;/head&gt;
    &lt;p&gt;We recently introduced a new licensing model for WebStorm, RustRover, Rider, and CLion – making them free for non-commercial use. RubyMine is now joining the party! For commercial use, our existing licensing model still applies.&lt;/p&gt;
    &lt;head rend="h2"&gt;Why are we doing this?&lt;/head&gt;
    &lt;p&gt;We believe developers do their best work when the right tools are accessible. We’ve been listening closely to the Ruby and Rails community – their feedback, success, challenges, and passion for building with joy. Now, we’re making a change that reflects what we’ve heard.&lt;/p&gt;
    &lt;p&gt;By making RubyMine free for non-commercial use, we hope to lower the barrier to starting and help more people write clean, confident Ruby code from day one. It’s our way of supporting the unique Ruby community – from those who choose Ruby for their projects to maintainers of gems and frameworks who contribute to the Ruby ecosystem. Whether you’re debugging at midnight, crafting clever DSLs, or launching your first Rails app, RubyMine is here to help you build smarter (and crash less).&lt;/p&gt;
    &lt;head rend="h2"&gt;Commercial vs. non-commercial use&lt;/head&gt;
    &lt;p&gt;As defined in the Toolbox Subscription Agreement for Non-Commercial Use, commercial use means developing products and earning commercial benefits from your activities. However, certain categories are explicitly excluded from this definition. Common examples of non-commercial uses include learning and self-education, open-source contributions without earning commercial benefits, any form of content creation, and hobby development.&lt;/p&gt;
    &lt;p&gt;It’s important to note that, if you’re using a non-commercial license, you cannot opt out of the collection of anonymous usage statistics. We use this information to improve our products. The data we collect is exclusively that of anonymous feature usages of our IDEs. It is focused on what actions are performed and what types of functionality of the IDE are used. We do not collect any other data. This is similar to our Early Access Program (EAP) and is in compliance with our Privacy Policy.&lt;/p&gt;
    &lt;head rend="h2"&gt;FAQ&lt;/head&gt;
    &lt;p&gt;Below are answers to the most common questions. Check out the full FAQ for more information.&lt;/p&gt;
    &lt;head rend="h3"&gt;Licensing&lt;/head&gt;
    &lt;head rend="h4"&gt;What features are included under the free license?&lt;/head&gt;
    &lt;p&gt;With the new non-commercial license type, you can enjoy a full-featured IDE that is identical to its paid version. The only difference is in the Code With Me feature – you get Code With Me Community with your free license.&lt;/p&gt;
    &lt;head rend="h4"&gt;Which license should I choose if I want to use RubyMine for both non-commercial and commercial projects?&lt;/head&gt;
    &lt;p&gt;If you intend to use RubyMine for commercial development for which you will receive direct or indirect commercial advantage or monetary compensation within the meaning of the definitions provided in the Toolbox Subscription Agreement for Non-Commercial Use, you will need to purchase a commercial subscription (either individual or organizational). This license can then also be used for non-commercial development.&lt;/p&gt;
    &lt;head rend="h4"&gt;How do renewals and upgrades work now?&lt;/head&gt;
    &lt;p&gt;Non-commercial subscriptions are issued for one year and will automatically renew after that. However, for the renewal to happen, you must have used the assigned license at least once during the last 6 months of the subscription period. If it has been more than 6 months since you last used an IDE activated with this type of license and the renewal did not occur automatically, you can request a new non-commercial subscription again at any time.&lt;/p&gt;
    &lt;head rend="h4"&gt;Am I eligible for a refund if I’ve already bought a paid subscription but do non-commercial development?&lt;/head&gt;
    &lt;p&gt;If you’re unsure whether you qualify for a refund, you’ll find full details of our policy here. Please note that if you also work on projects that qualify as commercial usage, you can’t use the free license for them.&lt;/p&gt;
    &lt;head rend="h3"&gt;Anonymous data collection&lt;/head&gt;
    &lt;head rend="h4"&gt;Does my IDE send any data to JetBrains?&lt;/head&gt;
    &lt;p&gt;The terms of the non-commercial agreement assume that the product may also electronically send JetBrains anonymized statistics (IDE telemetry) related to your usage of the product’s features. This information may include but is not limited to frameworks, file templates used in the product, actions invoked, and other interactions with the product’s features. This information does not contain personal data.&lt;/p&gt;
    &lt;head rend="h4"&gt;Is there a way to opt out of sending anonymized statistics?&lt;/head&gt;
    &lt;p&gt;We appreciate that this might not be convenient for everyone, but there is unfortunately no way to opt out of sending anonymized statistics to JetBrains under the terms of the Toolbox agreement for non-commercial use. The only way to opt out is by switching to either a paid subscription or one of the complimentary options mentioned here.&lt;/p&gt;
    &lt;head rend="h3"&gt;Getting a non-commercial subscription&lt;/head&gt;
    &lt;head rend="h4"&gt;What should I do to apply for this subscription?&lt;/head&gt;
    &lt;p&gt;It can be easily done right inside your IDE:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Install RubyMine and run it.&lt;/item&gt;
      &lt;item&gt;Upon startup, there will be a license dialog box where you can choose the Non-commercial use option.&lt;/item&gt;
      &lt;item&gt;Log in to your JetBrains account or create a new one.&lt;/item&gt;
      &lt;item&gt;Accept the Toolbox Subscription Agreement for Non-Commercial Use.&lt;/item&gt;
      &lt;item&gt;Enjoy development in your IDE.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;If you’ve already started a trial period or have activated your IDE using a paid license, you still can switch to a non-commercial subscription by following these steps:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Go to Help | Register.&lt;/item&gt;
      &lt;item&gt;In the window that opens, click on the Deactivate License button.&lt;/item&gt;
      &lt;item&gt;Choose Non-commercial use.&lt;/item&gt;
      &lt;item&gt;Log in to your JetBrains account or create a new one.&lt;/item&gt;
      &lt;item&gt;Accept the Toolbox Subscription Agreement for Non-Commercial Use.&lt;/item&gt;
      &lt;item&gt;Enjoy development in your IDE.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h4"&gt;I don’t see the Non-commercial use option in my IDE. What should I do?&lt;/head&gt;
    &lt;p&gt;The most likely explanation for this is that you’re using an older version of RubyMine. Unfortunately, we don’t support obtaining the non-commercial license for any releases prior to RubyMine 2025.2.1.&lt;/p&gt;
    &lt;p&gt;That’s it for today! If you don’t find an answer to your question, feel free to leave a comment or contact us at sales@jetbrains.com.&lt;/p&gt;
    &lt;p&gt;The RubyMine team&lt;/p&gt;
    &lt;p&gt;JetBrains&lt;/p&gt;
    &lt;p&gt;Make it happen. With code.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45102186</guid></item><item><title>Show HN: Moribito – A TUI for LDAP Viewing/Queries</title><link>https://github.com/ericschmar/moribito</link><description>&lt;doc fingerprint="3019ca5b5f87b9dc"&gt;
  &lt;main&gt;
    &lt;p&gt;A terminal-based LDAP server explorer built with Go and BubbleTea, providing an interactive interface for browsing LDAP directory trees, viewing records, and executing custom queries.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;🌲 Interactive Tree Navigation: Browse LDAP directory structure with keyboard/mouse&lt;/item&gt;
      &lt;item&gt;📄 Record Viewer: View detailed LDAP entry attributes&lt;/item&gt;
      &lt;item&gt;📋 Clipboard Integration: Copy attribute values to system clipboard&lt;/item&gt;
      &lt;item&gt;🔍 Custom Query Interface: Execute custom LDAP queries with real-time results&lt;/item&gt;
      &lt;item&gt;📖 Paginated Results: Efficient pagination for large result sets with automatic loading&lt;/item&gt;
      &lt;item&gt;⚙️ Flexible Configuration: Support for config files and command-line options&lt;/item&gt;
      &lt;item&gt;🔐 Secure Authentication: Support for SSL/TLS and various authentication methods&lt;/item&gt;
      &lt;item&gt;🔄 Auto-Update Notifications: Optional checking for newer releases from GitHub&lt;/item&gt;
      &lt;item&gt;🎨 Modern TUI: Clean, intuitive interface built with BubbleTea&lt;/item&gt;
      &lt;item&gt;🔀 Multiple Connections: Save and switch between multiple LDAP server configurations&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Initial startup screen with connection options&lt;/p&gt;
    &lt;p&gt;_Interface for adding new LDAP Connections&lt;/p&gt;
    &lt;p&gt;Browse LDAP directory structure with keyboard/mouse navigation&lt;/p&gt;
    &lt;p&gt;View detailed LDAP entry attributes with clipboard integration&lt;/p&gt;
    &lt;p&gt;Execute custom LDAP queries with real-time results and formatting&lt;/p&gt;
    &lt;code&gt;brew install ericschmar/tap/moribito&lt;/code&gt;
    &lt;code&gt;brew install https://raw.githubusercontent.com/ericschmar/moribito/main/homebrew/moribito.rb&lt;/code&gt;
    &lt;p&gt;Download the latest pre-built binary from GitHub Releases:&lt;/p&gt;
    &lt;p&gt;Linux/Unix:&lt;/p&gt;
    &lt;code&gt;curl -sSL https://raw.githubusercontent.com/ericschmar/moribito/main/scripts/install.sh | bash&lt;/code&gt;
    &lt;p&gt;macOS:&lt;/p&gt;
    &lt;code&gt;curl -sSL https://raw.githubusercontent.com/ericschmar/moribito/main/scripts/install-macos.sh | bash&lt;/code&gt;
    &lt;p&gt;Windows (PowerShell):&lt;/p&gt;
    &lt;code&gt;irm https://raw.githubusercontent.com/ericschmar/moribito/main/scripts/install.ps1 | iex&lt;/code&gt;
    &lt;p&gt;The install scripts will:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Download the appropriate binary for your platform&lt;/item&gt;
      &lt;item&gt;Install it to the system PATH&lt;/item&gt;
      &lt;item&gt;Create OS-specific configuration directories&lt;/item&gt;
      &lt;item&gt;Generate sample configuration files&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;# Linux x86_64
curl -L https://github.com/ericschmar/moribito/releases/latest/download/moribito-linux-amd64 -o moribito
chmod +x moribito
sudo mv moribito /usr/local/bin/

# Linux ARM64
curl -L https://github.com/ericschmar/moribito/releases/latest/download/moribito-linux-arm64 -o moribito
chmod +x moribito
sudo mv moribito /usr/local/bin/

# macOS Intel
curl -L https://github.com/ericschmar/moribito/releases/latest/download/moribito-darwin-amd64 -o moribito
chmod +x moribito
sudo mv moribito /usr/local/bin/

# macOS Apple Silicon
curl -L https://github.com/ericschmar/moribito/releases/latest/download/moribito-darwin-arm64 -o moribito
chmod +x moribito
sudo mv moribito /usr/local/bin/&lt;/code&gt;
    &lt;p&gt;For Windows, download &lt;code&gt;moribito-windows-amd64.exe&lt;/code&gt; from the releases page.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Note: Homebrew is also available for Windows via WSL (Windows Subsystem for Linux). If you have WSL installed, you can use the Homebrew installation method above.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;code&gt;git clone https://github.com/ericschmar/moribito
cd moribito
go build -o moribito cmd/moribito/main.go&lt;/code&gt;
    &lt;code&gt;# Connect with command line options
moribito -host ldap.example.com -base-dn "dc=example,dc=com" -user "cn=admin,dc=example,dc=com"

# Enable automatic update checking
moribito -check-updates -host ldap.example.com -base-dn "dc=example,dc=com"

# Use a configuration file
moribito -config /path/to/config.yaml

# Get help
moribito -help&lt;/code&gt;
    &lt;p&gt;Moribito will automatically look for configuration files in OS-specific locations:&lt;/p&gt;
    &lt;p&gt;Linux/Unix:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;~/.config/moribito/config.yaml&lt;/code&gt;(XDG config directory)&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;~/.moribito/config.yaml&lt;/code&gt;(user directory)&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;~/.moribito.yaml&lt;/code&gt;(user home file)&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;macOS:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;~/.moribito/config.yaml&lt;/code&gt;(user directory)&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;~/Library/Application Support/moribito/config.yaml&lt;/code&gt;(macOS standard)&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;~/.moribito.yaml&lt;/code&gt;(user home file)&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Windows:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;%APPDATA%\moribito\config.yaml&lt;/code&gt;(Windows standard)&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;%USERPROFILE%\.moribito.yaml&lt;/code&gt;(user home file)&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;All platforms also check:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;./config.yaml&lt;/code&gt;(current directory)&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Use the built-in command to create a configuration file:&lt;/p&gt;
    &lt;code&gt;moribito --create-config&lt;/code&gt;
    &lt;p&gt;Or manually create a configuration file:&lt;/p&gt;
    &lt;code&gt;ldap:
    host: "ldap.example.com"
    port: 389
    base_dn: "dc=example,dc=com"
    use_ssl: false
    use_tls: false
    bind_user: "cn=admin,dc=example,dc=com"
    bind_pass: "your-password"
pagination:
    page_size: 50 # Number of entries per page
retry:
    enabled: true # Connection retries (default: true)
    max_attempts: 3 # Retry attempts (default: 3)
    initial_delay_ms: 500 # Initial delay (default: 500)
    max_delay_ms: 5000 # Max delay cap (default: 5000)&lt;/code&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Tab - Switch between views (Tree → Record → Query → Tree)&lt;/item&gt;
      &lt;item&gt;1/2/3 - Jump directly to Tree/Record/Query view&lt;/item&gt;
      &lt;item&gt;q - Quit application&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;↑/↓ or k/j - Navigate up/down&lt;/item&gt;
      &lt;item&gt;Page Up/Down - Navigate by page&lt;/item&gt;
      &lt;item&gt;Home/End - Jump to top/bottom&lt;/item&gt;
      &lt;item&gt;→ or l - Expand node (load children)&lt;/item&gt;
      &lt;item&gt;← or h - Collapse node&lt;/item&gt;
      &lt;item&gt;Enter - View record details&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;↑/↓ or k/j - Scroll up/down&lt;/item&gt;
      &lt;item&gt;Page Up/Down - Scroll by page&lt;/item&gt;
      &lt;item&gt;Home/End - Jump to top/bottom&lt;/item&gt;
      &lt;item&gt;c - Copy current attribute value to clipboard&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;/ or Escape - Focus query input&lt;/item&gt;
      &lt;item&gt;Ctrl+Enter or Ctrl+J - Execute query&lt;/item&gt;
      &lt;item&gt;Ctrl+F - Format query with proper indentation&lt;/item&gt;
      &lt;item&gt;Escape - Clear query&lt;/item&gt;
      &lt;item&gt;Ctrl+V - Paste from clipboard&lt;/item&gt;
      &lt;item&gt;↑/↓ - Navigate results (when not in input mode)&lt;/item&gt;
      &lt;item&gt;Page Up/Down - Navigate by page (automatically loads more results)&lt;/item&gt;
      &lt;item&gt;Enter - View selected record&lt;/item&gt;
    &lt;/list&gt;
    &lt;quote&gt;
      &lt;p&gt;Note: The Query View uses automatic pagination to efficiently handle large result sets. When you scroll near the end of loaded results, the next page is automatically fetched from the LDAP server.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;The Ctrl+F key combination formats complex LDAP queries with proper indentation for better readability:&lt;/p&gt;
    &lt;code&gt;# Before formatting:
(&amp;amp;(objectClass=person)(|(cn=john*)(sn=smith*))(department=engineering))

# After formatting (Ctrl+F):
(&amp;amp;
  (objectClass=person)
  (|
    (cn=john*)
    (sn=smith*)
  )
  (department=engineering)
)
&lt;/code&gt;
    &lt;p&gt;The tool supports various LDAP authentication methods:&lt;/p&gt;
    &lt;code&gt;bind_user: "cn=admin,dc=example,dc=com"
bind_pass: "password"&lt;/code&gt;
    &lt;code&gt;bind_user: "uid=john,ou=users,dc=example,dc=com"
bind_pass: "password"&lt;/code&gt;
    &lt;code&gt;bind_user: "john@example.com"
bind_pass: "password"&lt;/code&gt;
    &lt;code&gt;# Leave bind_user and bind_pass empty or omit them&lt;/code&gt;
    &lt;code&gt;ldap:
    host: "ldaps.example.com"
    port: 636
    use_ssl: true&lt;/code&gt;
    &lt;code&gt;ldap:
    host: "ldap.example.com"
    port: 389
    use_tls: true&lt;/code&gt;
    &lt;p&gt;In the Query view, you can execute custom LDAP filters:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;(objectClass=*)&lt;/code&gt;- All objects&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;(objectClass=person)&lt;/code&gt;- All person objects&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;(cn=john*)&lt;/code&gt;- Objects with cn starting with "john"&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;(&amp;amp;(objectClass=person)(mail=*@example.com))&lt;/code&gt;- People with example.com emails&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;(|(cn=admin)(uid=admin))&lt;/code&gt;- Objects with cn=admin OR uid=admin&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;For complex nested queries, use Ctrl+F to automatically format them for better readability:&lt;/p&gt;
    &lt;p&gt;Simple queries remain unchanged:&lt;/p&gt;
    &lt;code&gt;(objectClass=person)
&lt;/code&gt;
    &lt;p&gt;Complex queries are formatted with proper indentation:&lt;/p&gt;
    &lt;code&gt;# Original
(&amp;amp;(objectClass=person)(|(cn=john*)(sn=smith*))(department=engineering))

# After Ctrl+F
(&amp;amp;
  (objectClass=person)
  (|
    (cn=john*)
    (sn=smith*)
  )
  (department=engineering)
)
&lt;/code&gt;
    &lt;p&gt;LDAP CLI uses intelligent pagination to provide optimal performance when working with large directories:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Default Page Size: 50 entries per page&lt;/item&gt;
      &lt;item&gt;Configurable: Adjust via config file or &lt;code&gt;--page-size&lt;/code&gt;flag&lt;/item&gt;
      &lt;item&gt;On-Demand Loading: Next pages load automatically as you scroll&lt;/item&gt;
      &lt;item&gt;Memory Efficient: Only loaded entries are kept in memory&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;# Command line override
moribito --page-size 100 --host ldap.example.com

# Configuration file
pagination:
  page_size: 25  # Smaller pages for slower networks&lt;/code&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Smaller page sizes (10-25) for slower networks or limited LDAP servers&lt;/item&gt;
      &lt;item&gt;Larger page sizes (100-200) for fast networks and powerful LDAP servers&lt;/item&gt;
      &lt;item&gt;Use specific queries to reduce result sets instead of browsing all entries&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;LDAP CLI includes automatic retry functionality to handle connection failures gracefully:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Default: Enabled with 3 retry attempts&lt;/item&gt;
      &lt;item&gt;Exponential Backoff: Delay doubles between attempts (500ms → 1s → 2s → ...)&lt;/item&gt;
      &lt;item&gt;Connection Recovery: Automatically re-establishes broken connections&lt;/item&gt;
      &lt;item&gt;Smart Detection: Only retries connection-related errors, not authentication failures&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;# Default retry settings (automatically applied)
# No configuration needed - retries work out of the box&lt;/code&gt;
    &lt;code&gt;# Custom retry configuration
retry:
    enabled: true
    max_attempts: 5 # Maximum retry attempts (default: 3)
    initial_delay_ms: 1000 # Initial delay in milliseconds (default: 500)
    max_delay_ms: 10000 # Maximum delay cap (default: 5000)&lt;/code&gt;
    &lt;code&gt;# Disable retries if needed
retry:
    enabled: false&lt;/code&gt;
    &lt;p&gt;The system automatically retries for:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Network timeouts and connection drops&lt;/item&gt;
      &lt;item&gt;Connection refused errors&lt;/item&gt;
      &lt;item&gt;Server unavailable responses&lt;/item&gt;
      &lt;item&gt;Connection reset by peer&lt;/item&gt;
      &lt;item&gt;LDAP server down errors&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Authentication errors, invalid queries, and permission issues are not retried.&lt;/p&gt;
    &lt;code&gt;# Build for current platform
make build

# Build for all platforms
make build-all

# Clean build artifacts
make clean&lt;/code&gt;
    &lt;code&gt;# Format code
make fmt

# Run linter
make lint

# Run tests
make test

# Run all CI checks (format, lint, test, build)
make ci&lt;/code&gt;
    &lt;code&gt;go test ./...&lt;/code&gt;
    &lt;p&gt;This project uses GitHub Actions for CI/CD:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;p&gt;CI Workflow: Runs on every push and pull request to&lt;/p&gt;&lt;code&gt;main&lt;/code&gt;and&lt;code&gt;develop&lt;/code&gt;branches&lt;list rend="ul"&gt;&lt;item&gt;Code formatting verification&lt;/item&gt;&lt;item&gt;Linting (with warnings)&lt;/item&gt;&lt;item&gt;Testing&lt;/item&gt;&lt;item&gt;Building for current platform&lt;/item&gt;&lt;item&gt;Multi-platform build artifacts (on main branch pushes)&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Release Workflow: Triggered by version tags (e.g.,&lt;/p&gt;&lt;code&gt;v1.0.0&lt;/code&gt;)&lt;list rend="ul"&gt;&lt;item&gt;Runs full CI checks&lt;/item&gt;&lt;item&gt;Builds for all platforms (Linux amd64/arm64, macOS amd64/arm64, Windows amd64)&lt;/item&gt;&lt;item&gt;Creates GitHub releases with binaries and checksums&lt;/item&gt;&lt;item&gt;Generates installation instructions&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;BubbleTea - TUI framework&lt;/item&gt;
      &lt;item&gt;Lipgloss - Styling&lt;/item&gt;
      &lt;item&gt;go-ldap - LDAP client&lt;/item&gt;
      &lt;item&gt;golang.org/x/term - Terminal utilities&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This project includes full Homebrew support for easy installation on macOS and Linux. See the homebrew/ directory for:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Ready-to-use Homebrew formula&lt;/item&gt;
      &lt;item&gt;Formula generation and maintenance scripts&lt;/item&gt;
      &lt;item&gt;Documentation for creating custom taps&lt;/item&gt;
      &lt;item&gt;Instructions for submitting to homebrew-core&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This project follows Semantic Versioning. See docs/versioning.md for details on the release process.&lt;/p&gt;
    &lt;p&gt;Comprehensive documentation is available using DocPress. To build and view the documentation:&lt;/p&gt;
    &lt;code&gt;# Build static documentation website
make docs

# Serve documentation locally with live reload
make docs-serve&lt;/code&gt;
    &lt;p&gt;The documentation covers:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Installation and setup&lt;/item&gt;
      &lt;item&gt;Usage guide with examples&lt;/item&gt;
      &lt;item&gt;Interface navigation&lt;/item&gt;
      &lt;item&gt;Development setup&lt;/item&gt;
      &lt;item&gt;Contributing guidelines&lt;/item&gt;
      &lt;item&gt;API reference and advanced features&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Visit the generated documentation site for the complete guide.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Fork the repository&lt;/item&gt;
      &lt;item&gt;Create your feature branch (&lt;code&gt;git checkout -b feature/amazing-feature&lt;/code&gt;)&lt;/item&gt;
      &lt;item&gt;Commit your changes (&lt;code&gt;git commit -m 'Add some amazing feature'&lt;/code&gt;)&lt;/item&gt;
      &lt;item&gt;Push to the branch (&lt;code&gt;git push origin feature/amazing-feature&lt;/code&gt;)&lt;/item&gt;
      &lt;item&gt;Open a Pull Request&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This project is licensed under the MIT License - see the LICENSE file for details.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45102664</guid></item><item><title>Imgur's Community Is in Full Revolt Against Its Owner</title><link>https://www.404media.co/imgurs-community-is-in-full-revolt-against-its-owner/</link><description>&lt;doc fingerprint="7480f549837feedf"&gt;
  &lt;main&gt;
    &lt;p&gt;The front page of Imgur, a popular image hosting and social media site, is full of pictures of John Oliver raising his middle finger and telling MediaLab AI, the site’s parent company, “fuck you.” Imgurians, as the site’s users call themselves, telling their business daddy to go to hell is the end result of a years-long degradation of the website. The Imgur story is one a classic case of enshitification,&lt;/p&gt;
    &lt;p&gt;Imgur began life in 2009 when Ohio University student Alan Schaaf got tired of how hard it was to upload and host images on the internet. He created Imgur as a simple one stop shop for image hosting and the service took off. It was a place where people could host images they wanted to share across multiple services and became ubiquitous on sites like Reddit.&lt;/p&gt;
    &lt;p&gt;As the internet evolved, most of the rest of the internet got its act together and platforms built their own image sharing infrastructure and people used Imgur less. But the site still had a community of millions of people who shared images to the site every day. It was a social media based around images and upvotes, with its own in-jokes, memes, and norms.&lt;/p&gt;
    &lt;p&gt;In 2021, a media holding company called MediaLab AI acquired Imgur and Schaaf left. MediaLab AI also owns Genius and World Star and on its website, the company bills itself as a place where advertisers can “reach audiences at scale, on platforms that build community and influence culture.”&lt;/p&gt;
    &lt;p&gt;The community and culture of Imgur, which MedialLab AI claims is 41 million strong, is pissed.&lt;/p&gt;
    &lt;p&gt;For the last few days, the front page of Imgur (which cultivates the day’s “most viral posts”) has been full of anti MediaLab AI sentiment. Imgurian VoidForScreaming posted the first instance of the John Oliver meme several days ago, and it’s become a favorite of the community, but there are also calls to flood the servers and crash the site, and a list of grievances Imgurians broadly agree brought them to the place they’re in now.&lt;/p&gt;
    &lt;p&gt;GhostTater, a longtime Imgurian, told me that the protest was about a confluence of things including a breakdown of the basic features of the site and the disappearance of human moderators.&lt;/p&gt;
    &lt;p&gt;“The moderators on Imgur have always been active members of the community. Many were effectively public figures, and their sudden group absence was immediately noticed,” he said. “Several very well-known mods posted generic departure messages, smelling strongly of Legal Department approval. These mods had many friends and acquaintances on the site, and while some are still visiting the site as users, they have gone completely silent.”&lt;/p&gt;
    &lt;p&gt;A former Imgur employee who spoke with 404 Media on the condition that we preserve their anonymity because they’re afraid of retaliation from MediaLab AI said that several people on the Imgur team were laid off without notice. Others were moved to MediaLab’s internal teams. “To the best of my knowledge, no employees are remaining solely focused on Imgur. Imgur's social media has been silent for a month,” the employee said. “As far as I am aware, the dedicated part-time moderation team was laid off sometime in the last 8 months, including the full-time moderation manager.”&lt;/p&gt;
    &lt;p&gt;Imgurians are convinced that MediaLab AI has replaced those moderators with unreliable AI systems. The Community &amp;amp; Content Policy on MediaLab AI’s website says it employs human moderators but also uses AI technologies. A common post in the past few days is Imgurians sharing the weird things they’ve been banned for, including one who made the comment “tell me more” under a post and others who’ve seen their John Olivers removed.&lt;/p&gt;
    &lt;p&gt;“There were no humans responding to appeals or concerns,” GhostTater said. “Once the protest started, many users complained about posts being deleted and suspensions or bans being handed out when those posts were critical of MediaLab but not in violation of the written rules.”&lt;/p&gt;
    &lt;p&gt;But this isn’t just about bad moderation. Multiple posts on Imgur also called out the breakdown of the site’s basic functionality. GhostTater told me he’d personally experienced the broken notification system and repeated failures of images to upload. “The big one (to me) is the fact that hosted video wouldn’t play for viewers who were not logged in to Imgur,” he said. “The site began as an image hosting site, a place to upload your images and get a link, so that one could share images.”&lt;/p&gt;
    &lt;p&gt;MediaLab AI did not respond to 404 Media’s request for comment. “MediaLab’s presence has seemed to many users to fall somewhere between casual institutional indifference and ruthless mechanization. Many report, and resent, feeling explicitly harvested for profit,” GhostTater said.&lt;/p&gt;
    &lt;p&gt;Like all companies, MediaLab AI is driven by profit. It makes money as a media holding company, scooping up popular websites and plastering them with ads. It also owns the lyrics sharing site Genius and the once-influential WorldStarHipHop. It’s also being sued by many of the people it bought these sites from, including Imgur’s founder. Schaaf and others have accused MediaLab AI of withholding payments owed to them as part of the sales deals they made.&lt;/p&gt;
    &lt;p&gt;The John Olivers and other protest memes keep flowing. Some have set up alternative image sharing sites. “There is a movement rattling around in User Submitted calling for a boycott day, suggesting that all users stay off the site on September first,” GhostTater said. “It has some steam, but we will have to see if it gets enough buy-in to make an impact.”&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45102905</guid></item><item><title>You don't want to hire "the best engineers"</title><link>https://www.otherbranch.com/shared/blog/no-you-dont-want-to-hire-the-best-engineers</link><description>&lt;doc fingerprint="ae39800658847ffc"&gt;
  &lt;main&gt;
    &lt;quote&gt;
      &lt;p&gt;âWe only want to hire the best engineersâ&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;I hear this from almost every client I speak to. So does every other recruiter.&lt;/p&gt;
    &lt;p&gt;Seriously - just say those eight words to any room full of recruiting people, and everyone will give a wry chuckle and roll their eyes. We've all heard it a million times.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;âWe only want to hire the best engineers.â&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;No. No, you do not.&lt;/p&gt;
    &lt;p&gt;The best engineers make more than your entire payroll. They have opinions on tech debt and timelines. They have remote jobs, if they want them. They donât go âoh, well, this is your third company, so I guess Iâll defer to you on all product decisionsâ. They care about comp, a trait you consider disqualifying. They can care about work-life balance, because theyâre not desperate enough to feel the need not to. And however successful your company has been so far, they have other options they like better.&lt;/p&gt;
    &lt;p&gt;Youâre not stupid. If I asked you, point blank, âdo you actually think the best engineers in the world would give your company a second thought,â I bet you could say âwell, no, obviously notâ.&lt;/p&gt;
    &lt;p&gt;But you donât act like it.&lt;/p&gt;
    &lt;p&gt;You lock in the same set of criteria as every other startup. Experience at early stage. Highly independent. In-office in the Bay Area. Not too âsalary motivatedâ. Donât even apply if you want a 40h/week job - we work hard and play hard.&lt;/p&gt;
    &lt;p&gt;Four months later, you havenât found a good founding engineer. Do you know how long four months is in the life of a young startup? Thatâs an eternity, and youâve spent it in stasis.&lt;/p&gt;
    &lt;p&gt;Hiring is a negotiation, and youâre acting like youâre holding all the cards when you aren't. Youâre looking for a highly competitive candidate pool, and youâre not being competitive: youâre just checking the same baselines as everybody else. You're acting like a replacement-level employer and expecting more than replacement-level candidates.&lt;/p&gt;
    &lt;p&gt;Would you rather spend four months in stasis waiting for a senior candidate who hits the ground running on day one, or hire a skilled midlevel hacker who will be at full capacity in two weeks immediately?&lt;/p&gt;
    &lt;p&gt;Would you rather spend four months in stasis waiting for a 50h/week candidate, or have a 40h/week candidate now?&lt;/p&gt;
    &lt;p&gt;Would you rather be a green bar in this chart, or a red one?&lt;/p&gt;
    &lt;p&gt;You donât ask yourself these questions. You say âI want a candidate with these traits,â and sit on your hands until one materializes, until you run out of money, or - more likely - until someone manages to worm through your unrealistic expectations and convince you to compromise for them.&lt;/p&gt;
    &lt;p&gt;If you had accepted compromise, you could have opened the floodgates on day one and had your pick of ten great-but-not-perfect candidates. Instead, you waited months and settled for one.&lt;/p&gt;
    &lt;p&gt;When you accept that you need a great engineer, and not the best engineer, you can deal with the trade-offs consciously. What traits are actually important? How much are you willing to give up to get them? Whatâs the dollar value of a hire this month versus next month? âWhat actually matters today?â is the most important question a startup can ask, and you haven't applied it to one of the most important aspects of running a company!&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;"Well, we're a little different from other companies, because we have really high standards."&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Does it sound like you're different?&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;"We just raised a very exciting Series A!"&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;So did literally a thousand other companies. There was $26B in early stage venture investment last quarter, and you can do the math as to how much of that your $10M raise occupies. The hires you need aren't looking at your company as the slam-dunk success that a founder necessarily needs to believe that it is. Maybe they will once they talk to you, but that's later - at the top of your funnel, you're just another face in the crowd, and you need to act like it.&lt;/p&gt;
    &lt;p&gt;Iâm not telling you to hire people who arenât good. Iâm not even telling you that the traits you want arenât good things to look for. Iâm not telling you to actually compromise on quality. Iâm telling you that trying to hire the best engineers is the enemy of actually hiring great ones. Youâre going to have to give up something (possibly time, possibly comp, possibly workplace policy) to make the hire you want.&lt;/p&gt;
    &lt;p&gt;The longer you arenât thinking about what to give up, the more youâre implicitly choosing to give up time, the thing startups treasure more than anything else. And youâre giving up time to - what, play it safe?&lt;/p&gt;
    &lt;p&gt;The default outcome for a startup is always failure. You took a risk by even starting one. You ship things that might be broken all the time, because you know that speed is more important than perfection. You take moonshots, because you know that big wins matter more than small losses. And then you give up months of time because you refuse to apply the same philosophy to hiring!&lt;/p&gt;
    &lt;p&gt;I run a recruiting company. Itâs no skin off my back if you want to be irrational about hiring. Please, by all means, continue. Youâre leaving a thousand great engineers to sit in my database instead of your ATS, and I would much rather you pay me 40 grand to find them than find them yourself.&lt;/p&gt;
    &lt;p&gt;Or you can act like the scrappy realist you probably like to think you are, stop insisting on perfection, and move fast.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45103646</guid></item><item><title>Americans Lose Faith That Hard Work Leads to Economic Gains, WSJ-NORC Poll Finds</title><link>https://www.wsj.com/economy/wsj-norc-economic-poll-73bce003</link><description></description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45104082</guid></item></channel></rss>