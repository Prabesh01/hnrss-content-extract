<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Hacker News: Front Page</title><link>https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml</link><description>Hacker News RSS</description><atom:link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Tue, 02 Sep 2025 19:32:19 +0000</lastBuildDate><item><title>Toronto‚Äôs network of pedestrian tunnels</title><link>https://www.worksinprogress.news/p/torontos-underground-labyrinth</link><description>&lt;doc fingerprint="b1495316a5e1a27c"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Toronto's underground labyrinth&lt;/head&gt;
    &lt;head rend="h3"&gt;How Canada's largest city developed a 30 kilometer network of pedestrian tunnels&lt;/head&gt;
    &lt;p&gt;Toronto has one of the world‚Äôs great commercial downtowns. Two metro lines, eight suburban heavy railways, an extensive bus system, a highway, and North America‚Äôs greatest surviving tram network all converge on a tiny area by the shores of Lake Ontario. Hundreds of thousands of commuters pour into the downtown every day, filling the great towers that line its nineteenth-century streets.&lt;/p&gt;
    &lt;p&gt;As with many downtowns, this causes congestion. Streets and pavements are thronged at peak times. Bicycles, pedestrians, cars, trams and buses compete for scarce space. As with all traditional radial transport systems, there is an enormous concentration of movement in a tiny area. Pedestrians make slow progress across the urban fabric, stopping every block for a minute or two to wait to cross the road.&lt;/p&gt;
    &lt;p&gt;In the early twentieth century, Toronto‚Äôs businesses developed a novel response to this. They began to create pedestrian tunnels from their offices to the metro stations so that their employees could flow in smoothly, avoiding the congested streets (and, in winter, the cold). Shops quickly started to be added. After a few businesses had done this, a ‚Äònetwork effect‚Äô emerged whereby other businesses started to add their own tunnels to the system, benefiting from the existing tunnels while also making them more useful. It became routine for downtown developers to tie new office blocks into the network. Over many decades, a sort of ‚Äòpedestrian metro‚Äô emerged.&lt;/p&gt;
    &lt;p&gt;Known as the Path, the network today stretches for more than 30 kilometers, linking nearly all central metro and railway stations with many of the major office buildings. Although the Path forms a unified network, it is not in unified ownership: it is divided into some 35 chunks, each of which is still owned and managed separately by descendants of whichever business originally contributed it. Many branches of the Path thus terminate in the lobbies of office buildings, with the curious result that these grand spaces function as metro entrances for the general public. The municipal authorities play only a limited regulatory role.&lt;/p&gt;
    &lt;p&gt;The Path is unlike the gloomy and malodorous underpasses with which most of us are familiar. It is expensively decorated and feels like a high-end shopping mall, which in a way it is. It is extremely clean and closely policed by dozens of private security teams. Until recently, it was thronged with shoppers: this use suffered in the pandemic and has not wholly recovered, but the Path is still used for its original commuting purpose by hundreds of thousands of people every weekday.&lt;/p&gt;
    &lt;p&gt;Urbanists are normally sceptical about pedestrian tunnels, fearing that they kill off street life. This is a reasonable concern and may often be a decisive reason to avoid them. But in a downtown like Toronto‚Äôs, human density is so enormous that this worry seems exaggerated. The pavements of Toronto are still busy, even on weekends, despite hundreds of thousands of pedestrians going underground. The carriageways are still congested with vehicles. It is facile to see this as a simple trade-off between walking and driving. The Path frees up space for bicycles, buses and trams as well as cars. It complements the metro and railway system by shaving off five minutes from the station-to-office walk. The Path may well be substantially net positive for a radial system of public and active transport.&lt;/p&gt;
    &lt;p&gt;The Path is also interesting for what it tells us about transport economics. It is exceptionally unusual in forming an integrated network without having been developed by a single body. The equivalent would be a railway that was created piecemeal by uncoordinated landowners, with each adding small chunks until it stretched from one city terminus to another ‚Äì a thing which, to my knowledge, has never happened.&lt;/p&gt;
    &lt;p&gt;There are at least two reasons for the Path‚Äôs distinctive economics. First, pedestrian tunnels are clearly exceptionally valuable to individual landowners, such that they are prepared to bear the entire cost of providing transport infrastructure from which other landowners could subsequently benefit. It wasn‚Äôt necessary for the whole network to exist in order for the first landowners to get started: in downtown Toronto, pedestrian tunnels are so good that there was no first-mover problem. This is generally untrue of transport infrastructure: for example, any given stretch of a railway is virtually useless until the entire railway is finished, which is why public authorities usually have to plan entire railways from the start.&lt;/p&gt;
    &lt;p&gt;Second, pedestrian tunnels have an extremely high upper limit on how many people they can take. As a famous 2003 advert illustrated, a human travelling in a vehicle requires space for their vehicle as well as themselves. A human travelling by foot does not, and is thus much more spatially efficient. This means that additional chunks can be added to the Path without normally creating ‚Äòpedestrian jams‚Äô in the existing stretches: there is nearly always space for more people. This is often untrue for roads and railways, where planners constantly worry that adding additional branches will cause congestion on central trunks.&lt;/p&gt;
    &lt;p&gt;This means the Path‚Äôs model isn‚Äôt easily replicable for other transport modes: roads and railways really do need unified planning. But it isn‚Äôt clear why pedestrian metros should be impossible in other cities. In fact, to some extent, they do exist. Montreal has a similar system, while Tokyo, Osaka, Seoul, Hong Kong, Singapore and Houston have systems that resemble the Path in some respects. A few European cities also make considerable use of pedestrian tunnels, including Helsinki, Stockholm and Munich.&lt;/p&gt;
    &lt;p&gt;Overall, though, the list of pedestrian metros is short. It would be interesting to investigate why this is. Why aren‚Äôt there pedestrian metros in Manhattan, Boston, Shanghai, Vancouver, Paris and the City of London? Is there some reason why the economics are different? Is the soil already too full of tunnels and utilities? Or are there regulatory constraints that might, in principle, be fixable?&lt;/p&gt;
    &lt;p&gt;Downtowns were one of the great triumphs of nineteenth-century urbanism. Where they have not been destroyed by cars and modernism and civic mismanagement, they remain enormously valuable urban forms today. But they present, and have always presented, unique and interesting transport problems. Maybe pedestrian metros have a role to play in solving them.&lt;/p&gt;
    &lt;p&gt;Samuel is an editor at Works in Progress. He focuses on urbanism and cities. He has previously written The beauty of concrete, Making architecture easy, Against the survival of the prettiest, and In praise of pastiche for Works in Progress.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45101779</guid></item><item><title>Show HN: Moribito ‚Äì A TUI for LDAP Viewing/Queries</title><link>https://github.com/ericschmar/moribito</link><description>&lt;doc fingerprint="3019ca5b5f87b9dc"&gt;
  &lt;main&gt;
    &lt;p&gt;A terminal-based LDAP server explorer built with Go and BubbleTea, providing an interactive interface for browsing LDAP directory trees, viewing records, and executing custom queries.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;üå≤ Interactive Tree Navigation: Browse LDAP directory structure with keyboard/mouse&lt;/item&gt;
      &lt;item&gt;üìÑ Record Viewer: View detailed LDAP entry attributes&lt;/item&gt;
      &lt;item&gt;üìã Clipboard Integration: Copy attribute values to system clipboard&lt;/item&gt;
      &lt;item&gt;üîç Custom Query Interface: Execute custom LDAP queries with real-time results&lt;/item&gt;
      &lt;item&gt;üìñ Paginated Results: Efficient pagination for large result sets with automatic loading&lt;/item&gt;
      &lt;item&gt;‚öôÔ∏è Flexible Configuration: Support for config files and command-line options&lt;/item&gt;
      &lt;item&gt;üîê Secure Authentication: Support for SSL/TLS and various authentication methods&lt;/item&gt;
      &lt;item&gt;üîÑ Auto-Update Notifications: Optional checking for newer releases from GitHub&lt;/item&gt;
      &lt;item&gt;üé® Modern TUI: Clean, intuitive interface built with BubbleTea&lt;/item&gt;
      &lt;item&gt;üîÄ Multiple Connections: Save and switch between multiple LDAP server configurations&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Initial startup screen with connection options&lt;/p&gt;
    &lt;p&gt;_Interface for adding new LDAP Connections&lt;/p&gt;
    &lt;p&gt;Browse LDAP directory structure with keyboard/mouse navigation&lt;/p&gt;
    &lt;p&gt;View detailed LDAP entry attributes with clipboard integration&lt;/p&gt;
    &lt;p&gt;Execute custom LDAP queries with real-time results and formatting&lt;/p&gt;
    &lt;code&gt;brew install ericschmar/tap/moribito&lt;/code&gt;
    &lt;code&gt;brew install https://raw.githubusercontent.com/ericschmar/moribito/main/homebrew/moribito.rb&lt;/code&gt;
    &lt;p&gt;Download the latest pre-built binary from GitHub Releases:&lt;/p&gt;
    &lt;p&gt;Linux/Unix:&lt;/p&gt;
    &lt;code&gt;curl -sSL https://raw.githubusercontent.com/ericschmar/moribito/main/scripts/install.sh | bash&lt;/code&gt;
    &lt;p&gt;macOS:&lt;/p&gt;
    &lt;code&gt;curl -sSL https://raw.githubusercontent.com/ericschmar/moribito/main/scripts/install-macos.sh | bash&lt;/code&gt;
    &lt;p&gt;Windows (PowerShell):&lt;/p&gt;
    &lt;code&gt;irm https://raw.githubusercontent.com/ericschmar/moribito/main/scripts/install.ps1 | iex&lt;/code&gt;
    &lt;p&gt;The install scripts will:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Download the appropriate binary for your platform&lt;/item&gt;
      &lt;item&gt;Install it to the system PATH&lt;/item&gt;
      &lt;item&gt;Create OS-specific configuration directories&lt;/item&gt;
      &lt;item&gt;Generate sample configuration files&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;# Linux x86_64
curl -L https://github.com/ericschmar/moribito/releases/latest/download/moribito-linux-amd64 -o moribito
chmod +x moribito
sudo mv moribito /usr/local/bin/

# Linux ARM64
curl -L https://github.com/ericschmar/moribito/releases/latest/download/moribito-linux-arm64 -o moribito
chmod +x moribito
sudo mv moribito /usr/local/bin/

# macOS Intel
curl -L https://github.com/ericschmar/moribito/releases/latest/download/moribito-darwin-amd64 -o moribito
chmod +x moribito
sudo mv moribito /usr/local/bin/

# macOS Apple Silicon
curl -L https://github.com/ericschmar/moribito/releases/latest/download/moribito-darwin-arm64 -o moribito
chmod +x moribito
sudo mv moribito /usr/local/bin/&lt;/code&gt;
    &lt;p&gt;For Windows, download &lt;code&gt;moribito-windows-amd64.exe&lt;/code&gt; from the releases page.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Note: Homebrew is also available for Windows via WSL (Windows Subsystem for Linux). If you have WSL installed, you can use the Homebrew installation method above.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;code&gt;git clone https://github.com/ericschmar/moribito
cd moribito
go build -o moribito cmd/moribito/main.go&lt;/code&gt;
    &lt;code&gt;# Connect with command line options
moribito -host ldap.example.com -base-dn "dc=example,dc=com" -user "cn=admin,dc=example,dc=com"

# Enable automatic update checking
moribito -check-updates -host ldap.example.com -base-dn "dc=example,dc=com"

# Use a configuration file
moribito -config /path/to/config.yaml

# Get help
moribito -help&lt;/code&gt;
    &lt;p&gt;Moribito will automatically look for configuration files in OS-specific locations:&lt;/p&gt;
    &lt;p&gt;Linux/Unix:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;~/.config/moribito/config.yaml&lt;/code&gt;(XDG config directory)&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;~/.moribito/config.yaml&lt;/code&gt;(user directory)&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;~/.moribito.yaml&lt;/code&gt;(user home file)&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;macOS:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;~/.moribito/config.yaml&lt;/code&gt;(user directory)&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;~/Library/Application Support/moribito/config.yaml&lt;/code&gt;(macOS standard)&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;~/.moribito.yaml&lt;/code&gt;(user home file)&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Windows:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;%APPDATA%\moribito\config.yaml&lt;/code&gt;(Windows standard)&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;%USERPROFILE%\.moribito.yaml&lt;/code&gt;(user home file)&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;All platforms also check:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;./config.yaml&lt;/code&gt;(current directory)&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Use the built-in command to create a configuration file:&lt;/p&gt;
    &lt;code&gt;moribito --create-config&lt;/code&gt;
    &lt;p&gt;Or manually create a configuration file:&lt;/p&gt;
    &lt;code&gt;ldap:
    host: "ldap.example.com"
    port: 389
    base_dn: "dc=example,dc=com"
    use_ssl: false
    use_tls: false
    bind_user: "cn=admin,dc=example,dc=com"
    bind_pass: "your-password"
pagination:
    page_size: 50 # Number of entries per page
retry:
    enabled: true # Connection retries (default: true)
    max_attempts: 3 # Retry attempts (default: 3)
    initial_delay_ms: 500 # Initial delay (default: 500)
    max_delay_ms: 5000 # Max delay cap (default: 5000)&lt;/code&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Tab - Switch between views (Tree ‚Üí Record ‚Üí Query ‚Üí Tree)&lt;/item&gt;
      &lt;item&gt;1/2/3 - Jump directly to Tree/Record/Query view&lt;/item&gt;
      &lt;item&gt;q - Quit application&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;‚Üë/‚Üì or k/j - Navigate up/down&lt;/item&gt;
      &lt;item&gt;Page Up/Down - Navigate by page&lt;/item&gt;
      &lt;item&gt;Home/End - Jump to top/bottom&lt;/item&gt;
      &lt;item&gt;‚Üí or l - Expand node (load children)&lt;/item&gt;
      &lt;item&gt;‚Üê or h - Collapse node&lt;/item&gt;
      &lt;item&gt;Enter - View record details&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;‚Üë/‚Üì or k/j - Scroll up/down&lt;/item&gt;
      &lt;item&gt;Page Up/Down - Scroll by page&lt;/item&gt;
      &lt;item&gt;Home/End - Jump to top/bottom&lt;/item&gt;
      &lt;item&gt;c - Copy current attribute value to clipboard&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;/ or Escape - Focus query input&lt;/item&gt;
      &lt;item&gt;Ctrl+Enter or Ctrl+J - Execute query&lt;/item&gt;
      &lt;item&gt;Ctrl+F - Format query with proper indentation&lt;/item&gt;
      &lt;item&gt;Escape - Clear query&lt;/item&gt;
      &lt;item&gt;Ctrl+V - Paste from clipboard&lt;/item&gt;
      &lt;item&gt;‚Üë/‚Üì - Navigate results (when not in input mode)&lt;/item&gt;
      &lt;item&gt;Page Up/Down - Navigate by page (automatically loads more results)&lt;/item&gt;
      &lt;item&gt;Enter - View selected record&lt;/item&gt;
    &lt;/list&gt;
    &lt;quote&gt;
      &lt;p&gt;Note: The Query View uses automatic pagination to efficiently handle large result sets. When you scroll near the end of loaded results, the next page is automatically fetched from the LDAP server.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;The Ctrl+F key combination formats complex LDAP queries with proper indentation for better readability:&lt;/p&gt;
    &lt;code&gt;# Before formatting:
(&amp;amp;(objectClass=person)(|(cn=john*)(sn=smith*))(department=engineering))

# After formatting (Ctrl+F):
(&amp;amp;
  (objectClass=person)
  (|
    (cn=john*)
    (sn=smith*)
  )
  (department=engineering)
)
&lt;/code&gt;
    &lt;p&gt;The tool supports various LDAP authentication methods:&lt;/p&gt;
    &lt;code&gt;bind_user: "cn=admin,dc=example,dc=com"
bind_pass: "password"&lt;/code&gt;
    &lt;code&gt;bind_user: "uid=john,ou=users,dc=example,dc=com"
bind_pass: "password"&lt;/code&gt;
    &lt;code&gt;bind_user: "john@example.com"
bind_pass: "password"&lt;/code&gt;
    &lt;code&gt;# Leave bind_user and bind_pass empty or omit them&lt;/code&gt;
    &lt;code&gt;ldap:
    host: "ldaps.example.com"
    port: 636
    use_ssl: true&lt;/code&gt;
    &lt;code&gt;ldap:
    host: "ldap.example.com"
    port: 389
    use_tls: true&lt;/code&gt;
    &lt;p&gt;In the Query view, you can execute custom LDAP filters:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;(objectClass=*)&lt;/code&gt;- All objects&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;(objectClass=person)&lt;/code&gt;- All person objects&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;(cn=john*)&lt;/code&gt;- Objects with cn starting with "john"&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;(&amp;amp;(objectClass=person)(mail=*@example.com))&lt;/code&gt;- People with example.com emails&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;(|(cn=admin)(uid=admin))&lt;/code&gt;- Objects with cn=admin OR uid=admin&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;For complex nested queries, use Ctrl+F to automatically format them for better readability:&lt;/p&gt;
    &lt;p&gt;Simple queries remain unchanged:&lt;/p&gt;
    &lt;code&gt;(objectClass=person)
&lt;/code&gt;
    &lt;p&gt;Complex queries are formatted with proper indentation:&lt;/p&gt;
    &lt;code&gt;# Original
(&amp;amp;(objectClass=person)(|(cn=john*)(sn=smith*))(department=engineering))

# After Ctrl+F
(&amp;amp;
  (objectClass=person)
  (|
    (cn=john*)
    (sn=smith*)
  )
  (department=engineering)
)
&lt;/code&gt;
    &lt;p&gt;LDAP CLI uses intelligent pagination to provide optimal performance when working with large directories:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Default Page Size: 50 entries per page&lt;/item&gt;
      &lt;item&gt;Configurable: Adjust via config file or &lt;code&gt;--page-size&lt;/code&gt;flag&lt;/item&gt;
      &lt;item&gt;On-Demand Loading: Next pages load automatically as you scroll&lt;/item&gt;
      &lt;item&gt;Memory Efficient: Only loaded entries are kept in memory&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;# Command line override
moribito --page-size 100 --host ldap.example.com

# Configuration file
pagination:
  page_size: 25  # Smaller pages for slower networks&lt;/code&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Smaller page sizes (10-25) for slower networks or limited LDAP servers&lt;/item&gt;
      &lt;item&gt;Larger page sizes (100-200) for fast networks and powerful LDAP servers&lt;/item&gt;
      &lt;item&gt;Use specific queries to reduce result sets instead of browsing all entries&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;LDAP CLI includes automatic retry functionality to handle connection failures gracefully:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Default: Enabled with 3 retry attempts&lt;/item&gt;
      &lt;item&gt;Exponential Backoff: Delay doubles between attempts (500ms ‚Üí 1s ‚Üí 2s ‚Üí ...)&lt;/item&gt;
      &lt;item&gt;Connection Recovery: Automatically re-establishes broken connections&lt;/item&gt;
      &lt;item&gt;Smart Detection: Only retries connection-related errors, not authentication failures&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;# Default retry settings (automatically applied)
# No configuration needed - retries work out of the box&lt;/code&gt;
    &lt;code&gt;# Custom retry configuration
retry:
    enabled: true
    max_attempts: 5 # Maximum retry attempts (default: 3)
    initial_delay_ms: 1000 # Initial delay in milliseconds (default: 500)
    max_delay_ms: 10000 # Maximum delay cap (default: 5000)&lt;/code&gt;
    &lt;code&gt;# Disable retries if needed
retry:
    enabled: false&lt;/code&gt;
    &lt;p&gt;The system automatically retries for:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Network timeouts and connection drops&lt;/item&gt;
      &lt;item&gt;Connection refused errors&lt;/item&gt;
      &lt;item&gt;Server unavailable responses&lt;/item&gt;
      &lt;item&gt;Connection reset by peer&lt;/item&gt;
      &lt;item&gt;LDAP server down errors&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Authentication errors, invalid queries, and permission issues are not retried.&lt;/p&gt;
    &lt;code&gt;# Build for current platform
make build

# Build for all platforms
make build-all

# Clean build artifacts
make clean&lt;/code&gt;
    &lt;code&gt;# Format code
make fmt

# Run linter
make lint

# Run tests
make test

# Run all CI checks (format, lint, test, build)
make ci&lt;/code&gt;
    &lt;code&gt;go test ./...&lt;/code&gt;
    &lt;p&gt;This project uses GitHub Actions for CI/CD:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;p&gt;CI Workflow: Runs on every push and pull request to&lt;/p&gt;&lt;code&gt;main&lt;/code&gt;and&lt;code&gt;develop&lt;/code&gt;branches&lt;list rend="ul"&gt;&lt;item&gt;Code formatting verification&lt;/item&gt;&lt;item&gt;Linting (with warnings)&lt;/item&gt;&lt;item&gt;Testing&lt;/item&gt;&lt;item&gt;Building for current platform&lt;/item&gt;&lt;item&gt;Multi-platform build artifacts (on main branch pushes)&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Release Workflow: Triggered by version tags (e.g.,&lt;/p&gt;&lt;code&gt;v1.0.0&lt;/code&gt;)&lt;list rend="ul"&gt;&lt;item&gt;Runs full CI checks&lt;/item&gt;&lt;item&gt;Builds for all platforms (Linux amd64/arm64, macOS amd64/arm64, Windows amd64)&lt;/item&gt;&lt;item&gt;Creates GitHub releases with binaries and checksums&lt;/item&gt;&lt;item&gt;Generates installation instructions&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;BubbleTea - TUI framework&lt;/item&gt;
      &lt;item&gt;Lipgloss - Styling&lt;/item&gt;
      &lt;item&gt;go-ldap - LDAP client&lt;/item&gt;
      &lt;item&gt;golang.org/x/term - Terminal utilities&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This project includes full Homebrew support for easy installation on macOS and Linux. See the homebrew/ directory for:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Ready-to-use Homebrew formula&lt;/item&gt;
      &lt;item&gt;Formula generation and maintenance scripts&lt;/item&gt;
      &lt;item&gt;Documentation for creating custom taps&lt;/item&gt;
      &lt;item&gt;Instructions for submitting to homebrew-core&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This project follows Semantic Versioning. See docs/versioning.md for details on the release process.&lt;/p&gt;
    &lt;p&gt;Comprehensive documentation is available using DocPress. To build and view the documentation:&lt;/p&gt;
    &lt;code&gt;# Build static documentation website
make docs

# Serve documentation locally with live reload
make docs-serve&lt;/code&gt;
    &lt;p&gt;The documentation covers:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Installation and setup&lt;/item&gt;
      &lt;item&gt;Usage guide with examples&lt;/item&gt;
      &lt;item&gt;Interface navigation&lt;/item&gt;
      &lt;item&gt;Development setup&lt;/item&gt;
      &lt;item&gt;Contributing guidelines&lt;/item&gt;
      &lt;item&gt;API reference and advanced features&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Visit the generated documentation site for the complete guide.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Fork the repository&lt;/item&gt;
      &lt;item&gt;Create your feature branch (&lt;code&gt;git checkout -b feature/amazing-feature&lt;/code&gt;)&lt;/item&gt;
      &lt;item&gt;Commit your changes (&lt;code&gt;git commit -m 'Add some amazing feature'&lt;/code&gt;)&lt;/item&gt;
      &lt;item&gt;Push to the branch (&lt;code&gt;git push origin feature/amazing-feature&lt;/code&gt;)&lt;/item&gt;
      &lt;item&gt;Open a Pull Request&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This project is licensed under the MIT License - see the LICENSE file for details.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45102664</guid></item><item><title>Passkeys and Modern Authentication</title><link>https://lucumr.pocoo.org/2025/9/2/passkeys/</link><description>&lt;doc fingerprint="ae4c91161f16337c"&gt;
  &lt;main&gt;
    &lt;p&gt;written on September 02, 2025&lt;/p&gt;
    &lt;p&gt;There is an ongoing trend in the industry to move people away from username and password towards passkeys. The intentions here are good, and I would assume that this has a significant net benefit for the average consumer. At the same time, the underlying standard has some peculiarities. These enable behaviors by large corporations, employers, and governments that are worth thinking about.&lt;/p&gt;
    &lt;p&gt;One potential source of problems here is the attestation system. It allows the authenticator to provide more information about what it is to the website that you‚Äôre authenticating with. In particular it is what tells a website if you have a Yubikey plugged in versus something like 1password. This is the mechanism by which the Austrian government, for instance, prevents you from using an Open Source or any other software-based authenticator to sign in to do your taxes, access medical records or do anything else that is protected by eID. Instead you have to buy a whitelisted hardware token.&lt;/p&gt;
    &lt;p&gt;Attestations themselves are not used by software authenticators today, or anything that syncs. Both Apple and Google do not expose attestation data in their own software authenticators (Keychain and Google Authenticator) for consumer passkeys. However, they will pass through attestation data from hardware tokens just fine. Both of them also, to the best of my knowledge, expose attestation data for enterprises through Mobile Device Management.&lt;/p&gt;
    &lt;p&gt;One could make the argument that it is unlikely that attestation data will be used at scale to create vendor lock-in. However, I‚Äôm not sufficiently convinced that this won‚Äôt create sub-ecosystems where we see exactly that happening. If for no other reason, this API exists and it has already been used to restrict keys for governmental sign-in systems.&lt;/p&gt;
    &lt;p&gt;One slightly more concerning issue today is that there is effectively no way to export private keys between authentication password managers. You need to enroll all of your ecosystems individually into a password manager. An attempt by an open source password manager to reveal private keys to the user was ruled insecure and should not be supported. This taking away agency from the user is not an accident. You can also see this with the passkey export specification which comes with a protocol that, while enabling exports in principle, encourages a system to system transfer that does not hand over the user‚Äôs credentials to the user. 1&lt;/p&gt;
    &lt;p&gt;This might be for good intentions, but it also creates problems. As someone recently trying to leave the Apple ecosystem step by step, I have noticed how many services are now bound to an iCloud-based passkey. Particularly when it comes to Apple, this fear is not entirely unwarranted. Sign-in with Apple using non-shared email addresses makes it very hard to migrate to Android unless you retain an iCloud subscription.&lt;/p&gt;
    &lt;p&gt;Obviously, one could pay for an authenticator like 1Password, which at least is ecosystem independent. However, not everybody is in a situation where they can afford to pay for basic services like password managers.&lt;/p&gt;
    &lt;p&gt;One reason why passkeys are adopted so well today is because it happens automatically for many. I discovered that non-technical family members now all have passkeys for some services, and they did not even notice doing that. A notable example is Amazon. After every sign-in, it attempts to enroll you into a passkey automatically without clear notification. It just brings up the fingerprint prompt, and users will instinctively touch it.&lt;/p&gt;
    &lt;p&gt;If you use different types of devices to authenticate ‚Äî for instance, a Windows and an iOS device ‚Äî you may eventually have both authenticators associated. This now covers the devices you already use. However, it can make moving to a completely different ecosystem later much harder.&lt;/p&gt;
    &lt;p&gt;For many years already, people lose access to their Google account every day and can never regain it. Google is well known for terminating accounts without stating any reasons. With that comes the loss of access to your data. In this case, you also lose your credentials for third-party websites.&lt;/p&gt;
    &lt;p&gt;There is no legal recourse for this and no mechanism for appeal. You just have to hope that you‚Äôre a good citizen and not doing anything that would upset Google‚Äôs account flagging systems.&lt;/p&gt;
    &lt;p&gt;As a sufficiently technical person, you might weigh the risks, but others will not. Many years ago, I tried to help another family gain access to their child‚Äôs Facebook account after they passed away. Even then, it was a bureaucratic nightmare where there was little support by Facebook to make it happen. There is a real risk that access becomes much harder for families. This is particularly true in situations where someone is incapacitated or dead. The more we move away from basic authentication systems, the worse this becomes. It‚Äôs also really inconvenient when you are not on your own devices. Signing into my accounts on my children‚Äôs devices has turned from a straightforward process to an incredibly frustrating experience. I find myself juggling all kinds of different apps and flows.&lt;/p&gt;
    &lt;p&gt;Every once in a while, I find myself in a situation where I have very little foundation to build on. This is mostly just because of a hobby. I like to see how things work and build them from scratch. Increasingly, that has become harder. Many username and password authentication schemes have been replaced with OAuth sign-ins over the years. Nowadays, some services are moving towards passkeys, though most places do not enforce these yet. If you want to build an operating system from scratch, or even just build a client yourself, you often find yourself needing to do a lot of yak-shaving. All this work is necessary just to get basic things working.&lt;/p&gt;
    &lt;p&gt;I think this is at least something to be wary of. It doesn‚Äôt mean that bad things will necessarily happen, but there is potential for loss of individual agency.&lt;/p&gt;
    &lt;p&gt;An accelerated version of this has been seen with email. Accessing your own personal IMAP account from Google today has been significantly restricted under security arguments. Getting OAuth credentials that can access someone‚Äôs IMAP accounts with their approval has become increasingly harder. It is also very costly.&lt;/p&gt;
    &lt;p&gt;Username and password authentication has largely been removed. Even the app-specific passwords on Google are now entirely undocumented. They are no longer exposed in the settings unless you know the link 2.&lt;/p&gt;
    &lt;p&gt;I don‚Äôt know. I am both a user of passkeys and generally wary of making myself overly dependent on tech giants and complex solutions. I‚Äôm noticing an increased reliance and potential loss of access to my own data. This does abstractly concern me. Not to the degree that it changes anything I‚Äôm doing, but still. As annoying as managing usernames and passwords was, I don‚Äôt think I have ever spent so much time authenticating on a daily basis. The systems that we now need to interface with for authentication are vast and complex.&lt;/p&gt;
    &lt;p&gt;This might just be the path we‚Äôre going. However, it is also one where we maybe want to reflect a little bit on whether this is really what we want.&lt;/p&gt;
    &lt;p&gt;Edit: I reworded the statement about pass key exports to not misrepresent the original comment on GitHub.&lt;/p&gt;
    &lt;p&gt;The details can be debated, but the protocol explicitly does not permit a user to just hold on to a symmetrically encrypted export (or even a plain text one). The best option is the HPKE scheme.‚Ü©&lt;/p&gt;
    &lt;p&gt;This OAuth dependency also puts Open Source projects in an interesting situation. For instance, the Thunderbird client ships with OAuth credentials for Google when you download it from Mozilla. However, if you self-compile it, you don‚Äôt have that access.‚Ü©&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45103065</guid></item><item><title>The Little Book of Linear Algebra</title><link>https://github.com/the-litte-book-of/linear-algebra</link><description>&lt;doc fingerprint="b70d9b7e132f9799"&gt;
  &lt;main&gt;
    &lt;p&gt;A concise, beginner-friendly introduction to the core ideas of linear algebra.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Download PDF ‚Äì print-ready version&lt;/item&gt;
      &lt;item&gt;Download EPUB ‚Äì e-reader friendly&lt;/item&gt;
      &lt;item&gt;View LaTeX ‚Äì Latex source&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;A scalar is a single numerical quantity, most often taken from the real numbers, denoted by &lt;/p&gt;
    &lt;p&gt;An element of &lt;/p&gt;
    &lt;p&gt;Example 1.1.1.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;A 2-dimensional vector: &lt;math-renderer&gt;$(3, -1) \in \mathbb{R}^2$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;A 3-dimensional vector: &lt;math-renderer&gt;$(2, 0, 5) \in \mathbb{R}^3$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;A 1-dimensional vector: &lt;math-renderer&gt;$(7) \in \mathbb{R}^1$&lt;/math-renderer&gt;, which corresponds to the scalar&lt;math-renderer&gt;$7$&lt;/math-renderer&gt;itself.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Vectors are often written vertically in column form, which emphasizes their role in matrix multiplication:&lt;/p&gt;
    &lt;p&gt;The vertical layout makes the structure clearer when we consider linear combinations or multiply matrices by vectors.&lt;/p&gt;
    &lt;p&gt;In &lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;As a point in space, described by its coordinates.&lt;/item&gt;
      &lt;item&gt;As a displacement or arrow, described by a direction and a length.&lt;/item&gt;
      &lt;item&gt;As an abstract element of a vector space, whose properties follow algebraic rules independent of geometry.&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Vectors are written in boldface lowercase letters: &lt;math-renderer&gt;$\mathbf{v}, \mathbf{w}, \mathbf{x}$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;The i-th entry of a vector &lt;math-renderer&gt;$\mathbf{v}$&lt;/math-renderer&gt;is written&lt;math-renderer&gt;$v_i$&lt;/math-renderer&gt;, where indices begin at 1.&lt;/item&gt;
      &lt;item&gt;The set of all n-dimensional vectors over &lt;math-renderer&gt;$\mathbb{R}$&lt;/math-renderer&gt;is denoted&lt;math-renderer&gt;$\mathbb{R}^n$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Column vectors will be the default form unless otherwise stated.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Scalars and vectors form the atoms of linear algebra. Every structure we will build-vector spaces, linear transformations, matrices, eigenvalues-relies on the basic notions of number and ordered collection of numbers. Once vectors are understood, we can define operations such as addition and scalar multiplication, then generalize to subspaces, bases, and coordinate systems. Eventually, this framework grows into the full theory of linear algebra, with powerful applications to geometry, computation, and data.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Write three different vectors in &lt;math-renderer&gt;$\mathbb{R}^2$&lt;/math-renderer&gt;and sketch them as arrows from the origin. Identify their coordinates explicitly.&lt;/item&gt;
      &lt;item&gt;Give an example of a vector in &lt;math-renderer&gt;$\mathbb{R}^4$&lt;/math-renderer&gt;. Can you visualize it directly? Explain why high-dimensional visualization is challenging.&lt;/item&gt;
      &lt;item&gt;Let &lt;math-renderer&gt;$\mathbf{v} = (4, -3, 2)$&lt;/math-renderer&gt;. Write&lt;math-renderer&gt;$\mathbf{v}$&lt;/math-renderer&gt;in column form and state&lt;math-renderer&gt;$v_1, v_2, v_3$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;In what sense is the set &lt;math-renderer&gt;$\mathbb{R}^1$&lt;/math-renderer&gt;both a line and a vector space? Illustrate with examples.&lt;/item&gt;
      &lt;item&gt;Consider the vector &lt;math-renderer&gt;$\mathbf{u} = (1,1,\dots,1) \in \mathbb{R}^n$&lt;/math-renderer&gt;. What is special about this vector when&lt;math-renderer&gt;$n$&lt;/math-renderer&gt;is large? What might it represent in applications?&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Vectors in linear algebra are not static objects; their power comes from the operations we can perform on them. Two fundamental operations define the structure of vector spaces: addition and scalar multiplication. These operations satisfy simple but far-reaching rules that underpin the entire subject.&lt;/p&gt;
    &lt;p&gt;Given two vectors of the same dimension, their sum is obtained by adding corresponding entries. Formally, if&lt;/p&gt;
    &lt;p&gt;then their sum is&lt;/p&gt;
    &lt;p&gt;Example 1.2.1. Let &lt;/p&gt;
    &lt;p&gt;Geometrically, vector addition corresponds to the parallelogram rule. If we draw both vectors as arrows from the origin, then placing the tail of one vector at the head of the other produces the sum. The diagonal of the parallelogram they form represents the resulting vector.&lt;/p&gt;
    &lt;p&gt;Multiplying a vector by a scalar stretches or shrinks the vector while preserving its direction, unless the scalar is negative, in which case the vector is also reversed. If &lt;/p&gt;
    &lt;p&gt;then&lt;/p&gt;
    &lt;p&gt;Example 1.2.2. Let &lt;/p&gt;
    &lt;p&gt;This corresponds to flipping the vector through the origin and doubling its length.&lt;/p&gt;
    &lt;p&gt;The interaction of addition and scalar multiplication allows us to form linear combinations. A linear combination of vectors &lt;/p&gt;
    &lt;p&gt;Linear combinations are the mechanism by which we generate new vectors from existing ones. The span of a set of vectors-the collection of all their linear combinations-will later lead us to the idea of a subspace.&lt;/p&gt;
    &lt;p&gt;Example 1.2.3. Let &lt;/p&gt;
    &lt;p&gt;Thus &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Addition: &lt;math-renderer&gt;$\mathbf{u} + \mathbf{v}$&lt;/math-renderer&gt;means component-wise addition.&lt;/item&gt;
      &lt;item&gt;Scalar multiplication: &lt;math-renderer&gt;$c\mathbf{v}$&lt;/math-renderer&gt;scales each entry of&lt;math-renderer&gt;$\mathbf{v}$&lt;/math-renderer&gt;by&lt;math-renderer&gt;$c$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Linear combination: a sum of the form &lt;math-renderer&gt;$c_1 \mathbf{v}_1 + \cdots + c_k \mathbf{v}_k$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Vector addition and scalar multiplication are the defining operations of linear algebra. They give structure to vector spaces, allow us to describe geometric phenomena like translation and scaling, and provide the foundation for solving systems of equations. Everything that follows-basis, dimension, transformations-builds on these simple but profound rules.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Compute &lt;math-renderer&gt;$\mathbf{u} + \mathbf{v}$&lt;/math-renderer&gt;where&lt;math-renderer&gt;$\mathbf{u} = (1,2,3)$&lt;/math-renderer&gt;and&lt;math-renderer&gt;$\mathbf{v} = (4, -1, 0)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Find &lt;math-renderer&gt;$3\mathbf{v}$&lt;/math-renderer&gt;where&lt;math-renderer&gt;$\mathbf{v} = (-2,5)$&lt;/math-renderer&gt;. Sketch both vectors to illustrate the scaling.&lt;/item&gt;
      &lt;item&gt;Show that &lt;math-renderer&gt;$(5,7)$&lt;/math-renderer&gt;can be written as a linear combination of&lt;math-renderer&gt;$(1,0)$&lt;/math-renderer&gt;and&lt;math-renderer&gt;$(0,1)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Write &lt;math-renderer&gt;$(4,4)$&lt;/math-renderer&gt;as a linear combination of&lt;math-renderer&gt;$(1,1)$&lt;/math-renderer&gt;and&lt;math-renderer&gt;$(1,-1)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Prove that if &lt;math-renderer&gt;$\mathbf{u}, \mathbf{v} \in \mathbb{R}^n$&lt;/math-renderer&gt;, then&lt;math-renderer&gt;$(c+d)(\mathbf{u}+\mathbf{v}) = c\mathbf{u} + c\mathbf{v} + d\mathbf{u} + d\mathbf{v}$&lt;/math-renderer&gt;for scalars&lt;math-renderer&gt;$c,d \in \mathbb{R}$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The dot product is the fundamental operation that links algebra and geometry in vector spaces. It allows us to measure lengths, compute angles, and determine orthogonality. From this single definition flow the notions of norm and angle, which give geometry to abstract vector spaces.&lt;/p&gt;
    &lt;p&gt;For two vectors in &lt;/p&gt;
    &lt;p&gt;Equivalently, in matrix notation:&lt;/p&gt;
    &lt;p&gt;Example 1.3.1. Let &lt;/p&gt;
    &lt;p&gt;The dot product outputs a single scalar, not another vector.&lt;/p&gt;
    &lt;p&gt;The Euclidean norm of a vector is the square root of its dot product with itself:&lt;/p&gt;
    &lt;p&gt;This generalizes the Pythagorean theorem to arbitrary dimensions.&lt;/p&gt;
    &lt;p&gt;Example 1.3.2. For &lt;/p&gt;
    &lt;p&gt;This is exactly the length of the vector as an arrow in the plane.&lt;/p&gt;
    &lt;p&gt;The dot product also encodes the angle between two vectors. For nonzero vectors &lt;/p&gt;
    &lt;p&gt;where &lt;/p&gt;
    &lt;p&gt;Example 1.3.3. Let &lt;/p&gt;
    &lt;p&gt;Hence&lt;/p&gt;
    &lt;p&gt;The vectors are perpendicular.&lt;/p&gt;
    &lt;p&gt;Two vectors are said to be orthogonal if their dot product is zero:&lt;/p&gt;
    &lt;p&gt;Orthogonality generalizes the idea of perpendicularity from geometry to higher dimensions.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Dot product: &lt;math-renderer&gt;$\mathbf{u} \cdot \mathbf{v}$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Norm (length): &lt;math-renderer&gt;$|\mathbf{v}|$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Orthogonality: &lt;math-renderer&gt;$\mathbf{u} \perp \mathbf{v}$&lt;/math-renderer&gt;if&lt;math-renderer&gt;$\mathbf{u} \cdot \mathbf{v} = 0$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The dot product turns vector spaces into geometric objects: vectors gain lengths, angles, and notions of perpendicularity. This foundation will later support the study of orthogonal projections, Gram‚ÄìSchmidt orthogonalization, eigenvectors, and least squares problems.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Compute &lt;math-renderer&gt;$\mathbf{u} \cdot \mathbf{v}$&lt;/math-renderer&gt;for&lt;math-renderer&gt;$\mathbf{u} = (1,2,3)$&lt;/math-renderer&gt;,&lt;math-renderer&gt;$\mathbf{v} = (4,5,6)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Find the norm of &lt;math-renderer&gt;$\mathbf{v} = (2, -2, 1)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Determine whether &lt;math-renderer&gt;$\mathbf{u} = (1,1,0)$&lt;/math-renderer&gt;and&lt;math-renderer&gt;$\mathbf{v} = (1,-1,2)$&lt;/math-renderer&gt;are orthogonal.&lt;/item&gt;
      &lt;item&gt;Let &lt;math-renderer&gt;$\mathbf{u} = (3,4)$&lt;/math-renderer&gt;,&lt;math-renderer&gt;$\mathbf{v} = (4,3)$&lt;/math-renderer&gt;. Compute the angle between them.&lt;/item&gt;
      &lt;item&gt;Prove that &lt;math-renderer&gt;$|\mathbf{u} + \mathbf{v}|^2 = |\mathbf{u}|^2 + |\mathbf{v}|^2 + 2\mathbf{u}\cdot \mathbf{v}$&lt;/math-renderer&gt;. This identity is the algebraic version of the Law of Cosines.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Orthogonality captures the notion of perpendicularity in vector spaces. It is one of the most important geometric ideas in linear algebra, allowing us to decompose vectors, define projections, and construct special bases with elegant properties.&lt;/p&gt;
    &lt;p&gt;Two vectors &lt;/p&gt;
    &lt;p&gt;This condition ensures that the angle between them is &lt;/p&gt;
    &lt;p&gt;Example 1.4.1. In &lt;/p&gt;
    &lt;p&gt;A collection of vectors is called orthogonal if every distinct pair of vectors in the set is orthogonal. If, in addition, each vector has norm 1, the set is called orthonormal.&lt;/p&gt;
    &lt;p&gt;Example 1.4.2. In &lt;/p&gt;
    &lt;p&gt;form an orthonormal set: each has length 1, and their dot products vanish when the indices differ.&lt;/p&gt;
    &lt;p&gt;Orthogonality makes possible the decomposition of a vector into two components: one parallel to another vector, and one orthogonal to it. Given a nonzero vector &lt;/p&gt;
    &lt;p&gt;The difference&lt;/p&gt;
    &lt;p&gt;is orthogonal to &lt;/p&gt;
    &lt;p&gt;Example 1.4.3. Let &lt;/p&gt;
    &lt;p&gt;Thus&lt;/p&gt;
    &lt;p&gt;where &lt;/p&gt;
    &lt;p&gt;In general, if &lt;/p&gt;
    &lt;p&gt;$$ \mathbf{v} = \text{proj}{\mathbf{u}}(\mathbf{v}) + \big(\mathbf{v} - \text{proj}{\mathbf{u}}(\mathbf{v})\big), $$&lt;/p&gt;
    &lt;p&gt;where the first term is parallel to &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;math-renderer&gt;$\mathbf{u} \perp \mathbf{v}$&lt;/math-renderer&gt;: vectors&lt;math-renderer&gt;$\mathbf{u}$&lt;/math-renderer&gt;and&lt;math-renderer&gt;$\mathbf{v}$&lt;/math-renderer&gt;are orthogonal.&lt;/item&gt;
      &lt;item&gt;An orthogonal set: vectors pairwise orthogonal.&lt;/item&gt;
      &lt;item&gt;An orthonormal set: pairwise orthogonal, each of norm 1.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Orthogonality gives structure to vector spaces. It provides a way to separate independent directions cleanly, simplify computations, and minimize errors in approximations. Many powerful algorithms in numerical linear algebra and data science (QR decomposition, least squares regression, PCA) rely on orthogonality.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Verify that the vectors &lt;math-renderer&gt;$(1,2,2)$&lt;/math-renderer&gt;and&lt;math-renderer&gt;$(2,0,-1)$&lt;/math-renderer&gt;are orthogonal.&lt;/item&gt;
      &lt;item&gt;Find the projection of &lt;math-renderer&gt;$(3,4)$&lt;/math-renderer&gt;onto&lt;math-renderer&gt;$(1,1)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Show that any two distinct standard basis vectors in &lt;math-renderer&gt;$\mathbb{R}^n$&lt;/math-renderer&gt;are orthogonal.&lt;/item&gt;
      &lt;item&gt;Decompose &lt;math-renderer&gt;$(5,2)$&lt;/math-renderer&gt;into components parallel and orthogonal to&lt;math-renderer&gt;$(2,1)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Prove that if &lt;math-renderer&gt;$\mathbf{u}, \mathbf{v}$&lt;/math-renderer&gt;are orthogonal and nonzero, then&lt;math-renderer&gt;$(\mathbf{u}+\mathbf{v})\cdot(\mathbf{u}-\mathbf{v}) = 0$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Matrices are the central objects of linear algebra, providing a compact way to represent and manipulate linear transformations, systems of equations, and structured data. A matrix is a rectangular array of numbers arranged in rows and columns.&lt;/p&gt;
    &lt;p&gt;An &lt;/p&gt;
    &lt;p&gt;Each entry &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;If &lt;math-renderer&gt;$m = n$&lt;/math-renderer&gt;, the matrix is square.&lt;/item&gt;
      &lt;item&gt;If &lt;math-renderer&gt;$m = 1$&lt;/math-renderer&gt;, the matrix is a row vector.&lt;/item&gt;
      &lt;item&gt;If &lt;math-renderer&gt;$n = 1$&lt;/math-renderer&gt;, the matrix is a column vector.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Thus, vectors are simply special cases of matrices.&lt;/p&gt;
    &lt;p&gt;Example 2.1.1. A &lt;/p&gt;
    &lt;p&gt;Here, &lt;/p&gt;
    &lt;p&gt;Example 2.1.2. A &lt;/p&gt;
    &lt;p&gt;This will later serve as the representation of a linear transformation on &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Matrices are denoted by uppercase bold letters: &lt;math-renderer&gt;$A, B, C$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Entries are written as &lt;math-renderer&gt;$a_{ij}$&lt;/math-renderer&gt;, with the row index first, column index second.&lt;/item&gt;
      &lt;item&gt;The set of all real &lt;math-renderer&gt;$m \times n$&lt;/math-renderer&gt;matrices is denoted&lt;math-renderer&gt;$\mathbb{R}^{m \times n}$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Thus, a matrix is a function &lt;/p&gt;
    &lt;p&gt;Matrices generalize vectors and give us a language for describing linear operations systematically. They encode systems of equations, rotations, projections, and transformations of data. With matrices, algebra and geometry come together: a single compact object can represent both numerical data and functional rules.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Write a &lt;math-renderer&gt;$3 \times 2$&lt;/math-renderer&gt;matrix of your choice and identify its entries&lt;math-renderer&gt;$a_{ij}$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Is every vector a matrix? Is every matrix a vector? Explain.&lt;/item&gt;
      &lt;item&gt;Which of the following are square matrices: &lt;math-renderer&gt;$A \in \mathbb{R}^{4\times4}$&lt;/math-renderer&gt;,&lt;math-renderer&gt;$B \in \mathbb{R}^{3\times5}$&lt;/math-renderer&gt;,&lt;math-renderer&gt;$C \in \mathbb{R}^{1\times1}$&lt;/math-renderer&gt;?&lt;/item&gt;
      &lt;item&gt;Let $D = \begin{bmatrix} 1 &amp;amp; 0 \ 0 &amp;amp; 1 \end{bmatrix}$. What kind of matrix is this?&lt;/item&gt;
      &lt;item&gt;Consider the matrix $E = \begin{bmatrix} a &amp;amp; b \ c &amp;amp; d \end{bmatrix}$. Express &lt;math-renderer&gt;$e_{11}, e_{12}, e_{21}, e_{22}$&lt;/math-renderer&gt;explicitly.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Once matrices are defined, the next step is to understand how they combine. Just as vectors gain meaning through addition and scalar multiplication, matrices become powerful through two operations: addition and multiplication.&lt;/p&gt;
    &lt;p&gt;Two matrices of the same size are added by adding corresponding entries. If&lt;/p&gt;
    &lt;p&gt;then&lt;/p&gt;
    &lt;p&gt;Example 2.2.1. Let&lt;/p&gt;
    &lt;p&gt;Then&lt;/p&gt;
    &lt;p&gt;\begin{bmatrix} 0 &amp;amp; 2 \ 8 &amp;amp; 6 \end{bmatrix}. $$&lt;/p&gt;
    &lt;p&gt;Matrix addition is commutative (&lt;/p&gt;
    &lt;p&gt;For a scalar &lt;/p&gt;
    &lt;p&gt;This stretches or shrinks all entries of the matrix uniformly.&lt;/p&gt;
    &lt;p&gt;Example 2.2.2. If&lt;/p&gt;
    &lt;p&gt;then&lt;/p&gt;
    &lt;p&gt;The defining operation of matrices is multiplication. If&lt;/p&gt;
    &lt;p&gt;then their product is the &lt;/p&gt;
    &lt;p&gt;Thus, the entry in the &lt;/p&gt;
    &lt;p&gt;Example 2.2.3. Let&lt;/p&gt;
    &lt;p&gt;Then&lt;/p&gt;
    &lt;head rend="h1"&gt;$$ AB = \begin{bmatrix} 1\cdot4 + 2\cdot2 &amp;amp; 1\cdot(-1) + 2\cdot5 \ 0\cdot4 + 3\cdot2 &amp;amp; 0\cdot(-1) + 3\cdot5 \end{bmatrix}&lt;/head&gt;
    &lt;p&gt;\begin{bmatrix} 8 &amp;amp; 9 \ 6 &amp;amp; 15 \end{bmatrix}. $$&lt;/p&gt;
    &lt;p&gt;Notice that matrix multiplication is not commutative in general: &lt;/p&gt;
    &lt;p&gt;Matrix multiplication corresponds to the composition of linear transformations. If &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Matrix sum: &lt;math-renderer&gt;$A+B$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Scalar multiple: &lt;math-renderer&gt;$cA$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Product: &lt;math-renderer&gt;$AB$&lt;/math-renderer&gt;, defined only when the number of columns of&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;equals the number of rows of&lt;math-renderer&gt;$B$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Matrix multiplication is the core mechanism of linear algebra: it encodes how transformations combine, how systems of equations are solved, and how data flows in modern algorithms. Addition and scalar multiplication make matrices into a vector space, while multiplication gives them an algebraic structure rich enough to model geometry, computation, and networks.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Compute &lt;math-renderer&gt;$A+B$&lt;/math-renderer&gt;for&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Find &lt;math-renderer&gt;$3A$&lt;/math-renderer&gt;where&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Multiply&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Verify with an explicit example that &lt;math-renderer&gt;$AB \neq BA$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Prove that matrix multiplication is distributive: &lt;math-renderer&gt;$A(B+C) = AB + AC$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Two special operations on matrices-the transpose and the inverse-give rise to deep algebraic and geometric properties. The transpose rearranges a matrix by flipping it across its main diagonal, while the inverse, when it exists, acts as the undo operation for matrix multiplication.&lt;/p&gt;
    &lt;p&gt;The transpose of an &lt;/p&gt;
    &lt;p&gt;Formally,&lt;/p&gt;
    &lt;p&gt;$$ (A^T){ij} = a{ji}. $$&lt;/p&gt;
    &lt;p&gt;Example 2.3.1. If&lt;/p&gt;
    &lt;p&gt;then&lt;/p&gt;
    &lt;p&gt;Properties of the Transpose.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;$ (A^T)^T = A$.&lt;/item&gt;
      &lt;item&gt;$ (A+B)^T = A^T + B^T$.&lt;/item&gt;
      &lt;item&gt;$ (cA)^T = cA^T$, for scalar &lt;math-renderer&gt;$c$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;$ (AB)^T = B^T A^T$.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The last rule is crucial: the order reverses.&lt;/p&gt;
    &lt;p&gt;A square matrix &lt;/p&gt;
    &lt;p&gt;where &lt;/p&gt;
    &lt;p&gt;Not every matrix is invertible. A necessary condition is that &lt;/p&gt;
    &lt;p&gt;Example 2.3.2. Let&lt;/p&gt;
    &lt;p&gt;Its determinant is &lt;/p&gt;
    &lt;p&gt;\begin{bmatrix} -2 &amp;amp; 1 \ 1.5 &amp;amp; -0.5 \end{bmatrix}. $$&lt;/p&gt;
    &lt;p&gt;Verification:&lt;/p&gt;
    &lt;head rend="h1"&gt;$$ AA^{-1} = \begin{bmatrix} 1 &amp;amp; 2 \ 3 &amp;amp; 4 \end{bmatrix} \begin{bmatrix} -2 &amp;amp; 1 \ 1.5 &amp;amp; -0.5 \end{bmatrix}&lt;/head&gt;
    &lt;p&gt;\begin{bmatrix} 1 &amp;amp; 0 \ 0 &amp;amp; 1 \end{bmatrix}. $$&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;The transpose corresponds to reflecting a linear transformation across the diagonal. For vectors, it switches between row and column forms.&lt;/item&gt;
      &lt;item&gt;The inverse, when it exists, corresponds to reversing a linear transformation. For example, if &lt;math-renderer&gt;$A$&lt;/math-renderer&gt;scales and rotates vectors,&lt;math-renderer&gt;$A^{-1}$&lt;/math-renderer&gt;rescales and rotates them back.&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Transpose: &lt;math-renderer&gt;$A^T$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Inverse: &lt;math-renderer&gt;$A^{-1}$&lt;/math-renderer&gt;, defined only for invertible square matrices.&lt;/item&gt;
      &lt;item&gt;Identity: &lt;math-renderer&gt;$I_n$&lt;/math-renderer&gt;, acts as the multiplicative identity.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The transpose allows us to define symmetric and orthogonal matrices, central to geometry and numerical methods. The inverse underlies the solution of linear systems, encoding the idea of undoing a transformation. Together, these operations set the stage for determinants, eigenvalues, and orthogonalization.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Compute the transpose of&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Verify that &lt;math-renderer&gt;$(AB)^T = B^T A^T$&lt;/math-renderer&gt;for&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Determine whether&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;is invertible. If so, find &lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Find the inverse of&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;and explain its geometric action on vectors in the plane.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Prove that if &lt;math-renderer&gt;$A$&lt;/math-renderer&gt;is invertible, then so is&lt;math-renderer&gt;$A^T$&lt;/math-renderer&gt;, and&lt;math-renderer&gt;$(A^T)^{-1} = (A^{-1})^T$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Certain matrices occur so frequently in theory and applications that they are given special names. Recognizing their properties allows us to simplify computations and understand the structure of linear transformations more clearly.&lt;/p&gt;
    &lt;p&gt;The identity matrix &lt;/p&gt;
    &lt;p&gt;It acts as the multiplicative identity:&lt;/p&gt;
    &lt;p&gt;Geometrically, &lt;/p&gt;
    &lt;p&gt;A diagonal matrix has all off-diagonal entries zero:&lt;/p&gt;
    &lt;p&gt;Multiplication by a diagonal matrix scales each coordinate independently:&lt;/p&gt;
    &lt;p&gt;Example 2.4.1. Let&lt;/p&gt;
    &lt;p&gt;Then&lt;/p&gt;
    &lt;p&gt;A permutation matrix is obtained by permuting the rows of the identity matrix. Multiplying a vector by a permutation matrix reorders its coordinates.&lt;/p&gt;
    &lt;p&gt;Example 2.4.2. Let&lt;/p&gt;
    &lt;p&gt;Then&lt;/p&gt;
    &lt;p&gt;Thus, &lt;/p&gt;
    &lt;p&gt;Permutation matrices are always invertible; their inverses are simply their transposes.&lt;/p&gt;
    &lt;p&gt;A matrix is symmetric if&lt;/p&gt;
    &lt;p&gt;and skew-symmetric if&lt;/p&gt;
    &lt;p&gt;Symmetric matrices appear in quadratic forms and optimization, while skew-symmetric matrices describe rotations and cross products in geometry.&lt;/p&gt;
    &lt;p&gt;A square matrix &lt;/p&gt;
    &lt;p&gt;Equivalently, the rows (and columns) of &lt;/p&gt;
    &lt;p&gt;Example 2.4.3. The rotation matrix in the plane:&lt;/p&gt;
    &lt;p&gt;is orthogonal, since&lt;/p&gt;
    &lt;p&gt;Special matrices serve as the building blocks of linear algebra. Identity matrices define the neutral element, diagonal matrices simplify computations, permutation matrices reorder data, symmetric and orthogonal matrices describe fundamental geometric structures. Much of modern applied mathematics reduces complex problems to operations involving these simple forms.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Show that the product of two diagonal matrices is diagonal, and compute an example.&lt;/item&gt;
      &lt;item&gt;Find the permutation matrix that cycles &lt;math-renderer&gt;$(a,b,c)$&lt;/math-renderer&gt;into&lt;math-renderer&gt;$(b,c,a)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Prove that every permutation matrix is invertible and its inverse is its transpose.&lt;/item&gt;
      &lt;item&gt;Verify that&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;is orthogonal. What geometric transformation does it represent? 5. Determine whether&lt;/p&gt;
    &lt;p&gt;are symmetric, skew-symmetric, or neither.&lt;/p&gt;
    &lt;p&gt;One of the central motivations for linear algebra is solving systems of linear equations. These systems arise naturally in science, engineering, and data analysis whenever multiple constraints interact. Matrices provide a compact language for expressing and solving them.&lt;/p&gt;
    &lt;p&gt;A linear system consists of equations where each unknown appears only to the first power and with no products between variables. A general system of &lt;/p&gt;
    &lt;p&gt;Here the coefficients &lt;/p&gt;
    &lt;p&gt;The system can be expressed compactly as:&lt;/p&gt;
    &lt;p&gt;where&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;math-renderer&gt;$A \in \mathbb{R}^{m \times n}$&lt;/math-renderer&gt;is the coefficient matrix&lt;math-renderer&gt;$[a_{ij}]$&lt;/math-renderer&gt;,&lt;/item&gt;
      &lt;item&gt;&lt;math-renderer&gt;$\mathbf{x} \in \mathbb{R}^n$&lt;/math-renderer&gt;is the column vector of unknowns,&lt;/item&gt;
      &lt;item&gt;&lt;math-renderer&gt;$\mathbf{b} \in \mathbb{R}^m$&lt;/math-renderer&gt;is the column vector of constants.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This formulation turns the problem of solving equations into analyzing the action of a matrix.&lt;/p&gt;
    &lt;p&gt;Example 3.1.1. The system&lt;/p&gt;
    &lt;p&gt;can be written as&lt;/p&gt;
    &lt;p&gt;\begin{bmatrix} 5 \ 4 \end{bmatrix}. $$&lt;/p&gt;
    &lt;p&gt;A linear system may have:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;No solution (inconsistent): The equations conflict. Example: $ \begin{cases} x + y = 1 \ x + y = 2 \end{cases} $ has no solution.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Exactly one solution (unique): The system‚Äôs equations intersect at a single point. Example: The above system with coefficient matrix $ \begin{bmatrix} 1 &amp;amp; 2 \ 3 &amp;amp; -1 \end{bmatrix} $ has a unique solution.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Infinitely many solutions: The equations describe overlapping constraints (e.g., multiple equations representing the same line or plane).&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The nature of the solution depends on the rank of &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;In &lt;math-renderer&gt;$\mathbb{R}^2$&lt;/math-renderer&gt;, each linear equation represents a line. Solving a system means finding intersection points of lines.&lt;/item&gt;
      &lt;item&gt;In &lt;math-renderer&gt;$\mathbb{R}^3$&lt;/math-renderer&gt;, each equation represents a plane. A system may have no solution (parallel planes), one solution (a unique intersection point), or infinitely many (a line of intersection).&lt;/item&gt;
      &lt;item&gt;In higher dimensions, the picture generalizes: solutions form intersections of hyperplanes.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Linear systems are the practical foundation of linear algebra. They appear in balancing chemical reactions, circuit analysis, least-squares regression, optimization, and computer graphics. Understanding how to represent and classify their solutions is the first step toward systematic solution methods like Gaussian elimination.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Write the following system in matrix form: $ \begin{cases} 2x + 3y - z = 7, \ x - y + 4z = 1, \ 3x + 2y + z = 5 \end{cases} $&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Determine whether the system $ \begin{cases} x + y = 1, \ 2x + 2y = 2 \end{cases} $ has no solution, one solution, or infinitely many solutions.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Geometrically interpret the system $ \begin{cases} x + y = 3, \ x - y = 1 \end{cases} $ in the plane.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Solve the system $ \begin{cases} 2x + y = 1, \ x - y = 4 \end{cases} $ and check your solution.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;&lt;p&gt;In&lt;/p&gt;&lt;math-renderer&gt;$\mathbb{R}^3$&lt;/math-renderer&gt;, describe the solution set of $ \begin{cases} x + y + z = 0, \ 2x + 2y + 2z = 0 \end{cases} $. What geometric object does it represent?&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;To solve linear systems efficiently, we use Gaussian elimination: a systematic method of transforming a system into a simpler equivalent one whose solutions are easier to see. The method relies on elementary row operations that preserve the solution set.&lt;/p&gt;
    &lt;p&gt;On an augmented matrix &lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Row swapping: interchange two rows.&lt;/item&gt;
      &lt;item&gt;Row scaling: multiply a row by a nonzero scalar.&lt;/item&gt;
      &lt;item&gt;Row replacement: replace one row by itself plus a multiple of another row.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;These operations correspond to re-expressing equations in different but equivalent forms.&lt;/p&gt;
    &lt;p&gt;A matrix is in row echelon form (REF) if:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;All nonzero rows are above any zero rows.&lt;/item&gt;
      &lt;item&gt;Each leading entry (the first nonzero number from the left in a row) is to the right of the leading entry in the row above.&lt;/item&gt;
      &lt;item&gt;All entries below a leading entry are zero.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Further, if each leading entry is 1 and is the only nonzero entry in its column, the matrix is in reduced row echelon form (RREF).&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Write the augmented matrix for the system.&lt;/item&gt;
      &lt;item&gt;Use row operations to create zeros below each pivot (the leading entry in a row).&lt;/item&gt;
      &lt;item&gt;Continue column by column until the matrix is in echelon form.&lt;/item&gt;
      &lt;item&gt;Solve by back substitution: starting from the last pivot equation and working upward.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;If we continue to RREF, the solution can be read off directly.&lt;/p&gt;
    &lt;p&gt;Example 3.2.1. Solve&lt;/p&gt;
    &lt;p&gt;Step 1. Augmented matrix&lt;/p&gt;
    &lt;p&gt;Step 2. Eliminate below the first pivot&lt;/p&gt;
    &lt;p&gt;Subtract 2 times row 1 from row 2, and 3 times row 1 from row 3:&lt;/p&gt;
    &lt;p&gt;Step 3. Pivot in column 2&lt;/p&gt;
    &lt;p&gt;Divide row 2 by -3:&lt;/p&gt;
    &lt;p&gt;Add 7 times row 2 to row 3:&lt;/p&gt;
    &lt;p&gt;Step 4. Pivot in column 3&lt;/p&gt;
    &lt;p&gt;Divide row 3 by -2:&lt;/p&gt;
    &lt;p&gt;Step 5. Back substitution&lt;/p&gt;
    &lt;p&gt;From the last row: $ z = \tfrac{11}{3}. $&lt;/p&gt;
    &lt;p&gt;Second row: $ y - z = -\tfrac{1}{3} \implies y = -\tfrac{1}{3} + \tfrac{11}{3} = \tfrac{10}{3}. $&lt;/p&gt;
    &lt;p&gt;First row: $ x + 2y - z = 3 \implies x + 2\cdot\tfrac{10}{3} - \tfrac{11}{3} = 3. $&lt;/p&gt;
    &lt;p&gt;So $ x + \tfrac{20}{3} - \tfrac{11}{3} = 3 \implies x + 3 = 3 \implies x = 0. $&lt;/p&gt;
    &lt;p&gt;Solution: $ (x,y,z) = \big(0, \tfrac{10}{3}, \tfrac{11}{3}\big). $&lt;/p&gt;
    &lt;p&gt;Gaussian elimination is the foundation of computational linear algebra. It reduces complex systems to a form where solutions are visible, and it forms the basis for algorithms used in numerical analysis, scientific computing, and machine learning.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Solve by Gaussian elimination: $ \begin{cases} x + y = 2, \ 2x - y = 0. \end{cases} $&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Reduce the following augmented matrix to REF: $ \left[\begin{array}{ccc|c} 1 &amp;amp; 1 &amp;amp; 1 &amp;amp; 6 \ 2 &amp;amp; -1 &amp;amp; 3 &amp;amp; 14 \ 1 &amp;amp; 4 &amp;amp; -2 &amp;amp; -2 \end{array}\right]. $&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Show that Gaussian elimination always produces either:&lt;/p&gt;
        &lt;list rend="ul"&gt;
          &lt;item&gt;a unique solution,&lt;/item&gt;
          &lt;item&gt;infinitely many solutions, or&lt;/item&gt;
          &lt;item&gt;a contradiction (no solution).&lt;/item&gt;
        &lt;/list&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Use Gaussian elimination to find all solutions of $ \begin{cases} x + y + z = 0, \ 2x + y + z = 1. \end{cases} $&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Explain why pivoting (choosing the largest available pivot element) is useful in numerical computation.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Gaussian elimination not only provides solutions but also reveals the structure of a linear system. Two key ideas are the rank of a matrix and the consistency of a system. Rank measures the amount of independent information in the equations, while consistency determines whether the system has at least one solution.&lt;/p&gt;
    &lt;p&gt;The rank of a matrix is the number of leading pivots in its row echelon form. Equivalently, it is the maximum number of linearly independent rows or columns.&lt;/p&gt;
    &lt;p&gt;Formally,&lt;/p&gt;
    &lt;p&gt;The rank tells us the effective dimension of the space spanned by the rows (or columns).&lt;/p&gt;
    &lt;p&gt;Example 3.3.1. For&lt;/p&gt;
    &lt;p&gt;row reduction gives&lt;/p&gt;
    &lt;p&gt;Thus, &lt;/p&gt;
    &lt;p&gt;Consider the system &lt;/p&gt;
    &lt;p&gt;where &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;If &lt;math-renderer&gt;$\text{rank}(A) = \text{rank}(A|\mathbf{b}) = n$&lt;/math-renderer&gt;(number of unknowns), the system has a unique solution.&lt;/item&gt;
      &lt;item&gt;If &lt;math-renderer&gt;$\text{rank}(A) = \text{rank}(A|\mathbf{b}) &amp;amp;lt; n$&lt;/math-renderer&gt;, the system has infinitely many solutions.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Example 3.3.2. Consider&lt;/p&gt;
    &lt;p&gt;The augmented matrix is&lt;/p&gt;
    &lt;p&gt;Row reduction gives&lt;/p&gt;
    &lt;p&gt;Here, &lt;/p&gt;
    &lt;p&gt;Example 3.3.3. For&lt;/p&gt;
    &lt;p&gt;the augmented matrix reduces to&lt;/p&gt;
    &lt;p&gt;Here, &lt;/p&gt;
    &lt;p&gt;Rank is a measure of independence: it tells us how many truly distinct equations or directions are present. Consistency explains when equations align versus when they contradict. These concepts connect linear systems to vector spaces and prepare for the ideas of dimension, basis, and the Rank‚ÄìNullity Theorem.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Compute the rank of&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Determine whether the system&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;is consistent.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;&lt;p&gt;Show that the rank of the identity matrix&lt;/p&gt;&lt;math-renderer&gt;$I_n$&lt;/math-renderer&gt;is&lt;math-renderer&gt;$n$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Give an example of a system in&lt;/p&gt;&lt;math-renderer&gt;$\mathbb{R}^3$&lt;/math-renderer&gt;with infinitely many solutions, and explain why it satisfies the rank condition.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Prove that for any matrix&lt;/p&gt;&lt;math-renderer&gt;$A \in \mathbb{R}^{m \times n}$&lt;/math-renderer&gt;, $ \text{rank}(A) \leq \min(m,n). $&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;A homogeneous system is a linear system in which all constant terms are zero:&lt;/p&gt;
    &lt;p&gt;where &lt;/p&gt;
    &lt;p&gt;Every homogeneous system has at least one solution:&lt;/p&gt;
    &lt;p&gt;This is called the trivial solution. The interesting question is whether nontrivial solutions (nonzero vectors) exist.&lt;/p&gt;
    &lt;p&gt;Nontrivial solutions exist precisely when the number of unknowns exceeds the rank of the coefficient matrix:&lt;/p&gt;
    &lt;p&gt;In this case, there are infinitely many solutions, forming a subspace of &lt;/p&gt;
    &lt;p&gt;where null(A) is the set of all solutions to &lt;/p&gt;
    &lt;p&gt;Example 3.4.1. Consider&lt;/p&gt;
    &lt;p&gt;The augmented matrix is&lt;/p&gt;
    &lt;p&gt;Row reduction:&lt;/p&gt;
    &lt;p&gt;So the system is equivalent to:&lt;/p&gt;
    &lt;p&gt;From the second equation, &lt;/p&gt;
    &lt;p&gt;Thus solutions are:&lt;/p&gt;
    &lt;p&gt;The null space is the line spanned by the vector &lt;/p&gt;
    &lt;p&gt;The solution set of a homogeneous system is always a subspace of &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;If &lt;math-renderer&gt;$\text{rank}(A) = n$&lt;/math-renderer&gt;, the only solution is the zero vector.&lt;/item&gt;
      &lt;item&gt;If &lt;math-renderer&gt;$\text{rank}(A) = n-1$&lt;/math-renderer&gt;, the solution set is a line through the origin.&lt;/item&gt;
      &lt;item&gt;If &lt;math-renderer&gt;$\text{rank}(A) = n-2$&lt;/math-renderer&gt;, the solution set is a plane through the origin.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;More generally, the null space has dimension &lt;/p&gt;
    &lt;p&gt;Homogeneous systems are central to understanding vector spaces, subspaces, and dimension. They lead directly to the concepts of kernel, null space, and linear dependence. In applications, homogeneous systems appear in equilibrium problems, eigenvalue equations, and computer graphics transformations.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Solve the homogeneous system&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;What is the dimension of its solution space?&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Find all solutions of&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;&lt;p&gt;Show that the solution set of any homogeneous system is a subspace of&lt;/p&gt;&lt;math-renderer&gt;$\mathbb{R}^n$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Suppose&lt;/p&gt;&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;is a&lt;math-renderer&gt;$3 \times 3$&lt;/math-renderer&gt;matrix with&lt;math-renderer&gt;$\text{rank}(A) = 2$&lt;/math-renderer&gt;. What is the dimension of the null space of&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;?&lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;For&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;compute a basis for the null space of &lt;/p&gt;
    &lt;p&gt;Up to now we have studied vectors and matrices concretely in &lt;/p&gt;
    &lt;p&gt;A vector space over the real numbers &lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Vector addition: For any &lt;math-renderer&gt;$\mathbf{u}, \mathbf{v} \in V$&lt;/math-renderer&gt;, there is a vector&lt;math-renderer&gt;$\mathbf{u} + \mathbf{v} \in V$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Scalar multiplication: For any scalar &lt;math-renderer&gt;$c \in \mathbb{R}$&lt;/math-renderer&gt;and any&lt;math-renderer&gt;$\mathbf{v} \in V$&lt;/math-renderer&gt;, there is a vector&lt;math-renderer&gt;$c\mathbf{v} \in V$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;These operations must satisfy the following axioms (for all &lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Commutativity of addition: &lt;math-renderer&gt;$\mathbf{u} + \mathbf{v} = \mathbf{v} + \mathbf{u}$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Associativity of addition: &lt;math-renderer&gt;$(\mathbf{u} + \mathbf{v}) + \mathbf{w} = \mathbf{u} + (\mathbf{v} + \mathbf{w})$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Additive identity: There exists a zero vector &lt;math-renderer&gt;$\mathbf{0} \in V$&lt;/math-renderer&gt;such that&lt;math-renderer&gt;$\mathbf{v} + \mathbf{0} = \mathbf{v}$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Additive inverses: For each &lt;math-renderer&gt;$\mathbf{v} \in V$&lt;/math-renderer&gt;, there exists&lt;math-renderer&gt;$(-\mathbf{v} \in V$&lt;/math-renderer&gt;such that&lt;math-renderer&gt;$\mathbf{v} + (-\mathbf{v}) = \mathbf{0}$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Compatibility of scalar multiplication: &lt;math-renderer&gt;$a(b\mathbf{v}) = (ab)\mathbf{v}$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Identity element of scalars: &lt;math-renderer&gt;$1 \cdot \mathbf{v} = \mathbf{v}$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Distributivity over vector addition: &lt;math-renderer&gt;$a(\mathbf{u} + \mathbf{v}) = a\mathbf{u} + a\mathbf{v}$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Distributivity over scalar addition: &lt;math-renderer&gt;$(a+b)\mathbf{v} = a\mathbf{v} + b\mathbf{v}$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;If a set &lt;/p&gt;
    &lt;p&gt;Example 4.1.1. Standard Euclidean space &lt;/p&gt;
    &lt;p&gt;Example 4.1.2. Polynomials The set of all polynomials with real coefficients, denoted &lt;/p&gt;
    &lt;p&gt;Example 4.1.3. Functions The set of all real-valued functions on an interval, e.g. &lt;/p&gt;
    &lt;p&gt;Not every set with operations qualifies. For instance, the set of positive real numbers under usual addition is not a vector space, because additive inverses (negative numbers) are missing. The axioms must all hold.&lt;/p&gt;
    &lt;p&gt;In familiar cases like &lt;/p&gt;
    &lt;p&gt;The concept of vector space unifies seemingly different mathematical objects under a single framework. Whether dealing with forces in physics, signals in engineering, or data in machine learning, the common language of vector spaces allows us to use the same techniques everywhere.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Verify that &lt;math-renderer&gt;$\mathbb{R}^2$&lt;/math-renderer&gt;with standard addition and scalar multiplication satisfies all eight vector space axioms.&lt;/item&gt;
      &lt;item&gt;Show that the set of integers &lt;math-renderer&gt;$\mathbb{Z}$&lt;/math-renderer&gt;with ordinary operations is not a vector space over&lt;math-renderer&gt;$\mathbb{R}$&lt;/math-renderer&gt;. Which axiom fails?&lt;/item&gt;
      &lt;item&gt;Consider the set of all polynomials of degree at most 3. Show it forms a vector space over &lt;math-renderer&gt;$\mathbb{R}$&lt;/math-renderer&gt;. What is its dimension?&lt;/item&gt;
      &lt;item&gt;Give an example of a vector space where the vectors are not geometric objects.&lt;/item&gt;
      &lt;item&gt;Prove that in any vector space, the zero vector is unique.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;A subspace is a smaller vector space living inside a larger one. Just as lines and planes naturally sit inside three-dimensional space, subspaces generalize these ideas to higher dimensions and more abstract settings.&lt;/p&gt;
    &lt;p&gt;Let &lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;&lt;math-renderer&gt;$\mathbf{0} \in W$&lt;/math-renderer&gt;(contains the zero vector),&lt;/item&gt;
      &lt;item&gt;For all &lt;math-renderer&gt;$\mathbf{u}, \mathbf{v} \in W$&lt;/math-renderer&gt;, the sum&lt;math-renderer&gt;$\mathbf{u} + \mathbf{v} \in W$&lt;/math-renderer&gt;(closed under addition),&lt;/item&gt;
      &lt;item&gt;For all scalars &lt;math-renderer&gt;$c \in \mathbb{R}$&lt;/math-renderer&gt;and vectors&lt;math-renderer&gt;$\mathbf{v} \in W$&lt;/math-renderer&gt;, the product&lt;math-renderer&gt;$c\mathbf{v} \in W$&lt;/math-renderer&gt;(closed under scalar multiplication).&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;If these hold, then &lt;/p&gt;
    &lt;p&gt;Example 4.2.1. Line through the origin in &lt;/p&gt;
    &lt;p&gt;is a subspace of &lt;/p&gt;
    &lt;p&gt;Example 4.2.2. The x‚Äìy plane in &lt;/p&gt;
    &lt;p&gt;is a subspace of &lt;/p&gt;
    &lt;p&gt;Example 4.2.3. Null space of a matrix For a matrix &lt;/p&gt;
    &lt;p&gt;is a subspace of &lt;/p&gt;
    &lt;p&gt;Not every subset is a subspace.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;The set &lt;math-renderer&gt;${ (x,y) \in \mathbb{R}^2 \mid x \geq 0 }$&lt;/math-renderer&gt;is not a subspace: it is not closed under scalar multiplication (a negative scalar breaks the condition).&lt;/item&gt;
      &lt;item&gt;Any line in &lt;math-renderer&gt;$\mathbb{R}^2$&lt;/math-renderer&gt;that does not pass through the origin is not a subspace, because it does not contain&lt;math-renderer&gt;$\mathbf{0}$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Subspaces are the linear structures inside vector spaces.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;In &lt;math-renderer&gt;$\mathbb{R}^2$&lt;/math-renderer&gt;, the subspaces are: the zero vector, any line through the origin, or the entire plane.&lt;/item&gt;
      &lt;item&gt;In &lt;math-renderer&gt;$\mathbb{R}^3$&lt;/math-renderer&gt;, the subspaces are: the zero vector, any line through the origin, any plane through the origin, or the entire space.&lt;/item&gt;
      &lt;item&gt;In higher dimensions, the same principle applies: subspaces are the flat linear pieces through the origin.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Subspaces capture the essential structure of linear problems. Column spaces, row spaces, and null spaces are all subspaces. Much of linear algebra consists of understanding how these subspaces intersect, span, and complement each other.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Prove that the set &lt;math-renderer&gt;$W = { (x,0) \mid x \in \mathbb{R} } \subseteq \mathbb{R}^2$&lt;/math-renderer&gt;is a subspace.&lt;/item&gt;
      &lt;item&gt;Show that the line &lt;math-renderer&gt;${ (1+t, 2t) \mid t \in \mathbb{R} }$&lt;/math-renderer&gt;is not a subspace of&lt;math-renderer&gt;$\mathbb{R}^2$&lt;/math-renderer&gt;. Which condition fails?&lt;/item&gt;
      &lt;item&gt;Determine whether the set of all vectors &lt;math-renderer&gt;$(x,y,z) \in \mathbb{R}^3$&lt;/math-renderer&gt;satisfying&lt;math-renderer&gt;$x+y+z=0$&lt;/math-renderer&gt;is a subspace.&lt;/item&gt;
      &lt;item&gt;For the matrix&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;describe the null space of &lt;/p&gt;
    &lt;p&gt;The ideas of span, basis, and dimension provide the language for describing the size and structure of subspaces. Together, they tell us how a vector space is generated, how many building blocks it requires, and how those blocks can be chosen.&lt;/p&gt;
    &lt;p&gt;Given a set of vectors &lt;/p&gt;
    &lt;p&gt;The span is always a subspace of &lt;/p&gt;
    &lt;p&gt;Example 4.3.1. In &lt;/p&gt;
    &lt;p&gt;A basis of a vector space &lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Span &lt;math-renderer&gt;$V$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Are linearly independent (no vector in the set is a linear combination of the others).&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;If either condition fails, the set is not a basis.&lt;/p&gt;
    &lt;p&gt;Example 4.3.2. In &lt;/p&gt;
    &lt;p&gt;form a basis. Every vector &lt;/p&gt;
    &lt;p&gt;The dimension of a vector space &lt;/p&gt;
    &lt;p&gt;Examples 4.3.3.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;math-renderer&gt;$\dim(\mathbb{R}^2) = 2$&lt;/math-renderer&gt;, with basis&lt;math-renderer&gt;$(1,0), (0,1)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;&lt;math-renderer&gt;$\dim(\mathbb{R}^3) = 3$&lt;/math-renderer&gt;, with basis&lt;math-renderer&gt;$(1,0,0), (0,1,0), (0,0,1)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;The set of polynomials of degree at most 3 has dimension 4, with basis &lt;math-renderer&gt;$(1, x, x^2, x^3)$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;The span is like the reach of a set of vectors.&lt;/item&gt;
      &lt;item&gt;A basis is the minimal set of directions needed to reach everything in the space.&lt;/item&gt;
      &lt;item&gt;The dimension is the count of those independent directions.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Lines, planes, and higher-dimensional flats can all be described in terms of span, basis, and dimension.&lt;/p&gt;
    &lt;p&gt;These concepts classify vector spaces and subspaces in terms of size and structure. Many theorems in linear algebra-such as the Rank‚ÄìNullity Theorem-are consequences of understanding span, basis, and dimension. In practical terms, bases are how we encode data in coordinates, and dimension tells us how much freedom a system truly has.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Show that &lt;math-renderer&gt;$(1,0,0)$&lt;/math-renderer&gt;,&lt;math-renderer&gt;$(0,1,0)$&lt;/math-renderer&gt;,&lt;math-renderer&gt;$(1,1,0)$&lt;/math-renderer&gt;span the&lt;math-renderer&gt;$xy$&lt;/math-renderer&gt;-plane in&lt;math-renderer&gt;$\mathbb{R}^3$&lt;/math-renderer&gt;. Are they a basis?&lt;/item&gt;
      &lt;item&gt;Find a basis for the line &lt;math-renderer&gt;${(2t,-3t,t) : t \in \mathbb{R}}$&lt;/math-renderer&gt;in&lt;math-renderer&gt;$\mathbb{R}^3$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Determine the dimension of the subspace of &lt;math-renderer&gt;$\mathbb{R}^3$&lt;/math-renderer&gt;defined by&lt;math-renderer&gt;$x+y+z=0$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Prove that any two different bases of &lt;math-renderer&gt;$\mathbb{R}^n$&lt;/math-renderer&gt;must contain exactly&lt;math-renderer&gt;$n$&lt;/math-renderer&gt;vectors.&lt;/item&gt;
      &lt;item&gt;Give a basis for the set of polynomials of degree &lt;math-renderer&gt;$\leq 2$&lt;/math-renderer&gt;. What is its dimension?&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Once a basis for a vector space is chosen, every vector can be expressed uniquely as a linear combination of the basis vectors. The coefficients in this combination are called the coordinates of the vector relative to that basis. Coordinates allow us to move between the abstract world of vector spaces and the concrete world of numbers.&lt;/p&gt;
    &lt;p&gt;Let &lt;/p&gt;
    &lt;p&gt;be an ordered basis for &lt;/p&gt;
    &lt;p&gt;The scalars &lt;/p&gt;
    &lt;p&gt;Example 4.4.1. Let the basis be&lt;/p&gt;
    &lt;p&gt;To find the coordinates of &lt;/p&gt;
    &lt;p&gt;This gives the system&lt;/p&gt;
    &lt;p&gt;Adding: &lt;/p&gt;
    &lt;p&gt;So,&lt;/p&gt;
    &lt;p&gt;In &lt;/p&gt;
    &lt;p&gt;Relative to this basis, the coordinates of a vector are simply its entries. Thus, column vectors are coordinate representations by default.&lt;/p&gt;
    &lt;p&gt;If &lt;/p&gt;
    &lt;p&gt;with basis vectors as columns. For any vector &lt;/p&gt;
    &lt;p&gt;$$ \mathbf{u} = P[\mathbf{u}]{\mathcal{B}}, \qquad [\mathbf{u}]{\mathcal{B}} = P^{-1}\mathbf{u}. $$&lt;/p&gt;
    &lt;p&gt;Thus, switching between bases reduces to matrix multiplication.&lt;/p&gt;
    &lt;p&gt;Coordinates are the address of a vector relative to a chosen set of directions. Different bases are like different coordinate systems: Cartesian, rotated, skewed, or scaled. The same vector may look very different numerically depending on the basis, but its geometric identity is unchanged.&lt;/p&gt;
    &lt;p&gt;Coordinates turn abstract vectors into concrete numerical data. Changing basis is the algebraic language for rotations of axes, diagonalization of matrices, and principal component analysis in data science. Mastery of coordinates is essential for moving fluidly between geometry, algebra, and computation.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Express &lt;math-renderer&gt;$(4,2)$&lt;/math-renderer&gt;in terms of the basis&lt;math-renderer&gt;$(1,1), (1,-1)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Find the coordinates of &lt;math-renderer&gt;$(1,2,3)$&lt;/math-renderer&gt;relative to the standard basis of&lt;math-renderer&gt;$\mathbb{R}^3$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;If &lt;math-renderer&gt;$\mathcal{B} = {(2,0), (0,3)}$&lt;/math-renderer&gt;, compute&lt;math-renderer&gt;$[ (4,6) ]_{\mathcal{B}}$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Construct the change of basis matrix from the standard basis of &lt;math-renderer&gt;$\mathbb{R}^2$&lt;/math-renderer&gt;to&lt;math-renderer&gt;$\mathcal{B} = {(1,1), (1,-1)}$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Prove that coordinate representation with respect to a basis is unique.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;A central theme of linear algebra is understanding linear transformations: functions between vector spaces that preserve their algebraic structure. These transformations generalize the idea of matrix multiplication and capture the essence of linear behavior.&lt;/p&gt;
    &lt;p&gt;Let &lt;/p&gt;
    &lt;p&gt;is called a linear transformation (or linear map) if for all vectors &lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Additivity:&lt;/p&gt;
        &lt;p&gt;$$ T(\mathbf{u} + \mathbf{v}) = T(\mathbf{u}) + T(\mathbf{v}), $$&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Homogeneity:&lt;/p&gt;
        &lt;p&gt;$$ T(c\mathbf{u}) = cT(\mathbf{u}). $$&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;If both conditions hold, then &lt;/p&gt;
    &lt;p&gt;Example 5.1.1. Scaling in &lt;/p&gt;
    &lt;p&gt;This doubles the length of every vector, preserving direction. It is linear.&lt;/p&gt;
    &lt;p&gt;Example 5.1.2. Rotation. Let &lt;/p&gt;
    &lt;p&gt;This rotates vectors by angle &lt;/p&gt;
    &lt;p&gt;Example 5.1.3. Differentiation. Let &lt;/p&gt;
    &lt;p&gt;The map &lt;/p&gt;
    &lt;p&gt;is not linear, because &lt;/p&gt;
    &lt;p&gt;Linear transformations are exactly those that preserve the origin, lines through the origin, and proportions along those lines. They include familiar operations: scaling, rotations, reflections, shears, and projections. Nonlinear transformations bend or curve space, breaking these properties.&lt;/p&gt;
    &lt;p&gt;Linear transformations unify geometry, algebra, and computation. They explain how matrices act on vectors, how data can be rotated or projected, and how systems evolve under linear rules. Much of linear algebra is devoted to understanding these transformations, their representations, and their invariants.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;&lt;p&gt;Verify that&lt;/p&gt;&lt;math-renderer&gt;$T(x,y) = (3x-y, 2y)$&lt;/math-renderer&gt;is a linear transformation on&lt;math-renderer&gt;$\mathbb{R}^2$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Show that&lt;/p&gt;&lt;math-renderer&gt;$T(x,y) = (x+1, y)$&lt;/math-renderer&gt;is not linear. Which axiom fails?&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Prove that if&lt;/p&gt;&lt;math-renderer&gt;$T$&lt;/math-renderer&gt;and&lt;math-renderer&gt;$S$&lt;/math-renderer&gt;are linear transformations, then so is&lt;math-renderer&gt;$T+S$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Give an example of a linear transformation from&lt;/p&gt;&lt;math-renderer&gt;$\mathbb{R}^3$&lt;/math-renderer&gt;to&lt;math-renderer&gt;$\mathbb{R}^2$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Let&lt;/p&gt;&lt;math-renderer&gt;$T:\mathbb{R}[x] \to \mathbb{R}[x]$&lt;/math-renderer&gt;be integration:&lt;p&gt;$$ T(p(x)) = \int_0^x p(t),dt. $$&lt;/p&gt;&lt;p&gt;Prove that&lt;/p&gt;&lt;math-renderer&gt;$T$&lt;/math-renderer&gt;is a linear transformation.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Every linear transformation between finite-dimensional vector spaces can be represented by a matrix. This correspondence is one of the central insights of linear algebra: it lets us use the tools of matrix arithmetic to study abstract transformations.&lt;/p&gt;
    &lt;p&gt;Let &lt;/p&gt;
    &lt;p&gt;The action of &lt;/p&gt;
    &lt;p&gt;$$ T(\mathbf{e}j) = \begin{bmatrix} a{1j} \ a_{2j} \ \vdots \ a_{mj} \end{bmatrix}. $$&lt;/p&gt;
    &lt;p&gt;Placing these outputs as columns gives the matrix of &lt;/p&gt;
    &lt;p&gt;Then for any vector &lt;/p&gt;
    &lt;p&gt;Example 5.2.1. Scaling in &lt;/p&gt;
    &lt;p&gt;So the matrix is&lt;/p&gt;
    &lt;p&gt;Example 5.2.2. Rotation in the plane. The rotation transformation &lt;/p&gt;
    &lt;p&gt;Example 5.2.3. Projection onto the x-axis. The map &lt;/p&gt;
    &lt;p&gt;Matrix representations depend on the chosen basis. If &lt;/p&gt;
    &lt;p&gt;Matrices are not just convenient notation-they are linear maps once a basis is fixed. Every rotation, reflection, projection, shear, or scaling corresponds to multiplying by a specific matrix. Thus, studying linear transformations reduces to studying their matrices.&lt;/p&gt;
    &lt;p&gt;Matrix representations make linear transformations computable. They connect abstract definitions to explicit calculations, enabling algorithms for solving systems, finding eigenvalues, and performing decompositions. Applications from graphics to machine learning depend on this translation.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Find the matrix representation of &lt;math-renderer&gt;$T:\mathbb{R}^2 \to \mathbb{R}^2$&lt;/math-renderer&gt;,&lt;math-renderer&gt;$T(x,y) = (x+y, x-y)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Determine the matrix of the linear transformation &lt;math-renderer&gt;$T:\mathbb{R}^3 \to \mathbb{R}^2$&lt;/math-renderer&gt;,&lt;math-renderer&gt;$T(x,y,z) = (x+z, y-2z)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;What matrix represents reflection across the line &lt;math-renderer&gt;$y=x$&lt;/math-renderer&gt;in&lt;math-renderer&gt;$\mathbb{R}^2$&lt;/math-renderer&gt;?&lt;/item&gt;
      &lt;item&gt;Show that the matrix of the identity transformation on &lt;math-renderer&gt;$\mathbb{R}^n$&lt;/math-renderer&gt;is&lt;math-renderer&gt;$I_n$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;For the differentiation map &lt;math-renderer&gt;$D:\mathbb{R}_2[x] \to \mathbb{R}_1[x]$&lt;/math-renderer&gt;, where&lt;math-renderer&gt;$\mathbb{R}_k[x]$&lt;/math-renderer&gt;is the space of polynomials of degree at most&lt;math-renderer&gt;$k$&lt;/math-renderer&gt;, find the matrix of&lt;math-renderer&gt;$D$&lt;/math-renderer&gt;relative to the bases&lt;math-renderer&gt;${1,x,x^2}$&lt;/math-renderer&gt;and&lt;math-renderer&gt;${1,x}$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;To understand a linear transformation deeply, we must examine what it kills and what it produces. These ideas are captured by the kernel and the image, two fundamental subspaces associated with any linear map.&lt;/p&gt;
    &lt;p&gt;The kernel (or null space) of a linear transformation &lt;/p&gt;
    &lt;p&gt;The kernel is always a subspace of &lt;/p&gt;
    &lt;p&gt;Example 5.3.1. Let &lt;/p&gt;
    &lt;p&gt;In matrix form,&lt;/p&gt;
    &lt;p&gt;To find the kernel, solve&lt;/p&gt;
    &lt;p&gt;This gives the equations &lt;/p&gt;
    &lt;p&gt;a line in &lt;/p&gt;
    &lt;p&gt;The image (or range) of a linear transformation &lt;/p&gt;
    &lt;p&gt;Equivalently, it is the span of the columns of the representing matrix. The image is always a subspace of &lt;/p&gt;
    &lt;p&gt;Example 5.3.2. For the same transformation as above,&lt;/p&gt;
    &lt;p&gt;the columns are &lt;/p&gt;
    &lt;p&gt;For a linear transformation &lt;/p&gt;
    &lt;p&gt;This fundamental result connects the lost directions (kernel) with the achieved directions (image).&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;The kernel describes how the transformation flattens space (e.g., projecting a 3D object onto a plane).&lt;/item&gt;
      &lt;item&gt;The image describes the target subspace reached by the transformation.&lt;/item&gt;
      &lt;item&gt;The rank‚Äìnullity theorem quantifies the tradeoff: the more dimensions collapse, the fewer remain in the image.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Kernel and image capture the essence of a linear map. They classify transformations, explain when systems have unique or infinite solutions, and form the backbone of important results like the Rank‚ÄìNullity Theorem, diagonalization, and spectral theory.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Find the kernel and image of &lt;math-renderer&gt;$T:\mathbb{R}^2 \to \mathbb{R}^2$&lt;/math-renderer&gt;,&lt;math-renderer&gt;$T(x,y) = (x-y, x+y)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Let $A = \begin{bmatrix} 1 &amp;amp; 2 &amp;amp; 3 \ 0 &amp;amp; 1 &amp;amp; 4 \end{bmatrix}$. Find bases for &lt;math-renderer&gt;$\ker(A)$&lt;/math-renderer&gt;and&lt;math-renderer&gt;$\text{im}(A)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;For the projection map &lt;math-renderer&gt;$P(x,y,z) = (x,y,0)$&lt;/math-renderer&gt;, describe the kernel and image.&lt;/item&gt;
      &lt;item&gt;Prove that &lt;math-renderer&gt;$\ker(T)$&lt;/math-renderer&gt;and&lt;math-renderer&gt;$\text{im}(T)$&lt;/math-renderer&gt;are always subspaces.&lt;/item&gt;
      &lt;item&gt;Verify the Rank‚ÄìNullity Theorem for the transformation in Example 5.3.1.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Linear transformations can look very different depending on the coordinate system we use. The process of rewriting vectors and transformations relative to a new basis is called a change of basis. This concept lies at the heart of diagonalization, orthogonalization, and many computational techniques.&lt;/p&gt;
    &lt;p&gt;Suppose &lt;/p&gt;
    &lt;p&gt;If &lt;/p&gt;
    &lt;p&gt;Equivalently,&lt;/p&gt;
    &lt;p&gt;Here, &lt;/p&gt;
    &lt;p&gt;Let &lt;/p&gt;
    &lt;p&gt;Thus, changing basis corresponds to a similarity transformation of the matrix.&lt;/p&gt;
    &lt;p&gt;Example 5.4.1. Let &lt;/p&gt;
    &lt;p&gt;In the standard basis, its matrix is&lt;/p&gt;
    &lt;p&gt;Now consider the basis &lt;/p&gt;
    &lt;p&gt;Then&lt;/p&gt;
    &lt;p&gt;Computing gives&lt;/p&gt;
    &lt;p&gt;In this new basis, the transformation is diagonal: one direction is scaled by 4, the other collapsed to 0.&lt;/p&gt;
    &lt;p&gt;Change of basis is like rotating or skewing your coordinate grid. The underlying transformation does not change, but its description in numbers becomes simpler or more complicated depending on the basis. Finding a basis that simplifies a transformation (often a diagonal basis) is a key theme in linear algebra.&lt;/p&gt;
    &lt;p&gt;Change of basis connects the abstract notion of similarity to practical computation. It is the tool that allows us to diagonalize matrices, compute eigenvalues, and simplify complex transformations. In applications, it corresponds to choosing a more natural coordinate system-whether in geometry, physics, or machine learning.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Let $A = \begin{bmatrix} 2 &amp;amp; 1 \ 0 &amp;amp; 2 \end{bmatrix}$. Compute its representation in the basis &lt;math-renderer&gt;${(1,0),(1,1)}$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Find the change-of-basis matrix from the standard basis of &lt;math-renderer&gt;$\mathbb{R}^2$&lt;/math-renderer&gt;to&lt;math-renderer&gt;${(2,1),(1,1)}$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Prove that similar matrices (related by &lt;math-renderer&gt;$P^{-1}AP$&lt;/math-renderer&gt;) represent the same linear transformation under different bases.&lt;/item&gt;
      &lt;item&gt;Diagonalize the matrix $A = \begin{bmatrix} 1 &amp;amp; 0 \ 0 &amp;amp; -1 \end{bmatrix}$ in the basis &lt;math-renderer&gt;${(1,1),(1,-1)}$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;In &lt;math-renderer&gt;$\mathbb{R}^3$&lt;/math-renderer&gt;, let&lt;math-renderer&gt;$\mathcal{B} = {(1,0,0),(1,1,0),(1,1,1)}$&lt;/math-renderer&gt;. Construct the change-of-basis matrix&lt;math-renderer&gt;$P$&lt;/math-renderer&gt;and compute&lt;math-renderer&gt;$P^{-1}$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Determinants are numerical values associated with square matrices. At first they may appear as a complicated formula, but their importance comes from what they measure: determinants encode scaling, orientation, and invertibility of linear transformations. They bridge algebra and geometry.&lt;/p&gt;
    &lt;p&gt;For a &lt;/p&gt;
    &lt;p&gt;the determinant is defined as&lt;/p&gt;
    &lt;p&gt;Geometric meaning: If &lt;/p&gt;
    &lt;p&gt;For&lt;/p&gt;
    &lt;p&gt;the determinant can be computed as&lt;/p&gt;
    &lt;p&gt;Geometric meaning: In &lt;/p&gt;
    &lt;p&gt;For &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;If &lt;math-renderer&gt;$\det(A) = 0$&lt;/math-renderer&gt;: the transformation squashes space into a lower dimension, so&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;is not invertible.&lt;/item&gt;
      &lt;item&gt;If &lt;math-renderer&gt;$\det(A) &amp;amp;gt; 0$&lt;/math-renderer&gt;: volume is scaled by&lt;math-renderer&gt;$\det(A)$&lt;/math-renderer&gt;, orientation preserved.&lt;/item&gt;
      &lt;item&gt;If &lt;math-renderer&gt;$\det(A) &amp;amp;lt; 0$&lt;/math-renderer&gt;: volume is scaled by&lt;math-renderer&gt;$|\det(A)|$&lt;/math-renderer&gt;, orientation reversed.&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;&lt;p&gt;Shear in&lt;/p&gt;&lt;math-renderer&gt;$\mathbb{R}^2$&lt;/math-renderer&gt;: $A = \begin{bmatrix} 1 &amp;amp; 1 \ 0 &amp;amp; 1 \end{bmatrix}$. Then&lt;math-renderer&gt;$\det(A) = 1$&lt;/math-renderer&gt;. The transformation slants the unit square into a parallelogram but preserves area.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Projection in&lt;/p&gt;&lt;math-renderer&gt;$\mathbb{R}^2$&lt;/math-renderer&gt;: $A = \begin{bmatrix} 1 &amp;amp; 0 \ 0 &amp;amp; 0 \end{bmatrix}$. Then&lt;math-renderer&gt;$\det(A) = 0$&lt;/math-renderer&gt;. The unit square collapses into a line segment: area vanishes.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Rotation in&lt;/p&gt;&lt;math-renderer&gt;$\mathbb{R}^2$&lt;/math-renderer&gt;: $R_\theta = \begin{bmatrix} \cos\theta &amp;amp; -\sin\theta \ \sin\theta &amp;amp; \cos\theta \end{bmatrix}$. Then&lt;math-renderer&gt;$\det(R_\theta) = 1$&lt;/math-renderer&gt;. Rotations preserve area and orientation.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The determinant is not just a formula-it is a measure of transformation. It tells us whether a matrix is invertible, how it distorts space, and whether it flips orientation. This geometric insight makes the determinant indispensable in analysis, geometry, and applied mathematics.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Compute the determinant of $\begin{bmatrix} 2 &amp;amp; 3 \ 1 &amp;amp; 4 \end{bmatrix}$. What area scaling factor does it represent?&lt;/item&gt;
      &lt;item&gt;Find the determinant of the shear matrix $\begin{bmatrix} 1 &amp;amp; 2 \ 0 &amp;amp; 1 \end{bmatrix}$. What happens to the area of the unit square?&lt;/item&gt;
      &lt;item&gt;For the &lt;math-renderer&gt;$3 \times 3$&lt;/math-renderer&gt;matrix $\begin{bmatrix} 1 &amp;amp; 0 &amp;amp; 0 \ 0 &amp;amp; 2 &amp;amp; 0 \ 0 &amp;amp; 0 &amp;amp; 3 \end{bmatrix}$, compute the determinant. How does it scale volume in&lt;math-renderer&gt;$\mathbb{R}^3$&lt;/math-renderer&gt;?&lt;/item&gt;
      &lt;item&gt;Show that any rotation matrix in &lt;math-renderer&gt;$\mathbb{R}^2$&lt;/math-renderer&gt;has determinant&lt;math-renderer&gt;$1$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Give an example of a &lt;math-renderer&gt;$2 \times 2$&lt;/math-renderer&gt;matrix with determinant&lt;math-renderer&gt;$-1$&lt;/math-renderer&gt;. What geometric action does it represent?&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Beyond their geometric meaning, determinants satisfy a collection of algebraic rules that make them powerful tools in linear algebra. These properties allow us to compute efficiently, test invertibility, and understand how determinants behave under matrix operations.&lt;/p&gt;
    &lt;p&gt;Let &lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Identity:&lt;/p&gt;
        &lt;p&gt;$$ \det(I_n) = 1. $$&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Triangular matrices: If&lt;/p&gt;&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;is upper or lower triangular, then&lt;p&gt;$$ \det(A) = a_{11} a_{22} \cdots a_{nn}. $$&lt;/p&gt;&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Row/column swap: Interchanging two rows (or columns) multiplies the determinant by&lt;/p&gt;&lt;math-renderer&gt;$-1$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Row/column scaling: Multiplying a row (or column) by a scalar&lt;/p&gt;&lt;math-renderer&gt;$c$&lt;/math-renderer&gt;multiplies the determinant by&lt;math-renderer&gt;$c$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Row/column addition: Adding a multiple of one row to another does not change the determinant.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Transpose:&lt;/p&gt;
        &lt;p&gt;$$ \det(A^T) = \det(A). $$&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Multiplicativity:&lt;/p&gt;
        &lt;p&gt;$$ \det(AB) = \det(A)\det(B). $$&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Invertibility:&lt;/p&gt;&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;is invertible if and only if&lt;math-renderer&gt;$\det(A) \neq 0$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Example 6.2.1. For&lt;/p&gt;
    &lt;p&gt;Example 6.2.2. Let&lt;/p&gt;
    &lt;p&gt;Then&lt;/p&gt;
    &lt;p&gt;Since &lt;/p&gt;
    &lt;p&gt;This matches the multiplicativity rule: &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Row swaps: flipping orientation of space.&lt;/item&gt;
      &lt;item&gt;Scaling a row: stretching space in one direction.&lt;/item&gt;
      &lt;item&gt;Row replacement: sliding hyperplanes without altering volume.&lt;/item&gt;
      &lt;item&gt;Multiplicativity: performing two transformations multiplies their scaling factors.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;These properties make determinants both computationally manageable and geometrically interpretable.&lt;/p&gt;
    &lt;p&gt;Determinant properties connect computation with geometry and theory. They explain why Gaussian elimination works, why invertibility is equivalent to nonzero determinant, and why determinants naturally arise in areas like volume computation, eigenvalue theory, and differential equations.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Compute the determinant of&lt;/p&gt;
        &lt;p&gt;$$ A = \begin{bmatrix} 1 &amp;amp; 2 &amp;amp; 3 \ 0 &amp;amp; 1 &amp;amp; 4 \ 0 &amp;amp; 0 &amp;amp; 2 \end{bmatrix}. $$&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Show that if two rows of a square matrix are identical, then its determinant is zero.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Verify&lt;/p&gt;&lt;math-renderer&gt;$\det(A^T) = \det(A)$&lt;/math-renderer&gt;for&lt;p&gt;$$ A = \begin{bmatrix} 2 &amp;amp; -1 \ 3 &amp;amp; 4 \end{bmatrix}. $$&lt;/p&gt;&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;If&lt;/p&gt;&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;is invertible, prove that&lt;p&gt;$$ \det(A^{-1}) = \frac{1}{\det(A)}. $$&lt;/p&gt;&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Suppose&lt;/p&gt;&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;is a&lt;math-renderer&gt;$3\times 3$&lt;/math-renderer&gt;matrix with&lt;math-renderer&gt;$\det(A) = 5$&lt;/math-renderer&gt;. What is&lt;math-renderer&gt;$\det(2A)$&lt;/math-renderer&gt;?&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;While determinants of small matrices can be computed directly from formulas, larger matrices require a systematic method. The cofactor expansion (also known as Laplace expansion) provides a recursive way to compute determinants by breaking them into smaller ones.&lt;/p&gt;
    &lt;p&gt;For an &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;The minor &lt;math-renderer&gt;$M_{ij}$&lt;/math-renderer&gt;is the determinant of the&lt;math-renderer&gt;$(n-1) \times (n-1)$&lt;/math-renderer&gt;matrix obtained by deleting the&lt;math-renderer&gt;$i$&lt;/math-renderer&gt;-th row and&lt;math-renderer&gt;$j$&lt;/math-renderer&gt;-th column of&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;The cofactor &lt;math-renderer&gt;$C_{ij}$&lt;/math-renderer&gt;is defined by&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The sign factor &lt;/p&gt;
    &lt;p&gt;$$ \begin{bmatrix}&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&amp;amp; - &amp;amp; + &amp;amp; - &amp;amp; \cdots \&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&amp;amp; + &amp;amp; - &amp;amp; + &amp;amp; \cdots \&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&amp;amp; - &amp;amp; + &amp;amp; - &amp;amp; \cdots \ \vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; \vdots &amp;amp; \ddots \end{bmatrix}. $$&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The determinant of &lt;/p&gt;
    &lt;p&gt;Example 6.3.1. Compute&lt;/p&gt;
    &lt;p&gt;Expand along the first row:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;For &lt;math-renderer&gt;$C_{11}$&lt;/math-renderer&gt;: $M_{11} = \det \begin{bmatrix} 4 &amp;amp; 5 \ 0 &amp;amp; 6 \end{bmatrix} = 24$, so&lt;math-renderer&gt;$C_{11} = (+1)(24) = 24$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;For &lt;math-renderer&gt;$C_{12}$&lt;/math-renderer&gt;: $M_{12} = \det \begin{bmatrix} 0 &amp;amp; 5 \ 1 &amp;amp; 6 \end{bmatrix} = 0 - 5 = -5$, so&lt;math-renderer&gt;$C_{12} = (-1)(-5) = 5$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;For &lt;math-renderer&gt;$C_{13}$&lt;/math-renderer&gt;: $M_{13} = \det \begin{bmatrix} 0 &amp;amp; 4 \ 1 &amp;amp; 0 \end{bmatrix} = 0 - 4 = -4$, so&lt;math-renderer&gt;$C_{13} = (+1)(-4) = -4$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Thus,&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Expansion along any row or column yields the same result.&lt;/item&gt;
      &lt;item&gt;The cofactor expansion provides a recursive definition of determinant: a determinant of size &lt;math-renderer&gt;$n$&lt;/math-renderer&gt;is expressed in terms of determinants of size&lt;math-renderer&gt;$n-1$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Cofactors are fundamental in constructing the adjugate matrix, which gives a formula for inverses:&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Cofactor expansion breaks down the determinant into contributions from sub-volumes defined by fixing one row or column at a time. Each cofactor measures how that row/column influences the overall volume scaling.&lt;/p&gt;
    &lt;p&gt;Cofactor expansion generalizes the small-matrix formulas and provides a conceptual definition of determinants. While not the most efficient way to compute determinants for large matrices, it is essential for theory, proofs, and connections to adjugates, Cramer‚Äôs rule, and classical geometry.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Compute the determinant of&lt;/p&gt;
        &lt;p&gt;$$ \begin{bmatrix} 2 &amp;amp; 0 &amp;amp; 1 \ 3 &amp;amp; -1 &amp;amp; 4 \ 1 &amp;amp; 2 &amp;amp; 0 \end{bmatrix} $$&lt;/p&gt;
        &lt;p&gt;by cofactor expansion along the first column.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Verify that expanding along the second row of Example 6.3.1 gives the same determinant.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Prove that expansion along any row gives the same value.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Show that if a row of a matrix is zero, then its determinant is zero.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Use cofactor expansion to prove that&lt;/p&gt;&lt;math-renderer&gt;$\det(A) = \det(A^T)$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Determinants are not merely algebraic curiosities; they have concrete geometric and computational uses. Two of the most important applications are measuring volumes and testing invertibility of matrices.&lt;/p&gt;
    &lt;p&gt;Given vectors &lt;/p&gt;
    &lt;p&gt;Then &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;In &lt;math-renderer&gt;$\mathbb{R}^2$&lt;/math-renderer&gt;,&lt;math-renderer&gt;$|\det(A)|$&lt;/math-renderer&gt;gives the area of the parallelogram spanned by&lt;math-renderer&gt;$\mathbf{v}_1, \mathbf{v}_2$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;In &lt;math-renderer&gt;$\mathbb{R}^3$&lt;/math-renderer&gt;,&lt;math-renderer&gt;$|\det(A)|$&lt;/math-renderer&gt;gives the volume of the parallelepiped spanned by&lt;math-renderer&gt;$\mathbf{v}_1, \mathbf{v}_2, \mathbf{v}_3$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;In higher dimensions, it generalizes to &lt;math-renderer&gt;$n$&lt;/math-renderer&gt;-dimensional volume (hypervolume).&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Example 6.4.1. Let&lt;/p&gt;
    &lt;p&gt;Then&lt;/p&gt;
    &lt;p&gt;So the parallelepiped has volume &lt;/p&gt;
    &lt;p&gt;A square matrix &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;If &lt;math-renderer&gt;$\det(A) = 0$&lt;/math-renderer&gt;: the transformation collapses space into a lower dimension (area/volume is zero). No inverse exists.&lt;/item&gt;
      &lt;item&gt;If &lt;math-renderer&gt;$\det(A) \neq 0$&lt;/math-renderer&gt;: the transformation scales volume by&lt;math-renderer&gt;$|\det(A)|$&lt;/math-renderer&gt;, and is reversible.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Example 6.4.2. The matrix&lt;/p&gt;
    &lt;p&gt;has determinant &lt;/p&gt;
    &lt;p&gt;Determinants also provide an explicit formula for solving systems of linear equations when the matrix is invertible. For &lt;/p&gt;
    &lt;p&gt;where &lt;/p&gt;
    &lt;p&gt;The sign of &lt;/p&gt;
    &lt;p&gt;Determinants condense key information: they measure scaling, test invertibility, and track orientation. These insights are indispensable in geometry (areas and volumes), analysis (Jacobian determinants in calculus), and computation ( solving systems and checking singularity).&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;&lt;p&gt;Compute the area of the parallelogram spanned by&lt;/p&gt;&lt;math-renderer&gt;$(2,1)$&lt;/math-renderer&gt;and&lt;math-renderer&gt;$(1,3)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Find the volume of the parallelepiped spanned by&lt;/p&gt;&lt;math-renderer&gt;$(1,0,0), (1,1,0), (1,1,1)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Determine whether the matrix $\begin{bmatrix} 1 &amp;amp; 2 \ 3 &amp;amp; 6 \end{bmatrix}$ is invertible. Justify using determinants.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Use Cramer‚Äôs rule to solve&lt;/p&gt;
        &lt;p&gt;$$ \begin{cases} x + y = 3, \ 2x - y = 0. \end{cases} $$&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Explain geometrically why a determinant of zero implies no inverse exists.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;To extend the geometric ideas of length, distance, and angle beyond &lt;/p&gt;
    &lt;p&gt;An inner product on a real vector space &lt;/p&gt;
    &lt;p&gt;that assigns to each pair of vectors &lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Symmetry:&lt;/p&gt;
        &lt;math-renderer&gt;$\langle \mathbf{u}, \mathbf{v} \rangle = \langle \mathbf{v}, \mathbf{u} \rangle.$&lt;/math-renderer&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Linearity in the first argument:&lt;/p&gt;
        &lt;math-renderer&gt;$\langle a\mathbf{u} + b\mathbf{w}, \mathbf{v} \rangle = a \langle \mathbf{u}, \mathbf{v} \rangle + b \langle \mathbf{w}, \mathbf{v} \rangle.$&lt;/math-renderer&gt;
      &lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Positive-definiteness:&lt;/p&gt;&lt;math-renderer&gt;$\langle \mathbf{v}, \mathbf{v} \rangle \geq 0$&lt;/math-renderer&gt;, and equality holds if and only if&lt;math-renderer&gt;$\mathbf{v} = \mathbf{0}$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The standard inner product on &lt;/p&gt;
    &lt;p&gt;The norm of a vector is its length, defined in terms of the inner product:&lt;/p&gt;
    &lt;p&gt;For the dot product in &lt;/p&gt;
    &lt;p&gt;The inner product allows us to define the angle &lt;/p&gt;
    &lt;p&gt;Thus, two vectors are orthogonal if &lt;/p&gt;
    &lt;p&gt;Example 7.1.1. In &lt;/p&gt;
    &lt;p&gt;So,&lt;/p&gt;
    &lt;p&gt;Example 7.1.2. In the function space &lt;/p&gt;
    &lt;p&gt;defines a length&lt;/p&gt;
    &lt;p&gt;This generalizes geometry to infinite-dimensional spaces.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Inner product: measures similarity between vectors.&lt;/item&gt;
      &lt;item&gt;Norm: length of a vector.&lt;/item&gt;
      &lt;item&gt;Angle: measure of alignment between two directions.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;These concepts unify algebraic operations with geometric intuition.&lt;/p&gt;
    &lt;p&gt;Inner products and norms allow us to extend geometry into abstract vector spaces. They form the basis of orthogonality, projections, Fourier series, least squares approximation, and many applications in physics and machine learning.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;&lt;p&gt;Compute&lt;/p&gt;&lt;math-renderer&gt;$\langle (2,-1,3), (1,4,0) \rangle$&lt;/math-renderer&gt;. Then find the angle between them.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Show that&lt;/p&gt;&lt;math-renderer&gt;$|(x,y)| = \sqrt{x^2+y^2}$&lt;/math-renderer&gt;satisfies the properties of a norm.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;In&lt;/p&gt;&lt;math-renderer&gt;$\mathbb{R}^3$&lt;/math-renderer&gt;, verify that&lt;math-renderer&gt;$(1,1,0)$&lt;/math-renderer&gt;and&lt;math-renderer&gt;$(1,-1,0)$&lt;/math-renderer&gt;are orthogonal.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;In&lt;/p&gt;&lt;math-renderer&gt;$C[0,1]$&lt;/math-renderer&gt;, compute&lt;math-renderer&gt;$\langle f,g \rangle$&lt;/math-renderer&gt;for&lt;math-renderer&gt;$f(x)=x$&lt;/math-renderer&gt;,&lt;math-renderer&gt;$g(x)=1$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Prove the Cauchy‚ÄìSchwarz inequality:&lt;/p&gt;
        &lt;p&gt;$$ |\langle \mathbf{u}, \mathbf{v} \rangle| \leq |\mathbf{u}| , |\mathbf{v}|. $$&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;One of the most useful applications of inner products is the notion of orthogonal projection. Projection allows us to approximate a vector by another lying in a subspace, minimizing error in the sense of distance. This idea underpins geometry, statistics, and numerical analysis.&lt;/p&gt;
    &lt;p&gt;Let &lt;/p&gt;
    &lt;p&gt;Given a vector &lt;/p&gt;
    &lt;p&gt;The formula is&lt;/p&gt;
    &lt;p&gt;The error vector &lt;/p&gt;
    &lt;p&gt;Let &lt;/p&gt;
    &lt;p&gt;So&lt;/p&gt;
    &lt;p&gt;The error vector is &lt;/p&gt;
    &lt;p&gt;Suppose &lt;/p&gt;
    &lt;p&gt;This is the unique vector in &lt;/p&gt;
    &lt;p&gt;Orthogonal projection explains the method of least squares. To solve an overdetermined system &lt;/p&gt;
    &lt;p&gt;Thus, least squares is just projection in disguise.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Projection finds the closest point in a subspace to a given vector.&lt;/item&gt;
      &lt;item&gt;It minimizes distance (error) in the sense of Euclidean norm.&lt;/item&gt;
      &lt;item&gt;Orthogonality ensures the error vector points directly away from the subspace.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Orthogonal projection is central in both pure and applied mathematics. It underlies the geometry of subspaces, the theory of Fourier series, regression in statistics, and approximation methods in numerical linear algebra. Whenever we fit data with a simpler model, projection is at work.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Compute the projection of &lt;math-renderer&gt;$(2,3)$&lt;/math-renderer&gt;onto the vector&lt;math-renderer&gt;$(1,1)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Show that &lt;math-renderer&gt;$\mathbf{v} - \text{proj}_{\mathbf{u}}(\mathbf{v})$&lt;/math-renderer&gt;is orthogonal to&lt;math-renderer&gt;$\mathbf{u}$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Let &lt;math-renderer&gt;$W = \text{span}{(1,0,0), (0,1,0)} \subseteq \mathbb{R}^3$&lt;/math-renderer&gt;. Find the projection of&lt;math-renderer&gt;$(1,2,3)$&lt;/math-renderer&gt;onto&lt;math-renderer&gt;$W$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Explain why least squares fitting corresponds to projection onto the column space of &lt;math-renderer&gt;$A$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Prove that projection onto a subspace &lt;math-renderer&gt;$W$&lt;/math-renderer&gt;is unique: there is exactly one closest vector in&lt;math-renderer&gt;$W$&lt;/math-renderer&gt;to a given&lt;math-renderer&gt;$\mathbf{v}$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The Gram‚ÄìSchmidt process is a systematic way to turn any linearly independent set of vectors into an orthonormal basis. This is especially useful because orthonormal bases simplify computations: inner products become simple coordinate comparisons, and projections take clean forms.&lt;/p&gt;
    &lt;p&gt;Given a linearly independent set of vectors &lt;/p&gt;
    &lt;p&gt;We proceed step by step:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Start with &lt;math-renderer&gt;$\mathbf{v}_1$&lt;/math-renderer&gt;, normalize it to get&lt;math-renderer&gt;$\mathbf{u}_1$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Subtract from &lt;math-renderer&gt;$\mathbf{v}_2$&lt;/math-renderer&gt;its projection onto&lt;math-renderer&gt;$\mathbf{u}_1$&lt;/math-renderer&gt;, leaving a vector orthogonal to&lt;math-renderer&gt;$\mathbf{u}_1$&lt;/math-renderer&gt;. Normalize to get&lt;math-renderer&gt;$\mathbf{u}_2$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;For each &lt;math-renderer&gt;$\mathbf{v}_k$&lt;/math-renderer&gt;, subtract projections onto all previously constructed $\mathbf{u}1, \dots, \mathbf{u}{k-1}$, then normalize.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;For &lt;/p&gt;
    &lt;p&gt;$$ \mathbf{w}_k = \mathbf{v}k - \sum{j=1}^{k-1} \langle \mathbf{v}_k, \mathbf{u}_j \rangle \mathbf{u}_j, $$&lt;/p&gt;
    &lt;p&gt;The result &lt;/p&gt;
    &lt;p&gt;Take &lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Normalize &lt;math-renderer&gt;$\mathbf{v}_1$&lt;/math-renderer&gt;:&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Subtract projection of &lt;math-renderer&gt;$\mathbf{v}_2$&lt;/math-renderer&gt;on&lt;math-renderer&gt;$\mathbf{u}_1$&lt;/math-renderer&gt;:&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;So&lt;/p&gt;
    &lt;p&gt;Normalize:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Subtract projections from &lt;math-renderer&gt;$\mathbf{v}_3$&lt;/math-renderer&gt;:&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;After computing, normalize to obtain &lt;/p&gt;
    &lt;p&gt;The result is an orthonormal basis of the span of &lt;/p&gt;
    &lt;p&gt;Gram‚ÄìSchmidt is like straightening out a set of vectors: you start with the original directions and adjust each new vector to be perpendicular to all previous ones. Then you scale to unit length. The process ensures orthogonality while preserving the span.&lt;/p&gt;
    &lt;p&gt;Orthonormal bases simplify inner products, projections, and computations in general. They make coordinate systems easier to work with and are crucial in numerical methods, QR decomposition, Fourier analysis, and statistics (orthogonal polynomials, principal component analysis).&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Apply Gram‚ÄìSchmidt to &lt;math-renderer&gt;$(1,0), (1,1)$&lt;/math-renderer&gt;in&lt;math-renderer&gt;$\mathbb{R}^2$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Orthogonalize &lt;math-renderer&gt;$(1,1,1), (1,0,1)$&lt;/math-renderer&gt;in&lt;math-renderer&gt;$\mathbb{R}^3$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Prove that each step of Gram‚ÄìSchmidt yields a vector orthogonal to all previous ones.&lt;/item&gt;
      &lt;item&gt;Show that Gram‚ÄìSchmidt preserves the span of the original vectors.&lt;/item&gt;
      &lt;item&gt;Explain how Gram‚ÄìSchmidt leads to the QR decomposition of a matrix.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;An orthonormal basis is a basis of a vector space in which all vectors are both orthogonal to each other and have unit length. Such bases are the most convenient possible coordinate systems: computations involving inner products, projections, and norms become exceptionally simple.&lt;/p&gt;
    &lt;p&gt;A set of vectors &lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;&lt;math-renderer&gt;$\langle \mathbf{u}_i, \mathbf{u}_j \rangle = 0$&lt;/math-renderer&gt;whenever&lt;math-renderer&gt;$i \neq j$&lt;/math-renderer&gt;(orthogonality),&lt;/item&gt;
      &lt;item&gt;&lt;math-renderer&gt;$|\mathbf{u}_i| = 1$&lt;/math-renderer&gt;for all&lt;math-renderer&gt;$i$&lt;/math-renderer&gt;(normalization),&lt;/item&gt;
      &lt;item&gt;The set spans &lt;math-renderer&gt;$V$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Example 7.4.1. In &lt;/p&gt;
    &lt;p&gt;is orthonormal under the dot product.&lt;/p&gt;
    &lt;p&gt;Example 7.4.2. In &lt;/p&gt;
    &lt;p&gt;is orthonormal.&lt;/p&gt;
    &lt;p&gt;Example 7.4.3. Fourier basis on functions:&lt;/p&gt;
    &lt;p&gt;is an orthogonal set in the space of square-integrable functions on &lt;/p&gt;
    &lt;p&gt;After normalization, it becomes an orthonormal basis.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;&lt;p&gt;Coordinate simplicity: If&lt;/p&gt;&lt;math-renderer&gt;${\mathbf{u}_1,\dots,\mathbf{u}_n}$&lt;/math-renderer&gt;is an orthonormal basis of&lt;math-renderer&gt;$V$&lt;/math-renderer&gt;, then any vector&lt;math-renderer&gt;$\mathbf{v}\in V$&lt;/math-renderer&gt;has coordinates&lt;p&gt;$$ [\mathbf{v}] = \begin{bmatrix} \langle \mathbf{v}, \mathbf{u}_1 \rangle \ \vdots \ \langle \mathbf{v}, \mathbf{u}_n \rangle \end{bmatrix}. $$&lt;/p&gt;&lt;p&gt;That is, coordinates are just inner products.&lt;/p&gt;&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Parseval‚Äôs identity: For any&lt;/p&gt;&lt;math-renderer&gt;$\mathbf{v} \in V$&lt;/math-renderer&gt;,&lt;p&gt;$$ |\mathbf{v}|^2 = \sum_{i=1}^n |\langle \mathbf{v}, \mathbf{u}_i \rangle|^2. $$&lt;/p&gt;&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Projections: The orthogonal projection onto the span of&lt;/p&gt;&lt;math-renderer&gt;${\mathbf{u}_1,\dots,\mathbf{u}_k}$&lt;/math-renderer&gt;is&lt;p&gt;$$ \text{proj}(\mathbf{v}) = \sum_{i=1}^k \langle \mathbf{v}, \mathbf{u}_i \rangle \mathbf{u}_i. $$&lt;/p&gt;&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Start with any linearly independent set, then apply the Gram‚ÄìSchmidt process to obtain an orthonormal set spanning the same subspace.&lt;/item&gt;
      &lt;item&gt;In practice, orthonormal bases are often chosen for numerical stability and simplicity of computation.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;An orthonormal basis is like a perfectly aligned and equally scaled coordinate system. Distances and angles are computed directly using coordinates without correction factors. They are the ideal rulers of linear algebra.&lt;/p&gt;
    &lt;p&gt;Orthonormal bases simplify every aspect of linear algebra: solving systems, computing projections, expanding functions, diagonalizing symmetric matrices, and working with Fourier series. In data science, principal component analysis produces orthonormal directions capturing maximum variance.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Verify that &lt;math-renderer&gt;$(1/\sqrt{2})(1,1)$&lt;/math-renderer&gt;and&lt;math-renderer&gt;$(1/\sqrt{2})(1,-1)$&lt;/math-renderer&gt;form an orthonormal basis of&lt;math-renderer&gt;$\mathbb{R}^2$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Express &lt;math-renderer&gt;$(3,4)$&lt;/math-renderer&gt;in terms of the orthonormal basis&lt;math-renderer&gt;${(1/\sqrt{2})(1,1), (1/\sqrt{2})(1,-1)}$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Prove Parseval‚Äôs identity for &lt;math-renderer&gt;$\mathbb{R}^n$&lt;/math-renderer&gt;with the dot product.&lt;/item&gt;
      &lt;item&gt;Find an orthonormal basis for the plane &lt;math-renderer&gt;$x+y+z=0$&lt;/math-renderer&gt;in&lt;math-renderer&gt;$\mathbb{R}^3$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Explain why orthonormal bases are numerically more stable than arbitrary bases in computations.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The concepts of eigenvalues and eigenvectors reveal the most fundamental behavior of linear transformations. They identify the special directions in which a transformation acts by simple stretching or compressing, without rotation or distortion.&lt;/p&gt;
    &lt;p&gt;Let &lt;/p&gt;
    &lt;p&gt;for some scalar &lt;/p&gt;
    &lt;p&gt;Equivalently, if &lt;/p&gt;
    &lt;p&gt;Example 8.1.1. Let&lt;/p&gt;
    &lt;p&gt;Then&lt;/p&gt;
    &lt;p&gt;So &lt;/p&gt;
    &lt;p&gt;Example 8.1.2. Rotation matrix in &lt;/p&gt;
    &lt;p&gt;If &lt;/p&gt;
    &lt;p&gt;Eigenvalues arise from solving the characteristic equation:&lt;/p&gt;
    &lt;p&gt;This polynomial in &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Eigenvectors are directions that remain unchanged in orientation under a transformation; only their length is scaled.&lt;/item&gt;
      &lt;item&gt;Eigenvalues tell us the scaling factor along those directions.&lt;/item&gt;
      &lt;item&gt;If a matrix has many independent eigenvectors, it can often be simplified (diagonalized) by changing basis.&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Stretching along principal axes of an ellipse (quadratic forms).&lt;/item&gt;
      &lt;item&gt;Stable directions of dynamical systems.&lt;/item&gt;
      &lt;item&gt;Principal components in statistics and machine learning.&lt;/item&gt;
      &lt;item&gt;Quantum mechanics, where observables correspond to operators with eigenvalues.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Eigenvalues and eigenvectors are a bridge between algebra and geometry. They provide a lens for understanding linear transformations in their simplest form. Nearly every application of linear algebra-differential equations, statistics, physics, computer science-relies on eigen-analysis.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Find the eigenvalues and eigenvectors of $\begin{bmatrix} 4 &amp;amp; 0 \ 0 &amp;amp; -1 \end{bmatrix}$.&lt;/item&gt;
      &lt;item&gt;Show that every scalar multiple of an eigenvector is again an eigenvector for the same eigenvalue.&lt;/item&gt;
      &lt;item&gt;Verify that the rotation matrix &lt;math-renderer&gt;$R_\theta$&lt;/math-renderer&gt;has no real eigenvalues unless&lt;math-renderer&gt;$\theta = 0$&lt;/math-renderer&gt;or&lt;math-renderer&gt;$\pi$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Compute the characteristic polynomial of $\begin{bmatrix} 1 &amp;amp; 2 \ 2 &amp;amp; 1 \end{bmatrix}$.&lt;/item&gt;
      &lt;item&gt;Explain geometrically what eigenvectors and eigenvalues represent for the shear matrix $\begin{bmatrix} 1 &amp;amp; 1 \ 0 &amp;amp; 1 \end{bmatrix}$.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;A central goal in linear algebra is to simplify the action of a matrix by choosing a good basis. Diagonalization is the process of rewriting a matrix so that it acts by simple scaling along independent directions. This makes computations such as powers, exponentials, and solving differential equations far easier.&lt;/p&gt;
    &lt;p&gt;A square matrix &lt;/p&gt;
    &lt;p&gt;where &lt;/p&gt;
    &lt;p&gt;The diagonal entries of &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;A matrix is diagonalizable if it has &lt;math-renderer&gt;$n$&lt;/math-renderer&gt;linearly independent eigenvectors.&lt;/item&gt;
      &lt;item&gt;Equivalently, the sum of the dimensions of its eigenspaces equals &lt;math-renderer&gt;$n$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Symmetric matrices (over &lt;math-renderer&gt;$\mathbb{R}$&lt;/math-renderer&gt;) are always diagonalizable, with an orthonormal basis of eigenvectors.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Let&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Characteristic polynomial:&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;So eigenvalues are &lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Eigenvectors:&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;For &lt;math-renderer&gt;$\lambda = 4$&lt;/math-renderer&gt;, solve&lt;math-renderer&gt;$(A-4I)\mathbf{v}=0$&lt;/math-renderer&gt;: $\begin{bmatrix} 0 &amp;amp; 1 \ 0 &amp;amp; -2 \end{bmatrix}\mathbf{v} = 0$, giving&lt;math-renderer&gt;$\mathbf{v}_1 = (1,0)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;For &lt;math-renderer&gt;$\lambda = 2$&lt;/math-renderer&gt;:&lt;math-renderer&gt;$(A-2I)\mathbf{v}=0$&lt;/math-renderer&gt;, giving&lt;math-renderer&gt;$\mathbf{v}_2 = (1,-2)$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Construct $P = \begin{bmatrix} 1 &amp;amp; 1 \ 0 &amp;amp; -2 \end{bmatrix}$. Then&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Thus, &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;p&gt;Computing powers: If&lt;/p&gt;&lt;math-renderer&gt;$A = P D P^{-1}$&lt;/math-renderer&gt;, then&lt;p&gt;$$ A^k = P D^k P^{-1}. $$&lt;/p&gt;&lt;p&gt;Since&lt;/p&gt;&lt;math-renderer&gt;$D$&lt;/math-renderer&gt;is diagonal,&lt;math-renderer&gt;$D^k$&lt;/math-renderer&gt;is easy to compute.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Matrix exponentials:&lt;/p&gt;&lt;math-renderer&gt;$e^A = P e^D P^{-1}$&lt;/math-renderer&gt;, useful in solving differential equations.&lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Understanding geometry: Diagonalization reveals the directions along which a transformation stretches or compresses space independently.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Not all matrices can be diagonalized.&lt;/p&gt;
    &lt;p&gt;has only one eigenvalue &lt;/p&gt;
    &lt;p&gt;Diagonalization means we have found a basis of eigenvectors. In this basis, the matrix acts by simple scaling along each coordinate axis. It transforms complicated motion into independent 1D motions.&lt;/p&gt;
    &lt;p&gt;Diagonalization is a cornerstone of linear algebra. It simplifies computation, reveals structure, and is the starting point for the spectral theorem, Jordan form, and many applications in physics, engineering, and data science.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Diagonalize&lt;/p&gt;
        &lt;p&gt;$$ A = \begin{bmatrix} 2 &amp;amp; 0 \ 0 &amp;amp; 3 \end{bmatrix}. $$&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Determine whether&lt;/p&gt;
        &lt;p&gt;$$ A = \begin{bmatrix} 1 &amp;amp; 1 \ 0 &amp;amp; 1 \end{bmatrix} $$&lt;/p&gt;
        &lt;p&gt;is diagonalizable. Why or why not?&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Find&lt;/p&gt;&lt;math-renderer&gt;$A^5$&lt;/math-renderer&gt;for&lt;p&gt;$$ A = \begin{bmatrix} 4 &amp;amp; 1 \ 0 &amp;amp; 2 \end{bmatrix} $$&lt;/p&gt;&lt;p&gt;using diagonalization.&lt;/p&gt;&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Show that any&lt;/p&gt;&lt;math-renderer&gt;$n \times n$&lt;/math-renderer&gt;matrix with&lt;math-renderer&gt;$n$&lt;/math-renderer&gt;distinct eigenvalues is diagonalizable.&lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Explain why real symmetric matrices are always diagonalizable.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The key to finding eigenvalues is the characteristic polynomial of a matrix. This polynomial encodes the values of &lt;/p&gt;
    &lt;p&gt;For an &lt;/p&gt;
    &lt;p&gt;The roots of &lt;/p&gt;
    &lt;p&gt;Example 8.3.1. Let&lt;/p&gt;
    &lt;p&gt;Then&lt;/p&gt;
    &lt;p&gt;Thus eigenvalues are &lt;/p&gt;
    &lt;p&gt;Example 8.3.2. For&lt;/p&gt;
    &lt;p&gt;(rotation by 90¬∞),&lt;/p&gt;
    &lt;p&gt;Eigenvalues are &lt;/p&gt;
    &lt;p&gt;Example 8.3.3. For a triangular matrix&lt;/p&gt;
    &lt;p&gt;the determinant is simply the product of diagonal entries minus &lt;/p&gt;
    &lt;p&gt;So eigenvalues are &lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;&lt;p&gt;The characteristic polynomial of an&lt;/p&gt;&lt;math-renderer&gt;$n \times n$&lt;/math-renderer&gt;matrix has degree&lt;math-renderer&gt;$n$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;The sum of the eigenvalues (counted with multiplicity) equals the trace of&lt;/p&gt;&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;:&lt;p&gt;$$ \text{tr}(A) = \lambda_1 + \cdots + \lambda_n. $$&lt;/p&gt;&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;The product of the eigenvalues equals the determinant of&lt;/p&gt;&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;:&lt;p&gt;$$ \det(A) = \lambda_1 \cdots \lambda_n. $$&lt;/p&gt;&lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Similar matrices have the same characteristic polynomial, hence the same eigenvalues.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The characteristic polynomial captures when &lt;/p&gt;
    &lt;p&gt;Characteristic polynomials provide the computational tool to extract eigenvalues. They connect matrix invariants (trace and determinant) with geometry, and form the foundation for diagonalization, spectral theorems, and stability analysis in dynamical systems.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Compute the characteristic polynomial of&lt;/p&gt;
        &lt;p&gt;$$ A = \begin{bmatrix} 4 &amp;amp; 2 \ 1 &amp;amp; 3 \end{bmatrix}. $$&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Verify that the sum of the eigenvalues of $\begin{bmatrix} 5 &amp;amp; 0 \ 0 &amp;amp; -2 \end{bmatrix}$ equals its trace, and their product equals its determinant.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Show that for any triangular matrix, the eigenvalues are just the diagonal entries.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Prove that if&lt;/p&gt;&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;and&lt;math-renderer&gt;$B$&lt;/math-renderer&gt;are similar matrices, then&lt;math-renderer&gt;$p_A(\lambda) = p_B(\lambda)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Compute the characteristic polynomial of $\begin{bmatrix} 1 &amp;amp; 1 &amp;amp; 0 \ 0 &amp;amp; 1 &amp;amp; 1 \ 0 &amp;amp; 0 &amp;amp; 1 \end{bmatrix}$.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Eigenvalues and eigenvectors are not only central to the theory of linear algebra-they are indispensable tools across mathematics and applied science. Two classic applications are solving systems of differential equations and analyzing Markov chains.&lt;/p&gt;
    &lt;p&gt;Consider the system&lt;/p&gt;
    &lt;p&gt;where &lt;/p&gt;
    &lt;p&gt;If &lt;/p&gt;
    &lt;p&gt;is a solution.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;Eigenvalues determine the growth or decay rate:&lt;/p&gt;
        &lt;list rend="ul"&gt;
          &lt;item&gt;If &lt;math-renderer&gt;$\lambda &amp;amp;lt; 0$&lt;/math-renderer&gt;, solutions decay (stable).&lt;/item&gt;
          &lt;item&gt;If &lt;math-renderer&gt;$\lambda &amp;amp;gt; 0$&lt;/math-renderer&gt;, solutions grow (unstable).&lt;/item&gt;
          &lt;item&gt;If &lt;math-renderer&gt;$\lambda$&lt;/math-renderer&gt;is complex, oscillations occur.&lt;/item&gt;
        &lt;/list&gt;
      &lt;/item&gt;
      &lt;item&gt;If &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;By combining eigenvector solutions, we can solve general initial conditions.&lt;/p&gt;
    &lt;p&gt;Example 8.4.1. Let&lt;/p&gt;
    &lt;p&gt;Then eigenvalues are &lt;/p&gt;
    &lt;p&gt;Thus one component grows exponentially, the other decays.&lt;/p&gt;
    &lt;p&gt;A Markov chain is described by a stochastic matrix &lt;/p&gt;
    &lt;p&gt;Iterating gives&lt;/p&gt;
    &lt;p&gt;Understanding long-term behavior reduces to analyzing powers of &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;The eigenvalue &lt;math-renderer&gt;$\lambda = 1$&lt;/math-renderer&gt;always exists. Its eigenvector gives the steady-state distribution.&lt;/item&gt;
      &lt;item&gt;All other eigenvalues satisfy &lt;math-renderer&gt;$|\lambda| \leq 1$&lt;/math-renderer&gt;. Their influence decays as&lt;math-renderer&gt;$k \to \infty$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Example 8.4.2. Consider&lt;/p&gt;
    &lt;p&gt;Eigenvalues are &lt;/p&gt;
    &lt;p&gt;Thus, regardless of the starting distribution, the chain converges to &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;In differential equations, eigenvalues determine the time evolution: exponential growth, decay, or oscillation.&lt;/item&gt;
      &lt;item&gt;In Markov chains, eigenvalues determine the long-term equilibrium of stochastic processes.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Eigenvalue methods turn complex iterative or dynamical systems into tractable problems. In physics, engineering, and finance, they describe stability and resonance. In computer science and statistics, they power algorithms from Google‚Äôs PageRank to modern machine learning.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Solve $\tfrac{d}{dt}\mathbf{x} = \begin{bmatrix} 3 &amp;amp; 0 \ 0 &amp;amp; -2 \end{bmatrix}\mathbf{x}$.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Show that if&lt;/p&gt;&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;has a complex eigenvalue&lt;math-renderer&gt;$\alpha \pm i\beta$&lt;/math-renderer&gt;, then solutions of&lt;math-renderer&gt;$\tfrac{d}{dt}\mathbf{x} = A\mathbf{x}$&lt;/math-renderer&gt;involve oscillations of frequency&lt;math-renderer&gt;$\beta$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Find the steady-state distribution of&lt;/p&gt;
        &lt;p&gt;$$ P = \begin{bmatrix} 0.7 &amp;amp; 0.2 \ 0.3 &amp;amp; 0.8 \end{bmatrix}. $$&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Prove that for any stochastic matrix&lt;/p&gt;&lt;math-renderer&gt;$P$&lt;/math-renderer&gt;,&lt;math-renderer&gt;$1$&lt;/math-renderer&gt;is always an eigenvalue.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Explain why all eigenvalues of a stochastic matrix satisfy&lt;/p&gt;&lt;math-renderer&gt;$|\lambda| \leq 1$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;A quadratic form is a polynomial of degree two in several variables, expressed neatly using matrices. Quadratic forms appear throughout mathematics: in optimization, geometry of conic sections, statistics (variance), and physics (energy functions).&lt;/p&gt;
    &lt;p&gt;Let &lt;/p&gt;
    &lt;p&gt;Expanded,&lt;/p&gt;
    &lt;p&gt;Because &lt;/p&gt;
    &lt;p&gt;Example 9.1.1. For&lt;/p&gt;
    &lt;p&gt;Example 9.1.2. The quadratic form&lt;/p&gt;
    &lt;p&gt;corresponds to the matrix &lt;/p&gt;
    &lt;p&gt;Example 9.1.3. The conic section equation&lt;/p&gt;
    &lt;p&gt;is described by the quadratic form &lt;/p&gt;
    &lt;p&gt;By choosing a new basis consisting of eigenvectors of &lt;/p&gt;
    &lt;p&gt;Thus quadratic forms can always be expressed as a sum of weighted squares:&lt;/p&gt;
    &lt;p&gt;where &lt;/p&gt;
    &lt;p&gt;Quadratic forms describe geometric shapes:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;In 2D: ellipses, parabolas, hyperbolas.&lt;/item&gt;
      &lt;item&gt;In 3D: ellipsoids, paraboloids, hyperboloids.&lt;/item&gt;
      &lt;item&gt;In higher dimensions: generalizations of ellipsoids.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Diagonalization aligns the coordinate axes with the principal axes of the shape.&lt;/p&gt;
    &lt;p&gt;Quadratic forms unify geometry and algebra. They are central in optimization (minimizing energy functions), statistics ( covariance matrices and variance), mechanics (kinetic energy), and numerical analysis. Understanding quadratic forms leads directly to the spectral theorem.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Write the quadratic form &lt;math-renderer&gt;$Q(x,y) = 3x^2 + 4xy + y^2$&lt;/math-renderer&gt;as&lt;math-renderer&gt;$\mathbf{x}^T A \mathbf{x}$&lt;/math-renderer&gt;for some symmetric matrix&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;For $A = \begin{bmatrix} 1 &amp;amp; 2 \ 2 &amp;amp; 1 \end{bmatrix}$, compute &lt;math-renderer&gt;$Q(x,y)$&lt;/math-renderer&gt;explicitly.&lt;/item&gt;
      &lt;item&gt;Diagonalize the quadratic form &lt;math-renderer&gt;$Q(x,y) = 2x^2 + 2xy + 3y^2$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Identify the conic section given by &lt;math-renderer&gt;$Q(x,y) = x^2 - y^2$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Show that if &lt;math-renderer&gt;$A$&lt;/math-renderer&gt;is symmetric, quadratic forms defined by&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;and&lt;math-renderer&gt;$A^T$&lt;/math-renderer&gt;are identical.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Quadratic forms are especially important when their associated matrices are positive definite, since these guarantee positivity of energy, distance, or variance. Positive definiteness is a cornerstone in optimization, numerical analysis, and statistics.&lt;/p&gt;
    &lt;p&gt;A symmetric matrix &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;Positive definite if&lt;/p&gt;
        &lt;p&gt;$$ \mathbf{x}^T A \mathbf{x} &amp;gt; 0 \quad \text{for all nonzero } \mathbf{x} \in \mathbb{R}^n. $$&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Positive semidefinite if&lt;/p&gt;
        &lt;p&gt;$$ \mathbf{x}^T A \mathbf{x} \geq 0 \quad \text{for all } \mathbf{x}. $$&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Similarly, negative definite (always &amp;lt; 0) and indefinite (can be both &amp;lt; 0 and &amp;gt; 0) matrices are defined.&lt;/p&gt;
    &lt;p&gt;Example 9.2.1.&lt;/p&gt;
    &lt;p&gt;is positive definite, since&lt;/p&gt;
    &lt;p&gt;for all &lt;/p&gt;
    &lt;p&gt;Example 9.2.2.&lt;/p&gt;
    &lt;p&gt;has quadratic form&lt;/p&gt;
    &lt;p&gt;This matrix is not positive definite, since &lt;/p&gt;
    &lt;p&gt;For a symmetric matrix &lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;&lt;p&gt;Eigenvalue test:&lt;/p&gt;&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;is positive definite if and only if all eigenvalues of&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;are positive.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Principal minors test (Sylvester‚Äôs criterion):&lt;/p&gt;&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;is positive definite if and only if all leading principal minors ( determinants of top-left&lt;math-renderer&gt;$k \times k$&lt;/math-renderer&gt;submatrices) are positive.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Cholesky factorization:&lt;/p&gt;&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;is positive definite if and only if it can be written as&lt;p&gt;$$ A = R^T R, $$&lt;/p&gt;&lt;p&gt;where&lt;/p&gt;&lt;math-renderer&gt;$R$&lt;/math-renderer&gt;is an upper triangular matrix with positive diagonal entries.&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Positive definite matrices correspond to quadratic forms that define ellipsoids centered at the origin.&lt;/item&gt;
      &lt;item&gt;Positive semidefinite matrices define flattened ellipsoids (possibly degenerate).&lt;/item&gt;
      &lt;item&gt;Indefinite matrices define hyperbolas or saddle-shaped surfaces.&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Optimization: Hessians of convex functions are positive semidefinite; strict convexity corresponds to positive definite Hessians.&lt;/item&gt;
      &lt;item&gt;Statistics: Covariance matrices are positive semidefinite.&lt;/item&gt;
      &lt;item&gt;Numerical methods: Cholesky decomposition is widely used to solve systems with positive definite matrices efficiently.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Positive definiteness provides stability and guarantees in mathematics and computation. It ensures energy functions are bounded below, optimization problems have unique solutions, and statistical models are meaningful.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Use Sylvester‚Äôs criterion to check whether&lt;/p&gt;
        &lt;p&gt;$$ A = \begin{bmatrix} 2 &amp;amp; -1 \ -1 &amp;amp; 2 \end{bmatrix} $$&lt;/p&gt;
        &lt;p&gt;is positive definite.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Determine whether&lt;/p&gt;
        &lt;p&gt;$$ A = \begin{bmatrix} 0 &amp;amp; 1 \ 1 &amp;amp; 0 \end{bmatrix} $$&lt;/p&gt;
        &lt;p&gt;is positive definite, semidefinite, or indefinite.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Find the eigenvalues of&lt;/p&gt;
        &lt;p&gt;$$ A = \begin{bmatrix} 4 &amp;amp; 2 \ 2 &amp;amp; 3 \end{bmatrix}, $$&lt;/p&gt;
        &lt;p&gt;and use them to classify definiteness.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Prove that all diagonal matrices with positive entries are positive definite.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Show that if&lt;/p&gt;&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;is positive definite, then so is&lt;math-renderer&gt;$P^T A P$&lt;/math-renderer&gt;for any invertible matrix&lt;math-renderer&gt;$P$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The spectral theorem is one of the most powerful results in linear algebra. It states that symmetric matrices can always be diagonalized by an orthogonal basis of eigenvectors. This links algebra (eigenvalues), geometry (orthogonal directions), and applications (stability, optimization, statistics).&lt;/p&gt;
    &lt;p&gt;If &lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;&lt;p&gt;All eigenvalues of&lt;/p&gt;&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;are real.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;There exists an orthonormal basis of&lt;/p&gt;&lt;math-renderer&gt;$\mathbb{R}^n$&lt;/math-renderer&gt;consisting of eigenvectors of&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Thus,&lt;/p&gt;&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;can be written as&lt;p&gt;$$ A = Q \Lambda Q^T, $$&lt;/p&gt;&lt;p&gt;where&lt;/p&gt;&lt;math-renderer&gt;$Q$&lt;/math-renderer&gt;is an orthogonal matrix (&lt;math-renderer&gt;$Q^T Q = I$&lt;/math-renderer&gt;) and&lt;math-renderer&gt;$\Lambda$&lt;/math-renderer&gt;is diagonal with eigenvalues of&lt;math-renderer&gt;$A$&lt;/math-renderer&gt;on the diagonal.&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Symmetric matrices are always diagonalizable, and the diagonalization is numerically stable.&lt;/item&gt;
      &lt;item&gt;Quadratic forms &lt;math-renderer&gt;$\mathbf{x}^T A \mathbf{x}$&lt;/math-renderer&gt;can be expressed in terms of eigenvalues and eigenvectors, showing ellipsoids aligned with eigen-directions.&lt;/item&gt;
      &lt;item&gt;Positive definiteness can be checked by confirming that all eigenvalues are positive.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Let&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Characteristic polynomial:&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Eigenvalues: &lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Eigenvectors:&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;For &lt;math-renderer&gt;$\lambda=1$&lt;/math-renderer&gt;: solve&lt;math-renderer&gt;$(A-I)\mathbf{v} = 0$&lt;/math-renderer&gt;, giving&lt;math-renderer&gt;$(1,-1)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;For &lt;math-renderer&gt;$\lambda=3$&lt;/math-renderer&gt;: solve&lt;math-renderer&gt;$(A-3I)\mathbf{v} = 0$&lt;/math-renderer&gt;, giving&lt;math-renderer&gt;$(1,1)$&lt;/math-renderer&gt;.&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Normalize eigenvectors:&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Then&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;So&lt;/p&gt;
    &lt;p&gt;The spectral theorem says every symmetric matrix acts like independent scaling along orthogonal directions. In geometry, this corresponds to stretching space along perpendicular axes.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Ellipses, ellipsoids, and quadratic surfaces can be fully understood via eigenvalues and eigenvectors.&lt;/item&gt;
      &lt;item&gt;Orthogonality ensures directions remain perpendicular after transformation.&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Optimization: The spectral theorem underlies classification of critical points via eigenvalues of the Hessian.&lt;/item&gt;
      &lt;item&gt;PCA (Principal Component Analysis): Data covariance matrices are symmetric, and PCA finds orthogonal directions of maximum variance.&lt;/item&gt;
      &lt;item&gt;Differential equations &amp;amp; physics: Symmetric operators correspond to measurable quantities with real eigenvalues ( stability, energy).&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The spectral theorem guarantees that symmetric matrices are as simple as possible: they can always be analyzed in terms of real, orthogonal eigenvectors. This provides both deep theoretical insight and powerful computational tools.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Diagonalize&lt;/p&gt;
        &lt;p&gt;$$ A = \begin{bmatrix} 4 &amp;amp; 2 \ 2 &amp;amp; 3 \end{bmatrix} $$&lt;/p&gt;
        &lt;p&gt;using the spectral theorem.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Prove that all eigenvalues of a real symmetric matrix are real.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Show that eigenvectors corresponding to distinct eigenvalues of a symmetric matrix are orthogonal.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Explain geometrically how the spectral theorem describes ellipsoids defined by quadratic forms.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Apply the spectral theorem to the covariance matrix&lt;/p&gt;
        &lt;p&gt;$$ \Sigma = \begin{bmatrix} 2 &amp;amp; 1 \ 1 &amp;amp; 2 \end{bmatrix}, $$&lt;/p&gt;
        &lt;p&gt;and interpret the eigenvectors as principal directions of variance.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Principal Component Analysis (PCA) is a widely used technique in data science, machine learning, and statistics. At its core, PCA is an application of the spectral theorem to covariance matrices: it finds orthogonal directions (principal components) that capture the maximum variance in data.&lt;/p&gt;
    &lt;p&gt;Given a dataset of vectors &lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;&lt;p&gt;Center the data by subtracting the mean vector&lt;/p&gt;&lt;math-renderer&gt;$\bar{\mathbf{x}}$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Form the covariance matrix&lt;/p&gt;
        &lt;p&gt;$$ \Sigma = \frac{1}{m} \sum_{i=1}^m (\mathbf{x}_i - \bar{\mathbf{x}})(\mathbf{x}_i - \bar{\mathbf{x}})^T. $$&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Apply the spectral theorem:&lt;/p&gt;&lt;math-renderer&gt;$\Sigma = Q \Lambda Q^T$&lt;/math-renderer&gt;.&lt;list rend="ul"&gt;&lt;item&gt;Columns of &lt;math-renderer&gt;$Q$&lt;/math-renderer&gt;are orthonormal eigenvectors (principal directions).&lt;/item&gt;&lt;item&gt;Eigenvalues in &lt;math-renderer&gt;$\Lambda$&lt;/math-renderer&gt;measure variance explained by each direction.&lt;/item&gt;&lt;/list&gt;&lt;/item&gt;
      &lt;item&gt;Columns of &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The first principal component is the eigenvector corresponding to the largest eigenvalue; it is the direction of maximum variance.&lt;/p&gt;
    &lt;p&gt;Suppose we have two-dimensional data points roughly aligned along the line &lt;/p&gt;
    &lt;p&gt;Eigenvalues are about &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;First principal component: the line &lt;math-renderer&gt;$y = x$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Most variance lies along this direction.&lt;/item&gt;
      &lt;item&gt;Second component is nearly orthogonal (&lt;math-renderer&gt;$y = -x$&lt;/math-renderer&gt;), but variance there is tiny.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Thus PCA reduces the data to essentially one dimension.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Dimensionality reduction: Represent data with fewer features while retaining most variance.&lt;/item&gt;
      &lt;item&gt;Noise reduction: Small eigenvalues correspond to noise; discarding them filters data.&lt;/item&gt;
      &lt;item&gt;Visualization: Projecting high-dimensional data onto top 2 or 3 principal components reveals structure.&lt;/item&gt;
      &lt;item&gt;Compression: PCA is used in image and signal compression.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The covariance matrix &lt;/p&gt;
    &lt;p&gt;PCA demonstrates how abstract linear algebra directly powers modern applications. Eigenvalues and eigenvectors give a practical method for simplifying data, revealing patterns, and reducing complexity. It is one of the most important algorithms derived from the spectral theorem.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Show that the covariance matrix is symmetric and positive semidefinite.&lt;/item&gt;
      &lt;item&gt;Compute the covariance matrix of the dataset &lt;math-renderer&gt;$(1,2), (2,3), (3,4)$&lt;/math-renderer&gt;, and find its eigenvalues and eigenvectors.&lt;/item&gt;
      &lt;item&gt;Explain why the first principal component captures the maximum variance.&lt;/item&gt;
      &lt;item&gt;In image compression, explain how PCA can reduce storage by keeping only the top &lt;math-renderer&gt;$k$&lt;/math-renderer&gt;principal components.&lt;/item&gt;
      &lt;item&gt;Prove that the sum of the eigenvalues of the covariance matrix equals the total variance of the dataset.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Linear algebra is the language of modern computer graphics. Every image rendered on a screen, every 3D model rotated or projected, is ultimately the result of applying matrices to vectors. Rotations, reflections, scalings, and projections are all linear transformations, making matrices the natural tool for manipulating geometry.&lt;/p&gt;
    &lt;p&gt;A counterclockwise rotation by an angle &lt;/p&gt;
    &lt;p&gt;For any vector &lt;/p&gt;
    &lt;p&gt;This preserves lengths and angles, since &lt;/p&gt;
    &lt;p&gt;In three dimensions, rotations are represented by &lt;/p&gt;
    &lt;p&gt;Similar formulas exist for rotations about the &lt;/p&gt;
    &lt;p&gt;More general 3D rotations can be described by axis‚Äìangle representation or quaternions, but the underlying idea is still linear transformations represented by matrices.&lt;/p&gt;
    &lt;p&gt;To display 3D objects on a 2D screen, we use projections:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;&lt;p&gt;Orthogonal projection: drops the&lt;/p&gt;&lt;math-renderer&gt;$z$&lt;/math-renderer&gt;-coordinate, mapping&lt;math-renderer&gt;$(x,y,z) \mapsto (x,y)$&lt;/math-renderer&gt;.&lt;p&gt;$$ P = \begin{bmatrix} 1 &amp;amp; 0 &amp;amp; 0 \ 0 &amp;amp; 1 &amp;amp; 0 \end{bmatrix}. $$&lt;/p&gt;&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Perspective projection: mimics the effect of a camera. A point&lt;/p&gt;&lt;math-renderer&gt;$(x,y,z)$&lt;/math-renderer&gt;projects to&lt;p&gt;$$ \left(\frac{x}{z}, \frac{y}{z}\right), $$&lt;/p&gt;&lt;p&gt;capturing how distant objects appear smaller.&lt;/p&gt;&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;These operations are linear (orthogonal projection) or nearly linear (perspective projection becomes linear in homogeneous coordinates).&lt;/p&gt;
    &lt;p&gt;To unify translations and projections with linear transformations, computer graphics uses homogeneous coordinates. A 3D point &lt;/p&gt;
    &lt;p&gt;Example: Translation by &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Rotations preserve shape and size, only changing orientation.&lt;/item&gt;
      &lt;item&gt;Projections reduce dimension: from 3D world space to 2D screen space.&lt;/item&gt;
      &lt;item&gt;Homogeneous coordinates allow us to combine multiple transformations (rotation + translation + projection) into a single matrix multiplication.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Linear algebra enables all real-time graphics: video games, simulations, CAD software, and movie effects. By chaining simple matrix operations, complex transformations are applied efficiently to millions of points per second.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Write the rotation matrix for a 90¬∞ counterclockwise rotation in &lt;math-renderer&gt;$\mathbb{R}^2$&lt;/math-renderer&gt;. Apply it to&lt;math-renderer&gt;$(1,0)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Rotate the point &lt;math-renderer&gt;$(1,1,0)$&lt;/math-renderer&gt;about the&lt;math-renderer&gt;$z$&lt;/math-renderer&gt;-axis by 180¬∞.&lt;/item&gt;
      &lt;item&gt;Show that the determinant of any 2D or 3D rotation matrix is 1.&lt;/item&gt;
      &lt;item&gt;Derive the orthogonal projection matrix from &lt;math-renderer&gt;$\mathbb{R}^3$&lt;/math-renderer&gt;to the&lt;math-renderer&gt;$xy$&lt;/math-renderer&gt;-plane.&lt;/item&gt;
      &lt;item&gt;Explain how homogeneous coordinates allow translations to be represented as matrix multiplications.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Linear algebra provides the foundation for many data science techniques. Two of the most important are dimensionality reduction, where high-dimensional datasets are compressed while preserving essential information, and the least squares method, which underlies regression and model fitting.&lt;/p&gt;
    &lt;p&gt;High-dimensional data often contains redundancy: many features are correlated, meaning the data essentially lies near a lower-dimensional subspace. Dimensionality reduction identifies these subspaces.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;PCA (Principal Component Analysis): As introduced earlier, PCA diagonalizes the covariance matrix of the data.&lt;/p&gt;
        &lt;list rend="ul"&gt;
          &lt;item&gt;Eigenvectors (principal components) define orthogonal directions of maximum variance.&lt;/item&gt;
          &lt;item&gt;Eigenvalues measure how much variance lies along each direction.&lt;/item&gt;
          &lt;item&gt;Keeping only the top &lt;math-renderer&gt;$k$&lt;/math-renderer&gt;components reduces data from&lt;math-renderer&gt;$n$&lt;/math-renderer&gt;-dimensional space to&lt;math-renderer&gt;$k$&lt;/math-renderer&gt;-dimensional space while retaining most variability.&lt;/item&gt;
        &lt;/list&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Example 10.2.1. A dataset of 1000 images, each with 1024 pixels, may have most variance captured by just 50 eigenvectors of the covariance matrix. Projecting onto these components compresses the data while preserving essential features.&lt;/p&gt;
    &lt;p&gt;Often, we have more equations than unknowns-an overdetermined system:&lt;/p&gt;
    &lt;p&gt;An exact solution may not exist. Instead, we seek &lt;/p&gt;
    &lt;p&gt;This leads to the normal equations:&lt;/p&gt;
    &lt;p&gt;The solution is the orthogonal projection of &lt;/p&gt;
    &lt;p&gt;Fit a line &lt;/p&gt;
    &lt;p&gt;Matrix form:&lt;/p&gt;
    &lt;p&gt;Solve &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Dimensionality reduction: Find the best subspace capturing most variance.&lt;/item&gt;
      &lt;item&gt;Least squares: Project the target vector onto the subspace spanned by predictors.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Both are projection problems, solved using inner products and orthogonality.&lt;/p&gt;
    &lt;p&gt;Dimensionality reduction makes large datasets tractable, filters noise, and reveals structure. Least squares fitting powers regression, statistics, and machine learning. Both rely directly on eigenvalues, eigenvectors, and projections-core tools of linear algebra.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Explain why PCA reduces noise in datasets by discarding small eigenvalue components.&lt;/item&gt;
      &lt;item&gt;Compute the least squares solution to fitting a line through &lt;math-renderer&gt;$(0,0), (1,1), (2,2)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Show that the least squares solution is unique if and only if &lt;math-renderer&gt;$A^T A$&lt;/math-renderer&gt;is invertible.&lt;/item&gt;
      &lt;item&gt;Prove that the least squares solution minimizes the squared error by projection arguments.&lt;/item&gt;
      &lt;item&gt;Apply PCA to the data points &lt;math-renderer&gt;$(1,0), (2,1), (3,2)$&lt;/math-renderer&gt;and find the first principal component.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Graphs and networks provide a natural setting where linear algebra comes to life. From modeling flows and connectivity to predicting long-term behavior, matrices translate network structure into algebraic form. Markov chains, already introduced in Section 8.4, are a central example of networks evolving over time.&lt;/p&gt;
    &lt;p&gt;A network (graph) with &lt;/p&gt;
    &lt;p&gt;For weighted graphs, entries may be positive weights instead of &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;The number of walks of length &lt;math-renderer&gt;$k$&lt;/math-renderer&gt;from node&lt;math-renderer&gt;$i$&lt;/math-renderer&gt;to node&lt;math-renderer&gt;$j$&lt;/math-renderer&gt;is given by the entry&lt;math-renderer&gt;$(A^k)_{ij}$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;Powers of adjacency matrices thus encode connectivity over time.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Another important matrix is the graph Laplacian:&lt;/p&gt;
    &lt;p&gt;where &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;math-renderer&gt;$L$&lt;/math-renderer&gt;is symmetric and positive semidefinite.&lt;/item&gt;
      &lt;item&gt;The smallest eigenvalue is always &lt;math-renderer&gt;$0$&lt;/math-renderer&gt;, with eigenvector&lt;math-renderer&gt;$(1,1,\dots,1)$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;The multiplicity of eigenvalue &lt;math-renderer&gt;$0$&lt;/math-renderer&gt;equals the number of connected components in the graph.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This connection between eigenvalues and connectivity forms the basis of spectral graph theory.&lt;/p&gt;
    &lt;p&gt;A Markov chain can be viewed as a random walk on a graph. If &lt;/p&gt;
    &lt;p&gt;describes the distribution of positions after &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;The steady-state distribution is given by the eigenvector of &lt;math-renderer&gt;$P$&lt;/math-renderer&gt;with eigenvalue&lt;math-renderer&gt;$1$&lt;/math-renderer&gt;.&lt;/item&gt;
      &lt;item&gt;The speed of convergence depends on the gap between the largest eigenvalue (which is always &lt;math-renderer&gt;$1$&lt;/math-renderer&gt;) and the second largest eigenvalue.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Consider a simple 3-node cycle graph:&lt;/p&gt;
    &lt;p&gt;This Markov chain cycles deterministically among the nodes. Eigenvalues are the cube roots of unity: &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Search engines: Google‚Äôs PageRank algorithm models the web as a Markov chain, where steady-state probabilities rank pages.&lt;/item&gt;
      &lt;item&gt;Network analysis: Eigenvalues of adjacency or Laplacian matrices reveal communities, bottlenecks, and robustness.&lt;/item&gt;
      &lt;item&gt;Epidemiology and information flow: Random walks model how diseases or ideas spread through networks.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Linear algebra transforms network problems into matrix problems. Eigenvalues and eigenvectors reveal connectivity, flow, stability, and long-term dynamics. Networks are everywhere-social media, biology, finance, and the internet-so these tools are indispensable.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;&lt;p&gt;Write the adjacency matrix of a square graph with 4 nodes. Compute&lt;/p&gt;&lt;math-renderer&gt;$A^2$&lt;/math-renderer&gt;and interpret the entries.&lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Show that the Laplacian of a connected graph has exactly one zero eigenvalue.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Find the steady-state distribution of the Markov chain with&lt;/p&gt;
        &lt;p&gt;$$ P = \begin{bmatrix} 0.5 &amp;amp; 0.5 \ 0.4 &amp;amp; 0.6 \end{bmatrix}. $$&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Explain how eigenvalues of the Laplacian can detect disconnected components of a graph.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Describe how PageRank modifies the transition matrix of the web graph to ensure a unique steady-state distribution.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Modern machine learning is built on linear algebra. From the representation of data as matrices to the optimization of large-scale models, nearly every step relies on concepts such as vector spaces, projections, eigenvalues, and matrix decompositions.&lt;/p&gt;
    &lt;p&gt;A dataset with &lt;/p&gt;
    &lt;p&gt;$$ X = \begin{bmatrix}&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&amp;amp; \mathbf{x}_1^T &amp;amp; - \&lt;/item&gt;
      &lt;item&gt;&amp;amp; \mathbf{x}_2^T &amp;amp; - \ &amp;amp; \vdots &amp;amp; \&lt;/item&gt;
      &lt;item&gt;&amp;amp; \mathbf{x}_m^T &amp;amp; - \end{bmatrix}, $$&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;where each row &lt;/p&gt;
    &lt;p&gt;At the heart of machine learning are linear predictors:&lt;/p&gt;
    &lt;p&gt;where &lt;/p&gt;
    &lt;p&gt;This is solved efficiently using matrix factorizations.&lt;/p&gt;
    &lt;p&gt;The SVD of a matrix &lt;/p&gt;
    &lt;p&gt;where &lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Singular values measure the importance of directions in feature space.&lt;/item&gt;
      &lt;item&gt;SVD is used for dimensionality reduction (low-rank approximations), topic modeling, and recommender systems.&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;PCA (Principal Component Analysis): diagonalization of the covariance matrix identifies directions of maximal variance.&lt;/item&gt;
      &lt;item&gt;Spectral clustering: uses eigenvectors of the Laplacian to group data points into clusters.&lt;/item&gt;
      &lt;item&gt;Stability analysis: eigenvalues of Hessian matrices determine whether optimization converges to a minimum.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Even deep learning, though nonlinear, uses linear algebra at its core:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Each layer is a matrix multiplication followed by a nonlinear activation.&lt;/item&gt;
      &lt;item&gt;Training requires computing gradients, which are expressed in terms of matrix calculus.&lt;/item&gt;
      &lt;item&gt;Backpropagation is essentially repeated applications of the chain rule with linear algebra.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Machine learning models often involve datasets with millions of features and parameters. Linear algebra provides the algorithms and abstractions that make training and inference possible. Without it, large-scale computation in AI would be intractable.&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;
        &lt;p&gt;Show that ridge regression leads to the normal equations&lt;/p&gt;
        &lt;p&gt;$$ (X^T X + \lambda I)\mathbf{w} = X^T \mathbf{y}. $$&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Explain how SVD can be used to compress an image represented as a matrix of pixel intensities.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;&lt;p&gt;For a covariance matrix&lt;/p&gt;&lt;math-renderer&gt;$\Sigma$&lt;/math-renderer&gt;, show why its eigenvalues represent variances along principal components.&lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Give an example of how eigenvectors of the Laplacian matrix can be used for clustering a small graph.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;In a neural network with one hidden layer, write the forward pass in matrix form.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45103436</guid></item><item><title>Removing Guix from Debian</title><link>https://lwn.net/SubscriberLink/1035491/d8100135a8ae4246/</link><description>&lt;doc fingerprint="8eefcc0d88a5d39a"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Removing Guix from Debian&lt;/head&gt;
    &lt;head rend="h2"&gt;[LWN subscriber-only content]&lt;/head&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell&gt;
          &lt;head&gt;Welcome to LWN.net&lt;/head&gt;
          &lt;p&gt;The following subscription-only content has been made available to you by an LWN subscriber. Thousands of subscribers depend on LWN for the best news from the Linux and free software communities. If you enjoy this article, please consider accepting the discount offer on the right. Thank you for visiting LWN.net!&lt;/p&gt;
        &lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;As a rule, if a package is shipped with a Debian release, users can count on it being available, and updated, for the entire life of the release. If package foo is included in the stable release‚Äîcurrently Debian 13 ("trixie")‚Äîa user can reasonably expect that it will continue to be available with security backports as long as that release is supported, though it may not be included in Debian 14 ("forky"). However, it is likely that the Guix package manager will soon be removed from the repositories for Debian 13 and Debian 12 ("bookworm", also called oldstable).&lt;/p&gt;
    &lt;p&gt;Debian has the Advanced Package Tool (APT) for package management, of course, but Guix offers a different approach and can be used in conjunction with other distribution package managers. Guix is inspired by Nix's functional package management; it offers transactional upgrades and rollbacks, package management for unprivileged users, and more. Unlike Nix, its packages are defined using the Guile implementation of the Scheme programming language. There is also a GNU Guix distribution as well; LWN covered both NixOS and Guix in February 2024, and looked at Nix alternative Lix in July 2024.&lt;/p&gt;
    &lt;p&gt;On June 24, the Guix project disclosed several security vulnerabilities that affected the guix-daemon, which is a program that is used to build software and access the store where successful builds are kept. Two of the vulnerabilities, CVE-2025-46415 and CVE-2025-46416, would allow a local user to gain the privileges of any build users, manipulate build output, as well as gain the privileges of the daemon user. The vulnerabilities also impacted Nix and Lix package managers.&lt;/p&gt;
    &lt;p&gt;The disclosure blog post gave instructions on how to mitigate the vulnerabilities by updating guix-daemon using the "guix pull" command, but the project did not make a new Guix release. The last actual release from the project was version 1.4.0, which was announced in December 2022. The Guix project has a rolling-release model, with sporadic releases, and does not maintain stable branches with security updates. This may not pose a problem for users getting Guix directly from the project, but it poses some obstacles for inclusion in other Linux distributions.&lt;/p&gt;
    &lt;head rend="h4"&gt;Debian package&lt;/head&gt;
    &lt;p&gt;Salvatore Bonaccorso filed a bug against Debian's guix package on June 25 to report the vulnerabilities. Vagrant Cascadian, the maintainer of the package, replied on July 15, and said that the fixes for the security vulnerabilities had been "&lt;quote&gt;commingled with a lot of other upstream changes&lt;/quote&gt;", and it would be "&lt;quote&gt;trickier than in the past&lt;/quote&gt;" to try to backport the fixes without the other changes in Guix. He said he had just managed to "&lt;quote&gt;get something to compile&lt;/quote&gt;" with the security fixes applied, using a backport repository maintained by Denis 'GNUtoo' Carikli.&lt;/p&gt;
    &lt;p&gt;Carikli had brought up the difficulty of backporting Guix fixes on the guix-devel mailing list on July 8. Various distributions had Guix versions 1.2.0, 1.3.0, and 1.4.0, with Debian shipping 1.2.0 and 1.4.0 and used as the upstream for other distributions' packages:&lt;/p&gt;
    &lt;quote&gt;But the Debian package maintainer has the almost impossible task to backport all the security fixes without a community nor help behind [maintaining it] and as things are going, this will probably lead to the Debian guix package being removed with cascading effect for the other distributions.&lt;/quote&gt;
    &lt;p&gt;He said he had applied about 50 patches that involve guix-daemon between the 1.4.0 release and the last-known security fix. He also noted that his effort would probably not be suitable for Linux distributions that ship a Guix package. He wondered what the best way would be to collaborate on a branch that distributions could pull from for updates.&lt;/p&gt;
    &lt;p&gt;Liam Hupfer said that "&lt;quote&gt;we gave up and shipped the last commit on master mentioned in the recent CVE disclosure&lt;/quote&gt;" for Nix. He said he would also like to see Guix figure out backporting patches, but could Cascadian consider the Nix approach until then?&lt;/p&gt;
    &lt;p&gt;No, that approach would not make sense, Cascadian said. If Guix was "&lt;quote&gt;truly a rolling release&lt;/quote&gt;", then it may just not make sense to maintain distribution packages:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Up till recently, it has always been possible to backport changes with relative ease, but that was perhaps just lack of development... the recent unprivileged daemon stuff really made backporting patches harder. [...]&lt;/p&gt;
      &lt;p&gt;In the Debian release model, ideally we would avoid bringing in unrelated patchsets (e.g. the unprivileged daemon code bringing in an entire network stack?) but that might be too hard to pull off. Not sure if the security team would accept a patchset that includes more than the minimum necessary to fix the security issues.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Without a branch that contained backported patches, they would be inclined "&lt;quote&gt;to recommend dropping the Guix package in Debian&lt;/quote&gt;".&lt;/p&gt;
    &lt;p&gt;On August 27, they did just that. Cascadian filed a bug to remove guix from Debian 11 ("bullseye"), bookworm, and trixie. They also filed a bug to remove the package from the upcoming forky release. Adam D. Barratt replied and said that it would not be possible to remove guix from bullseye, which is now an LTS release; only updates from the security archive were now allowed.&lt;/p&gt;
    &lt;p&gt;There are no dependencies on guix, so the removal of the package should not affect any other Debian packages in the trixie and bookworm releases.&lt;/p&gt;
    &lt;head rend="h4"&gt;What's next?&lt;/head&gt;
    &lt;p&gt;I emailed Cascadian to find out what the next steps would be for the package in those releases. They said that the package is likely to be removed from the upcoming point releases for trixie and bookworm. Users who have it installed already will be stuck at the old version, unless they take manual steps to update. Cascadian said this was not a great outcome "&lt;quote&gt;but better than keeping it available for people to install the vulnerable version&lt;/quote&gt;".&lt;/p&gt;
    &lt;p&gt;The guix package should not have landed in trixie at all, Cascadian said, "&lt;quote&gt;my understanding was that [the bug report] should have blocked it from being released&lt;/quote&gt;". However, it seems there was enough activity on the bug that prevented Debian's autoremoval mechanisms from triggering and pulling the package from the final release. "&lt;quote&gt;There apparently is not manual review of all blockers in the current Debian release process&lt;/quote&gt;". Even if the timing had been better for the trixie release, though, the same fixes would need to have been applied to bookworm and older releases.&lt;/p&gt;
    &lt;p&gt;Cascadian said that it has been a fair amount of work to keep Guix working on Debian. For example, he has had to maintain various Guile dependencies, and deal with the fact that Guix uses "&lt;quote&gt;fairly old&lt;/quote&gt;" GCC versions whereas Debian usually ships the latest GCC version available for a given release. At some point, they said, "&lt;quote&gt;you have to evaluate whether that work is worth it&lt;/quote&gt;" when the upstream provides a binary that people can install.&lt;/p&gt;
    &lt;p&gt;Guix is better for having been packaged for Debian and run through Debian's Lintian tool. Cascadian said that they have probably fixed more typos in Guix than anyone else, and have found other problems while checking that the builds of Guix are reproducible. "&lt;quote&gt;Any time you run a piece of software through processes outside of the primary development workflow, you find surprises worth fixing.&lt;/quote&gt;"&lt;/p&gt;
    &lt;head rend="h4"&gt;Regular releases&lt;/head&gt;
    &lt;p&gt;There is an effort in the Guix project to create yearly releases. In May, Steve George proposed that the project adopt a Guix Consensus Document for "Regular and efficient releases", and it was accepted by the project in July. It calls for a release every year in June, with a one-time exception for a November 2025 release, and a short development cycle for the June 2026 release. Even so, that will not provide stable branches for Debian and other distributions to pull from; it will just shorten the interval and feature differences between major releases.&lt;/p&gt;
    &lt;p&gt;Debian users will, of course, still be able to use Guix by installing it using binaries provided by the Guix project. That will, at least potentially, leave some users out in the cold‚ÄîDebian currently provides a guix package for x86-64, Arm64, PowerPC, RISC-V, 32-bit Arm, and 32-bit x86. The Guix project itself does does not have RISC-V binaries, though it does cover the other architectures.&lt;/p&gt;
    &lt;p&gt;It is fairly unusual for a package to be removed from a stable or oldstable release. For example, the bookworm release has been out for more than two years, but a search of the Debian bug database only shows one package‚Äîguix‚Äîthat has the "RM" tag in the subject to flag a package for removal.&lt;/p&gt;
    &lt;p&gt;According to Debian's popularity contest (popcon) statistics, there are not quite 230 systems with Guix installed. Popcon statistics only hint at the actual number of package installs, but assuming they are approximately accurate, then removing Guix will not inconvenience a significant number of Debian users. It will, however, mean that fewer people are poking at Guix with an intent to making it work on distributions like Debian, while finding distribution-specific bugs.&lt;/p&gt;
    &lt;p&gt; Posted Sep 2, 2025 14:34 UTC (Tue) by muase (subscriber, #178466) [Link] (6 responses) Do we have a meta-statistic or interpolated number how many systems participate in the popularity context? As it is disabled by default ‚Äì and Linux-users maybe tend to be more privacy focused ‚Äì I'd imagine there is quite a number of unreported installations. Posted Sep 2, 2025 14:45 UTC (Tue) by rschroev (subscriber, #4164) [Link] Posted Sep 2, 2025 14:56 UTC (Tue) by jzb (editor, #7867) [Link] (4 responses) If you visit the main popcon pages you'll find stats on how many systems are participating in popcon and how many submissions there are. The "stable reports" tab suggests that about 135K bookworm systems have checked in in the past 12 months. Whether 135K is 10%, 20%, etc. of all installs I have no idea. Posted Sep 2, 2025 15:35 UTC (Tue) by muase (subscriber, #178466) [Link] Posted Sep 2, 2025 18:52 UTC (Tue) by ballombe (subscriber, #9523) [Link] (2 responses) Posted Sep 2, 2025 19:18 UTC (Tue) by jzb (editor, #7867) [Link] (1 responses) Posted Sep 2, 2025 19:27 UTC (Tue) by ballombe (subscriber, #9523) [Link] So each days, only submissions younger than 20 days are considered for the statistic of the day. Posted Sep 2, 2025 15:59 UTC (Tue) by jafd (subscriber, #129642) [Link] (1 responses) Am I the only one who finds it quite strange that to ‚Äúbuild software and access the store where successful builds are kept‚Äù, a daemon process is required in the first place? Posted Sep 2, 2025 16:09 UTC (Tue) by daroc (editor, #160859) [Link] Posted Sep 2, 2025 17:37 UTC (Tue) by kkremitzki (subscriber, #115703) [Link] 4cf1acc7f30 + cherry-picked 71171538e12 + 1c78f71beb3 + a49536e3200 + 7f237f3e6ca &lt;head&gt;Popcon Dark Figure&lt;/head&gt;&lt;head&gt;Popcon Dark Figure&lt;/head&gt;&lt;head&gt;Popcon Dark Figure&lt;/head&gt;&lt;head&gt;Popcon Dark Figure&lt;/head&gt;&lt;head&gt;Popcon Dark Figure&lt;/head&gt;&lt;lb/&gt; bookworm count is going down from 160000 because users are upgrading to Trixie&lt;head&gt;Popcon Dark Figure&lt;/head&gt;&lt;head&gt;Popcon Dark Figure&lt;/head&gt;&lt;lb/&gt; The server automatically extracts the report from the email or HTTP and stores it in a database for a maximum of 20 days or until the host sends a new report.&lt;lb/&gt; The graphs are only provided to give an historical perspective. For example, that bookworm peaked at almost 16k submissions before the release of trixie.&lt;head&gt;A daemon process?&lt;/head&gt;&lt;head&gt;A daemon process?&lt;/head&gt;&lt;head&gt;Vuln proof-of-concept issues&lt;/head&gt;&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45103857</guid></item><item><title>Static sites enable a good time travel experience</title><link>https://hamatti.org/posts/static-sites-enable-a-good-time-travel-experience/</link><description>&lt;doc fingerprint="5895a521cf7dd597"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Static sites enable a good time travel experience&lt;/head&gt;
    &lt;p&gt;Varun wrote about gamifying blogging and personal website maintenance which reminded me of the time when I awarded myself some badges for blogging.&lt;/p&gt;
    &lt;p&gt;I mentioned this to Varun who asked if I had any screenshots of what it looked like on my website. My initial answer was ‚Äúno‚Äù, then I looked at Wayback Machine but there were not pictures of the badges.&lt;/p&gt;
    &lt;p&gt;Then, a bit later it hit me. I don‚Äôt need any archived screenshots: my website is built with Eleventy and it's static so I can check out a git commit from the time I had those badges up, fire up Eleventy and see the website ‚Äî as it was in the spring of 2021.&lt;/p&gt;
    &lt;p&gt;That‚Äôs a beauty of a static site generator combined with my workflow of fetching posts from CMS before build time so each commit contains a full snapshot of the website.&lt;/p&gt;
    &lt;p&gt; Comparing this to a website that uses a database for posts (like WordPress) or a flow where posts from CMS are not stored in version control but rather fetched at build time only, my solution makes time travel to (almost) any given moment in time a two-command operation (&lt;code&gt;git checkout&lt;/code&gt;
  with the right commit hash and
  &lt;code&gt;@11ty/eleventy serve&lt;/code&gt; to serve a dev
  server). I say almost because back in the day I wasn‚Äôt quite as diligent in
  commiting every change as I was deploying manually and not through version
  control automation.
&lt;/p&gt;
    &lt;p&gt;A year ago, inspired by Alex Chan‚Äôs blog post Taking regular screenshots of my website I set up a GitHub Action that takes a snapshot of my front page once a month to keep a record. At the time, I felt bit sad that I hadn‚Äôt started it before. However, now that I realised how easy it is for me to go back in time thanks to Eleventy and git, I‚Äôm not so worried anymore. Maybe I should do a collage of changes on my design one day by going through my project history.&lt;/p&gt;
    &lt;p&gt;One more major point for static site generators!&lt;/p&gt;
    &lt;p&gt;If something above resonated with you, let's start a discussion about it! Email me at juhamattisantala at gmail dot com and share your thoughts. In 2025, I want to have more deeper discussions with people from around the world and I'd love if you'd be part of that.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45104303</guid></item><item><title>Anthropic raises $13B Series F at $183B post-money valuation</title><link>https://www.anthropic.com/news/anthropic-raises-series-f-at-usd183b-post-money-valuation</link><description>&lt;doc fingerprint="ec368bfc2c378ca8"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Anthropic raises $13B Series F at $183B post-money valuation&lt;/head&gt;
    &lt;p&gt;Anthropic has completed a Series F fundraising of $13 billion led by ICONIQ. This financing values Anthropic at $183 billion post-money. Along with ICONIQ, the round was co-led by Fidelity Management &amp;amp; Research Company and Lightspeed Venture Partners. The investment reflects Anthropic‚Äôs continued momentum and reinforces our position as the leading intelligence platform for enterprises, developers, and power users.&lt;/p&gt;
    &lt;p&gt;Significant investors in this round include Altimeter, Baillie Gifford, affiliated funds of BlackRock, Blackstone, Coatue, D1 Capital Partners, General Atlantic, General Catalyst, GIC, Growth Equity at Goldman Sachs Alternatives, Insight Partners, Jane Street, Ontario Teachers' Pension Plan, Qatar Investment Authority, TPG, T. Rowe Price Associates, Inc., T. Rowe Price Investment Management, Inc., WCM Investment Management, and XN.&lt;/p&gt;
    &lt;p&gt;‚ÄúFrom Fortune 500 companies to AI-native startups, our customers rely on Anthropic‚Äôs frontier models and platform products for their most important, mission-critical work,‚Äù said Krishna Rao, Chief Financial Officer of Anthropic. ‚ÄúWe are seeing exponential growth in demand across our entire customer base. This financing demonstrates investors‚Äô extraordinary confidence in our financial performance and the strength of their collaboration with us to continue fueling our unprecedented growth.‚Äù&lt;/p&gt;
    &lt;p&gt;Anthropic has seen rapid growth since the launch of Claude in March 2023. At the beginning of 2025, less than two years after launch, Anthropic‚Äôs run-rate revenue had grown to approximately $1 billion. By August 2025, just eight months later, our run-rate revenue reached over $5 billion‚Äîmaking Anthropic one of the fastest-growing technology companies in history.&lt;/p&gt;
    &lt;p&gt;Anthropic‚Äôs trajectory has been driven by our leading technical talent, our focus on safety, and our frontier research, including pioneering alignment and interpretability work, all of which underpin the performance and reliability of our models. Every day more businesses, developers, and consumer power users are trusting Claude to help them solve their most challenging problems. Anthropic now serves over 300,000 business customers, and our number of large accounts‚Äîcustomers that each represent over $100,000 in run-rate revenue‚Äîhas grown nearly 7x in the past year.&lt;/p&gt;
    &lt;p&gt;This growth spans the entire Anthropic platform, with advancements for businesses, developers, and consumers. For businesses, our API and industry-specific products make it easy to add powerful AI to their critical applications without complex integration work. Developers have made Claude Code their tool of choice since its full launch in May 2025. Claude Code has quickly taken off‚Äîalready generating over $500 million in run-rate revenue with usage growing more than 10x in just three months. For individual users, the Pro and Max plans for Claude deliver enhanced AI capabilities for everyday tasks and specialized projects.&lt;/p&gt;
    &lt;p&gt;‚ÄúAnthropic is on an exceptional trajectory, combining research excellence, technological leadership, and relentless focus on customers. We‚Äôre honored to partner with Dario and the team, and our lead investment in their Series F reflects our belief in their values and their ability to shape the future of responsible AI,‚Äù said Divesh Makan, Partner at ICONIQ. ‚ÄúEnterprise leaders tell us what we‚Äôre seeing firsthand‚ÄîClaude is reliable, built on a trustworthy foundation, and guided by leaders truly focused on the long term.‚Äù&lt;/p&gt;
    &lt;p&gt;The Series F investment will expand our capacity to meet growing enterprise demand, deepen our safety research, and support international expansion as we continue building reliable, interpretable, and steerable AI systems.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45104907</guid></item><item><title>Launch HN: Datafruit (YC S25) ‚Äì AI for DevOps</title><link>https://news.ycombinator.com/item?id=45104974</link><description>&lt;doc fingerprint="ee5fd4d201abb246"&gt;
  &lt;main&gt;
    &lt;div&gt;&lt;p&gt;Hey HN! We‚Äôre Abhi, Venkat, Tom, and Nick and we are building Datafruit (&lt;/p&gt;https://datafruit.dev/&lt;p&gt;), an AI DevOps agent. We‚Äôre like Devin for DevOps. You can ask Datafruit to check your cloud spend, look for loose security policies, make changes to your IaC, and it can reason across your deployment standards, design docs, and DevOps practices.&lt;/p&gt;&lt;p&gt;Demo video: https://www.youtube.com/watch?v=2FitSggI7tg.&lt;/p&gt;&lt;p&gt;Right now, we have two main methods to interact with Datafruit:&lt;/p&gt;&lt;p&gt;(1) automated infrastructure audits‚Äî agents periodically scan your environment to find cost optimization opportunities, detect infrastructure drift, and validate your infra against compliance requirements.&lt;/p&gt;&lt;p&gt;(2) chat interface (available as a web UI and through slack) ‚Äî ask the agent questions for real-time insights, or assign tasks directly, such as investigating spend anomalies, reviewing security posture, or applying changes to IaC resources.&lt;/p&gt;&lt;p&gt;Working at FAANG and various high-growth startups, we realized that infra work requires an enormous amount of context, often more than traditional software engineering. The business decisions, codebase, and cloud itself are all extremely important in any task that has been assigned. To maximize the success of the agents, we do a fair amount of context engineering. Not hallucinating is super important!&lt;/p&gt;&lt;p&gt;One thing which has worked incredibly well for us is a multi-agent system where we have specialized sub-agents with access to specific tool calls and documentation for their specialty. Agents choose to ‚Äúhandoff‚Äù to each other when they feel like another agent would be more specialized for the task. However, all agents share the same context (https://cognition.ai/blog/dont-build-multi-agents). We‚Äôre pretty happy with this approach, and believe it could work in other disciplines which require high amounts of specialized expertise.&lt;/p&gt;&lt;p&gt;Infrastructure is probably the most mission-critical part of any software organization, and needs extremely heavy guardrails to keep it safe. Language models are not yet at the point where they can be trusted to make changes (we‚Äôve talked to a couple of startups where the Claude Code + AWS CLI combo has taken their infra down). Right now, Datafruit receives read-only access to your infrastructure and can only make changes through pull requests to your IaC repositories. The agent also operates in a sandboxed virtual environment so that it could not write cloud CLI commands if it wanted to!&lt;/p&gt;&lt;p&gt;Where LLMs can add significant value is in reducing the constant operational inefficiencies that eat up cloud spend and delay deadlines‚Äîthe small-but-urgent ops work. Once Datafruit indexes your environment, you can ask it to do things like:&lt;/p&gt;&lt;quote&gt;&lt;code&gt;  "Grant @User write access to analytics S3 bucket for 24 hours"
    -&amp;gt; Creates temporary IAM role, sends least-privilege credentials, auto-revokes tomorrow

  "Find where this secret is used so I can rotate it without downtime"
    -&amp;gt; Discovers all instances of your secret, including old cron-jobs you might not know about, so you can safely rotate your keys


  "Why did database costs spike yesterday?"
    -&amp;gt; Identifies expensive queries, shows optimization options, implements fixes

&lt;/code&gt;&lt;/quote&gt;&lt;p&gt; We charge a straightforward subscription model for a managed version, but we also offer a bring-your-own-cloud model. All of Datafruit can be deployed on Kubernetes using Helm charts for enterprise customers where data can‚Äôt leave your VPC. For the time being, we‚Äôre installing the product ourselves on customers' clouds. It doesn‚Äôt exist in a self-serve form yet. We‚Äôll get there eventually, but in the meantime if you‚Äôre interested we‚Äôd love for you guys to email us at founders@datafruit.dev.&lt;/p&gt;&lt;p&gt;We would love to hear your thoughts! If you work with cloud infra, we are especially interested in learning about what kinds of work you do which you wish could be offloaded onto an agent.&lt;/p&gt;&lt;/div&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45104974</guid></item><item><title>OpenAI says it's scanning users' conversations and reporting content to police</title><link>https://futurism.com/openai-scanning-conversations-police</link><description>&lt;doc fingerprint="3003187491b757bd"&gt;
  &lt;main&gt;
    &lt;p&gt;Update: It looks like this may have been OpenAI's attempt to get ahead of a horrifying story that just broke, about a man who fell into AI psychosis and killed his mother in a murder-suicide. Full details here.&lt;/p&gt;
    &lt;p&gt;For the better part of a year, we've watched ‚Äî and reported ‚Äî in horror as more and more stories emerge about AI chatbots leading people to self-harm, delusions, hospitalization, arrest, and suicide.&lt;/p&gt;
    &lt;p&gt;As the loved ones of the people impacted by these dangerous bots rally for change to prevent such harm from happening to anyone else, the companies that run these AIs have been slow to implement safeguards ‚Äî and OpenAI, whose ChatGPT has been repeatedly implicated in what experts are now calling "AI psychosis," has until recently done little more than offer copy-pasted promises.&lt;/p&gt;
    &lt;p&gt;In a new blog post admitting certain failures amid its users' mental health crises, OpenAI also quietly disclosed that it's now scanning users' messages for certain types of harmful content, escalating particularly worrying content to human staff for review ‚Äî and, in some cases, reporting it to the cops.&lt;/p&gt;
    &lt;p&gt;"When we detect users who are planning to harm others, we route their conversations to specialized pipelines where they are reviewed by a small team trained on our usage policies and who are authorized to take action, including banning accounts," the blog post notes. "If human reviewers determine that a case involves an imminent threat of serious physical harm to others, we may refer it to law enforcement."&lt;/p&gt;
    &lt;p&gt;That short and vague statement leaves a lot to be desired ‚Äî and OpenAI's usage policies, referenced as the basis on which the human review team operates, don't provide much more clarity.&lt;/p&gt;
    &lt;p&gt;When describing its rule against "harm [to] yourself or others," the company listed off some pretty standard examples of prohibited activity, including using ChatGPT "to promote suicide or self-harm, develop or use weapons, injure others or destroy property, or engage in unauthorized activities that violate the security of any service or system."&lt;/p&gt;
    &lt;p&gt;But in the post warning users that the company will call the authorities if they seem like they're going to hurt someone, OpenAI also acknowledged that it is "currently not referring self-harm cases to law enforcement to respect people‚Äôs privacy given the uniquely private nature of ChatGPT interactions."&lt;/p&gt;
    &lt;p&gt;While ChatGPT has in the past proven itself pretty susceptible to so-called jailbreaks that trick it into spitting out instructions to build neurotoxins or step-by-step instructions to kill yourself, this new rule adds an additional layer of confusion. It remains unclear which exact types of chats could result in user conversations being flagged for human review, much less getting referred to police. We've reached out to OpenAI to ask for clarity.&lt;/p&gt;
    &lt;p&gt;While it's certainly a relief that AI conversations won't result in police wellness checks ‚Äî which often end up causing more harm to the person in crisis due to most cops' complete lack of training in handling mental health situations ‚Äî it's also kind of bizarre that OpenAI even mentions privacy, given that it admitted in the same post that it's monitoring user chats and potentially sharing them with the fuzz.&lt;/p&gt;
    &lt;p&gt;To make the announcement all the weirder, this new rule seems to contradict the company's pro-privacy stance amid its ongoing lawsuit with the New York Times and other publishers as they seek access to troves of ChatGPT logs to determine whether any of their copyrighted data had been used to train its models.&lt;/p&gt;
    &lt;p&gt;OpenAI has steadfastly rejected the publishers' request on grounds of protecting user privacy and has, more recently, begun trying to limit the amount of user chats it has to give the plaintiffs.&lt;/p&gt;
    &lt;p&gt;Last month, the company's CEO Sam Altman admitted during an appearance on a podcast that using ChatGPT as a therapist or attorney doesn't confer the same confidentiality that talking to a flesh-and-blood professional would ‚Äî and that thanks to the NYT lawsuit, the company may be forced to turn those chats over to courts.&lt;/p&gt;
    &lt;p&gt;In other words, OpenAI is stuck between a rock and a hard place. The PR blowback from its users spiraling into mental health crises and dying by suicide is appalling ‚Äî but since it's clearly having trouble controlling its own tech enough to protect users from those harmful scenarios, it's falling back on heavy-handed moderation that flies in the face of its own CEO's promises.&lt;/p&gt;
    &lt;p&gt;More on the dark side of ChatGPT: After Their Son's Suicide, His Parents Were Horrified to Find His Conversations With ChatGPT&lt;/p&gt;
    &lt;p&gt;Share This Article&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45105081</guid></item><item><title>AI web crawlers are destroying websites in their never-ending content hunger</title><link>https://www.theregister.com/2025/08/29/ai_web_crawlers_are_destroying/</link><description>&lt;doc fingerprint="1552b1596b220fca"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;AI web crawlers are destroying websites in their never-ending hunger for any and all content&lt;/head&gt;
    &lt;head rend="h2"&gt;But the cure may ruin the web....&lt;/head&gt;
    &lt;p&gt;Opinion With AI's rise, AI web crawlers are strip-mining the web in their perpetual hunt for ever more content to feed into their Large Language Model (LLM) mills. How much traffic do they account for? According to Cloudflare, a major content delivery network (CDN) force, 30% of global web traffic now comes from bots. Leading the way and growing fast? AI bots.&lt;/p&gt;
    &lt;p&gt;Cloud services company Fastly agrees. It reports that 80% of all AI bot traffic comes from AI data fetcher bots. So, you ask, "What's the problem? Haven't web crawlers been around since 1993 with the arrival of the World Wide Web Wanderer in 1993?" Well, yes, they have. Anyone who runs a website, though, knows there's a huge, honking difference between the old-style crawlers and today's AI crawlers. The new ones are site killers.&lt;/p&gt;
    &lt;p&gt;Fastly warns that they're causing "performance degradation, service disruption, and increased operational costs." Why? Because they're hammering websites with traffic spikes that can reach up to ten or even twenty times normal levels within minutes.&lt;/p&gt;
    &lt;p&gt;Moreover, AI crawlers are much more aggressive than standard crawlers. As the InMotionhosting web hosting company notes, they also tend to disregard crawl delays or bandwidth-saving guidelines and extract full page text, and sometimes attempt to follow dynamic links or scripts.&lt;/p&gt;
    &lt;p&gt;The result? If you're using a shared server for your website, as many small businesses do, even if your site isn't being shaken down for content, other sites on the same hardware with the same Internet pipe may be getting hit. This means your site's performance drops through the floor even if an AI crawler isn't raiding your website.&lt;/p&gt;
    &lt;p&gt;Smaller sites, like my own Practical Tech, get slammed to the point where they're simply knocked out of service. Thanks to Cloudflare Distributed Denial of Service (DDoS) protection, my microsite can shrug off DDoS attacks. AI bot attacks ‚Äì and let's face it, they are attacks ‚Äì not so much.&lt;/p&gt;
    &lt;p&gt;Even large websites are feeling the crush. To handle the load, they must increase their processor, memory, and network resources. If they don't? Well, according to most web hosting companies, if a website takes longer than three seconds to load, more than half of visitors will abandon the site. Bounce rates jump up for every second beyond that threshold.&lt;/p&gt;
    &lt;p&gt;So when AI searchbots, with Meta (52% of AI searchbot traffic), Google (23%), and OpenAI (20%) leading the way, clobber websites with as much as 30 Terabits in a single surge, they're damaging even the largest companies' site performance.&lt;/p&gt;
    &lt;p&gt;Now, if that were traffic that I could monetize, it would be one thing. It's not. It used to be when search indexing crawler, Googlebot, came calling, I could always hope that some story on my site would land on the magical first page of someone's search results so they'd visit me, they'd read the story, and two or three times out of a hundred visits, they'd click on an ad, and I'd get a few pennies of income. Or, if I had a business site, I might sell a widget or get someone to do business with me.&lt;/p&gt;
    &lt;p&gt;AI searchbots? Not so much. AI crawlers don't direct users back to the original sources. They kick our sites around, return nothing, and we're left trying to decide how we're to make a living in the AI-driven web world.&lt;/p&gt;
    &lt;p&gt;Yes, of course, we can try to fend them off with logins, paywalls, CAPTCHA challenges, and sophisticated anti-bot technologies. You know one thing AI is good at? It's getting around those walls.&lt;/p&gt;
    &lt;p&gt;As for robots.txt files, the old-school way of blocking crawlers? Many ‚Äì most? ‚Äì AI crawlers simply ignore them.&lt;/p&gt;
    &lt;p&gt;For example, Perplexity has been accused by Cloudflare of ignoring robots.txt files. Perplexity, in turn, hotly denies this accusation. Me? All I know is I see regular waves of multiple companies' AI bots raiding my site.&lt;/p&gt;
    &lt;p&gt;There are efforts afoot to supplement robots.txt with llms.txt files. This is a proposed standard to provide LLM-friendly content that LLMs can access without compromising the site's performance. Not everyone is thrilled with this approach, though, and it may yet come to nothing.&lt;/p&gt;
    &lt;p&gt;In the meantime, to combat excessive crawling, some infrastructure providers, such as Cloudflare, now offer default bot-blocking services to block AI crawlers and provide mechanisms to deter AI companies from accessing their data. Other programs, such as the popular open-source and free Anubis AI crawler blocker, just attempt to slow down their visits to a, if you'll pardon the expression, a crawl.&lt;/p&gt;
    &lt;p&gt;In the arms race between all businesses and their websites and AI companies, eventually, they'll reach some kind of neutrality. Unfortunately, the web will be more fragmented than ever. Sites will further restrict or monetize access. Important, accurate information will end up siloed behind walls or removed altogether.&lt;/p&gt;
    &lt;p&gt;Remember the open web? I do. I can see our kids on the Internet, where you must pay cash money to access almost anything. I don't think anyone wants a Balkanized Internet, but I fear that's exactly where we're going.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45105230</guid></item><item><title>'World Models,' an old idea in AI, mount a comeback</title><link>https://www.quantamagazine.org/world-models-an-old-idea-in-ai-mount-a-comeback-20250902/</link><description>&lt;doc fingerprint="3c198b9fef1780ca"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;‚ÄòWorld Models,‚Äô an Old Idea in AI, Mount a Comeback&lt;/head&gt;
    &lt;head rend="h2"&gt;Introduction&lt;/head&gt;
    &lt;p&gt;The latest ambition of artificial intelligence research ‚Äî particularly within the labs seeking ‚Äúartificial general intelligence,‚Äù or AGI ‚Äî is something called a world model: a representation of the environment that an AI carries around inside itself like a computational snow globe. The AI system can use this simplified representation to evaluate predictions and decisions before applying them to its real-world tasks. The deep learning luminaries Yann LeCun (of Meta), Demis Hassabis (of Google DeepMind) and Yoshua Bengio (of Mila, the Quebec Artificial Intelligence Institute) all believe world models are essential for building AI systems that are truly smart, scientific and safe.&lt;/p&gt;
    &lt;p&gt;The fields of psychology, robotics and machine learning have each been using some version of the concept for decades. You likely have a world model running inside your skull right now ‚Äî it‚Äôs how you know not to step in front of a moving train without needing to run the experiment first.&lt;/p&gt;
    &lt;p&gt;So does this mean that AI researchers have finally found a core concept whose meaning everyone can agree upon? As a famous physicist once wrote: Surely you‚Äôre joking. A world model may sound straightforward ‚Äî but as usual, no one can agree on the details. What gets represented in the model, and to what level of fidelity? Is it innate or learned, or some combination of both? And how do you detect that it‚Äôs even there at all?&lt;/p&gt;
    &lt;p&gt;It helps to know where the whole idea started. In 1943, a dozen years before the term ‚Äúartificial intelligence‚Äù was coined, a 29-year-old Scottish psychologist named Kenneth Craik published an influential monograph in which he mused that ‚Äúif the organism carries a ‚Äòsmall-scale model‚Äô of external reality ‚Ä¶ within its head, it is able to try out various alternatives, conclude which is the best of them ‚Ä¶ and in every way to react in a much fuller, safer, and more competent manner.‚Äù Craik‚Äôs notion of a mental model or simulation presaged the ‚Äúcognitive revolution‚Äù that transformed psychology in the 1950s and still rules the cognitive sciences today. What‚Äôs more, it directly linked cognition with computation: Craik considered the ‚Äúpower to parallel or model external events‚Äù to be ‚Äúthe fundamental feature‚Äù of both ‚Äúneural machinery‚Äù and ‚Äúcalculating machines.‚Äù&lt;/p&gt;
    &lt;p&gt;The nascent field of artificial intelligence eagerly adopted the world-modeling approach. In the late 1960s, an AI system called SHRDLU wowed observers by using a rudimentary ‚Äúblock world‚Äù to answer commonsense questions about tabletop objects, like ‚ÄúCan a pyramid support a block?‚Äù But these handcrafted models couldn‚Äôt scale up to handle the complexity of more realistic settings. By the late 1980s, the AI and robotics pioneer Rodney Brooks had given up on world models completely, famously asserting that ‚Äúthe world is its own best model‚Äù and ‚Äúexplicit representations ‚Ä¶ simply get in the way.‚Äù&lt;/p&gt;
    &lt;p&gt;It took the rise of machine learning, especially deep learning based on artificial neural networks, to breathe life back into Craik‚Äôs brainchild. Instead of relying on brittle hand-coded rules, deep neural networks could build up internal approximations of their training environments through trial and error and then use them to accomplish narrowly specified tasks, such as driving a virtual race car. In the past few years, as the large language models behind chatbots like ChatGPT began to demonstrate emergent capabilities that they weren‚Äôt explicitly trained for ‚Äî like inferring movie titles from strings of emojis, or playing the board game Othello ‚Äî world models provided a convenient explanation for the mystery. To prominent AI experts such as Geoffrey Hinton, Ilya Sutskever and Chris Olah, it was obvious: Buried somewhere deep within an LLM‚Äôs thicket of virtual neurons must lie ‚Äúa small-scale model of external reality,‚Äù just as Craik imagined.&lt;/p&gt;
    &lt;p&gt;The truth, at least so far as we know, is less impressive. Instead of world models, today‚Äôs generative AIs appear to learn ‚Äúbags of heuristics‚Äù: scores of disconnected rules of thumb that can approximate responses to specific scenarios, but don‚Äôt cohere into a consistent whole. (Some may actually contradict each other.) It‚Äôs a lot like the parable of the blind men and the elephant, where each man only touches one part of the animal at a time and fails to apprehend its full form. One man feels the trunk and assumes the entire elephant is snakelike; another touches a leg and guesses it‚Äôs more like a tree; a third grasps the elephant‚Äôs tail and says it‚Äôs a rope. When researchers attempt to recover evidence of a world model from within an LLM ‚Äî for example, a coherent computational representation of an Othello game board ‚Äî they‚Äôre looking for the whole elephant. What they find instead is a bit of snake here, a chunk of tree there, and some rope.&lt;/p&gt;
    &lt;p&gt;Of course, such heuristics are hardly worthless. LLMs can encode untold sackfuls of them within their trillions of parameters ‚Äî and as the old saw goes, quantity has a quality all its own. That‚Äôs what makes it possible to train a language model to generate nearly perfect directions between any two points in Manhattan without learning a coherent world model of the entire street network in the process, as researchers from Harvard University and the Massachusetts Institute of Technology recently discovered.&lt;/p&gt;
    &lt;p&gt;So if bits of snake, tree and rope can do the job, why bother with the elephant? In a word, robustness: When the researchers threw their Manhattan-navigating LLM a mild curveball by randomly blocking 1% of the streets, its performance cratered. If the AI had simply encoded a street map whose details were consistent ‚Äî instead of an immensely complicated, corner-by-corner patchwork of conflicting best guesses ‚Äî it could have easily rerouted around the obstructions.&lt;/p&gt;
    &lt;p&gt;Given the benefits that even simple world models can confer, it‚Äôs easy to understand why every large AI lab is desperate to develop them ‚Äî and why academic researchers are increasingly interested in scrutinizing them, too. Robust and verifiable world models could uncover, if not the El Dorado of AGI, then at least a scientifically plausible tool for extinguishing AI hallucinations, enabling reliable reasoning, and increasing the interpretability of AI systems.&lt;/p&gt;
    &lt;p&gt;That‚Äôs the ‚Äúwhat‚Äù and ‚Äúwhy‚Äù of world models. The ‚Äúhow,‚Äù though, is still anyone‚Äôs guess. Google DeepMind and OpenAI are betting that with enough ‚Äúmultimodal‚Äù training data ‚Äî like video, 3D simulations, and other input beyond mere text ‚Äî a world model will spontaneously congeal within a neural network‚Äôs statistical soup. Meta‚Äôs LeCun, meanwhile, thinks that an entirely new (and non-generative) AI architecture will provide the necessary scaffolding. In the quest to build these computational snow globes, no one has a crystal ball ‚Äî but the prize, for once, may just be worth the hype.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45105710</guid></item><item><title>We already live in social credit, we just don't call it that</title><link>https://www.thenexus.media/your-phone-already-has-social-credit-we-just-lie-about-it/</link><description>&lt;doc fingerprint="b51eea140ec083e1"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Your Phone Already Has Social Credit. We Just Lie About It.&lt;/head&gt;
    &lt;p&gt;Your credit score is social credit. Your LinkedIn endorsements are social credit. Your Uber passenger rating, Instagram engagement metrics, Amazon reviews, and Airbnb host status are all social credit systems that track you, score you, and reward you based on your behavior.&lt;/p&gt;
    &lt;p&gt;Social credit, in its original economic definition, means distributing industry profits to consumers to increase purchasing power. But the term has evolved far beyond economics. Today, it describes any kind of metric that tracks individual behavior, assigns scores based on that behavior, and uses those scores to determine access to services, opportunities, or social standing.&lt;/p&gt;
    &lt;p&gt;Sounds dystopian, doesn‚Äôt it? But guess what? Every time an algorithm evaluates your trustworthiness, reliability, or social value, whether for a loan, a job, a date, or a ride, you're participating in a social credit system. The scoring happens constantly, invisibly, and across dozens of platforms that weave into your daily life.&lt;/p&gt;
    &lt;p&gt;The only difference between your phone and China's social credit system is that China tells you what they're doing. We pretend our algorithmic reputation scores are just ‚Äúuser experience features.‚Äù At least Beijing admits they're gamifying human behavior.&lt;/p&gt;
    &lt;p&gt;When Americans think of the "Chinese social credit system," they likely picture Black Mirror episodes and Orwellian nightmares. Citizens are tracked for every jaywalking incident, points are deducted for buying too much alcohol, and facial recognition cameras are monitoring social gatherings; the image is so powerful that Utah's House passed a law banning social credit systems, despite none existing in America.&lt;/p&gt;
    &lt;p&gt;Here's what's actually happening. As of 2024, there's still no nationwide social credit score in China. Most private scoring systems have been shut down, and local government pilots have largely ended. It‚Äôs mainly a fragmented collection of regulatory compliance tools, mostly focused on financial behavior and business oversight. While well over 33 million businesses have been scored under corporate social credit systems, individual scoring remains limited to small pilot cities like Rongcheng. Even there, scoring systems have had "very limited impact" since they've never been elevated to provincial or national levels.&lt;/p&gt;
    &lt;p&gt;What actually gets tracked? Primarily court judgment defaults: people who refuse to pay fines or loans despite having the ability. The Supreme People's Court's blacklist is composed of citizens and companies that refuse to comply with court orders, typically to pay fines or repay loans. Some experimental programs in specific cities track broader social behavior, but these remain isolated experiments.&lt;/p&gt;
    &lt;p&gt;The gap between Western perception and Chinese reality is enormous, and it reveals something important: we're worried about a system that barely exists while ignoring the behavioral scoring systems we actually live with.&lt;/p&gt;
    &lt;p&gt;You already live in social credit.&lt;/p&gt;
    &lt;p&gt;Open your phone right now and count the apps that are scoring your behavior. Uber drivers rate you as a passenger. Instagram tracks your engagement patterns. Your bank is analyzing your Venmo transactions and Afterpay usage. LinkedIn measures your professional networking activity. Amazon evaluates your purchasing behavior. Each platform maintains detailed behavioral profiles that determine your access to services, opportunities, and social connections.&lt;/p&gt;
    &lt;p&gt;We just don't call it social credit.&lt;/p&gt;
    &lt;p&gt;Your credit score doesn't just determine loan eligibility; it affects where you can live, which jobs you can get, and how much you pay for car insurance. But traditional credit scoring is expanding rapidly. Some specialized lenders scan social media profiles as part of alternative credit assessments, particularly for borrowers with limited credit histories. Payment apps and financial services increasingly track spending patterns and transaction behaviors to build comprehensive risk profiles. The European Central Bank has asked some institutions to monitor social media chatter for early warnings of bank runs, though this is more about systemic risk than individual account decisions. Background check companies routinely analyze social media presence for character assessment. LinkedIn algorithmically manages your professional visibility based on engagement patterns, posting frequency, and network connections, rankings that recruiters increasingly rely on to filter candidates. Even dating has become a scoring system: apps use engagement rates and response patterns to determine who rises to the top of the queue and who gets buried.&lt;/p&gt;
    &lt;p&gt;What we have aren't unified social credit systems‚Ä¶yet. They're fragmented behavioral scoring networks that don't directly communicate. Your Uber rating doesn't affect your mortgage rate, and your LinkedIn engagement doesn't determine your insurance premiums. But the infrastructure is being built to connect these systems. We're building the technical and cultural foundations that could eventually create comprehensive social credit systems. The question isn't whether we have Chinese-style social credit now (because we don't). The question is whether we're building toward it without acknowledging what we're creating.&lt;/p&gt;
    &lt;p&gt;Where China's limited experiments have been explicit about scoring criteria, Western systems hide their decision-making processes entirely. Even China's fragmented approach offers more visibility into how behavioral data gets used than our black box algorithms do.&lt;/p&gt;
    &lt;p&gt;You may argue there's a fundamental difference between corporate tracking and government surveillance. Corporations compete; you can switch services. Governments have monopoly power and can restrict fundamental freedoms.&lt;/p&gt;
    &lt;p&gt;This misses three key points: First, switching costs for major platforms are enormous. Try leaving Google's ecosystem or abandoning your LinkedIn network. Second, corporate social credit systems increasingly collaborate. Bad Uber ratings can affect other services; poor credit scores impact everything from insurance to employment. Third, Western governments already access this corporate data through legal channels and data purchases.&lt;/p&gt;
    &lt;p&gt;Social credit systems are spreading globally because they solve coordination problems. They reduce fraud, encourage cooperation, and create behavioral incentives at scale. The question isn't whether Western societies will adopt social credit (because we're building toward it). The question is whether we'll be transparent and accountable about it or continue pretending our algorithmic reputation scores are just neutral technology.&lt;/p&gt;
    &lt;p&gt;Current trends suggest both systems are evolving toward more comprehensive behavioral scoring. European digital identity initiatives are linking multiple service scores. US cities are experimenting with behavioral incentive programs. Corporate platforms increasingly share reputation data. Financial services integrate social media analysis into lending decisions.&lt;/p&gt;
    &lt;p&gt;If both countries evolve toward comprehensive behavioral scoring, and current trends suggest they will, which approach better serves individual agencies? One that admits it's scoring you, or one that pretends algorithmic recommendations are just helpful suggestions?&lt;/p&gt;
    &lt;p&gt;When Uber can destroy your transportation access with a hidden algorithm, and when credit scores determine your housing options through opaque calculations, is that really more free than a system where you know at least some of the behaviors that affect your score?&lt;/p&gt;
    &lt;p&gt;So when China's explicit social credit approach inevitably influences Western platforms, when your apps start showing you the behavioral scores they've always been calculating, when the rules become visible instead of hidden, don't panic.&lt;/p&gt;
    &lt;p&gt;Because for the first time, you'll finally understand the game you've been playing all along. And knowing the rules means you can finally choose whether you want to play.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45106011</guid></item><item><title>&lt;template&gt;: The Content Template element</title><link>https://developer.mozilla.org/en-US/docs/Web/HTML/Reference/Elements/template</link><description>&lt;doc fingerprint="2a029f791cad1b64"&gt;
  &lt;main&gt;&lt;head rend="h1"&gt;&amp;lt;template&amp;gt;: The Content Template element&lt;/head&gt;&lt;head&gt; Baseline Widely available * &lt;/head&gt;&lt;p&gt;This feature is well established and works across many devices and browser versions. It√¢s been available across browsers since √¢¬®November 2015√¢¬©.&lt;/p&gt;&lt;p&gt;* Some parts of this feature may have varying levels of support.&lt;/p&gt;&lt;p&gt;The &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; HTML element serves as a mechanism for holding HTML fragments, which can either be used later via JavaScript or generated immediately into shadow DOM.&lt;/p&gt;&lt;head rend="h2"&gt;Attributes&lt;/head&gt;&lt;p&gt;This element includes the global attributes.&lt;/p&gt;&lt;list rend="dl"&gt;&lt;item rend="dt-1"&gt;&lt;code&gt;shadowrootmode&lt;/code&gt;&lt;/item&gt;&lt;item rend="dd-1"&gt;&lt;p&gt;Creates a shadow root for the parent element. It is a declarative version of the&lt;/p&gt;&lt;code&gt;Element.attachShadow()&lt;/code&gt;method and accepts the same enumerated values.&lt;list rend="dl"&gt;&lt;item rend="dt-2"&gt;&lt;code&gt;open&lt;/code&gt;&lt;/item&gt;&lt;item rend="dd-2"&gt;&lt;p&gt;Exposes the internal shadow root DOM for JavaScript (recommended for most use cases).&lt;/p&gt;&lt;/item&gt;&lt;item rend="dt-3"&gt;&lt;code&gt;closed&lt;/code&gt;&lt;/item&gt;&lt;item rend="dd-3"&gt;&lt;p&gt;Hides the internal shadow root DOM from JavaScript.&lt;/p&gt;&lt;/item&gt;&lt;/list&gt;&lt;p&gt;Note: The HTML parser creates a&lt;/p&gt;&lt;code&gt;ShadowRoot&lt;/code&gt;object in the DOM for the first&lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;in a node with this attribute set to an allowed value. If the attribute is not set, or not set to an allowed value √¢ or if a&lt;code&gt;ShadowRoot&lt;/code&gt;has already been declaratively created in the same parent √¢ then an&lt;code&gt;HTMLTemplateElement&lt;/code&gt;is constructed. A&lt;code&gt;HTMLTemplateElement&lt;/code&gt;cannot subsequently be changed into a shadow root after parsing, for example, by setting&lt;code&gt;HTMLTemplateElement.shadowRootMode&lt;/code&gt;.&lt;p&gt;Note: You may find the non-standard&lt;/p&gt;&lt;code&gt;shadowroot&lt;/code&gt;attribute in older tutorials and examples that used to be supported in Chrome 90-110. This attribute has since been removed and replaced by the standard&lt;code&gt;shadowrootmode&lt;/code&gt;attribute.&lt;/item&gt;&lt;item rend="dt-4"&gt;&lt;code&gt;shadowrootclonable&lt;/code&gt;&lt;/item&gt;&lt;item rend="dd-4"&gt;&lt;p&gt;Sets the value of the&lt;/p&gt;&lt;code&gt;clonable&lt;/code&gt;property of a&lt;code&gt;ShadowRoot&lt;/code&gt;created using this element to&lt;code&gt;true&lt;/code&gt;. If set, a clone of the shadow host (the parent element of this&lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt;) created with&lt;code&gt;Node.cloneNode()&lt;/code&gt;or&lt;code&gt;Document.importNode()&lt;/code&gt;will include a shadow root in the copy.&lt;/item&gt;&lt;item rend="dt-5"&gt;&lt;code&gt;shadowrootdelegatesfocus&lt;/code&gt;&lt;/item&gt;&lt;item rend="dd-5"&gt;&lt;p&gt;Sets the value of the&lt;/p&gt;&lt;code&gt;delegatesFocus&lt;/code&gt;property of a&lt;code&gt;ShadowRoot&lt;/code&gt;created using this element to&lt;code&gt;true&lt;/code&gt;. If this is set and a non-focusable element in the shadow tree is selected, then focus is delegated to the first focusable element in the tree. The value defaults to&lt;code&gt;false&lt;/code&gt;.&lt;/item&gt;&lt;item rend="dt-6"&gt;&lt;code&gt;shadowrootserializable&lt;/code&gt;Experimental&lt;/item&gt;&lt;item rend="dd-6"&gt;&lt;p&gt;Sets the value of the&lt;/p&gt;&lt;code&gt;serializable&lt;/code&gt;property of a&lt;code&gt;ShadowRoot&lt;/code&gt;created using this element to&lt;code&gt;true&lt;/code&gt;. If set, the shadow root may be serialized by calling the&lt;code&gt;Element.getHTML()&lt;/code&gt;or&lt;code&gt;ShadowRoot.getHTML()&lt;/code&gt;methods with the&lt;code&gt;options.serializableShadowRoots&lt;/code&gt;parameter set&lt;code&gt;true&lt;/code&gt;. The value defaults to&lt;code&gt;false&lt;/code&gt;.&lt;/item&gt;&lt;/list&gt;&lt;head rend="h2"&gt;Usage notes&lt;/head&gt;&lt;p&gt;This element has no permitted content, because everything nested inside it in the HTML source does not actually become the children of the &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; element. The &lt;code&gt;Node.childNodes&lt;/code&gt; property of the &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; element is always empty, and you can only access said nested content via the special &lt;code&gt;content&lt;/code&gt; property. However, if you call &lt;code&gt;Node.appendChild()&lt;/code&gt; or similar methods on the &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; element, then you would be inserting children into the &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; element itself, which is a violation of its content model and does not actually update the &lt;code&gt;DocumentFragment&lt;/code&gt; returned by the &lt;code&gt;content&lt;/code&gt; property.&lt;/p&gt;&lt;p&gt;Due to the way the &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; element is parsed, all &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;head&amp;gt;&lt;/code&gt;, and &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; opening and closing tags inside the template are syntax errors and are ignored by the parser, so &lt;code&gt;&amp;lt;template&amp;gt;&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Test&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;&amp;lt;/template&amp;gt;&lt;/code&gt; is the same as &lt;code&gt;&amp;lt;template&amp;gt;&amp;lt;title&amp;gt;Test&amp;lt;/title&amp;gt;&amp;lt;/template&amp;gt;&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;There are two main ways to use the &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; element.&lt;/p&gt;&lt;head rend="h3"&gt;Template document fragment&lt;/head&gt;&lt;p&gt;By default, the element's content is not rendered. The corresponding &lt;code&gt;HTMLTemplateElement&lt;/code&gt; interface includes a standard &lt;code&gt;content&lt;/code&gt; property (without an equivalent content/markup attribute). This &lt;code&gt;content&lt;/code&gt; property is read-only and holds a &lt;code&gt;DocumentFragment&lt;/code&gt; that contains the DOM subtree represented by the template.
This fragment can be cloned via the &lt;code&gt;cloneNode&lt;/code&gt; method and inserted into the DOM.&lt;/p&gt;&lt;p&gt;Be careful when using the &lt;code&gt;content&lt;/code&gt; property because the returned &lt;code&gt;DocumentFragment&lt;/code&gt; can exhibit unexpected behavior.
For more details, see the Avoiding DocumentFragment pitfalls section below.&lt;/p&gt;&lt;head rend="h3"&gt;Declarative Shadow DOM&lt;/head&gt;&lt;p&gt;If the &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; element contains the &lt;code&gt;shadowrootmode&lt;/code&gt; attribute with a value of either &lt;code&gt;open&lt;/code&gt; or &lt;code&gt;closed&lt;/code&gt;, the HTML parser will immediately generate a shadow DOM. The element is replaced in the DOM by its content wrapped in a &lt;code&gt;ShadowRoot&lt;/code&gt;, which is attached to the parent element.
This is the declarative equivalent of calling &lt;code&gt;Element.attachShadow()&lt;/code&gt; to attach a shadow root to an element.&lt;/p&gt;&lt;p&gt;If the element has any other value for &lt;code&gt;shadowrootmode&lt;/code&gt;, or does not have the &lt;code&gt;shadowrootmode&lt;/code&gt; attribute, the parser generates a &lt;code&gt;HTMLTemplateElement&lt;/code&gt;.
Similarly, if there are multiple declarative shadow roots, only the first one is replaced by a &lt;code&gt;ShadowRoot&lt;/code&gt; √¢ subsequent instances are parsed as &lt;code&gt;HTMLTemplateElement&lt;/code&gt; objects.&lt;/p&gt;&lt;head rend="h2"&gt;Examples&lt;/head&gt;&amp;gt;&lt;head rend="h3"&gt;Generating table rows&lt;/head&gt;&lt;p&gt;First we start with the HTML portion of the example.&lt;/p&gt;&lt;code&gt;&amp;lt;table id="producttable"&amp;gt;
  &amp;lt;thead&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;UPC_Code&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;Product_Name&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
  &amp;lt;/thead&amp;gt;
  &amp;lt;tbody&amp;gt;
    &amp;lt;!-- existing data could optionally be included here --&amp;gt;
  &amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;

&amp;lt;template id="productrow"&amp;gt;
  &amp;lt;tr&amp;gt;
    &amp;lt;td class="record"&amp;gt;&amp;lt;/td&amp;gt;
    &amp;lt;td&amp;gt;&amp;lt;/td&amp;gt;
  &amp;lt;/tr&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;p&gt;First, we have a table into which we will later insert content using JavaScript code. Then comes the template, which describes the structure of an HTML fragment representing a single table row.&lt;/p&gt;&lt;p&gt;Now that the table has been created and the template defined, we use JavaScript to insert rows into the table, with each row being constructed using the template as its basis.&lt;/p&gt;&lt;code&gt;// Test to see if the browser supports the HTML template element by checking
// for the presence of the template element's content attribute.
if ("content" in document.createElement("template")) {
  // Instantiate the table with the existing HTML tbody
  // and the row with the template
  const tbody = document.querySelector("tbody");
  const template = document.querySelector("#productrow");

  // Clone the new row and insert it into the table
  const clone = template.content.cloneNode(true);
  let td = clone.querySelectorAll("td");
  td[0].textContent = "1235646565";
  td[1].textContent = "Stuff";

  tbody.appendChild(clone);

  // Clone the new row and insert it into the table
  const clone2 = template.content.cloneNode(true);
  td = clone2.querySelectorAll("td");
  td[0].textContent = "0384928528";
  td[1].textContent = "Acme Kidney Beans 2";

  tbody.appendChild(clone2);
} else {
  // Find another way to add the rows to the table because
  // the HTML template element is not supported.
}
&lt;/code&gt;&lt;p&gt;The result is the original HTML table, with two new rows appended to it via JavaScript:&lt;/p&gt;&lt;head rend="h3"&gt;Implementing a declarative shadow DOM&lt;/head&gt;&lt;p&gt;In this example, a hidden support warning is included at the beginning of the markup. This warning is later set to be displayed via JavaScript if the browser doesn't support the &lt;code&gt;shadowrootmode&lt;/code&gt; attribute. Next, there are two &lt;code&gt;&amp;lt;article&amp;gt;&lt;/code&gt; elements, each containing nested &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; elements with different behaviors. The first &lt;code&gt;&amp;lt;style&amp;gt;&lt;/code&gt; element is global to the whole document. The second one is scoped to the shadow root generated in place of the &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; element because of the presence of the &lt;code&gt;shadowrootmode&lt;/code&gt; attribute.&lt;/p&gt;&lt;code&gt;&amp;lt;p hidden&amp;gt;
  √¢ Your browser doesn't support &amp;lt;code&amp;gt;shadowrootmode&amp;lt;/code&amp;gt; attribute yet.
&amp;lt;/p&amp;gt;
&amp;lt;article&amp;gt;
  &amp;lt;style&amp;gt;
    p {
      padding: 8px;
      background-color: wheat;
    }
  &amp;lt;/style&amp;gt;
  &amp;lt;p&amp;gt;I'm in the DOM.&amp;lt;/p&amp;gt;
&amp;lt;/article&amp;gt;
&amp;lt;article&amp;gt;
  &amp;lt;template shadowrootmode="open"&amp;gt;
    &amp;lt;style&amp;gt;
      p {
        padding: 8px;
        background-color: plum;
      }
    &amp;lt;/style&amp;gt;
    &amp;lt;p&amp;gt;I'm in the shadow DOM.&amp;lt;/p&amp;gt;
  &amp;lt;/template&amp;gt;
&amp;lt;/article&amp;gt;
&lt;/code&gt;&lt;code&gt;const isShadowRootModeSupported = Object.hasOwn(
  HTMLTemplateElement.prototype,
  "shadowRootMode",
);

document
  .querySelector("p[hidden]")
  .toggleAttribute("hidden", isShadowRootModeSupported);
&lt;/code&gt;&lt;head rend="h3"&gt;Declarative Shadow DOM with delegated focus&lt;/head&gt;&lt;p&gt;This example demonstrates how &lt;code&gt;shadowrootdelegatesfocus&lt;/code&gt; is applied to a shadow root that is created declaratively, and the effect this has on focus.&lt;/p&gt;&lt;p&gt;The code first declares a shadow root inside a &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element, using the &lt;code&gt;&amp;lt;template&amp;gt;&lt;/code&gt; element with the &lt;code&gt;shadowrootmode&lt;/code&gt; attribute.
This displays both a non-focusable &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; containing text and a focusable &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element.
It also uses CSS to style elements with &lt;code&gt;:focus&lt;/code&gt; to blue, and to set the normal styling of the host element.&lt;/p&gt;&lt;code&gt;&amp;lt;div&amp;gt;
  &amp;lt;template shadowrootmode="open"&amp;gt;
    &amp;lt;style&amp;gt;
      :host {
        display: block;
        border: 1px dotted black;
        padding: 10px;
        margin: 10px;
      }
      :focus {
        outline: 2px solid blue;
      }
    &amp;lt;/style&amp;gt;
    &amp;lt;div&amp;gt;Clickable Shadow DOM text&amp;lt;/div&amp;gt;
    &amp;lt;input type="text" placeholder="Input inside Shadow DOM" /&amp;gt;
  &amp;lt;/template&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;p&gt;The second code block is identical except that it sets the &lt;code&gt;shadowrootdelegatesfocus&lt;/code&gt; attribute, which delegates focus to the first focusable element in the tree if a non-focusable element in the tree is selected.&lt;/p&gt;&lt;code&gt;&amp;lt;div&amp;gt;
  &amp;lt;template shadowrootmode="open" shadowrootdelegatesfocus&amp;gt;
    &amp;lt;style&amp;gt;
      :host {
        display: block;
        border: 1px dotted black;
        padding: 10px;
        margin: 10px;
      }
      :focus {
        outline: 2px solid blue;
      }
    &amp;lt;/style&amp;gt;
    &amp;lt;div&amp;gt;Clickable Shadow DOM text&amp;lt;/div&amp;gt;
    &amp;lt;input type="text" placeholder="Input inside Shadow DOM" /&amp;gt;
  &amp;lt;/template&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;p&gt;Last of all we use the following CSS to apply a red border to the parent &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element when it has focus.&lt;/p&gt;&lt;code&gt;div:focus {
  border: 2px solid red;
}
&lt;/code&gt;&lt;p&gt;The results are shown below. When the HTML is first rendered, the elements have no styling, as shown in the first image. For the shadow root that does not have &lt;code&gt;shadowrootdelegatesfocus&lt;/code&gt; set you can click anywhere except the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; and the focus does not change (if you select the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element it will look like the second image).&lt;/p&gt;&lt;p&gt;For the shadow root with &lt;code&gt;shadowrootdelegatesfocus&lt;/code&gt; set, clicking on the text (which is non-focusable) selects the &lt;code&gt;&amp;lt;input&amp;gt;&lt;/code&gt; element, as this is the first focusable element in the tree.
This also focuses the parent element as shown below.&lt;/p&gt;&lt;head rend="h2"&gt;Avoiding DocumentFragment pitfalls&lt;/head&gt;&lt;p&gt;When a &lt;code&gt;DocumentFragment&lt;/code&gt; value is passed, &lt;code&gt;Node.appendChild&lt;/code&gt; and similar methods move only the child nodes of that value into the target node. Therefore, it is usually preferable to attach event handlers to the children of a &lt;code&gt;DocumentFragment&lt;/code&gt;, rather than to the &lt;code&gt;DocumentFragment&lt;/code&gt; itself.&lt;/p&gt;&lt;p&gt;Consider the following HTML and JavaScript:&lt;/p&gt;&lt;head rend="h3"&gt;HTML&lt;/head&gt;&lt;code&gt;&amp;lt;div id="container"&amp;gt;&amp;lt;/div&amp;gt;

&amp;lt;template id="template"&amp;gt;
  &amp;lt;div&amp;gt;Click me&amp;lt;/div&amp;gt;
&amp;lt;/template&amp;gt;
&lt;/code&gt;&lt;head rend="h3"&gt;JavaScript&lt;/head&gt;&lt;code&gt;const container = document.getElementById("container");
const template = document.getElementById("template");

function clickHandler(event) {
  event.target.append(" √¢ Clicked this div");
}

const firstClone = template.content.cloneNode(true);
firstClone.addEventListener("click", clickHandler);
container.appendChild(firstClone);

const secondClone = template.content.cloneNode(true);
secondClone.children[0].addEventListener("click", clickHandler);
container.appendChild(secondClone);
&lt;/code&gt;&lt;head rend="h3"&gt;Result&lt;/head&gt;&lt;p&gt;Since &lt;code&gt;firstClone&lt;/code&gt; is a &lt;code&gt;DocumentFragment&lt;/code&gt;, only its children are added to &lt;code&gt;container&lt;/code&gt; when &lt;code&gt;appendChild&lt;/code&gt; is called; the event handlers of &lt;code&gt;firstClone&lt;/code&gt; are not copied. In contrast, because an event handler is added to the first child node of &lt;code&gt;secondClone&lt;/code&gt;, the event handler is copied when &lt;code&gt;appendChild&lt;/code&gt; is called, and clicking on it works as one would expect.&lt;/p&gt;&lt;head rend="h2"&gt;Technical summary&lt;/head&gt;&lt;table&gt;&lt;row span="2"&gt;&lt;cell role="head"&gt;Content categories&lt;/cell&gt;&lt;cell&gt;Metadata content, flow content, phrasing content, script-supporting element&lt;/cell&gt;&lt;/row&gt;&lt;row span="2"&gt;&lt;cell&gt;Permitted content&lt;/cell&gt;&lt;cell&gt;Nothing (see Usage notes)&lt;/cell&gt;&lt;/row&gt;&lt;row span="2"&gt;&lt;cell&gt;Tag omission&lt;/cell&gt;&lt;cell&gt;None, both the starting and ending tag are mandatory.&lt;/cell&gt;&lt;/row&gt;&lt;row span="2"&gt;&lt;cell&gt;Permitted parents&lt;/cell&gt;&lt;cell&gt; Any element that accepts metadata content, phrasing content, or script-supporting elements. Also allowed as a child of a &lt;code&gt;&amp;lt;colgroup&amp;gt;&lt;/code&gt;
        element that does not have a
        &lt;code&gt;span&lt;/code&gt; attribute.
      &lt;/cell&gt;&lt;/row&gt;&lt;row span="2"&gt;&lt;cell&gt;Implicit ARIA role&lt;/cell&gt;&lt;cell&gt;No corresponding role&lt;/cell&gt;&lt;/row&gt;&lt;row span="2"&gt;&lt;cell&gt;Permitted ARIA roles&lt;/cell&gt;&lt;cell&gt;No &lt;code&gt;role&lt;/code&gt; permitted&lt;/cell&gt;&lt;/row&gt;&lt;row&gt;&lt;cell&gt;DOM interface&lt;/cell&gt;&lt;cell&gt;&lt;code&gt;HTMLTemplateElement&lt;/code&gt;&lt;/cell&gt;&lt;/row&gt;&lt;/table&gt;&lt;head rend="h2"&gt;Specifications&lt;/head&gt;&lt;table&gt;&lt;row&gt;&lt;cell role="head"&gt;Specification&lt;/cell&gt;&lt;/row&gt;&lt;row&gt;&lt;cell&gt;HTML&amp;gt;&lt;p&gt;# the-template-element&amp;gt;&lt;/p&gt;&lt;/cell&gt;&lt;/row&gt;&lt;/table&gt;&lt;head rend="h2"&gt;Browser compatibility&lt;/head&gt;&lt;p&gt;Loading√¢¬¶&lt;/p&gt;&lt;head rend="h2"&gt;See also&lt;/head&gt;&lt;list rend="ul"&gt;&lt;item&gt;&lt;code&gt;part&lt;/code&gt;and&lt;code&gt;exportparts&lt;/code&gt;HTML attributes&lt;/item&gt;&lt;item&gt;&lt;code&gt;&amp;lt;slot&amp;gt;&lt;/code&gt;HTML element&lt;/item&gt;&lt;item&gt;&lt;code&gt;:has-slotted&lt;/code&gt;,&lt;code&gt;:host&lt;/code&gt;,&lt;code&gt;:host()&lt;/code&gt;, and&lt;code&gt;:host-context()&lt;/code&gt;CSS pseudo-classes&lt;/item&gt;&lt;item&gt;&lt;code&gt;::part&lt;/code&gt;and&lt;code&gt;::slotted&lt;/code&gt;CSS pseudo-elements&lt;/item&gt;&lt;item&gt;&lt;code&gt;ShadowRoot&lt;/code&gt;interface&lt;/item&gt;&lt;item&gt;Using templates and slots&lt;/item&gt;&lt;item&gt;CSS scoping module&lt;/item&gt;&lt;item&gt;Declarative Shadow DOM (with html) in Using Shadow DOM&lt;/item&gt;&lt;item&gt;Declarative shadow DOM on web.dev (2023)&lt;/item&gt;&lt;/list&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45106049</guid></item><item><title>The repercussions of a typo in C++ &amp; Rust</title><link>https://www.nablag.com/rust_cpp_missing_ampersand</link><description>&lt;doc fingerprint="2e2dd37baacf19d0"&gt;
  &lt;main&gt;&lt;head rend="h1"&gt;The repercussions of missing an Ampersand in C++ &amp;amp; Rust&lt;/head&gt;Copying vs Passing by reference 30 Aug 2025&lt;head rend="h1"&gt;TL;DR&lt;/head&gt;&lt;p&gt;There‚Äôs a funny typo that causes someone to copy data instead of ‚Äúreferencing‚Äù in C++. Rust is nice because it provides defaults that protect you from some of these ‚Äúdumb‚Äù mistakes1. In this example, I‚Äôll go over how the ‚Äúmove by default‚Äù can prevent us from introducing this subtle behavior.&lt;/p&gt;&lt;head rend="h1"&gt;Motivation&lt;/head&gt;&lt;p&gt;I originally hesitated to write this because I thought the topic was too ‚Äúobvious‚Äù, but I did it anyways after watching this presentation discussing migrating from C++14 to C++20. I was specifically inspired by a performance bug due to a typo. This mistake is the ‚Äúvalue param‚Äù vs ‚Äúreference param‚Äù where your function copies a value instead of passing it by reference because an ampersand (&lt;code&gt;&amp;amp;&lt;/code&gt;) was missing‚Ä¶ Here‚Äôs a minimum version of the difference below:&lt;/p&gt;&lt;code&gt;// You're the mythical 100x developer
void BusinessLogic(const Data&amp;amp; d) {
  // ...
}

// You're trash that deserves to be replace by AI
void BusinessLogicThatCopies(const Data d) {
  // ...
}
&lt;/code&gt;&lt;p&gt;This simple typo is easy to miss and the penalty won‚Äôt matter for people who aren‚Äôt performance sensitive (although if you aren‚Äôt strongly affected by stuff like this you probably don‚Äôt need to be using C++). One could argue that this example is a one-off and no competent C++ developer would make this mistake, but I‚Äôve even seen it in Google codebases (interpret that as you well). There are plenty of linters and tools to detect issues like this (ex: clang-tidy can scan for unnecessary value params), but evidently these issues go unnoticed until a customer complains about it or someone actually bothers to profile the code. The fact that we have to be vigilant about such a minor behavior is exhausting, and that maybe we should design our language to guide us to sensible defaults.&lt;/p&gt;&lt;head rend="h1"&gt;Rust Defaults&lt;/head&gt;&lt;p&gt;I like Rust because it provides a handful of C++ patterns by default2. Compared to the Rust hype marketing this benefit is quite small compared to ‚Äúmemory safety‚Äù and ‚Äúfearless concurrency‚Äù, but I like the improved ergonomics nonetheless. Adopting performance oriented defaults removes a lot of the weird ‚Äúgotchas‚Äù early on in the C++ learning curve, as well as the toil about having the proper tooling setup. For brevity, I‚Äôll just focus on the concept of C++ ownership (&lt;code&gt;std::move&lt;/code&gt;) and reference parameters to keep things short.&lt;/p&gt;&lt;list rend="ol"&gt;&lt;item&gt;By default ‚Äúpass by value‚Äù in rust moves objects (unless the object implements the &lt;code&gt;Copy&lt;/code&gt;trait) instead of copying them&lt;/item&gt;&lt;/list&gt;&lt;p&gt;Rust‚Äôs ‚Äúpass by value‚Äù behavior differs from C++‚Äôs behavior where it copies the object. This has some subtle implications and its hard to grasp why this is nice without visualizing the C++ code. So let‚Äôs start with the toy example we started at the beginning. In the below C++ snippet, passing our expensive-to-copy struct ‚Äúby value‚Äù will result in the struct being copied:&lt;/p&gt;&lt;code&gt;void BusinessLogic(const Data d) {
  d.DoThing();
}

Data expensive_to_copy = Data{...};
BusinessLogic(expensive_to_copy);
&lt;/code&gt;&lt;p&gt;Copying is desirable for types that are more performant to copy (like int, bool, floats, etc), but for larger objects/heap allocated objects, it will slow down our code. If you‚Äôre trying to execute based on the contents of the object, an improvement might ‚Äúpass by reference‚Äù like so:&lt;/p&gt;&lt;code&gt;// note the `const` + `&amp;amp;`
void BusinessLogic(const Data&amp;amp; d) {
  d.DoThing();
}

Data expensive_to_copy = Data{...};
BusinessLogic(expensive_to_copy);
&lt;/code&gt;&lt;p&gt;Again, if we repeat that typo from the beginning (&lt;code&gt;const Data d&lt;/code&gt;), only the linter will point out our mistake.&lt;/p&gt;&lt;p&gt;There are some cases where you want your function to ‚Äútake ownership‚Äù of the parameter you‚Äôre passing to it, so you might employ a ‚Äúmove‚Äù using something like this:&lt;/p&gt;&lt;code&gt;std::unique_ptr&amp;lt;Owner&amp;gt; CreateOwner(Data &amp;amp;&amp;amp;d) {
	// ...
	return std::make_unique&amp;lt;Owner&amp;gt;(s);
}

Data expensive_to_copy = Data{...};
auto data_owner = FactoryFunction(std::move(expensive_to_copy));
&lt;/code&gt;&lt;p&gt;However, moving in this context adds extra restrictions to the original object. After an object that have been ‚Äúmoved from‚Äù, that you‚Äôre not supposed to use the original object after it‚Äôs been moved or else you‚Äôve introducing potential bugs. For example, even though the below compiles, the snippet is bad and linters will complain about it.&lt;/p&gt;&lt;code&gt;Data expensive_to_copy = Data{...};
auto data_owner = FactoryFunction(expensive_to_copy);
expensive_to_copy.DoThing();  // Linter will complain about using expensive_to_copy after it has been moved from.
// The compiler won't say anything. The maintainer needs to watch out for accidental uses
&lt;/code&gt;&lt;p&gt;With Rust executing a function for either case deploys the ‚Äúoptimal‚Äù version (reference or move) by default, moreover, the compiler (not the linter) will point out the any improper ‚Äúuse after moves‚Äù.&lt;/p&gt;&lt;code&gt;struct Data {
  // Vec cannot implement "Copy" type
  data: Vec&amp;lt;i32&amp;gt;,
}

// Equivalent to "passing by const-ref" in C++
fn BusinessLogic(d :&amp;amp;Data) {
  d.DoThing();
}

// Equivalent to "move" in C++
fn FactoryFunction(d: Data) -&amp;gt; Owner {
  owner = Owner{data: d};
  // ...
  return owner
}
&lt;/code&gt;&lt;p&gt;Rust prevents us from accidentally writing sub-optimal versions of the C++ function (&lt;code&gt;BusinessLogic(const Data d)&lt;/code&gt;)‚Ä¶ with the caveat that this choice propagates throughout the language, which can be unintuitive or confusing.&lt;/p&gt;&lt;head rend="h1"&gt;Revisiting the bug with Rust&lt;/head&gt;&lt;p&gt;Now that we have established context with the fake example, let‚Äôs try to see how rust could‚Äôve prevented the presentation‚Äôs problem in a practical instance.&lt;/p&gt;&lt;head rend="h2"&gt;#1 &lt;code&gt;vec::retain&lt;/code&gt;&lt;/head&gt;&lt;p&gt;The rust library function for removing elements of a vector (&lt;code&gt;vec::retain&lt;/code&gt;) doesn‚Äôt give us an option to use a closure that copies by value. Even if we wanted to make a lambda that copies the elements of our vector, the compiler notices the type mismatch and rejects it.&lt;/p&gt;&lt;p&gt;If we were to take the approximation of the C++ code in the presentation (below)&lt;/p&gt;&lt;code&gt;std::vector&amp;lt;Request&amp;gt; LoadRequests;

void OnComplete(int id) {
  // If you're confused why it removes elements from the vector like this, it's
  // used as a part of the "erase-remove" pattern. The context in the video is that
  // they were using C++14, so they couldn't use the C++20 std::erase_if
  const auto DeleteRange = std::ranges::remove_if(LoadRequests, [](const Request r){
     return r.id == id;
  });
  LoadRequests.erase(DeleteRange.begin(), DeleteRange.end());
}
&lt;/code&gt;&lt;p&gt;and convert it to the idiomatic rust expression (below), and try to pass in a closure that has a typo (&lt;code&gt;Request&lt;/code&gt; instead of &lt;code&gt;&amp;amp;Request&lt;/code&gt;), the compiler will throw an error saying ‚Äútype mismatch in closure arguments‚Äù.&lt;/p&gt;&lt;code&gt;let mut LoadRequests : Vec&amp;lt;Request&amp;gt; = ...

fn OnCompleteDefault(id: i32, load_requests: &amp;amp;mut Vec&amp;lt;Request&amp;gt;) {
  load_requests.retain(|r: Request| r.id != id); // Throws a compiler error
} 
&lt;/code&gt;&lt;p&gt;This is technically an example of a type system preventing us from making dumb mistakes rather than ‚Äúmoving by default‚Äù preventing these mistakes. Since ‚Äúpass by value‚Äù is a move by default, the type system is able to come in and recognize the error.&lt;/p&gt;&lt;p&gt;One could also argue that were comparing a C++14 pattern to a newer standard library, isn‚Äôt a fair comparison. So in order to convince the audience, I‚Äôll try to write an unidiomatic, suboptimal expression to see how far Rust can stop us from doing something dumb.&lt;/p&gt;&lt;head rend="h2"&gt;#2 Weird Hypothetical Implementations&lt;/head&gt;&lt;p&gt;Suppose we hate using methods like &lt;code&gt;vec::retain&lt;/code&gt; because you‚Äôre trying to prove a point to strangers on the internet, let‚Äôs try coding up a reasonable implementation. Let‚Äôs start with the original ‚Äúcorrect‚Äù version of the code, and add in random &lt;code&gt;&amp;amp;&lt;/code&gt; typos to see what the compiler does. The ‚Äúcorrect‚Äù version:&lt;/p&gt;&lt;code&gt;fn OnCompleteWeird(id: i32, LoadRequests: Vec&amp;lt;Request&amp;gt;) -&amp;gt; Vec&amp;lt;Request&amp;gt;{
  let mut filtered: Vec&amp;lt;Request&amp;gt; = Vec::new();
  for lr in LoadRequests.into_iter() {
    if lr.id == id {
        filtered.push(lr);
    }
  }
  filtered
}
&lt;/code&gt;&lt;p&gt;Let‚Äôs try making the parameter from the existing move (&lt;code&gt;Vec&amp;lt;Request&amp;gt;&lt;/code&gt;) to borrow (&lt;code&gt;&amp;amp;Vec&amp;lt;Request&amp;gt;&lt;/code&gt;). Trying to compile this variation results in an error because the &lt;code&gt;filtered.push&lt;/code&gt; expects another move, but instead it got a reference (&lt;code&gt;expected Request, found &amp;amp;Request&lt;/code&gt;). We can try following the compiler‚Äôs recommendation to explicitly copy the element by using &lt;code&gt;.Clone()&lt;/code&gt;, but that copy doesn‚Äôt happen by accident (unless someone was blindly following what the compiler suggested to do).&lt;/p&gt;&lt;p&gt;Trying to compile the below fails because &lt;code&gt;iter()&lt;/code&gt; will return references to the &lt;code&gt;Request&lt;/code&gt; data, and we cannot convert this into a copy unless we explicitly &lt;code&gt;.Clone()&lt;/code&gt; the underlying data. Again, I can‚Äôt imagine a scenario where someone would do this when there are existing library functions that do this more efficiently‚Ä¶ but it‚Äôs nice to know that it‚Äôs still hard to make the mistake.&lt;/p&gt;&lt;head rend="h2"&gt;C++ can do this too&lt;/head&gt;&lt;p&gt;In C++‚Äôs Defense, C++ offers several ways to prevent copying, support automatically moving objects, etc. Things like delete copy constructors + assignors, make copy constructors explicit/move constructors implicit, leverage copy elision, etc. However, these methods can be annoying to use because you need to worry about rules like ‚Äúrules of 3/5/0‚Äù and might be restricted to a specific version of C++.&lt;/p&gt;&lt;p&gt;In fact, a rust struct that doesn‚Äôt derive/implement the &lt;code&gt;Copy&lt;/code&gt; trait is similar to a C++ struct that makes its copy constructor explicit. Similarly, a rust struct that doesn‚Äôt derive/implement the &lt;code&gt;Clone&lt;/code&gt; trait is similar to a C++ struct that deleted its copy/copy assignment constructor. In a way, exclusion of these traits is another protective default.&lt;/p&gt;&lt;head rend="h1"&gt;Conclusion&lt;/head&gt;&lt;p&gt;As a disclaimer, I‚Äôm not a fan of several aspects of Rust, but I do think some of its language defaults that are good for performant programs. More importantly, these defaults reduce the mental burden of double checking minor C++ traps, and lets me trust the compiler to do this for me.&lt;/p&gt;&lt;head rend="h1"&gt;Appendix&lt;/head&gt;&lt;head rend="h2"&gt;Pass by value, reference, pointer&lt;/head&gt;&lt;p&gt;This abseil source can probably explain this better than I can: abseil.io/tips/234&lt;/p&gt;&lt;head rend="h2"&gt;Copy/Clone/Drop Traits&lt;/head&gt;&lt;list rend="ul"&gt;&lt;item&gt;https://doc.rust-lang.org/std/marker/trait.Copy.html&lt;/item&gt;&lt;item&gt;https://doc.rust-lang.org/std/clone/trait.Clone.html&lt;/item&gt;&lt;/list&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45106132</guid></item><item><title>Python has had async for 10 years ‚Äì why isn't it more popular?</title><link>https://tonybaloney.github.io/posts/why-isnt-python-async-more-popular.html</link><description>&lt;doc fingerprint="363096d5e4a0b040"&gt;
  &lt;main&gt;&lt;p&gt;The Python Documentary dropped this morning. In the middle of the documentary, there‚Äôs a dramatic segment about how the transition from Python 2 to 3 divided the community (spoiler alert: it didn‚Äôt in the end).&lt;/p&gt;&lt;p&gt;The early versions of Python 3 (3.0-3.4) were mostly focused on stability and offering pathways for users moving from 2.7. Along came 3.5 in 2015 with a new feature: &lt;code&gt;async&lt;/code&gt; and &lt;code&gt;await&lt;/code&gt; keywords for executing coroutines.&lt;/p&gt;&lt;p&gt;Ten years and nine releases later, Python 3.14 is weeks away.&lt;/p&gt;&lt;p&gt;Whilst everyone will be distracted by the shiny, colorful REPL features in 3.14, there are some big announcements nestled in the release notes ‚Äî both related to concurrency and parallelism&lt;/p&gt;&lt;p&gt;Both of these features are huge advancements in how Python can be used to execute concurrent code. But if &lt;code&gt;async&lt;/code&gt; has been here for 10 years, why do we need them?&lt;/p&gt;&lt;p&gt;The killer use-case for async is web development. Coroutines lend well to out-of-process network calls, like HTTP requests and database queries. Why block the entire Python interpreter waiting for a SQL query to run on another server?&lt;/p&gt;&lt;p&gt;Yet, among the three most popular Python web frameworks, async support is still not universal. FastAPI is async from the ground-up, Django has some support, but is ‚Äústill working on async support‚Äù in key areas like the ORM (database). Then Flask is and probably always will be synchronous (Quart is an async alternative with similar APIs). The most popular ORM for Python, SQLAlchemy, only added asyncio support in 2023 (changelog).&lt;/p&gt;&lt;p&gt;I posed the question ‚ÄúWhy isn‚Äôt async more popular‚Äù to a couple of other developers to get their thoughts.&lt;/p&gt;&lt;p&gt;Christopher Trudeau, co-host of the Real Python Podcast, shared his perspective:&lt;/p&gt;&lt;quote&gt;&lt;p&gt;Certain kinds of errors get caught by the compiler, others just disappear. Why didn‚Äôt that function run? Oops, forgot to await it. Error in the coroutine? Did you remember to launch with the right params, if not, it doesn‚Äôt percolate up. I still find threads easier to wrap my head around.&lt;/p&gt;&lt;/quote&gt;&lt;p&gt;Michael Kennedy offered some additional insight:&lt;/p&gt;&lt;quote&gt;&lt;p&gt;The [GIL] is so omnipresent that most Python people never developed multithreaded/async thinking. Because async/await only works for I/O bound work, not CPU as well, it‚Äôs of much less use. E.g. You can use in on the web, but most servers fork out to 4-8 web workers anyway&lt;/p&gt;&lt;/quote&gt;&lt;p&gt;So what‚Äôs going on here and can we apply the lessons to Free-Threading and Multiple Interpreters in 3.14 so that in another ten years we‚Äôre looking back and wondering why they aren‚Äôt more popular?&lt;/p&gt;&lt;p&gt;Coroutines are most valuable with IO-related tasks. In Python, you can start hundreds of coroutines to make network requests, then wait for them all to finish without running them one at a time. The concepts behind coroutines are quite straightforward. You have a loop (the event loop) and you pass it coroutines to evaluate.&lt;/p&gt;&lt;p&gt;Let‚Äôs go back to the classic use-case, HTTP requests:&lt;/p&gt;&lt;code&gt;def get_thing_sync():
    return http_client.get('/thing/which_takes?ages=1')
&lt;/code&gt;&lt;p&gt;The equivalent async function is clean and readable:&lt;/p&gt;&lt;code&gt;async def get_thing_async():
    return await http_client.get('/thing/which_takes?ages=1')
&lt;/code&gt;&lt;p&gt;If you call function &lt;code&gt;get_thing_sync()&lt;/code&gt; versus &lt;code&gt;await get_thing_async()&lt;/code&gt;, they take the same amount of time. Calling it ‚Äú‚ú® asynchronously ‚ú®‚Äù does not somehow make it faster. The gains are when you have more than one coroutine running at once. &lt;/p&gt;&lt;p&gt;When fetching multiple HTTP resources you can start all the requests at once via the OS network stack, then handle each response as it arrives. The important point is that the actual work ‚Äî sending packets and waiting for remote servers ‚Äî happens outside your Python process while your code waits. Async is most effective here: you start operations, receive awaitable handles (tasks/futures), and the event loop efficiently notifies the coroutine when each operation completes without wasting CPU on busy‚Äëpolling.&lt;/p&gt;&lt;p&gt;This scenario works well because:&lt;/p&gt;&lt;p&gt;That‚Äôs all fine, but I started with the statement Coroutines are most valuable with IO-related tasks. I then picked the one task that asyncio can handle really well, HTTP requests.&lt;/p&gt;&lt;p&gt;What about disk IO? I have far more applications in Python which read and write from files on disks or memory than I do making HTTP requests. I also have Python programs which run other programs using &lt;code&gt;subprocess&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;Can I make all of those &lt;code&gt;async&lt;/code&gt;?  &lt;/p&gt;&lt;p&gt;No, not really. From the asyncio Wiki:&lt;/p&gt;&lt;quote&gt;&lt;p&gt;asyncio does not support asynchronous operations on the filesystem. Even if files are opened with O_NONBLOCK, read and write will block.&lt;/p&gt;&lt;/quote&gt;&lt;p&gt;The solution is to use a third-party package, &lt;code&gt;aiofiles&lt;/code&gt;, which gives you async file I/O capabilities:&lt;/p&gt;&lt;code&gt;async with aiofiles.open('filename', mode='r') as f:
    contents = await f.read()
&lt;/code&gt;&lt;p&gt;So, mission accomplished? No because &lt;code&gt;aiofiles&lt;/code&gt; uses a thread pool to offload the blocking file I/O operations. &lt;/p&gt;&lt;p&gt;Windows has an async file IO API called IoRing. Linux has this availability in newer Kernels via &lt;code&gt;io_uring&lt;/code&gt;. All I could find for a Python implementation of &lt;code&gt;io_uring&lt;/code&gt; is this synchronous API written in Cython.&lt;/p&gt;&lt;p&gt;There were io_uring APIs for other platforms, Rust has implementations with tokio, C++ has Asio and Node.JS has libuv.&lt;/p&gt;&lt;p&gt;So, the asyncio Wiki is a little out of date, but&lt;/p&gt;&lt;code&gt;io_uring&lt;/code&gt;&lt;code&gt;io_uring&lt;/code&gt; has been plagued by security issues so bad that RedHat, Google and others have restricted or removed its availability. After paying out $1 million in bug bounties related to &lt;code&gt;io_uring&lt;/code&gt;, Google disabled it on some products. The issue was severe; many of the related bug‚Äëbounty reports involved io_uring exploits.&lt;p&gt;So we should hold our horses a little while longer. Operating Systems have long held a file IO API that handles threads for concurrent IO. It does the job just fine for now.&lt;/p&gt;&lt;p&gt;So in summary, Coroutines are most valuable with IO-related tasks is only really true for network I/O and network sockets in Python were never blocking operations in the first place. Socket open in Python is one of the few operations which releases the GIL and works concurrently in a thread pool as a non-blocking operation.&lt;/p&gt;&lt;table&gt;&lt;row span="3"&gt;&lt;cell role="head"&gt;Operation&lt;/cell&gt;&lt;cell role="head"&gt;Asyncio API&lt;/cell&gt;&lt;cell role="head"&gt;Description&lt;/cell&gt;&lt;/row&gt;&lt;row span="3"&gt;&lt;cell&gt;Sleep&lt;/cell&gt;&lt;cell&gt;&lt;code&gt;asyncio.sleep()&lt;/code&gt;&lt;/cell&gt;&lt;cell&gt;Asynchronously sleep for a given duration.&lt;/cell&gt;&lt;/row&gt;&lt;row span="3"&gt;&lt;cell&gt;TCP/UDP Streams&lt;/cell&gt;&lt;cell&gt;&lt;code&gt;asyncio.open_connection()&lt;/code&gt;&lt;/cell&gt;&lt;cell&gt;Open a TCP/UDP connection.&lt;/cell&gt;&lt;/row&gt;&lt;row span="3"&gt;&lt;cell&gt;HTTP&lt;/cell&gt;&lt;cell&gt;&lt;code&gt;aiohttp.ClientSession()&lt;/code&gt;&lt;/cell&gt;&lt;cell&gt;Asynchronous HTTP client.&lt;/cell&gt;&lt;/row&gt;&lt;row span="3"&gt;&lt;cell&gt;Run Subprocesses&lt;/cell&gt;&lt;cell&gt;&lt;code&gt;asyncio.subprocess&lt;/code&gt;&lt;/cell&gt;&lt;cell&gt;Asynchronously run subprocesses.&lt;/cell&gt;&lt;/row&gt;&lt;row&gt;&lt;cell&gt;Queues&lt;/cell&gt;&lt;cell&gt;&lt;code&gt;asyncio.Queue&lt;/code&gt;&lt;/cell&gt;&lt;cell&gt;Asynchronous queue implementation.&lt;/cell&gt;&lt;/row&gt;&lt;/table&gt;&lt;p&gt;Will McGugan, the creator of Rich, Textualize, and several other extremely popular Python libraries offered his perspective on async:&lt;/p&gt;&lt;quote&gt;&lt;p&gt;I really enjoy async programming, but it isn‚Äôt intuitive for most devs that don‚Äôt have a background writing network code. A reoccurring problem I see with Textual is folk testing concurrency by dropping in a&lt;/p&gt;&lt;code&gt;time.sleep(10)&lt;/code&gt;call to simulate the work they are planning. Of course, that blocks the entire loop. But that‚Äôs a class of issue which is difficult to explain to devs who haven‚Äôt used async much. i.e. what does it mean for code to ‚Äúblock‚Äù, and when is it necessary to defer to threads. Without that grounding in the fundamentals, your async code is going to misbehave, but its not going to break per se. So devs don‚Äôt get the rapid iteration and feedback that we expect from Python.&lt;/quote&gt;&lt;p&gt;Now that we‚Äôve covered the limited use cases for async, another challenge keeps coming up. The Python GIL.&lt;/p&gt;&lt;p&gt;I‚Äôve been working on this C#/Python bridge project called CSnakes, one of the features that caused the most head-scratching was async.&lt;/p&gt;&lt;p&gt;C#, the language from which the &lt;code&gt;async&lt;/code&gt;/&lt;code&gt;await&lt;/code&gt; syntax was borrowed, has far broader async support in its core I/O libraries because it implements a Task‚Äëbased Asynchronous Pattern (TAP), where tasks are dispatched onto a managed thread pool. Disk, network, and memory I/O operations commonly provide both async and sync methods.&lt;/p&gt;&lt;p&gt;In fact, the C# implementation goes all the way up from the disk to the higher-level APIs, such as serialization libraries. JSON deserialization is async, so is XML.&lt;/p&gt;&lt;p&gt;The C# Async model and the Python Async models have some important differences:&lt;/p&gt;&lt;p&gt;The benefit of C#‚Äôs model is that a &lt;code&gt;Task&lt;/code&gt; is a higher-level abstraction over a thread or coroutine. This means that you don‚Äôt have to worry about the underlying thread management, you can schedule several tasks to be awaited concurrently or you can run them in parallel with Task Parallel Library (TPL).&lt;/p&gt;&lt;p&gt;In Python ‚ÄúAn event loop runs in a thread (typically the main thread) and executes all callbacks and Tasks in its thread. While a Task is running in the event loop, no other Tasks can run in the same thread. When a Task executes an await expression, the running Task gets suspended, and the event loop executes the next Task.‚Äù 1&lt;/p&gt;&lt;p&gt;Going back to Will‚Äôs comment ‚ÄúOf course, that blocks the entire loop‚Äù, he‚Äôs talking about operations inside async functions which are blocking and therefore block the entire event loop. Since we covered in Problem 1, that‚Äôs practically everything except network calls and sleeping.&lt;/p&gt;&lt;p&gt;With Python‚Äôs GIL, it doesn‚Äôt matter if you‚Äôre running 1 thread or 10, the GIL will lock everything so that only 1 is operating at a time.&lt;/p&gt;&lt;p&gt;There are some operations don‚Äôt block the GIL (e.g. File IO) and in those cases you can run them in threads. For example, if you used &lt;code&gt;httpx&lt;/code&gt;‚Äòs streaming feature to stream a large network download onto disk:&lt;/p&gt;&lt;code&gt;import httpx
import tempfile

def download_file(url: str):
    with tempfile.NamedTemporaryFile(delete=False) as tmp_file:
        with httpx.stream("GET", url) as response:
            for chunk in response.iter_bytes():
                tmp_file.write(chunk)
    return tmp_file.name
&lt;/code&gt;

&lt;p&gt;Neither the &lt;code&gt;httpx&lt;/code&gt; stream iterator nor &lt;code&gt;tmp_file.write&lt;/code&gt; is GIL-blocking, so they benefit from running in separate threads.&lt;/p&gt;&lt;p&gt;We can merge this behavior with an asyncio API, by using the Event Loop &lt;code&gt;run_in_executor()&lt;/code&gt; function and passing it a thread pool:&lt;/p&gt;&lt;code&gt;import asyncio
import concurrent.futures

async def main():
    loop = asyncio.get_running_loop()

    URLS = [
        "https://example.place/big-file-1",
        "https://example.place/big-file-2",
        "https://example.place/big-file-3",
        # etc.
    ]

    tasks = set()
    with concurrent.futures.ThreadPoolExecutor(max_workers=10) as pool:
        for url in URLS:
            tasks.add(loop.run_in_executor(pool, download_file, url))
        files = await asyncio.gather(*tasks)
    print(files)
&lt;/code&gt;

&lt;p&gt;It‚Äôs not immediately clear to me what the benefit of this is over running a thread-pool and calling &lt;code&gt;pool.submit&lt;/code&gt;. We retain an async API, so if that is important this is an interesting workaround. &lt;/p&gt;&lt;p&gt;I find that memorizing, documenting, and explaining what is and isn‚Äôt ‚Äúblocking‚Äù in Python to be confusing and continually changing.&lt;/p&gt;&lt;p&gt;Python 3.13 introduced a very-unstable ‚Äúfree-threaded‚Äù build of Python where the GIL is removed and replaced with smaller, more granular locks. See my PyCon US 2024 Talk for a summary of parallelism. The 3.13 build wasn‚Äôt stable enough for any production use. 3.14 is looking far improved and I think we can start to introduce free-threading in 2026 in some narrow, well-tested scenarios.&lt;/p&gt;&lt;p&gt;One major benefit to coroutines versus threads is that they have a far smaller memory footprint, a lower context-switching overhead, and faster startup times. async APIs are also easier to reason about and compose.&lt;/p&gt;&lt;p&gt;Because parallelism in Python using threads has always been so limited, the APIs in the standard library are quite rudimentary. I think there is an opportunity to have a task-parallelism API in the standard library once free-threading is stabilized.&lt;/p&gt;&lt;p&gt;Last week I was implementing a registry function that did two discrete tasks. One calls a very slow sync-only API and the other calls several async APIs.&lt;/p&gt;&lt;p&gt;I want the behavior that:&lt;/p&gt;&lt;quote&gt;flowchart LR Start([Start]) --&amp;gt; Invoke["tpl.invoke()"] Invoke --&amp;gt; f1["f1()"] Invoke --&amp;gt; f2["f2()"] f1 --&amp;gt;|f1 -&amp;gt; T1| Join["Tuple[T1, T2]"] f2 --&amp;gt;|f2 -&amp;gt; T2| Join Join --&amp;gt; End([End])&lt;/quote&gt;&lt;p&gt;Since there are only two tasks, I don‚Äôt want to have to define a thread-pool or a set number of workers. I also don‚Äôt want to have to map or gather the callees. I want to retain my typing information so that the resulting variables are strongly typed from the return types of &lt;code&gt;function_a&lt;/code&gt; and &lt;code&gt;function_a&lt;/code&gt;. Essentially an API like this:&lt;/p&gt;&lt;code&gt;import tpl


def function_a() -&amp;gt; T1:
    ...

def function_b() -&amp;gt; T2:
    ...

result_a: T1, result_b: T2 = tpl.invoke(function_a, function_b)
&lt;/code&gt;

&lt;p&gt;This is all possible today but there are many constraints with the GIL. Free-threading will make parallel programming more popular in Python and we‚Äôll have to revisit some of the APIs.&lt;/p&gt;&lt;p&gt;As a package maintainer, supporting both synchronous and asynchronous APIs is a big challenge. You also have to be selective with where you support async. Much of the stdlib doesn‚Äôt support async natively (e.g. logging backends).&lt;/p&gt;&lt;p&gt;Python‚Äôs Magic (&lt;code&gt;__dunder__&lt;/code&gt;) methods cannot be async. &lt;code&gt;__init__&lt;/code&gt; cannot be async for example, so none of your code can use network requests in the initializer.&lt;/p&gt;&lt;p&gt;This is an odd-pattern but I‚Äôll keep it simple to illustrate my point. You have a class &lt;code&gt;User&lt;/code&gt; with a property &lt;code&gt;records&lt;/code&gt;. This property gives a list of records for that user. A synchronous API is straightforward:&lt;/p&gt;&lt;code&gt;class User:
    @property
    def records(self) -&amp;gt; list[RecordT]:
        # fetch records from database lazily
        ...
&lt;/code&gt;

&lt;p&gt;We can even use a lazily-initialized instance variable to cache this data.&lt;/p&gt;&lt;p&gt;Porting this API to async is a challenge because whilst &lt;code&gt;@property&lt;/code&gt; methods can be async, standard attributes are not. Having to &lt;code&gt;await&lt;/code&gt; some instance attributes and not others leaves a very odd API:&lt;/p&gt;&lt;code&gt;class AsyncDatabase:
    @staticmethod
    async def fetch_many(id: str, of: Type[RecordT]) -&amp;gt; list[RecordT]:
        ...

class User:
    @property
    async def records(self) -&amp;gt; list[RecordT]:
        # fetch records from database lazily
        return await AsyncDatabase.fetch_many(self.id, RecordT)
&lt;/code&gt;

&lt;p&gt;Anytime you access that property, it needs to be awaited:&lt;/p&gt;&lt;code&gt;user = User(...)
# single access
await user.records
# if
if await user.records:
    ...
# comprehension?
[record async for record in user.records]
&lt;/code&gt;

&lt;p&gt;The further we go into this implementation, the more we wait for the user to accidentally forget to await the property and it fails silently.&lt;/p&gt;&lt;p&gt;The Azure Python SDK, a ginormous Python project supports both sync and async. Maintaining both is achieved via a lot of code-generation infrastructure. This is ok for a project with tens of full-time engineers, but for anything small or voluntary you need to copy + paste a lot of your code base to create an async version. Then you need to patch and backport fixes and changes between the two. The differences (mostly &lt;code&gt;await&lt;/code&gt; calls) are big enough to confuse Git. I was reviewing some langchain implementations last year which had both sync and async implementation. Every method was copied+pasted, with little behavioral differences and their own bugs. People would submit bug fix PR‚Äôs to one implementation and not the other so instead of merging directly, maintainers had to port the fix, skip it, or ask the contributors to do both.&lt;/p&gt;&lt;p&gt;Since we‚Äôre largely talking about HTTP/Network IO, you also need to pick a backend for sync and async. For synchronous HTTP calls, &lt;code&gt;requests&lt;/code&gt;, &lt;code&gt;httpx&lt;/code&gt; are suitable backends. For &lt;code&gt;async&lt;/code&gt;, its &lt;code&gt;aiohttp&lt;/code&gt; and &lt;code&gt;httpx&lt;/code&gt;. Since neither are part of the Python standard library, the adoption and support for CPython‚Äôs main platforms is out of sync. E.g. as of today, &lt;code&gt;aiohttp&lt;/code&gt; has no Python 3.14 wheels, nor free-threaded support. UV Loop, the alternative implementation of the event loop has no Python 3.14 support, nor any Windows support. (Python 3.14 isn‚Äôt out yet, so it‚Äôs reasonable to not have support in either open-source project).&lt;/p&gt;&lt;p&gt;Further down the copy+paste maintainer overhead is the testing of these APIs. Testing your async code requires different mocks, different calls and in the case of Pytest a whole set of extensions and patterns for fixtures. This situation is so confusing I wrote a post about it and it‚Äôs one of the most popular on my blog.&lt;/p&gt;&lt;p&gt;In summary, I think the use cases for asyncio are limited (mostly for reasons beyond the control of &lt;code&gt;asyncio&lt;/code&gt;) and this has constrained it‚Äôs popularity. Maintaining duplicate code-bases is a burden.&lt;/p&gt;&lt;p&gt;FastAPI, the web framework that‚Äôs async from-the-ground-up grew in popularity again from 29% to 38% share of the web frameworks for Python, taking the #1 spot. It has over 100-million downloads a month. Considering the big use-case for async is HTTP and network IO, having the #1 web framework be an async one is a sign of asyncio‚Äôs success.&lt;/p&gt;&lt;p&gt;I think in 3.14 the sub-interpreter executor and free-threading features make more parallel and concurrency use cases practical and useful. For those, we don‚Äôt need &lt;code&gt;async&lt;/code&gt; APIs and it alleviates much of the issues I highlighted in this post.&lt;/p&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45106189</guid></item><item><title>Microsoft rewarded for security failures with another US Government contract</title><link>https://www.theregister.com/2025/09/02/microsoft_rewarded_for_security_failures/</link><description>&lt;doc fingerprint="3f508f1050884273"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Microsoft rewarded for security failures with another US government contract&lt;/head&gt;
    &lt;head rend="h2"&gt;Free Copilot for any agency who actually wants it&lt;/head&gt;
    &lt;p&gt;Microsoft, the latest tech firm to agree to big software discounts for the US government, is digging even deeper into its bargain bin than the competition by offering a year of free Copilot access to government agencies willing to put up with its other problem products.&lt;/p&gt;
    &lt;p&gt;The General Services Administration (GSA) announced its new deal with Microsoft on Tuesday, describing it as a "strategic partnership" that could save the federal government as much as $3.1 billion over the next year. The GSA didn't mention specific discount terms, but it said that services, including Microsoft 365, Azure cloud services, Dynamics 365, Entra ID Governance, and Microsoft Sentinel, will be cheaper than ever for feds.&lt;/p&gt;
    &lt;p&gt;That, and Microsoft's next-gen Clippy, also known as Copilot, is free to access for any agency with a G5 contract as part of the new deal, too. That free price undercuts Google's previously cheapest-in-show deal to inject Gemini into government agencies for just $0.47 for a year.&lt;/p&gt;
    &lt;p&gt;The GSA made this Microsoft deal as part of its OneGov initiative, which seeks to centralize purchasing of products and services used across the government under a single contract. While the agency intends for OneGov to extend across the federal government, the first phase of the program focuses exclusively on IT contracts.&lt;/p&gt;
    &lt;p&gt;Though it only announced OneGov in April, the GSA has awarded contracts under the plan at a rapid pace, with Oracle the first firm to sign a deal in July. That agreement includes a 75 percent discount on its products to government agencies.&lt;/p&gt;
    &lt;p&gt;The agency wrote many of the other OneGov contracts to get AI products into the hands of government agencies. OpenAI and Anthropic both made deals with the GSA in August to provide a year of their services to agencies for $1 each, which Google undercut later last month.&lt;/p&gt;
    &lt;p&gt;Even Box made an AI discount deal with the federal government, though it didn't disclose pricing. Outside of AI offerings, Amazon Web Services inked its own OneGov deal with the GSA to offer discounted cloud services through 2028.&lt;/p&gt;
    &lt;p&gt;With the exception of AWS, all the other OneGov deals that have been announced so far have a very short shelf life, with most expirations at the end of 2026. Critics of the OneGov program have raised concerns that OneGov deals have set government agencies up for a new era of vendor lock-in not seen since the early cloud days, where one-year discounts leave agencies dependent on services that could suddenly become considerably more expensive by the end of next year.&lt;/p&gt;
    &lt;p&gt;Nicholas Chaillan, former US Air Force and Space Force chief software officer and founder of AI firm Ask Sage, told The Register in a recent conversation that he's protested the OpenAI, Anthropic, and Google deals, accusing the GSA of undermining its own rules on fair and open competition for government-wide contracts.&lt;/p&gt;
    &lt;p&gt;"Pricing this low is not about serving agencies ‚Äì it's about forcing dependence on a single vendor, hiding future costs, and squeezing out fair competition," Chaillan told us in an email. "What looks cheap today will leave the government with higher costs, fewer options, and greater risk tomorrow."&lt;/p&gt;
    &lt;p&gt;Chillain told us that GSA hasn't made the OneGov contracts public so they could be scrutinized for any unfair elements. We've tried obtaining copies but the GSA hasn't acknowledged those requests. As with the other OneGov contracts, what happens to the discounts after the September 2026 end of the offering isn't clear.&lt;/p&gt;
    &lt;p&gt;The GSA's press release mentioned that discounted pricing will be available for "certain products" for up to 36 months, but the terms of those discounts or the specific products available weren't mentioned. Microsoft's announcement of its new OneGov deal said those extended discounts will save the government as much as $6 billion over three years.&lt;/p&gt;
    &lt;p&gt;The GSA didn't respond to questions for this story.&lt;/p&gt;
    &lt;head rend="h3"&gt;Microsoft gets rewarded for security failures ‚Äì again&lt;/head&gt;
    &lt;p&gt;Like other tech giants making OneGov deals, Microsoft will likely have to burn some capital to reap the monetary rewards from government agencies who grow dependent on its cheap or free software in the next year. Unlike those other tech giants making OneGov deals, however, Microsoft is yet again being rewarded by the US government with a pathway to profit after making a massive national security mistake.&lt;/p&gt;
    &lt;p&gt;It was mere days ago that we reported on the Pentagon's decision to formally bar Microsoft from using China-based engineers to support sensitive cloud services deployed by the Defense Department, a practice Defense Secretary Pete Hegseth called "mind-blowing" in a statement last week.&lt;/p&gt;
    &lt;p&gt;Then there was last year's episodes that allowed Chinese and Russian cyber spies to break into Exchange accounts used by high-level federal officials and steal a whole bunch of emails and other information. That incident, and plenty more before it, led former senior White House cyber policy director AJ Grotto to conclude that Microsoft was an honest-to-goodness national security threat. None of that has mattered much, as the feds seem content to continue paying Microsoft for its services, despite wagging their finger at Redmond for "avoidable errors."&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Pentagon 'doubling down' on Microsoft despite 'massive hack,' senators complain&lt;/item&gt;
      &lt;item&gt;Microsoft eggheads say AI can never be made secure ‚Äì after testing Redmond's own products&lt;/item&gt;
      &lt;item&gt;Microsoft answered Congress' questions on security. Now the White House needs to act&lt;/item&gt;
      &lt;item&gt;Google takes shots at Microsoft for shoddy security record with enterprise apps&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;When it comes to government customers, using China-based support staff isn't Microsoft's only sin. The company had a Sharepoint zero-day that it only "partially" addressed with July security updates. Suspected state-backed hackers used that vuln to target an unspecified "major western government," per the company.&lt;/p&gt;
    &lt;p&gt;That, senior cybersecurity and counterterrorism advisor for the Clinton and Bush II administrations Roger Cressey told us last month, is among the reasons he considers Microsoft to be a continual gift to America's foreign adversaries, as the Sharepoint issue is just "the latest episode of a decades-long process of Microsoft not taking security seriously."&lt;/p&gt;
    &lt;p&gt;"The Chinese are so well prepared and positioned on Microsoft products that in the event of hostilities, we know for a fact that Chinese actors will target our critical infrastructure through Microsoft," Cressey told us in an interview last month.&lt;/p&gt;
    &lt;p&gt;When asked what it had done to improve its security posture, Microsoft declined to answer any of our questions directly, instead pointing us to its press release about today's GSA deal, specifically its section on security.&lt;/p&gt;
    &lt;p&gt;Agencies are safe to adopt Microsoft software, the company said, because "these services have already achieved key FedRAMP security and compliance authorizations." FedRAMP is the government's security approval process for cloud software.&lt;/p&gt;
    &lt;p&gt;"Microsoft 365, Azure and our key AI services are authorized at FedRAMP High," the company statement says. "Microsoft 365 Copilot received provisional authorization from the US Department of Defense, with FedRAMP High expected soon."&lt;/p&gt;
    &lt;p&gt;That's not exactly reassuring considering Microsoft's products have variously been authorized for government use for years, well before many of its recent security failings that affected federal agencies. ¬Æ&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45106295</guid></item><item><title>Introduction to Ada: a project-based exploration with rosettas</title><link>https://blog.adacore.com/introduction-to-ada-a-project-based-exploration-with-rosettas</link><description>&lt;doc fingerprint="a48888018a6d1bd8"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Introduction to Ada: a project-based exploration with rosettas&lt;/head&gt;
    &lt;head rend="h2"&gt;by Romain Gora ‚Äì&lt;/head&gt;
    &lt;head rend="h2"&gt;Context&lt;/head&gt;
    &lt;p&gt;This practical walkthrough, designed as a short tutorial, was created upon joining AdaCore as a Field Engineer. In this new role, I√¢ll be working directly with customers to help them succeed with Ada. Although I was first introduced to the language nearly two decades ago, this new position inspired me to revisit its fundamentals, and I used the excellent https://learn.adacore.com portal as a quick refresher.&lt;/p&gt;
    &lt;p&gt;While that platform takes a concept-based approach, I chose to complement it with a project-based method by developing a small, end-to-end Ada program that generates animated rosettas in the form of SVG files. These are technically hypotrochoid curves, producing patterns that many will recognize from the classic Spirograph√¢¬¢ toy.&lt;/p&gt;
    &lt;p&gt;In this walkthrough, we√¢ll show that Ada can be fun and easy to learn. Although the language is famous for safety-critical systems, we will use it as a modern, general-purpose programming language and try out some new features from Ada 2022 along the way.&lt;/p&gt;
    &lt;p&gt;Let's dive in!&lt;/p&gt;
    &lt;head rend="h2"&gt;A brief note on Ada&lt;/head&gt;
    &lt;p&gt;This section leans a bit more into background context, with a slightly encyclopedic flavor that's especially useful for readers new to Ada. If you're already familiar with Ada√¢s history and principles, feel free to joyfully skip ahead to the next section!&lt;/p&gt;
    &lt;p&gt;Ada was created in the late 1970s after a call from the U.S. Department of Defense to unify its fragmented software landscape. The winning proposal became Ada, a language that's been literally battle-tested (!) and built on a deeply thought-out design that continues to evolve today.&lt;/p&gt;
    &lt;p&gt;While Ada is absolutely a general-purpose programming language, it has carved out a strong niche in fields where software correctness and reliability are mission-critical:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;Embedded and real-time systems&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Aerospace and defense&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Rail, automotive, and aviation&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Any system where failure is not just a bug, but a risk&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Its strict compile-time checks, safety features, and clear structure make it particularly appealing when you need your software to be dependable from day one and still maintainable ten years later.&lt;/p&gt;
    &lt;p&gt;Ada's design is grounded in a strong and principled philosophy:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;Readability over conciseness: Ada favors clarity. It avoids symbols and abbreviations in favor of full keywords, making the language more accessible and less error-prone.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Strong and explicit typing: It is extremely easy to declare new types in Ada, with precise constraints, which makes it much harder to accidentally misuse data. While some functional languages share this strong typing discipline, Ada stands out by requiring the programmer to be very explicit. It uses little to no type inference.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Explicit is better than implicit: Unlike many modern languages that prioritize convenience, Ada leans heavily toward precision. Most types must be explicitly named and matched.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Defined semantics and minimal undefined behavior: Ada offers a level of predictability and safety unmatched in many languages. This makes it a strong choice not only for safety-critical systems, but also for codebases where long-term maintenance, verifiability, and correctness are essential.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Compiler as a partner: Ada compilers are strict by design, not to frustrate, but to help the programmer write clearer, more correct code. This philosophy encourages the developer to communicate intent clearly, both to the compiler and to future readers.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;How the program works&lt;/head&gt;
    &lt;p&gt;Sometimes the best way to figure out how something works is to start at the end. Let's do that!&lt;lb/&gt;In this tutorial, we'll walk through how the program produces its final output √¢ a rosetta SVG file √¢ and use that as a way to explore how Ada's structure, type system, and tooling come together.&lt;lb/&gt;This is a simple command-line program that generates an SVG file. You run it like this:&lt;/p&gt;
    &lt;p&gt;./bin/rosetta&lt;/p&gt;
    &lt;p&gt;The idea was to create something visual: learning is more fun when there's an immediate, satisfying result and generating rosettas fits that goal perfectly.&lt;/p&gt;
    &lt;p&gt;&lt;lb/&gt;Why SVG? Because it's a lightweight and portable vector format that you can view in any modern browser. I wanted to avoid relying on a graphical library, which would have added extra weight and gone beyond the scope of this approach. And while XML isn't the most pleasant format to write by hand, generating it from code is straightforward and gives a surprisingly clean result.&lt;/p&gt;
    &lt;head rend="h2"&gt;Tooling &amp;amp; setup&lt;/head&gt;
    &lt;p&gt;To build and run the project, I used Alire, the Ada package manager. It plays a similar role in the Ada ecosystem as Cargo does for Rust or npm for JavaScript. It's well-documented, and while we won't dive deep into it here, it's a solid and accessible way to manage Ada projects. I encourage anyone curious to get it from https://alire.ada.dev. Interestingly, "Alire" is also the French expression for "√É lire" √¢ which means "for reading." A fitting name for a tool that supports a language so focused on clarity and readability!&lt;/p&gt;
    &lt;p&gt;Once Alire is set up, the natural next step is choosing where to write the code. You have two excellent options for your development environment. For a dedicated experience, you can download the latest release of GNAT Studio from its GitHub repository. If you prefer a more general-purpose editor, you can install the official Ada &amp;amp; SPARK for Visual Studio Code extension from AdaCore.&lt;/p&gt;
    &lt;p&gt;As a new learner, I also kept https://learn.adacore.com close at hand. It√¢s a particularly clear and comprehensive resource √¢ and I especially appreciated being able to download the ebook version and read through it on my phone.&lt;/p&gt;
    &lt;head rend="h2"&gt;Entry point&lt;/head&gt;
    &lt;code&gt;with Rosetta_Renderer;

procedure Main is
begin
   Rosetta_Renderer.Put_SVG_Rosettas;
end Main;&lt;/code&gt;
    &lt;p&gt;There are several interesting things to notice right away:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;p&gt;The&lt;/p&gt;&lt;code&gt;with&lt;/code&gt;clause is not a preprocessor directive like in C or C++. It√¢s a compiled, checked reference to another package √¢ a reliable and explicit way to express a dependency. This eliminates entire classes of bugs related to fragile&lt;code&gt;#include&lt;/code&gt;chains, macro collisions, or dependency order issues.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;This&lt;/p&gt;&lt;code&gt;procedure&lt;/code&gt;is not a&lt;code&gt;function&lt;/code&gt;: it does not return a value. In Ada, procedures are used to perform actions (like printing or modifying state), and functions are used to compute and query values.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;The syntax is designed for readability. You√¢ll find&lt;/p&gt;&lt;code&gt;begin&lt;/code&gt;and&lt;code&gt;end&lt;/code&gt;here instead of&lt;code&gt;{}&lt;/code&gt;as in C/C++, reinforcing Ada√¢s philosophy that clarity matters more than brevity.&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;Put_SVG_Rosettas&lt;/code&gt;uses the idiomatic Pascal_Snake_Case naming style. This reflects a common Ada convention and avoids acronyms or compressed identifiers in favor of more descriptive names.&lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;The entry point is minimal but meaningful: it simply calls a procedure which generates the output we'll explore in the next sections.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Geometry and computation (package Rosetta)&lt;/head&gt;
    &lt;p&gt;In Ada, a package is a modular unit that groups related types, procedures, and functions. Following the convention from GNAT (the Ada compiler, part of the GNU Compiler Collection, fondly known as GCC), each package has a specification file (with the&lt;code&gt; .ads&lt;/code&gt; extension √¢ short for Ada Specification) and an implementation file (with the &lt;code&gt;.adb&lt;/code&gt; extension √¢ short for Ada Body). This clear and enforced split means you always know where to find interface definitions versus their implementation.&lt;/p&gt;
    &lt;p&gt;The following code is the package specification for Rosetta. It defines the data types for the rosetta shapes and declares the public interface of operations available to manipulate them.&lt;/p&gt;
    &lt;code&gt;with Ada.Strings.Text_Buffers;

package Rosetta is

   --  A mathematical description of a rosetta (specifically, a hypotrochoid).
   --  formed by tracing a point attached to a circle rolling inside another circle.
   type Hypotrochoid is record
      Outer_Radius : Float;     --  Radius of the fixed outer circle.
      Inner_Radius : Float;     --  Radius of the rolling inner circle.
      Pen_Offset   : Float;     --  From the center of the inner circle to the drawing point.
      Steps        : Positive;  --  Number of steps (points) used to approximate the curve.
   end record;

   --  A 2D coordinate in Cartesian space.
   type Coordinate is record
      X_Coord, Y_Coord : Float;
   end record
     with Put_Image =&amp;gt; Put_Image_Coordinate;
   
   --  Redefines the 'Image attribute for Coordinate.
   procedure Put_Image_Coordinate 
     (Output : in out Ada.Strings.Text_Buffers.Root_Buffer_Type'Class; 
      Value  : Coordinate);

   --  A type for an unconstrained array of 2D points forming a curve.
   --  The actual bounds are set when an array object of this type is declared.
   type Coordinate_Array is array (Natural range &amp;lt;&amp;gt;) of Coordinate;

   --  Computes the coordinates of the rosetta curve defined by Curve (a hypotrochoid).
   --  Returns a centered array of coordinates.
   function Compute_Points (Curve : Hypotrochoid) return Coordinate_Array;

end Rosetta;&lt;/code&gt;
    &lt;p&gt;The &lt;code&gt;Rosetta&lt;/code&gt; package is responsible for all the math and curve computation. It defines:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;code&gt;Hypotrochoid&lt;/code&gt;, type describing the geometry of the rosetta&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;Coordinate&lt;/code&gt;, type representing points in 2D space&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;Coordinate_Array&lt;/code&gt;, type holding a series of such points&lt;/item&gt;
      &lt;item&gt;&lt;code&gt;Compute_Points&lt;/code&gt;, function which calculates all the points of the curve based on the&lt;code&gt;Hypotrochoid&lt;/code&gt;parameters and recenters them around the origin&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;This package is focused solely on computation. It doesn√¢t concern itself with how the result is rendered.&lt;/p&gt;
    &lt;p&gt;Fun fact for the curious: when the rolling circle rolls outside the fixed circle rather than inside, the resulting curve is called an epitrochoid.&lt;/p&gt;
    &lt;p&gt;In Ada, a &lt;code&gt;record&lt;/code&gt; is similar to a &lt;code&gt;struct&lt;/code&gt; in C or a class with only data members in other languages. It's a user-defined type composed of named components, making it ideal for modeling structured data.&lt;/p&gt;
    &lt;p&gt;Using a record for &lt;code&gt;Hypotrochoid&lt;/code&gt; was particularly appropriate: it allows grouping all geometric parameters (outer radius, inner radius, pen offset, and steps) into a single, cohesive unit. This improves readability and maintainability. The compiler enforces correctness by ensuring all required values are present and of the expected type √¢ reinforcing Ada√¢s philosophy of clarity and safety.&lt;/p&gt;
    &lt;p&gt;The type &lt;code&gt;Coordinate_Array&lt;/code&gt; is an unconstrained array type that holds a range of &lt;code&gt;Coordinate&lt;/code&gt; records. In this context, √¢unconstrained√¢ simply means that we don√¢t define the array√¢s size when we declare the type. Instead, the size is defined when we declare an object of that type. This gives us the flexibility to use this type for a variety of shapes.&lt;/p&gt;
    &lt;p&gt;You may also notice the use of &lt;code&gt;Natural range &amp;lt;&amp;gt;. Natural&lt;/code&gt; is a predefined subtype of Integer that only allows non-negative values. And yes, I mean subtype: Ada√¢s powerful type system allows you to take an existing type and create a more specific, constrained version of it.&lt;/p&gt;
    &lt;head rend="h3"&gt;Highlights from the .adb file&lt;/head&gt;
    &lt;p&gt;Here are a few notable aspects from the implementation (&lt;code&gt;rosetta.adb&lt;/code&gt;) that illustrate Ada√¢s strengths for writing safe, clear, and structured code:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;&lt;p&gt;Declarative and modular design: Both&lt;/p&gt;&lt;code&gt;Generate_Point&lt;/code&gt;and&lt;code&gt;Compute_Points&lt;/code&gt;are pure functions that operate only on their inputs. Their behavior is fully deterministic and encapsulated.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Safe bounds and array handling: The&lt;/p&gt;&lt;code&gt;Points&lt;/code&gt;array is statically bounded using&lt;code&gt;(0 .. Curve.Steps)&lt;/code&gt;, and its access is strictly safe. The compiler ensures that any index outside this range would raise an error at runtime. This immediate error is a feature, not a bug. It stops silent memory corruption and security flaws by ensuring the program fails predictably and safely at the source of the problem.&lt;/item&gt;
      &lt;item&gt;&lt;p&gt;Use of constants for robustness: Variables such as&lt;/p&gt;&lt;code&gt;Pi&lt;/code&gt;,&lt;code&gt;R_Diff&lt;/code&gt;, and Ratio are declared as constant, enforcing immutability. This helps ensure clarity of intent and prevents accidental reassignment, a common source of subtle bugs in more permissive languages. Ada encourages this explicit declaration style, promoting safer code.&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;with Ada.Numerics;
with Ada.Numerics.Elementary_Functions;

use Ada.Numerics;
use Ada.Numerics.Elementary_Functions;

package body Rosetta is

   --  Computes a single point on the hypotrochoid curve for a given angle Theta.
   --  Uses the standard parametric equation of a hypotrochoid.
   function Generate_Point (Curve : Hypotrochoid; Theta : Float) return Coordinate is
      R_Diff : constant Float := Curve.Outer_Radius - Curve.Inner_Radius;
      Ratio  : constant Float := R_Diff / Curve.Inner_Radius;
   begin
      return (
              X_Coord =&amp;gt; R_Diff * Cos (Theta) + Curve.Pen_Offset * Cos (Ratio * Theta),
              Y_Coord =&amp;gt; R_Diff * Sin (Theta) - Curve.Pen_Offset * Sin (Ratio * Theta)
             );
   end Generate_Point;

   --  Computes all the points of the hypotrochoid curve and recenters them.
   --  The result is an array of coordinates centered around the origin.
   function Compute_Points (Curve : Hypotrochoid) return Coordinate_Array is
      Points : Coordinate_Array (0 .. Curve.Steps);
      Max_X  : Float := Float'First;
      Min_X  : Float := Float'Last;
      Max_Y  : Float := Float'First;
      Min_Y  : Float := Float'Last;
      Offset : Coordinate;
   begin
      --  Computes raw points and updates the bounding box extents.
      for J in 0 .. Curve.Steps loop
         declare
            Theta : constant Float := 2.0 * Pi * Float (J) / Float (Curve.Steps) * 50.0;
            P     : constant Coordinate := Generate_Point (Curve, Theta);
         begin
            Points (J) := P;
            Max_X := Float'Max (Max_X, P.X_Coord);
            Min_X := Float'Min (Min_X, P.X_Coord);
            Max_Y := Float'Max (Max_Y, P.Y_Coord);
            Min_Y := Float'Min (Min_Y, P.Y_Coord);
         end;
      end loop;

      --  Computes the center offset based on the bounding box.
      Offset := (
                 X_Coord =&amp;gt; (Max_X + Min_X) / 2.0,
                 Y_Coord =&amp;gt; (Max_Y + Min_Y) / 2.0
                );

      --  Recenters all points by subtracting the center offset.
      for J in Points'Range loop
         Points (J).X_Coord := @ - Offset.X_Coord;
         Points (J).Y_Coord := @ - Offset.Y_Coord;
      end loop;

      return Points;
   end Compute_Points;
   
   --  Redefines the 'Image attribute for Coordinate.
   procedure Put_Image_Coordinate
     (Output : in out Ada.Strings.Text_Buffers.Root_Buffer_Type'Class;
      Value  : Coordinate)
   is   
      X_Text : constant String := Float'Image (Value.X_Coord);
      Y_Text : constant String := Float'Image (Value.Y_Coord);
   begin
      Output.Put (X_Text &amp;amp; "," &amp;amp; Y_Text);
   end Put_Image_Coordinate;

end Rosetta;&lt;/code&gt;
    &lt;head rend="h2"&gt;On style: strict and predictable (and satisfying!)&lt;/head&gt;
    &lt;p&gt;Ada is one of those rare languages that not only compiles your code but asks you to write it properly. With the compiler switch -gnaty, you can enforce a comprehensive set of style rules, many of which are stricter than what you'd see in most languages.&lt;/p&gt;
    &lt;p&gt;This includes things like:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;No trailing whitespace at the end of lines&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;No consecutive blank lines&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Proper indentation and alignment of keywords and parameters&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;A space before √¢(√¢ when calling a procedure or function&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Consistent casing&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;At first, this can feel surprisingly strict. But once you get used to it, the benefits are clear: it helps enforce a consistent and clean coding style across a codebase. That in turn improves readability, reduces ambiguity, and leads to more maintainable programs.&lt;/p&gt;
    &lt;p&gt;Rather than leaving formatting up to personal taste or optional linter tools, Ada integrates this attention to detail into the compilation process itself. The result is not only more elegant: it's genuinely satisfying. And you can do even more with GNATcheck and GNATformat but it√¢s outside of the scope of this post.&lt;/p&gt;
    &lt;p&gt;Outputting to SVG (package &lt;code&gt;Rosetta_Renderer&lt;/code&gt;)&lt;/p&gt;
    &lt;p&gt;The Rosetta_Renderer package is responsible for producing the SVG output. It defines a single high-level procedure:&lt;/p&gt;
    &lt;code&gt;package Rosetta_Renderer is

   --  Renders a predefined set of rosettas into an SVG output.
   procedure Put_SVG_Rosettas;

end Rosetta_Renderer;&lt;/code&gt;
    &lt;p&gt;This procedure generates an SVG file directly. It takes care of formatting the SVG structure (header, shapes, animations, and footer) and calls into the math logic defined in the &lt;code&gt;Rosetta &lt;/code&gt;package to generate point data.&lt;/p&gt;
    &lt;p&gt;This separation of concerns is deliberate and beneficial: the math logic doesn√¢t need to know anything about SVG, and the renderer doesn√¢t care how the coordinates were generated.&lt;/p&gt;
    &lt;p&gt;Now let's talk about the body of the package... but not for long. We're keeping it brief because its core is essentially the SVG plumbing required to draw and animate the curves, so we'll skip the fine details. And for those who enjoy seeing how the sausage is made, I've made the fully commented source code available for you right here.&lt;/p&gt;
    &lt;p&gt;&lt;lb/&gt;The procedure &lt;code&gt;Put_Path&lt;/code&gt; handles the creation of the SVG path. Its main job is to take an array of coordinates and write the corresponding command string to the &lt;code&gt;d &lt;/code&gt;attribute of a&lt;code&gt; &amp;lt;path&amp;gt;&lt;/code&gt; element. In SVG, this attribute defines the geometry of the shape. The code iterates over each coordinate, using &lt;code&gt;M &lt;/code&gt;(moveto) for the first point and &lt;code&gt;L&lt;/code&gt; (lineto) for all the others to draw the connecting lines.&lt;/p&gt;
    &lt;code&gt;--  Puts coordinates to a single SVG path string ("d" attribute).
   procedure Put_Path (Stream : File_Type; Points : Coordinate_Array) is
   begin
      Put (Stream, "M "); -- Moves the pen without drawing.
      for J in Points'Range loop
         declare 
            Coord_Text : constant String := Coordinate'Image (Points (J));
         begin   
            Put (Stream, Coord_Text);
            if J &amp;lt; Points'Last then
               Put (Stream, " L "); --  Draws a line.
            end if;
         end;
      end loop;
   end Put_Path;&lt;/code&gt;
    &lt;head rend="h2"&gt;Afterword&lt;/head&gt;
    &lt;p&gt;This small project was an enjoyable and useful way to get back into Ada. It helped me reconnect with the language√¢s main strengths and refamiliarize myself with its tools and design. It was a great reminder of how fun, easy to learn, and remarkably modern Ada can be, especially for developers focused on building robust, maintainable, and efficient software.&lt;/p&gt;
    &lt;p&gt;I hope this short walkthrough gives a good idea of that feeling, whether you're already into Ada or just starting to explore it.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45106314</guid></item><item><title>A gentle introduction to CP/M</title><link>https://eerielinux.wordpress.com/2025/08/28/a-gentle-introduction-to-cp-m/</link><description>&lt;doc fingerprint="b6e89fd345878b99"&gt;
  &lt;main&gt;
    &lt;p&gt;[New to Gemini? Have a look at my Gemini FAQ.]&lt;/p&gt;
    &lt;p&gt;This article was bi-posted to Gemini and the Web; Gemini version is here: &lt;code&gt;gemini://gemini.circumlunar.space/users/kraileth/neunix/2025/gentle_introduction_cpm.gmi&lt;/code&gt;&lt;/p&gt;
    &lt;p&gt;This article is just what the headline promises: an introduction to the CP/M operating system. No previous knowledge of 1970s and early ‚Äô80s operating systems is required. However, some familiarity with Linux or a BSD-style operating system is assumed, as the setup process suggested here involves using a package manager and command-line tools. But why explore CP/M in the 2020s? There are (at least) two good reasons: 1) historical education 2) gaining a better understanding of how computers actually work.&lt;/p&gt;
    &lt;p&gt;Last year I wrote two articles about CP/M after having taken a first look at it:&lt;/p&gt;
    &lt;p&gt;A journey into the 8-Bit microcomputing past: Exploring the CP/M operating system ‚Äì part 1&lt;lb/&gt; A journey into the 8-Bit microcomputing past: Exploring the CP/M operating system ‚Äì part 2&lt;/p&gt;
    &lt;p&gt;These were written with a focus on the first reason; I had (partially) read the manuals and tried out a few commands in an emulator (as well as done a little bit of research). I wrote an outsider‚Äôs look at CP/M and covered the various versions that were released and some of their notable features.&lt;/p&gt;
    &lt;p&gt;This article is different. It‚Äôs for readers who want to get started with CP/M themselves. Expect a practical introduction to get familiar enough with the platform to be able to explore a wealth of historic software, often enough ground-breaking and influential.&lt;/p&gt;
    &lt;head rend="h2"&gt;Getting Ready (Installing an Emulator)&lt;/head&gt;
    &lt;p&gt;Last time I had tried out a couple of Z80 emulators and found Udo Munk‚Äôs z80pack to be the one I liked best. It‚Äôs not widely packaged; only FreeBSD includes it, but using the package requires some setup. Other options like YAZE exist, but it‚Äôs more work to get the original CP/M working on them whereas z80pack comes with disk images of various CP/M versions.&lt;/p&gt;
    &lt;p&gt;Of course you can compile the emulator and tools yourself. But to simplify the setup process, I‚Äôve created a port for Ravenports, a universal package system for POSIX operating systems. Via Ravenports, the emulator and tools I use here will soon be available as binary packages for the following operating systems (in the future additional platforms might get added):&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;DragonFly BSD&lt;/item&gt;
      &lt;item&gt;FreeBSD&lt;/item&gt;
      &lt;item&gt;Linux (glibc-based distributions)&lt;/item&gt;
      &lt;item&gt;MidnightBSD&lt;/item&gt;
      &lt;item&gt;NetBSD&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;If you‚Äôre on one of those systems, you can download, inspect and run this script if you want to go that route. It will bootstrap a secondary package manager on your system, which you can use to install additional software on your machine. Those programs live in a separate portion of the filesystem (i. e. below /raven), which means that they won‚Äôt interfere with the native package manager of your platform.&lt;/p&gt;
    &lt;p&gt;The package manager is called ‚Äòrvn‚Äô. It supports subpackages and so-called variants which is why the package names look a little complicated at first glance. The z80pack port has no variants, hence only the standard (‚Äústd‚Äù) is available, but the port is split into three subpackages: ‚Äúdocs‚Äù, ‚Äúimages‚Äù and ‚Äúprimary‚Äù. The first contains documentation, the second one provides the CP/M disk images and the last one is the actual emulator. A special subpackage called ‚Äúset‚Äù can always be used to install all available subpackages of a project.&lt;/p&gt;
    &lt;p&gt;Tilde characters separate the fields of the package name. At the time of this writing, the complete package is ‚Äòz80pack~set~std~1.38‚Äô (base name, subpackage, variant, version). Package names can be shortened as long as they are unambiguous. So to install the complete package, you can run this:&lt;/p&gt;
    &lt;quote&gt;# /raven/sbin/rvn install z80pack~s&lt;/quote&gt;
    &lt;p&gt;This will pull in ‚Äòz80pack~docs~std~1.38‚Äô, ‚Äòz80pack~images~std~1.38‚Äô and ‚Äòz80pack~primary~std~1.38‚Äô as well as the required dependencies.&lt;/p&gt;
    &lt;p&gt;You will have to add /raven/bin to your PATH environment variable to be able to use it. Depending on your shell of choice use setenv or export. Most people will want to do this:&lt;/p&gt;
    &lt;quote&gt;% export PATH=/raven/bin:$PATH&lt;/quote&gt;
    &lt;p&gt;When you installed the package, the installation message hints at a utility script that I wrote for the port. Just execute ‚Äòruncpm‚Äô and it will display a little help text to let you know what it does and what other command names it‚Äôs available under.&lt;/p&gt;
    &lt;p&gt;The help message from the utility script&lt;/p&gt;
    &lt;p&gt;Running any of these requires the /raven/bin to be in the PATH variable, otherwise they won‚Äôt find the actual emulator binary. Of course you can also modify /raven/bin/runcpm accordingly if you prefer that.&lt;/p&gt;
    &lt;head rend="h2"&gt;Running CP/M&lt;/head&gt;
    &lt;p&gt;If you‚Äôve installed the emulator and have your PATH configured, you‚Äôre ready to go. You just pick a version from the list that ‚Äòruncpm‚Äô told you about and start the emulator. But which one to try? You can of course try out any of them, but I highly recommend to start with version 2.2 for a couple of reasons. Versions 1.x work but are pretty limited in terms of command-line editing and things like that. They are fascinating relics from an age before monitors were common and when output was usually printed on paper. You can explore them later. Version 3 is more complex (by CP/M standards) and might confuse you. CP/M 2.x is basically ‚Äúclassic‚Äù CP/M, a solid but simplistic OS that‚Äôs straight-forward to get into. That‚Äôs also the version used in this article, so if you want to follow along, just go with 2.2 for now.&lt;/p&gt;
    &lt;p&gt;Now that we‚Äôve chosen a version, let‚Äôs start the emulator. So, as your user just issue&lt;/p&gt;
    &lt;quote&gt;% cpm22&lt;/quote&gt;
    &lt;p&gt;and that will turn your terminal into an emulated Z80 system with CP/M 2.2!&lt;/p&gt;
    &lt;p&gt;Emulated CP/M 2.2 booted up and ready&lt;/p&gt;
    &lt;p&gt;On modern systems, the boot process is too short to notice and the system is up instantly. CP/M displays ‚ÄòA&amp;gt;‚Äô to let you know that it‚Äôs ready to take commands from you. The CCP (Console Command Processor) is the core component of CP/M that handles user interaction like prompting you and executing commands. Think of it as your shell.&lt;/p&gt;
    &lt;p&gt;In their simplest form, commands are just simple words or abbreviations which you type after the prompt symbol and then hit ENTER to execute them. Let‚Äôs issue our first command. Try this:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;cls&lt;/quote&gt;
    &lt;p&gt;What did it do? Right, all the previous messages are gone. And that‚Äôs no wonder: CLS is short for ‚ÄúCLear Screen‚Äù. The CCP is case insensitive; it doesn‚Äôt care if you input ‚Äúcls‚Äù, ‚ÄúCLS‚Äù or ‚ÄúcLs‚Äù ‚Äì that‚Äôs all the same thing.&lt;/p&gt;
    &lt;p&gt;You can always give empty command lines, if you want a bit of screen space between some output and the next. So pressing ENTER without first typing a command is perfectly acceptable. But let‚Äôs try a different command:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;bye&lt;/quote&gt;
    &lt;p&gt;As you might have guessed from the name, this command is used to quit the emulator and returns you to your standard *nix terminal. It‚Äôs not the most interesting command but definitely one you will want to know about. It was added to stop z80-sim and is not part of the original CP/M.&lt;/p&gt;
    &lt;head rend="h2"&gt;Filename Basics&lt;/head&gt;
    &lt;p&gt;With these basics done, we can finally take a look at something more useful. Try this command:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;dir&lt;/quote&gt;
    &lt;p&gt;DIR is short for ‚ÄúDIRectory‚Äù and it lists all the files recorded in the ‚Äì you guessed it ‚Äì directory (i. e. all the files present on the drive). CP/M‚Äôs filesystem is flat, which means that there‚Äôs no folders or subdirectories. All the files on one drive are together in one place. Files are referenced by what CP/M calls a file specification. These consist of up to four pieces of information (on 2.x).&lt;/p&gt;
    &lt;p&gt;Okay, let‚Äôs take a look at the output. We‚Äôll ignore the ‚ÄúA:‚Äù for the moment. File naming follows a schema known as 8.3. This means that a filename can be 8 characters long, then a dot follows and after that it can have a type of up to three characters. Note: Terminology evolved over time. In older CP/M versions, these were known as the primary and secondary names. Later, during DOS times, they were referred to as the filename and the extension.&lt;/p&gt;
    &lt;p&gt;It‚Äôs best to think of the whole thing as the actual name of the file, i. e. the up to 8 characters, the dot, and the type. Only the first character is strictly required, though, so ‚ÄúA‚Äù is in fact a perfectly valid filename. Internally, CP/M will fill up the remaining characters with blanks, so this file is represented as an A, 7 spaces, a dot and another 3 spaces. Filenames, just like CCP input, are case-insensitive, too.&lt;/p&gt;
    &lt;p&gt;Other than being mindful of the maximum length, try to stick to letters and numbers for names. Many special characters are allowed, but some are reserved and must not be used. But you cannot just memorize these once: different versions of CP/M reserved a different set of special characters! The full list for CP/M 3 is this: . , ; : = ? * [ ] | ( ) / \ ! &amp;amp; $ + ‚Äì&lt;/p&gt;
    &lt;p&gt;Some of these are not reserved in earlier versions, but again, don‚Äôt get fancy and you‚Äôll stay out of trouble. Other than that, you need to be aware that the part before the dot is up to you entirely whereas the type is meant to hint at what kind of file this is.&lt;/p&gt;
    &lt;p&gt;Now that we understand the filename schema, let‚Äôs look at the types of files as the list provided by DIR has them. For example there‚Äôs ‚ÄúDUMP.COM‚Äù (DIR doesn‚Äôt display the dot for some reason), ‚ÄúSTAT.COM‚Äù, and so on. These are both COM files, which is short for ‚Äúcommand‚Äù files ‚Äì and it means that these are executable commands (programs).&lt;/p&gt;
    &lt;p&gt;The other types that you can see here are UTL and HLP. The former are two ‚Äúutil‚Äù files; these are special programs that cannot run on their own but can be loaded by CP/M‚Äôs debugger program. The other is short for ‚Äúhelp‚Äù and was chosen because this file contains the help text for the WM program. DIR uses colons to delimit one column of files from the others.&lt;/p&gt;
    &lt;p&gt;Now that you know that the COM files are executable commands, DIR basically gave you a list of what programs are available for you to run. But wait a moment! There‚Äôs CLS.COM and BYE.COM ‚Äì but where‚Äôs DIR.COM? Good catch. There‚Äôs actually two kinds of commands: those like CLS, which exists as COM file on a drive, and the others like DIR. The first kind are called transient commands, the others are built-ins like your Unix shell‚Äôs ‚Äòecho‚Äô command. DIR and a few others are part of the CCP and do not exist as separate programs. (Well, in CP/M 3 DIR.COM does exist, even though the command is a built-in, too! That‚Äôs because the transient offers additional functionality over the standard command. But like I said before, CP/M 3 is a little different.)&lt;/p&gt;
    &lt;head rend="h2"&gt;File Specification Basics&lt;/head&gt;
    &lt;p&gt;So far we have only executed programs which serve a pretty simple purpose and can thus work on their own. Time to take the next step. Let‚Äôs execute another program:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;dump&lt;/quote&gt;
    &lt;p&gt;The result is this error message:&lt;/p&gt;
    &lt;quote&gt;NO INPUT FILE PRESENT ON DISK&lt;/quote&gt;
    &lt;p&gt;DUMP is a tool to get a hex dump of a binary file and with the error message it is telling us that it needs an input file but couldn‚Äôt find it (in this case because we didn‚Äôt specify one!). So we need to give this program a file to operate on. Let‚Äôs have the program display a hex representation of itself. We can do that like this:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt; dump dump.com&lt;/quote&gt;
    &lt;p&gt;This time the result looks much more interesting (see screenshot).&lt;/p&gt;
    &lt;p&gt;Output of the DUMP command on itself&lt;/p&gt;
    &lt;p&gt;While admittedly the output is not terribly useful for a user without a programming background, this is still an important achievement. We‚Äôve not just executed another program, we‚Äôve executed it on a specific file. In our little command line, DUMP is the program name like always. However after that (delimited by a space character), we‚Äôve given it the so-called file specification (or filespec for short) to let the program know which file we want a hexadecimal representation of.&lt;/p&gt;
    &lt;p&gt;Now we will take a look at another command, TYPE. Don‚Äôt look for TYPE.COM, it‚Äôs another built-in. This is a simple command for displaying the contents of files (i. e. ‚Äútyping it out‚Äù to the console). If we run it without a filespec, this happens:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;type ?&lt;/quote&gt;
    &lt;p&gt;Unlike the more verbose DUMP, this program is fairly minimal in letting you know that you screwed up. The question mark tells you ‚Äúnope, doesn‚Äôt work that way!‚Äù and it‚Äôs on you to figure out what the problem is. That is, you have to know that TYPE requires a filespec to be able to type out the file‚Äôs contents, of course.&lt;/p&gt;
    &lt;p&gt;But why is it so minimal? Well, text strings are wasteful. The long error message that DUMP provides could have been used for several program instructions. And remember, that we are in an emulated environment where the machine has 64 kilobytes (!!) of memory, which is not a lot. To make matters worse, CP/M could run on machines with as little as 16k of RAM (versions 1.x at least). Since TYPE is a built-in and the whole CCP has to stay in memory all the time, putting anything in there that‚Äôs not strictly required, means stealing from the precious memory which would then no longer be available for other programs. Always keep in mind the extremely constrained environment that people had to make do with back in the day, and you‚Äôll understand most of the design decisions that seem rather weird from today‚Äôs perspective.&lt;/p&gt;
    &lt;p&gt;But since we figured out what we did wrong, let‚Äôs try again:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;type dump.com&lt;/quote&gt;
    &lt;p&gt;This results in the following output:&lt;/p&gt;
    &lt;quote&gt;!9"1W&amp;gt;2!QG}DrYQ|Õè}Õè#&amp;gt; exÕè#r* e&amp;gt; _&amp;gt; e “â0√ã7e}} :¬≥ ≥7_&amp;lt;2!~…Ø2|\\FILE DUMP VERSION 1.4$ NO INPUT FILE PRESENT ON DISK$&lt;/quote&gt;
    &lt;p&gt;Most of the file is unreadable garbage and some of it even consists of unprintable characters. This is why you normally use TYPE only for plain-text files and view binary files with DUMP. We can see two text strings here, though, one of which is the error message that we‚Äôve already encountered. Given how short the program is, you can see pretty well how wasteful those text strings are!&lt;/p&gt;
    &lt;p&gt;Some commands take more than one filespec. For example REN (‚ÄúREName‚Äù), another built-in. It allows you to change the name of an existing file to another. One CP/M quirk that you have to be aware of, is that it borrowed the notation from a line of DEC operating systems. It doesn‚Äôt copy / rename file 1 TO file 2 as you‚Äôre probably used to. Source and destination are inverted, so you copy / rename file 1 FROM file 2.&lt;/p&gt;
    &lt;p&gt;Let‚Äôs see what REN does when you give it only one filespec:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;ren wm.hlp FILE EXISTS&lt;/quote&gt;
    &lt;p&gt;The command took the information that it had, tried to rename the file to itself ‚Äì and couldn‚Äôt do that because, of course, that file‚Äôs name is already taken. Here‚Äôs how to rename the file to RENAME.TST (new name) from the file WM.HLP (old name):&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;ren rename.tst=wm.hlp&lt;/quote&gt;
    &lt;p&gt;The equals character is required as the separator of the two filespecs. This command line doesn‚Äôt output any error, which in this case means that it succeeded. Feel free to check it with DIR, before we revert what we just did:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;ren wm.hlp=rename.tst&lt;/quote&gt;
    &lt;head rend="h2"&gt;More on Filespecs&lt;/head&gt;
    &lt;p&gt;Some commands like DIR can work both with and without a filespec. We‚Äôve only done the latter so far, so it‚Äôs time to give the other option a try:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;dir dump.com A: DUMP COM&lt;/quote&gt;
    &lt;p&gt;This will make DIR only display the file that we asked for instead of the whole list. What is this form of DIR good for? Just to check whether a specific file exists? No, there‚Äôs a much better use for it. But to understand that, we need to know a bit more about file specifications.&lt;/p&gt;
    &lt;p&gt;So far we have only used what CP/M calls unambiguous filespecs aka. unambiguous file references aka. unambiguous filenames (ufn), which refer to one particular file only. That means we‚Äôve always used exact names with our commands so far. CP/M supports two kinds of wildcards, though, the question mark and the asterisk. You can use these to construct ambiguous filespecs aka. ambiguous file references aka. ambiguous filenames (afn) which can potentially match several files.&lt;/p&gt;
    &lt;p&gt;A question mark means any character. For example we could modify the previous command line slightly like this:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;dir dump.?om A: DUMP COM&lt;/quote&gt;
    &lt;p&gt;The output is the same, because DUMP.COM is the only file in our directory that matched the afs. But let‚Äôs assume there were also files such as DUMP.BOM, DUMP.LOM and so on ‚Äì in that case the afs would match them, too, and DIR would display all of them. You can use multiple wildcards in a filespec, so for example DUM?.C?M would still match our DUMP.COM file but also other possible files like DUMB.CIM and so on.&lt;/p&gt;
    &lt;p&gt;The asterisk is even more powerful; it doesn‚Äôt match a single character at that position, but translates to anything. For example *.COM means ‚Äúany filename as long as the file has a type of COM‚Äù. You can use this to have DIR list all the available commands only and filter out any other files:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;dir *.com&lt;/quote&gt;
    &lt;p&gt;This will produce a list where our two UTL files and the HLP file are missing. You can also use something like A*.* to list all the files that begin with the letter A.&lt;/p&gt;
    &lt;p&gt;Combining these wildcards, you can do some pretty advanced but useful name matching. Think for a moment about what this example matches: ??G*.C* ‚Äì it matches all files which have a filename of three or more characters where the third one is a G and which has a filetype that starts with C.&lt;/p&gt;
    &lt;p&gt;By the way, when you run DIR without any filespec, that‚Äôs the same as if you run DIR *.* ‚Äì for the DIR command the universal filespec is the default.&lt;/p&gt;
    &lt;p&gt;Alright! Now for the last thing that you need to know about filespecs: they can consist of a third component in addition to the filename and type. Run these two commands and compare the output:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;dir A&amp;gt;dir a:&lt;/quote&gt;
    &lt;p&gt;Hey, there‚Äôs the a: finally. And yes, the output is identical. Try another one, before we talk about what this does:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;dir a:*.*&lt;/quote&gt;
    &lt;p&gt;It‚Äôs exactly the same again! Okay, let‚Äôs take one step back and take a look at the prompt that we see all the time: A&amp;gt;. With the greater than character, the CCP tells you that it‚Äôs ready to let you input a command. But what‚Äôs the A all about? It refers to what CP/M calls the logged-on disk. It let‚Äôs you know that disk drive A is the one it will assume commands refer to unless told otherwise.&lt;/p&gt;
    &lt;p&gt;And that‚Äôs what we did with the A: ‚Äì we requested DIR to list the files on drive A. Since that‚Äôs implicitly assumed when we don‚Äôt state it, it didn‚Äôt make any difference. And the universal filespec (*.*) is the implicit default for DIR, so in our case all of these were identical.&lt;/p&gt;
    &lt;p&gt;So let‚Äôs try out accessing a different disk for the first time, shall we? CP/M 2.2 as it is provided by z80pack consists of two disks, so we have a drive B, too. How about taking a look at which additional programs are on there? We can do that like this:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;dir b:*.com&lt;/quote&gt;
    &lt;p&gt;Here‚Äôs the output:&lt;/p&gt;
    &lt;quote&gt;B: CLS COM : BYE COM : SPEED COM : SURVEY COM B: R COM : RESET COM : W COM&lt;/quote&gt;
    &lt;p&gt;As you can see, for convenience, there‚Äôs CLS.COM and BYE.COM on there, too, but also some additional programs that we haven‚Äôt seen, yet.&lt;/p&gt;
    &lt;head rend="h2"&gt;Drives&lt;/head&gt;
    &lt;p&gt;Since we‚Äôre on the matter, anyways, let‚Äôs talk about drives next. A useful command that we haven‚Äôt used, yet, is STAT (from STATus). You can use it to find out how much space remains on a certain disk. Let‚Äôs check that for both drives:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;stat a: Bytes Remaining On A: 11k&lt;/quote&gt;
    &lt;quote&gt;A&amp;gt;stat b: Bytes Remaining On B: 168k&lt;/quote&gt;
    &lt;p&gt;Seems like drive A is somewhat short on space while on B there‚Äôs still a lot of room for additional files. If we want to examine the programs on drive B, for example R.COM, we can do this:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;dump b:r.com&lt;/quote&gt;
    &lt;p&gt;However it‚Äôs a bit annoying to always have to use the full filespec including the drive, right? And that‚Äôs why the logged-on drive can be changed. We want to do some work mostly on drive B next, so let‚Äôs do that. It‚Äôs as easy as this:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;B:&lt;/quote&gt;
    &lt;p&gt;This will change the prompt to B&amp;gt; to let you know that now drive B is the default disk. If you for example run DIR without a filespec now, you‚Äôll get a list of files on that drive until you change back. Let‚Äôs try to get a hex dump of one of the other programs on this drive:&lt;/p&gt;
    &lt;quote&gt;B&amp;gt;dump w.com DUMP?&lt;/quote&gt;
    &lt;p&gt;Huh? What‚Äôs this? Well, the CCP let‚Äôs you know that it has no idea what you‚Äôre talking about. Remember that unlike DIR the DUMP command is a transient. It‚Äôs on drive A and it was readily available so far because that drive was the logged-on default. Now we‚Äôre on drive B and there is no DUMP.COM there! So to get the hex dump that we were looking for, we can do this:&lt;/p&gt;
    &lt;quote&gt;B&amp;gt;a:dump w.com&lt;/quote&gt;
    &lt;p&gt;That works! But while we don‚Äôt have to include B: for the filespec anymore, now we have to include A: to run the command‚Ä¶ So we have merely traded one little headache for another. But there‚Äôs a solution to this, of course! Let‚Äôs take a look at STAT again. It is not only able to tell you about the remaining space on a disk, it can also give you information about a file. Let‚Äôs use it to take a look at DUMP.COM on drive A:&lt;/p&gt;
    &lt;quote&gt;B&amp;gt;a:stat a:dump.com Recs Bytes Ext Acc 3 1k 1 R/W A:DUMP.COM Bytes Remaining On A: 11k&lt;/quote&gt;
    &lt;p&gt;Okay, looks like the file takes up 3 records in the filesystem which is equivalent to a size of 1k. That‚Äôs a fairly small program and we have more than enough space to simply copy it over to drive B. That‚Äôs what we will use PIP (from ‚ÄúPeripheral Interchange Program‚Äù) for. Remember the syntax of REN? For PIP it‚Äôs similar and unlike REN it can actually copy files rather than renaming them and supports doing so across different devices as well. Here‚Äôs how we copy over DUMP.COM from drive A:&lt;/p&gt;
    &lt;quote&gt;B&amp;gt;a:pip b:dump.com=a:dump.com&lt;/quote&gt;
    &lt;p&gt;Think about this command line for a second. Do you see which part of a filespec is unnecessary? Exactly, since we have drive B logged-on, we could also have used A:PIP DUMP.COM=A:DUMP.COM instead for the same result. Check with DIR whether the file was copied over if you wish. Now we can simply run the program from the current disk which is much more convenient:&lt;/p&gt;
    &lt;quote&gt;B&amp;gt;dump w.com&lt;/quote&gt;
    &lt;p&gt;Great! Now let‚Äôs assume we‚Äôre done with exploring programs with DUMP and are eventually running out of space. We need to clean up now and then. Removing files is what the ERA (from ‚ÄúERAse‚Äù) command is good at. To get rid of our additional DUMP.COM on the current drive, we can issue the following commands:&lt;/p&gt;
    &lt;quote&gt;B&amp;gt;dir dump.com B: DUMP COM B&amp;gt;era dump.com B&amp;gt;dir dump.com NO FILE&lt;/quote&gt;
    &lt;p&gt;That‚Äôs 1k of space reclaimed. It may not sound like much, but as we all know, even small files do add up. Oh, and you cannot only run out of space on a drive. You can also run out directory entries! CP/M 2.2 supports up to 64 files on any drive, which is a lot of files, but at the same time not an exceptionally high limit, either.&lt;/p&gt;
    &lt;head rend="h2"&gt;Control Characters&lt;/head&gt;
    &lt;p&gt;Let‚Äôs change the logged-on drive back to A now:&lt;/p&gt;
    &lt;quote&gt;B&amp;gt;a:&lt;/quote&gt;
    &lt;p&gt;Next we‚Äôre going to use STAT again but on its own rather than on a drive or a file:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;stat A: R/W, Space: 11k B: R/W, Space: 168k&lt;/quote&gt;
    &lt;p&gt;This is pretty useful for getting a quick overview. Keep in mind, though, that it will only display information about drives that you have accessed in your current session! If you use STAT the next time after you just started the emulator, it won‚Äôt know about drive B, yet. Now let‚Äôs do something stupid and try to list files on a non-existing drive:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;dir c: Bdos Err On C: Bad Sector&lt;/quote&gt;
    &lt;p&gt;BDOS (or Basic Disk Operating System) is the OS component responsible for disks and filesystems. And it rightfully complains that there‚Äôs an error on drive C. You cannot simply acknowledge the error or something; if you press ENTER, the error is simply repeated. The system is in a state from which it cannot recover.&lt;/p&gt;
    &lt;p&gt;What you have to do in this case is sending the ^C control character (press CTRL-C to produce it). This will make CP/M perform a warm start and you get the CCP prompt back. Never try to change the logged-on drive to a none-existing one, though! In that case a warm start is not enough and you will have to kill the emulator from your host system. Historically warm starts were also required if you physically changed the diskette in a drive.&lt;/p&gt;
    &lt;p&gt;There‚Äôs a couple of other control sequences that are useful to know about. For example if you typed a longer command line and change your mind (or mistyped something right at the beginning), it is useful to press CTRL-U which invalidates the current command line. You can simply press ENTER afterwards and the CCP will ignore what you typed. CP/M 2.x supports a more useful control character, though, CTRL-X, which will simply erase the current command line, allowing you to try again right away.&lt;/p&gt;
    &lt;p&gt;If you are for example using TYPE to display a longer text file, the contents will rush by on the screen. In case you‚Äôre interested not in the end of the file but in some section in the middle, you‚Äôre supposed to press CTRL-S to suspend further printing until another key is pressed. This may have worked back in the day (and you can probably still use it if you configure the emulator to run at a slower speed), but it‚Äôs not a particularly great mechanic for today.&lt;/p&gt;
    &lt;p&gt;CTRL-Z means end-of-input. It‚Äôs not used on the command line but some programs like the editor ED make use of it.&lt;/p&gt;
    &lt;p&gt;There‚Äôs a few more, but the last one that I want to cover is CTRL-E. Sending this control character causes a carriage return without executing the command line. This is useful if you have to enter a very long command line which won‚Äôt fit on a single line. Now this might surprise you since so far all of our command lines have been rather short. But they don‚Äôt necessarily have to be! For example, PIP can be used to concatenate multiple files into one. If you‚Äôve got a lot of long filenames, the resulting command line might run over the terminal width.&lt;/p&gt;
    &lt;head rend="h2"&gt;Other Things to be Aware of&lt;/head&gt;
    &lt;p&gt;We‚Äôve already covered a bit of ground here and you should have a good idea of basic CP/M usage that you can build upon. But while the known unknowns can be annoying, it‚Äôs usually the unknown unknowns that actually bite you. So let‚Äôs at least convert some of the latter to the former, shall we?&lt;/p&gt;
    &lt;p&gt;CP/M 2.x supports 16 so-called user areas, which can be used to organize files, so in a way the previously made statement about the filesystem being flat with all files in one location is not entirely correct. It‚Äôs good to know that they exist, but by default only user area 0 is being used and that‚Äôs what you may want to stick with.&lt;/p&gt;
    &lt;p&gt;What is typed after a command name is called a command trail in CP/M lingo. We‚Äôve only used filespecs here, but there‚Äôs another thing: parameters. These don‚Äôt refer to files but modify the behavior of the command. Unfortunately, they are not standardized! For example, STAT uses dollar notation and PIP expects parameters in square brackets. Here‚Äôs a few examples:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;stat b:speed.c $R/O&lt;/quote&gt;
    &lt;p&gt;This instructs STAT to set the read-only flag for the file instead of displaying file information. STAT also accepts a few special keywords, too, like DSK: which will make it display detailed disk information (see screenshot).&lt;/p&gt;
    &lt;p&gt;Output of the STAT command displaying disk information&lt;/p&gt;
    &lt;p&gt;The trouble with PIP is that it can only copy things FROM a different user area and not TO one. This means that when you switch the user area, you need to have PIP available there to copy something else over. But how do you do that without PIP? Well, first you need to load the program into memory. The debugger DDT can do that for us, but then instead of actually debugging it, we‚Äôre leaving the application by issuing ‚ÄúG0‚Äù at its dash prompt.&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;ddt pip.com DDT VERS 2.2 NEXT PC 1E00 0100 -g0&lt;/quote&gt;
    &lt;p&gt;PIP is now loaded into RAM, and DDT was nice enough to tell us that the next free memory address is 1E00, which in turn means that PIP occupies 1C memory pages. Converted to decimal, that‚Äôs 29 pages. Knowing that, we can change to another user area, e. g. number 8 using the USER build-in:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;user 8 A&amp;gt;dir NO FILE&lt;/quote&gt;
    &lt;p&gt;As you can see, it‚Äôs empty. Now we can use the build-in command SAVE to write the contents of the 29 memory pages into a file:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;save 29 pip.com A&amp;gt;dir A: PIP COM&lt;/quote&gt;
    &lt;p&gt;Here‚Äôs the result: we have PIP! Which means we can use it to copy over another file to this user area, using the G parameter for PIP with user area number 0 from where we want to copy it:&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;pip stat.com=stat.com[g0] DISK WRITE ERROR: =STAT.COM[G0]&lt;/quote&gt;
    &lt;p&gt;Oops. Or rather, we can‚Äôt. Got any guesses why that is?&lt;/p&gt;
    &lt;quote&gt;A&amp;gt;user 0 A&amp;gt;stat stat.com Recs Bytes Ext Acc 40 5k 1 R/W A:STAT.COM Bytes Remaining On A: 3k&lt;/quote&gt;
    &lt;p&gt;Of course! The STAT program we wanted to copy over is 5k in size, but the drive has only 3k left‚Ä¶&lt;/p&gt;
    &lt;p&gt;Having seen these limitations, you probably understand why I suggest not bothering with user areas as you‚Äôre getting started with CP/M. I wanted to at least touch on them, though, so you don‚Äôt get the feeling that you‚Äôre missing out!&lt;/p&gt;
    &lt;p&gt;Another thing that you should know exists are devices. CP/M reserves some three-letter abbreviations for device names. If you ever wondered, why to this day you cannot create a file called CON in Windows, that‚Äôs because it‚Äôs CP/M‚Äôs reserved device name for the console. PUN is for a paper punch, RDR is a paper tape reader, LST is for a printer and so on. You could use STAT to switch input or output to different devices and PIP supports them, too. This allowed you to read files from the RDR or print a file by copying it to LST.&lt;/p&gt;
    &lt;p&gt;With this information you should be good to generally find your way around in CP/M. You cannot really do much with it, yet, but we‚Äôll take care of that another time. Tune in again if you like.&lt;/p&gt;
    &lt;head rend="h2"&gt;What‚Äôs next?&lt;/head&gt;
    &lt;p&gt;I haven‚Äôt decided whether I‚Äôll write another CP/M article next (it would make sense, though) or if it will be something else. In autumn, I definitely want to get back to my CBSD series, though!&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45107249</guid></item><item><title>The Kafka Replication Protocol with KIP-966</title><link>https://github.com/Vanlightly/kafka-tlaplus/blob/main/kafka_data_replication/kraft/kip-966/description/0_kafka_replication_protocol.md</link><description></description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45107353</guid></item><item><title>Show HN: Amber ‚Äì better Beeper, a modern all-in-one messenger</title><link>https://useamber.app/</link><description>&lt;doc fingerprint="2f512b770b2b50c2"&gt;
  &lt;main&gt;
    &lt;p&gt;Amber&lt;/p&gt;
    &lt;head rend="h1"&gt;The ultimate AI-enabled all-in-one messenger and personal CRM&lt;/head&gt;
    &lt;p&gt;iMessage, Whatsapp, and Telegram seamlessly in one place&lt;/p&gt;
    &lt;head rend="h3"&gt;Operate your relationships at the speed of thought&lt;/head&gt;
    &lt;p&gt;All messages in one place&lt;/p&gt;
    &lt;p&gt;iMessage, Whatsapp, Telegram in one place.&lt;/p&gt;
    &lt;p&gt;√∞¬® Split Inboxes&lt;/p&gt;
    &lt;p&gt;Organize conversations by projects, communities, context, and remove all distractions.&lt;/p&gt;
    &lt;p&gt;√¢¬® AI Assistance&lt;/p&gt;
    &lt;p&gt;AI suggested replies and search.&lt;/p&gt;
    &lt;p&gt;√¢¬∞ Send Later &amp;amp; Reminders&lt;/p&gt;
    &lt;p&gt;Have perfect timing with scheduling and reminders.&lt;/p&gt;
    &lt;p&gt;√¢ Command Bar &amp;amp; Shortcuts&lt;/p&gt;
    &lt;p&gt;Every action is at your fingertips. Navigate the app like a pro from the first minute.&lt;/p&gt;
    &lt;p&gt;√∞ Secure Chats&lt;/p&gt;
    &lt;p&gt;All your messages are end-to-end encrypted and stored on device. They go straight from your device to the network following the latest security standards.&lt;/p&gt;
    &lt;p&gt;√∞ A lightweight CRM&lt;/p&gt;
    &lt;p&gt;Never forget a crucial detail about anyone.&lt;/p&gt;
    &lt;p&gt;√¢ Mark Done &amp;amp; Ninja Mode&lt;/p&gt;
    &lt;p&gt;The messages are read only when you mark them as read. The recipient doesn't know if you've read it until you say so.&lt;/p&gt;
    &lt;head rend="h2"&gt;Become a superconnector&lt;/head&gt;
    &lt;p&gt;We spend hours on messages. Yet we often reply late, sometimes completely forget to reply. We then end up losing deals, opportunities for connection, and missing connections.&lt;/p&gt;
    &lt;p&gt;It's not anybody's fault. Messaging itself has not changed a decade √¢ it has just gotten messier. Our conversations are scattered across different social networks with distinct UI full of distractions. Finding the right thread takes minutes. The context and the small details are forgotten.&lt;lb/&gt;Meanwhile, some people manage thousands of relationships and only grow stronger connections. What√¢s their secret?&lt;/p&gt;
    &lt;p&gt;John D. Rockefeller had a rolodex filled with contact details of 100,000 people. Marlon Brando, Holly Solomon, Akio Morita, David Ogilvy √¢ each relied on personal CRMs and skilled assistants to maintain and deepen their networks. They had systems. They had tools.&lt;/p&gt;
    &lt;p&gt;With the arrival of the latest AI models and well-crafted software, these capabilities are now within everyone√¢s reach.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45107364</guid></item></channel></rss>