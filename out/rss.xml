<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Hacker News: Front Page</title><link>https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml</link><description>Hacker News RSS</description><atom:link href="https://raw.githubusercontent.com/Prabesh01/hnrss-content-extract/refs/heads/main/out/rss.xml" rel="self"/><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><language>en</language><lastBuildDate>Thu, 09 Oct 2025 02:16:57 +0000</lastBuildDate><item><title>Sora, AI Bicycles, and Meta Disruption</title><link>https://stratechery.com/2025/sora-ai-bicycles-and-meta-disruption/</link><description>&lt;doc fingerprint="3493991100b12b9b"&gt;
  &lt;main&gt;
    &lt;p&gt;Listen to this post:&lt;/p&gt;
    &lt;p&gt;The App Store charts tell the story, at least for the first week of AI-generated video apps:&lt;/p&gt;
    &lt;p&gt;This doesn’t, somewhat embarrassingly, match my initial impressions: I liked the Vibes addition to the MetaAI app and was somewhat cool on Sora. I spent much of last week’s episode of Sharp Tech exploring why my initial impressions were so off base, and I think M.G. Siegler — who was sucked into Sora immediately — captures a few of them in Sora’s Slop Hits Different:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Anyway, what’s different, and what I underestimated about Sora, is that the AI content here is not just randomly generated things. It’s content that’s either loaded with “cameos” from your connections or it’s “real” world content that’s, well, hilarious. Not all of it, of course. But a lot of it! In this regard, it’s really not too dissimilar from TikTok — and back in the day, Vine! This is a lot more like those social networks but with the main difference being that it’s a lot easier to create such content thanks to AI.&lt;/p&gt;
      &lt;p&gt;I think that’s the real revelation here. It’s less about consumption and more about creation. I previously wrote about how I was an early investor in Vine in part because it felt like it could be analogous to Instagram. Thanks in large part to filters, that app made it easy for anyone to think they were good enough to be a photographer. It didn’t matter if they were or not, they thought they were — I was one of them — so everyone posted their photos. Vine felt like it could have been that for video thanks to its clever tap-to-record mechanism. But actually, it became a network for a lot of really talented amateurs to figure out a new format for funny videos on the internet. When Twitter acquired the company and dropped the ball, TikTok took that idea and scaled it (thanks to ByteDance paying um, Meta billions of dollars for distribution, and their own very smart algorithms).&lt;/p&gt;
      &lt;p&gt;In a way, Sora feels like enabling everyone to be a TikTok creator.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;I feel blessed for a whole host of reasons, many of them related to the fact I’ve been able to carve out a career as a creator. Sure, I call myself an analyst, and I write about primarily big tech companies, but one thing I realized over the years is that the success of Stratechery is tied to it being a creative endeavor; there have been a lot of analysts over the years who have launched similar sites, but what was often missing was the narrative element. The best Articles on Stratechery tell a story, with a beginning, middle, and end, and the analysis is along for the ride; analysis alone doesn’t move the needle.&lt;/p&gt;
    &lt;p&gt;That I tell stories is itself a function of the way I think: I have a larger meta story in my head about how the world works, and I’m always adding and augmenting that story; that’s why, in various interviews, I’ve noted that being wrong is often the most inspiring (albeit painful) place to be. That means my story is incomplete, and I need to deepen my understanding of the world I’m seeking to chronicle. I certainly have that opportunity right now.&lt;/p&gt;
    &lt;head rend="h3"&gt;My Creativity Blindspot&lt;/head&gt;
    &lt;p&gt;This is what I wrote in my Update about Sora:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Indeed, it feels like each company has an entirely different target audience: YouTube is making tools for creators, Meta is building the ultimate lean back dream-like experience, and OpenAI is making an app that is, in my estimation, the easiest for normal people to use.&lt;/p&gt;
      &lt;p&gt;In this new competition, I prefer the Meta experience, by a significant margin, and the reason why goes back to one of the oldest axioms in technology: the 90/9/1 rule.&lt;/p&gt;
      &lt;item&gt;90% of users consume&lt;/item&gt;
      &lt;item&gt;9% of users edit/distribute&lt;/item&gt;
      &lt;item&gt;1% of users create&lt;/item&gt;
      &lt;p&gt;If you were to categorize the target market of these three AI video entrants, you might say that YouTube is focused on the 1% of creators; OpenAI is focused on the 9% of editors/distributors; Meta is focused on the 90% of users who consume. Speaking as someone who is, at least for now, more interested in consuming AI content than in distributing or creating it, I find Meta’s Vibes app genuinely compelling; the Sora app feels like a parlor trick, if I’m being honest, and I tired of my feed pretty quickly. I’m going to refrain on passing judgment on YouTube, given that my current primary YouTube use case is watching vocal coaches break down songs from KPop Demon Hunters.&lt;/p&gt;
      &lt;p&gt;I honestly have no idea if my evaluation of these apps is broadly applicable; as I’ve noted repeatedly, I’m hesitant to make any pronouncements about what resonates with society broadly given that I am the weirdo in the room. Still, I do think it’s striking how this target market evaluation tracks with the companies themselves: YouTube has always prioritized creators, while OpenAI’s business model is predicated on people actively using AI; it’s Meta that has stayed focused on the silent majority that simply consumes, and as a silent consumer, I still like Vibes!&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;As I noted at the beginning, the verdict is in, and my evaluation of these apps is not broadly applicable. Way more people like Sora than Vibes, and OpenAI has another viral hit. What I hear from people who love the app, however, is very much in line with what Siegler wrote: yes, they are browsing the feed, but the real lure is losing surprisingly large amounts of time making content — Sora lets them be a content creator.&lt;/p&gt;
    &lt;p&gt;This was a blind spot for me because I don’t have that itch! I’m creating content constantly — three Articles/Updates, an Interview, and three podcast episodes a week is enough for me, thank you very much. When I am vegging out on my phone, I want to passively consume, and I personally found the Vibes mix of fantastical environments and beautiful visages calming and inspiring; almost everyone else feels different:&lt;/p&gt;
    &lt;p&gt;I had to laugh at this because I’ve spent way too much time watching Apple’s Aerial Video screensavers; apparently my tastes are consistent! Beyond that, however, is a second blind spot: how much of the 90/9/1 rule is a law of the universe, versus a manifestation of barriers when it comes to creation? At the risk of sounding like a snob, have I become the sort of 1%-er who is totally out of touch?&lt;/p&gt;
    &lt;head rend="h3"&gt;The AI Bicycle&lt;/head&gt;
    &lt;p&gt;Back in 2022, when AI image generation was just starting to get good, I wrote about The AI Unbundling and the idea propagation chain:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;The evolution of human communication has been about removing whatever bottleneck is in this value chain. Before humans could write, information could only be conveyed orally; that meant that the creation, vocalization, delivery, and consumption of an idea were all one-and-the-same. Writing, though, unbundled consumption, increasing the number of people who could consume an idea.&lt;/p&gt;
      &lt;p&gt;Now the new bottleneck was duplication: to reach more people whatever was written had to be painstakingly duplicated by hand, which dramatically limited what ideas were recorded and preserved. The printing press removed this bottleneck, dramatically increasing the number of ideas that could be economically distributed:&lt;/p&gt;
      &lt;p&gt;The new bottleneck was distribution, which is to say this was the new place to make money; thus the aforementioned profitability of newspapers. That bottleneck, though, was removed by the Internet, which made distribution free and available to anyone.&lt;/p&gt;
      &lt;p&gt;What remains is one final bundle: the creation and substantiation of an idea. To use myself as an example, I have plenty of ideas, and thanks to the Internet, the ability to distribute them around the globe; however, I still need to write them down, just as an artist needs to create an image, or a musician needs to write a song. What is becoming increasingly clear, though, is that this too is a bottleneck that is on the verge of being removed.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;This is what was unlocked by Sora: all sorts of people without the time or inclination or skills or equipment to make videos could suddenly do just that — and they absolutely loved it. And why wouldn’t they? To be creative is to be truly human — to actually think of something yourself, instead of simply passively consuming — and AI makes creativity as accessible as a simple prompt.&lt;/p&gt;
    &lt;p&gt;I think this is pretty remarkable, so much so that I’ve done a complete 180 on Sora: this new app from OpenAI may be the single most exciting manifestation of AI yet, and the most encouraging in terms of AI’s impact on humans. Everyone — including lots of people in my Sora feed — are leaning into the concept of AI slop, which I get: we are looking at a world of infinite machine-generated content, and a lot of it is going to be terrible.&lt;/p&gt;
    &lt;p&gt;At the same time, how incredible is it to give everyone with an iPhone a creative outlet? It reminds me of one of my favorite Steve Jobs moments, just before he died, at the introduction of the iPad 2; I wrote about it in 2024’s The Great Flattening:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;My favorite moment in that keynote — one of my favorite Steve Jobs’ keynote moments ever, in fact — was the introduction of GarageBand. You can watch the entire introduction and demo, but the part that stands out in my memory is Jobs — clearly sick, in retrospect — moved by what the company had just produced:&lt;/p&gt;
      &lt;p&gt;I’m blown away with this stuff. Playing your own instruments, or using the smart instruments, anyone can make music now, in something that’s this thick and weighs 1.3 pounds. It’s unbelievable. GarageBand for iPad. Great set of features — again, this is no toy. This is something you can really use for real work. This is something that, I cannot tell you, how many hours teenagers are going to spend making music with this, and teaching themselves about music with this.&lt;/p&gt;
      &lt;p&gt;Jobs wasn’t wrong: global hits have originated on GarageBand, and undoubtedly many more hours of (mostly terrible, if my personal experience is any indication) amateur experimentation. Why I think this demo was so personally meaningful for Jobs, though, is that not only was GarageBand about music, one of his deepest passions, but it was also a manifestation of his life’s work: creating a bicycle for the mind.&lt;/p&gt;
      &lt;p&gt;I remember reading an Article when I was about 12 years old, I think it might have been in Scientific American, where they measured the efficiency of locomotion for all these species on planet earth. How many kilocalories did they expend to get from point A to point B, and the condor won: it came in at the top of the list, surpassed everything else. And humans came in about a third of the way down the list, which was not such a great showing for the crown of creation.&lt;/p&gt;
      &lt;p&gt;But somebody there had the imagination to test the efficiency of a human riding a bicycle. Human riding a bicycle blew away the condor, all the way off the top of the list. And it made a really big impression on me that we humans are tool builders, and that we can fashion tools that amplify these inherent abilities that we have to spectacular magnitudes, and so for me a computer has always been a bicycle of the mind, something that takes us far beyond our inherent abilities.&lt;/p&gt;
      &lt;p&gt;I think we’re just at the early stages of this tool, very early stages, and we’ve come only a very short distance, and it’s still in its formation, but already we’ve seen enormous changes, but I think that’s nothing compared to what’s coming in the next 100 years.&lt;/p&gt;
      &lt;p&gt;In Jobs’ view of the world, teenagers the world over are potential musicians, who might not be able to afford a piano or guitar or trumpet; if, though, they can get an iPad — now even thinner and lighter! — they can have access to everything they need. In this view “There’s an app for that” is profoundly empowering.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Well, now there’s an AI for that, and it’s accessible to everyone. And yes, I get the objections. I slave over these posts, thinking carefully about the structure and every word choice; it seems cheap to ask an LLM to generate the same. I’m certain that artists feel the same about AI images, or musicians about AI music, or YouTube and TikTok creators about Sora videos; what about the craft?&lt;/p&gt;
    &lt;p&gt;That, though, is an easy concern to have when you already have a creative outlet; it’s also easy to make the case that more content means more compelling content to consume, even if the percentage of what is great is very small.&lt;/p&gt;
    &lt;p&gt;What I didn’t fully appreciate, however, is what falls in the middle: the fact that so many more people get to be creators, and what a blessing that is. How many people have had ideas in their head, yet were incapable of substantiating them, and now can? I myself benefited greatly from the last unbundling — the ability for anyone to distribute content; why should I begrudge the latest unbundling, and the many more people who will benefit from AI substantiation of their creative impulses? Bicycles for all!&lt;/p&gt;
    &lt;head rend="h3"&gt;Instagram’s Social Umbrella&lt;/head&gt;
    &lt;p&gt;Siegler in his post discussed how he once thought Vine could be like Instagram, which made it easy to feel like a good photographer with its filters, but that was only step one; Chris Dixon described Instagram’s evolution as Come for the Tool, Stay for the Network:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;A popular strategy for bootstrapping networks is what I like to call “come for the tool, stay for the network.” The idea is to initially attract users with a single-player tool and then, over time, get them to participate in a network. The tool helps get to initial critical mass. The network creates the long term value for users, and defensibility for the company.&lt;/p&gt;
      &lt;p&gt;Here are two historical examples: 1) Delicious. The single-player tool was a cloud service for your bookmarks. The multiplayer network was a tagging system for discovering and sharing links. 2) Instagram. Instagram’s initial hook was the innovative photo filters. At the time some other apps like Hipstamatic had filters but you had to pay for them. Instagram also made it easy to share your photos on other networks like Facebook and Twitter. But you could also share on Instagram’s network, which of course became the preferred way to use Instagram over time.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;Dixon wrote that post in 2015, and Instagram has since gone much further than that, as I documented in 2021’s Instagram’s Evolution:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;There was the tool to network evolution that Dixon talked about.&lt;/item&gt;
      &lt;item&gt;The second evolution was the addition of video.&lt;/item&gt;
      &lt;item&gt;The third evolution was the introduction of the algorithmic feed.&lt;/item&gt;
      &lt;item&gt;The fourth evolution was Stories, driven by competition with Snapchat.&lt;/item&gt;
      &lt;item&gt;The fifth evolution was what I was writing about in that Article: the commitment to short-form video, driven by competition with TikTok.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;That last evolution is fully baked in at this point; late last month Instagram announced that it was changing Instagram’s navigation to focus on private messaging and Reels; I didn’t explicitly cover the 2013 addition of Instagram Direct, but it certainly is the case that messaging is where social networking happens today. What is public is pure entertainment, where the content you see is pulled from across the network and tailored for you specifically.&lt;/p&gt;
    &lt;p&gt;I think this evolution was both necessary and inevitable; I first wrote that Facebook needed to move in this direction in 2015’s Facebook and the Feed:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Consider Facebook’s smartest acquisition, Instagram. The photo-sharing service is valuable because it is a network, but it initially got traction because of filters. Sometimes what gets you started is only a lever to what makes you valuable. What, though, lies beyond the network? That was Facebook’s starting point, and I think the answer to what lies beyond is clear: the entire online experience of over a billion people. Will Facebook seek to protect its network — and Zuckerberg’s vision — or make a play to be the television of mobile?&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;It wasn’t until TikTok peeled off a huge amount of attention that Facebook finally realized that viewing itself as a social network was actually limiting its potential. If the goal was to monopolize user attention — the only scarce resource on the Internet — then artificially limiting what people saw to their social network was to fight with one hand tied behind your back; TikTok was taking share not just because of its format, but also because it wasn’t really a social network at all.&lt;/p&gt;
    &lt;p&gt;This is all interesting context for how OpenAI characterized Sora in their introductory post: it’s a social app.&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Today, we’re launching a new social iOS app just called “Sora,” powered by Sora 2. Inside the app, you can create, remix each other’s generations, discover new videos in a customizable Sora feed, and bring yourself or your friends in via cameos. With cameos, you can drop yourself straight into any Sora scene with remarkable fidelity after a short one-time video-and-audio recording in the app to verify your identity and capture your likeness…&lt;/p&gt;
      &lt;p&gt;This app is made to be used with your friends. Overwhelming feedback from testers is that cameos are what make this feel different and fun to use — you have to try it to really get it, but it is a new and unique way to communicate with people. We’re rolling this out as an invite-based app to make sure you come in with your friends. At a time when all major platforms are moving away from the social graph, we think cameos will reinforce community.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;First, just because Meta needed to move beyond the social network doesn’t mean social networking isn’t still valuable, or appealing. As an analogy, consider the concept of a pricing umbrella: when something becomes more expensive, it opens up the market for a lower-priced competitor. In this case Instagram’s evolution has created a social umbrella: sure, Instagram content may be “better” by virtue of being pulled from anywhere, but that means there is now a space for a content app that is organized around friends.&lt;/p&gt;
    &lt;p&gt;Second, remember the creativity point above: one of the challenges of restricting Instagram content to just what your social network posted is that your social network may not post very many interesting things. That gap was initially filled by following influencers, but now Instagram simply goes out and finds what you are interested in without having to do anything. In Sora, however, your network is uniquely empowered to be creative, increasing the amount of interesting content in a network-mediated context (and, of course, Sora is also pulling from elsewhere as well to populate your feed).&lt;/p&gt;
    &lt;p&gt;What you’re seeing, if you squint, is disruption: Instagram has gone “up-market” in terms of content, leaving space for a new entrant; that new entrant, meanwhile, is not simply cheaper/smaller. Rather, it’s enabled by a new technological paradigm that lets it compete orthogonally with the incumbent. Granted, that new paradigm is very expensive, particularly compared to the content that Instagram gets for free, but the extent it restores value to your social network is notable.&lt;/p&gt;
    &lt;head rend="h3"&gt;Meta Concerns&lt;/head&gt;
    &lt;p&gt;I am on the record as being very bullish about the impact of AI on Meta’s business:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;It’s good for their ad business in the short, medium, and long-term (and YouTube’s as well).&lt;/item&gt;
      &lt;item&gt;More content benefits the company with the most popular distribution channels.&lt;/item&gt;
      &lt;item&gt;AI will be the key to unlocking both AR and VR.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The key to everything, however, is maintaining the hold Meta has on user attention, and the release of both Vibes and Sora has me seriously questioning point number two.&lt;/p&gt;
    &lt;p&gt;What I appreciate about both of these apps is the fact they are explicitly AI-content; I said in my Update about Vibes:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;One of the reasons why AI slop is so annoying is — paradoxically — the fact that a lot of it has gotten quite good. That means that when consuming content you have to continually be ascertaining if what you see is real or AI-generated; to put it in the terms of the Article I just quoted, you might want to lean back, but if you don’t want to be taken in or make a fool of yourself then you have to constantly be leaning forward to figure out what is or isn’t AI.&lt;/p&gt;
      &lt;p&gt;What this means for Vibes is the fact it is unapologetically and explicitly all AI is quite profound: it’s a true lean-back experience, where the fact none of it is real is a point of interest and — if Holz is right — inspiration and imagination. I find it quite relaxing to consume, in a way I don’t find almost any other feed on my phone.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;The reason this is problematic for Meta (and YouTube) is that I’m not sure the company can counter Sora — or any other AI-generated content app that appears — in the same way they countered Snapchat and TikTok. Both challengers introduced new formats — Stories in the case of Instagram, and short-form video in the case of TikTok — but the content was still produced by humans; that made it much more palatable to stuff those formats into Instagram.&lt;/p&gt;
    &lt;p&gt;AI might be different: Meta certainly has data on this question, but I could imagine a scenario where users are actually annoyed and turned off by mixing AI-generated content with human content — and because Instagram isn’t really a social network anymore, the fact that that content might be made by or include your friends might not be enough. Implicit in this observation is the fact that I don’t think that human content is going anywhere; there just might be a smaller percentage of time devoted to it, and that’s a problem for a company predicated on marshaling attention.&lt;/p&gt;
    &lt;p&gt;The second issue for Meta is that their AI capabilities simply don’t match OpenAI, or Google’s for that matter. It’s clear that Meta knows this is the case — look no further than this summer’s hiring spree and total overhaul of their AI approach — but creating something like Sora is a lot more difficult than copying Stories or short-form video. I imagine this shortcoming will be rectified, but Sora is in the market now.&lt;/p&gt;
    &lt;p&gt;I also think that it is fair to raise some questions about point three. I have been a vocal proponent of AI being the key to the Metaverse, but my tastes in content may not be very broadly applicable! I loved Vibes because to me it felt like virtual reality, but if it was virtual reality, and no one liked it, maybe the concept actually isn’t that appealing? Time will tell, but I do keep coming back to the social aspects of Sora: people like the real world, and they like people they know, and virtual reality in particular just might not be that broadly popular.&lt;/p&gt;
    &lt;p&gt;And, while I’m here, I continue to think that Meta’s recent financial success is not entirely organic:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;It turns out I was right last quarter that Meta had a lot of room to increase Reels monetization, but not just because they could target ads better (that was a part of it, as I noted above): rather, it turns out that short-form video is so addictive that Meta can simply drive more engagement — and thus more ad inventory — by pushing more of it. That’s impression driver number one — and the most important one. The second one is even more explicit: Meta simply started showing more ads to people (i.e. “ad load optimization”).&lt;/p&gt;
      &lt;p&gt;All of this ties back to where I started, about how Meta learned that you have to give investors short term results to get permission for long term investments. I don’t think it’s a coincidence that, in the same quarter where Meta decided to very publicly up its investment in the speculative “Superintelligence”, users got pushed more Reels and Facebook users in particular got shown more ads. The positive spin on this is that Meta has dials to turn; by the same token, investors who have flipped from intrinsically doubting Meta to intrinsically trusting them should realize that it was the pre-2022 Meta, the one that regularly voiced the importance of not pushing too many ads in order to preserve the user experience, that actually deserved the benefit of the doubt for growth that was purely organic. This last quarter is, to my mind, a bit more pre-determined.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;CEO Mark Zuckerberg framed the company’s new Personal Superintelligence like this:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;As profound as the abundance produced by AI may one day be, an even more meaningful impact on our lives will likely come from everyone having a personal superintelligence that helps you achieve your goals, create what you want to see in the world, experience any adventure, be a better friend to those you care about, and grow to become the person you aspire to be.&lt;/p&gt;
      &lt;p&gt;Meta’s vision is to bring personal superintelligence to everyone. We believe in putting this power in people’s hands to direct it towards what they value in their own lives.&lt;/p&gt;
      &lt;p&gt;This is distinct from others in the industry who believe superintelligence should be directed centrally towards automating all valuable work, and then humanity will live on a dole of its output. At Meta, we believe that people pursuing their individual aspirations is how we have always made progress expanding prosperity, science, health, and culture. This will be increasingly important in the future as well.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;I agree with the sentiment, but it’s worth being honest about today’s reality: Meta’s financial fortunes, at least for now, are in fact tied up in a centralized content engine that gives users “a dole of its output”; it’s nice from an investor perspective that Meta can turn the dials and get people to spend that much more time in Instagram. I for one can’t say that I feel particularly great when I’m done watching Reels for longer than I planned, and it’s certainly not a creative endeavor on my part — that’s for the content creators.&lt;/p&gt;
    &lt;p&gt;OpenAI, meanwhile, with both ChatGPT and Sora, is in fact placing easily accessible tools in people’s hands today, first with text and now with video. And, as I noted above, I actually find it exciting precisely because of the possibility that many more people are on the verge of discovering a creativity streak they didn’t even know they had, now that AI is available to substantiate it. So much Meta optimism is, paradoxically, pessimistic about the human condition; it may be the case that, to the extent that AI makes humans better, is the extent that Meta faces disruption.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45492977</guid><pubDate>Mon, 06 Oct 2025 16:17:15 +0000</pubDate></item><item><title>One-man campaign ravages EU 'Chat Control' bill</title><link>https://www.politico.eu/article/one-man-spam-campaign-ravages-eu-chat-control-bill-fight-chat-control/</link><description>&lt;doc fingerprint="7d9694e3ca051efe"&gt;
  &lt;main&gt;
    &lt;p&gt;BRUSSELS — A website set up by an unknown Dane over the course of one weekend in August is giving a massive headache to those trying to pass a European bill aimed at stopping child sexual abuse material from spreading online.&lt;/p&gt;
    &lt;p&gt;The website, called Fight Chat Control, was set up by Joachim, a 30-year-old software engineer living in Aalborg, Denmark. He made it after learning of a new attempt to approve a European Union proposal to fight child sexual abuse material (CSAM) — a bill seen by privacy activists as breaking encryption and leading to mass surveillance.&lt;/p&gt;
    &lt;p&gt;The site lets visitors compile a mass email warning about the bill and send it to national government officials, members of the European Parliament and others with ease. Since launching, it has broken the inboxes of MEPs and caused a stir in Brussels’ corridors of power.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45514433</guid><pubDate>Wed, 08 Oct 2025 10:26:05 +0000</pubDate></item><item><title>We found a bug in Go's ARM64 compiler</title><link>https://blog.cloudflare.com/how-we-found-a-bug-in-gos-arm64-compiler/</link><description>&lt;doc fingerprint="3b06c011ce263a54"&gt;
  &lt;main&gt;
    &lt;div&gt;
      &lt;p&gt;Every second, 84 million HTTP requests are hitting Cloudflare across our fleet of data centers in 330 cities. It means that even the rarest of bugs can show up frequently. In fact, it was our scale that recently led us to discover a bug in Go's arm64 compiler which causes a race condition in the generated code.&lt;/p&gt;
      &lt;p&gt;This post breaks down how we first encountered the bug, investigated it, and ultimately drove to the root cause.&lt;/p&gt;
      &lt;div&gt;
        &lt;head rend="h2"&gt;Investigating a strange panic&lt;/head&gt;
      &lt;/div&gt;
      &lt;p&gt;We run a service in our network which configures the kernel to handle traffic for some products like Magic Transit and Magic WAN. Our monitoring watches this closely, and it started to observe very sporadic panics on arm64 machines.&lt;/p&gt;
      &lt;p&gt;We first saw one with a fatal error stating that traceback did not unwind completely. That error suggests that invariants were violated when traversing the stack, likely because of stack corruption. After a brief investigation we decided that it was probably rare stack memory corruption. This was a largely idle control plane service where unplanned restarts have negligible impact, and so we felt that following up was not a priority unless it kept happening.&lt;/p&gt;
      &lt;p&gt;And then it kept happening.Â &lt;/p&gt;
      &lt;p&gt;When we first saw this bug we saw that the fatal errors correlated with recovered panics. These were caused by some old code which used panic/recover as error handling.Â &lt;/p&gt;
      &lt;p&gt;At this point, our theory was:Â &lt;/p&gt;
      &lt;list rend="ol"&gt;
        &lt;item&gt;
          &lt;p&gt;All of the fatal panics happen within stack unwinding.&lt;/p&gt;
        &lt;/item&gt;
        &lt;item&gt;
          &lt;p&gt;We correlated an increased volume of recovered panics with these fatal panics.&lt;/p&gt;
        &lt;/item&gt;
        &lt;item&gt;
          &lt;p&gt;Recovering a panic unwinds goroutine stacks to call deferred functions.&lt;/p&gt;
        &lt;/item&gt;
        &lt;item&gt;
          &lt;p&gt;A related Go issue (#73259) reported an arm64 stack unwinding crash.&lt;/p&gt;
        &lt;/item&gt;
        &lt;item&gt;
          &lt;p&gt;Letâs stop using panic/recover for error handling and wait out the upstream fix?&lt;/p&gt;
        &lt;/item&gt;
      &lt;/list&gt;
      &lt;p&gt;So we did that and watched as fatal panics stopped occurring as the release rolled out. Fatal panics gone, our theoretical mitigation seemed to work, and this was no longer our problem. We subscribed to the upstream issue so we could update when it was resolved and put it out of our minds.&lt;/p&gt;
      &lt;p&gt;But, this turned out to be a much stranger bug than expected. Putting it out of our minds was premature as the same class of fatal panics came back at a much higher rate. A month later, we were seeing up to 30 daily fatal panics with no real discernible cause; while that might account for only one machine a day in less than 10% of our data centers, we found it concerning that we didnât understand the cause. The first thing we checked was the number of recovered panics, to match our previous pattern, but there were none. More interestingly, we could not correlate this increased rate of fatal panics with anything. A release? Infrastructure changes? The position of Mars? &lt;/p&gt;
      &lt;p&gt;At this point we felt like we needed to dive deeper to better understand the root cause. Pattern matching and hoping was clearly insufficient.Â &lt;/p&gt;
      &lt;p&gt;We saw two classes of this bug -- a crash while accessing invalid memory and an explicitly checked fatal error.Â &lt;/p&gt;
      &lt;quote&gt;
        &lt;code&gt;goroutine 153 gp=0x4000105340 m=324 mp=0x400639ea08 [GC worker (active)]:
/usr/local/go/src/runtime/asm_arm64.s:244 +0x6c fp=0x7ff97fffe870 sp=0x7ff97fffe860 pc=0x55558d4098fc
runtime.systemstack(0x0)
       /usr/local/go/src/runtime/mgc.go:1508 +0x68 fp=0x7ff97fffe860 sp=0x7ff97fffe810 pc=0x55558d3a9408
runtime.gcBgMarkWorker.func2()
       /usr/local/go/src/runtime/mgcmark.go:1102
runtime.gcDrainMarkWorkerIdle(...)
       /usr/local/go/src/runtime/mgcmark.go:1188 +0x434 fp=0x7ff97fffe810 sp=0x7ff97fffe7a0 pc=0x55558d3ad514
runtime.gcDrain(0x400005bc50, 0x7)
       /usr/local/go/src/runtime/mgcmark.go:212 +0x1c8 fp=0x7ff97fffe7a0 sp=0x7ff97fffe6f0 pc=0x55558d3ab248
runtime.markroot(0x400005bc50, 0x17e6, 0x1)
       /usr/local/go/src/runtime/mgcmark.go:238 +0xa8 fp=0x7ff97fffe6f0 sp=0x7ff97fffe6a0 pc=0x55558d3ab578
runtime.markroot.func1()
       /usr/local/go/src/runtime/mgcmark.go:887 +0x290 fp=0x7ff97fffe6a0 sp=0x7ff97fffe560 pc=0x55558d3acaa0
runtime.scanstack(0x4014494380, 0x400005bc50)
       /usr/local/go/src/runtime/traceback.go:447 +0x2ac fp=0x7ff97fffe560 sp=0x7ff97fffe4d0 pc=0x55558d3eeb7c
runtime.(*unwinder).next(0x7ff97fffe5b0?)
       /usr/local/go/src/runtime/traceback.go:566 +0x110 fp=0x7ff97fffe4d0 sp=0x7ff97fffe490 pc=0x55558d3eed40
runtime.(*unwinder).finishInternal(0x7ff97fffe4f8?)
       /usr/local/go/src/runtime/panic.go:1073 +0x38 fp=0x7ff97fffe490 sp=0x7ff97fffe460 pc=0x55558d403388
runtime.throw({0x55558de6aa27?, 0x7ff97fffe638?})
runtime stack:
fatal error: traceback did not unwind completely
       stack=[0x4015d6a000-0x4015d8a000
runtime: g8221077: frame.sp=0x4015d784c0 top=0x4015d89fd0&lt;/code&gt;
      &lt;/quote&gt;
      &lt;quote&gt;
        &lt;code&gt;goroutine 187 gp=0x40003aea80 m=13 mp=0x40003ca008 [GC worker (active)]:
       /usr/local/go/src/runtime/asm_arm64.s:244 +0x6c fp=0x7fff2afde870 sp=0x7fff2afde860 pc=0x55557e2d98fc
runtime.systemstack(0x0)
       /usr/local/go/src/runtime/mgc.go:1489 +0x94 fp=0x7fff2afde860 sp=0x7fff2afde810 pc=0x55557e279434
runtime.gcBgMarkWorker.func2()
       /usr/local/go/src/runtime/mgcmark.go:1112
runtime.gcDrainMarkWorkerDedicated(...)
       /usr/local/go/src/runtime/mgcmark.go:1188 +0x434 fp=0x7fff2afde810 sp=0x7fff2afde7a0 pc=0x55557e27d514
runtime.gcDrain(0x4000059750, 0x3)
       /usr/local/go/src/runtime/mgcmark.go:212 +0x1c8 fp=0x7fff2afde7a0 sp=0x7fff2afde6f0 pc=0x55557e27b248
runtime.markroot(0x4000059750, 0xb8, 0x1)
       /usr/local/go/src/runtime/mgcmark.go:238 +0xa8 fp=0x7fff2afde6f0 sp=0x7fff2afde6a0 pc=0x55557e27b578
runtime.markroot.func1()
       /usr/local/go/src/runtime/mgcmark.go:887 +0x290 fp=0x7fff2afde6a0 sp=0x7fff2afde560 pc=0x55557e27caa0
runtime.scanstack(0x40042cc000, 0x4000059750)
       /usr/local/go/src/runtime/traceback.go:458 +0x188 fp=0x7fff2afde560 sp=0x7fff2afde4d0 pc=0x55557e2bea58
runtime.(*unwinder).next(0x7fff2afde5b0)
goroutine 0 gp=0x40003af880 m=13 mp=0x40003ca008 [idle]:
PC=0x55557e2bea58 m=13 sigcode=1 addr=0x118
SIGSEGV: segmentation violation&lt;/code&gt;
      &lt;/quote&gt;
      &lt;p&gt;Now we could observe some clear patterns. Both errors occur when unwinding the stack in &lt;code&gt;(*unwinder).next&lt;/code&gt;. In one case we saw an intentional fatal error as the runtime identified that unwinding could not complete and the stack was in a bad state. In the other case there was a direct memory access error that happened while trying to unwind the stack. The segfault was discussed in the GitHub issue and a Go engineer identified it as dereference of a go scheduler struct, m, when unwinding.Â   &lt;/p&gt;
      &lt;div&gt;
        &lt;head rend="h3"&gt;A review of Go scheduler structs&lt;/head&gt;
      &lt;/div&gt;
      &lt;p&gt;Go uses a lightweight userspace scheduler to manage concurrency. Many goroutines are scheduled on a smaller number of kernel threads â this is often referred to as M:N scheduling. Any individual goroutine can be scheduled on any kernel thread. The scheduler has three core types â &lt;code&gt;g&lt;/code&gt;Â  (the goroutine), &lt;code&gt;m&lt;/code&gt; (the kernel thread, or âmachineâ), and &lt;code&gt;p&lt;/code&gt; (the physical execution context, orÂ  âprocessorâ). For a goroutine to be scheduled a free &lt;code&gt;m&lt;/code&gt; must acquire a free &lt;code&gt;p&lt;/code&gt;, which will execute a g. Each &lt;code&gt;g&lt;/code&gt; contains a field for its m if it is currently running, otherwise it will be nil. This is all the context needed for this post but the go runtime docs explore this more comprehensively.Â &lt;/p&gt;
      &lt;p&gt;At this point we can start to make inferences on whatâs happening: the program crashes because we try to unwind a goroutine stack which is invalid. In the first backtrace, if a return address is null, we call &lt;code&gt;finishInternal&lt;/code&gt; and abort because the stack was not fully unwound. The segmentation fault case in the second backtrace is a bit more interesting: if instead the return address is non-zero but not a function then the unwinder code assumes that the goroutine is currently running. It'll then dereference m and fault by accessing &lt;code&gt;m.incgo&lt;/code&gt; (the offset of &lt;code&gt;incgo&lt;/code&gt; into &lt;code&gt;struct m&lt;/code&gt; is 0x118, the faulting memory access). &lt;/p&gt;
      &lt;p&gt;What, then, is causing this corruption? The traces were difficult to get anything useful from â our service has hundreds if not thousands of active goroutines. It was fairly clear from the beginning that the panic was remote from the actual bug. The crashes were all observed while unwinding the stack and if this were an issue any time the stack was unwound on arm64 we would be seeing it in many more services. We felt pretty confident that the stack unwinding was happening correctly but on an invalid stack.Â &lt;/p&gt;
      &lt;p&gt;Our investigation stalled for a while at this point â making guesses, testing guesses, trying to infer if the panic rate went up or down, or if nothing changed. There was a known issue on Goâs GitHub issue tracker which matched our symptoms almost exactly, but what they discussed was mostly what we already knew. At some point when looking through the linked stack traces we realized that their crash referenced an old version of a library that we were also using â Go Netlink.&lt;/p&gt;
      &lt;quote&gt;
        &lt;code&gt;goroutine 1267 gp=0x4002a8ea80 m=nil [runnable (scan)]:
runtime.asyncPreempt2()
        /usr/local/go/src/runtime/preempt.go:308 +0x3c fp=0x4004cec4c0 sp=0x4004cec4a0 pc=0x46353c
runtime.asyncPreempt()
        /usr/local/go/src/runtime/preempt_arm64.s:47 +0x9c fp=0x4004cec6b0 sp=0x4004cec4c0 pc=0x4a6a8c
github.com/vishvananda/netlink/nl.(*NetlinkSocket).Receive(0x14360300000000?)
        /go/pkg/mod/github.com/!data!dog/[email protected]/nl/nl_linux.go:803 +0x130 fp=0x4004cfc710 sp=0x4004cec6c0 pc=0xf95de0
&lt;/code&gt;
      &lt;/quote&gt;
      &lt;p&gt;We spot-checked a few stack traces and confirmed the presence of this Netlink library. Querying our logs showed that not only did we share a library â every single segmentation fault we observed had happened while preempting &lt;code&gt;NetlinkSocket.Receive&lt;/code&gt;.&lt;/p&gt;
      &lt;div&gt;
        &lt;head rend="h3"&gt;Whatâs (async) preemption?&lt;/head&gt;
      &lt;/div&gt;
      &lt;p&gt;In the prehistoric era of Go (&amp;lt;=1.13) the runtime was cooperatively scheduled. A goroutine would run until it decided it was ready to yield to the scheduler â usually due to explicit calls to &lt;code&gt;runtime.Gosched()&lt;/code&gt; or injected yield points at function calls/IO operations. Since Go 1.14 the runtime instead does async preemption. The Go runtime has a thread &lt;code&gt;sysmon&lt;/code&gt; which tracks the runtime of goroutines and will preempt any that run for longer than 10ms (at time of writing). It does this by sending &lt;code&gt;SIGURG&lt;/code&gt; to the OS thread and in the signal handler will modify the program counter and stack to mimic a call to &lt;code&gt;asyncPreempt&lt;/code&gt;.&lt;/p&gt;
      &lt;p&gt;At this point we had two broad theories:&lt;/p&gt;
      &lt;list rend="ul"&gt;
        &lt;item&gt;
          &lt;p&gt;This is a Go Netlink bug â likely due to &lt;code&gt;unsafe.Pointer&lt;/code&gt; usage which invoked undefined behavior but is only actually broken on arm64&lt;/p&gt;
        &lt;/item&gt;
        &lt;item&gt;
          &lt;p&gt;This is a Go runtime bug and we're only triggering it in &lt;code&gt;NetlinkSocket.Receive&lt;/code&gt; for some reason&lt;/p&gt;
        &lt;/item&gt;
      &lt;/list&gt;
      &lt;p&gt;After finding the same bug publicly reported upstream, we were feeling confident this was caused by a Go runtime bug. However, upon seeing that both issues implicated the same function, we felt more skeptical â notably the Go Netlink library uses unsafe.Pointer so memory corruption was a plausible explanation even if we didn't understand why.&lt;/p&gt;
      &lt;p&gt;After an unsuccessful code audit we had hit a wall. The crashes were rare and remote from the root cause. Maybe these crashes were caused by a runtime bug, maybe they were caused by a Go Netlink bug. It seemed clear that there was something wrong with this area of the code, but code auditing wasnât going anywhere. &lt;/p&gt;
      &lt;p&gt;At this point we had a fairly good understanding of what was crashing but very little understanding of why it was happening. It was clear that the root cause of the stack unwinder crashing was remote from the actual crash, and that it had to do with &lt;code&gt;(*NetlinkSocket).Receive&lt;/code&gt;, but why? We were able to capture a coredump of a production crash and view it in a debugger. The backtrace confirmed what we already knew â that there was a segmentation fault when unwinding a stack. The crux of the issue revealed itself when we looked at the goroutine which had been preempted while calling &lt;code&gt;(*NetlinkSocket).Receive&lt;/code&gt;.Â     &lt;/p&gt;
      &lt;quote&gt;
        &lt;code&gt;(dlv) bt
0  0x0000555577579dec in runtime.asyncPreempt2
   at /usr/local/go/src/runtime/preempt.go:306
1  0x00005555775bc94c in runtime.asyncPreempt
   at /usr/local/go/src/runtime/preempt_arm64.s:47
2  0x0000555577cb2880 in github.com/vishvananda/netlink/nl.(*NetlinkSocket).Receive
   at
/vendor/github.com/vishvananda/netlink/nl/nl_linux.go:779
3  0x0000555577cb19a8 in github.com/vishvananda/netlink/nl.(*NetlinkRequest).Execute
   at 
/vendor/github.com/vishvananda/netlink/nl/nl_linux.go:532
4  0x0000555577551124 in runtime.heapSetType
   at /usr/local/go/src/runtime/mbitmap.go:714
5  0x0000555577551124 in runtime.heapSetType
   at /usr/local/go/src/runtime/mbitmap.go:714
...
(dlv) disass -a 0x555577cb2878 0x555577cb2888
TEXT github.com/vishvananda/netlink/nl.(*NetlinkSocket).Receive(SB) /vendor/github.com/vishvananda/netlink/nl/nl_linux.go
        nl_linux.go:779 0x555577cb2878  fdfb7fa9        LDP -8(RSP), (R29, R30)
        nl_linux.go:779 0x555577cb287c  ff430191        ADD $80, RSP, RSP
        nl_linux.go:779 0x555577cb2880  ff434091        ADD $(16&amp;lt;&amp;lt;12), RSP, RSP
        nl_linux.go:779 0x555577cb2884  c0035fd6        RET
&lt;/code&gt;
      &lt;/quote&gt;
      &lt;p&gt;The goroutine was paused between two opcodes in the function epilogue. Since the process of unwinding a stack relies on the stack frame being in a consistent state, it felt immediately suspicious that we preempted in the middle of adjusting the stack pointer. The goroutine had been paused at 0x555577cb2880, between&lt;code&gt; ADD $80, RSP, RSP and ADD $(16&amp;lt;&amp;lt;12), RSP, RSP&lt;/code&gt;.Â &lt;/p&gt;
      &lt;p&gt;We queried the service logs to confirm our theory. This wasnât isolated â the majority of stack traces showed that this same opcode was preempted. This was no longer a weird production crash we couldnât reproduce. A crash happened when the Go runtime preempted between these two stack pointer adjustments. We had our smoking gun.Â &lt;/p&gt;
      &lt;div&gt;
        &lt;head rend="h2"&gt;Building a minimal reproducer&lt;/head&gt;
      &lt;/div&gt;
      &lt;p&gt;At this point we felt pretty confident that this was actually just a runtime bug and it should be reproducible in an isolated environment without any dependencies. The theory at this point was:&lt;/p&gt;
      &lt;list rend="ol"&gt;
        &lt;item&gt;
          &lt;p&gt;Stack unwinding is triggered by garbage collection&lt;/p&gt;
        &lt;/item&gt;
        &lt;item&gt;
          &lt;p&gt;Async preemption between a split stack pointer adjustment causes a crash&lt;/p&gt;
        &lt;/item&gt;
        &lt;item&gt;
          &lt;p&gt;What if we make a function which splits the adjustment and then call it in a loop?&lt;/p&gt;
        &lt;/item&gt;
      &lt;/list&gt;
      &lt;quote&gt;
        &lt;code&gt;package main

import (
	"runtime"
)

//go:noinline
func big_stack(val int) int {
	var big_buffer = make([]byte, 1 &amp;lt;&amp;lt; 16)

	sum := 0
	// prevent the compiler from optimizing out the stack
	for i := 0; i &amp;lt; (1&amp;lt;&amp;lt;16); i++ {
		big_buffer[i] = byte(val)
	}
	for i := 0; i &amp;lt; (1&amp;lt;&amp;lt;16); i++ {
		sum ^= int(big_buffer[i])
	}
	return sum
}

func main() {
	go func() {
		for {
			runtime.GC()
		}
	}()
	for {
		_ = big_stack(1000)
	}
}
&lt;/code&gt;
      &lt;/quote&gt;
      &lt;p&gt;This function ends up with a stack frame slightly larger than can be represented in 16 bits, and so on arm64 the Go compiler will split the stack pointer adjustment into two opcodes. If the runtime preempts between these opcodes then the stack unwinder will read an invalid stack pointer and crash.Â &lt;/p&gt;
      &lt;quote&gt;
        &lt;code&gt;; epilogue for main.big_stack
ADD $8, RSP, R29
ADD $(16&amp;lt;&amp;lt;12), R29, R29
ADD $16, RSP, RSP
; preemption is problematic between these opcodes
ADD $(16&amp;lt;&amp;lt;12), RSP, RSP
RET
&lt;/code&gt;
      &lt;/quote&gt;
      &lt;p&gt;After running this for a few minutes the program panicked as expected!&lt;/p&gt;
      &lt;quote&gt;
        &lt;code&gt;SIGSEGV: segmentation violation
PC=0x60598 m=8 sigcode=1 addr=0x118

goroutine 0 gp=0x400019c540 m=8 mp=0x4000198708 [idle]:
runtime.(*unwinder).next(0x400030fd10)
        /home/thea/sdk/go1.23.4/src/runtime/traceback.go:458 +0x188 fp=0x400030fcc0 sp=0x400030fc30 pc=0x60598
runtime.scanstack(0x40000021c0, 0x400002f750)
        /home/thea/sdk/go1.23.4/src/runtime/mgcmark.go:887 +0x290 

[...]

goroutine 1 gp=0x40000021c0 m=nil [runnable (scan)]:
runtime.asyncPreempt2()
        /home/thea/sdk/go1.23.4/src/runtime/preempt.go:308 +0x3c fp=0x40003bfcf0 sp=0x40003bfcd0 pc=0x400cc
runtime.asyncPreempt()
        /home/thea/sdk/go1.23.4/src/runtime/preempt_arm64.s:47 +0x9c fp=0x40003bfee0 sp=0x40003bfcf0 pc=0x75aec
main.big_stack(0x40003cff38?)
        /home/thea/dev/stack_corruption_reproducer/main.go:29 +0x94 fp=0x40003cff00 sp=0x40003bfef0 pc=0x77c04
Segmentation fault (core dumped)

real    1m29.165s
user    4m4.987s
sys     0m43.212s&lt;/code&gt;
      &lt;/quote&gt;
      &lt;p&gt;A reproducible crash with standard library only? This felt like conclusive evidence that our problem was a runtime bug.&lt;/p&gt;
      &lt;p&gt;This was an extremely particular reproducer! Even now with a good understanding of the bug and its fix, some of the behavior is still puzzling. It's a one-instruction race condition, so itâs unsurprising that small changes could have large impact. For example, this reproducer was originally written and tested on Go 1.23.4, but did not crash when compiled with 1.23.9 (the version in production), even though we could objdump the binary and see the split ADD still present! We donât have a definite explanation for this behavior â even with the bug present there remain a few unknown variables which affect the likelihood of hitting the race condition.Â &lt;/p&gt;
      &lt;div&gt;
        &lt;head rend="h2"&gt;A single-instruction race condition window&lt;/head&gt;
      &lt;/div&gt;
      &lt;p&gt;arm64 is a fixed-length 4-byte instruction set architecture. This has a lot of implications on codegen but most relevant to this bug is the fact that immediate length is limited. &lt;code&gt;add&lt;/code&gt; gets a 12-bit immediate, &lt;code&gt;mov&lt;/code&gt; gets a 16-bit immediate, etc. How does the architecture handle this when the operands don't fit? It depends â &lt;code&gt;ADD&lt;/code&gt; in particular reserves a bit for "shift left by 12" so any 24 bit addition can be decomposed into two opcodes. Other instructions are decomposed similarly, or just require loading an immediate into a register first.Â &lt;/p&gt;
      &lt;p&gt;The very last step of the Go compiler before emitting machine code involves transforming the program into &lt;code&gt;obj.Prog&lt;/code&gt; structs. It's a very low level intermediate representation (IR) that mostly serves to be translated into machine code.Â &lt;/p&gt;
      &lt;quote&gt;
        &lt;code&gt;//https://github.com/golang/go/blob/fa2bb342d7b0024440d996c2d6d6778b7a5e0247/src/cmd/internal/obj/arm64/obj7.go#L856

// Pop stack frame.
// ADD $framesize, RSP, RSP
p = obj.Appendp(p, c.newprog)
p.As = AADD
p.From.Type = obj.TYPE_CONST
p.From.Offset = int64(c.autosize)
p.To.Type = obj.TYPE_REG
p.To.Reg = REGSP
p.Spadj = -c.autosize
&lt;/code&gt;
      &lt;/quote&gt;
      &lt;p&gt;Notably, this IR is not aware of immediate length limitations. Instead, this happens in asm7.go when Go's internal intermediate representation is translated into arm64 machine code. The assembler will classify an immediate in conclass based on bit size and then use that when emitting instructions â extra if needed.&lt;/p&gt;
      &lt;p&gt;The Go assembler uses a combination of (&lt;code&gt;mov, add&lt;/code&gt;) opcodes for some adds that fit in 16-bit immediates, and prefers (&lt;code&gt;add, add + lsl 12&lt;/code&gt;) opcodes for 16-bit+ immediates.Â   &lt;/p&gt;
      &lt;p&gt;Compare a stack of (slightly larger than) &lt;code&gt;1&amp;lt;&amp;lt;15&lt;/code&gt;:&lt;/p&gt;
      &lt;quote&gt;
        &lt;code&gt;; //go:noinline
; func big_stack() byte {
; 	var big_stack = make([]byte, 1&amp;lt;&amp;lt;15)
; 	return big_stack[0]
; }
MOVD $32776, R27
ADD R27, RSP, R29
MOVD $32784, R27
ADD R27, RSP, RSP
RET
&lt;/code&gt;
      &lt;/quote&gt;
      &lt;p&gt;With a stack of &lt;code&gt;1&amp;lt;&amp;lt;16&lt;/code&gt;:&lt;/p&gt;
      &lt;quote&gt;
        &lt;code&gt;; //go:noinline
; func big_stack() byte {
; 	var big_stack = make([]byte, 1&amp;lt;&amp;lt;16)
; 	return big_stack[0]
; } 
ADD $8, RSP, R29
ADD $(16&amp;lt;&amp;lt;12), R29, R29
ADD $16, RSP, RSP
ADD $(16&amp;lt;&amp;lt;12), RSP, RSP
RET
&lt;/code&gt;
      &lt;/quote&gt;
      &lt;p&gt;In the larger stack case, there is a point between &lt;code&gt;ADD x, RSP, RSP&lt;/code&gt; opcodes where the stack pointer is not pointing to the tip of a stack frame. We thought at first that this was a matter of memory corruption â that in handling async preemption the runtime would push a function call on the stack and corrupt the middle of the stack. However, this goroutine is already in the function epilogue â any data we corrupt is actively in the process of being thrown away. What's the issue then?  &lt;/p&gt;
      &lt;p&gt;The Go runtime often needs to unwind the stack, which means walking backwards through the chain of function calls. For example: garbage collection uses it to find live references on the stack, panicking relies on it to evaluate &lt;code&gt;defer&lt;/code&gt; functions, and generating stack traces needs to print the call stack. For this to work the stack pointer must be accurate during unwinding because of how golang dereferences sp to determine the calling function. If the stack pointer is partially modified, the unwinder will look for the calling function in the middle of the stack. The underlying data is meaningless when interpreted as directions to a parent stack frame and then the runtime will likely crash.Â &lt;/p&gt;
      &lt;quote&gt;
        &lt;code&gt;//https://github.com/golang/go/blob/66536242fce34787230c42078a7bbd373ef8dcb0/src/runtime/traceback.go#L373

if innermost &amp;amp;&amp;amp; frame.sp &amp;lt; frame.fp || frame.lr == 0 {
    lrPtr = frame.sp
    frame.lr = *(*uintptr)(unsafe.Pointer(lrPtr))
}
&lt;/code&gt;
      &lt;/quote&gt;
      &lt;p&gt;When async preemption happens it will push a function call onto the stack but the parent stack frame is no longer correct because sp was only partially adjusted when the preemption happened. The crash flow looks something like this: &lt;/p&gt;
      &lt;list rend="ol"&gt;
        &lt;item&gt;
          &lt;p&gt;Async preemption happens between the two opcodes that &lt;code&gt;add x, rsp&lt;/code&gt; expands to&lt;/p&gt;
        &lt;/item&gt;
        &lt;item&gt;
          &lt;p&gt;Garbage collection triggers stack unwinding (to check for heap object liveness)&lt;/p&gt;
        &lt;/item&gt;
        &lt;item&gt;
          &lt;p&gt;The unwinder starts traversing the stack of the problematic goroutine and correctly unwinds up to the problematic function&lt;/p&gt;
        &lt;/item&gt;
        &lt;item&gt;
          &lt;p&gt;The unwinder dereferences &lt;code&gt;sp&lt;/code&gt; to determine the parent function&lt;/p&gt;
        &lt;/item&gt;
        &lt;item&gt;
          &lt;p&gt;Almost certainly the data behind &lt;code&gt;sp&lt;/code&gt; is not a function&lt;/p&gt;
        &lt;/item&gt;
        &lt;item&gt;
          &lt;p&gt;Crash&lt;/p&gt;
        &lt;/item&gt;
      &lt;/list&gt;
      &lt;p&gt;We saw earlier a faulting stack trace which ended in &lt;code&gt;(*NetlinkSocket).Receive&lt;/code&gt; â in this case stack unwinding faulted while it was trying to determine the parent frame.Â    &lt;/p&gt;
      &lt;quote&gt;
        &lt;code&gt;goroutine 90 gp=0x40042cc000 m=nil [preempted (scan)]:
runtime.asyncPreempt2()
/usr/local/go/src/runtime/preempt.go:306 +0x2c fp=0x40060a25d0 sp=0x40060a25b0 pc=0x55557e299dec
runtime.asyncPreempt()
/usr/local/go/src/runtime/preempt_arm64.s:47 +0x9c fp=0x40060a27c0 sp=0x40060a25d0 pc=0x55557e2dc94c
github.com/vishvananda/netlink/nl.(*NetlinkSocket).Receive(0xff48ce6e060b2848?)
/vendor/github.com/vishvananda/netlink/nl/nl_linux.go:779 +0x130 fp=0x40060b2820 sp=0x40060a27d0 pc=0x55557e9d2880
&lt;/code&gt;
      &lt;/quote&gt;
      &lt;p&gt;Once we discovered the root cause we reported it with a reproducer and the bug was quickly fixed. This bug is fixed in go1.23.12, go1.24.6, and go1.25.0. Previously, the go compiler emitted a single &lt;code&gt;add x, rsp&lt;/code&gt; instruction and relied on the assembler to split immediates into multiple opcodes as necessary. After this change, stacks larger than 1&amp;lt;&amp;lt;12 will build the offset in a temporary register and then add that to &lt;code&gt;rsp&lt;/code&gt; in a single, indivisible opcode. A goroutine can be preempted before or after the stack pointer modification, but never during. This means that the stack pointer is always valid and there is no race condition.&lt;/p&gt;
      &lt;quote&gt;
        &lt;code&gt;LDP -8(RSP), (R29, R30)
MOVD $32, R27
MOVK $(1&amp;lt;&amp;lt;16), R27
ADD R27, RSP, RSP
RET&lt;/code&gt;
      &lt;/quote&gt;
      &lt;p&gt;This was a very fun problem to debug. We donât often see bugs where you can accurately blame the compiler. Debugging it took weeks and we had to learn about areas of the Go runtime that people donât usually need to think about. Itâs a nice example of a rare race condition, the sort of bug that can only really be quantified at a large scale.&lt;/p&gt;
      &lt;p&gt;Weâre always looking for people who enjoy this kind of detective work. Our engineering teams are hiring. &lt;/p&gt;
    &lt;/div&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45516000</guid><pubDate>Wed, 08 Oct 2025 13:33:15 +0000</pubDate></item><item><title>Now open for building: Introducing Gemini CLI extensions</title><link>https://blog.google/technology/developers/gemini-cli-extensions/</link><description>&lt;doc fingerprint="994b9cc09a2ba6b0"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Now open for building: Introducing Gemini CLI extensions&lt;/head&gt;
    &lt;p&gt;The best tools are the ones that adapt to you, not the other way around. For developers whose work is becoming more complex every day, the need for personalized, intelligent assistance has never been greater.&lt;/p&gt;
    &lt;p&gt;That’s why we’re announcing Gemini CLI extensions, a new framework that allows you to customize Gemini CLI and connect it to the tools you use most, all from the command line. Instead of context-switching between your terminal and other tools, you can now bring those tools directly into your workflow.&lt;/p&gt;
    &lt;p&gt;In just three months since our launch, more than one million developers are building with Gemini CLI. And they can now access a new ecosystem of extensions from Google, plus industry leaders like Dynatrace, Elastic, Figma, Harness, Postman, Shopify, Snyk and Stripe, and the broader open-source community.&lt;/p&gt;
    &lt;head rend="h2"&gt;Personalize your command line with Gemini CLI extensions&lt;/head&gt;
    &lt;p&gt;Gemini CLI is an open-source, AI-powered agent for your terminal, and extensions are its power-ups — pre-packaged, easily installable integrations that connect it to external tools including everything from databases and design platforms to payment services.&lt;/p&gt;
    &lt;p&gt;Each extension contains a built-in “playbook” that instantly teaches the AI how to use the new tools effectively. This means you get meaningful results from the very first command, no complex setup required, allowing you to tailor your experience with the tools most valuable to you.&lt;/p&gt;
    &lt;p&gt;It’s easy to install an extension — simply type: “gemini extensions install &amp;lt;add your GitHub URL or local path&amp;gt;” from your command line.&lt;/p&gt;
    &lt;p&gt;Easily install extensions from Gemini CLI's open ecosystem&lt;/p&gt;
    &lt;head rend="h2"&gt;Access an open, growing ecosystem of partners and builders&lt;/head&gt;
    &lt;p&gt;Extensions put Gemini CLI at the center of an open ecosystem in which anyone can build integrations. That’s why in addition to our own set of Google-created extensions, we’re launching with a strong group of partners and open-source contributors.&lt;/p&gt;
    &lt;p&gt;To make extensions easy to find and use, we’re also launching a new Gemini CLI Extensions page. Here, you can discover a growing catalog of community, partner and Google-built extensions, ranked by popularity by GitHub stars.&lt;/p&gt;
    &lt;p&gt;You can get started with extensions from a wide range of launch partners and more coming soon. These include:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Dynatrace: Get real-time insights into application performance, availability and root-cause analysis directly from your CLI to accelerate debugging.&lt;/item&gt;
      &lt;item&gt;Elastic: Search, retrieve and analyze Elasticsearch data in developer and agentic workflows. Connects directly to an Elastic MCP server hosted in Elastic Cloud Serverless.&lt;/item&gt;
      &lt;item&gt;Figma: Generate code from frames, extract design context, retrieve resources and ensure design system consistency with your codebase.&lt;/item&gt;
      &lt;item&gt;Harness: Bring AI-powered intelligence to CI/CD by analyzing pipeline execution data, surfacing cost insights, detecting failure patterns and automatically remediating issues to accelerate software delivery.&lt;/item&gt;
      &lt;item&gt;Postman: Have AI agents access Postman workspaces, manage collections and environments, evaluate APIs and automate workflows through natural language interactions.&lt;/item&gt;
      &lt;item&gt;Shopify: Connect to Shopify's developer ecosystem with tools to search docs, explore API schemas, and build serverless Shopify functions.&lt;/item&gt;
      &lt;item&gt;Snyk: Seamlessly integrate Snyk's comprehensive security capabilities into your development process to ensure that code is secure at inception.&lt;/item&gt;
      &lt;item&gt;Stripe: Define a set of tools that AI agents can use to interact with the Stripe API and search the knowledge base.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;More than a connection: See how extensions add intelligence&lt;/head&gt;
    &lt;p&gt;Developers get more from Gemini CLI by integrating Model Context Protocol (MCP) tools, and extensions build on this by enabling even smarter interactions. While MCP provides the raw connection to a tool, a Gemini CLI extension takes the basic ability to use that tool and wraps it in a layer of intelligence and personalization. This makes the experience seamless for developers.&lt;/p&gt;
    &lt;p&gt;Gemini CLI extensions are easy to install and have a simple “playbook” — a set of tools it knows how to use, like a local script or a third-party API. When you run a command, Gemini CLI consults this playbook and uses the context from your environment (like your local files and git status) to execute the right tool for the job, exactly how you intended.&lt;/p&gt;
    &lt;p&gt;If you want to look under the hood, Gemini CLI extensions package instructions, MCP servers and custom commands into a familiar and user-friendly format. Extensions can bundle any combination of:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;One or more MCP servers: To connect with external tools and services.&lt;/item&gt;
      &lt;item&gt;Context files: Like GEMINI.md or bring your own context file type(s), to provide specific instructions and guidelines to the model.&lt;/item&gt;
      &lt;item&gt;Excluded tools: Useful for disabling built-in tools or offering alternative implementations.&lt;/item&gt;
      &lt;item&gt;Custom commands: To encapsulate complex prompts into simple slash commands.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Use Gemini CLI to access all kinds of extensions, including one for image generation with Nano Banana&lt;/p&gt;
    &lt;head rend="h2"&gt;Discover Google-created extensions&lt;/head&gt;
    &lt;p&gt;Googlers have also been building a suite of extensions for Gemini CLI. Give them a try; they just might help you solve some common developer pain points, deepen integration with other Google offerings or just have fun:&lt;/p&gt;
    &lt;p&gt;For cloud-native deployments:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Go from local code to a live public URL in a single step, with the Cloud Run extension.&lt;/item&gt;
      &lt;item&gt;Manage your Google Kubernetes Engine (GKE) clusters, from checking node health to deploying applications with our GKE extension.&lt;/item&gt;
      &lt;item&gt;Give Gemini CLI the ability to easily interact with your Google Cloud environment by using the gcloud extension.&lt;/item&gt;
      &lt;item&gt;Understand, manage and troubleshoot your Google Cloud environment with the Google Cloud Observability extension.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;For app builders:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Perform code reviews on your codebase with the Code Review extension.&lt;/item&gt;
      &lt;item&gt;Perform AI-powered vulnerability detection on your code changes with the Security extension.&lt;/item&gt;
      &lt;item&gt;Retrieve place info from Google and embed Google Maps imagery into applications with the Google Maps Platform extension.&lt;/item&gt;
      &lt;item&gt;Create, build, refactor, debug and maintain Flutter applications with the Flutter extension.&lt;/item&gt;
      &lt;item&gt;Control and inspect a live Chrome browser for reliable automation, in-depth debugging and performance analysis with the Chrome DevTools extension.&lt;/item&gt;
      &lt;item&gt;Set up and manage your Firebase backend with the Firebase extension.&lt;/item&gt;
      &lt;item&gt;Enhance the user experience for building GenAI-powered apps with the Genkit extension.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;For generative AI and data interaction:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;For a bit of fun, generate and edit images with the Nano Banana extension 🍌.&lt;/item&gt;
      &lt;item&gt;Explore and visualize your business data with the Looker extension.&lt;/item&gt;
      &lt;item&gt;Build applications and analyze trends with services like Cloud SQL, AlloyDB BigQuery and more with our Data Cloud extensions.&lt;/item&gt;
      &lt;item&gt;Connect to enterprise data easily and securely using the MCP Toolbox for Databases extension.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Build the CLI of your dreams&lt;/head&gt;
    &lt;p&gt;Gemini CLI extensions put you in control. You can combine extensions, chain commands and build a personalized toolchain that perfectly fits the way you work.&lt;/p&gt;
    &lt;p&gt;Whether you want to streamline a personal workflow or integrate a company's internal tools, you now have the power to create the command-line experience you've always wanted.&lt;/p&gt;
    &lt;p&gt;Ready to get started? Visit the new Gemini CLI Extensions page to explore community tools, and check out our templates and a step-by-step guide to help you build your first extension and share it with the community.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45516426</guid><pubDate>Wed, 08 Oct 2025 14:13:30 +0000</pubDate></item><item><title>Show HN: Recall: Give Claude memory with Redis-backed persistent context</title><link>https://www.npmjs.com/package/@joseairosa/recall</link><description></description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45516584</guid><pubDate>Wed, 08 Oct 2025 14:28:06 +0000</pubDate></item><item><title>Vectrex Mini</title><link>https://vectrex.com/vectrex-mini-details/</link><description>&lt;doc fingerprint="27d74f9593ed6a7c"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Vectrex Mini Details&lt;/head&gt;
    &lt;p&gt;Experience the spirit of the original Vectrex in a modern, compact format. &lt;lb/&gt;After three years of development and refinement, the Vectrex Mini is ready for production.&lt;/p&gt;
    &lt;p&gt;The Kickstarter goes live on November 3rd 2025.&lt;/p&gt;
    &lt;head rend="h2"&gt;Console&lt;/head&gt;
    &lt;p&gt;The Vectrex Mini captures the full spirit of the original Vectrex in a case half the size. Its plastic shell is made using injection molding, just like the console of the time, and each unit will come in packaging inspired by the original box.&lt;/p&gt;
    &lt;p&gt;On the technical side, the console features a built-in 5-inch AMOLED display with a resolution of 800×600, delivering sharp and bright vector graphics. Power is supplied via USB-C, so it can run on a wall outlet as well as an external battery. The Vectrex Mini is powered by an ESP32, a modern and reliable microprocessor, powerful enough to run the entire Vectrex game library with performance beyond many arcade machines of the era.&lt;/p&gt;
    &lt;head rend="h2"&gt;Features&lt;/head&gt;
    &lt;p&gt;The console will include 12 built-in classic games, mostly from the General Consumer Electronics catalog (the final selection is still being completed, with the official list to be announced later). Each game will come with its own physical overlay to recreate the visual experience of the 1980s.&lt;/p&gt;
    &lt;p&gt;Sticker sheets will also be included, featuring different official logos (current, European, American, and Japanese), so players can customize their machine.&lt;/p&gt;
    &lt;p&gt;A Vector Clock mode will turn the console into a clock displaying the time, date, and weather thanks to Wi-Fi connectivity.&lt;/p&gt;
    &lt;p&gt;An alarm can also be set, allowing the Vectrex Mini to double as a stylish bedside clock or desk companion.&lt;/p&gt;
    &lt;p&gt;The Vectrex Mini offers several connection options. A micro-SD slot will allow the addition of games or homebrews (a card will likely not be included).&lt;/p&gt;
    &lt;p&gt;A Bluetooth controller with four action buttons and a self-centering analog joystick will be provided and can be stored in the console as with the original. A second controller can also be connected for multiplayer.&lt;/p&gt;
    &lt;p&gt;Finally, a video output will be integrated at the back of the unit (the final choice between HDMI or USB-C will be confirmed during production).&lt;/p&gt;
    &lt;head rend="h2"&gt;Special Edition&lt;/head&gt;
    &lt;p&gt;A limited run of 250 units will be produced. The White Edition has all the features of the standard version but stands out with a fully white finish, a unique serial number, and a certificate of authenticity. Aimed at collectors, it will come in its own box.&lt;/p&gt;
    &lt;head rend="h2"&gt;Merchandise&lt;/head&gt;
    &lt;p&gt;Several items will be available to accompany the release of the Vectrex Mini:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;A second controller can be purchased separately and will include a dongle to connect it to the original console.&lt;/item&gt;
      &lt;item&gt;Four T-shirt designs will be released, featuring artwork of the console itself, a Vectrex-style Superman, Minestrom, and Spike.&lt;/item&gt;
      &lt;item&gt;A book written by Douglas Alves will also be part of the collection. A well-known French specialist in video game history, longtime journalist, MO5 association member, and teacher in the field, he retraces the story of the Vectrex in this work.&lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h2"&gt;Kickstarter Campaign&lt;/head&gt;
    &lt;p&gt;After three years dedicated to prototyping and preparing for production, the project is now ready. We have set a clear timeline with defined milestones for testing, final adjustments, and assembly. Manufacturing will be carried out in partnership with teams based in Taiwan.&lt;/p&gt;
    &lt;p&gt;The Kickstarter campaign aims to finance this production phase. We waited until we had a fully functional prototype, strong partners, and a realistic schedule before launching. See you on November 3 on Kickstarter to discover all the details and join the adventure.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45516690</guid><pubDate>Wed, 08 Oct 2025 14:38:23 +0000</pubDate></item><item><title>After 2 decades of tinkering, MAME cracks the Hyper Neo Geo 64</title><link>https://www.readonlymemo.com/mame-hyper-neo-geo-support-sound-emulation/</link><description>&lt;doc fingerprint="372e9953cb024b11"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;After 2 decades of tinkering, MAME finally cracks the Hyper Neo Geo 64&lt;/head&gt;
    &lt;p&gt;How MAME devs finally got sound working for the 3D arcade system. Plus: PC Engine LaserActive support gets fast-tracked.&lt;/p&gt;
    &lt;p&gt;Let me test out a theory here: If you're into emulation, you're into older video games, ergo you're into old stuff of all kinds. That means you, savvy, good-taste-having reader, will love this spread of photos I took in Tokyo last week at the National Film Archive of Japan, which has a small but lovely set of exhibits from the history of Japanese film. Since you like playing Super Nintendo games this is absolutely your shit, right? Right??&lt;/p&gt;
    &lt;p&gt;Okay, I'll throw in a pic of some games to sweeten the deal.&lt;/p&gt;
    &lt;p&gt;This issue is coming a week late as I was off to Japan last week for my first-ever visit to the Tokyo Game Show, and too busy working (and working at eating sushi) to squeeze in a newsletter. And it's coming late in the day Sunday — apologies! But patience pays off!!&lt;/p&gt;
    &lt;p&gt;This issue's main story has been cookin' for a minute: last month the news landed that MAME had finally properly cracked Hyper Neo Geo 64 support, but the celebration was a little bit premature. The arcade system was playable in MAME, yes, but sound was in really shoddy shape — it wasn't yet a particularly good experience.&lt;/p&gt;
    &lt;p&gt;Over the last month or so that's been changing, and changing fast, with frequent improvements checked in by a pair of regular MAME contributors. So now is the time to talk about it, and soon (with the very next MAME release!) it will be time to actually play it. Considering there are only seven Hyper Neo Geo 64 games, well, that's a week's worth of evenings sorted.&lt;/p&gt;
    &lt;p&gt;As with every trip to Tokyo I took a few hours to stop by Akihabara this time, but its pull has certainly lessened over the years as retro prices have skyrocketed from where they were a decade ago and the selection has gotten thinner and thinner. Still, browsing the stores is a fun time and there are great finds to be found as long as you're not looking for anything too in-demand. I picked up one game: Kamiwaza, a PS2 "stealth" game where you play as a thief in feudal Japan stealing hella stuff.&lt;/p&gt;
    &lt;p&gt;As you might guess, it's more silly than stealthy.&lt;/p&gt;
    &lt;p&gt;Shout out to my shopping partner in crime, Paradise Killer's Oli Clarke Smith, for the recommendation. I've got a feature on the way in the coming weeks over at PC Gamer based on some of the games we picked up and how they speak to the "identity" of particular retro consoles. I'm hoping it'll be a fun read!&lt;/p&gt;
    &lt;p&gt;For now, let's hop into MAME; then stick around for an update on Pioneer LaserActive emulation!&lt;/p&gt;
    &lt;head rend="h2"&gt;The Big Two&lt;/head&gt;
    &lt;head rend="h3"&gt;1. The Hyper Neo Geo comes to MAME: Now with working sound!&lt;/head&gt;
    &lt;p&gt;21 years ago, David "MameHaze" Haywood started looking into what it would take to add support for the Hyper Neo Geo 64 arcade system — then just five years past the end of its short lifespan — to MAME. "When I started looking at the system back in 2004 MAME didn't really do much 3D stuff at all, even things like the MIPS (main CPU) core were in a much rougher shape, there were no dumps of the I/O MCU at all (happened only a few years ago) and the PC I had at the time barely had enough memory to load and decode even the 2D graphics," he says.&lt;/p&gt;
    &lt;p&gt;"It was also pre-YouTube, and even in the early days of YouTube you didn't really get much in the way of good reference material. Kinda crazy to think that a lot of people who are probably interested in the emulation of the platform now as younger adults weren't even born when emulation work first started on it!"&lt;/p&gt;
    &lt;p&gt;A few weeks ago, two decades after he started looking into the system, Haywood finally promoted it to "working" status in MAME. But that move was a bit of a formality, or a bit sneaky, depending on how you look at it. Though the promotion got some buzz, it wasn't truly finished: proper sound emulation was still missing. Haywood actually hadn't worked on the core since 2023, and decided, well, people had been playing the games for long enough without sound, he might as well slap the "working" label on. It turned out to be the final push other MAME contributors needed to take a crack at tuning up the sound.&lt;/p&gt;
    &lt;p&gt;What's the Hyper Neo Geo's whole deal, anyway? Well, it makes some sense that the system would be more a curiosity for younger folks to discover than an object of intense nostalgia like some of MAME's more high-profile cores or the original Neo Geo; it was only active in arcades for two years from 1997 to 1999 during the awkward transitional period to 3D, with just seven games released for it:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Road's Edge&lt;/item&gt;
      &lt;item&gt;Samurai Shodown 64&lt;/item&gt;
      &lt;item&gt;Xtreme Rally&lt;/item&gt;
      &lt;item&gt;Beat Busters: Second Nightmare&lt;/item&gt;
      &lt;item&gt;Samurai Shodown 64: Warriors Rage&lt;/item&gt;
      &lt;item&gt;Fatal Fury: Wild Ambition&lt;/item&gt;
      &lt;item&gt;Buriki One&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Here's a nice write-up of the system from Nicole Express that delves into the hardware:&lt;/p&gt;
    &lt;p&gt;None of these games have the Bloodborne-style pull to individually inspire interest in emulation, but the MAME team's all-consuming drive to reverse-engineer and archive every arcade system in existence kept it on the radar. Haywood's initial investigation into it predated even MAME's high profile support of Capcom's CPS3 boards, for instance, but once that platform was decrypted support was added quite quickly because hell yeah people wanted to play Street Fighter III. By comparison, "Hyper64 has been a 21 year on-and-off slog," he says.&lt;/p&gt;
    &lt;p&gt;It's a perfect representation one of the eternal frustrations of emulation development: People often ask why no one's working on something when they actually are. Just invisibly.&lt;/p&gt;
    &lt;quote&gt;"The sheer number of times I picked up the Hyper64 driver and pumped weeks of work in it only to not be able to make any progress at all was frustrating at the best of times. Just trying to gain an understanding of it all, but ending up not making any headway at all. That's something I don't think people really appreciate when it comes to emulation, the amount of time that you have to put in which often yields no positive results at all, where all you can really conclude is it doesn't work the way you were hoping it would work."&lt;/quote&gt;
    &lt;p&gt;A few years ago, Haywood finally made substantial progress: Someone dumped the I/O microcontroller, and he was able to write a CPU core to emulate it. "The inputs finally started working in a bunch of the games, which allowed me to explore them further and make video improvements," he said.&lt;/p&gt;
    &lt;p&gt;"Other components improving in MAME over the years has really helped too. When I started MAME didn't have a CPU core for the V53 either (which is a V33 CPU with variolus peripherals) and is the CPU driving the sound DSP. At some point in MAME's history the V53 support got fleshed out (for other systems) which has really come in handy now, as proper sound emulation requires that to be running properly."&lt;/p&gt;
    &lt;p&gt;When Haywood marked the platform as working, it caught the attention of another longtime MAME contributor: R. Belmont. For the last month or so, Belmont, as well as two other devs, Happy and O. Galibert, have been chipping away at making the games sound like they're supposed to.&lt;/p&gt;
    &lt;p&gt;"Haze marking them working did provide a push, and Happy had done a detailed disassembly of the sound CPU program which was quite useful," Belmont recently posted on Reddit. Belmont and Galibert have both been working on synthesizer support in MAME, and the Hyper Neo Geo 64's sound chip happens to be used it one, providing them with some convenient overlap in interest/speciality.&lt;/p&gt;
    &lt;p&gt;The current MAME release, 0.281, includes a series of rapid-fire improvements as documented by Belmont in a few videos on YouTube:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;"Very early work in progress on better audio for the Hyper Neo Geo 64 system. There is a loooong way to go, this is just some very basic fixes so far."&lt;/item&gt;
      &lt;item&gt;"Since the first video we've got the basic sample starts and stops working the actual correct way they're supposed to and added a preliminary support for volume envelopes, which also helps the audio balance. Still a lot of work to go though."&lt;/item&gt;
      &lt;item&gt;"More progress today! I figured out how the volume envelopes really work, and that made Buriki One's intro mostly awesome."&lt;/item&gt;
      &lt;item&gt;"Barring any last minute adjustments, this is what HNG64 audio will sound like in MAME 0.281. Since the last video, the per-voice low pass filter was added, which cleans up some of the high frequency 'hash' audible previously and makes the sound a bit cleaner."&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;It was a ton of progress for a month, taking Hyper Neo Geo 64 sound support from messy and inaccurate to, at least, broadly playable without assaulting your ears. But the real refinements have been coming in just the last few days since 0.281's release in late September.&lt;/p&gt;
    &lt;p&gt;But the next build is gonna be the big one. October's upcoming MAME 0.282 release will notably fix up the audio issues in one of the the trickiest games, Xtreme Rally, while really polishing up the rest. Here's what Belmont's noted in update notes for 0.282 so far:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;"Olivier Galibert figured out how they squeezed 12 bits of dynamic range into 8 bits (presumably this is the format from Roger Linn's original MPC60 design) and replaced the biquad low-pass filter with a more likely Chamberlin one that fits the parameters better. Also there were some improvements to the filter envelope. All this results in much clearer and higher-fidelity sound."&lt;/item&gt;
      &lt;item&gt;"This time we've figured out how looping samples actually work, fixed the final mixdown to not introduce any distortion, and fixed the filter envelope. The result? A dramatic improvement to Beast Busters Second Nightmare's intro."&lt;/item&gt;
      &lt;item&gt;"So the previous fixes seem to have solved Samurai Shodown 64 and SS64 2, but Xtreme Rally (aka Off Beat Racer) was still extremely broken. The engine sound barely worked, sounds were missing, and some sounds would stick looping forever. This time the problem wasn't actually in the sound emulation itself; Xtreme Rally has unique code among the 7 HNG64 games that tries to push sound commands to the sound CPU as quickly as possible. This resulted in as many as 2/3rds of the commands getting dropped on the floor. I have fixed that issue so that all of the commands make it, and Xtreme Rally now sounds great."&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Since Belmont made that post he dialed in a few more improvements where the wrong sounds were playing in certain instances in the game. Here's a video from Haywood showing off the vastly improved audio (though he notes "some graphical issues, such as the fog in the tunnel still need addressing eventually.")&lt;/p&gt;
    &lt;p&gt;Once MAME 0.282 releases, the Hyper Neo Geo 64 will well and truly be worthy of the "working" label. Turns out it just needed that last little push.&lt;/p&gt;
    &lt;p&gt;In a perfect encapsulation of how these sorts of collaborative projects come together, Galibert noted on Reddit that despite their contributions to the core stemming from an interest in emulating synthesizers, "amusingly, the synth itself (MPC3000) is not working at all yet." Some parts of the synthesizer remain undumped and undocumented, just as parts of the Hyper Neo Geo once were; sometimes while you're waiting for all the pieces to fall into place, it turns out one of the pieces you do have happens to fit into another puzzle entirely.&lt;/p&gt;
    &lt;p&gt;"It's just been a long slow process," Haywood said. "Things have inched forward a little bit over the years, and the surrounding code in MAME has become better / more capable, allowing for more progress to be made, step by step."&lt;/p&gt;
    &lt;head rend="h3"&gt;2. Can't stop Pioneering: NEC support and big LaserActive performance improvements arrive in the latest Ares nightlies&lt;/head&gt;
    &lt;p&gt;Often I end a big story, like the August issue's deep dive into the 16 years it took to emulate the Pioneer LaserActive, with the door open to a follow-up many months or years down the road. In this story, our hero — emudev Nemesis — finished work on one of two modules for the Laserdisc-based gaming console, making it possible to play Sega's Mega LD games via emulation for the first time.&lt;/p&gt;
    &lt;p&gt;As of publication time, Nemesis was juuuust starting to take a look at the work required to do the same for the other "pak" players could slot into the LaserActive to play NEC PC Engine games, but who knew how long that would take?&lt;/p&gt;
    &lt;p&gt;Maybe we'd come back to it before the end of 2026, or maybe next year, or maybe in half a deca-&lt;/p&gt;
    &lt;p&gt;Oh. He already did it.&lt;/p&gt;
    &lt;p&gt;"NEC LDROM2 support is functioning on nightly builds of the v147 prerelease, and will be included in the next official Ares release," Nemesis recently wrote on his website. It took less than three weeks. While you can grab the nightly build anytime, when the next stable build of Ares releases, it'll be all official-like.&lt;/p&gt;
    &lt;p&gt;Considering the bulky size of the LaserActive game rips — they can take up dozens of gigabytes — some performance optimizations Nemesis has implemented in the last few days are almost as exciting as the second console support. Because now you should be able to run the images off a decent HDD without performance issues. Here's the breakdown on Github:&lt;/p&gt;
    &lt;quote&gt;"This change brings speed enhancements to LaserActive games. The linear resampling coefficient precalculation reduces overall CPU overhead by approximately 30%, making slower CPUs much more likely to achieve full framerate. Additionally, frame prefetch using a background thread makes games much more tolerant of IO latency, making it possible to play games back from platter drives over SATA3.&lt;lb/&gt;This should be sufficient to make emulation performance acceptable on 95%+ of systems, and I don't have any further optimizations planned at this stage."&lt;/quote&gt;
    &lt;p&gt;So then — LaserActive support is more or less feature complete. What can you play? What should you play? Seeing as the system's deader than dead and nobody's likely to be playing copyright cop, the Laserdisc rips are being freely uploaded and shared here. Not every game is available yet, but here's where you should probably start:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Vajra and Vajra 2 - A pair of LaserActive-exclusive rail shooters by Data West&lt;/item&gt;
      &lt;item&gt;Triad Stone - An FMV game in the Dragon's Lair game&lt;/item&gt;
      &lt;item&gt;J.B. Harold - Blue Chicago Blues - As described by Nemesis, an "FMV murder mystery detective game, with a surprising amount of freedom. You have control over where to go, what actions to take, and what questions to ask. This title came on a double-sided CLV disc, giving it four times the video content of a typical single-sided CAV LaserActive title. The game also used separate video streams per field, to squeeze a whopping 4 hours of footage into one disc."&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;There are a couple other cool games and curiosities on the system, including more rail shooters, some prototypes of Myst, and a German TV movie that lets you swap between different perspectives — but the above should give you a taste for that sweet sweet (or fuzzy, fuzzy) '90s laser gaming.&lt;/p&gt;
    &lt;head rend="h2"&gt;Patching In&lt;/head&gt;
    &lt;p&gt;MiSTer's Taito F2 core pulls off a Hat Trick – Taito's 1990 game Football Champ, aka Hat Trick Hero, is now playable on the MiSTer's arcade core, as is the baseball game Ah Eikou no Koshien. The latter's surprisingly expressive for its era and looks like a lot more fun than I expect from '90s baseball games.&lt;/p&gt;
    &lt;p&gt;MiSTer's CDi core once again threatens you by functioning – In the latest unstable nightly build of the CDi core, developer Andre Zeps has committed several crimes of CDi improvement, including: "Fix dual SDRAM mode," "Add support for chroma subcarrier for clean composite video from external RGB converters," and "- Add bob deinterlacing to ascal." Go on then, but don't blame me if you start bleeding from every orifice while playing Wind of Gamelon.&lt;/p&gt;
    &lt;head rend="h2"&gt;Core Report&lt;/head&gt;
    &lt;p&gt;Windows builds of RPCS3 are back in business – Due to a compiler issue, RPCS3's latest builds haven't been available on Windows since back in June, but they're back and working again now. Meanwhile, contributor Whatcookie has created a surprisingly detailed breakdown of how hard it is to do nothing, efficiently.&lt;/p&gt;
    &lt;p&gt;Eden is off the Play Store, for now – Well, so much for that. After launching on Android a few weeks ago, the Switch emulator has been taken down, though you can still find builds, including for Android, on the Github. Aren't DMCA takedowns lovely?&lt;/p&gt;
    &lt;p&gt;Speedrunning-focused emulator BizHawk gets hexed – But in a good way! The source port DSDA-Doom has been integrated into BizHawk, supporting Doom, Heretic and Hexen. It also now has an integrated DOSBox-X core, as well as Opera, for the 3DO.&lt;/p&gt;
    &lt;p&gt;ShadPS4 gets more Unreal – The latest build of ShadPS4 marks a significant milestone: some Unreal Engine games for the console are now playable, and even more are bootable. Look at all these games that work!&lt;/p&gt;
    &lt;head rend="h2"&gt;Translation Station&lt;/head&gt;
    &lt;p&gt;Tis the season for brains... Dead of the Brain (2) – It's spooky season, which means the crew behind the translation of PC-98 adventure game Dead of the Brain is back with the sequel two years after the first! "Like the original game, this is also a point-and-click adventure involving zombies, but this time the gameplay is much simpler, but there's still a degree of brute force required," translation crew WINE says. Playing this one might be a bit tedious, but the art is :chefskiss:&lt;/p&gt;
    &lt;p&gt;Virtual-On, on PS3 – The PS3 re-release of this mecha game had English dialogue etc., but its UI was in Japanese. This translation patch changes that.&lt;/p&gt;
    &lt;p&gt;Wizardy VI, on Saturn – There are at least nine platforms you can play Wizardry: Bane of the Cosmic Forge on, from the 1990 DOS original to the Amiga and FM Towns and modern ports, but the Japanese-only Saturn port is unique, incorporating features from Wizardry 7, and now playable with the original English script. This version has "more spells, more traps, and more skills (though most of the extra skills do nothing in 6, unfortunately), and the art style too is very reminiscent of 7 ... it’s also got a much easier early game, which a lot of new players have notoriously struggled with when playing the other versions," hacker and fan Remisse told Sega Saturn Shiro.&lt;/p&gt;
    &lt;p&gt;Undercover Cops play board games on the GB – Prolific translation group Stardust Crusaders is back with a Game Boy board/card game based on the arcade game. I'm not gonna say it's one of Irem's all-timers (find me playing Ninja Baseball Bat Man instead), but it's cute!&lt;/p&gt;
    &lt;head rend="h2"&gt;Good pixels&lt;/head&gt;
    &lt;p&gt;It's early October which means it's basically Halloween, right? Here's a load of screenshots from the first couple hours of Dead of the Brain 2. 👻&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45516968</guid><pubDate>Wed, 08 Oct 2025 15:01:38 +0000</pubDate></item><item><title>The RSS feed reader landscape</title><link>https://lighthouseapp.io/blog/feed-reader-deep-dive</link><description>&lt;doc fingerprint="be149c54c0323cec"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;A deep dive into the rss feed reader landscape&lt;/head&gt;
    &lt;p&gt;RSS feeds and, in one form or another, feed readers, have existed for more than 20 years. Their main purpose is enabling their users to consume content from various sources in one place. And especially in recent years, also helping users deal with content overload.&lt;/p&gt;
    &lt;p&gt;Back then there were only a handful of relevant products. Today it's different, there are products for many different situations and use-cases. When first getting into RSS and feed readers, it can be difficult to find out which of this wide range of products are the right ones to use.&lt;/p&gt;
    &lt;p&gt;This article describes the landscape so you can find out which product fits best for your use-case.&lt;/p&gt;
    &lt;p&gt;Side-note: I'm using RSS as a synonym for all web feed standards (Atom, JSON Feed)&lt;/p&gt;
    &lt;head rend="h2"&gt;Classification&lt;/head&gt;
    &lt;p&gt;I attempted a classification of feed readers based on 2 axes:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Deployment model: local (phone or PC), browser extension, self-hosted, hosted&lt;/item&gt;
      &lt;item&gt;Business model: free, one-time payment, SAAS&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;The deployment model is based on where data is stored and feed fetching happens. Some products have a web app and mobile apps, but feed fetching happens on the server. In this case it's classified as &lt;code&gt;hosted&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;The business model categorization is based on the cheapest option that gives access to the full feature set of the product. A self-hostable product with a hosted option is categorized into &lt;code&gt;free&lt;/code&gt;. A freemium SAAS product is categorized as &lt;code&gt;paid (SAAS)&lt;/code&gt;.&lt;/p&gt;
    &lt;p&gt;And here the image in table format, for easily clickable links:&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="5"&gt;
        &lt;cell role="head"&gt;Pricing&lt;/cell&gt;
        &lt;cell role="head"&gt;On-device (phone or PC)&lt;/cell&gt;
        &lt;cell role="head"&gt;Browser extension&lt;/cell&gt;
        &lt;cell role="head"&gt;Self-hosted&lt;/cell&gt;
        &lt;cell role="head"&gt;Hosted&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;Free&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="5"&gt;
        &lt;cell&gt;Paid (one-time)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Paid (SAAS)&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;head rend="h2"&gt;Hosting models&lt;/head&gt;
    &lt;head rend="h3"&gt;Browser extension&lt;/head&gt;
    &lt;p&gt;Feed readers deployed as browser extensions can be installed through the respective stores of the browsers, usually either the Chrome Web Store or the Firefox Add-ons.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;Setup and maintenance: Setup typically only requires installing the extension, not even an account is needed. There is no maintenance required beyond the occasional update, which usually happens automatically.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Data control and storage: Data is stored locally, with browser storage functionality (local storage or IndexedDB). How much data can be stored depends on the storage of the device. Browser extensions can only store as much data as the browser allows itself to use. But for most users this is easily enough.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Feed fetching: Feeds are fetched on the device itself. Because the extension only runs if the browser runs, feeds are only fetched if the browser is open. This can lead to missed posts, depending on the publishing frequency of the feed and how often the browser is active.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Availability: Since all data is stored on the device, by default it's available only on the device where the extension is installed. If users enable it, the extension supports it, and the user is signed in, browsers can sync data to other devices that have the extension. Storing all data on the device also means that it is accessible offline.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Functionality: Extensions can integrate deeply with the browser, and offer features like automatic feed finding of visited websites. Extensions can also provide a comprehensive feature set. Their only limitations are more compute-intensive features (e.g. requiring machine learning), or features that require special infrastructure to run (e.g. emails).&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h4"&gt;Products (free)&lt;/head&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell role="head"&gt;Free&lt;/cell&gt;
        &lt;cell role="head"&gt;Paid (one-time)&lt;/cell&gt;
        &lt;cell role="head"&gt;Paid (SAAS)&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;In this category I only found one product. Smart-RSS was another one, but was discontinued in February.&lt;/p&gt;
    &lt;head rend="h3"&gt;On-device&lt;/head&gt;
    &lt;p&gt;On-device products are separate applications and installed on the device you want to use them. Either on your iOS or Android phone or tablet, or on your Windows, Mac, or Linux computer. They fetch feeds and store data on that device.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;Setup and maintenance: In general setup is done by installing the application. Some products may require an account, but that is not the norm. Maintenance is similar to browser extensions, the occasional updates. Some applications require manual update installations, others do that automatically.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Data control and storage: Data is stored locally on the device, which gives total control over the data. The maximum amount of feeds and articles stored only depend on the available storage of the device.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Feed fetching: Feeds are fetched on the device. For that to happen the application must be running. Some products may implement a background fetching service, in that case only the device must be turned on. Similar to browser extensions, this limitation may lead to missed posts.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Availability: Typically the data of on-device feed readers are only available on the device where it's installed. Data sync would need to be done manually or via operating system specific mechanisms (e.g. iCloud), which not all products support. Since data is stored on the device, it's also available offline.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Functionality: On-device products can use the full computing power of the device. Combined with the comparatively small storage requirements of one user, it means that some features can be significantly faster than other categories. The exact features depend on the application, and mobile apps are typically less powerful than desktop apps. Limitations are only features that require multiple users (e.g. recommendations) or specific infrastructure (e.g. newsletter subscriptions).&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h4"&gt;Products&lt;/head&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell role="head"&gt;Free&lt;/cell&gt;
        &lt;cell role="head"&gt;Paid (one-time)&lt;/cell&gt;
        &lt;cell role="head"&gt;Paid (SAAS)&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;head rend="h3"&gt;Self-hosted&lt;/head&gt;
    &lt;p&gt;Self-hosted products all fall into the open-source and free category. They are designed to be installed on a server to run continuously, though it is possible to install them on a PC as well. They fetch feeds and store data on the server, and make it available through a web interface.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;Setup and maintenance: Setup requires a server, installing the application, and depending on how it should be accessible, possibly also domain and reverse proxy setup. This needs significantly more technical knowledge than the other options, but with ChatGPT (or others) it should be possible also for fairly non-technical people. This setup is generally more complex with more failure points than the other options, but with a correct setup failures happen rarely, if at all.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Data control and storage: The application stores data on the server it runs on. Since users control their server, they also have total control over the data stored on it. Applications typically use well-established databases, which allows users to inspect and change data with common tools. The amount of data that can be stored is only limited by the available storage on the server. Most servers start at 20 GB, which is enough for most feed reading use-cases. Often, storage can be dynamically extended if more space is needed.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Feed fetching: Feeds are fetched on the server. Since it runs continuously, there is no break in feed fetching, and even high frequency feeds are no problem.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Availability: The application and all its data is accessible from any device with a web browser by navigating to the server's URL. Data is stored on the server, therefore automatically synced between all devices that use it, but also require internet access.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Functionality: On average self-hosted products have a wider feature set than browser extension or on-device feed readers. There is no theoretical limit on the feature set, but typically they keep the infrastructure as simple as possible, to keep setup and maintenance straightforward. This makes them slightly less powerful than hosted alternatives.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h4"&gt;Products&lt;/head&gt;
    &lt;p&gt;Self-hosted products are all open-source and free. The only costs are for the server, and the cheapest VPS plans start at ~2$/month.&lt;/p&gt;
    &lt;head rend="h3"&gt;Hosted&lt;/head&gt;
    &lt;p&gt;Hosted feed readers are managed services. It's required to create an account to get access to them. All of them are paid SAAS products, and most offer a free plan.&lt;/p&gt;
    &lt;p&gt;On average they have the most polished user experience and most comprehensive feature sets, since they're backed by companies that invest in continuous development.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;Setup and maintenance: Beyond creating an account, no setup is required. The same for maintenance. Service providers make sure the products work as intended, and deal with everything required to keep the service running, including infrastructure setup, monitoring, backups, etc.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Data control and storage: Since data is stored on the servers and databases of the company running the product, users don't have direct control. But through laws like GDPR users have the right to export all their data, or request deletion. Storage is essentially unlimited, though most products have limits to avoid abuse. These limits are mentioned on their pricing page.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Feed fetching: Similar to self-hosted products, feeds are fetched on the server, which runs continuously and ensures that even high-frequency feeds don't pose a problem. The fetching interval is usually dynamic, based on the popularity of a feed and the publishing frequency.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Availability: Hosted products are primarily available as web application, and some offer native apps as well. Since data is stored on the server, it's natively synced between devices. Some hosted feed readers also offer offline support.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;Functionality: Hosted feed readers serve many customers at the same time, which makes it necessary to have more complex infrastructure setups. This also enables features that other types of products cannot do, like email receiving, recommendations, or historic feed contents. Consequently hosted options are generally more powerful than other categories, though the specific feature set depends on the product.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;head rend="h4"&gt;Products&lt;/head&gt;
    &lt;table&gt;
      &lt;row&gt;
        &lt;cell role="head"&gt;Free&lt;/cell&gt;
        &lt;cell role="head"&gt;Paid (one-time)&lt;/cell&gt;
        &lt;cell role="head"&gt;Paid (SAAS)&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;All hosted products are SAAS products and charge monthly. &lt;code&gt;Folo&lt;/code&gt; is an outlier, they currently don't have any paid features, but the terms of service indicate that this will come in the future. At that point it will join the others in the &lt;code&gt;Paid (SAAS)&lt;/code&gt; category.&lt;/p&gt;
    &lt;head rend="h2"&gt;App support and offline access for products that don't offer it natively&lt;/head&gt;
    &lt;p&gt;Many of the self-hosted or hosted products don't provide apps or offline access by themselves. However, with the right setup, it's still possible to access the articles offline.&lt;/p&gt;
    &lt;p&gt;Most of these products provide APIs. This can be a proprietary API, or an API based on the old Google Reader API.&lt;/p&gt;
    &lt;p&gt;Mobile apps, for example ReadKit or Fiery Feeds, can not only subscribe to feeds, but also connect to other products through their APIs. They download contents, store them locally, and sync changes back to the connected products.&lt;/p&gt;
    &lt;p&gt;These apps make it possible to use a native mobile app for products that don't provide an app themselves, and get offline access at the same time.&lt;/p&gt;
    &lt;p&gt;FreshRSS, for example, has a list of native apps that support it.&lt;/p&gt;
    &lt;head rend="h2"&gt;A note on newsletters&lt;/head&gt;
    &lt;p&gt;Newsletters are a growing mechanism for delivering (blog) content. Some, but not all, hosted feed readers support newsletters out of the box. But on-device products can't do that at all because of their infrastructure limitations.&lt;/p&gt;
    &lt;p&gt;Even if a feed reader doesn't support newsletters by itself, it's still possible to get newsletters into the feed reader, through services that convert newsletters into RSS feeds.&lt;/p&gt;
    &lt;p&gt;These services generate an email address and give you a corresponding feed URL. Emails to the generated address are added to the feed as new entry. So after signing up to the newsletter and adding the feed URL, the newsletter is added to the feed reader even without native email support.&lt;/p&gt;
    &lt;p&gt;Services that do this are Kill the Newsletter and the Lighthouse Newsletter to RSS tool. Both are free.&lt;/p&gt;
    &lt;head rend="h2"&gt;Products&lt;/head&gt;
    &lt;p&gt;The descriptions highlight the defining and unique aspects of the products, for the full feature list please go to their respective websites. Where available I used the screenshots for their websites, to represent the products as best as possible (test account screenshots wouldn't be as good).&lt;/p&gt;
    &lt;head rend="h3"&gt;NetNewsWire (on-device, free)&lt;/head&gt;
    &lt;p&gt;NetNewsWire is a free, on-device feed reader for Mac and iOS. By default it stores data on the device itself, but can sync via iCloud and using other products as storage. And it provides a Safari extension for easy feed-adding. Notably, it supports AppleScript, which makes it possible to automate certain workflows.&lt;/p&gt;
    &lt;head rend="h3"&gt;Fiery Feeds (on device, paid SAAS)&lt;/head&gt;
    &lt;p&gt;Fiery feeds is a Mac and iOS app. The download is free, and to get the premium features it costs ~15$/year (varies by region). By default it stores data on the device itself, but can sync via iCloud and using the API of other products (e.g. FreshRSS). The main distinguishing features are the customization options of the app, like custom themes.&lt;/p&gt;
    &lt;head rend="h3"&gt;Reeder (on-device, SAAS)&lt;/head&gt;
    &lt;p&gt;The current version of Reeder is a Mac and iOS app. The download is free, and to get the premium features it costs ~10$/year. The previous version of Reeder, now called Reeder Classic, is still available as one-time purchase. It also stores data on-device, and can sync via iCloud.&lt;/p&gt;
    &lt;p&gt;The main distinguishing feature is the unified timeline, which includes RSS, podcasts, social media, and more.&lt;/p&gt;
    &lt;head rend="h3"&gt;FreshRSS (self-hosted, free)&lt;/head&gt;
    &lt;p&gt;FreshRSS is a self-hosted feed reader and once set up, it's available as a web app. It is quite powerful, and in addition to normal feed subscriptions offers WebSub as well. It's possible to customize it with themes and extensions, and it's translated into more than 15 languages.&lt;/p&gt;
    &lt;p&gt;Together with Miniflux they're the most-recommended self-hosted options.&lt;/p&gt;
    &lt;head rend="h3"&gt;Miniflux&lt;/head&gt;
    &lt;p&gt;Miniflux is a self-hosted feed reader as well, and available as web app after setup. It's focus is on staying simple and fast instead of adding fancy features. It also offers a hosted version, which is 15$/year and has a 15 day trial period.&lt;/p&gt;
    &lt;p&gt;Together with FreshRSS they're the most-recommended self-hosted options.&lt;/p&gt;
    &lt;head rend="h3"&gt;Folo (hosted, free)&lt;/head&gt;
    &lt;p&gt;Folo is a relatively new product developed by the creators of RSS Hub. It's a free hosted feed reader, with apps available for every major platform. Their terms of service suggest that at some point they will charge a monthly fee for some premium features, but at the time of writing there were no paid features.&lt;/p&gt;
    &lt;p&gt;Folo is also open-source and therefore theoretically self-hostable, but I haven't found documentation for it.&lt;/p&gt;
    &lt;p&gt;It has a huge feature set, including newsletter support, transforming websites into feeds, AI summaries, and much more.&lt;/p&gt;
    &lt;head rend="h3"&gt;Feedly (hosted, SAAS)&lt;/head&gt;
    &lt;p&gt;Feedly is the most widely-known product and has the most users of all feed readers. It has a comprehensive features set, and offers a free plan as well. For the past couple of years, it seems that Feedly has focused more on AI features and enterprise customers, but their core product remains solid.&lt;/p&gt;
    &lt;head rend="h3"&gt;Inoreader&lt;/head&gt;
    &lt;p&gt;Inoreader is the second most widely-known product, after Feedly. It too offers a free plan. Their feature list is impressive, with social media support for subscriptions, automation and AI features, public API and integrations. And of course much more.&lt;/p&gt;
    &lt;p&gt;What stands out on Reddit are complaints about price hikes. Though Inoreader probably has tens or hundreds of thousands of users who don't have issues and think the product is great.&lt;/p&gt;
    &lt;head rend="h3"&gt;Readwise Reader&lt;/head&gt;
    &lt;p&gt;Readwise Reader is a relatively new product, from the creators of the original Readwise. It's a great feed reader, though were it really shines is the reading experience. They also have reading views for PDFs, eBooks, and more.&lt;/p&gt;
    &lt;p&gt;The website mentions that it's in beta, but it has been in beta for years now and at this point is a stable product, and has been for awhile.&lt;/p&gt;
    &lt;head rend="h3"&gt;Tiny Tiny RSS&lt;/head&gt;
    &lt;p&gt;Tiny Tiny RSS deserves an honorable mention in this list. It was, and still is, used by many, and has been for a long time, and was often recommended on the RSS subreddit.&lt;/p&gt;
    &lt;p&gt;On October 3rd the maintainer announced that he's going to stop working on it, and will remove all infrastructure on November 1st. Forks of the project with other maintainers may pop up, but at the moment it's too soon to tell what the future of Tiny Tiny RSS will be.&lt;/p&gt;
    &lt;head rend="h3"&gt;Lighthouse&lt;/head&gt;
    &lt;p&gt;Lighthouse is also a relatively new product. It's in beta, which refers to the fact that it doesn't yet have all features necessary to fulfill its vision, which goes beyond simple feed reading.&lt;/p&gt;
    &lt;p&gt;The main differentiator is that it focuses on articles over feeds, and has a separate view for curating articles (the inbox). It's focused on finding high-value content.&lt;/p&gt;
    &lt;head rend="h2"&gt;Similar product categories&lt;/head&gt;
    &lt;p&gt;Feed readers are powerful products, which require manual setup to make them work well. Subscribing to feeds is mandatory, adding tags, filtered views, and rules can make them work even better. But for some use-cases, other product categories are simpler and might work better.&lt;/p&gt;
    &lt;head rend="h3"&gt;News aggregators&lt;/head&gt;
    &lt;p&gt;News aggregators automatically collect and curate news from a large variety of sources. They usually provide some customization options, but focus on news and don't allow arbitrary feed subscriptions like feed readers do.&lt;/p&gt;
    &lt;p&gt;They focus on providing an overview of the most relevant news stories.&lt;/p&gt;
    &lt;p&gt;Examples are Kagi News, Ground News, and SmartNews.&lt;/p&gt;
    &lt;head rend="h3"&gt;Reading lists&lt;/head&gt;
    &lt;p&gt;Reading lists, also called read-it-later apps, are for saving and organizing links you found somewhere on the web. Many feed readers can do the same, but reading lists are optimized for that purpose.&lt;/p&gt;
    &lt;p&gt;Examples are Instapaper and Matter. Karakeep is a self-hosted option.&lt;/p&gt;
    &lt;head rend="h2"&gt;How to choose&lt;/head&gt;
    &lt;p&gt;For most people, going with one of the hosted products is the best option. They're generally the most polished and most powerful products, owing to the fact that they have companies behind them with full-time engineers. They generally also offer a free plan, so if you stay within the limits of those, they will even be free to use.&lt;/p&gt;
    &lt;p&gt;For more specific requirements, products of the other categories can work better. They have different characteristics, and can work better in some situations. For example, if you want total control over your data, self-hosted options are the way to go.&lt;/p&gt;
    &lt;p&gt;It's probably easiest to first decide on the category, and then check out multiple products, or maybe even try them out. Virtually all products support OPML import and export, so moving feed subscriptions from one product to the next is almost zero effort.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45517134</guid><pubDate>Wed, 08 Oct 2025 15:17:36 +0000</pubDate></item><item><title>Ortega hypothesis</title><link>https://en.wikipedia.org/wiki/Ortega_hypothesis</link><description>&lt;doc fingerprint="efd8585d1ac4d390"&gt;
  &lt;main&gt;&lt;head rend="h1"&gt;Ortega hypothesis&lt;/head&gt;&lt;p&gt;The Ortega hypothesis holds that average or mediocre scientists contribute substantially to the advancement of science.[1] According to this hypothesis, scientific progress occurs mainly by the accumulation of a mass of modest, narrowly specialized intellectual contributions. On this view, major breakthroughs draw heavily upon a large body of minor and little-known work, without which the major advances could not happen.[2]&lt;/p&gt;&lt;head rend="h2"&gt;Citation research&lt;/head&gt;[edit]&lt;p&gt;The Ortega hypothesis is widely held,[2] but a number of systematic studies of scientific citations have favored the opposing "Newton hypothesis", which says that scientific progress is mostly the work of a relatively small number of great scientists (after Isaac Newton's statement that he "stood on the shoulders of giants").[1] The most important papers mostly cite other important papers by a small number of outstanding scientists, suggesting that the breakthroughs do not actually draw heavily on a large body of minor work.[2] Rather, the pattern of citations suggests that most minor work draws heavily on a small number of outstanding papers and outstanding scientists. Even minor papers by the most eminent scientists are cited much more than papers by relatively unknown scientists; and these elite scientists are clustered mostly in a small group of elite departments and universities.[2] The same pattern of disproportionate citation of a small number of scholars appears in fields as diverse as physics and criminology.[3]&lt;/p&gt;&lt;p&gt;The matter is not settled. No research has established that citation counts reflect the real influence or worth of scientific work. So, the apparent disproof of the Ortega hypothesis may be an artifact of inappropriately chosen data.[4] Stratification within the social networks of scientists may skew the citation statistics.[5] Many authors cite research papers without actually reading them or being influenced by them.[6] Experimental results in physics make heavy use of techniques and devices that have been honed by many previous inventors and researchers, but these are seldom cited in reports on those results.[7][8] Theoretical papers have the broadest relevance to future research, while reports of experimental results have a narrower relevance but form the basis of the theories. This suggests that citation counts merely favor theoretical results.[7]&lt;/p&gt;&lt;head rend="h2"&gt;The name&lt;/head&gt;[edit]&lt;p&gt;The name of the hypothesis refers to José Ortega y Gasset, who wrote in The Revolt of the Masses that "astoundingly mediocre" men of narrow specialties do most of the work of experimental science.[9] Ortega most likely would have disagreed with the hypothesis that has been named after him, as he held not that scientific progress is driven mainly by the accumulation of small works by mediocrities, but that scientific geniuses create a framework within which intellectually commonplace people can work successfully. For example, Ortega thought that Albert Einstein drew upon the ideas of Immanuel Kant and Ernst Mach to form his own synthesis, and that Einstein did not draw upon masses of tiny results produced systematically by mediocrities. According to Ortega, science is mostly the work of geniuses, and geniuses mostly build on each other's work, but in some fields there is a real need for systematic laboratory work that could be done by almost anyone.[10]&lt;/p&gt;&lt;p&gt;The "Ortega hypothesis" derives only from this last element of Ortega's theory, not the main thrust of it. Ortega characterized this type of research as "mechanical work of the mind" that does not require special talent or even much understanding of the results, performed by people who specialize in one narrow corner of one science and hold no curiosity beyond it.[10]&lt;/p&gt;&lt;head rend="h2"&gt;See also&lt;/head&gt;[edit]&lt;head rend="h2"&gt;References&lt;/head&gt;[edit]&lt;list rend="ol"&gt;&lt;item&gt;^ a b David J. Hess. Science Studies: An Advanced Introduction, p. 71. NYU Press, 1997.&lt;/item&gt;&lt;item&gt;^ a b c d Jonathan R. Cole and Cole, Stephen. "The Ortega hypothesis." Science, New Series, Vol. 178, No. 4059 (Oct. 27, 1972), pp. 368-375.&lt;/item&gt;&lt;item&gt;^ M. Oromaner. "The Ortega hypothesis and influential articles in American sociology." Scientometrics, Vol. 7, No. 1 (Jan. 26, 1985), pp. 3–10. doi:10.1007/BF02020136&lt;/item&gt;&lt;item&gt;^ M.H. MacRoberts and Barbara R. MacRoberts. "Testing the Ortega Hypothesis: Facts and Artifacts." Scientometrics, Vol. 12, Nos. 5–6 (1987) pp. 293–295.&lt;/item&gt;&lt;item&gt;^ Hildrun Kretschmer. "Measurement of social stratification. A contribution to the dispute on the ORTEGA hypothesis." Scientometrics, Vol. 26 No. 1 (1993), pp. 97–113. doi:10.1007/BF02016795&lt;/item&gt;&lt;item&gt;^ Heidi Lee Hoerman and Nowicke, Carole Elizabeth. "Secondary and Tertiary Citing: A Study of Referencing Behavior in the Literature of Citation Analysis Deriving from the Ortega Hypothesis of Cole and Cole." The Library Quarterly, Vol. 65, No. 4 (Oct., 1995), pp. 415-434.&lt;/item&gt;&lt;item&gt;^ a b S. A. Goudsmit, John D. McGervey, Robert J. Yaes, Jonathan R. Cole and Stephen Cole "Citation Analysis." Science, New Series, Vol. 183, No. 4120 (Jan. 11, 1974), pp. 28+30-33.&lt;/item&gt;&lt;item&gt;^ Endre Száva-Kováts. "Non-indexed eponymal citedness (NIEC): first fact-finding examination of a phenomenon of scientific literature." Journal of Information Science, 1994 20:55 doi:10.1177/016555159402000107&lt;/item&gt;&lt;item&gt;^ José Ortega y Gasset. The Revolt of the Masses, pp. 110-111. Norton, 1932.&lt;/item&gt;&lt;item&gt;^ a b Endre Száva-Kováts. "The false 'Ortega Hypothesis': a literature science case study." Journal of Information Science 2004 30: 496. doi:10.1177/0165551504047823&lt;/item&gt;&lt;/list&gt;&lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45517674</guid><pubDate>Wed, 08 Oct 2025 16:06:21 +0000</pubDate></item><item><title>WinBoat: Windows apps on Linux with seamless integration</title><link>https://www.winboat.app/</link><description>&lt;doc fingerprint="b48fe95fd1b73cdc"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt; Run Windows apps on 🐧 Linux&lt;lb/&gt;with ✨ seamless integration &lt;/head&gt;
    &lt;head rend="h2"&gt;FFFFF/Features/sssss&lt;/head&gt;
    &lt;head rend="h2"&gt;Elegant Interface&lt;/head&gt;
    &lt;p&gt;WinBoat provides a sleek and intuitive interface that seamlessly integrates Windows into your Linux desktop environment, making it feel like a native experience.&lt;/p&gt;
    &lt;head rend="h2"&gt;Automated Installs&lt;/head&gt;
    &lt;p&gt;Installing Windows via WinBoat is a delightfully simple process all done through our interface. Pick your preferences &amp;amp; specs and let us handle the rest.&lt;/p&gt;
    &lt;head rend="h2"&gt;Run Any App&lt;/head&gt;
    &lt;p&gt;If it runs on Windows, it can run on WinBoat. Enjoy the full range of Windows applications, from productivity tools to entertainment, all within your Linux environment as native OS-level windows.&lt;/p&gt;
    &lt;head rend="h2"&gt;Filesystem Integration&lt;/head&gt;
    &lt;p&gt;Accessing your Linux filesystem from Windows is a breeze. Your home directory is mounted in Windows, allowing you to easily share files between the two systems without any hassle.&lt;/p&gt;
    &lt;head rend="h2"&gt;And many more...&lt;/head&gt;
    &lt;p&gt;There's tons more you can do with WinBoat, for example smartcard passthrough and resource monitoring. We're always looking to add more features, so stay tuned for updates!&lt;/p&gt;
    &lt;p&gt;Scroll for more!&lt;/p&gt;
    &lt;head rend="h2"&gt;Elegant Interface&lt;/head&gt;
    &lt;p&gt;WinBoat provides a sleek and intuitive interface that seamlessly integrates Windows into your Linux desktop environment, making it feel like a native experience.&lt;/p&gt;
    &lt;head rend="h2"&gt;Automated Installs&lt;/head&gt;
    &lt;p&gt;Installing Windows via WinBoat is a delightfully simple process all done through our interface. Pick your preferences &amp;amp; specs and let us handle the rest.&lt;/p&gt;
    &lt;head rend="h2"&gt;Run Any App&lt;/head&gt;
    &lt;p&gt;If it runs on Windows, it can run on WinBoat. Enjoy the full range of Windows applications, from productivity tools to entertainment, all within your Linux environment as native OS-level windows.&lt;/p&gt;
    &lt;head rend="h2"&gt;Filesystem Integration&lt;/head&gt;
    &lt;p&gt;Accessing your Linux filesystem from Windows is a breeze. Your home directory is mounted in Windows, allowing you to easily share files between the two systems without any hassle.&lt;/p&gt;
    &lt;head rend="h2"&gt;And many more...&lt;/head&gt;
    &lt;p&gt;There's tons more you can do with WinBoat, for example smartcard passthrough and resource monitoring. We're always looking to add more features, so stay tuned for updates!&lt;/p&gt;
    &lt;head rend="h2"&gt;DDDD/Download/ddddd&lt;/head&gt;
    &lt;p&gt;We're excited to have you onboard! Pick your platform below to get started with WinBoat within minutes, not hours.&lt;/p&gt;
    &lt;head rend="h2"&gt;CCCC/Contribute/eeeee&lt;/head&gt;
    &lt;p&gt;WinBoat is an open-source project licensed under MIT, and we welcome contributions from the community. Whether you're a developer, designer, or just someone who loves WinBoat, there are many ways you can help us improve and grow.&lt;/p&gt;
    &lt;head rend="h2"&gt;CCCC/Community/yyyyy&lt;/head&gt;
    &lt;p&gt;We usually hang out on Discord, come join and chat with us!&lt;/p&gt;
    &lt;head rend="h2"&gt;FFFFF/Frequently Asked Questions/sssss&lt;/head&gt;
    &lt;head class="p-6 text-lg bg-gradient-to-b from-indigo-500/50 to-indigo-900/40 rounded-2xl select-none cursor-pointer" data-astro-cid-al2ca2vr=""&gt;How does it compare to WinApps?&lt;/head&gt;
    &lt;p&gt;With WinApps you do the bulk of the setup manually, and there's no cohesive interface to bring it all together. There's a basic TUI, a taskbar widget, and some CLI commands for you to play with.&lt;lb/&gt; WinBoat does all the setup once you have the pre-requisites installed, displays everything worth seeing in a neat interface for you, and acts like a complete experience. No need to mess with configuration files, no need to memorize a dozen CLI commands, it just works.&lt;/p&gt;
    &lt;head class="p-6 text-lg bg-gradient-to-b from-indigo-500/50 to-indigo-900/40 rounded-2xl select-none cursor-pointer" data-astro-cid-al2ca2vr=""&gt;What are the advantages of using this over CrossOver or WINE?&lt;/head&gt;
    &lt;p&gt;You can run stuff that doesn't play well with CrossOver or WINE, and have a full Windows desktop at the same time.&lt;lb/&gt; We've had numerous apps that weren't working nicely (or at all) in Wine, this is one of the reasons we've created WinBoat. Some examples would be Affinity Photo, Paint Tool Sai v1.0, the entire Adobe suite, AeroChat, Acrobat, and of course Office.&lt;/p&gt;
    &lt;head class="p-6 text-lg bg-gradient-to-b from-indigo-500/50 to-indigo-900/40 rounded-2xl select-none cursor-pointer" data-astro-cid-al2ca2vr=""&gt;Will I be able to configure my peripherals / hardware using WinBoat?&lt;/head&gt;
    &lt;p&gt;If your peripheral / hardware uses USB to connect to your device. then yes! Starting from WinBoat 0.8.0 we support USB passthrough as an experimental feature and you can use any Windows software needed for configuration, it should work out of the box.&lt;/p&gt;
    &lt;head class="p-6 text-lg bg-gradient-to-b from-indigo-500/50 to-indigo-900/40 rounded-2xl select-none cursor-pointer" data-astro-cid-al2ca2vr=""&gt;Is there USB passthrough?&lt;/head&gt;
    &lt;p&gt; Yes! Starting from WinBoat 0.8.0 we support USB passthrough as an experimental feature. Please give it a try and let us know what you think! 😄&lt;lb/&gt; If for whatever reason you're stuck with an older version of WinBoat, you can modify the docker-compose.yml file in ~/.winboat once you finished setting up WinBoat. You can add the appropriate USB devices like this, followed by executing docker-compose down and docker-compose up -d in the same folder. Please make sure to remove these changes before you upgrade to &amp;gt;=0.8.0 though, as they are incompatible with our implementation.&lt;/p&gt;
    &lt;head class="p-6 text-lg bg-gradient-to-b from-indigo-500/50 to-indigo-900/40 rounded-2xl select-none cursor-pointer" data-astro-cid-al2ca2vr=""&gt;Is there GPU passthrough?&lt;/head&gt;
    &lt;p&gt;Not at the moment, but we plan on eventually implementing GPU acceleration through paravirtualized drivers.&lt;lb/&gt; We have looked at MVisor Win VGPU Driver for OpenGL, which seems promising from our tests, but it's for a different hypervisor (not compatible with QEMU). Some other folks are also working on DirectX drivers but nothing that we can try out yet.&lt;lb/&gt; We have also looked into Looking Glass extensively, specifically their Indirect Display Driver which does not need a second GPU, because it'd be absolutely amazing to have it. We got the driver to compile and start via some hacks, but couldn't get much more than a black screen. The developer says it is not ready for general use yet at all, however we plan to integrate it once it is ready.&lt;/p&gt;
    &lt;head class="p-6 text-lg bg-gradient-to-b from-indigo-500/50 to-indigo-900/40 rounded-2xl select-none cursor-pointer" data-astro-cid-al2ca2vr=""&gt;Does it run games with anti-cheat that don't run on Linux?&lt;/head&gt;
    &lt;p&gt;Unfortunately running games with kernel anti-cheat is not possible, as they block virtualization.&lt;/p&gt;
    &lt;head class="p-6 text-lg bg-gradient-to-b from-indigo-500/50 to-indigo-900/40 rounded-2xl select-none cursor-pointer" data-astro-cid-al2ca2vr=""&gt;Any possibility of adding Podman support as a Docker alternative?&lt;/head&gt;
    &lt;p&gt;Podman support is planned. We tried working on it, some contributors also tried working on it, but there's some issues with networking (specifically the guest server being unreachable) that prevent it from being functional for now.&lt;/p&gt;
    &lt;head class="p-6 text-lg bg-gradient-to-b from-indigo-500/50 to-indigo-900/40 rounded-2xl select-none cursor-pointer" data-astro-cid-al2ca2vr=""&gt;Will you make it into a Flatpak?&lt;/head&gt;
    &lt;p&gt;This is on our to-do list, but it'll take some effort because Flatpak is pretty isolated from the rest of the system and apps, so we'd have to find a way to expose installed apps, the Docker binary, and the Docker socket, and many other utilities.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45518813</guid><pubDate>Wed, 08 Oct 2025 17:56:32 +0000</pubDate></item><item><title>Show HN: FleetCode – Open-source UI for running multiple coding agents</title><link>https://github.com/built-by-as/FleetCode</link><description>&lt;doc fingerprint="57844e5f478d9a2f"&gt;
  &lt;main&gt;
    &lt;p&gt;A desktop terminal application for running multiple CLI coding agents simultaneously, each in isolated git worktrees.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Multiple Sessions: Run multiple coding agent sessions (Claude, Codex) in parallel&lt;/item&gt;
      &lt;item&gt;Git Worktree Isolation: Each session runs in its own git worktree, keeping work isolated&lt;/item&gt;
      &lt;item&gt;Persistent Sessions: Sessions persist across app restarts with automatic resumption&lt;/item&gt;
      &lt;item&gt;Terminal Theming: Choose from preset themes (macOS Light/Dark, Solarized Dark, Dracula, One Dark, GitHub Dark)&lt;/item&gt;
      &lt;item&gt;Setup Commands: Configure shell commands to run before the coding agent starts&lt;/item&gt;
      &lt;item&gt;MCP Server Management: Add and configure Model Context Protocol (MCP) servers&lt;/item&gt;
      &lt;item&gt;Session Management: Rename, close, and delete sessions with automatic worktree cleanup&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Node.js 16+&lt;/item&gt;
      &lt;item&gt;Git&lt;/item&gt;
      &lt;item&gt;Claude CLI (&lt;code&gt;npm install -g @anthropic-ai/claude-cli&lt;/code&gt;) or Codex&lt;/item&gt;
    &lt;/list&gt;
    &lt;code&gt;npm install&lt;/code&gt;
    &lt;code&gt;npm run dev&lt;/code&gt;
    &lt;code&gt;npm run build
npm start&lt;/code&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Select a project directory (must be a git repository)&lt;/item&gt;
      &lt;item&gt;Choose a parent branch for the worktree&lt;/item&gt;
      &lt;item&gt;Select your coding agent (Claude or Codex)&lt;/item&gt;
      &lt;item&gt;Optionally add setup commands (e.g., environment variables, source files)&lt;/item&gt;
      &lt;item&gt;FleetCode creates a new git worktree and spawns a terminal session&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;New Sessions: Use &lt;code&gt;--session-id &amp;lt;uuid&amp;gt;&lt;/code&gt;for first-time Claude sessions&lt;/item&gt;
      &lt;item&gt;Reopened Sessions: Automatically resume with &lt;code&gt;--resume &amp;lt;uuid&amp;gt;&lt;/code&gt;&lt;/item&gt;
      &lt;item&gt;Worktrees: Each session gets its own isolated git worktree&lt;/item&gt;
      &lt;item&gt;Persistence: Sessions are saved and can be reopened after closing the app&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Access settings via the gear icon (⚙️) in the sidebar:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Font Family: Choose from common monospace fonts&lt;/item&gt;
      &lt;item&gt;Font Size: Adjust terminal text size&lt;/item&gt;
      &lt;item&gt;Theme: Select from preset color themes&lt;/item&gt;
      &lt;item&gt;Cursor Blink: Toggle cursor blinking&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Configure Model Context Protocol servers for enhanced agent capabilities:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;stdio: Direct process communication&lt;/item&gt;
      &lt;item&gt;SSE: Server-sent events via HTTP&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;If you encounter a quarantine warning when trying to open the app on macOS, run:&lt;/p&gt;
    &lt;code&gt;xattr -cr /path/to/FleetCode.app&lt;/code&gt;
    &lt;p&gt;This removes the quarantine attribute that prevents the app from opening.&lt;/p&gt;
    &lt;p&gt;If you're using Claude Code and it's reading/writing files from the wrong directory instead of the worktree, disable "Auto connect to IDE" in your Claude Code settings:&lt;/p&gt;
    &lt;code&gt;claude config&lt;/code&gt;
    &lt;p&gt;Set &lt;code&gt;autoConnectToIde&lt;/code&gt; to &lt;code&gt;false&lt;/code&gt;. This ensures Claude Code operates within the correct worktree directory.&lt;/p&gt;
    &lt;p&gt;ISC&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45518861</guid><pubDate>Wed, 08 Oct 2025 18:00:34 +0000</pubDate></item><item><title>A few things to know before stealing my 914 (2022)</title><link>https://www.hagerty.com/media/advice/a-few-things-to-know-before-you-steal-my-914/</link><description>&lt;doc fingerprint="36419e95892d15df"&gt;
  &lt;main&gt;
    &lt;head rend="h2"&gt;Media | Articles&lt;/head&gt;
    &lt;head rend="h1"&gt;A few things to know before stealing my 914&lt;/head&gt;
    &lt;p&gt;Dear Thief,&lt;/p&gt;
    &lt;p&gt;Welcome to my Porsche 914. I imagine that at this point (having found the door unlocked) your intention is to steal my car. Don’t be encouraged by this; the tumblers sheared off in 1978. I would have locked it up if I could, so don’t think you’re too clever or that I’m too lazy. However, now that you’re in the car, there are a few things you’re going to need to know. First, the battery is disconnected, so slide-hammering my ignition switch is not your first step. I leave the battery disconnected, not to foil hoodlums such as yourself, but because there is a mysterious current drain from the 40-year-old German wiring harness that I can’t locate and/or fix. So, connect the battery first. Good luck finding the engine cover release. Or the engine, for that matter.&lt;/p&gt;
    &lt;p&gt;Now, you can skip your slide hammer. The ignition switch’s tumblers are so worn that any flat-bladed screwdriver or pair of scissors will do. Don’t tell anyone.&lt;/p&gt;
    &lt;p&gt;Once you’ve figured that out and try to start the car, you’ll run into some trouble. The car is most likely in reverse gear, given that the parking brake cable froze up sometime during the Carter administration. Since there is not a clutch safety switch on the starting circuit, make sure to press the clutch down before you try to crank the engine. (I don’t want you running into my other car in the driveway.) This is doubly necessary because my starter is too weak to crank the clutch-transmission input shaft assembly with any success.&lt;/p&gt;
    &lt;p&gt;With the clutch pedal depressed, the engine should turn over fast enough to get things going. But first, you’ll need to press the gas pedal to the floor exactly four times. Not three. Not five. Four. The dual Webers don’t have chokes and you’ll be squirting fuel down the barrels with the accelerator pumps for the necessary priming regime. If you don’t do it right, the car won’t start before the battery gives up the ghost. Consider yourself forewarned.&lt;/p&gt;
    &lt;p&gt;If you’ve followed along so far, the engine should fire right up. Don’t be fooled—it will die in eight seconds when the priming fuel runs out. Repeat the gas pedal priming procedure, but only pump two times. Deviate from this routine at your own peril.&lt;/p&gt;
    &lt;p&gt;Now you have the engine running. Make sure the green oil light in the dash goes out. If it does not, you only have about 100 yards to drive before the engine locks up, so be attentive. If all goes well with the oil pressure, you may now attend to the gear shift lever. Some explanation follows.&lt;/p&gt;
    &lt;p&gt;This is a Porsche 914. It has a mid-engine layout. The transmission is in the far back of the car, and the shift linkage’s main component is a football-field-long steel rod formed loosely in the shape of your lower intestine. Manipulating the gear shift lever will deliver vague suggestions to this rod, which, in turn, will tickle small parts deep within the dark bowels of the transaxle case. It is akin to hitting a bag of gears with a stick, hopefully finding one that works.&lt;/p&gt;
    &lt;p&gt;If you are successful in finding first gear (there is a shift pattern printed on the knob; they say German engineers don’t have a sense of humor), congratulations. You may launch the vehicle into motion.&lt;/p&gt;
    &lt;p&gt;Do not become emboldened by your progress, as you will quickly need to shift to another gear. Ouija boards are more communicative than the shift knob you will be trusting to aid your efforts. Depress the clutch as you would in any car, and pull the knob from its secure location out of first gear. Now you will become adrift in the zone known to early Porsche owners as “Neverland” and your quest will be to find second gear. Prepare yourself for a ten-second-or-so adventure. Do not go straight forward with the shift knob, as you will only find Reverse waiting there to mock you with a shriek of high-speed gear teeth machining themselves into round cylinders. Should you hear this noise, retreat immediately to the only easy spot to find in this transmission: neutral. This is a safe place, no real damage can occur here, but alas, no forward motion will happen either. From this harbor of peace, you can re-attempt to find second, but you may just want to go for any “port in a storm”, given that the traffic behind you is now cheering you on in your quest with vigorous horn-honks of support and encouragement. Most 914 owners at this point pull over to the side of the road and feign answering a cell phone call to a) avoid further humiliation; b) allow traffic to pass; and c) gather the courage for another first gear start. You may choose to do likewise.&lt;/p&gt;
    &lt;p&gt;If you press onward without taking a break, you may re-enter first. This is how the car mocks you for your lack of skill, but sometimes it is the only path forward. Once you are ready to again try for second, I can offer some advice. One trick that works is to declutch the transmission, pull the lever from the first-gear position, enter into the aforementioned neutral zone, and then rapidly wig-wag the shift knob side-to-side along a lateral axis. If you move the knob quickly enough, the transmission will be out-smarted and cannot anticipate your next move. It is at this time that you should re-attempt to enter second, and most likely you will do so. Surprise is your best weapon against this transmission.&lt;/p&gt;
    &lt;p&gt;The move to third should be straightforward, as it’s the only easily-accessible gear in the set. You should now be out of my neighborhood and on the main four-lane road. Third gear will be good for 45 mph, so I would advise you just staying there. Trying to get to fourth gear will only frustrate you and your nearby drivers (see: first-to-second shift).&lt;/p&gt;
    &lt;p&gt;You don’t need to check for gasoline in the car. It will be full, even though the fuel gauge reads zero. The odometer reads “0”, not because it was reset when I filled the tank, but because it is just broken. Ignore it. If it is night, and it most likely will be, you will need to turn on the lights. I’ll leave it to you to find the switch since I’ve helped a lot so far. Suffice to say that once you get them active, you will find that the seven inch sealed beams from 1971 will only illuminate sufficient roadway for travel below 45 mph. Since you are still in third , this shouldn’t be a problem. Oh, and the lights only work on high beam, so ignore the flashing lights and vulgar gestures from opposing traffic.&lt;/p&gt;
    &lt;p&gt;By now you’ve certainly noticed the smell. That is the aroma of Mobil 1 oil being boiled off of long sections of horizontal exhaust pipes, which were cleverly encased by the factory with a second shroud of oil-holding chambers. They filled with oil during my last drive and you are now operating a small thermal refinery that is making light short-chained vaporous hydrocarbons from what was once $8-a-quart oil. They are being conveniently routed to the cabin through carefully formed channels in the heating system, plus the rust holes in the floor provided by Mother Nature herself over the past few decades.&lt;/p&gt;
    &lt;p&gt;You’ll feel less dizzy if you open a window. But mind that driver’s window does not work, so you’ll have to lean over and roll down the passenger window half-way. I say half-way in a manner that will become apparent once you try to get the window to go all the way down, which it will refuse to do. Instead, simply open the driver’s door slightly and drive along, as I do. Once the oil vapors are exhumed from the cabin, you should start to feel a little better. There is a rag behind the driver’s seat that you can use to wipe the oil film off of the inside of the windshield.&lt;/p&gt;
    &lt;p&gt;Knowing which road you’re probably on by now, you will be hitting stop lights. Try as hard as you can to not bring the 914 to a stop. The brake system is ideal for this situation, being known more as “scrubbers” than “brakes”. Since you can’t effectively stop the car, use this to your advantage and don’t try. Remember: You certainly don’t want to have to go back into first.&lt;/p&gt;
    &lt;p&gt;If you have made it within sight of to the highway entrance, don’t get any ideas. The front right wheel is severely bent and the vibration at velocities above 50 mph will crack the windshield and cause the doors to open by themselves. So stay on the surface streets, stoplights notwithstanding.&lt;/p&gt;
    &lt;p&gt;It may be at this point that you consider abandoning the car to avoid further calamity. There is an Exxon station right before the freeway entrance. The last guy who stole my 914 used this very spot and it was rather convenient for all concerned parties. I suggest you ditch the car there and scope out a nice, reliable Camry to heist.&lt;/p&gt;
    &lt;p&gt;Norman Garrett was the Concept Engineer for the original Miata back in his days at Mazda’s Southern California Design Studio. He currently teaches automotive engineering classes at UNC-C’s Motorsports Engineering Department in Charlotte, North Carolina and curates his small collection of dysfunctional automobiles and motorcycles.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45519575</guid><pubDate>Wed, 08 Oct 2025 19:16:10 +0000</pubDate></item><item><title>Svelte’s characteristics that likely contribute most to improved performance</title><link>https://chuniversiteit.nl/papers/svelte-is-fast</link><description>&lt;doc fingerprint="e50d1701050b4dd2"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;Svelte really is that fast&lt;/head&gt;
    &lt;p&gt;If you search online, you’ll find countless benchmarks claiming to compare the performance of various JavaScript frameworks with each other. More often than not, the benchmarks are overly simplistic and fail to reflect real-world scenarios. In other cases, they compare apples and oranges, for instance by pitting a fully fledged framework against a lightweight library that cover only a small subset of the framework’s functionality.&lt;/p&gt;
    &lt;p&gt;Right now, I’m at that point in my career again where I am starting development on a new web application and need to choose the “right” JavaScript framework. This time, I decided to look for academic studies on the performance of JavaScript frameworks and sadly, didn’t find as many as I had hoped. I did come across one particular study that compares Angular, React, Vue, Svelte and Blazor with each other. Its main drawback is that the comparison was done in 2021 – a lifetime ago in tech terms – but I think it’s still worth reading.&lt;/p&gt;
    &lt;p&gt;Before I dive into the summary, I want to share something I found mildly amusing. The paper is published in the Journal of Web Engineering, and if you visit its website, you’ll notice it includes &lt;code&gt;/index.php/&lt;/code&gt; in the URL. I’m not sure why.
Is it a deliberate choice? Or is it a sign of questionable web engineering?&lt;/p&gt;
    &lt;p&gt;It is estimated that up to 97% of websites today use JavaScript, with more than 80% also relying on a library or framework. JavaScript is often used to manage UI state changes within single page applications, allowing users to interact without reloading the entire page. While this can be done manually via the DOM API, it’s often error prone.&lt;/p&gt;
    &lt;p&gt;Modern web frameworks wrap the DOM API and provide a custom declarative syntax. This means that application code can simply describe the desired UI state, and the framework automatically generates the necessary DOM API calls to reflect that state in the browser.&lt;/p&gt;
    &lt;p&gt;When using the DOM API directly, the amount of script execution required to update the UI scales linearly with the complexity of the change. However, when DOM API calls are generated dynamically by a framework, the framework must first determine exactly which updates are necessary, introducing additional overhead. Furthermore, the chosen rendering strategy can greatly affect the number of DOM API calls made. A bad strategy may result in noticeable delays even for small updates, which is why it makes sense to compare the strategies used by major JavaScript frameworks.&lt;/p&gt;
    &lt;p&gt;The study looks at five popular frameworks: Angular, React, Vue, Svelte, and Blazor. All are JavaScript-based except for Blazor, which uses WebAssembly. Blazor applications are written in C# and run in a .NET runtime compiled to WebAssembly. Because WebAssembly modules lack direct access to the DOM, they rely on an additional JavaScript interoperability layer, which can introduce extra overhead.&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="2"&gt;
        &lt;cell role="head"&gt;Framework&lt;/cell&gt;
        &lt;cell role="head"&gt;Version&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Angular&lt;/cell&gt;
        &lt;cell&gt;11.2.3&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;React&lt;/cell&gt;
        &lt;cell&gt;17.0.1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Vue&lt;/cell&gt;
        &lt;cell&gt;3.0.7&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="2"&gt;
        &lt;cell&gt;Svelte&lt;/cell&gt;
        &lt;cell&gt;3.35.0&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;Blazor&lt;/cell&gt;
        &lt;cell&gt;5.0.3&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;All five frameworks follow some variant of the Model-View-ViewModel (MVVM) pattern. In MVVM, developers define components that bind an application’s data sources to views, so that changes in the data are automatically reflected in the UI.&lt;/p&gt;
    &lt;p&gt;Each framework continuously tries to keep the state of the DOM tree synchronised with the state of the component tree defined in application code. This is done using two distinct methods.&lt;/p&gt;
    &lt;p&gt;The first method, known as virtual DOM (vDOM)-based rendering, is used in React, Vue, and Blazor. It works by comparing the two trees and calculating the minimum set of changes needed to transform one into the other. This generally has a time complexity of , but can often be simplified to by making assumptions that usually apply in browser applications.&lt;/p&gt;
    &lt;p&gt;The second method is used by Angular and Svelte. Here, there is no separate step for calculating all required changes to the DOM. Instead, each component directly updates its corresponding section of the DOM by tracking the values of its data bindings.&lt;/p&gt;
    &lt;p&gt;From a performance standpoint, using a virtual DOM can introduce overhead not present in a binding-based rendering strategy.&lt;/p&gt;
    &lt;p&gt;All of the reviewed frameworks perform DOM updates within a render loop that walks through the component tree. The cost of this render loop depends on the size of the input and fixed costs.&lt;/p&gt;
    &lt;p&gt;A render loop involves two types of work: creating new elements and updating existing ones. Creating elements is generally straightforward and costs the same for each framework, regardless of rendering strategy.&lt;/p&gt;
    &lt;p&gt;Updating existing elements is where the rendering strategy makes a noticeable difference. Angular, for example, always walks through the entire component tree, resulting in a lot of unnecessary work when only a small part of the tree needs updating. React and Blazor walk only through the subtree of the component that initiates the render loop, which is usually more efficient but may still require some unnecessary work for descendants whose output has not changed. Vue and Svelte, on the other hand, process only “dirty” components whose output has changed. This requires the framework to track which components are dirty. Vue does this at runtime, Svelte handles it at compile time.&lt;/p&gt;
    &lt;p&gt;Finally, component output can be classified as either static or dynamic content, with static content remaining unchanged after the component’s initial render. Frameworks that can optimise for static content may have a performance advantage over those that cannot.&lt;/p&gt;
    &lt;p&gt;Several benchmarks were conducted using Angular, React, Vue, Svelte and Blazor. The authors found significant differences in performance between the frameworks, especially as input size increased. , outperforming the others across literally every benchmark.&lt;/p&gt;
    &lt;p&gt;Svelte is the fastest framework when creating static elements, while React is generally among the slowest:&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="6"&gt;
        &lt;cell role="head"&gt;n&lt;/cell&gt;
        &lt;cell role="head"&gt;Angular (ms)&lt;/cell&gt;
        &lt;cell role="head"&gt;React (ms)&lt;/cell&gt;
        &lt;cell role="head"&gt;Vue (ms)&lt;/cell&gt;
        &lt;cell role="head"&gt;Svelte (ms)&lt;/cell&gt;
        &lt;cell role="head"&gt;Blazor (ms)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;100&lt;/cell&gt;
        &lt;cell&gt;3&lt;/cell&gt;
        &lt;cell&gt;2&lt;/cell&gt;
        &lt;cell&gt;1&lt;/cell&gt;
        &lt;cell&gt;1&lt;/cell&gt;
        &lt;cell&gt;3&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;500&lt;/cell&gt;
        &lt;cell&gt;9&lt;/cell&gt;
        &lt;cell&gt;9&lt;/cell&gt;
        &lt;cell&gt;3&lt;/cell&gt;
        &lt;cell&gt;2&lt;/cell&gt;
        &lt;cell&gt;8&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;1000&lt;/cell&gt;
        &lt;cell&gt;16&lt;/cell&gt;
        &lt;cell&gt;11&lt;/cell&gt;
        &lt;cell&gt;6&lt;/cell&gt;
        &lt;cell&gt;3&lt;/cell&gt;
        &lt;cell&gt;13&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;5000&lt;/cell&gt;
        &lt;cell&gt;85&lt;/cell&gt;
        &lt;cell&gt;77&lt;/cell&gt;
        &lt;cell&gt;28&lt;/cell&gt;
        &lt;cell&gt;14&lt;/cell&gt;
        &lt;cell&gt;61&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;10000&lt;/cell&gt;
        &lt;cell&gt;177&lt;/cell&gt;
        &lt;cell&gt;200&lt;/cell&gt;
        &lt;cell&gt;47&lt;/cell&gt;
        &lt;cell&gt;24&lt;/cell&gt;
        &lt;cell&gt;123&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;25000&lt;/cell&gt;
        &lt;cell&gt;844&lt;/cell&gt;
        &lt;cell&gt;956&lt;/cell&gt;
        &lt;cell&gt;95&lt;/cell&gt;
        &lt;cell&gt;63&lt;/cell&gt;
        &lt;cell&gt;371&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;50000&lt;/cell&gt;
        &lt;cell&gt;2520&lt;/cell&gt;
        &lt;cell&gt;3559&lt;/cell&gt;
        &lt;cell&gt;173&lt;/cell&gt;
        &lt;cell&gt;98&lt;/cell&gt;
        &lt;cell&gt;964&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Svelte is also the fastest when creating components arranged as a binary tree. However, in this case, Blazor is the slowest by a considerable margin:&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="6"&gt;
        &lt;cell role="head"&gt;n&lt;/cell&gt;
        &lt;cell role="head"&gt;Angular (ms)&lt;/cell&gt;
        &lt;cell role="head"&gt;React (ms)&lt;/cell&gt;
        &lt;cell role="head"&gt;Vue (ms)&lt;/cell&gt;
        &lt;cell role="head"&gt;Svelte (ms)&lt;/cell&gt;
        &lt;cell role="head"&gt;Blazor (ms)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;128&lt;/cell&gt;
        &lt;cell&gt;20&lt;/cell&gt;
        &lt;cell&gt;7&lt;/cell&gt;
        &lt;cell&gt;16&lt;/cell&gt;
        &lt;cell&gt;3&lt;/cell&gt;
        &lt;cell&gt;17&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;512&lt;/cell&gt;
        &lt;cell&gt;75&lt;/cell&gt;
        &lt;cell&gt;32&lt;/cell&gt;
        &lt;cell&gt;53&lt;/cell&gt;
        &lt;cell&gt;10&lt;/cell&gt;
        &lt;cell&gt;59&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;1024&lt;/cell&gt;
        &lt;cell&gt;120&lt;/cell&gt;
        &lt;cell&gt;55&lt;/cell&gt;
        &lt;cell&gt;84&lt;/cell&gt;
        &lt;cell&gt;22&lt;/cell&gt;
        &lt;cell&gt;128&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;4096&lt;/cell&gt;
        &lt;cell&gt;216&lt;/cell&gt;
        &lt;cell&gt;137&lt;/cell&gt;
        &lt;cell&gt;223&lt;/cell&gt;
        &lt;cell&gt;83&lt;/cell&gt;
        &lt;cell&gt;485&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;8192&lt;/cell&gt;
        &lt;cell&gt;297&lt;/cell&gt;
        &lt;cell&gt;233&lt;/cell&gt;
        &lt;cell&gt;313&lt;/cell&gt;
        &lt;cell&gt;142&lt;/cell&gt;
        &lt;cell&gt;966&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;16384&lt;/cell&gt;
        &lt;cell&gt;469&lt;/cell&gt;
        &lt;cell&gt;394&lt;/cell&gt;
        &lt;cell&gt;485&lt;/cell&gt;
        &lt;cell&gt;233&lt;/cell&gt;
        &lt;cell&gt;1870&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;32768&lt;/cell&gt;
        &lt;cell&gt;774&lt;/cell&gt;
        &lt;cell&gt;733&lt;/cell&gt;
        &lt;cell&gt;897&lt;/cell&gt;
        &lt;cell&gt;482&lt;/cell&gt;
        &lt;cell&gt;3644&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;When updating the root component of a tree with components, :&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="6"&gt;
        &lt;cell role="head"&gt;n&lt;/cell&gt;
        &lt;cell role="head"&gt;Angular (ms)&lt;/cell&gt;
        &lt;cell role="head"&gt;React (ms)&lt;/cell&gt;
        &lt;cell role="head"&gt;Vue (ms)&lt;/cell&gt;
        &lt;cell role="head"&gt;Svelte (ms)&lt;/cell&gt;
        &lt;cell role="head"&gt;Blazor (ms)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;128&lt;/cell&gt;
        &lt;cell&gt;3&lt;/cell&gt;
        &lt;cell&gt;7&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;3&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;512&lt;/cell&gt;
        &lt;cell&gt;12&lt;/cell&gt;
        &lt;cell&gt;23&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;3&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;1024&lt;/cell&gt;
        &lt;cell&gt;14&lt;/cell&gt;
        &lt;cell&gt;42&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;4096&lt;/cell&gt;
        &lt;cell&gt;32&lt;/cell&gt;
        &lt;cell&gt;92&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;3&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;8192&lt;/cell&gt;
        &lt;cell&gt;32&lt;/cell&gt;
        &lt;cell&gt;92&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;3&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;16384&lt;/cell&gt;
        &lt;cell&gt;43&lt;/cell&gt;
        &lt;cell&gt;211&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;2&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;32768&lt;/cell&gt;
        &lt;cell&gt;103&lt;/cell&gt;
        &lt;cell&gt;379&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;3&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;When updating a leaf component in a component tree of components, Angular is the only framework that lags slightly behind. This is because it performs the same amount of work regardless of what has actually changed:&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="6"&gt;
        &lt;cell role="head"&gt;n&lt;/cell&gt;
        &lt;cell role="head"&gt;Angular (ms)&lt;/cell&gt;
        &lt;cell role="head"&gt;React (ms)&lt;/cell&gt;
        &lt;cell role="head"&gt;Vue (ms)&lt;/cell&gt;
        &lt;cell role="head"&gt;Svelte (ms)&lt;/cell&gt;
        &lt;cell role="head"&gt;Blazor (ms)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;128&lt;/cell&gt;
        &lt;cell&gt;3&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;512&lt;/cell&gt;
        &lt;cell&gt;13&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;1024&lt;/cell&gt;
        &lt;cell&gt;14&lt;/cell&gt;
        &lt;cell&gt;1&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;1&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;4096&lt;/cell&gt;
        &lt;cell&gt;33&lt;/cell&gt;
        &lt;cell&gt;4&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;3&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;8192&lt;/cell&gt;
        &lt;cell&gt;33&lt;/cell&gt;
        &lt;cell&gt;3&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;5&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;16384&lt;/cell&gt;
        &lt;cell&gt;44&lt;/cell&gt;
        &lt;cell&gt;5&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;4&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;32768&lt;/cell&gt;
        &lt;cell&gt;104&lt;/cell&gt;
        &lt;cell&gt;4&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;&amp;lt;1&lt;/cell&gt;
        &lt;cell&gt;8&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Finally, the table below shows the script execution time when updating the entire component tree of components, where each component contains primarily static content:&lt;/p&gt;
    &lt;table&gt;
      &lt;row span="6"&gt;
        &lt;cell role="head"&gt;n&lt;/cell&gt;
        &lt;cell role="head"&gt;Angular (ms)&lt;/cell&gt;
        &lt;cell role="head"&gt;React (ms)&lt;/cell&gt;
        &lt;cell role="head"&gt;Vue (ms)&lt;/cell&gt;
        &lt;cell role="head"&gt;Svelte (ms)&lt;/cell&gt;
        &lt;cell role="head"&gt;Blazor (ms)&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;128&lt;/cell&gt;
        &lt;cell&gt;4&lt;/cell&gt;
        &lt;cell&gt;34&lt;/cell&gt;
        &lt;cell&gt;20&lt;/cell&gt;
        &lt;cell&gt;2&lt;/cell&gt;
        &lt;cell&gt;28&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;256&lt;/cell&gt;
        &lt;cell&gt;8&lt;/cell&gt;
        &lt;cell&gt;44&lt;/cell&gt;
        &lt;cell&gt;32&lt;/cell&gt;
        &lt;cell&gt;3&lt;/cell&gt;
        &lt;cell&gt;60&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;512&lt;/cell&gt;
        &lt;cell&gt;17&lt;/cell&gt;
        &lt;cell&gt;66&lt;/cell&gt;
        &lt;cell&gt;42&lt;/cell&gt;
        &lt;cell&gt;5&lt;/cell&gt;
        &lt;cell&gt;101&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;1024&lt;/cell&gt;
        &lt;cell&gt;27&lt;/cell&gt;
        &lt;cell&gt;101&lt;/cell&gt;
        &lt;cell&gt;72&lt;/cell&gt;
        &lt;cell&gt;10&lt;/cell&gt;
        &lt;cell&gt;250&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;2048&lt;/cell&gt;
        &lt;cell&gt;29&lt;/cell&gt;
        &lt;cell&gt;235&lt;/cell&gt;
        &lt;cell&gt;91&lt;/cell&gt;
        &lt;cell&gt;20&lt;/cell&gt;
        &lt;cell&gt;502&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row span="6"&gt;
        &lt;cell&gt;4096&lt;/cell&gt;
        &lt;cell&gt;44&lt;/cell&gt;
        &lt;cell&gt;289&lt;/cell&gt;
        &lt;cell&gt;149&lt;/cell&gt;
        &lt;cell&gt;54&lt;/cell&gt;
        &lt;cell&gt;1020&lt;/cell&gt;
      &lt;/row&gt;
      &lt;row&gt;
        &lt;cell&gt;8192&lt;/cell&gt;
        &lt;cell&gt;238&lt;/cell&gt;
        &lt;cell&gt;841&lt;/cell&gt;
        &lt;cell&gt;311&lt;/cell&gt;
        &lt;cell&gt;80&lt;/cell&gt;
        &lt;cell&gt;2013&lt;/cell&gt;
      &lt;/row&gt;
    &lt;/table&gt;
    &lt;p&gt;Overall, the results are in line with what would be expected given the characteristics of each rendering strategy.&lt;/p&gt;
    &lt;p&gt;The WebAssembly-based Blazor shows significantly worse performance than its JavaScript-based competitors. However, from these benchmarks alone it’s impossible to determine whether this is due to Blazor itself or a fundamental limitation of using WebAssembly for this purpose.&lt;/p&gt;
    &lt;p&gt;Meanwhile, Svelte demonstrates three key characteristics that likely contribute most to improved performance:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;The use of a reactivity system to automatically detect dirty components&lt;/item&gt;
      &lt;item&gt;An optimising compiler that generates component update code which ignores static content&lt;/item&gt;
      &lt;item&gt;A binding-based rendering approach rather than a virtual DOM&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Svelte’s on fire, yo&lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45519915</guid><pubDate>Wed, 08 Oct 2025 19:54:02 +0000</pubDate></item><item><title>I played 1k hands of online poker and built a web app with Cursor AI</title><link>https://blog.rchase.com/i-played-1-000-hands-of-online-poker-and-built-a-web-app-with-cursor-ai/</link><description>&lt;doc fingerprint="3cc0aa516d242ab6"&gt;
  &lt;main&gt;
    &lt;head rend="h1"&gt;I played 1,000 hands of online poker and built a web app with Cursor AI&lt;/head&gt;
    &lt;p&gt;In the last two weeks I spent over a dozen hours playing poker, primarily online at pokerstarsmi.com, and live at a local casino.&lt;/p&gt;
    &lt;p&gt;You can view the last 1,000 hands I played here: https://poker.rchase.com&lt;/p&gt;
    &lt;p&gt;I spent at least as much time reviewing my hands with a desktop app called PokerTracker 4, I read 6 books, studied strategy, and journaled about it in my Apple Notes.&lt;/p&gt;
    &lt;p&gt;Then I started building my own Python script automations to export my hand history from PokerStars, import it into PokerTracker 4, check my balance, stuff like that.&lt;/p&gt;
    &lt;p&gt;That led me to getting help writing code from Grok, then Cursor, and then building a full blown Laravel MVP for a web app similar to the PokerTracker 4 desktop app.&lt;/p&gt;
    &lt;head rend="h3"&gt;Why poker?&lt;/head&gt;
    &lt;p&gt;Without getting too philosophical, it's not about the money won or lost - I'm playing low stakes right now because I'm a beginner.&lt;/p&gt;
    &lt;p&gt;I just want to learn the game.&lt;/p&gt;
    &lt;p&gt;Maybe someday I'll play some tournaments or high stakes.&lt;/p&gt;
    &lt;p&gt;But right now, more importantly, I'm learning about myself.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Emotional intelligence becoming aware of emotions in myself and others&lt;/item&gt;
      &lt;item&gt;Self-regulation trying to control my emotions and not let them influence my actions&lt;/item&gt;
      &lt;item&gt;Resilience not giving up because of downswings&lt;/item&gt;
      &lt;item&gt;Humility learning to not get overconfident after a big win&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;I also have enjoyed the lessons from the bankroll side of the game:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Managing risk, taking profits, cutting losses&lt;/item&gt;
      &lt;item&gt;Developing the discipline to scale down my buy-ins when losing to keep a max of 10% of bankroll in play so I don't blow my entire bankroll on a bad day&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Whether I won or lost money in a given day isn't important, what's important is whether I followed my plan or not.&lt;/p&gt;
    &lt;p&gt;If I let emotions guide my actions, or I maintained self-control.&lt;/p&gt;
    &lt;p&gt;Success is if I made good decisions given the information I had at the time, even if it didn't lead to a good outcome.&lt;/p&gt;
    &lt;p&gt;The analogies to life and business lessons are endless... but in this blog post I mainly wanted to write about my experience building this web app with AI which was completely mind blowing!&lt;/p&gt;
    &lt;head rend="h3"&gt;Building a poker stats web app with Laravel in Cursor&lt;/head&gt;
    &lt;p&gt;So after only 2 or 3 days of just chatting back and forth for hours and hours with the Cursor AI agent I built a fully functional web app at poker.rchase.com with an admin dashboard and dozens of features:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Admin dashboard&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;PokerStars and Gmail integrations&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Complicated (over 700 lines of code) poker hand history text file parser&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Complicated poker stats calculations like VPIP, PFR, and 3-Bet&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;CRUD for journal entries, logging poker account deposits/withdrawals&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Hand history file management with multi-file upload and "paste text" options&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Daily PokerStars balance checks&lt;/item&gt;
      &lt;item&gt;Auto export PokerStars hands every 15 minutes with enabled/disabled toggle&lt;/item&gt;
      &lt;item&gt;Auto import hands from email using Gmail IMAP integration&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Hand history table and individual hand viewer&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Profit/loss chart&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Built locally using Herd for MacOS and deployed with the help of Cursor to a DigitalOcean Debian 13 server. Private git repo hosted by GitHub.&lt;/p&gt;
    &lt;p&gt;The insane part is I didn't write a single line of this code.&lt;/p&gt;
    &lt;p&gt;All of this was created through conversations with the Cursor AI agent.&lt;/p&gt;
    &lt;p&gt;I don't even know how we got here with AI.&lt;/p&gt;
    &lt;p&gt;Just a few years ago I remember chatting with ChatGPT asking it to write some basic Python script for me and it was completely useless, it hallucinated calling libraries that didn't exist, using functions it forgot to write... it was nuts.&lt;/p&gt;
    &lt;p&gt;It couldn't even do basic math not that long ago like 2+2=5 was a common thing that would happen in the course of a conversation.&lt;/p&gt;
    &lt;p&gt;I wrote off AI entirely for years after that brief experience - as clearly overhyped and with limited use case potential.&lt;/p&gt;
    &lt;p&gt;But then at some point, I subscribed to the Grok $30/month plan and began using it every single day.&lt;/p&gt;
    &lt;p&gt;It quickly replaced Google Search entirely for me.&lt;/p&gt;
    &lt;p&gt;And then I started to use it much more than I had previously used Google Search.&lt;/p&gt;
    &lt;p&gt;My team started to check with AI about hard problems we ran into whether it was networking or programming, usually the answers weren't great and of course we always reviewed carefully for security issues and didn't just trust implicitly the information it provided.&lt;/p&gt;
    &lt;p&gt;But we could see over time it was improving in the responses.&lt;/p&gt;
    &lt;p&gt;It became a thing when we were stuck "Did you check what Grok had to say about this?"&lt;/p&gt;
    &lt;p&gt;I remember earlier this year my feed being full of "vibe coding" on X and in particular Pieter Levels' fly.pieter.com, but I kind of just followed along for entertainment and I think even at that time it was much worse than it is now, I think you needed to keep the code in one file and implement various hacks to keep the AI aware of the context of that file.&lt;/p&gt;
    &lt;p&gt;But I had no idea it was this far along until last week I pasted my Python PokerStars hand exporter script into Grok and asked it to build the Gmail integration to retrieve the login PIN and with very few iterations it was able to do it successfully and without me writing any code.&lt;/p&gt;
    &lt;p&gt;Then I had it replace all my print statement debugging with proper logging and it did that too easily.&lt;/p&gt;
    &lt;p&gt;Then I had it turn the monolithic script into a class that could be used in other scripts and it did that as well.&lt;/p&gt;
    &lt;p&gt;I was so impressed that I decided to start looking into what the best AI tools were out there for programming... so of course I didn't Google that, I asked Grok. And I started to learn about Cursor, Claude, and Windsurf.&lt;/p&gt;
    &lt;head rend="h3"&gt;What it's like to build a web app with Cursor&lt;/head&gt;
    &lt;p&gt;For me, I've been primarily building apps through other people for the last 4 years now. I barely write any code. I'm not proficient enough to make commits to any of our production repos at HostiFi... sadly.&lt;/p&gt;
    &lt;p&gt;However, the skill I do have is I understand what I want to build, in what order, and what sacrifices need to be made in order to ship it.&lt;/p&gt;
    &lt;p&gt;I have knack for user experience and a small amount of design sense.&lt;/p&gt;
    &lt;p&gt;I also have empathy for the developers I work with, and the complexity of the work involved to build features. I have enough technical knowledge to debate with them the pros and cons of difference approaches when there are forks in the road.&lt;/p&gt;
    &lt;p&gt;All this to say - working with the Cursor Agent was eerily similar to working with a human developer on my team... but way, way faster because the feedback loop was real-time.&lt;/p&gt;
    &lt;p&gt;It was such an unusual experience to watch Cursor work that it's hard to put into words, you really just have to try it for yourself.&lt;/p&gt;
    &lt;p&gt;Basically you tell it to build something, it writes some code, I open the page and there's a 500 error. I tell it - hey there's a 500 error. It checks the logs, finds the bug, fixes the bug, ships the new code, I refresh the page and it's working... but it's not the color I wanted or whatever and I tell it to fix that and it goes and does it. On and on this goes for hours into the night.&lt;/p&gt;
    &lt;p&gt;With humans, normally I outline something I want built whether it's a feature or a new page for the website or a entire new app. Then the developer and I will kind of go back and forth over the details of the MVP version of it and what we should cut out considering the time/value trade off.&lt;/p&gt;
    &lt;p&gt;Then the developer will build it, but not the entire thing. We want to set milestones. That way I can see it as it gets built and give feedback which leads to many iterations, usually days or weeks apart, of each milestone until completion.&lt;/p&gt;
    &lt;p&gt;I learned how to build software like this the hard way...&lt;/p&gt;
    &lt;p&gt;By wasting a ton of time and money because I used to:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Not work directly with the end developers&lt;/item&gt;
      &lt;item&gt;Not clearly communicate what I needed&lt;/item&gt;
      &lt;item&gt;Not consider time/value tradeoffs to cut the project or feature down to MVP&lt;/item&gt;
      &lt;item&gt;Wait until the entire project was completed before giving feedback and iterating&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;I think these dev management skills I've built up along with the thin technical understanding of a lot of different programming topics over the years have made me uniquely capable of building things with the Cursor AI agent today.&lt;/p&gt;
    &lt;p&gt;I don't think just anyone can build anything right now.&lt;/p&gt;
    &lt;p&gt;I think I might have the contrarian take here - the bar to build is going to continue to get lowered but it will never be "easy" or "anyone can do it".&lt;/p&gt;
    &lt;p&gt;The code was actually never the hard part of most SaaS anyways.&lt;/p&gt;
    &lt;p&gt;If it was, every programmer would be a millionaire.&lt;/p&gt;
    &lt;p&gt;It's hard knowing what to build, in what order, and of course the most important part - getting customers.&lt;/p&gt;
    &lt;p&gt;But anyways back to Cursor.&lt;/p&gt;
    &lt;head rend="h3"&gt;Some of my more interesting conversations with Cursor&lt;/head&gt;
    &lt;p&gt;One of the biggest challenges was writing the hand history parser.&lt;/p&gt;
    &lt;p&gt;PokerStars exports hand history in text files like this:&lt;/p&gt;
    &lt;p&gt;It was very difficult to scrape all of this using regex into separate pieces of data to put into a database where hands can be sorted, summed, and analyzed.&lt;/p&gt;
    &lt;p&gt;Part of the problem was the AI's lack of understanding of the fundamentals of the game of poker.&lt;/p&gt;
    &lt;p&gt;Part of the problem was the amount of edge cases, or hands where something unusual or different happened of which only happened in a few hands.&lt;/p&gt;
    &lt;p&gt;My first goal was just to calculate the profit/loss total from all hands. This seemed fairly simple - find text like "reillychase collected $29.82 from pot" and add it up.&lt;/p&gt;
    &lt;p&gt;But actually wait, we need to also deduct the bets that I made from that pot.&lt;/p&gt;
    &lt;p&gt;But what is considered a bet?&lt;/p&gt;
    &lt;p&gt;If I'm the small or big blind there's different wording in the text file for that bet, there is also different language used for an all-in bet, a raise, a call. A bet was called many different things and they all needed to be added up so they could be deducted from the amount won in the pot.&lt;/p&gt;
    &lt;p&gt;There's also an edge case where I made a bet and someone went all-in so some of my bet was returned to me (the unmatched bet amount).&lt;/p&gt;
    &lt;p&gt;Or maybe there's an edge case where there were two winners and the pot was split.&lt;/p&gt;
    &lt;p&gt;As you can imagine the list goes on and on.&lt;/p&gt;
    &lt;p&gt;Instead of thinking through every edge case I told the AI "let's review some hands together - find me the biggest winners, the biggest losers, and some complicated hands and explain them to me"&lt;/p&gt;
    &lt;p&gt;It was able to find hands of those types, it showed me the text so I could add it up manually, and it showed me its own expected output along with the actual output.&lt;/p&gt;
    &lt;p&gt;Most of the time it was able to figure out on its own what had gone wrong because its expected output after reading the text file differed from the parsed output.&lt;/p&gt;
    &lt;p&gt;In other cases I had to explain to it something poker related to give it more context.&lt;/p&gt;
    &lt;p&gt;These are the kind of conversations we had over and over.&lt;/p&gt;
    &lt;p&gt;Again, this was just like working with a human programmer, although I will admit the AI was much dumber at times, but instead of days or weeks between iterations it was minutes.&lt;/p&gt;
    &lt;p&gt;One unlock I found, with the limited time I spent in actually exploring Cursor itself and not just plugging away at building with it, is changing from Auto to Claude 4.5 Sonnet Thinking as the agent.&lt;/p&gt;
    &lt;p&gt;The quality of the responses greatly improved in my experience and I plan on upgrading my subscription to pay on-demand to be able to continue to use it once my credits run out.&lt;/p&gt;
    &lt;head rend="h3"&gt;What it all means for the future&lt;/head&gt;
    &lt;p&gt;It's not really my thing to give too much thought about macro-trends that are out of my control or worry about what negative consequences they might have on my life.&lt;/p&gt;
    &lt;p&gt;The short answer, I really don't know what this means for the future of the career of programming, the business of software, or anything else.&lt;/p&gt;
    &lt;p&gt;Instead of worrying about that I'm going to try to focus on the here and now, the upside potential, and the unique set of advantages that I have available to me to build something valuable, have fun, and maybe profit.&lt;/p&gt;
    &lt;p&gt;I'm going to do what I enjoy doing, try to learn some new skills and create things.&lt;/p&gt;
    &lt;head rend="h3"&gt;Looking for input from you, the reader&lt;/head&gt;
    &lt;p&gt;If you play poker, let me know.&lt;/p&gt;
    &lt;p&gt;If you use Cursor or similar to build things, let me know.&lt;/p&gt;
    &lt;p&gt;I'm also looking for help on how to revamp the UX/design of poker.rchase.com using AI, it seems like Cursor is not strong in this area maybe there is an alternative I should be looking into?&lt;/p&gt;
    &lt;p&gt;Thank you.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45520154</guid><pubDate>Wed, 08 Oct 2025 20:20:21 +0000</pubDate></item><item><title>Kurt Got Got</title><link>https://fly.io/blog/kurt-got-got/</link><description>&lt;doc fingerprint="ee3b595b1b4777cd"&gt;
  &lt;main&gt;
    &lt;p&gt;The $FLY Airdrop is live! Claim your share of the token powering Fly.ioâs global network of 3M+ apps and (ð¤®) own a piece of the sky!&lt;/p&gt;
    &lt;p&gt;We know. Our Twitter got owned. We knew within moments of it happening. We know exactly how it happened. Nothing was at risk other than our Twitter account (and one Fly.io employee’s self-esteem). Also: for fuck’s sake.&lt;/p&gt;
    &lt;p&gt;Here’s what happened: Kurt Mackey, our intrepid CEO, got phished.&lt;/p&gt;
    &lt;p&gt;Had this been an impactful attack, we would not be this flippant about it. For this, though, any other tone on our part would be false.&lt;/p&gt;
    &lt;head rend="h2"&gt;How They Got Kurt&lt;/head&gt;
    &lt;p&gt;Two reasons: one, it was a pretty good phishing attack, and two, Twitter fell outside the “things we take seriously” boundary.&lt;/p&gt;
    &lt;p&gt;The phishing attack was effective because it exploited a deep psychological vulnerability in our management team: we are old and out of touch with the youths of today.&lt;/p&gt;
    &lt;p&gt;For many months now, we’ve had an contractor/intern-type-person Boosting Our Brand on Twitter by posting dank developer memes (I think that’s what they’re called). The thing about this dankery is that we don’t really understand it. I mean, hold on, we know what the memes mean technically. We just don’t get why they’re funny.&lt;/p&gt;
    &lt;p&gt;However, in pushing back on them, we’re up against two powerful forces:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;The dank memes appear to perform better than the stuff we ourselves write on Twitter.&lt;/item&gt;
      &lt;item&gt;We are reliably informed by our zoomer children that we are too cringe to be trusted on these matters.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Here’s the phish Kurt got:&lt;/p&gt;
    &lt;p&gt;Diabolical. Like a scalpel expertly wielded against Kurt’s deepest middle-aged-dude insecurity. Our ruthless attackers clinically designed this email to trigger an autonomic Kurt response: “oh, what the fuck is this, and why did we post it?”&lt;/p&gt;
    &lt;p&gt;ATO is cool-kid for âgot ownedâ&lt;/p&gt;
    &lt;p&gt;I’m getting a little ahead of the story here. We knew our X.com account had suffered an ATO because a bunch of us simultaneously got another email saying that the @flydotio account’s email address now pointed to &lt;code&gt;achilles19969@gmail.com&lt;/code&gt;. Our immediate response was to audit all accesses to the login information in 1Password, to cut all access for anybody who’d recently pulled it; your worst-case assumption in a situation like this is that someone’s endpoint has been owned up.&lt;/p&gt;
    &lt;p&gt;Fortunately, nobody lost access for very long. I called Kurt to let him know why he was being locked out, and 5 seconds later, he’d realized what had happened. Don’t click anything there.&lt;/p&gt;
    &lt;head rend="h2"&gt;Why It Worked&lt;/head&gt;
    &lt;p&gt;That’s the right question to ask, isn’t it? How could this have been possible in the first place?&lt;/p&gt;
    &lt;p&gt;Contrary to one popular opinion, you don’t defeat phishing by training people not to click on things. I mean, tell them not to, sure! But eventually, under continued pressure, everybody clicks. There’s science on this. The cool kids haven’t done phishing simulation training in years.&lt;/p&gt;
    &lt;p&gt;What you’re supposed to do instead is use phishing-resistant authentication. This is almost the whole backstory for U2F, FIDO2 and Passkeys.&lt;/p&gt;
    &lt;p&gt;Phishing-resistant authentication works by mutual authentication (or, if you’re a stickler, by origin- and channel-binding). Phishes are malicious proxies for credentials. Modern MFA schemes like FIDO2 break that proxy flow; your browser won’t send real credentials to the fake site.&lt;/p&gt;
    &lt;p&gt;thereâs more to it than this, but, broad strokes.&lt;/p&gt;
    &lt;p&gt;This is, in fact, how all of our infrastructure is secured at Fly.io; specifically, we get everything behind an IdP (in our case: Google’s) and have it require phishing-proof MFA. You’re unlikely to phish your way to viewing logs here, or to refunding a customer bill at Stripe, or to viewing infra metrics, because all these things require an SSO login through Google.&lt;/p&gt;
    &lt;p&gt;Twitter, on the other hand. Yeah, so, about that. You may have heard that, a few years back, there were some goings-on involving Twitter. Many of us at Fly.io decamped for Mastodon, and later to Bluesky. There was a window of time in 2023-2024 where it looked as if Twitter might not be a long term thing for us at all.&lt;/p&gt;
    &lt;p&gt;â (to whom I sincerely apologize for having assumed they had been owned up and were the proximate cause of the hack)&lt;/p&gt;
    &lt;p&gt;As a result, Twitter had been a sort of legacy shared account for us, with credentials managed in 1Password and shared with our zoomer contractorâ .&lt;/p&gt;
    &lt;p&gt;Which is why Kurt was in a position to pull credentials from 1Password and log in to members-x.com in response to an email from alerts-x.com.&lt;/p&gt;
    &lt;p&gt;Still: we could have dodged this attack with hygiene: Kurt complains that âx.comâ is an extremely phishable domain, and, sure, but also: the 1Password browser plugin would have noticed that âmembers-x.comâ wasnât an âx.comâ host.&lt;/p&gt;
    &lt;head rend="h2"&gt;What Took So Long&lt;/head&gt;
    &lt;p&gt;The attacker immediately revoked all tokens and set up new 2FA, so while we were quickly able to reset our password, we couldn’t lock them out of our account without an intervention from X.com, which took something like 1 5 hours to set up.&lt;/p&gt;
    &lt;p&gt;(That’s not a knock on X.com; 15 hours for a 2FA reset isn’t outside industry norms).&lt;/p&gt;
    &lt;p&gt;We’re obviously making a lot of noise about this now, but we were pretty quiet during the incident itself (beyond just “We know. We knew 45 seconds after it happened. We know exactly how it happened. It’s just a Twitter thing.”)&lt;/p&gt;
    &lt;p&gt;That’s because, in the grand scheme of things, the attack was pretty chill: a not-very-plausible crypto scam that presumably generated $0 for the attackers, 15+ hours of &lt;code&gt;brand damage&lt;/code&gt;, and extra security engineering cycles burnt on watchful waiting. Our users weren’t under attack, and the account wasn’t being used to further intercept customer accounts. At one point, the attackers apparently deleted our whole Twitter history, which, like, don’t threaten us with a good time. So we let it roll, until we got our account recovered the next morning.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Moral Of The Story Is&lt;/head&gt;
    &lt;p&gt;âReally the biggest takeaway for me is that Kurt reads his email.â&lt;/p&gt;
    &lt;p&gt;Obviously Kurt loses his commit access. The time comes in the life of every CEO, and now it comes for him.&lt;/p&gt;
    &lt;p&gt;Also, we’ll finally have a population sample for “incident response” in our next SOC2.&lt;/p&gt;
    &lt;p&gt;Maybe we’ll post more on Twitter. Or maybe we’ll double down on Zoomer memes. I don’t know. Social media is really weird right now. Either way: our Twitter access is Passkeys now.&lt;/p&gt;
    &lt;p&gt;seriously donât click anything on that page&lt;/p&gt;
    &lt;p&gt;If you were inclined to take us up on an “airdrop” to “claim a share” of the “token” powering Fly.io, the site is still up. You can connect your wallet it it! You’ll lose all your money. But if we’d actually done an ICO, you’d have lost all your money anyways.&lt;/p&gt;
    &lt;p&gt;Somebody involved in pulling this attack off had to come up with “own a piece of the sky!”, and I think that’s punishment enough for them.&lt;/p&gt;
    &lt;p&gt;Whatever you’re operating that isn’t behind phishing-resistant MFA, or, better yet, an SSO IdP that requires phishing-resistant MFA: that thing is eventually going to get phished. Dance around the clown-fire of our misfortune if you must, but let us be a lesson to you as well.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45520615</guid><pubDate>Wed, 08 Oct 2025 21:02:34 +0000</pubDate></item><item><title>PWA Browser Scorecards</title><link>https://pwascore.com/</link><description>&lt;doc fingerprint="524655bc0538b59b"&gt;
  &lt;main&gt;
    &lt;p&gt;This is a preview release of PWAscore â¢ Please report issues at PWAscore About PWA Browser Scorecards Compare Progressive Web App capabilities across popular mobile and desktop browsers. Chrome for Version 131 0 Installation &amp;amp; Core PWA Features Notifications &amp;amp; Communication Background Capabilities Device Hardware Access Media Capture &amp;amp; Processing File &amp;amp; Data Management User Interface &amp;amp; Experience System Integration Audio &amp;amp; Speech Network &amp;amp; Communication Payments &amp;amp; Commerce Advanced Capabilities Security &amp;amp; Privacy Window Management Firefox for Version 138 0 Installation &amp;amp; Core PWA Features Notifications &amp;amp; Communication Background Capabilities Device Hardware Access Media Capture &amp;amp; Processing File &amp;amp; Data Management User Interface &amp;amp; Experience System Integration Audio &amp;amp; Speech Network &amp;amp; Communication Payments &amp;amp; Commerce Advanced Capabilities Security &amp;amp; Privacy Window Management Safari for Version 26 0 Installation &amp;amp; Core PWA Features Notifications &amp;amp; Communication Background Capabilities Device Hardware Access Media Capture &amp;amp; Processing File &amp;amp; Data Management User Interface &amp;amp; Experience System Integration Audio &amp;amp; Speech Network &amp;amp; Communication Payments &amp;amp; Commerce Advanced Capabilities Security &amp;amp; Privacy Window Management&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45521704</guid><pubDate>Wed, 08 Oct 2025 23:14:32 +0000</pubDate></item><item><title>Discord says 70k users may have had their government IDs leaked in breach</title><link>https://www.theverge.com/news/797051/discord-government-ids-leaked-data-breach</link><description>&lt;doc fingerprint="52821b99fd9724ef"&gt;
  &lt;main&gt;
    &lt;p&gt;Discord has identified approximately 70,000 users that may have had their government ID photos exposed as part of a customer service data breach announced last week, spokesperson Nu Wexler tells The Verge. A tweet by vx-underground said that the company was being extorted over a breach of its Zendesk instance by a group claiming to have “1.5TB of age verification related photos. 2,185,151 photos.”&lt;/p&gt;
    &lt;head rend="h1"&gt;Discord says 70,000 users may have had their government IDs leaked in breach&lt;/head&gt;
    &lt;p&gt;Discord claims that the attackers are circulating inaccurate information about the breach of a customer service provider as part of an extortion attempt.&lt;/p&gt;
    &lt;p&gt;Discord claims that the attackers are circulating inaccurate information about the breach of a customer service provider as part of an extortion attempt.&lt;/p&gt;
    &lt;p&gt;When we asked about the tweet, Wexler shared this statement:&lt;/p&gt;
    &lt;quote&gt;
      &lt;p&gt;Following last week’s announcement about a security incident involving a third-party customer service provider, we want to address inaccurate claims by those responsible that are circulating online. First, as stated in our blog post, this was not a breach of Discord, but rather a third-party service we use to support our customer service efforts. Second, the numbers being shared are incorrect and part of an attempt to extort a payment from Discord. Of the accounts impacted globally, we have identified approximately 70,000 users that may have had government-ID photos exposed, which our vendor used to review age-related appeals. Third, we will not reward those responsible for their illegal actions.&lt;/p&gt;
      &lt;p&gt;All affected users globally have been contacted and we continue to work closely with law enforcement, data protection authorities, and external security experts. We’ve secured the affected systems and ended work with the compromised vendor. We take our responsibility to protect your personal data seriously and understand the concern this may cause.&lt;/p&gt;
    &lt;/quote&gt;
    &lt;p&gt;In its announcement last week, Discord said that information like names, usernames, emails, the last four digits of credit cards, and IP addresses also may have been impacted by the breach.&lt;/p&gt;
    &lt;head rend="h2"&gt;Most Popular&lt;/head&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;These 63 October Prime Day deals under $50 are still available&lt;/item&gt;
      &lt;item&gt;OpenAI wasn’t expecting Sora’s copyright drama&lt;/item&gt;
      &lt;item&gt;Microsoft delays Xbox Game Pass Ultimate price hikes for some subscribers&lt;/item&gt;
      &lt;item&gt;Memo to Bari Weiss Re: CBS News: You’re doomed&lt;/item&gt;
      &lt;item&gt;Xbox Series X / S storage expansion cards haven’t been this cheap since July&lt;/item&gt;
    &lt;/list&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45521738</guid><pubDate>Wed, 08 Oct 2025 23:20:13 +0000</pubDate></item><item><title>Show HN: HyprMCP – Analytics, logs and auth for MCP servers</title><link>https://github.com/hyprmcp/jetski</link><description>&lt;doc fingerprint="cb1246cb7509be96"&gt;
  &lt;main&gt;
    &lt;p&gt; Get started with HyprMCP Cloud » &lt;lb/&gt; Explore our website » &lt;lb/&gt; Read the docs » &lt;lb/&gt; GitHub . LinkedIn . Twitter / X &lt;/p&gt;
    &lt;p&gt;Jetski is an Open Source MCP Analytics and Authentication Platform - part of HyprMCP. It solves the three biggest problems teams face when developing MCP servers with zero code changes:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;Installation &amp;amp; Setup: Most users never make it past setup. They can't find client instructions or try to open your MCP URL in a browser and churn immediately.&lt;/item&gt;
      &lt;item&gt;Authentication: Identifying users and giving them the right tools and responses is still painful to implement.&lt;/item&gt;
      &lt;item&gt;Logs, Analytics &amp;amp; Visibility: No insight into how your MCP is used, which prompts trigger which tools, or why errors happen.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Our platform manages and deploys instances of our &lt;code&gt;mcp-gateway&lt;/code&gt;  that sits in front of your MCP server and handles the complexity.
It also collects and aggregates all analytics and metrics data captured by the gateway.&lt;/p&gt;
    &lt;p&gt;Important&lt;/p&gt;
    &lt;p&gt;Note that Jetski in under active development and is still in its infancy. The APIs and command-line interface may change in a backwards incompatible manner.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;What is Jetski?&lt;/item&gt;
      &lt;item&gt;Features&lt;/item&gt;
      &lt;item&gt;Quick Start&lt;/item&gt;
      &lt;item&gt;Demo Video&lt;/item&gt;
      &lt;item&gt;HyprMCP Components&lt;/item&gt;
      &lt;item&gt;Architecture Diagram&lt;/item&gt;
      &lt;item&gt;Need Help?&lt;/item&gt;
      &lt;item&gt;Used Projects&lt;/item&gt;
      &lt;item&gt;How to Contribute&lt;/item&gt;
      &lt;item&gt;Contributors&lt;/item&gt;
      &lt;item&gt;Activity&lt;/item&gt;
      &lt;item&gt;License&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Tip&lt;/p&gt;
    &lt;p&gt;Get started with our fully managed HyprMCP Cloud at https://app.hyprmcp.com.&lt;/p&gt;
    &lt;p&gt;HyprMCP uses mise to configure your development environment and execute development tasks.&lt;/p&gt;
    &lt;p&gt;Clone the repository:&lt;/p&gt;
    &lt;code&gt;git clone https://github.com/hyprmcp/jetski.git
cd jetski&lt;/code&gt;
    &lt;p&gt;Install dependencies:&lt;/p&gt;
    &lt;code&gt;mise trust
mise install
pnpm i
cp .dex.secret.env.example .dex.secret.env
docker compose up -d&lt;/code&gt;
    &lt;p&gt;Set host file entry:&lt;/p&gt;
    &lt;code&gt;echo -e "\n127.0.0.1    host.minikube.internal\n" | sudo tee -a /etc/hosts&lt;/code&gt;
    &lt;p&gt;Start the platform:&lt;/p&gt;
    &lt;p&gt;In Terminal 1, start the backend:&lt;/p&gt;
    &lt;code&gt;mise run serve&lt;/code&gt;
    &lt;p&gt;In Terminal 2, start the frontend:&lt;/p&gt;
    &lt;code&gt;pnpm run start&lt;/code&gt;
    &lt;p&gt;Generate demo data:&lt;/p&gt;
    &lt;code&gt;mise run generate&lt;/code&gt;
    &lt;p&gt;Access the frontend at &lt;code&gt;http://localhost:4200&lt;/code&gt; and log in with: &lt;code&gt;admin@example.com&lt;/code&gt; / &lt;code&gt;password&lt;/code&gt;&lt;/p&gt;
    &lt;p&gt;For Kubernetes orchestration, we recommend Minikube for local testing.&lt;/p&gt;
    &lt;p&gt;Setup Kubernetes:&lt;/p&gt;
    &lt;code&gt;# Start Minikube
mise run minikube-start

# Deploy metacontroller (⚠️ operates against current kubectl context)
mise run serve -- --install-controller&lt;/code&gt;
    &lt;p&gt;The HyprMCP platform is built on several open-source components that work together to provide a comprehensive MCP management solution:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;
        &lt;p&gt;mcp-gateway - MCP OAuth Proxy with dynamic client registration (DCR), MCP prompt analytics. This proxy sits in front of your MCP server.&lt;/p&gt;
      &lt;/item&gt;
      &lt;item&gt;
        &lt;p&gt;mcp-install-instructions-generator - Generate MCP Server Installation Instructions for Cursor, Visual Studio Code, Claude Code, and other MCP clients. Automatically creates user-friendly setup guides.&lt;/p&gt;
      &lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;You can find all our components and contribute to them on github.com/hyprmcp.&lt;/p&gt;
    &lt;code&gt;graph LR
  Client([🤖 &amp;lt;b&amp;gt;MCP Client&amp;lt;/b&amp;gt;&amp;lt;br/&amp;gt;Claude, ChatGPT...&amp;lt;br/&amp;gt;.&amp;lt;br/&amp;gt;])

  subgraph K8s["☸️ HyprMCP"]
    direction TB
    Platform[🚤 &amp;lt;b&amp;gt;Jetski Platform&amp;lt;/b&amp;gt;&amp;lt;br/&amp;gt;Kubernetes Client, Dashboards, etc.&amp;lt;br/&amp;gt;.&amp;lt;br/&amp;gt;]
    Gateway[🔄 &amp;lt;b&amp;gt;MCP Gateway&amp;lt;/b&amp;gt;&amp;lt;br/&amp;gt;Auth, proxy, analytics &amp;amp; logging&amp;lt;br/&amp;gt;.&amp;lt;br/&amp;gt;]
    Platform-.deploys &amp;amp; manages.-&amp;gt;Gateway
    Gateway-.sends metrics &amp;amp; logs.-&amp;gt;Platform
  end

  MCP[🚀 &amp;lt;b&amp;gt;Your MCP Server&amp;lt;/b&amp;gt;&amp;lt;br/&amp;gt;Runs unchanged, anywhere]

  Client &amp;lt;--&amp;gt; K8s
  K8s &amp;lt;--&amp;gt; MCP

  classDef client fill:#fff9c4,stroke:#f57f17,stroke-width:2px
  classDef cluster fill:#e3f2fd,stroke:#1565c0,stroke-width:2px
  classDef platform fill:#f3e5f5,stroke:#4a148c,stroke-width:2px
  classDef server fill:#e8f5e8,stroke:#2e7d32,stroke-width:2px

  class Client client
  class K8s cluster
  class Platform,Gateway platform
  class MCP server
&lt;/code&gt;
    &lt;p&gt;How it works:&lt;/p&gt;
    &lt;list rend="ol"&gt;
      &lt;item&gt;MCP Client (Claude Desktop, Cline, etc.) sends requests to HyprMCP instead of directly to your server&lt;/item&gt;
      &lt;item&gt;HyprMCP Proxy authenticates the user and validates permissions&lt;/item&gt;
      &lt;item&gt;Request forwarding to your unchanged MCP server&lt;/item&gt;
      &lt;item&gt;Response handling with automatic logging, analytics capture, and monitoring&lt;/item&gt;
      &lt;item&gt;Real-time dashboard provides visibility into all operations&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;If you encounter any problems, we will be happy to support you wherever we can on our Discord. For bugs, issues or feature requests feel free to open an issue. We are happy to assist you with anything related to the project.&lt;/p&gt;
    &lt;p&gt;HyprMCP is built on top of many amazing open-source projects:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Go - Primary backend language for the platform&lt;/item&gt;
      &lt;item&gt;Angular - Frontend framework for the dashboard UI&lt;/item&gt;
      &lt;item&gt;Kubernetes - Container orchestration platform&lt;/item&gt;
      &lt;item&gt;PostgreSQL - Primary database for storing analytics and metadata&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;MCP Go SDK - Official Go SDK for Model Context Protocol&lt;/item&gt;
      &lt;item&gt;Dex - OpenID Connect (OIDC) identity provider for authentication&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Metacontroller - Lightweight Kubernetes controller framework&lt;/item&gt;
    &lt;/list&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Spartan - Collection of UI components for Angular&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Your feedback is invaluable to us as we continue to improve HyprMCP and Jetski. If you'd like to contribute, consider trying out the platform, reporting any issues, and sharing your suggestions. See the contributing guide for detailed instructions on how you can contribute.&lt;/p&gt;
    &lt;p&gt;Whether you want to:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Report bugs or request features&lt;/item&gt;
      &lt;item&gt;Contribute code improvements&lt;/item&gt;
      &lt;item&gt;Improve documentation&lt;/item&gt;
      &lt;item&gt;Share your MCP server use cases&lt;/item&gt;
      &lt;item&gt;Help other users in the community&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;We welcome all contributions!&lt;/p&gt;
    &lt;p&gt;Thanks to everyone that is supporting this project. We are thankful for every contribution, no matter its size!&lt;/p&gt;
    &lt;p&gt;Jetski is licensed under the MIT license. For more information check the LICENSE file for details.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45521788</guid><pubDate>Wed, 08 Oct 2025 23:27:23 +0000</pubDate></item><item><title>Radio Garten</title><link>https://radio.garden/</link><description>&lt;doc fingerprint="774fc58b34d6def9"&gt;
  &lt;main&gt;
    &lt;p&gt;Please enable JavaScript in order to run Radio Garden&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45521833</guid><pubDate>Wed, 08 Oct 2025 23:34:42 +0000</pubDate></item><item><title>A competitor crippled a $23.5M bootcamp by becoming a Reddit moderator</title><link>https://larslofgren.com/codesmith-reddit-reputation-attack/</link><description>&lt;doc fingerprint="3a43713708620467"&gt;
  &lt;main&gt;
    &lt;p&gt;Let’s say you decide to start a coding bootcamp. Your background is in pedagogy and you love teaching. Your parents were teachers.&lt;/p&gt;
    &lt;p&gt;You find a co-founder, raise a bit of money, and pour your soul into your company.&lt;/p&gt;
    &lt;p&gt;The first couple of years, students love your program. Positive feedback, extraordinary student outcomes, employees love the mission. You are quite literally changing lives.&lt;/p&gt;
    &lt;p&gt;Your business grows. One day, you realize you’ve grown to 70 employees.&lt;/p&gt;
    &lt;p&gt;And then…&lt;/p&gt;
    &lt;p&gt;A competitor gets control of the main subreddit for your industry by becoming a Reddit Moderator.&lt;/p&gt;
    &lt;p&gt;That watering hole becomes their megaphone. They are not shy about using it. An all-out attack on your brand begins. The barrage of accusations and harassment are relentless. The attacks happen daily. You become a neurotic fixation of the moderator. Every little thing you do represents your failings as a company.&lt;/p&gt;
    &lt;p&gt;You get compared to a sex cult. One of your employees is accused of nepotism. The mod starts joining your company information sessions for prospective students, slinging conspiracy theories at every turn under a pseudonym. You avoid outright bans to avoid appearing biased yourself. Your own employees start wondering if these accusations have merit, some leave.&lt;/p&gt;
    &lt;p&gt;Even worse, confidential information from your company starts leaking out. There’s a mole. Or at least your team suspects it. No one knows who to trust. Your carefully built company culture? Eviscerated from the inside out.&lt;/p&gt;
    &lt;p&gt;Any time you attempt to defend yourself in the main subreddit, posts get deleted. Or you’re accused of running a Reddit bot army.&lt;/p&gt;
    &lt;p&gt;This goes on for years.&lt;/p&gt;
    &lt;p&gt;Every day, another attack. Every fucking day.&lt;/p&gt;
    &lt;p&gt;Student applications drop. First a little… then a lot.&lt;/p&gt;
    &lt;p&gt;Combined with a market downtown, your revenue collapses by 80%.&lt;/p&gt;
    &lt;p&gt;You go through 2 layoffs just to keep the lights on. A bunch of other folks move on. You’re down to 15 employees now.&lt;/p&gt;
    &lt;p&gt;The attacks don’t stop. If anything, they escalate.&lt;/p&gt;
    &lt;p&gt;And you begin to wonder, as the CEO and founder of your company… “Maybe I’m the problem? Maybe I am doing something wrong? Or somehow encouraging these attacks on my company?”&lt;/p&gt;
    &lt;p&gt;You make a decision to leave.&lt;/p&gt;
    &lt;p&gt;You step down, walk away from everything you built, and start anew.&lt;/p&gt;
    &lt;p&gt;But even then, the attacks don’t stop. Nothing can stop this nightmare.&lt;/p&gt;
    &lt;p&gt;This is the story of Will Sentance and his company, Codesmith.&lt;/p&gt;
    &lt;p&gt;It can happen to your business too.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Codesmith Reputation Attack via Google&lt;/head&gt;
    &lt;p&gt;For many businesses, the first page of Google for their brand name is the single most important asset for managing their reputation.&lt;/p&gt;
    &lt;p&gt;Let’s say I’m considering a bootcamp, I hear about “Codesmith,” and pop it into Google.&lt;/p&gt;
    &lt;p&gt;Fuck me that’s bad. This is the number 2 result right after the company website.&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;“Codesmith is an enormous waste of money”&lt;/item&gt;
      &lt;item&gt;“Do Not Go To Codesmith”&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;I don’t even have to click, Google is serving that stuff up right under the company’s website. God damn.&lt;/p&gt;
    &lt;p&gt;That top Reddit thread has been ranking highly for Codesmith brand terms since Sept 2024. That’s a year’s worth of brand carnage.&lt;/p&gt;
    &lt;p&gt;Pay close attention to the subreddit all those threads are from: r/codingbootcamp. That’s the key to all this.&lt;/p&gt;
    &lt;head rend="h2"&gt;Are LLMs Also a Reputation Attack Vector on Codesmith?&lt;/head&gt;
    &lt;p&gt;Yup.&lt;/p&gt;
    &lt;p&gt;My prompt in ChatGPT was “is codesmith a good bootcamp?”.&lt;/p&gt;
    &lt;p&gt;The intro has a bunch of standard stuff, and then there was this:&lt;/p&gt;
    &lt;p&gt;Same Reddit threads are featured, same brand-destroying quotes.&lt;/p&gt;
    &lt;p&gt;By the way, CIRR is a nonprofit in the bootcamp industry that collects graduation data across the industry. It’s a neutral third-party with the goal of providing transparency on student outcomes across coding bootcamps. If your graduation rates are solid, wouldn’t it make sense for a competitor to call that data into question? ChatGPT is regurgitating those same doubts here.&lt;/p&gt;
    &lt;p&gt;At this point, I’ve done a quick brand search and asked ChatGPT if Codesmith is any good. I already have a TON of doubts as a prospect.&lt;/p&gt;
    &lt;p&gt;I don’t believe this is an accident. Or a result of Codesmith’s actual quality as a bootcamp.&lt;/p&gt;
    &lt;p&gt;I believe this brand attack is the result of one person’s actions.&lt;/p&gt;
    &lt;p&gt;When I’ve researched Codesmith’s brand, every Reddit thread I’ve seen in Google and various LLMs have all been from a single subreddit: r/codingbootcamp. That subreddit is controlled by the Reddit Moderator Michael Novati.&lt;/p&gt;
    &lt;head rend="h2"&gt;Who is Michael Novati?&lt;/head&gt;
    &lt;p&gt;For the best recap of Michael, listen to this interview from Pragmatic Engineer Gergely Orosz.&lt;/p&gt;
    &lt;p&gt;The highlights:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Michael joined Facebook early in 2009.&lt;/item&gt;
      &lt;item&gt;As he tells it, went through a bunch of promotions quickly and made it to Principal Software Engineer (E7).&lt;/item&gt;
      &lt;item&gt;Left Facebook in 2017.&lt;/item&gt;
      &lt;item&gt;In 2019, co-founded his dev bootcamp, Formation, with his wife, Sophie Novati. His wife is the CEO, Michael took the CTO title.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;In that interview, Michael tells a story about playing Risk (the board game) with Mark Zuckerberg.&lt;/p&gt;
    &lt;p&gt;“The way we became friends, he [Zuckerberg] used to play Risk, the board game. I think it was once a week that people would get together. Like 4 or 5 people. He would show up often and I really liked Risk. I would always play Risk as a kid for whatever reason, I don’t even know why.&lt;/p&gt;
    &lt;p&gt;And one day, we’re down to the final three people. And it was me, him, and I was losing. Mark was in second place, the leader was taking over.&lt;/p&gt;
    &lt;p&gt;I did a really.. uhhh.. let’s say delicate, strategic maneuver. Where I made an alliance with him to share resources and go after the first place person. So he went all in on the first place person.&lt;/p&gt;
    &lt;p&gt;My turn’s next. I did not go all in against the first place person, I took over Mark’s remaining resources. He just dwindled going after the first place person. He accepted my friendship request [on Facebook] very shortly that evening.&lt;/p&gt;
    &lt;p&gt;It’s weird, I basically backstabbed him in the game, really bad. Blatantly to his face. But it’s the game, that’s what Risk is. It’s a strategy game. I think he appreciated the strategy I had. It made him feel more like he could trust me. Even though I backstabbed him, he knows where my strategic thinking is coming from.“&lt;/p&gt;
    &lt;p&gt;Now, is this just a funny anecdote about an early Facebook backstabbing Mark Zuckerberg and then becoming friends? Maybe.&lt;/p&gt;
    &lt;p&gt;For me, it tells me a lot about how Michael Novati plays competitive games. In my experience, people tend to run businesses the same way they compete at anything. Maybe Michael is the exception.&lt;/p&gt;
    &lt;p&gt;I do have to admit, it takes some real cojones to fuck over your boss that hard in a board game. Especially when that boss is Zuckerberg.&lt;/p&gt;
    &lt;p&gt;One last note: Formation raised a $4M seed round in 2021, led by Andreessen Horowitz.&lt;/p&gt;
    &lt;head rend="h2"&gt;Michael Novati’s Control Over the Coding Bootcamp Industry&lt;/head&gt;
    &lt;p&gt;Michael Novati’s power over the coding bootcamp industry comes from one place: being a moderator on the subreddit r/codingbootcamp.&lt;/p&gt;
    &lt;p&gt;He is, by far, the most active moderator for the subreddit. You’ll bump into him immediately just by visiting the subreddit:&lt;/p&gt;
    &lt;p&gt;What about the other mods?&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;u/samabuna hasn’t posted in about 8 years.&lt;/item&gt;
      &lt;item&gt;u/dowcet/ is still active on Reddit but rarely posts in r/codingbootcamp. When I checked, I only found one comment in the preceeding 1-2 months.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;So the subreddit is Michael Novati’s show. Full stop.&lt;/p&gt;
    &lt;p&gt;We have to remember that Reddit isn’t just Reddit anymore. The powers that be have decided that Reddit is infallible, a reliable set of training data for LLMs, and should be featured fucking everywhere.&lt;/p&gt;
    &lt;p&gt;Before we get to what Michael has actually done, let’s lay out the potential power for anyone that gets control of a key subreddit in their industry:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;If the subreddit is greenlit by Google, threads in your subreddit can easily pop to the top of Google searches that are extremely valuable to your business. Brand terms, review terms, product categories, major how-to topics, all of it.&lt;/item&gt;
      &lt;item&gt;LLMs prioritize Reddit heavily. If you want to spin conspiracy theories, those conspiracies will start to become part of the zeitgeist as every LLM regurgitates them.&lt;/item&gt;
      &lt;item&gt;Skew the narrative for long enough and it’ll be impossible for ANY prospect to not stumble across your skewed narrative when they’re researching products or services.&lt;/item&gt;
      &lt;item&gt;You can delete posts and comments at will. Want to tip the narrative in your favor? Just delete some of the positive posts of your competitors. To cover your tracks, make up claims about a bot army that’s run by your competitor. You’re fighting the good fight and keeping the barbarians at bay! You don’t even need to actively post negative stuff (but you can if you want to dial up the torture). Just removing positive stuff skews the narrative nicely.&lt;/item&gt;
      &lt;item&gt;You can ban users at will. Got some troublesome competitors fighting back? Just delete the little shits.&lt;/item&gt;
      &lt;item&gt;You can pin posts in the subreddit and comments within posts. Great tactic for pushing a narrative when you really need to.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;What about recourse from your competitors? Can they do anything to stop you?&lt;/p&gt;
    &lt;p&gt;You can only lose your moderator slot in a few instances:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;The Reddit Admis get involved, actual Reddit employees. Stuff has to get pretty egregious for that.&lt;/item&gt;
      &lt;item&gt;Moderators further up the mod list can kick you out. But if you get on good terms with them, or they don’t care, you have free reign.&lt;/item&gt;
      &lt;item&gt;If there are other mods below you AND you go inactive, you can get kicked by them too. So don’t let any new mods in. And always stay active. Simple.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;No one else across the industry can do a damn thing. You get to act with impunity.&lt;/p&gt;
    &lt;p&gt;To be clear, any moderator of an industry subreddit has this power. That’s not a subjective opinion, it’s a fact. That’s how our online platforms currently work.&lt;/p&gt;
    &lt;p&gt;Michael Novati has this power over the bootcamp industry. Did he wield it benevolently? If he did, I wouldn’t be writing this fucking post.&lt;/p&gt;
    &lt;head rend="h2"&gt;How Michael Distorts Narratives on Reddit&lt;/head&gt;
    &lt;p&gt;At first, I was going to go through a bunch of Michael Novati’s claims and debunk them.&lt;/p&gt;
    &lt;p&gt;Then I realized I was missing the entire point.&lt;/p&gt;
    &lt;p&gt;This isn’t a normal debate where there are two sides of the truth and we need to sort through it to get to the real answer.&lt;/p&gt;
    &lt;p&gt;It’s about one side torching the truth with a firehose of chaos and distortion.&lt;/p&gt;
    &lt;p&gt;Prospects in the bootcamp space are evaluating whether or not to spend tens of thousands of dollars on a bootcamp. It’s the price of a goddamn car. It doesn’t take much to get someone to pause and redirect their purchase journey.&lt;/p&gt;
    &lt;p&gt;So let’s go through a few of the worst examples.&lt;/p&gt;
    &lt;head rend="h3"&gt;Compare Your Competitor to a Sex Cult (Loosely for Deniability)&lt;/head&gt;
    &lt;p&gt;Here’s a fucked up one.&lt;/p&gt;
    &lt;p&gt;A Reddit user, with a first-time post, posts a major takedown of Codesmith, claiming to be a former employee. Tons of allegations about mismanagement, poor curriculum, and backroom dealing with CIRR. I personally think these allegations are bullshit but that’s not the most fucked up part in this thread.&lt;/p&gt;
    &lt;p&gt;u/rosiebeir joins the conversation and gives a measured take on their experience as a student in Codesmith:&lt;/p&gt;
    &lt;p&gt;Most of the comment is about different aspects of the Codesmith program that could be improved. It all feels genuine to me. Further down, they say this:&lt;/p&gt;
    &lt;p&gt;Wow, that’s a helluva endorsement.&lt;/p&gt;
    &lt;p&gt;This is where Michael jumps in:&lt;/p&gt;
    &lt;p&gt;If you’re not familiar with NXIVM (Michael got the spelling wrong), go watch The Vow on HBO. Short story: NXIVM was a sex cult disguised as a self-improvement group and the founder went to prison.&lt;/p&gt;
    &lt;p&gt;Did Michael just compare Codemith to a goddamn sex cult? Yes he did folks.&lt;/p&gt;
    &lt;p&gt;Let’s put aside the subject matter for a second. Michael’s use of rhetoric is a master class on how to destroy someone’s reputation without technically saying the horrible thing you’re actually saying.&lt;/p&gt;
    &lt;p&gt;Michael takes an incredible testimonial from a student (“Codesmith changed my life”), and associates that comment with the sort of things he hears from sex cults. He doesn’t technically call Codesmith a sex cult, he merely makes the association. He also wraps it with other positive comments to look more measured: “something I hear very often” and “I love that Codesmith changed your life.” But these aren’t good things, they’re red flags! Sex cults do the same thing! Someone could get taken advantage of!&lt;/p&gt;
    &lt;p&gt;Oh so innocent aren’t we Michael?&lt;/p&gt;
    &lt;p&gt;Now any time a bootcamp prospect wanders into this thread:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;They see the genuine, positive review from a former student.&lt;/item&gt;
      &lt;item&gt;A supposed figure of authority (a Reddit moderator), plants a seed questioning that testimonial.&lt;/item&gt;
      &lt;item&gt;The same mod connects Codesmith to a sex cult in a way that also offers complete deniability.&lt;/item&gt;
      &lt;item&gt;To top it all off, most folks won’t realize that the Reddit mod is a cofounder of a competing company.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;Bravo Michael, brav-fucking-o.&lt;/p&gt;
    &lt;head rend="h3"&gt;From Reddit Troll to LinkedIn Stalker: The Unhinged Escalation&lt;/head&gt;
    &lt;p&gt;This one might piss me off the most.&lt;/p&gt;
    &lt;p&gt;Michael doesn’t just go after employees, he goes after their kids.&lt;/p&gt;
    &lt;p&gt;This is a Reddit post about a defunct Codesmith program:&lt;/p&gt;
    &lt;p&gt;Somehow, as these threads often do, the conversation turns into an all-out attack on Codesmith. This time, Michael goes after Eric Kirsten, a Senior Advisor at Codesmith. Eric spends a good chunk of his time mentoring Codesmith students and helping prepare them for the job hunt.&lt;/p&gt;
    &lt;p&gt;Here’s Michael’s post:&lt;/p&gt;
    &lt;p&gt;I do not know what the original comment in this thread was (very convenient). But I do have the original comment from Michael before he edited it:&lt;/p&gt;
    &lt;p&gt;I talked with Eric myself, here’s the real story:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Eric’s wife did a one-time contract project with Codesmith for 9 months.&lt;/item&gt;
      &lt;item&gt;His son joined as a Codesmith student and had a great outcome. They paid the full program cost and his son went through the normal application process just like everyone else.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;But it doesn’t stop there.&lt;/p&gt;
    &lt;p&gt;Michael also decided to email multiple executives at Codesmith about Eric’s son:&lt;/p&gt;
    &lt;p&gt;I’ve redacted the son’s name and details because WHY THE FUCK WOULD WE BRING SOMEONE’S KID INTO THIS?&lt;/p&gt;
    &lt;p&gt;I don’t think I could possibly swear enough in order to convey how utterly insane all this is.&lt;/p&gt;
    &lt;p&gt;Just imagine this happening at your own company:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;A cofounder of your competitor, starts attacking one of your employees on Reddit.&lt;/item&gt;
      &lt;item&gt;Then that cofounder starts LOOKING UP THEIR KIDS ON LINKEDIN&lt;/item&gt;
      &lt;item&gt;They post weird mentions on Reddit about that kid, accusing your company of nepotism.&lt;/item&gt;
      &lt;item&gt;THEN EMAILS you and other executives, accusing the kid of falsifying their LinkedIn, threatening to keep calling it out in public.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;WHAT.&lt;/p&gt;
    &lt;p&gt;WHAT. THE. FUCK.&lt;/p&gt;
    &lt;p&gt;What would you do in this situation?&lt;/p&gt;
    &lt;p&gt;I’m not sure what I would do. But there is no world where this is normal or okay.&lt;/p&gt;
    &lt;head rend="h3"&gt;The Great OSP Conspiracy for Manufactured Outrage&lt;/head&gt;
    &lt;p&gt;Another favorite tactic of Michael is to take something obscure, and allude to some grand conspiracy behind it.&lt;/p&gt;
    &lt;p&gt;Like OSPs.&lt;/p&gt;
    &lt;p&gt;OSP stands for open-source product. It’s a built-in part of the Codesmith program, the capstone project. Here’s how Codesmith explains it:&lt;/p&gt;
    &lt;p&gt;This seems incredibly boring, how the hell could someone possibly turn this into a controversy?&lt;/p&gt;
    &lt;p&gt;If you’re asking that question, you’ve severely underestimated Michael.&lt;/p&gt;
    &lt;p&gt;A since-deleted Reddit account posted this thread (convenient that it’s a deleted user huh?):&lt;/p&gt;
    &lt;p&gt;They claim Codesmith students are using OSPs to inflate their resumes to get jobs faster. And that this is endemic at Codesmith.&lt;/p&gt;
    &lt;p&gt;The comments are a dumpster fire. Michael has posted 11 of the comments, almost a third of the entire conversation.&lt;/p&gt;
    &lt;p&gt;A former Codesmith student jumps in:&lt;/p&gt;
    &lt;p&gt;There’s some back an forth between u/peppimenti and other Reddit users, then Michael responds:&lt;/p&gt;
    &lt;p&gt;Fuck me, that’s a lot to take in.&lt;/p&gt;
    &lt;p&gt;Quick tangent: this is another one of Michael’s tactics. Make accusations faster than anyone can possibly fact check them or even process them. I still haven’t figured out what that Phil Troutman reference is.&lt;/p&gt;
    &lt;p&gt;To summarize, Michael claims he has evidence that Codesmith is aware of the lying on resumes, alludes to a conspiracy with OSLabs, and he believes Codesmith helped verify some of this lying.&lt;/p&gt;
    &lt;p&gt;Then he associates all of this with “conspiring to commit fraud” and that it’s a “jail-able crime.”&lt;/p&gt;
    &lt;p&gt;We’ve gone from “Codesmith students complete an OSP during their program” to a shadowy conspiracy and fraud via student resumes. God damn did that escalate.&lt;/p&gt;
    &lt;p&gt;So I got a hold of the exact SOP that is given by Codesmith to students on how to write their resume. Here’s the section on OSPs:&lt;/p&gt;
    &lt;p&gt;Codesmith is telling students explicitly not to misrepresent their experience with OSPs as a role at a company. They advocate for transparency, as they should. What students do with that is up to them. And even if some students stretch the truth, no hiring manager is getting fooled by that. End of story.&lt;/p&gt;
    &lt;p&gt;What about the OSLabs stuff?&lt;/p&gt;
    &lt;p&gt;When I chatted with Alina (the current CEO of Codesmith), here’s what she had to say on how Codesmith students interact with OSLabs:&lt;/p&gt;
    &lt;p&gt;“They [students] get a chance to work on it [projects]. Once those are ready, they submit to OSLabs who keeps the repository and manages the repository. There’s no kind of financial exchange or anything like that. They just hold the repository of the open source dev tools.“&lt;/p&gt;
    &lt;p&gt;OSLabs is just a nonprofit that manages student repos. That’s it.&lt;/p&gt;
    &lt;p&gt;Maybe you think there are problems with Codesmith’s guidance. Real quick, why don’t we check some of Michael’s own students from his bootcamp company, Formation?&lt;/p&gt;
    &lt;p&gt;There’s tons of students on his site. Some of them get featured heavily, like here:&lt;/p&gt;
    &lt;p&gt;Here’s Carlitos’ LinkedIn:&lt;/p&gt;
    &lt;p&gt;Carlitos is listing his time at Michael’s bootcamp/training company in his experience section. The exact same thing that Michael RAILS on Codesmith for.&lt;/p&gt;
    &lt;p&gt;To be clear: I don’t think there’s anything wrong with this. Carlitos, all the Codesmith students, or ANY student from ANY bootcamp have done nothing wrong by putting stuff like this on their resumes. If Formation students list their time like this, I don’t see anything wrong with that either.&lt;/p&gt;
    &lt;p&gt;In the thousands of resumes I’ve reviewed, I’ve never had any trouble differentiating between full-time roles, part-time, freelance, training, or any other random item on a resume. Any hiring manager will sniff this stuff from a mile away. No one is fooling anyone.&lt;/p&gt;
    &lt;p&gt;But Michael has now turned this into a story of fraud facilitated by Codesmith. And here I am writing hundreds of words about this nonsense. There’s nothing here beyond what Michael has conjured into the ether of Reddit.&lt;/p&gt;
    &lt;p&gt;You might disagree with some of the guidance that Codesmith gives its graduates but no one is doing anything wrong. It sure as fuck aint fraud.&lt;/p&gt;
    &lt;p&gt;And that’s what Michael is so damn good at, turning innocuous little things into grand conspiracies that take hours of research to untangle.&lt;/p&gt;
    &lt;head rend="h2"&gt;Michael Novati’s Nonstop Attack Campaign Against Codesmith&lt;/head&gt;
    &lt;p&gt;Think I’m cherry picking examples of Michael’s posts?&lt;/p&gt;
    &lt;p&gt;Let’s zoom out.&lt;/p&gt;
    &lt;p&gt;My team and I looked at every Reddit post and comment made by Michael Novati over the past 3 months.&lt;/p&gt;
    &lt;p&gt;We then catalogued the posts that mentioned Codesmith or were referencing Codesmith based on context. Next we categorized those posts based on if the sentiment was positive, neutral, or negative towards Codesmith.&lt;/p&gt;
    &lt;p&gt;Here’s all the days that had negative comments along with their frequency over the past few months:&lt;/p&gt;
    &lt;p&gt;Fucking relentless.&lt;/p&gt;
    &lt;p&gt;It’s easier to highlight days where Michael DOESN’T talk about Codesmith. Dude, get a fucking hobby.&lt;/p&gt;
    &lt;p&gt;What if the past few months don’t adequately reflect Michael’s posting history? What if recent events have just been a negative phase of the bootcamp space? Can we really make any claims using just the last few months?&lt;/p&gt;
    &lt;p&gt;Fine, let’s go further.&lt;/p&gt;
    &lt;p&gt;I went to my team and said “fuck it, let’s go back as far as possible.” So we went through all of Michael’s posts since June 2024. That’s when Reddit stops making it easy to pull up comments. Yes, we looked at every post and comment from over a year. No fast and dirty AI analysis here, we did it by hand.&lt;/p&gt;
    &lt;p&gt;Here’s the timeline of negative posts and comments since June 2024:&lt;/p&gt;
    &lt;p&gt;What. The. Fuck.&lt;/p&gt;
    &lt;p&gt;Who has the time for this?&lt;/p&gt;
    &lt;p&gt;In order to adequately show how often Michael posts negative comments about Codesmith, we had to use HABIT TRACKER VISUALIZATIONS.&lt;/p&gt;
    &lt;p&gt;It’s relentless, it’s nonstop, and in my opinion, completely unhinged. At least Michael slows down a tad during the holidays. Otherwise, he’s all gas, no breaks.&lt;/p&gt;
    &lt;p&gt;Well, alright, MAYBE Michael was posting in such absurd volume that the positive mentions outweigh the negative? Maybe I’m selectively pulling data?&lt;/p&gt;
    &lt;p&gt;NOPE.&lt;/p&gt;
    &lt;p&gt;The comments about Codesmith are severely overweighted on the negative side. In aggregate, here’s how the sentiment breaks down:&lt;/p&gt;
    &lt;p&gt;Is it just me or is there a weeeee bit of bias in this posting?&lt;/p&gt;
    &lt;p&gt;Yes, yes, there fucking is.&lt;/p&gt;
    &lt;p&gt;Alright, fine, MAYBE all this negative attention is deserved. Maybe Codesmith is the villain that Michael claims. Let’s find out.&lt;/p&gt;
    &lt;head rend="h2"&gt;Other Bootcamp Competitors Hold Codesmith in High Regard&lt;/head&gt;
    &lt;p&gt;I interviewed 10 different folks. Including students, multiple Codesmith employees from the leadership team, and founders of competing coding bootcamps. I dug through countless docs, many of them internal, and probably annoyed some of these folks with my endless requests for screenshots to verify stories.&lt;/p&gt;
    &lt;p&gt;Overall, I found everyone at Codesmith to be:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Extremely responsive and on top of their shit. They made promises and kept them.&lt;/item&gt;
      &lt;item&gt;Transparent to an absurd degree.&lt;/item&gt;
      &lt;item&gt;Humble, honest, and self-aware.&lt;/item&gt;
      &lt;item&gt;A desire to do the right thing even at their detriment. These folks don’t know how to play offense, they assume good intent from everyone.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;In short, these are good folks. Faultless? Of course not, everyone makes mistakes.&lt;/p&gt;
    &lt;p&gt;But I do believe that the world is better with Codesmith in it.&lt;/p&gt;
    &lt;p&gt;Which makes this whole situation all the more tragic.&lt;/p&gt;
    &lt;p&gt;Michael isn’t waging some war against another competitor hellbent on profit-seeking. These are folks that are helping people transition their careers. They are quite literally helping people change their lives. And they’re doing it for the right reasons in my opinion.&lt;/p&gt;
    &lt;p&gt;Don’t take my word for it.&lt;/p&gt;
    &lt;p&gt;I spoke with Anthony Hughes, a co-founder of Tech Elevator, another bootcamp. Here’s what he had to say about Codesmith: “The folks at Codesmith were competitors of Tech Elevator. Especially as everyone went online, we competed directly. I never minded losing to Codesmith. Either choice by students was a good one, both our programs vetted students heavily and would get students great outcomes. If we ever lost to Codesmith, we could accept that because we knew the student would get the outcome they wanted. Not like the lower-quality major programs.”&lt;/p&gt;
    &lt;p&gt;I also heard the same from Kush Patel, a co-founder and former CEO of AppAcademy “Codesmith is one of the best players in the space. They run their programs in a way that we benchmarked against. There are plenty of other schools that are questionable and are not getting any scrutiny from Michael.”&lt;/p&gt;
    &lt;p&gt;We have two co-founders of competing bootcamps saying that Codesmith is one of the good ones. Are there shady bootcamps out there? Absolutely. But Codesmith isn’t one of them.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Tactics Michael Uses to Wage His PR Nightmare Campaign&lt;/head&gt;
    &lt;p&gt;After reading hundreds of Michael’s posts, a few patterns emerge on how he attacks Codesmith.&lt;/p&gt;
    &lt;p&gt;To be honest, it’s a masterclass on how to gut your opponent via PR. If every move is intentional by Michael, I gotta hand it to him becasue he’s exceptionally good at this.&lt;/p&gt;
    &lt;p&gt;Here are the most prominent tactics I saw:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;Relentless volume. It’s not enough to post a few days. If you want to destroy someone’s reputation, you gotta hammer the shit outta that drum. Over a 487 day period, we counted 425 negative posts on Codesmith. That’s an average of 0.87 negative posts per day. A negative post almost every fucking day.&lt;/item&gt;
      &lt;item&gt;Reference multiple conspiracies at the same time. If you only mention one conspiracy, folks have a straightforward path to getting to the truth. But if you mention 3-4 at the same time? Only the true masochistics like myself will even attempt to pull it apart.&lt;/item&gt;
      &lt;item&gt;Rarely, if ever, state your full accusation. For any single conspiracy, always allude to it. Don’t make a full, comprehensive case that allows someone to see the full picture. Let your audience sit with the uncertainty. You don’t need to win the argument, you only need to sow doubt and fear.&lt;/item&gt;
      &lt;item&gt;Cherry-pick data. As the saying goes: “there are lies, damned lies, and statistics.” For any industry data you can get your hands on, find the slice that skews the narrative in your favor. Don’t worry about anyone fact-checking, they never do.&lt;/item&gt;
      &lt;item&gt;Attack every misstep, no matter how obscure. Sooner or later, your victim will make mistakes. When they do, attack. No matter how small or obscure, blow it up into a major drama. Hype, distort, and magnify.&lt;/item&gt;
      &lt;item&gt;Take down third-party arbitrators. If your industry has some sort of credential, certification, or regulator, attack that body just as much as your competitor. If your competitor has optimized for this transparency, you’ll turn their strength into a weakness. Even better, accuse both parties of conspiring together.&lt;/item&gt;
      &lt;item&gt;Blame the victim. Whenever someone mentions that you’re going too hard, say that your competitor is forcing your hand. “You’d love to move on! You don’t want to spend your time on all this! If ONLY your competitor would do the right thing, then all this would stop!” But we all know it’ll never stop.&lt;/item&gt;
      &lt;item&gt;Delete comments and posts. Delete comments and posts to skew the narrative in your favor. You don’t need to delete everything, just enough to make the conversation messy and difficult to follow. And a few key deletions tilts the scales in your favor.&lt;/item&gt;
      &lt;item&gt;Make your claims squishy. Don’t ever say your competitor is a cult or committing fraud. Say that things look like it, or remind you of it. You’ll have deniability while the association still gets planted in the minds of your audience.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;A sign of the times.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Impact on Codesmith&lt;/head&gt;
    &lt;p&gt;Has all this had a material impact on Codesmith?&lt;/p&gt;
    &lt;p&gt;I spoke to both Will Sentence (former CEO and co-founder) and Alina Vasile (the current CEO). When I asked them how much revenue has declined at Codesmith since their peak, they both told me about 80%.&lt;/p&gt;
    &lt;p&gt;Then I asked how much of that was due to everything on Reddit. They said about half of the decline, so a 40% drop came from the negative PR on Reddit. And the other 40% is from a slowdown in the bootcamp market.&lt;/p&gt;
    &lt;p&gt;Will told me that Codesmith reached a high of $23.5M in revenue. A 40% hit from Reddit means a revenue drop of $9.4M.&lt;/p&gt;
    &lt;p&gt;What about the emotional toll?&lt;/p&gt;
    &lt;p&gt;I asked Will Sentance how it all impacted him “It made me doubt how I can start anything after. Michael Novati is still going at it by commenting on my fellowship at Oxford. And Reddit is so visible in Google – at a meeting last week in the UK, the person used ChatGPT to look up Codesmith and it referenced all those Reddit posts. I have genuine caution about launching new stuff.”&lt;/p&gt;
    &lt;p&gt;Even after leaving Codesmith, the Reddit harassment still impacts Will.&lt;/p&gt;
    &lt;p&gt;Students also feel deeply uncomfortable with Michael’s actions.&lt;/p&gt;
    &lt;p&gt;I spoke with a former employee from Codesmith who told me “I was a teacher at Codesmith and the primary reason for moving away from teaching was MIchael Novati. I signed up to help a team of great people help people achieve their goals like I did, I didn’t sign up to be targeted and attacked by a Reddit troll. It took a toll on my mental health and I decided to step back to focus on my day job at Microsoft.”&lt;/p&gt;
    &lt;p&gt;Here’s another instance of a student calling Michael out on LinkedIn:&lt;/p&gt;
    &lt;p&gt;And another student that reached out to Will Sentence:&lt;/p&gt;
    &lt;p&gt;My sources also told me:&lt;/p&gt;
    &lt;list rend="ul"&gt;
      &lt;item&gt;An executive was threatened after moving to another company, accusations were going to be raised over IP conflicts. These accusations appear meritless and ridiculous to me.&lt;/item&gt;
      &lt;item&gt;The morale at Codesmith has sharply declined.&lt;/item&gt;
      &lt;item&gt;Some employees have had mental health difficulties, some left Codesmith.&lt;/item&gt;
      &lt;item&gt;One contractor ended their working relationship with Codesmith because of a fear of being dragged into all this.&lt;/item&gt;
      &lt;item&gt;An employee was doxxed after posting in the /r/codingbootcamp subreddit.&lt;/item&gt;
      &lt;item&gt;Prospective students have pulled applications.&lt;/item&gt;
      &lt;item&gt;Students that had amazing outcomes are afraid to post about their experiences.&lt;/item&gt;
      &lt;item&gt;After graduating, some students began questioning their own experience and considered going back to their old careers.&lt;/item&gt;
    &lt;/list&gt;
    &lt;p&gt;As much as I wanted to detail these stories, I had a lot of requests from sources to remain anonymous. Even when folks went through some heinous shit from all this, they specifically requested not to be included.&lt;/p&gt;
    &lt;p&gt;It is difficult to understate the impact that Michael’s actions have had on Codesmith.&lt;/p&gt;
    &lt;head rend="h2"&gt;Is Michael Novati Breaking the Moderator Code of Conduct on Reddit?&lt;/head&gt;
    &lt;p&gt;I think so. But it’s not my call.&lt;/p&gt;
    &lt;p&gt;The Reddit Moderator Code of Conduct says this:&lt;/p&gt;
    &lt;p&gt;So what counts as compensation?&lt;/p&gt;
    &lt;p&gt;Basically, Reddit Moderators can’t receive compensation for doing basic moderator tasks. Good rule, the point is to prevent companies and third-parties from paying Reddit mods off.&lt;/p&gt;
    &lt;p&gt;Now here’s the tricky part.&lt;/p&gt;
    &lt;p&gt;What if that Reddit Moderator is a co-founder of a competitor? What if they spend YEARS shit talking you and destroying your reputation? What if they’re not technically receiving new stock but the value in their startup equity goes up after they destroy you on Reddit? Doesn’t that count as financial compensation and a violation of Reddit’s own rule to “Moderate with Integrity”?&lt;/p&gt;
    &lt;p&gt;I believe it does.&lt;/p&gt;
    &lt;p&gt;And I believe that’s why Michael is doing what he’s doing. He wins when Codesmith loses.&lt;/p&gt;
    &lt;p&gt;Shit like this is why Reddit has become extremely untrustworthy.&lt;/p&gt;
    &lt;head rend="h2"&gt;What Drives the Crazy Student Outcomes at Codesmith&lt;/head&gt;
    &lt;p&gt;If you dig around, you will find stories from Codesmith students and placement data that seem too good to be true. Is Codesmith actually that good?&lt;/p&gt;
    &lt;p&gt;As far as I can tell, it’s all real.&lt;/p&gt;
    &lt;p&gt;So how has Codesmith managed it? I found two forces that have driven these outcomes.&lt;/p&gt;
    &lt;head rend="h3"&gt;1. Codesmith Has an Intense Application Process&lt;/head&gt;
    &lt;p&gt;Not just anyone can join Codesmith. They screen folks OUT of their program. If you’re a line cook, kinda think a software engineer job sounds fun, have never spent even 5 minutes figuring out what that looks like, and apply, you won’t get in.&lt;/p&gt;
    &lt;p&gt;Codesmith only accepts folks that they think have a good chance of succeeding.&lt;/p&gt;
    &lt;p&gt;They filter the front of their student pipeline which keeps the outcome rates really high on the backend. That’s how they get their placement numbers as high as they are. That’s the “trick” to juicing the student outcomes.&lt;/p&gt;
    &lt;p&gt;Now, if you have some software engineering experience, you’ll likely find the application to be absurdly easy. That’s the point.&lt;/p&gt;
    &lt;p&gt;To me, Codesmith isn’t a true zero to one program. The students that thrive have already put a lot of self-study hours into their career transition. They’re motivated, have learned the basics, and are ready to dial up the intensity. These are folks that are also likely to succeed during the job application process after they graduate.&lt;/p&gt;
    &lt;p&gt;This is also one of the easiest ways to spot the shitty bootcamps. If they take anyone and everyone, that’s an enormous red flag. Stay away.&lt;/p&gt;
    &lt;head rend="h3"&gt;2. The Hiring Market Was Extremely Strong from 2019-2022&lt;/head&gt;
    &lt;p&gt;I spoke to one student that went through Codesmith in 2020, they reported that every single one of the folks in their cohort landed a software engineering job within about 6 months. That’s nuts.&lt;/p&gt;
    &lt;p&gt;Another graduate from the 2019 era told me that 80-90% of the students from their cohort, the cohort before, and the cohort after, landed software engineering jobs within a few months of graduating.&lt;/p&gt;
    &lt;p&gt;How were the placements that high? I believe the Codesmith program had something to do with it. But that was also a period where the tech market was exceptionally hot. Across all levels and functions, it was much easier to switch jobs, get promotions, and change careers in tech. I saw that myself.&lt;/p&gt;
    &lt;p&gt;I’ve also personally seen things tighten a lot in the past few years.&lt;/p&gt;
    &lt;p&gt;How do Codesmiths placement rates look now?&lt;/p&gt;
    &lt;p&gt;Even if we look at more recent cohorts, the placements are still pretty damn strong for the full-time program:&lt;/p&gt;
    &lt;p&gt;That’s one of the reports issued by CIRR on Codesmith. It’s the full report so I’m not cherry picking.&lt;/p&gt;
    &lt;p&gt;Even during 2023-2024, a pretty shitty period to try to start a career as a software engineer, 70% of folks are still landing in-field jobs within a year of graduating Codesmith. With a median salary of $110,000. Even if you only count full-time employment, it’s still 62%. I personally think that’s remarkable.&lt;/p&gt;
    &lt;p&gt;The part-time program is only slightly worse at 60%.&lt;/p&gt;
    &lt;p&gt;Again, this is during a hiring market when entry-level software engineering jobs are brutally hard to get. And the placement rates are still in the 60-70% range.&lt;/p&gt;
    &lt;p&gt;I’m also hearing that students have to work a lot harder now to land that job. And it can take a solid year. That’s that state of tech hiring at the moment.&lt;/p&gt;
    &lt;p&gt;So if you see old placement data of 80-100%, that was when the market was hot. Now it’s come back down to earth which is to be expected.&lt;/p&gt;
    &lt;head rend="h2"&gt;The Future of Codesmith&lt;/head&gt;
    &lt;p&gt;To me the future of Codesmith looks quite bright. Alina (the CEO) is very much in control, the team is excited about the future, and the student outcomes still look impressive to me. I’ve been told that there are no plans at Codesmith to shut down.&lt;/p&gt;
    &lt;p&gt;Especially with all the changes to software development from AI, there’s a lot of training that everyone is going to have to go through in tech. Good time to be in the education space.&lt;/p&gt;
    &lt;p&gt;If Michael could take his boot off Codesmith’s throat for just half a minute, they’d do a lot of good for a lot people.&lt;/p&gt;
    &lt;head rend="h2"&gt;My Recommendations for Anyone Considering Joining a Developer Bootcamp&lt;/head&gt;
    &lt;p&gt;I cannot tell you which bootcamp to attend. Or whether a bootcamp is worth it at all.&lt;/p&gt;
    &lt;p&gt;I’ve hired well over a hundred folks in my career, interviewed countless others. Including engineers and data scientists.&lt;/p&gt;
    &lt;p&gt;At no point did I ever place any value in a bootcamp. I also never considered it a detractor. It’s neutral to me, never really signaling anything. Neither good nor bad.&lt;/p&gt;
    &lt;p&gt;If you think it’ll get you your first job (which is all that really matters), and the price/time makes sense for you, go for it. But there are plenty of other paths. It’s not required by any means. I know plenty of self-taught devs that have worked at prestigious startups and big tech.&lt;/p&gt;
    &lt;p&gt;As for which bootcamp, that’s also up to you.&lt;/p&gt;
    &lt;p&gt;What I can say is this.&lt;/p&gt;
    &lt;p&gt;As I’ve gone through Michael Novati’s Reddit account, I’ve been appalled. I’ve never seen anything like this in my entire career. And I’ve played in some fucked up corners of the internet. That last thing I’d EVER want is to have my name or career associated with anything that Michael Novati has touched. That includes his startup, Formation.&lt;/p&gt;
    &lt;p&gt;You’ll have to make your own choice. But I know what mine would be.&lt;/p&gt;
    &lt;p&gt;At the very least, when doing research on bootcamps, I would consider anything on r/codingbootcamp/ to be completely contaminated. Whatever the real truth is, that subreddit is Michael’s personal fiefdom. He can do and say whatever he wants. And he has one helluva conflict of interest: he’s a co-founder and CTO of a leading bootcamp (even if he tries to claim that he doesn’t run a bootcamp).&lt;/p&gt;
    &lt;p&gt;If I was looking for unbiased reviews, I’d only factor in content from a community that Michael (or any other bootcamp founder) did not control. Make sure you know who your subreddit Mods are.&lt;/p&gt;
    &lt;head rend="h2"&gt;Every Company is Now Vulnerable to These Types of Reputation Attacks&lt;/head&gt;
    &lt;p&gt;For me, the craziest part of this story is that it’s not an edge case.&lt;/p&gt;
    &lt;p&gt;Anyone can use this exact same method to tear down their competitors.&lt;/p&gt;
    &lt;p&gt;You only need to complete one step: become a Reddit mod in one of the main subreddits for your industry. If you do that and the original mods of the subreddit don’t care what you do, you can completely fuck up your whole industry. Sow lies, fear, and misery at will.&lt;/p&gt;
    &lt;p&gt;Which means anyone can do this to you.&lt;/p&gt;
    &lt;p&gt;Reddit has become THE reputation attack vector.&lt;/p&gt;
    &lt;p&gt;And since Reddit is considered the default source of all human knowledge now, Reddit threads pop to the top of Google. Anyone searching for your brand will stumble into this madness. LLMs also prioritize Reddit so that narrative gets corrupted too. Getting control of one channel allows you to corrupt three major channels all at once. Most people don’t check receipts, they don’t dig for truth, they accept what’s put in front of them.&lt;/p&gt;
    &lt;p&gt;Reddit mods now control our search information ecosystem. Unpaid, corruptible Reddit mods.&lt;/p&gt;
    &lt;p&gt;I know there are good Reddit mods out there. But all it takes is one to fuck up your own business.&lt;/p&gt;
  &lt;/main&gt;
  &lt;comments/&gt;
&lt;/doc&gt;</description><guid isPermaLink="false">https://news.ycombinator.com/item?id=45521920</guid><pubDate>Wed, 08 Oct 2025 23:48:28 +0000</pubDate></item></channel></rss>